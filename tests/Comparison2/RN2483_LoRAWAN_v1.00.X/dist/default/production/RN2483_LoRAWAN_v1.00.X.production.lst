

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 24 09:27:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   243                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   244  0000                     
   245                           ; Version 1.45
   246                           ; Generated 16/11/2017 GMT
   247                           ; 
   248                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   249                           ; All rights reserved.
   250                           ; 
   251                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   252                           ; 
   253                           ; Redistribution and use in source and binary forms, with or without modification, are
   254                           ; permitted provided that the following conditions are met:
   255                           ; 
   256                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   257                           ;        conditions and the following disclaimer.
   258                           ; 
   259                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   260                           ;        of conditions and the following disclaimer in the documentation and/or other
   261                           ;        materials provided with the distribution.
   262                           ; 
   263                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   264                           ;        software without specific prior written permission.
   265                           ; 
   266                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   267                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   268                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   269                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   270                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   271                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   272                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   273                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   274                           ; 
   275                           ; 
   276                           ; Code-generator required, PIC18LF46K22 Definitions
   277                           ; 
   278                           ; SFR Addresses
   279  0000                     
   280 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   281 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   282 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   283 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   284 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   285 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   286 ;;_LORAWAN_LinkCheckCallback$3473	offset	0
   287 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   288 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   289 ;;_DutyCycleCallback$2157	offset	0
   290 ;;DutyCycleCallback@minim	offset	4
   291 ;;DutyCycleCallback@i	offset	8
   292 ;;DutyCycleCallback@found	offset	9
   293 ;;DutyCycleCallback@param	offset=-1 (param)
   294 ;;AutomaticReplyCallback@param	offset=-1 (param)
   295 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   296 ;;AckRetransmissionCallback@param	offset=-1 (param)
   297 ;;_param	offset=-1 (param)
   298 ;;_UpdateJoinSuccessState$3490	offset	0
   299 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   300                           
   301                           	psect	idataCOMRAM
   302  008CAE                     __pidataCOMRAM:
   303                           	opt stack 0
   304                           
   305                           ;initializer for _ticksToScheduledInterrupt
   306  008CAE  FFFF               	dw	65535
   307  008CB0  FFFF               	dw	65535
   308                           
   309                           	psect	idataBANK1
   310  0086F4                     __pidataBANK1:
   311                           	opt stack 0
   312                           
   313                           ;initializer for GenerateSubkey@F7103
   314  0086F4  00                 	db	0
   315  0086F5  00                 	db	0
   316  0086F6  00                 	db	0
   317  0086F7  00                 	db	0
   318  0086F8  00                 	db	0
   319  0086F9  00                 	db	0
   320  0086FA  00                 	db	0
   321  0086FB  00                 	db	0
   322  0086FC  00                 	db	0
   323  0086FD  00                 	db	0
   324  0086FE  00                 	db	0
   325  0086FF  00                 	db	0
   326  008700  00                 	db	0
   327  008701  00                 	db	0
   328  008702  00                 	db	0
   329  008703  87                 	db	135
   330                           
   331                           ;initializer for _randx
   332  008704  0001               	dw	1
   333  008706  0000               	dw	0
   334                           
   335                           ;initializer for _deviceAddr
   336  008708  198B               	dw	6539
   337  00870A  2601               	dw	9729
   338                           
   339                           ;initializer for _applicationEUI
   340  00870C  70                 	db	112
   341  00870D  B3                 	db	179
   342  00870E  D5                 	db	213
   343  00870F  7E                 	db	126
   344  008710  D0                 	db	208
   345  008711  00                 	db	0
   346  008712  B6                 	db	182
   347  008713  92                 	db	146
   348                           
   349                           ;initializer for _deviceEUI
   350  008714  00                 	db	0
   351  008715  09                 	db	9
   352  008716  50                 	db	80
   353  008717  DF                 	db	223
   354  008718  9B                 	db	155
   355  008719  E2                 	db	226
   356  00871A  73                 	db	115
   357  00871B  3B                 	db	59
   358                           
   359                           	psect	idataBANK3
   360  00841C                     __pidataBANK3:
   361                           	opt stack 0
   362                           
   363                           ;initializer for _appSKey
   364  00841C  77                 	db	119
   365  00841D  D1                 	db	209
   366  00841E  17                 	db	23
   367  00841F  66                 	db	102
   368  008420  E8                 	db	232
   369  008421  BD                 	db	189
   370  008422  E5                 	db	229
   371  008423  D4                 	db	212
   372  008424  E0                 	db	224
   373  008425  A7                 	db	167
   374  008426  E8                 	db	232
   375  008427  71                 	db	113
   376  008428  B5                 	db	181
   377  008429  6E                 	db	110
   378  00842A  57                 	db	87
   379  00842B  9C                 	db	156
   380                           
   381                           ;initializer for _nwkSKey
   382  00842C  1A                 	db	26
   383  00842D  BB                 	db	187
   384  00842E  89                 	db	137
   385  00842F  EB                 	db	235
   386  008430  2A                 	db	42
   387  008431  B0                 	db	176
   388  008432  24                 	db	36
   389  008433  E4                 	db	228
   390  008434  1D                 	db	29
   391  008435  CD                 	db	205
   392  008436  53                 	db	83
   393  008437  2D                 	db	45
   394  008438  74                 	db	116
   395  008439  01                 	db	1
   396  00843A  37                 	db	55
   397  00843B  E2                 	db	226
   398                           
   399                           ;initializer for _applicationKey
   400  00843C  60                 	db	96
   401  00843D  86                 	db	134
   402  00843E  59                 	db	89
   403  00843F  FB                 	db	251
   404  008440  FD                 	db	253
   405  008441  B0                 	db	176
   406  008442  D7                 	db	215
   407  008443  3E                 	db	62
   408  008444  0C                 	db	12
   409  008445  71                 	db	113
   410  008446  85                 	db	133
   411  008447  31                 	db	49
   412  008448  70                 	db	112
   413  008449  8E                 	db	142
   414  00844A  7A                 	db	122
   415  00844B  8D                 	db	141
   416                           
   417                           	psect	mediumconst
   418  00FE66                     __pmediumconst:
   419                           	opt stack 0
   420  00FE66  00                 	db	0
   421  00FE67                     _STable:
   422                           	opt stack 0
   423  00FE67  63                 	db	99
   424  00FE68  7C                 	db	124
   425  00FE69  77                 	db	119
   426  00FE6A  7B                 	db	123
   427  00FE6B  F2                 	db	242
   428  00FE6C  6B                 	db	107
   429  00FE6D  6F                 	db	111
   430  00FE6E  C5                 	db	197
   431  00FE6F  30                 	db	48
   432  00FE70  01                 	db	1
   433  00FE71  67                 	db	103
   434  00FE72  2B                 	db	43
   435  00FE73  FE                 	db	254
   436  00FE74  D7                 	db	215
   437  00FE75  AB                 	db	171
   438  00FE76  76                 	db	118
   439  00FE77  CA                 	db	202
   440  00FE78  82                 	db	130
   441  00FE79  C9                 	db	201
   442  00FE7A  7D                 	db	125
   443  00FE7B  FA                 	db	250
   444  00FE7C  59                 	db	89
   445  00FE7D  47                 	db	71
   446  00FE7E  F0                 	db	240
   447  00FE7F  AD                 	db	173
   448  00FE80  D4                 	db	212
   449  00FE81  A2                 	db	162
   450  00FE82  AF                 	db	175
   451  00FE83  9C                 	db	156
   452  00FE84  A4                 	db	164
   453  00FE85  72                 	db	114
   454  00FE86  C0                 	db	192
   455  00FE87  B7                 	db	183
   456  00FE88  FD                 	db	253
   457  00FE89  93                 	db	147
   458  00FE8A  26                 	db	38
   459  00FE8B  36                 	db	54
   460  00FE8C  3F                 	db	63
   461  00FE8D  F7                 	db	247
   462  00FE8E  CC                 	db	204
   463  00FE8F  34                 	db	52
   464  00FE90  A5                 	db	165
   465  00FE91  E5                 	db	229
   466  00FE92  F1                 	db	241
   467  00FE93  71                 	db	113
   468  00FE94  D8                 	db	216
   469  00FE95  31                 	db	49
   470  00FE96  15                 	db	21
   471  00FE97  04                 	db	4
   472  00FE98  C7                 	db	199
   473  00FE99  23                 	db	35
   474  00FE9A  C3                 	db	195
   475  00FE9B  18                 	db	24
   476  00FE9C  96                 	db	150
   477  00FE9D  05                 	db	5
   478  00FE9E  9A                 	db	154
   479  00FE9F  07                 	db	7
   480  00FEA0  12                 	db	18
   481  00FEA1  80                 	db	128
   482  00FEA2  E2                 	db	226
   483  00FEA3  EB                 	db	235
   484  00FEA4  27                 	db	39
   485  00FEA5  B2                 	db	178
   486  00FEA6  75                 	db	117
   487  00FEA7  09                 	db	9
   488  00FEA8  83                 	db	131
   489  00FEA9  2C                 	db	44
   490  00FEAA  1A                 	db	26
   491  00FEAB  1B                 	db	27
   492  00FEAC  6E                 	db	110
   493  00FEAD  5A                 	db	90
   494  00FEAE  A0                 	db	160
   495  00FEAF  52                 	db	82
   496  00FEB0  3B                 	db	59
   497  00FEB1  D6                 	db	214
   498  00FEB2  B3                 	db	179
   499  00FEB3  29                 	db	41
   500  00FEB4  E3                 	db	227
   501  00FEB5  2F                 	db	47
   502  00FEB6  84                 	db	132
   503  00FEB7  53                 	db	83
   504  00FEB8  D1                 	db	209
   505  00FEB9  00                 	db	0
   506  00FEBA  ED                 	db	237
   507  00FEBB  20                 	db	32
   508  00FEBC  FC                 	db	252
   509  00FEBD  B1                 	db	177
   510  00FEBE  5B                 	db	91
   511  00FEBF  6A                 	db	106
   512  00FEC0  CB                 	db	203
   513  00FEC1  BE                 	db	190
   514  00FEC2  39                 	db	57
   515  00FEC3  4A                 	db	74
   516  00FEC4  4C                 	db	76
   517  00FEC5  58                 	db	88
   518  00FEC6  CF                 	db	207
   519  00FEC7  D0                 	db	208
   520  00FEC8  EF                 	db	239
   521  00FEC9  AA                 	db	170
   522  00FECA  FB                 	db	251
   523  00FECB  43                 	db	67
   524  00FECC  4D                 	db	77
   525  00FECD  33                 	db	51
   526  00FECE  85                 	db	133
   527  00FECF  45                 	db	69
   528  00FED0  F9                 	db	249
   529  00FED1  02                 	db	2
   530  00FED2  7F                 	db	127
   531  00FED3  50                 	db	80
   532  00FED4  3C                 	db	60
   533  00FED5  9F                 	db	159
   534  00FED6  A8                 	db	168
   535  00FED7  51                 	db	81
   536  00FED8  A3                 	db	163
   537  00FED9  40                 	db	64
   538  00FEDA  8F                 	db	143
   539  00FEDB  92                 	db	146
   540  00FEDC  9D                 	db	157
   541  00FEDD  38                 	db	56
   542  00FEDE  F5                 	db	245
   543  00FEDF  BC                 	db	188
   544  00FEE0  B6                 	db	182
   545  00FEE1  DA                 	db	218
   546  00FEE2  21                 	db	33
   547  00FEE3  10                 	db	16
   548  00FEE4  FF                 	db	255
   549  00FEE5  F3                 	db	243
   550  00FEE6  D2                 	db	210
   551  00FEE7  CD                 	db	205
   552  00FEE8  0C                 	db	12
   553  00FEE9  13                 	db	19
   554  00FEEA  EC                 	db	236
   555  00FEEB  5F                 	db	95
   556  00FEEC  97                 	db	151
   557  00FEED  44                 	db	68
   558  00FEEE  17                 	db	23
   559  00FEEF  C4                 	db	196
   560  00FEF0  A7                 	db	167
   561  00FEF1  7E                 	db	126
   562  00FEF2  3D                 	db	61
   563  00FEF3  64                 	db	100
   564  00FEF4  5D                 	db	93
   565  00FEF5  19                 	db	25
   566  00FEF6  73                 	db	115
   567  00FEF7  60                 	db	96
   568  00FEF8  81                 	db	129
   569  00FEF9  4F                 	db	79
   570  00FEFA  DC                 	db	220
   571  00FEFB  22                 	db	34
   572  00FEFC  2A                 	db	42
   573  00FEFD  90                 	db	144
   574  00FEFE  88                 	db	136
   575  00FEFF  46                 	db	70
   576  00FF00  EE                 	db	238
   577  00FF01  B8                 	db	184
   578  00FF02  14                 	db	20
   579  00FF03  DE                 	db	222
   580  00FF04  5E                 	db	94
   581  00FF05  0B                 	db	11
   582  00FF06  DB                 	db	219
   583  00FF07  E0                 	db	224
   584  00FF08  32                 	db	50
   585  00FF09  3A                 	db	58
   586  00FF0A  0A                 	db	10
   587  00FF0B  49                 	db	73
   588  00FF0C  06                 	db	6
   589  00FF0D  24                 	db	36
   590  00FF0E  5C                 	db	92
   591  00FF0F  C2                 	db	194
   592  00FF10  D3                 	db	211
   593  00FF11  AC                 	db	172
   594  00FF12  62                 	db	98
   595  00FF13  91                 	db	145
   596  00FF14  95                 	db	149
   597  00FF15  E4                 	db	228
   598  00FF16  79                 	db	121
   599  00FF17  E7                 	db	231
   600  00FF18  C8                 	db	200
   601  00FF19  37                 	db	55
   602  00FF1A  6D                 	db	109
   603  00FF1B  8D                 	db	141
   604  00FF1C  D5                 	db	213
   605  00FF1D  4E                 	db	78
   606  00FF1E  A9                 	db	169
   607  00FF1F  6C                 	db	108
   608  00FF20  56                 	db	86
   609  00FF21  F4                 	db	244
   610  00FF22  EA                 	db	234
   611  00FF23  65                 	db	101
   612  00FF24  7A                 	db	122
   613  00FF25  AE                 	db	174
   614  00FF26  08                 	db	8
   615  00FF27  BA                 	db	186
   616  00FF28  78                 	db	120
   617  00FF29  25                 	db	37
   618  00FF2A  2E                 	db	46
   619  00FF2B  1C                 	db	28
   620  00FF2C  A6                 	db	166
   621  00FF2D  B4                 	db	180
   622  00FF2E  C6                 	db	198
   623  00FF2F  E8                 	db	232
   624  00FF30  DD                 	db	221
   625  00FF31  74                 	db	116
   626  00FF32  1F                 	db	31
   627  00FF33  4B                 	db	75
   628  00FF34  BD                 	db	189
   629  00FF35  8B                 	db	139
   630  00FF36  8A                 	db	138
   631  00FF37  70                 	db	112
   632  00FF38  3E                 	db	62
   633  00FF39  B5                 	db	181
   634  00FF3A  66                 	db	102
   635  00FF3B  48                 	db	72
   636  00FF3C  03                 	db	3
   637  00FF3D  F6                 	db	246
   638  00FF3E  0E                 	db	14
   639  00FF3F  61                 	db	97
   640  00FF40  35                 	db	53
   641  00FF41  57                 	db	87
   642  00FF42  B9                 	db	185
   643  00FF43  86                 	db	134
   644  00FF44  C1                 	db	193
   645  00FF45  1D                 	db	29
   646  00FF46  9E                 	db	158
   647  00FF47  E1                 	db	225
   648  00FF48  F8                 	db	248
   649  00FF49  98                 	db	152
   650  00FF4A  11                 	db	17
   651  00FF4B  69                 	db	105
   652  00FF4C  D9                 	db	217
   653  00FF4D  8E                 	db	142
   654  00FF4E  94                 	db	148
   655  00FF4F  9B                 	db	155
   656  00FF50  1E                 	db	30
   657  00FF51  87                 	db	135
   658  00FF52  E9                 	db	233
   659  00FF53  CE                 	db	206
   660  00FF54  55                 	db	85
   661  00FF55  28                 	db	40
   662  00FF56  DF                 	db	223
   663  00FF57  8C                 	db	140
   664  00FF58  A1                 	db	161
   665  00FF59  89                 	db	137
   666  00FF5A  0D                 	db	13
   667  00FF5B  BF                 	db	191
   668  00FF5C  E6                 	db	230
   669  00FF5D  42                 	db	66
   670  00FF5E  68                 	db	104
   671  00FF5F  41                 	db	65
   672  00FF60  99                 	db	153
   673  00FF61  2D                 	db	45
   674  00FF62  0F                 	db	15
   675  00FF63  B0                 	db	176
   676  00FF64  54                 	db	84
   677  00FF65  BB                 	db	187
   678  00FF66  16                 	db	22
   679  00FF67                     __end_of_STable:
   680                           	opt stack 0
   681  00FF67                     _modulation:
   682                           	opt stack 0
   683  00FF67  01                 	db	1
   684  00FF68  01                 	db	1
   685  00FF69  01                 	db	1
   686  00FF6A  01                 	db	1
   687  00FF6B  01                 	db	1
   688  00FF6C  01                 	db	1
   689  00FF6D  01                 	db	1
   690  00FF6E  00                 	db	0
   691  00FF6F                     __end_of_modulation:
   692                           	opt stack 0
   693  00FF6F                     _rxWindowOffset:
   694                           	opt stack 0
   695  00FF6F  DF                 	db	223
   696  00FF70  CE                 	db	206
   697  00FF71  C6                 	db	198
   698  00FF72  C2                 	db	194
   699  00FF73  BE                 	db	190
   700  00FF74  BC                 	db	188
   701  00FF75  F1                 	db	241
   702  00FF76  FE                 	db	254
   703  00FF77                     __end_of_rxWindowOffset:
   704                           	opt stack 0
   705  00FF77                     _maxPayloadSize:
   706                           	opt stack 0
   707  00FF77  33                 	db	51
   708  00FF78  33                 	db	51
   709  00FF79  33                 	db	51
   710  00FF7A  73                 	db	115
   711  00FF7B  F2                 	db	242
   712  00FF7C  F2                 	db	242
   713  00FF7D  F2                 	db	242
   714  00FF7E  38                 	db	56
   715  00FF7F                     __end_of_maxPayloadSize:
   716                           	opt stack 0
   717  00FF7F                     _rxWindowSize:
   718                           	opt stack 0
   719  00FF7F  08                 	db	8
   720  00FF80  0A                 	db	10
   721  00FF81  0E                 	db	14
   722  00FF82  1A                 	db	26
   723  00FF83  31                 	db	49
   724  00FF84  58                 	db	88
   725  00FF85  3C                 	db	60
   726  00FF86  08                 	db	8
   727  00FF87                     __end_of_rxWindowSize:
   728                           	opt stack 0
   729  00FF87                     _macEndDevCmdReplyLen:
   730                           	opt stack 0
   731  00FF87  01                 	db	1
   732  00FF88  02                 	db	2
   733  00FF89  01                 	db	1
   734  00FF8A  02                 	db	2
   735  00FF8B  03                 	db	3
   736  00FF8C  02                 	db	2
   737  00FF8D  01                 	db	1
   738  00FF8E                     __end_of_macEndDevCmdReplyLen:
   739                           	opt stack 0
   740  00FF8E                     _bandwidth:
   741                           	opt stack 0
   742  00FF8E  07                 	db	7
   743  00FF8F  07                 	db	7
   744  00FF90  07                 	db	7
   745  00FF91  07                 	db	7
   746  00FF92  07                 	db	7
   747  00FF93  07                 	db	7
   748  00FF94  08                 	db	8
   749  00FF95                     __end_of_bandwidth:
   750                           	opt stack 0
   751  00FF95                     _spreadingFactor:
   752                           	opt stack 0
   753  00FF95  0C                 	db	12
   754  00FF96  0B                 	db	11
   755  00FF97  0A                 	db	10
   756  00FF98  09                 	db	9
   757  00FF99  08                 	db	8
   758  00FF9A  07                 	db	7
   759  00FF9B  07                 	db	7
   760  00FF9C                     __end_of_spreadingFactor:
   761                           	opt stack 0
   762  00FF9C  0A                 	db	10
   763  00FF9D  07                 	db	7
   764  00FF9E  04                 	db	4
   765  00FF9F  01                 	db	1
   766  00FFA0  FE                 	db	254
   767  00FFA1  FB                 	db	251
   768  00FFA2                     __end_of_txPower433:
   769                           	opt stack 0
   770  00FFA2                     _txPower868:
   771                           	opt stack 0
   772  00FFA2  14                 	db	20
   773  00FFA3  0E                 	db	14
   774  00FFA4  0B                 	db	11
   775  00FFA5  08                 	db	8
   776  00FFA6  05                 	db	5
   777  00FFA7  02                 	db	2
   778  00FFA8                     __end_of_txPower868:
   779                           	opt stack 0
   780  00FFA8                     _DefaultChannels433:
   781                           	opt stack 0
   782  00FFA8  B9D8               	dw	47576
   783  00FFAA  19D1               	dw	6609
   784  00FFAC  01                 	db	1
   785  00FFAD  50                 	db	80
   786  00FFAE  012E               	dw	302
   787  00FFB0  0000               	dw	0
   788  00FFB2  0000               	dw	0
   789  00FFB4  01                 	db	1
   790  00FFB5  FF                 	db	255
   791  00FFB6  C718               	dw	50968
   792  00FFB8  19D4               	dw	6612
   793  00FFBA  01                 	db	1
   794  00FFBB  50                 	db	80
   795  00FFBC  012E               	dw	302
   796  00FFBE  0000               	dw	0
   797  00FFC0  0000               	dw	0
   798  00FFC2  01                 	db	1
   799  00FFC3  FF                 	db	255
   800  00FFC4  D458               	dw	54360
   801  00FFC6  19D7               	dw	6615
   802  00FFC8  01                 	db	1
   803  00FFC9  50                 	db	80
   804  00FFCA  012E               	dw	302
   805  00FFCC  0000               	dw	0
   806  00FFCE  0000               	dw	0
   807  00FFD0  01                 	db	1
   808  00FFD1  FF                 	db	255
   809  00FFD2                     __end_of_DefaultChannels433:
   810                           	opt stack 0
   811  00FFD2                     _DefaultChannels868:
   812                           	opt stack 0
   813  00FFD2  27A0               	dw	10144
   814  00FFD4  33BE               	dw	13246
   815  00FFD6  01                 	db	1
   816  00FFD7  50                 	db	80
   817  00FFD8  012E               	dw	302
   818  00FFDA  0000               	dw	0
   819  00FFDC  0000               	dw	0
   820  00FFDE  01                 	db	1
   821  00FFDF  FF                 	db	255
   822  00FFE0  34E0               	dw	13536
   823  00FFE2  33C1               	dw	13249
   824  00FFE4  01                 	db	1
   825  00FFE5  50                 	db	80
   826  00FFE6  012E               	dw	302
   827  00FFE8  0000               	dw	0
   828  00FFEA  0000               	dw	0
   829  00FFEC  01                 	db	1
   830  00FFED  FF                 	db	255
   831  00FFEE  4220               	dw	16928
   832  00FFF0  33C4               	dw	13252
   833  00FFF2  01                 	db	1
   834  00FFF3  50                 	db	80
   835  00FFF4  012E               	dw	302
   836  00FFF6  0000               	dw	0
   837  00FFF8  0000               	dw	0
   838  00FFFA  01                 	db	1
   839  00FFFB  FF                 	db	255
   840  00FFFC                     __end_of_DefaultChannels868:
   841                           	opt stack 0
   842  00FFFC                     _FskSyncWordBuff:
   843                           	opt stack 0
   844  00FFFC  C1                 	db	193
   845  00FFFD  94                 	db	148
   846  00FFFE  C1                 	db	193
   847  00FFFF                     __end_of_FskSyncWordBuff:
   848                           	opt stack 0
   849  00FFFF  00                 	db	0	; dummy byte at the end
   850  0000                     
   851                           	psect	nvBANK1
   852  0001F1                     __pnvBANK1:
   853                           	opt stack 0
   854  0001F1                     _TMR1_InterruptHandler:
   855                           	opt stack 0
   856  0001F1                     	ds	2
   857  0001F3                     _timer1ReloadVal:
   858                           	opt stack 0
   859  0001F3                     	ds	2
   860  0001F5                     _IOCB4_InterruptHandler:
   861                           	opt stack 0
   862  0001F5                     	ds	2
   863  0001F7                     _INT2_InterruptHandler:
   864                           	opt stack 0
   865  0001F7                     	ds	2
   866  0001F9                     _INT1_InterruptHandler:
   867                           	opt stack 0
   868  0001F9                     	ds	2
   869  0000                     _ANSELA	set	3896
   870  0000                     _ANSELE	set	3900
   871  0000                     _ANSELB	set	3897
   872  0000                     _ANSELC	set	3898
   873  0000                     _ANSELD	set	3899
   874  0000                     _TMR1	set	4046
   875  0000                     _T1GCONbits	set	4044
   876  0000                     _T1CONbits	set	4045
   877  0000                     _T1CON	set	4045
   878  0000                     _TMR1L	set	4046
   879  0000                     _TMR1H	set	4047
   880  0000                     _T1GCON	set	4044
   881  0000                     _IOCBbits	set	3938
   882  0000                     _WPUB	set	3937
   883  0000                     _TRISD	set	3989
   884  0000                     _TRISC	set	3988
   885  0000                     _TRISB	set	3987
   886  0000                     _TRISA	set	3986
   887  0000                     _TRISE	set	3990
   888  0000                     _LATC	set	3979
   889  0000                     _LATB	set	3978
   890  0000                     _LATA	set	3977
   891  0000                     _LATD	set	3980
   892  0000                     _LATE	set	3981
   893  0000                     _OSCTUNE	set	3995
   894  0000                     _OSCCON2	set	4050
   895  0000                     _OSCCON	set	4051
   896  0000                     _PIR1bits	set	3998
   897  0000                     _PIE1bits	set	3997
   898  0000                     _RCONbits	set	4048
   899  0000                     _INTCON2bits	set	4081
   900  0000                     _INTCON3bits	set	4080
   901  0000                     _PORTBbits	set	3969
   902  0000                     _SSP2STATbits	set	3949
   903  0000                     _SSP2BUF	set	3951
   904  0000                     _SSP2CON1bits	set	3948
   905  0000                     _SSP2ADD	set	3950
   906  0000                     _SSP2CON1	set	3948
   907  0000                     _SSP2STAT	set	3949
   908  0000                     _INTCONbits	set	4082
   909  0000                     _LATD3	set	31843
   910  0000                     _LATC2	set	31834
   911  0000                     _TRISC2	set	31906
   912                           
   913                           ; #config settings
   914  0000                     
   915                           	psect	cinit
   916  006894                     __pcinit:
   917                           	opt stack 0
   918  006894                     start_initialization:
   919                           	opt stack 0
   920  006894                     __initialization:
   921                           	opt stack 0
   922                           
   923                           ; Initialize objects allocated to BANK3 (48 bytes)
   924                           ; load TBLPTR registers with __pidataBANK3
   925  006894  0E1C               	movlw	low __pidataBANK3
   926  006896  6EF6               	movwf	tblptrl,c
   927  006898  0E84               	movlw	high __pidataBANK3
   928  00689A  6EF7               	movwf	tblptrh,c
   929  00689C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   930  00689E  6EF8               	movwf	tblptru,c
   931  0068A0  EE03  F0A0         	lfsr	0,__pdataBANK3
   932  0068A4  EE20 F030          	lfsr	2,48
   933  0068A8                     copy_data0:
   934  0068A8  0009               	tblrd		*+
   935  0068AA  CFF5 FFEE          	movff	tablat,postinc0
   936  0068AE  50DD               	movf	postdec2,w,c
   937  0068B0  50D9               	movf	fsr2l,w,c
   938  0068B2  E1FA               	bnz	copy_data0
   939                           
   940                           ; Initialize objects allocated to BANK1 (40 bytes)
   941                           ; load TBLPTR registers with __pidataBANK1
   942  0068B4  0EF4               	movlw	low __pidataBANK1
   943  0068B6  6EF6               	movwf	tblptrl,c
   944  0068B8  0E86               	movlw	high __pidataBANK1
   945  0068BA  6EF7               	movwf	tblptrh,c
   946  0068BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   947  0068BE  6EF8               	movwf	tblptru,c
   948  0068C0  EE01  F0C9         	lfsr	0,__pdataBANK1
   949  0068C4  EE20 F028          	lfsr	2,40
   950  0068C8                     copy_data1:
   951  0068C8  0009               	tblrd		*+
   952  0068CA  CFF5 FFEE          	movff	tablat,postinc0
   953  0068CE  50DD               	movf	postdec2,w,c
   954  0068D0  50D9               	movf	fsr2l,w,c
   955  0068D2  E1FA               	bnz	copy_data1
   956                           
   957                           ; Initialize objects allocated to COMRAM (4 bytes)
   958                           ; load TBLPTR registers with __pidataCOMRAM
   959  0068D4  0EAE               	movlw	low __pidataCOMRAM
   960  0068D6  6EF6               	movwf	tblptrl,c
   961  0068D8  0E8C               	movlw	high __pidataCOMRAM
   962  0068DA  6EF7               	movwf	tblptrh,c
   963  0068DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   964  0068DE  6EF8               	movwf	tblptru,c
   965  0068E0  EE00  F054         	lfsr	0,__pdataCOMRAM
   966  0068E4  EE20 F004          	lfsr	2,4
   967  0068E8                     copy_data2:
   968  0068E8  0009               	tblrd		*+
   969  0068EA  CFF5 FFEE          	movff	tablat,postinc0
   970  0068EE  50DD               	movf	postdec2,w,c
   971  0068F0  50D9               	movf	fsr2l,w,c
   972  0068F2  E1FA               	bnz	copy_data2
   973                           
   974                           ; Clear objects allocated to BIGRAM (542 bytes)
   975  0068F4  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   976  0068F8  EE22 F01E          	lfsr	2,542
   977  0068FC                     clear_0:
   978  0068FC  6AEE               	clrf	postinc0,c
   979  0068FE  50DD               	movf	postdec2,w,c
   980  006900  50D9               	movf	fsr2l,w,c
   981  006902  E1FC               	bnz	clear_0
   982  006904  50DA               	movf	fsr2h,w,c
   983  006906  E1FA               	bnz	clear_0
   984                           
   985                           ; Clear objects allocated to BANK4 (224 bytes)
   986  006908  EE04  F000         	lfsr	0,__pbssBANK4
   987  00690C  0EE0               	movlw	224
   988  00690E                     clear_1:
   989  00690E  6AEE               	clrf	postinc0,c
   990  006910  06E8               	decf	wreg,f,c
   991  006912  E1FD               	bnz	clear_1
   992                           
   993                           ; Clear objects allocated to BANK3 (160 bytes)
   994  006914  EE03  F000         	lfsr	0,__pbssBANK3
   995  006918  0EA0               	movlw	160
   996  00691A                     clear_2:
   997  00691A  6AEE               	clrf	postinc0,c
   998  00691C  06E8               	decf	wreg,f,c
   999  00691E  E1FD               	bnz	clear_2
  1000                           
  1001                           ; Clear objects allocated to BANK2 (245 bytes)
  1002  006920  EE02  F000         	lfsr	0,__pbssBANK2
  1003  006924  0EF5               	movlw	245
  1004  006926                     clear_3:
  1005  006926  6AEE               	clrf	postinc0,c
  1006  006928  06E8               	decf	wreg,f,c
  1007  00692A  E1FD               	bnz	clear_3
  1008                           
  1009                           ; Clear objects allocated to BANK1 (96 bytes)
  1010  00692C  EE01  F069         	lfsr	0,__pbssBANK1
  1011  006930  0E60               	movlw	96
  1012  006932                     clear_4:
  1013  006932  6AEE               	clrf	postinc0,c
  1014  006934  06E8               	decf	wreg,f,c
  1015  006936  E1FD               	bnz	clear_4
  1016                           
  1017                           ; Clear objects allocated to BANK0 (1 bytes)
  1018  006938  0100               	movlb	0
  1019  00693A  6BF9               	clrf	__pbssBANK0& (0+255),b
  1020                           
  1021                           ; Clear objects allocated to COMRAM (12 bytes)
  1022  00693C  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1023  006940  0E0C               	movlw	12
  1024  006942                     clear_5:
  1025  006942  6AEE               	clrf	postinc0,c
  1026  006944  06E8               	decf	wreg,f,c
  1027  006946  E1FD               	bnz	clear_5
  1028  006948                     end_of_initialization:
  1029                           	opt stack 0
  1030  006948                     __end_of__initialization:
  1031                           	opt stack 0
  1032  006948  0100               	movlb	0
  1033  00694A  EF5D  F035         	goto	_main	;jump to C main() function
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec2	equ	0xFDD
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           
  1044                           	psect	bssCOMRAM
  1045  00003C                     __pbssCOMRAM:
  1046                           	opt stack 0
  1047  00003C                     _ticksAccounted:
  1048                           	opt stack 0
  1049  00003C                     	ds	4
  1050  000040                     _ticksAdded:
  1051                           	opt stack 0
  1052  000040                     	ds	4
  1053  000044                     _reloadVal:
  1054                           	opt stack 0
  1055  000044                     	ds	2
  1056  000046                     __rcon:
  1057                           	opt stack 0
  1058  000046                     	ds	1
  1059  000047                     _timerOverflow:
  1060                           	opt stack 0
  1061  000047                     	ds	1
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec2	equ	0xFDD
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           
  1072                           	psect	dataCOMRAM
  1073  000054                     __pdataCOMRAM:
  1074                           	opt stack 0
  1075  000054                     _ticksToScheduledInterrupt:
  1076                           	opt stack 0
  1077  000054                     	ds	4
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec2	equ	0xFDD
  1085                           fsr2h	equ	0xFDA
  1086                           fsr2l	equ	0xFD9
  1087                           
  1088                           	psect	bssBANK0
  1089  0000F9                     __pbssBANK0:
  1090                           	opt stack 0
  1091  0000F9                     _allocatedTimers:
  1092                           	opt stack 0
  1093  0000F9                     	ds	1
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec2	equ	0xFDD
  1101                           fsr2h	equ	0xFDA
  1102                           fsr2l	equ	0xFD9
  1103                           
  1104                           	psect	bssBANK1
  1105  000169                     __pbssBANK1:
  1106                           	opt stack 0
  1107  000169                     _rxPayload:
  1108                           	opt stack 0
  1109  000169                     	ds	4
  1110  00016D                     TMR_GetDeltaTime@retVal:
  1111                           	opt stack 0
  1112  00016D                     	ds	4
  1113  000171                     TMR_SwapTimer@retVal:
  1114                           	opt stack 0
  1115  000171                     	ds	2
  1116  000173                     TMR_SwapTimer@oldVal:
  1117                           	opt stack 0
  1118  000173                     	ds	2
  1119  000175                     TMR_GetDeltaTime@tmrVal:
  1120                           	opt stack 0
  1121  000175                     	ds	2
  1122  000177                     _activationMethod:
  1123                           	opt stack 0
  1124  000177                     	ds	1
  1125  000178                     _localDioStatus:
  1126                           	opt stack 0
  1127  000178                     	ds	1
  1128  000179                     __roundCounter:
  1129                           	opt stack 0
  1130  000179                     	ds	1
  1131  00017A                     _dioStatus:
  1132                           	opt stack 0
  1133  00017A                     	ds	1
  1134  00017B                     _RadioConfiguration:
  1135                           	opt stack 0
  1136  00017B                     	ds	54
  1137  0001B1                     _aesBuffer:
  1138                           	opt stack 0
  1139  0001B1                     	ds	16
  1140  0001C1                     _data:
  1141                           	opt stack 0
  1142  0001C1                     	ds	8
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec2	equ	0xFDD
  1150                           fsr2h	equ	0xFDA
  1151                           fsr2l	equ	0xFD9
  1152                           
  1153                           	psect	dataBANK1
  1154  0001C9                     __pdataBANK1:
  1155                           	opt stack 0
  1156  0001C9                     GenerateSubkey@F7103:
  1157                           	opt stack 0
  1158  0001C9                     	ds	16
  1159  0001D9                     _randx:
  1160                           	opt stack 0
  1161  0001D9                     	ds	4
  1162  0001DD                     _deviceAddr:
  1163                           	opt stack 0
  1164  0001DD                     	ds	4
  1165  0001E1                     _applicationEUI:
  1166                           	opt stack 0
  1167  0001E1                     	ds	8
  1168  0001E9                     _deviceEUI:
  1169                           	opt stack 0
  1170  0001E9                     	ds	8
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           postdec2	equ	0xFDD
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           
  1181                           	psect	bssBANK2
  1182  000200                     __pbssBANK2:
  1183                           	opt stack 0
  1184  000200                     _loRa:
  1185                           	opt stack 0
  1186  000200                     	ds	245
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec2	equ	0xFDD
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           
  1197                           	psect	bssBANK3
  1198  000300                     __pbssBANK3:
  1199                           	opt stack 0
  1200  000300                     _swTimers:
  1201                           	opt stack 0
  1202  000300                     	ds	160
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec2	equ	0xFDD
  1210                           fsr2h	equ	0xFDA
  1211                           fsr2l	equ	0xFD9
  1212                           
  1213                           	psect	dataBANK3
  1214  0003A0                     __pdataBANK3:
  1215                           	opt stack 0
  1216  0003A0                     _appSKey:
  1217                           	opt stack 0
  1218  0003A0                     	ds	16
  1219  0003B0                     _nwkSKey:
  1220                           	opt stack 0
  1221  0003B0                     	ds	16
  1222  0003C0                     _applicationKey:
  1223                           	opt stack 0
  1224  0003C0                     	ds	16
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec2	equ	0xFDD
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           
  1235                           	psect	bssBANK4
  1236  000400                     __pbssBANK4:
  1237                           	opt stack 0
  1238  000400                     _Channels:
  1239                           	opt stack 0
  1240  000400                     	ds	224
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec2	equ	0xFDD
  1248                           fsr2h	equ	0xFDA
  1249                           fsr2l	equ	0xFD9
  1250                           
  1251                           	psect	bssBIGRAM
  1252  0004E0                     __pbssBIGRAM:
  1253                           	opt stack 0
  1254  0004E0                     _macBuffer:
  1255                           	opt stack 0
  1256  0004E0                     	ds	271
  1257  0005EF                     _radioBuffer:
  1258                           	opt stack 0
  1259  0005EF                     	ds	271
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           postdec2	equ	0xFDD
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           
  1270                           	psect	cstackBANK1
  1271  000100                     __pcstackBANK1:
  1272                           	opt stack 0
  1273  000100                     AESCmac@k2:
  1274                           	opt stack 0
  1275                           
  1276                           ; 16 bytes @ 0x0
  1277  000100                     	ds	16
  1278  000110                     AESCmac@k1:
  1279                           	opt stack 0
  1280                           
  1281                           ; 16 bytes @ 0x10
  1282  000110                     	ds	16
  1283  000120                     AESCmac@mLast:
  1284                           	opt stack 0
  1285                           
  1286                           ; 16 bytes @ 0x20
  1287  000120                     	ds	16
  1288  000130                     AESCmac@padded:
  1289                           	opt stack 0
  1290                           
  1291                           ; 16 bytes @ 0x30
  1292  000130                     	ds	16
  1293  000140                     AESCmac@y:
  1294                           	opt stack 0
  1295                           
  1296                           ; 16 bytes @ 0x40
  1297  000140                     	ds	16
  1298  000150                     AESCmac@x:
  1299                           	opt stack 0
  1300                           
  1301                           ; 16 bytes @ 0x50
  1302  000150                     	ds	16
  1303  000160                     AESCmac@ptr:
  1304                           	opt stack 0
  1305                           
  1306                           ; 2 bytes @ 0x60
  1307  000160                     	ds	2
  1308  000162                     AESCmac@flag:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x62
  1312  000162                     	ds	1
  1313  000163                     AESCmac@n:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x63
  1317  000163                     	ds	1
  1318  000164                     AESCmac@j:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x64
  1322  000164                     	ds	1
  1323  000165                     AESCmac@i:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0x65
  1327  000165                     	ds	1
  1328  000166                     LORAWAN_RxDone@buffer:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x66
  1332  000166                     	ds	2
  1333  000168                     LORAWAN_RxDone@bufferLength:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x68
  1337  000168                     	ds	1
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           postdec2	equ	0xFDD
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           
  1348                           	psect	cstackBANK0
  1349  000060                     __pcstackBANK0:
  1350                           	opt stack 0
  1351  000060                     ??_UpdateMinMaxChDataRate:
  1352  000060                     ??_FindSmallestDataRate:
  1353  000060                     ??_CountfOptsLength:
  1354  000060                     ?_TMR1_ReadTimer:
  1355                           	opt stack 0
  1356  000060                     ?_ExecuteDutyCycle:
  1357                           	opt stack 0
  1358  000060                     ?_ExecuteDevStatus:
  1359                           	opt stack 0
  1360  000060                     ?_ExecuteLinkCheck:
  1361                           	opt stack 0
  1362  000060                     ?___wmul:
  1363                           	opt stack 0
  1364  000060                     ?___awdiv:
  1365                           	opt stack 0
  1366  000060                     ?_GetRx1Freq:
  1367                           	opt stack 0
  1368  000060                     ?___lldiv:
  1369                           	opt stack 0
  1370  000060                     ?___llmod:
  1371                           	opt stack 0
  1372  000060                     INTERRUPT_GetDioStatus@a:
  1373                           	opt stack 0
  1374  000060                     SPI2_Exchange8bit@data:
  1375                           	opt stack 0
  1376  000060                     HALResetPinOutputValue@value:
  1377                           	opt stack 0
  1378  000060                     SwTimerCreate@retVal:
  1379                           	opt stack 0
  1380  000060                     SwTimerIsRunning@timerId:
  1381                           	opt stack 0
  1382  000060                     SwTimerStop@timerId:
  1383                           	opt stack 0
  1384  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1385                           	opt stack 0
  1386  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1387                           	opt stack 0
  1388  000060                     RADIO_SetOutputPower@power:
  1389                           	opt stack 0
  1390  000060                     RADIO_SetCRC@crc:
  1391                           	opt stack 0
  1392  000060                     RADIO_SetIQInverted@iqInverted:
  1393                           	opt stack 0
  1394  000060                     RADIO_SetBandwidth@bandwidth:
  1395                           	opt stack 0
  1396  000060                     RADIO_SetModulation@modulation:
  1397                           	opt stack 0
  1398  000060                     ValidateDataRate@dataRate:
  1399                           	opt stack 0
  1400  000060                     ValidateTxPower@result:
  1401                           	opt stack 0
  1402  000060                     UpdateDLSettings@dlRx1DrOffset:
  1403                           	opt stack 0
  1404  000060                     UpdateDataRange@dataRangeNew:
  1405                           	opt stack 0
  1406  000060                     UpdateChannelIdStatus@statusNew:
  1407                           	opt stack 0
  1408  000060                     ValidateRxOffset@rxOffset:
  1409                           	opt stack 0
  1410  000060                     ValidateChannelId@allowedForDefaultChannels:
  1411                           	opt stack 0
  1412  000060                     ValidateChannelMaskCntl@result:
  1413                           	opt stack 0
  1414  000060                     UpdateCurrentDataRate@valueNew:
  1415                           	opt stack 0
  1416  000060                     UpdateTxPower@txPowerNew:
  1417                           	opt stack 0
  1418  000060                     UpdateJoinInProgress@state:
  1419                           	opt stack 0
  1420  000060                     ___abdiv@divisor:
  1421                           	opt stack 0
  1422  000060                     FillSubKey@source:
  1423                           	opt stack 0
  1424  000060                     SwTimerSetCallback@callback:
  1425                           	opt stack 0
  1426  000060                     EncKeySchedule@key:
  1427                           	opt stack 0
  1428  000060                     EncodeShiftRow@stateTable:
  1429                           	opt stack 0
  1430  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1431                           	opt stack 0
  1432  000060                     ExecuteDutyCycle@ptr:
  1433                           	opt stack 0
  1434  000060                     ExecuteDevStatus@ptr:
  1435                           	opt stack 0
  1436  000060                     UpdateDutyCycle@dutyCycleNew:
  1437                           	opt stack 0
  1438  000060                     ValidateChannelMask@channelMask:
  1439                           	opt stack 0
  1440  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1441                           	opt stack 0
  1442  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1443                           	opt stack 0
  1444  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1445                           	opt stack 0
  1446  000060                     TMR1_WriteTimer@timerVal:
  1447                           	opt stack 0
  1448  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1449                           	opt stack 0
  1450  000060                     ExecuteLinkCheck@ptr:
  1451                           	opt stack 0
  1452  000060                     IncludeMacCommandsResponse@macBuffer:
  1453                           	opt stack 0
  1454  000060                     CheckFlags@hdr:
  1455                           	opt stack 0
  1456  000060                     CheckMcastFlags@hdr:
  1457                           	opt stack 0
  1458  000060                     RxData@pData:
  1459                           	opt stack 0
  1460  000060                     ___wmul@multiplier:
  1461                           	opt stack 0
  1462  000060                     ___awdiv@dividend:
  1463                           	opt stack 0
  1464  000060                     memcpy@d1:
  1465                           	opt stack 0
  1466  000060                     memset@p1:
  1467                           	opt stack 0
  1468  000060                     SystemBlockingWaitMs@ms:
  1469                           	opt stack 0
  1470  000060                     RADIO_SetChannelFrequency@frequency:
  1471                           	opt stack 0
  1472  000060                     ValidateFrequency@frequencyNew:
  1473                           	opt stack 0
  1474  000060                     UpdateFrequency@frequencyNew:
  1475                           	opt stack 0
  1476  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1477                           	opt stack 0
  1478  000060                     UpdateReceiveWindow2Parameters@frequency:
  1479                           	opt stack 0
  1480  000060                     ___lldiv@dividend:
  1481                           	opt stack 0
  1482  000060                     ___llmod@dividend:
  1483                           	opt stack 0
  1484                           
  1485                           ; 4 bytes @ 0x0
  1486  000060                     	ds	1
  1487  000061                     ??_UpdateDataRange:
  1488  000061                     ??_UpdateChannelIdStatus:
  1489  000061                     ??___abdiv:
  1490  000061                     HALSPISend@data:
  1491                           	opt stack 0
  1492  000061                     SwTimerIsRunning@isRunning:
  1493                           	opt stack 0
  1494  000061                     ValidateDataRate@result:
  1495                           	opt stack 0
  1496  000061                     ValidateTxPower@txPowerNew:
  1497                           	opt stack 0
  1498  000061                     UpdateDLSettings@dlRx2Dr:
  1499                           	opt stack 0
  1500  000061                     ValidateRxOffset@result:
  1501                           	opt stack 0
  1502  000061                     ValidateChannelId@result:
  1503                           	opt stack 0
  1504  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1505                           	opt stack 0
  1506  000061                     UpdateMinMaxChDataRate@i:
  1507                           	opt stack 0
  1508  000061                     FindSmallestDataRate@found:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x1
  1512  000061                     	ds	1
  1513  000062                     ??_TMR1_ReadTimer:
  1514  000062                     ??_EncKeySchedule:
  1515  000062                     ??_ValidateChannelMask:
  1516  000062                     ??_ExecuteDutyCycle:
  1517  000062                     SwTimerSetCallback@callbackParameter:
  1518                           	opt stack 0
  1519  000062                     EncodeShiftRow@temp:
  1520                           	opt stack 0
  1521  000062                     RADIO_RegisterWrite@value:
  1522                           	opt stack 0
  1523  000062                     RADIO_RegisterRead@reg:
  1524                           	opt stack 0
  1525  000062                     UpdateDataRange@channelId:
  1526                           	opt stack 0
  1527  000062                     UpdateChannelIdStatus@channelId:
  1528                           	opt stack 0
  1529  000062                     ValidateDataRange@result:
  1530                           	opt stack 0
  1531  000062                     ValidateChannelId@channelId:
  1532                           	opt stack 0
  1533  000062                     UpdateDutyCycle@channelId:
  1534                           	opt stack 0
  1535  000062                     FindSmallestDataRate@i:
  1536                           	opt stack 0
  1537  000062                     RxData@dataLength:
  1538                           	opt stack 0
  1539  000062                     FillSubKey@key:
  1540                           	opt stack 0
  1541  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1542                           	opt stack 0
  1543  000062                     ___wmul@multiplicand:
  1544                           	opt stack 0
  1545  000062                     ___awdiv@divisor:
  1546                           	opt stack 0
  1547  000062                     memcpy@s1:
  1548                           	opt stack 0
  1549  000062                     memset@c:
  1550                           	opt stack 0
  1551                           
  1552                           ; 2 bytes @ 0x2
  1553  000062                     	ds	1
  1554  000063                     SwTimerSetCallback@timerId:
  1555                           	opt stack 0
  1556  000063                     RADIO_RegisterWrite@reg:
  1557                           	opt stack 0
  1558  000063                     RADIO_RegisterRead@readValue:
  1559                           	opt stack 0
  1560  000063                     UpdateDataRange@i:
  1561                           	opt stack 0
  1562  000063                     UpdateChannelIdStatus@i:
  1563                           	opt stack 0
  1564  000063                     ValidateDataRange@dataRangeNew:
  1565                           	opt stack 0
  1566  000063                     FindSmallestDataRate@dataRate:
  1567                           	opt stack 0
  1568  000063                     RxData@status:
  1569                           	opt stack 0
  1570  000063                     ___abdiv@counter:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x3
  1574  000063                     	ds	1
  1575  000064                     ??_SystemBlockingWaitMs:
  1576  000064                     FillSubKey@size:
  1577                           	opt stack 0
  1578  000064                     RADIO_WritePower@ocp:
  1579                           	opt stack 0
  1580  000064                     RADIO_UnhandledInterrupt@modulation:
  1581                           	opt stack 0
  1582  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1583                           	opt stack 0
  1584  000064                     ValidateFrequency@result:
  1585                           	opt stack 0
  1586  000064                     ValidateDataRange@dataRateMax:
  1587                           	opt stack 0
  1588  000064                     UpdateFrequency@channelId:
  1589                           	opt stack 0
  1590  000064                     ValidateChannelMask@i:
  1591                           	opt stack 0
  1592  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1593                           	opt stack 0
  1594  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1595                           	opt stack 0
  1596  000064                     ___abdiv@sign:
  1597                           	opt stack 0
  1598  000064                     ___awdiv@counter:
  1599                           	opt stack 0
  1600  000064                     _EncKeySchedule$819:
  1601                           	opt stack 0
  1602  000064                     EnableChannels1@channelMask:
  1603                           	opt stack 0
  1604  000064                     TMR1_ReadTimer@readVal:
  1605                           	opt stack 0
  1606  000064                     ___wmul@product:
  1607                           	opt stack 0
  1608  000064                     memcpy@n:
  1609                           	opt stack 0
  1610  000064                     memset@n:
  1611                           	opt stack 0
  1612  000064                     ___lldiv@divisor:
  1613                           	opt stack 0
  1614  000064                     ___llmod@divisor:
  1615                           	opt stack 0
  1616                           
  1617                           ; 4 bytes @ 0x4
  1618  000064                     	ds	1
  1619  000065                     ??_FillSubKey:
  1620  000065                     ??_IncludeMacCommandsResponse:
  1621  000065                     ??_RADIO_DIO3:
  1622  000065                     ??_RADIO_DIO4:
  1623  000065                     ??_RADIO_DIO5:
  1624  000065                     RADIO_WriteMode@newModulation:
  1625                           	opt stack 0
  1626  000065                     RADIO_WritePower@paDac:
  1627                           	opt stack 0
  1628  000065                     LORAWAN_SetChannelIdStatus@result:
  1629                           	opt stack 0
  1630  000065                     ExecuteDutyCycle@maxDCycle:
  1631                           	opt stack 0
  1632  000065                     ValidateDataRange@dataRateMin:
  1633                           	opt stack 0
  1634  000065                     ___abdiv@quotient:
  1635                           	opt stack 0
  1636  000065                     ___awdiv@sign:
  1637                           	opt stack 0
  1638                           
  1639                           ; 1 bytes @ 0x5
  1640  000065                     	ds	1
  1641  000066                     FillSubKey@carry:
  1642                           	opt stack 0
  1643  000066                     RADIO_WriteMode@blocking:
  1644                           	opt stack 0
  1645  000066                     RADIO_WritePower@power:
  1646                           	opt stack 0
  1647  000066                     RADIO_DIO3@dioMapping:
  1648                           	opt stack 0
  1649  000066                     RADIO_DIO5@dioMapping:
  1650                           	opt stack 0
  1651  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1652                           	opt stack 0
  1653  000066                     EnableChannels1@channelMaskCntl:
  1654                           	opt stack 0
  1655  000066                     TMR1_ReadTimer@readValHigh:
  1656                           	opt stack 0
  1657  000066                     UpdateReceiveDelays@delay:
  1658                           	opt stack 0
  1659  000066                     CountfOptsLength@macCommandLength:
  1660                           	opt stack 0
  1661  000066                     ___abdiv@dividend:
  1662                           	opt stack 0
  1663  000066                     memcpy@tmp:
  1664                           	opt stack 0
  1665  000066                     AESEncode@block:
  1666                           	opt stack 0
  1667  000066                     ___awdiv@quotient:
  1668                           	opt stack 0
  1669  000066                     memset@p:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x6
  1673  000066                     	ds	1
  1674  000067                     ?_ExecuteRxTimingSetup:
  1675                           	opt stack 0
  1676  000067                     FillSubKey@i:
  1677                           	opt stack 0
  1678  000067                     RADIO_WriteMode@currentModulation:
  1679                           	opt stack 0
  1680  000067                     RADIO_DIO4@dioMapping:
  1681                           	opt stack 0
  1682  000067                     EnableChannels1@channelIndexMin:
  1683                           	opt stack 0
  1684  000067                     TMR1_ReadTimer@readValLow:
  1685                           	opt stack 0
  1686  000067                     CountfOptsLength@i:
  1687                           	opt stack 0
  1688  000067                     ExecuteRxTimingSetup@ptr:
  1689                           	opt stack 0
  1690  000067                     memcpy@d:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x7
  1694  000067                     	ds	1
  1695  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1696  000068                     ?_TMR_SwapTimer:
  1697                           	opt stack 0
  1698  000068                     ?_TMR_GetDeltaTime:
  1699                           	opt stack 0
  1700  000068                     RADIO_WriteMode@dioMapping:
  1701                           	opt stack 0
  1702  000068                     EnableChannels1@channelIndexMax:
  1703                           	opt stack 0
  1704  000068                     ___llmod@counter:
  1705                           	opt stack 0
  1706  000068                     TMR_SwapTimer@timerVal:
  1707                           	opt stack 0
  1708  000068                     AESEncode@key:
  1709                           	opt stack 0
  1710  000068                     ___lldiv@quotient:
  1711                           	opt stack 0
  1712                           
  1713                           ; 4 bytes @ 0x8
  1714  000068                     	ds	1
  1715  000069                     ??_EnableChannels1:
  1716  000069                     RADIO_WriteMode@currentMode:
  1717                           	opt stack 0
  1718  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1719                           	opt stack 0
  1720  000069                     ExecuteRxTimingSetup@delay:
  1721                           	opt stack 0
  1722  000069                     memcpy@s:
  1723                           	opt stack 0
  1724                           
  1725                           ; 2 bytes @ 0x9
  1726  000069                     	ds	1
  1727  00006A                     ??_AESEncode:
  1728  00006A                     RADIO_WriteMode@newMode:
  1729                           	opt stack 0
  1730  00006A                     LORAWAN_GetMaxPayloadSize@result:
  1731                           	opt stack 0
  1732  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1733                           	opt stack 0
  1734                           
  1735                           ; 4 bytes @ 0xA
  1736  00006A                     	ds	1
  1737  00006B                     ?_ExtractMic:
  1738                           	opt stack 0
  1739  00006B                     RADIO_WriteMode@opMode:
  1740                           	opt stack 0
  1741  00006B                     InitDefault868Channels@i:
  1742                           	opt stack 0
  1743  00006B                     InitDefault433Channels@i:
  1744                           	opt stack 0
  1745  00006B                     EnableChannels1@i:
  1746                           	opt stack 0
  1747  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1748                           	opt stack 0
  1749  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  1750                           	opt stack 0
  1751  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  1752                           	opt stack 0
  1753  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1754                           	opt stack 0
  1755  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1756                           	opt stack 0
  1757  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  1758                           	opt stack 0
  1759  00006B                     PrepareSessionKeys@sessionKey:
  1760                           	opt stack 0
  1761  00006B                     ExtractMic@buffer:
  1762                           	opt stack 0
  1763  00006B                     AssembleEncryptionBlock@frameCounter:
  1764                           	opt stack 0
  1765                           
  1766                           ; 4 bytes @ 0xB
  1767  00006B                     	ds	1
  1768  00006C                     ??_TMR_GetDeltaTime:
  1769  00006C                     ?_RADIO_ReadRandom:
  1770                           	opt stack 0
  1771  00006C                     ___lldiv@counter:
  1772                           	opt stack 0
  1773  00006C                     EnableChannels@channelMask:
  1774                           	opt stack 0
  1775                           
  1776                           ; 2 bytes @ 0xC
  1777  00006C                     	ds	1
  1778  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1779                           	opt stack 0
  1780  00006D                     IncludeMacCommandsResponse@i:
  1781                           	opt stack 0
  1782  00006D                     ExtractMic@bufferLength:
  1783                           	opt stack 0
  1784  00006D                     PrepareSessionKeys@appNonce:
  1785                           	opt stack 0
  1786  00006D                     SwTimerSetTimeout@timeout:
  1787                           	opt stack 0
  1788  00006D                     RADIO_WriteFrequency@frequency:
  1789                           	opt stack 0
  1790  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1791                           	opt stack 0
  1792  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1793                           	opt stack 0
  1794                           
  1795                           ; 4 bytes @ 0xD
  1796  00006D                     	ds	1
  1797  00006E                     ??_TMR_OverrideRemaining:
  1798  00006E                     ??_RADIO_ReadRandom:
  1799  00006E                     EnableChannels@channelMaskCntl:
  1800                           	opt stack 0
  1801  00006E                     IncludeMacCommandsResponse@bufferIndex:
  1802                           	opt stack 0
  1803  00006E                     ConfigureRadio@freq:
  1804                           	opt stack 0
  1805                           
  1806                           ; 4 bytes @ 0xE
  1807  00006E                     	ds	1
  1808  00006F                     ??_ExtractMic:
  1809  00006F                     ?_ExecuteLinkAdr:
  1810                           	opt stack 0
  1811  00006F                     AssembleEncryptionBlock@blockId:
  1812                           	opt stack 0
  1813  00006F                     RADIO_ReadRandom@retVal:
  1814                           	opt stack 0
  1815  00006F                     ExecuteLinkAdr@ptr:
  1816                           	opt stack 0
  1817  00006F                     PrepareSessionKeys@networkId:
  1818                           	opt stack 0
  1819                           
  1820                           ; 2 bytes @ 0xF
  1821  00006F                     	ds	1
  1822  000070                     AssembleEncryptionBlock@firstByte:
  1823                           	opt stack 0
  1824  000070                     TMR_OverrideRemaining@tmrVal:
  1825                           	opt stack 0
  1826                           
  1827                           ; 2 bytes @ 0x10
  1828  000070                     	ds	1
  1829  000071                     ??_ExecuteLinkAdr:
  1830  000071                     ??_SwTimerSetTimeout:
  1831  000071                     RADIO_ReadRandom@i:
  1832                           	opt stack 0
  1833  000071                     PrepareSessionKeys@index:
  1834                           	opt stack 0
  1835  000071                     AssembleEncryptionBlock@multicastStatus:
  1836                           	opt stack 0
  1837  000071                     RADIO_WriteFrequency@num_mod:
  1838                           	opt stack 0
  1839  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1840                           	opt stack 0
  1841  000071                     RADIO_WriteFSKBitRate@num:
  1842                           	opt stack 0
  1843                           
  1844                           ; 4 bytes @ 0x11
  1845  000071                     	ds	1
  1846  000072                     ConfigureRadio@dataRate:
  1847                           	opt stack 0
  1848  000072                     AssembleEncryptionBlock@dir:
  1849                           	opt stack 0
  1850  000072                     TMR_OverrideRemaining@oldReloadVal:
  1851                           	opt stack 0
  1852  000072                     _AESEncode$814:
  1853                           	opt stack 0
  1854  000072                     srand@x:
  1855                           	opt stack 0
  1856                           
  1857                           ; 2 bytes @ 0x12
  1858  000072                     	ds	1
  1859  000073                     AssembleEncryptionBlock@bufferIndex:
  1860                           	opt stack 0
  1861  000073                     ExecuteLinkAdr@channelMask:
  1862                           	opt stack 0
  1863  000073                     ConfigureRadioTx@freq:
  1864                           	opt stack 0
  1865  000073                     ConfigureRadioRx@freq:
  1866                           	opt stack 0
  1867  000073                     ExtractMic@mic:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x13
  1871  000073                     	ds	1
  1872  000074                     _AESEncode$815:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x14
  1876  000074                     	ds	1
  1877  000075                     SwTimerSetTimeout@timerId:
  1878                           	opt stack 0
  1879  000075                     ExecuteLinkAdr@txPower:
  1880                           	opt stack 0
  1881  000075                     RADIO_WriteFrequency@num:
  1882                           	opt stack 0
  1883                           
  1884                           ; 4 bytes @ 0x15
  1885  000075                     	ds	1
  1886  000076                     _AESEncode$816:
  1887                           	opt stack 0
  1888  000076                     ExecuteLinkAdr@redundancy:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x16
  1892  000076                     	ds	1
  1893  000077                     ConfigureRadioTx@dataRate:
  1894                           	opt stack 0
  1895  000077                     ConfigureRadioRx@dataRate:
  1896                           	opt stack 0
  1897                           
  1898                           ; 1 bytes @ 0x17
  1899  000077                     	ds	1
  1900  000078                     AESEncode@aux:
  1901                           	opt stack 0
  1902  000078                     ExecuteLinkAdr@dataRate:
  1903                           	opt stack 0
  1904  000078                     ConfigureRadioTx@txPower:
  1905                           	opt stack 0
  1906                           
  1907                           ; 1 bytes @ 0x18
  1908  000078                     	ds	1
  1909  000079                     AESEncode@aux2:
  1910                           	opt stack 0
  1911  000079                     RADIO_FHSSChangeChannel@irqFlags:
  1912                           	opt stack 0
  1913  000079                     RADIO_Init@radioBuffer:
  1914                           	opt stack 0
  1915                           
  1916                           ; 2 bytes @ 0x19
  1917  000079                     	ds	1
  1918  00007A                     ??_RADIO_DIO2:
  1919  00007A                     AESEncode@aux1:
  1920                           	opt stack 0
  1921                           
  1922                           ; 1 bytes @ 0x1A
  1923  00007A                     	ds	1
  1924  00007B                     AESEncode@aux3:
  1925                           	opt stack 0
  1926  00007B                     RADIO_DIO2@opMode:
  1927                           	opt stack 0
  1928  00007B                     RADIO_Init@frequency:
  1929                           	opt stack 0
  1930                           
  1931                           ; 4 bytes @ 0x1B
  1932  00007B                     	ds	1
  1933  00007C                     AESEncode@i:
  1934                           	opt stack 0
  1935  00007C                     RADIO_DIO2@dioMapping:
  1936                           	opt stack 0
  1937                           
  1938                           ; 1 bytes @ 0x1C
  1939  00007C                     	ds	1
  1940  00007D                     AESEncodeLoRa@block:
  1941                           	opt stack 0
  1942                           
  1943                           ; 2 bytes @ 0x1D
  1944  00007D                     	ds	2
  1945  00007F                     ??_RADIO_Init:
  1946  00007F                     AESEncodeLoRa@key:
  1947                           	opt stack 0
  1948                           
  1949                           ; 2 bytes @ 0x1F
  1950  00007F                     	ds	1
  1951  000080                     ?_SwTimersInterrupt:
  1952                           	opt stack 0
  1953                           
  1954                           ; 4 bytes @ 0x20
  1955  000080                     	ds	1
  1956  000081                     AESEncodeLoRa@useKey:
  1957                           	opt stack 0
  1958                           
  1959                           ; 16 bytes @ 0x21
  1960  000081                     	ds	3
  1961  000084                     
  1962                           ; 1 bytes @ 0x24
  1963  000084                     	ds	4
  1964  000088                     SwTimersInterrupt@timeElapsed:
  1965                           	opt stack 0
  1966                           
  1967                           ; 4 bytes @ 0x28
  1968  000088                     	ds	4
  1969  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  1970                           	opt stack 0
  1971                           
  1972                           ; 4 bytes @ 0x2C
  1973  00008C                     	ds	4
  1974  000090                     SwTimersInterrupt@i:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0x30
  1978  000090                     	ds	1
  1979  000091                     ?_SwTimerReadValue:
  1980                           	opt stack 0
  1981  000091                     GenerateSubkey@key:
  1982                           	opt stack 0
  1983  000091                     ComputeSessionKeys@joinAcceptBuffer:
  1984                           	opt stack 0
  1985  000091                     EncryptFRMPayload@buffer:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x31
  1989  000091                     	ds	2
  1990  000093                     EncryptFRMPayload@bufferLength:
  1991                           	opt stack 0
  1992  000093                     GenerateSubkey@k1:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x33
  1996  000093                     	ds	1
  1997  000094                     EncryptFRMPayload@dir:
  1998                           	opt stack 0
  1999                           
  2000                           ; 1 bytes @ 0x34
  2001  000094                     	ds	1
  2002  000095                     GenerateSubkey@k2:
  2003                           	opt stack 0
  2004  000095                     SwTimerReadValue@ticksCount:
  2005                           	opt stack 0
  2006  000095                     SwTimerStart@ticksRemaining:
  2007                           	opt stack 0
  2008  000095                     EncryptFRMPayload@frameCounter:
  2009                           	opt stack 0
  2010                           
  2011                           ; 4 bytes @ 0x35
  2012  000095                     	ds	2
  2013  000097                     ??_GenerateSubkey:
  2014                           
  2015                           ; 1 bytes @ 0x37
  2016  000097                     	ds	1
  2017  000098                     GenerateSubkey@const_Rb:
  2018                           	opt stack 0
  2019                           
  2020                           ; 16 bytes @ 0x38
  2021  000098                     	ds	1
  2022  000099                     SwTimerReadValue@timerId:
  2023                           	opt stack 0
  2024  000099                     SwTimerStart@timerId:
  2025                           	opt stack 0
  2026  000099                     EncryptFRMPayload@key:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x39
  2030  000099                     	ds	1
  2031  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  2032  00009A                     ??_StartReTxTimer:
  2033  00009A                     ?___lmul:
  2034                           	opt stack 0
  2035  00009A                     ___lmul@multiplier:
  2036                           	opt stack 0
  2037                           
  2038                           ; 4 bytes @ 0x3A
  2039  00009A                     	ds	1
  2040  00009B                     EncryptFRMPayload@macBufferIndex:
  2041                           	opt stack 0
  2042                           
  2043                           ; 1 bytes @ 0x3B
  2044  00009B                     	ds	1
  2045  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x3C
  2049  00009C                     	ds	2
  2050  00009E                     EncryptFRMPayload@multicastStatus:
  2051                           	opt stack 0
  2052  00009E                     StartReTxTimer@minim:
  2053                           	opt stack 0
  2054  00009E                     ___lmul@multiplicand:
  2055                           	opt stack 0
  2056                           
  2057                           ; 4 bytes @ 0x3E
  2058  00009E                     	ds	1
  2059  00009F                     ??_EncryptFRMPayload:
  2060                           
  2061                           ; 1 bytes @ 0x3F
  2062  00009F                     	ds	3
  2063  0000A2                     StartReTxTimer@i:
  2064                           	opt stack 0
  2065  0000A2                     ___lmul@product:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x42
  2069  0000A2                     	ds	2
  2070  0000A4                     EncryptFRMPayload@k:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x44
  2074  0000A4                     	ds	1
  2075  0000A5                     EncryptFRMPayload@i:
  2076                           	opt stack 0
  2077                           
  2078                           ; 1 bytes @ 0x45
  2079  0000A5                     	ds	1
  2080  0000A6                     ?_ExecuteNewChannel:
  2081                           	opt stack 0
  2082  0000A6                     ?_ExecuteRxParamSetupReq:
  2083                           	opt stack 0
  2084  0000A6                     ?_rand:
  2085                           	opt stack 0
  2086  0000A6                     EncryptFRMPayload@j:
  2087                           	opt stack 0
  2088  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  2089                           	opt stack 0
  2090  0000A6                     ExecuteNewChannel@ptr:
  2091                           	opt stack 0
  2092  0000A6                     ExecuteRxParamSetupReq@ptr:
  2093                           	opt stack 0
  2094  0000A6                     UpdateCfList@joinAccept:
  2095                           	opt stack 0
  2096  0000A6                     LORAWAN_LinkCheckConfigure@period:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x46
  2100  0000A6                     	ds	2
  2101  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  2102  0000A8                     ??_ExecuteNewChannel:
  2103  0000A8                     ??_ExecuteRxParamSetupReq:
  2104  0000A8                     ??_RADIO_WriteConfiguration:
  2105  0000A8                     ?___lwmod:
  2106                           	opt stack 0
  2107  0000A8                     UpdateCfList@bufferLength:
  2108                           	opt stack 0
  2109  0000A8                     ___lwmod@dividend:
  2110                           	opt stack 0
  2111  0000A8                     GenerateSubkey@l:
  2112                           	opt stack 0
  2113                           
  2114                           ; 16 bytes @ 0x48
  2115  0000A8                     	ds	1
  2116  0000A9                     UpdateCfList@frequency:
  2117                           	opt stack 0
  2118                           
  2119                           ; 4 bytes @ 0x49
  2120  0000A9                     	ds	1
  2121  0000AA                     ExecuteNewChannel@drRange:
  2122                           	opt stack 0
  2123  0000AA                     ___lwmod@divisor:
  2124                           	opt stack 0
  2125  0000AA                     ExecuteRxParamSetupReq@frequency:
  2126                           	opt stack 0
  2127                           
  2128                           ; 4 bytes @ 0x4A
  2129  0000AA                     	ds	1
  2130  0000AB                     RADIO_WriteConfiguration@i:
  2131                           	opt stack 0
  2132  0000AB                     ExecuteNewChannel@frequency:
  2133                           	opt stack 0
  2134                           
  2135                           ; 4 bytes @ 0x4B
  2136  0000AB                     	ds	1
  2137  0000AC                     ___lwmod@counter:
  2138                           	opt stack 0
  2139  0000AC                     RADIO_WriteConfiguration@tempValue:
  2140                           	opt stack 0
  2141  0000AC                     _LORAWAN_LinkCheckConfigure$3459:
  2142                           	opt stack 0
  2143                           
  2144                           ; 4 bytes @ 0x4C
  2145  0000AC                     	ds	1
  2146  0000AD                     ?_Random:
  2147                           	opt stack 0
  2148  0000AD                     UpdateCfList@channelIndex:
  2149                           	opt stack 0
  2150  0000AD                     Random@max:
  2151                           	opt stack 0
  2152                           
  2153                           ; 2 bytes @ 0x4D
  2154  0000AD                     	ds	1
  2155  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  2156                           	opt stack 0
  2157  0000AE                     UpdateCfList@i:
  2158                           	opt stack 0
  2159                           
  2160                           ; 1 bytes @ 0x4E
  2161  0000AE                     	ds	1
  2162  0000AF                     ExecuteNewChannel@channelIndex:
  2163                           	opt stack 0
  2164  0000AF                     SearchAvailableChannel@transmissionType:
  2165                           	opt stack 0
  2166                           
  2167                           ; 1 bytes @ 0x4F
  2168  0000AF                     	ds	1
  2169  0000B0                     ?_MacExecuteCommands:
  2170                           	opt stack 0
  2171  0000B0                     RADIO_WriteConfiguration@regValue:
  2172                           	opt stack 0
  2173  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  2174                           	opt stack 0
  2175  0000B0                     SearchAvailableChannel@channelIndex:
  2176                           	opt stack 0
  2177  0000B0                     MacExecuteCommands@buffer:
  2178                           	opt stack 0
  2179                           
  2180                           ; 2 bytes @ 0x50
  2181  0000B0                     	ds	1
  2182  0000B1                     ?_RADIO_Transmit:
  2183                           	opt stack 0
  2184  0000B1                     ?_RADIO_ReceiveStart:
  2185                           	opt stack 0
  2186  0000B1                     LORAWAN_Reset@ismBandNew:
  2187                           	opt stack 0
  2188  0000B1                     RADIO_Transmit@buffer:
  2189                           	opt stack 0
  2190  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x51
  2194  0000B1                     	ds	1
  2195  0000B2                     ??_SearchAvailableChannel:
  2196  0000B2                     MacExecuteCommands@fOptsLen:
  2197                           	opt stack 0
  2198  0000B2                     LORAWAN_Init@RxPayload:
  2199                           	opt stack 0
  2200                           
  2201                           ; 2 bytes @ 0x52
  2202  0000B2                     	ds	1
  2203  0000B3                     ??_MacExecuteCommands:
  2204  0000B3                     ??_RADIO_ReceiveStart:
  2205  0000B3                     RADIO_Transmit@bufferLen:
  2206                           	opt stack 0
  2207                           
  2208                           ; 1 bytes @ 0x53
  2209  0000B3                     	ds	1
  2210  0000B4                     ??_RADIO_Transmit:
  2211  0000B4                     LORAWAN_Init@RxJoinResponse:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x54
  2215  0000B4                     	ds	1
  2216  0000B5                     MacExecuteCommands@done:
  2217                           	opt stack 0
  2218                           
  2219                           ; 1 bytes @ 0x55
  2220  0000B5                     	ds	1
  2221  0000B6                     SearchAvailableChannel@randomNumberCopy:
  2222                           	opt stack 0
  2223  0000B6                     MacExecuteCommands@ptr:
  2224                           	opt stack 0
  2225                           
  2226                           ; 2 bytes @ 0x56
  2227  0000B6                     	ds	1
  2228  0000B7                     SearchAvailableChannel@result:
  2229                           	opt stack 0
  2230  0000B7                     _RADIO_ReceiveStart$1082:
  2231                           	opt stack 0
  2232                           
  2233                           ; 4 bytes @ 0x57
  2234  0000B7                     	ds	1
  2235  0000B8                     GenerateSubkey@i:
  2236                           	opt stack 0
  2237  0000B8                     SearchAvailableChannel@maxChannels:
  2238                           	opt stack 0
  2239  0000B8                     _RADIO_Transmit$1077:
  2240                           	opt stack 0
  2241                           
  2242                           ; 4 bytes @ 0x58
  2243  0000B8                     	ds	1
  2244  0000B9                     SearchAvailableChannel@randomNumber:
  2245                           	opt stack 0
  2246  0000B9                     AESCmac@key:
  2247                           	opt stack 0
  2248                           
  2249                           ; 2 bytes @ 0x59
  2250  0000B9                     	ds	1
  2251  0000BA                     SearchAvailableChannel@i:
  2252                           	opt stack 0
  2253                           
  2254                           ; 1 bytes @ 0x5A
  2255  0000BA                     	ds	1
  2256  0000BB                     SelectChannelForTransmission@transmissionType:
  2257                           	opt stack 0
  2258  0000BB                     AESCmac@output:
  2259                           	opt stack 0
  2260  0000BB                     LORAWAN_TxDone@timeOnAir:
  2261                           	opt stack 0
  2262                           
  2263                           ; 2 bytes @ 0x5B
  2264  0000BB                     	ds	1
  2265  0000BC                     SelectChannelForTransmission@result:
  2266                           	opt stack 0
  2267  0000BC                     _RADIO_Transmit$1079:
  2268                           	opt stack 0
  2269                           
  2270                           ; 4 bytes @ 0x5C
  2271  0000BC                     	ds	1
  2272  0000BD                     ??_LORAWAN_TxDone:
  2273  0000BD                     SelectChannelForTransmission@channelIndex:
  2274                           	opt stack 0
  2275  0000BD                     AESCmac@input:
  2276                           	opt stack 0
  2277                           
  2278                           ; 2 bytes @ 0x5D
  2279  0000BD                     	ds	2
  2280  0000BF                     AESCmac@size:
  2281                           	opt stack 0
  2282                           
  2283                           ; 1 bytes @ 0x5F
  2284  0000BF                     	ds	1
  2285  0000C0                     ??_AESCmac:
  2286  0000C0                     RADIO_Transmit@regValue:
  2287                           	opt stack 0
  2288                           
  2289                           ; 1 bytes @ 0x60
  2290  0000C0                     	ds	1
  2291  0000C1                     RADIO_Transmit@i:
  2292                           	opt stack 0
  2293                           
  2294                           ; 1 bytes @ 0x61
  2295  0000C1                     	ds	1
  2296  0000C2                     ??_LORAWAN_RxTimeout:
  2297                           
  2298                           ; 1 bytes @ 0x62
  2299  0000C2                     	ds	4
  2300  0000C6                     LORAWAN_RxTimeout@minim:
  2301                           	opt stack 0
  2302                           
  2303                           ; 4 bytes @ 0x66
  2304  0000C6                     	ds	1
  2305  0000C7                     ?_ComputeMic:
  2306                           	opt stack 0
  2307  0000C7                     AssemblePacket@port:
  2308                           	opt stack 0
  2309  0000C7                     ComputeMic@key:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x67
  2313  0000C7                     	ds	1
  2314  0000C8                     AssemblePacket@buffer:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x68
  2318  0000C8                     	ds	1
  2319  0000C9                     ComputeMic@buffer:
  2320                           	opt stack 0
  2321  0000C9                     _LORAWAN_TxDone$1971:
  2322                           	opt stack 0
  2323                           
  2324                           ; 4 bytes @ 0x69
  2325  0000C9                     	ds	1
  2326  0000CA                     LORAWAN_RxTimeout@i:
  2327                           	opt stack 0
  2328  0000CA                     AssemblePacket@bufferLength:
  2329                           	opt stack 0
  2330                           
  2331                           ; 2 bytes @ 0x6A
  2332  0000CA                     	ds	1
  2333  0000CB                     ??_RADIO_DIO1:
  2334  0000CB                     ComputeMic@bufferLength:
  2335                           	opt stack 0
  2336                           
  2337                           ; 1 bytes @ 0x6B
  2338  0000CB                     	ds	1
  2339  0000CC                     ??_AssemblePacket:
  2340  0000CC                     RADIO_DIO1@dioMapping:
  2341                           	opt stack 0
  2342  0000CC                     ComputeMic@mic:
  2343                           	opt stack 0
  2344                           
  2345                           ; 4 bytes @ 0x6C
  2346  0000CC                     	ds	1
  2347  0000CD                     _LORAWAN_TxDone$1972:
  2348                           	opt stack 0
  2349                           
  2350                           ; 4 bytes @ 0x6D
  2351  0000CD                     	ds	1
  2352  0000CE                     AssemblePacket@confirmed:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x6E
  2356  0000CE                     	ds	1
  2357  0000CF                     AssemblePacket@mhdr:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x6F
  2361  0000CF                     	ds	1
  2362  0000D0                     ??_PrepareJoinRequestFrame:
  2363  0000D0                     AssemblePacket@fCtrl:
  2364                           	opt stack 0
  2365                           
  2366                           ; 1 bytes @ 0x70
  2367  0000D0                     	ds	1
  2368  0000D1                     LORAWAN_TxDone@found:
  2369                           	opt stack 0
  2370  0000D1                     AssemblePacket@macCmdIdx:
  2371                           	opt stack 0
  2372                           
  2373                           ; 1 bytes @ 0x71
  2374  0000D1                     	ds	1
  2375  0000D2                     AssemblePacket@bufferIndex:
  2376                           	opt stack 0
  2377  0000D2                     LORAWAN_TxDone@delta:
  2378                           	opt stack 0
  2379                           
  2380                           ; 4 bytes @ 0x72
  2381  0000D2                     	ds	1
  2382  0000D3                     LORAWAN_Send@port:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x73
  2386  0000D3                     	ds	1
  2387  0000D4                     LORAWAN_Send@buffer:
  2388                           	opt stack 0
  2389  0000D4                     PrepareJoinRequestFrame@mic:
  2390                           	opt stack 0
  2391                           
  2392                           ; 4 bytes @ 0x74
  2393  0000D4                     	ds	2
  2394  0000D6                     LORAWAN_Send@bufferLength:
  2395                           	opt stack 0
  2396  0000D6                     _LORAWAN_TxDone$5004:
  2397                           	opt stack 0
  2398                           
  2399                           ; 4 bytes @ 0x76
  2400  0000D6                     	ds	1
  2401  0000D7                     ??_LORAWAN_Send:
  2402                           
  2403                           ; 1 bytes @ 0x77
  2404  0000D7                     	ds	1
  2405  0000D8                     LORAWAN_Send@result:
  2406                           	opt stack 0
  2407  0000D8                     PrepareJoinRequestFrame@mhdr:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x78
  2411  0000D8                     	ds	1
  2412  0000D9                     LORAWAN_Send@confirmed:
  2413                           	opt stack 0
  2414  0000D9                     PrepareJoinRequestFrame@iCtr:
  2415                           	opt stack 0
  2416                           
  2417                           ; 1 bytes @ 0x79
  2418  0000D9                     	ds	1
  2419  0000DA                     ??_LORAWAN_RxDone:
  2420  0000DA                     ??_SwTimersExecute:
  2421  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2422                           	opt stack 0
  2423  0000DA                     LORAWAN_TxDone@ticks:
  2424                           	opt stack 0
  2425                           
  2426                           ; 4 bytes @ 0x7A
  2427  0000DA                     	ds	1
  2428  0000DB                     LORAWAN_Join@bufferIndex:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x7B
  2432  0000DB                     	ds	1
  2433  0000DC                     LORAWAN_Join@result:
  2434                           	opt stack 0
  2435                           
  2436                           ; 1 bytes @ 0x7C
  2437  0000DC                     	ds	1
  2438  0000DD                     LORAWAN_Join@activationTypeNew:
  2439                           	opt stack 0
  2440                           
  2441                           ; 1 bytes @ 0x7D
  2442  0000DD                     	ds	1
  2443  0000DE                     SwTimersExecute@i:
  2444                           	opt stack 0
  2445  0000DE                     LORAWAN_TxDone@minim:
  2446                           	opt stack 0
  2447                           
  2448                           ; 4 bytes @ 0x7E
  2449  0000DE                     	ds	1
  2450  0000DF                     LORAWAN_RxDone@fPort:
  2451                           	opt stack 0
  2452                           
  2453                           ; 1 bytes @ 0x7F
  2454  0000DF                     	ds	1
  2455  0000E0                     LORAWAN_RxDone@channelIndex:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x80
  2459  0000E0                     	ds	1
  2460  0000E1                     LORAWAN_RxDone@mhdr:
  2461                           	opt stack 0
  2462                           
  2463                           ; 1 bytes @ 0x81
  2464  0000E1                     	ds	1
  2465  0000E2                     LORAWAN_TxDone@i:
  2466                           	opt stack 0
  2467  0000E2                     LORAWAN_RxDone@extractedMic:
  2468                           	opt stack 0
  2469                           
  2470                           ; 4 bytes @ 0x82
  2471  0000E2                     	ds	1
  2472  0000E3                     ??_RADIO_TxDone:
  2473  0000E3                     ??_RADIO_FSKPacketSent:
  2474                           
  2475                           ; 1 bytes @ 0x83
  2476  0000E3                     	ds	3
  2477  0000E6                     LORAWAN_RxDone@bufferIndex:
  2478                           	opt stack 0
  2479                           
  2480                           ; 1 bytes @ 0x86
  2481  0000E6                     	ds	1
  2482  0000E7                     LORAWAN_RxDone@temp:
  2483                           	opt stack 0
  2484  0000E7                     RADIO_TxDone@timeOnAir:
  2485                           	opt stack 0
  2486  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x87
  2490  0000E7                     	ds	1
  2491  0000E8                     LORAWAN_RxDone@packet:
  2492                           	opt stack 0
  2493                           
  2494                           ; 2 bytes @ 0x88
  2495  0000E8                     	ds	2
  2496  0000EA                     LORAWAN_RxDone@computedMic:
  2497                           	opt stack 0
  2498                           
  2499                           ; 4 bytes @ 0x8A
  2500  0000EA                     	ds	1
  2501  0000EB                     _RADIO_TxDone$1094:
  2502                           	opt stack 0
  2503  0000EB                     _RADIO_FSKPacketSent$1098:
  2504                           	opt stack 0
  2505                           
  2506                           ; 4 bytes @ 0x8B
  2507  0000EB                     	ds	3
  2508  0000EE                     LORAWAN_RxDone@joinAccept:
  2509                           	opt stack 0
  2510                           
  2511                           ; 2 bytes @ 0x8E
  2512  0000EE                     	ds	1
  2513  0000EF                     RADIO_FSKPacketSent@irqFlags:
  2514                           	opt stack 0
  2515                           
  2516                           ; 1 bytes @ 0x8F
  2517  0000EF                     	ds	1
  2518  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  2519                           	opt stack 0
  2520                           
  2521                           ; 1 bytes @ 0x90
  2522  0000F0                     	ds	1
  2523  0000F1                     LORAWAN_RxDone@hdr:
  2524                           	opt stack 0
  2525                           
  2526                           ; 2 bytes @ 0x91
  2527  0000F1                     	ds	2
  2528  0000F3                     RADIO_RxDone@irqFlags:
  2529                           	opt stack 0
  2530  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  2531                           	opt stack 0
  2532                           
  2533                           ; 1 bytes @ 0x93
  2534  0000F3                     	ds	1
  2535  0000F4                     RADIO_RxDone@i:
  2536                           	opt stack 0
  2537  0000F4                     RADIO_FSKPayloadReady@i:
  2538                           	opt stack 0
  2539                           
  2540                           ; 1 bytes @ 0x94
  2541  0000F4                     	ds	1
  2542  0000F5                     ??_RADIO_DIO0:
  2543                           
  2544                           ; 1 bytes @ 0x95
  2545  0000F5                     	ds	2
  2546  0000F7                     RADIO_DIO0@dioMapping:
  2547                           	opt stack 0
  2548                           
  2549                           ; 1 bytes @ 0x97
  2550  0000F7                     	ds	1
  2551  0000F8                     RADIO_DIO0@opMode:
  2552                           	opt stack 0
  2553                           
  2554                           ; 1 bytes @ 0x98
  2555  0000F8                     	ds	1
  2556  0000F9                     tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           postdec2	equ	0xFDD
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           
  2566                           ; 1 bytes @ 0x99
  2567                           
  2568                           	psect	cstackCOMRAM
  2569  000001                     __pcstackCOMRAM:
  2570                           	opt stack 0
  2571  000001                     ?i2_TMR1_ReadTimer:
  2572                           	opt stack 0
  2573  000001                     i2TMR1_WriteTimer@timerVal:
  2574                           	opt stack 0
  2575                           
  2576                           ; 2 bytes @ 0x0
  2577  000001                     	ds	2
  2578  000003                     ??i2_TMR1_ReadTimer:
  2579  000003                     
  2580                           ; 1 bytes @ 0x2
  2581  000003                     	ds	2
  2582  000005                     i2TMR1_ReadTimer@readVal:
  2583                           	opt stack 0
  2584                           
  2585                           ; 2 bytes @ 0x4
  2586  000005                     	ds	2
  2587  000007                     i2TMR1_ReadTimer@readValHigh:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0x6
  2591  000007                     	ds	1
  2592  000008                     i2TMR1_ReadTimer@readValLow:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x7
  2596  000008                     	ds	1
  2597  000009                     ?i2_TMR_SwapTimer:
  2598                           	opt stack 0
  2599  000009                     ?i2_TMR_GetDeltaTime:
  2600                           	opt stack 0
  2601  000009                     i2TMR_SwapTimer@timerVal:
  2602                           	opt stack 0
  2603                           
  2604                           ; 2 bytes @ 0x8
  2605  000009                     	ds	2
  2606  00000B                     
  2607                           ; 1 bytes @ 0xA
  2608  00000B                     	ds	2
  2609  00000D                     ??i2_TMR_GetDeltaTime:
  2610                           
  2611                           ; 1 bytes @ 0xC
  2612  00000D                     	ds	20
  2613  000021                     ?i2_SwTimersInterrupt:
  2614                           	opt stack 0
  2615                           
  2616                           ; 4 bytes @ 0x20
  2617  000021                     	ds	4
  2618  000025                     
  2619                           ; 1 bytes @ 0x24
  2620  000025                     	ds	4
  2621  000029                     i2SwTimersInterrupt@timeElapsed:
  2622                           	opt stack 0
  2623                           
  2624                           ; 4 bytes @ 0x28
  2625  000029                     	ds	4
  2626  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0x2C
  2630  00002D                     	ds	4
  2631  000031                     i2SwTimersInterrupt@i:
  2632                           	opt stack 0
  2633                           
  2634                           ; 1 bytes @ 0x30
  2635  000031                     	ds	1
  2636  000032                     ??_TMR_ISR_lora:
  2637                           
  2638                           ; 1 bytes @ 0x31
  2639  000032                     	ds	2
  2640  000034                     ??_INTERRUPT_InterruptManager:
  2641                           
  2642                           ; 1 bytes @ 0x33
  2643  000034                     	ds	8
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           
  2654 ;;
  2655 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2656 ;;
  2657 ;; *************** function _main *****************
  2658 ;; Defined at:
  2659 ;;		line 68 in file "main.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels required when called:   19
  2679 ;; This function calls:
  2680 ;;		_LORAWAN_Init
  2681 ;;		_LORAWAN_Join
  2682 ;;		_LORAWAN_Mainloop
  2683 ;;		_LORAWAN_Send
  2684 ;;		_LORAWAN_SetApplicationEui
  2685 ;;		_LORAWAN_SetApplicationKey
  2686 ;;		_LORAWAN_SetApplicationSessionKey
  2687 ;;		_LORAWAN_SetDeviceAddress
  2688 ;;		_LORAWAN_SetDeviceEui
  2689 ;;		_LORAWAN_SetNetworkSessionKey
  2690 ;;		_SYSTEM_Initialize
  2691 ;; This function is called by:
  2692 ;;		Startup code after reset
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text0
  2697  006ABA                     __ptext0:
  2698                           	opt stack 0
  2699  006ABA                     _main:
  2700                           	opt stack 12
  2701                           
  2702                           ;main.c: 71: SYSTEM_Initialize();
  2703                           
  2704                           ;incstack = 0
  2705  006ABA  ECEB  F044         	call	_SYSTEM_Initialize	;wreg free
  2706                           
  2707                           ;main.c: 78: (INTCONbits.GIE = 1);
  2708  006ABE  8EF2               	bsf	intcon,7,c	;volatile
  2709                           
  2710                           ;main.c: 84: (INTCONbits.PEIE = 1);
  2711  006AC0  8CF2               	bsf	intcon,6,c	;volatile
  2712                           
  2713                           ;main.c: 90: LORAWAN_Init(RxData, RxJoinResponse);
  2714  006AC2  0ECE               	movlw	low _RxData
  2715  006AC4  0100               	movlb	0	; () banked
  2716  006AC6  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2717  006AC8  0E8C               	movlw	high _RxData
  2718  006ACA  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2719  006ACC  0ECC               	movlw	low _RxJoinResponse
  2720  006ACE  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2721  006AD0  0E8C               	movlw	high _RxJoinResponse
  2722  006AD2  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2723  006AD4  ECC1  F03C         	call	_LORAWAN_Init	;wreg free
  2724                           
  2725                           ;main.c: 92: if(activationMethod == 0){
  2726  006AD8  0101               	movlb	1	; () banked
  2727  006ADA  5177               	movf	_activationMethod& (0+255),w,b
  2728  006ADC  A4D8               	btfss	status,2,c
  2729  006ADE  D019               	goto	l2506
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;main.c: 94: LORAWAN_SetApplicationEui(applicationEUI);
  2733  006AE0  0EE1               	movlw	low _applicationEUI
  2734  006AE2  0100               	movlb	0	; () banked
  2735  006AE4  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  2736  006AE6  0E01               	movlw	high _applicationEUI
  2737  006AE8  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  2738  006AEA  ECE2  F042         	call	_LORAWAN_SetApplicationEui	;wreg free
  2739                           
  2740                           ;main.c: 95: LORAWAN_SetDeviceEui(deviceEUI);
  2741  006AEE  0EE9               	movlw	low _deviceEUI
  2742  006AF0  0100               	movlb	0	; () banked
  2743  006AF2  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  2744  006AF4  0E01               	movlw	high _deviceEUI
  2745  006AF6  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  2746  006AF8  EC9D  F042         	call	_LORAWAN_SetDeviceEui	;wreg free
  2747                           
  2748                           ;main.c: 96: LORAWAN_SetApplicationKey(applicationKey);
  2749  006AFC  0EC0               	movlw	low _applicationKey
  2750  006AFE  0100               	movlb	0	; () banked
  2751  006B00  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  2752  006B02  0E03               	movlw	high _applicationKey
  2753  006B04  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  2754  006B06  ECCB  F042         	call	_LORAWAN_SetApplicationKey	;wreg free
  2755                           
  2756                           ;main.c: 98: LORAWAN_Join(OTAA);
  2757  006B0A  0E00               	movlw	0
  2758  006B0C  EC5D  F036         	call	_LORAWAN_Join
  2759                           
  2760                           ;main.c: 99: }
  2761  006B10  D01B               	goto	l2507
  2762  006B12                     l2506:
  2763                           
  2764                           ;main.c: 100: else{
  2765                           ;main.c: 102: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2766  006B12  0EB0               	movlw	low _nwkSKey
  2767  006B14  0100               	movlb	0	; () banked
  2768  006B16  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2769  006B18  0E03               	movlw	high _nwkSKey
  2770  006B1A  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2771  006B1C  EC86  F042         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2772                           
  2773                           ;main.c: 103: LORAWAN_SetApplicationSessionKey(appSKey);
  2774  006B20  0EA0               	movlw	low _appSKey
  2775  006B22  0100               	movlb	0	; () banked
  2776  006B24  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2777  006B26  0E03               	movlw	high _appSKey
  2778  006B28  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2779  006B2A  ECB4  F042         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2780                           
  2781                           ;main.c: 104: LORAWAN_SetDeviceAddress(deviceAddr);
  2782  006B2E  C1DD  F060         	movff	_deviceAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2783  006B32  C1DE  F061         	movff	_deviceAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2784  006B36  C1DF  F062         	movff	_deviceAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2785  006B3A  C1E0  F063         	movff	_deviceAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2786  006B3E  EC3E  F045         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2787                           
  2788                           ;main.c: 106: LORAWAN_Join(ABP);
  2789  006B42  0E01               	movlw	1
  2790  006B44  EC5D  F036         	call	_LORAWAN_Join
  2791  006B48                     l2507:
  2792                           
  2793                           ;main.c: 110: {
  2794                           ;main.c: 112: LORAWAN_Mainloop();
  2795                           
  2796                           ;main.c: 107: }
  2797                           ;main.c: 109: while (1)
  2798  006B48  EC6B  F041         	call	_LORAWAN_Mainloop	;wreg free
  2799                           
  2800                           ;main.c: 117: LORAWAN_Send(UNCNF, 2, data, 8);
  2801  006B4C  0E02               	movlw	2
  2802  006B4E  0100               	movlb	0	; () banked
  2803  006B50  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  2804  006B52  0EC1               	movlw	low _data
  2805  006B54  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  2806  006B56  0E01               	movlw	high _data
  2807  006B58  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2808  006B5A  0E08               	movlw	8
  2809  006B5C  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2810  006B5E  0E00               	movlw	0
  2811  006B60  EC7C  F033         	call	_LORAWAN_Send
  2812  006B64  D7F1               	goto	l2507
  2813  006B66                     __end_of_main:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           intcon	equ	0xFF2
  2820                           postinc0	equ	0xFEE
  2821                           wreg	equ	0xFE8
  2822                           postdec2	equ	0xFDD
  2823                           fsr2h	equ	0xFDA
  2824                           fsr2l	equ	0xFD9
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _SYSTEM_Initialize *****************
  2828 ;; Defined at:
  2829 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:   10
  2850 ;; This function calls:
  2851 ;;		_EXT_INT_Initialize
  2852 ;;		_INTERRUPT_Initialize
  2853 ;;		_LORAWAN_PlatformInit
  2854 ;;		_OSCILLATOR_Initialize
  2855 ;;		_PIN_MANAGER_Initialize
  2856 ;;		_SPI2_Initialize
  2857 ;;		_TMR1_Initialize
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text1
  2864  0089D6                     __ptext1:
  2865                           	opt stack 0
  2866  0089D6                     _SYSTEM_Initialize:
  2867                           	opt stack 20
  2868                           
  2869                           ;mcc.c: 53: INTERRUPT_Initialize();
  2870                           
  2871                           ;incstack = 0
  2872  0089D6  EC59  F046         	call	_INTERRUPT_Initialize	;wreg free
  2873                           
  2874                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2875  0089DA  ECBA  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
  2876                           
  2877                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2878  0089DE  ECD5  F045         	call	_OSCILLATOR_Initialize	;wreg free
  2879                           
  2880                           ;mcc.c: 56: SPI2_Initialize();
  2881  0089E2  ECCE  F045         	call	_SPI2_Initialize	;wreg free
  2882                           
  2883                           ;mcc.c: 57: TMR1_Initialize();
  2884  0089E6  EC10  F043         	call	_TMR1_Initialize	;wreg free
  2885                           
  2886                           ;mcc.c: 58: EXT_INT_Initialize();
  2887  0089EA  EC26  F043         	call	_EXT_INT_Initialize	;wreg free
  2888                           
  2889                           ;mcc.c: 59: LORAWAN_PlatformInit();
  2890  0089EE  EC17  F044         	call	_LORAWAN_PlatformInit	;wreg free
  2891  0089F2  0012               	return		;funcret
  2892  0089F4                     __end_of_SYSTEM_Initialize:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           intcon	equ	0xFF2
  2899                           postinc0	equ	0xFEE
  2900                           wreg	equ	0xFE8
  2901                           postdec2	equ	0xFDD
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _TMR1_Initialize *****************
  2907 ;; Defined at:
  2908 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    8
  2929 ;; This function calls:
  2930 ;;		_TMR1_SetInterruptHandler
  2931 ;; This function is called by:
  2932 ;;		_SYSTEM_Initialize
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text2
  2937  008620                     __ptext2:
  2938                           	opt stack 0
  2939  008620                     _TMR1_Initialize:
  2940                           	opt stack 21
  2941                           
  2942                           ;tmr1.c: 69: T1GCON = 0x00;
  2943                           
  2944                           ;incstack = 0
  2945  008620  0E00               	movlw	0
  2946  008622  6ECC               	movwf	4044,c	;volatile
  2947                           
  2948                           ;tmr1.c: 72: TMR1H = 0x00;
  2949  008624  0E00               	movlw	0
  2950  008626  6ECF               	movwf	4047,c	;volatile
  2951                           
  2952                           ;tmr1.c: 75: TMR1L = 0x00;
  2953  008628  0E00               	movlw	0
  2954  00862A  6ECE               	movwf	4046,c	;volatile
  2955                           
  2956                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2957  00862C  CFCE F1F3          	movff	4046,_timer1ReloadVal	;volatile
  2958  008630  CFCF F1F4          	movff	4047,_timer1ReloadVal+1	;volatile
  2959                           
  2960                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2961  008634  909E               	bcf	3998,0,c	;volatile
  2962                           
  2963                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2964  008636  809D               	bsf	3997,0,c	;volatile
  2965                           
  2966                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2967  008638  0ED0               	movlw	low _TMR1_DefaultInterruptHandler
  2968  00863A  0100               	movlb	0	; () banked
  2969  00863C  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2970  00863E  0E8C               	movlw	high _TMR1_DefaultInterruptHandler
  2971  008640  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2972  008642  ECE9  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  2973                           
  2974                           ;tmr1.c: 90: T1CON = 0x8D;
  2975  008646  0E8D               	movlw	141
  2976  008648  6ECD               	movwf	4045,c	;volatile
  2977  00864A  0012               	return		;funcret
  2978  00864C                     __end_of_TMR1_Initialize:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _SPI2_Initialize *****************
  2993 ;; Defined at:
  2994 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    7
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_SYSTEM_Initialize
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text3
  3023  008B9C                     __ptext3:
  3024                           	opt stack 0
  3025  008B9C                     _SPI2_Initialize:
  3026                           	opt stack 22
  3027                           
  3028                           ;spi2.c: 70: SSP2STAT = 0x40;
  3029                           
  3030                           ;incstack = 0
  3031  008B9C  0E40               	movlw	64
  3032  008B9E  6E6D               	movwf	3949,c	;volatile
  3033                           
  3034                           ;spi2.c: 73: SSP2CON1 = 0x20;
  3035  008BA0  0E20               	movlw	32
  3036  008BA2  6E6C               	movwf	3948,c	;volatile
  3037                           
  3038                           ;spi2.c: 76: SSP2ADD = 0x00;
  3039  008BA4  0E00               	movlw	0
  3040  008BA6  6E6E               	movwf	3950,c	;volatile
  3041  008BA8  0012               	return		;funcret
  3042  008BAA                     __end_of_SPI2_Initialize:
  3043                           	opt stack 0
  3044                           tblptru	equ	0xFF8
  3045                           tblptrh	equ	0xFF7
  3046                           tblptrl	equ	0xFF6
  3047                           tablat	equ	0xFF5
  3048                           intcon	equ	0xFF2
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postdec2	equ	0xFDD
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _PIN_MANAGER_Initialize *****************
  3057 ;; Defined at:
  3058 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    8
  3079 ;; This function calls:
  3080 ;;		_IOCB4_SetInterruptHandler
  3081 ;; This function is called by:
  3082 ;;		_SYSTEM_Initialize
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text4
  3087  007D74                     __ptext4:
  3088                           	opt stack 0
  3089  007D74                     _PIN_MANAGER_Initialize:
  3090                           	opt stack 21
  3091                           
  3092                           ;pin_manager.c: 62: LATE = 0x00;
  3093                           
  3094                           ;incstack = 0
  3095  007D74  0E00               	movlw	0
  3096  007D76  6E8D               	movwf	3981,c	;volatile
  3097                           
  3098                           ;pin_manager.c: 63: LATD = 0x00;
  3099  007D78  0E00               	movlw	0
  3100  007D7A  6E8C               	movwf	3980,c	;volatile
  3101                           
  3102                           ;pin_manager.c: 64: LATA = 0x00;
  3103  007D7C  0E00               	movlw	0
  3104  007D7E  6E89               	movwf	3977,c	;volatile
  3105                           
  3106                           ;pin_manager.c: 65: LATB = 0x00;
  3107  007D80  0E00               	movlw	0
  3108  007D82  6E8A               	movwf	3978,c	;volatile
  3109                           
  3110                           ;pin_manager.c: 66: LATC = 0x00;
  3111  007D84  0E00               	movlw	0
  3112  007D86  6E8B               	movwf	3979,c	;volatile
  3113                           
  3114                           ;pin_manager.c: 71: TRISE = 0x07;
  3115  007D88  0E07               	movlw	7
  3116  007D8A  6E96               	movwf	3990,c	;volatile
  3117                           
  3118                           ;pin_manager.c: 72: TRISA = 0xFF;
  3119  007D8C  6892               	setf	3986,c	;volatile
  3120                           
  3121                           ;pin_manager.c: 73: TRISB = 0xFF;
  3122  007D8E  6893               	setf	3987,c	;volatile
  3123                           
  3124                           ;pin_manager.c: 74: TRISC = 0xFE;
  3125  007D90  0EFE               	movlw	254
  3126  007D92  6E94               	movwf	3988,c	;volatile
  3127                           
  3128                           ;pin_manager.c: 75: TRISD = 0xE6;
  3129  007D94  0EE6               	movlw	230
  3130  007D96  6E95               	movwf	3989,c	;volatile
  3131                           
  3132                           ;pin_manager.c: 80: ANSELD = 0xE4;
  3133  007D98  0EE4               	movlw	228
  3134  007D9A  010F               	movlb	15	; () banked
  3135  007D9C  6F3B               	movwf	59,b	;volatile
  3136                           
  3137                           ;pin_manager.c: 81: ANSELC = 0xF8;
  3138  007D9E  0EF8               	movlw	248
  3139  007DA0  6F3A               	movwf	58,b	;volatile
  3140                           
  3141                           ;pin_manager.c: 82: ANSELB = 0x28;
  3142  007DA2  0E28               	movlw	40
  3143  007DA4  6F39               	movwf	57,b	;volatile
  3144                           
  3145                           ;pin_manager.c: 83: ANSELE = 0x07;
  3146  007DA6  0E07               	movlw	7
  3147  007DA8  6F3C               	movwf	60,b	;volatile
  3148                           
  3149                           ;pin_manager.c: 84: ANSELA = 0x2F;
  3150  007DAA  0E2F               	movlw	47
  3151  007DAC  6F38               	movwf	56,b	;volatile
  3152                           
  3153                           ;pin_manager.c: 89: WPUB = 0x00;
  3154  007DAE  0E00               	movlw	0
  3155  007DB0  6E61               	movwf	3937,c	;volatile
  3156                           
  3157                           ; BSR set to: 15
  3158                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  3159  007DB2  8EF1               	bsf	intcon2,7,c	;volatile
  3160                           
  3161                           ; BSR set to: 15
  3162                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  3163  007DB4  8862               	bsf	3938,4,c	;volatile
  3164                           
  3165                           ; BSR set to: 15
  3166                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3167  007DB6  0ED2               	movlw	low _IOCB4_DefaultInterruptHandler
  3168  007DB8  0100               	movlb	0	; () banked
  3169  007DBA  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3170  007DBC  0E8C               	movlw	high _IOCB4_DefaultInterruptHandler
  3171  007DBE  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3172  007DC0  ECEE  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  3173                           
  3174                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  3175  007DC4  86F2               	bsf	intcon,3,c	;volatile
  3176  007DC6  0012               	return		;funcret
  3177  007DC8                     __end_of_PIN_MANAGER_Initialize:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           intcon	equ	0xFF2
  3184                           intcon2	equ	0xFF1
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec2	equ	0xFDD
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _OSCILLATOR_Initialize *****************
  3193 ;; Defined at:
  3194 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    7
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_SYSTEM_Initialize
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text5
  3223  008BAA                     __ptext5:
  3224                           	opt stack 0
  3225  008BAA                     _OSCILLATOR_Initialize:
  3226                           	opt stack 22
  3227                           
  3228                           ;mcc.c: 65: OSCCON = 0x70;
  3229                           
  3230                           ;incstack = 0
  3231  008BAA  0E70               	movlw	112
  3232  008BAC  6ED3               	movwf	4051,c	;volatile
  3233                           
  3234                           ;mcc.c: 67: OSCCON2 = 0x04;
  3235  008BAE  0E04               	movlw	4
  3236  008BB0  6ED2               	movwf	4050,c	;volatile
  3237                           
  3238                           ;mcc.c: 69: OSCTUNE = 0x00;
  3239  008BB2  0E00               	movlw	0
  3240  008BB4  6E9B               	movwf	3995,c	;volatile
  3241  008BB6  0012               	return		;funcret
  3242  008BB8                     __end_of_OSCILLATOR_Initialize:
  3243                           	opt stack 0
  3244                           tblptru	equ	0xFF8
  3245                           tblptrh	equ	0xFF7
  3246                           tblptrl	equ	0xFF6
  3247                           tablat	equ	0xFF5
  3248                           intcon	equ	0xFF2
  3249                           intcon2	equ	0xFF1
  3250                           postinc0	equ	0xFEE
  3251                           wreg	equ	0xFE8
  3252                           postdec2	equ	0xFDD
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _LORAWAN_PlatformInit *****************
  3258 ;; Defined at:
  3259 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    9
  3280 ;; This function calls:
  3281 ;;		_DIO0_ISR_Lora_Init
  3282 ;;		_DIO1_ISR_Lora_Init
  3283 ;;		_DIO2_ISR_Lora_Init
  3284 ;;		_DIO3_ISR_Lora_Init
  3285 ;;		_DIO4_ISR_Lora_Init
  3286 ;;		_DIO5_ISR_Lora_Init
  3287 ;;		_SystemTimerInit
  3288 ;;		_TMR_ISR_Lora_Init
  3289 ;; This function is called by:
  3290 ;;		_SYSTEM_Initialize
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text6
  3295  00882E                     __ptext6:
  3296                           	opt stack 0
  3297  00882E                     _LORAWAN_PlatformInit:
  3298                           	opt stack 20
  3299                           
  3300                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  3301                           
  3302                           ;incstack = 0
  3303  00882E  ECA6  F045         	call	_TMR_ISR_Lora_Init	;wreg free
  3304                           
  3305                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  3306  008832  ECBE  F045         	call	_DIO0_ISR_Lora_Init	;wreg free
  3307                           
  3308                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  3309  008836  ECB6  F045         	call	_DIO1_ISR_Lora_Init	;wreg free
  3310                           
  3311                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  3312  00883A  ECAE  F045         	call	_DIO2_ISR_Lora_Init	;wreg free
  3313                           
  3314                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  3315  00883E  EC65  F046         	call	_DIO3_ISR_Lora_Init	;wreg free
  3316                           
  3317                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  3318  008842  EC64  F046         	call	_DIO4_ISR_Lora_Init	;wreg free
  3319                           
  3320                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  3321  008846  EC63  F046         	call	_DIO5_ISR_Lora_Init	;wreg free
  3322                           
  3323                           ;lorawan_init.c: 82: SystemTimerInit();
  3324  00884A  EC39  F046         	call	_SystemTimerInit	;wreg free
  3325  00884E  0012               	return		;funcret
  3326  008850                     __end_of_LORAWAN_PlatformInit:
  3327                           	opt stack 0
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           intcon	equ	0xFF2
  3333                           intcon2	equ	0xFF1
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function _TMR_ISR_Lora_Init *****************
  3342 ;; Defined at:
  3343 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    8
  3364 ;; This function calls:
  3365 ;;		_TMR1_SetInterruptHandler
  3366 ;; This function is called by:
  3367 ;;		_LORAWAN_PlatformInit
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text7
  3372  008B4C                     __ptext7:
  3373                           	opt stack 0
  3374  008B4C                     _TMR_ISR_Lora_Init:
  3375                           	opt stack 20
  3376                           
  3377                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3378                           
  3379                           ;incstack = 0
  3380  008B4C  0E1E               	movlw	low _TMR_ISR_lora
  3381  008B4E  0100               	movlb	0	; () banked
  3382  008B50  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3383  008B52  0E7D               	movlw	high _TMR_ISR_lora
  3384  008B54  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3385  008B56  ECE9  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  3386  008B5A  0012               	return		;funcret
  3387  008B5C                     __end_of_TMR_ISR_Lora_Init:
  3388                           	opt stack 0
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           intcon	equ	0xFF2
  3394                           intcon2	equ	0xFF1
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           postdec2	equ	0xFDD
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _TMR1_SetInterruptHandler *****************
  3403 ;; Defined at:
  3404 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3407 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    7
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_TMR_ISR_Lora_Init
  3430 ;;		_TMR1_Initialize
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text8
  3435  008BD2                     __ptext8:
  3436                           	opt stack 0
  3437  008BD2                     _TMR1_SetInterruptHandler:
  3438                           	opt stack 21
  3439                           
  3440                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  3441                           
  3442                           ;incstack = 0
  3443  008BD2  C060  F1F1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3444  008BD6  C061  F1F2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3445  008BDA  0012               	return		;funcret
  3446  008BDC                     __end_of_TMR1_SetInterruptHandler:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           intcon	equ	0xFF2
  3453                           intcon2	equ	0xFF1
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec2	equ	0xFDD
  3457                           fsr2h	equ	0xFDA
  3458                           fsr2l	equ	0xFD9
  3459                           status	equ	0xFD8
  3460                           
  3461 ;; *************** function _SystemTimerInit *****************
  3462 ;; Defined at:
  3463 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    7
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_LORAWAN_PlatformInit
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text9
  3492  008C72                     __ptext9:
  3493                           	opt stack 0
  3494  008C72                     _SystemTimerInit:
  3495                           	opt stack 21
  3496                           
  3497                           ;sw_timer.c: 137: allocatedTimers = 0;
  3498                           
  3499                           ;incstack = 0
  3500  008C72  0E00               	movlw	0
  3501  008C74  0100               	movlb	0	; () banked
  3502  008C76  6FF9               	movwf	_allocatedTimers& (0+255),b	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505  008C78  0012               	return		;funcret
  3506  008C7A                     __end_of_SystemTimerInit:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           intcon	equ	0xFF2
  3513                           intcon2	equ	0xFF1
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           postdec2	equ	0xFDD
  3517                           fsr2h	equ	0xFDA
  3518                           fsr2l	equ	0xFD9
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _DIO5_ISR_Lora_Init *****************
  3522 ;; Defined at:
  3523 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		None
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    7
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_LORAWAN_PlatformInit
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text10
  3552  008CC6                     __ptext10:
  3553                           	opt stack 0
  3554  008CC6                     _DIO5_ISR_Lora_Init:
  3555                           	opt stack 21
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;incstack = 0
  3559  008CC6  0012               	return		;funcret
  3560  008CC8                     __end_of_DIO5_ISR_Lora_Init:
  3561                           	opt stack 0
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           intcon	equ	0xFF2
  3567                           intcon2	equ	0xFF1
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           postdec2	equ	0xFDD
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _DIO4_ISR_Lora_Init *****************
  3576 ;; Defined at:
  3577 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		None
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    7
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_LORAWAN_PlatformInit
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text11
  3606  008CC8                     __ptext11:
  3607                           	opt stack 0
  3608  008CC8                     _DIO4_ISR_Lora_Init:
  3609                           	opt stack 21
  3610                           
  3611                           ;incstack = 0
  3612  008CC8  0012               	return		;funcret
  3613  008CCA                     __end_of_DIO4_ISR_Lora_Init:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           intcon	equ	0xFF2
  3620                           intcon2	equ	0xFF1
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _DIO3_ISR_Lora_Init *****************
  3629 ;; Defined at:
  3630 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		None
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    7
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_LORAWAN_PlatformInit
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text12
  3659  008CCA                     __ptext12:
  3660                           	opt stack 0
  3661  008CCA                     _DIO3_ISR_Lora_Init:
  3662                           	opt stack 21
  3663                           
  3664                           ;incstack = 0
  3665  008CCA  0012               	return		;funcret
  3666  008CCC                     __end_of_DIO3_ISR_Lora_Init:
  3667                           	opt stack 0
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           intcon	equ	0xFF2
  3673                           intcon2	equ	0xFF1
  3674                           postinc0	equ	0xFEE
  3675                           wreg	equ	0xFE8
  3676                           postdec2	equ	0xFDD
  3677                           fsr2h	equ	0xFDA
  3678                           fsr2l	equ	0xFD9
  3679                           status	equ	0xFD8
  3680                           
  3681 ;; *************** function _DIO2_ISR_Lora_Init *****************
  3682 ;; Defined at:
  3683 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    8
  3704 ;; This function calls:
  3705 ;;		_IOCB4_SetInterruptHandler
  3706 ;; This function is called by:
  3707 ;;		_LORAWAN_PlatformInit
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text13
  3712  008B5C                     __ptext13:
  3713                           	opt stack 0
  3714  008B5C                     _DIO2_ISR_Lora_Init:
  3715                           	opt stack 20
  3716                           
  3717                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  3718                           
  3719                           ;incstack = 0
  3720  008B5C  0E9C               	movlw	low _DIO2_ISR_Lora
  3721  008B5E  0100               	movlb	0	; () banked
  3722  008B60  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3723  008B62  0E8C               	movlw	high _DIO2_ISR_Lora
  3724  008B64  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3725  008B66  ECEE  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  3726  008B6A  0012               	return		;funcret
  3727  008B6C                     __end_of_DIO2_ISR_Lora_Init:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           intcon	equ	0xFF2
  3734                           intcon2	equ	0xFF1
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           postdec2	equ	0xFDD
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3743 ;; Defined at:
  3744 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3747 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;Total ram usage:        2 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    7
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_DIO2_ISR_Lora_Init
  3770 ;;		_PIN_MANAGER_Initialize
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text14
  3775  008BDC                     __ptext14:
  3776                           	opt stack 0
  3777  008BDC                     _IOCB4_SetInterruptHandler:
  3778                           	opt stack 21
  3779                           
  3780                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  3781                           
  3782                           ;incstack = 0
  3783  008BDC  C060  F1F5         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3784  008BE0  C061  F1F6         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3785  008BE4  0012               	return		;funcret
  3786  008BE6                     __end_of_IOCB4_SetInterruptHandler:
  3787                           	opt stack 0
  3788                           tblptru	equ	0xFF8
  3789                           tblptrh	equ	0xFF7
  3790                           tblptrl	equ	0xFF6
  3791                           tablat	equ	0xFF5
  3792                           intcon	equ	0xFF2
  3793                           intcon2	equ	0xFF1
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           postdec2	equ	0xFDD
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3802 ;; Defined at:
  3803 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    8
  3824 ;; This function calls:
  3825 ;;		_INT2_SetInterruptHandler
  3826 ;; This function is called by:
  3827 ;;		_LORAWAN_PlatformInit
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text15
  3832  008B6C                     __ptext15:
  3833                           	opt stack 0
  3834  008B6C                     _DIO1_ISR_Lora_Init:
  3835                           	opt stack 20
  3836                           
  3837                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3838                           
  3839                           ;incstack = 0
  3840  008B6C  0EA2               	movlw	low _DIO1_ISR_Lora
  3841  008B6E  0100               	movlb	0	; () banked
  3842  008B70  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3843  008B72  0E8C               	movlw	high _DIO1_ISR_Lora
  3844  008B74  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3845  008B76  ECF3  F045         	call	_INT2_SetInterruptHandler	;wreg free
  3846  008B7A  0012               	return		;funcret
  3847  008B7C                     __end_of_DIO1_ISR_Lora_Init:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           intcon	equ	0xFF2
  3854                           intcon2	equ	0xFF1
  3855                           postinc0	equ	0xFEE
  3856                           wreg	equ	0xFE8
  3857                           postdec2	equ	0xFDD
  3858                           fsr2h	equ	0xFDA
  3859                           fsr2l	equ	0xFD9
  3860                           status	equ	0xFD8
  3861                           
  3862 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3863 ;; Defined at:
  3864 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    8
  3885 ;; This function calls:
  3886 ;;		_INT1_SetInterruptHandler
  3887 ;; This function is called by:
  3888 ;;		_LORAWAN_PlatformInit
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text16
  3893  008B7C                     __ptext16:
  3894                           	opt stack 0
  3895  008B7C                     _DIO0_ISR_Lora_Init:
  3896                           	opt stack 20
  3897                           
  3898                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3899                           
  3900                           ;incstack = 0
  3901  008B7C  0EA8               	movlw	low _DIO0_ISR_Lora
  3902  008B7E  0100               	movlb	0	; () banked
  3903  008B80  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3904  008B82  0E8C               	movlw	high _DIO0_ISR_Lora
  3905  008B84  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3906  008B86  ECF8  F045         	call	_INT1_SetInterruptHandler	;wreg free
  3907  008B8A  0012               	return		;funcret
  3908  008B8C                     __end_of_DIO0_ISR_Lora_Init:
  3909                           	opt stack 0
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           intcon	equ	0xFF2
  3915                           intcon2	equ	0xFF1
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _INTERRUPT_Initialize *****************
  3924 ;; Defined at:
  3925 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		None
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;Total ram usage:        0 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    7
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_SYSTEM_Initialize
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text17
  3954  008CB2                     __ptext17:
  3955                           	opt stack 0
  3956  008CB2                     _INTERRUPT_Initialize:
  3957                           	opt stack 22
  3958                           
  3959                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3960                           
  3961                           ;incstack = 0
  3962  008CB2  9ED0               	bcf	4048,7,c	;volatile
  3963  008CB4  0012               	return		;funcret
  3964  008CB6                     __end_of_INTERRUPT_Initialize:
  3965                           	opt stack 0
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           intcon	equ	0xFF2
  3971                           intcon2	equ	0xFF1
  3972                           postinc0	equ	0xFEE
  3973                           wreg	equ	0xFE8
  3974                           postdec2	equ	0xFDD
  3975                           fsr2h	equ	0xFDA
  3976                           fsr2l	equ	0xFD9
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function _EXT_INT_Initialize *****************
  3980 ;; Defined at:
  3981 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    8
  4002 ;; This function calls:
  4003 ;;		_INT1_SetInterruptHandler
  4004 ;;		_INT2_SetInterruptHandler
  4005 ;; This function is called by:
  4006 ;;		_SYSTEM_Initialize
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text18
  4011  00864C                     __ptext18:
  4012                           	opt stack 0
  4013  00864C                     _EXT_INT_Initialize:
  4014                           	opt stack 21
  4015                           
  4016                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  4017                           
  4018                           ;incstack = 0
  4019  00864C  90F0               	bcf	intcon3,0,c	;volatile
  4020                           
  4021                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  4022  00864E  8AF1               	bsf	intcon2,5,c	;volatile
  4023                           
  4024                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4025  008650  0ED6               	movlw	low _INT1_DefaultInterruptHandler
  4026  008652  0100               	movlb	0	; () banked
  4027  008654  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4028  008656  0E8C               	movlw	high _INT1_DefaultInterruptHandler
  4029  008658  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4030  00865A  ECF8  F045         	call	_INT1_SetInterruptHandler	;wreg free
  4031                           
  4032                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  4033  00865E  86F0               	bsf	intcon3,3,c	;volatile
  4034                           
  4035                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  4036  008660  92F0               	bcf	intcon3,1,c	;volatile
  4037                           
  4038                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  4039  008662  88F1               	bsf	intcon2,4,c	;volatile
  4040                           
  4041                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4042  008664  0ED4               	movlw	low _INT2_DefaultInterruptHandler
  4043  008666  0100               	movlb	0	; () banked
  4044  008668  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4045  00866A  0E8C               	movlw	high _INT2_DefaultInterruptHandler
  4046  00866C  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4047  00866E  ECF3  F045         	call	_INT2_SetInterruptHandler	;wreg free
  4048                           
  4049                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  4050  008672  88F0               	bsf	intcon3,4,c	;volatile
  4051  008674  0012               	return		;funcret
  4052  008676                     __end_of_EXT_INT_Initialize:
  4053                           	opt stack 0
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           intcon3	equ	0xFF0
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           postdec2	equ	0xFDD
  4064                           fsr2h	equ	0xFDA
  4065                           fsr2l	equ	0xFD9
  4066                           status	equ	0xFD8
  4067                           
  4068 ;; *************** function _INT2_SetInterruptHandler *****************
  4069 ;; Defined at:
  4070 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4073 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        2 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    7
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_DIO1_ISR_Lora_Init
  4096 ;;		_EXT_INT_Initialize
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text19
  4101  008BE6                     __ptext19:
  4102                           	opt stack 0
  4103  008BE6                     _INT2_SetInterruptHandler:
  4104                           	opt stack 20
  4105                           
  4106                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  4107                           
  4108                           ;incstack = 0
  4109  008BE6  C060  F1F7         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4110  008BEA  C061  F1F8         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4111  008BEE  0012               	return		;funcret
  4112  008BF0                     __end_of_INT2_SetInterruptHandler:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           intcon	equ	0xFF2
  4119                           intcon2	equ	0xFF1
  4120                           intcon3	equ	0xFF0
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _INT1_SetInterruptHandler *****************
  4129 ;; Defined at:
  4130 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4133 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    7
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_DIO0_ISR_Lora_Init
  4156 ;;		_EXT_INT_Initialize
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text20
  4161  008BF0                     __ptext20:
  4162                           	opt stack 0
  4163  008BF0                     _INT1_SetInterruptHandler:
  4164                           	opt stack 20
  4165                           
  4166                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  4167                           
  4168                           ;incstack = 0
  4169  008BF0  C060  F1F9         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4170  008BF4  C061  F1FA         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4171  008BF8  0012               	return		;funcret
  4172  008BFA                     __end_of_INT1_SetInterruptHandler:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           intcon	equ	0xFF2
  4179                           intcon2	equ	0xFF1
  4180                           intcon3	equ	0xFF0
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           postdec2	equ	0xFDD
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  4189 ;; Defined at:
  4190 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  4193 ;;		 -> nwkSKey(16), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    8
  4212 ;; This function calls:
  4213 ;;		_memcpy
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text21
  4220  00850C                     __ptext21:
  4221                           	opt stack 0
  4222  00850C                     _LORAWAN_SetNetworkSessionKey:
  4223                           	opt stack 22
  4224                           
  4225                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  4226                           
  4227                           ;incstack = 0
  4228  00850C  0100               	movlb	0	; () banked
  4229  00850E  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  4230  008510  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  4231  008512  B4D8               	btfsc	status,2,c
  4232  008514  0012               	return	
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;lorawan.c: 382: {
  4236                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  4237  008516  0E22               	movlw	low (_loRa+34)
  4238  008518  6F60               	movwf	memcpy@d1& (0+255),b
  4239  00851A  0E02               	movlw	high (_loRa+34)
  4240  00851C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4241  00851E  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  4242  008522  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  4243  008526  0E00               	movlw	0
  4244  008528  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4245  00852A  0E10               	movlw	16
  4246  00852C  6F64               	movwf	memcpy@n& (0+255),b
  4247  00852E  EC22  F03D         	call	_memcpy	;wreg free
  4248                           
  4249                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  4250  008532  0102               	movlb	2	; () banked
  4251  008534  89A5               	bsf	(_loRa+165)& (0+255),4,b
  4252                           
  4253                           ; BSR set to: 2
  4254                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  4255  008536  9902               	bcf	(_loRa+2)& (0+255),4,b
  4256  008538  0012               	return	
  4257  00853A                     __end_of_LORAWAN_SetNetworkSessionKey:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           intcon	equ	0xFF2
  4264                           intcon2	equ	0xFF1
  4265                           intcon3	equ	0xFF0
  4266                           postinc0	equ	0xFEE
  4267                           wreg	equ	0xFE8
  4268                           postdec2	equ	0xFDD
  4269                           fsr2h	equ	0xFDA
  4270                           fsr2l	equ	0xFD9
  4271                           status	equ	0xFD8
  4272                           
  4273 ;; *************** function _LORAWAN_SetDeviceEui *****************
  4274 ;; Defined at:
  4275 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
  4278 ;;		 -> deviceEUI(8), 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;Total ram usage:        2 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    8
  4297 ;; This function calls:
  4298 ;;		_memcpy
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text22
  4305  00853A                     __ptext22:
  4306                           	opt stack 0
  4307  00853A                     _LORAWAN_SetDeviceEui:
  4308                           	opt stack 22
  4309                           
  4310                           ;lorawan.c: 339: if (deviceEuiNew != (0))
  4311                           
  4312                           ;incstack = 0
  4313  00853A  0100               	movlb	0	; () banked
  4314  00853C  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
  4315  00853E  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
  4316  008540  B4D8               	btfsc	status,2,c
  4317  008542  0012               	return	
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;lorawan.c: 340: {
  4321                           ;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, deviceEuiNew, sizeof
      +                          (loRa.activationParameters.deviceEui) );
  4322  008544  0E5A               	movlw	low (_loRa+90)
  4323  008546  6F60               	movwf	memcpy@d1& (0+255),b
  4324  008548  0E02               	movlw	high (_loRa+90)
  4325  00854A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4326  00854C  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
  4327  008550  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
  4328  008554  0E00               	movlw	0
  4329  008556  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4330  008558  0E08               	movlw	8
  4331  00855A  6F64               	movwf	memcpy@n& (0+255),b
  4332  00855C  EC22  F03D         	call	_memcpy	;wreg free
  4333                           
  4334                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
  4335  008560  0102               	movlb	2	; () banked
  4336  008562  81A5               	bsf	(_loRa+165)& (0+255),0,b
  4337                           
  4338                           ; BSR set to: 2
  4339                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
  4340  008564  9902               	bcf	(_loRa+2)& (0+255),4,b
  4341  008566  0012               	return	
  4342  008568                     __end_of_LORAWAN_SetDeviceEui:
  4343                           	opt stack 0
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           intcon	equ	0xFF2
  4349                           intcon2	equ	0xFF1
  4350                           intcon3	equ	0xFF0
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           postdec2	equ	0xFDD
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  4359 ;; Defined at:
  4360 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		None
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        4 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    7
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text23
  4389  008A7C                     __ptext23:
  4390                           	opt stack 0
  4391  008A7C                     _LORAWAN_SetDeviceAddress:
  4392                           	opt stack 23
  4393                           
  4394                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  4395                           
  4396                           ;incstack = 0
  4397  008A7C  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  4398  008A80  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  4399  008A84  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  4400  008A88  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  4401                           
  4402                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  4403  008A8C  0102               	movlb	2	; () banked
  4404  008A8E  85A5               	bsf	(_loRa+165)& (0+255),2,b
  4405                           
  4406                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  4407  008A90  9902               	bcf	(_loRa+2)& (0+255),4,b
  4408                           
  4409                           ; BSR set to: 2
  4410  008A92  0012               	return		;funcret
  4411  008A94                     __end_of_LORAWAN_SetDeviceAddress:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           intcon	equ	0xFF2
  4418                           intcon2	equ	0xFF1
  4419                           intcon3	equ	0xFF0
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postdec2	equ	0xFDD
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  4428 ;; Defined at:
  4429 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  4432 ;;		 -> appSKey(16), 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    8
  4451 ;; This function calls:
  4452 ;;		_memcpy
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text24
  4459  008568                     __ptext24:
  4460                           	opt stack 0
  4461  008568                     _LORAWAN_SetApplicationSessionKey:
  4462                           	opt stack 22
  4463                           
  4464                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  4465                           
  4466                           ; BSR set to: 2
  4467                           ;incstack = 0
  4468  008568  0100               	movlb	0	; () banked
  4469  00856A  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  4470  00856C  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  4471  00856E  B4D8               	btfsc	status,2,c
  4472  008570  0012               	return	
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;lorawan.c: 397: {
  4476                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  4477  008572  0E32               	movlw	low (_loRa+50)
  4478  008574  6F60               	movwf	memcpy@d1& (0+255),b
  4479  008576  0E02               	movlw	high (_loRa+50)
  4480  008578  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4481  00857A  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  4482  00857E  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  4483  008582  0E00               	movlw	0
  4484  008584  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4485  008586  0E10               	movlw	16
  4486  008588  6F64               	movwf	memcpy@n& (0+255),b
  4487  00858A  EC22  F03D         	call	_memcpy	;wreg free
  4488                           
  4489                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  4490  00858E  0102               	movlb	2	; () banked
  4491  008590  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  4492                           
  4493                           ; BSR set to: 2
  4494                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  4495  008592  9902               	bcf	(_loRa+2)& (0+255),4,b
  4496  008594  0012               	return	
  4497  008596                     __end_of_LORAWAN_SetApplicationSessionKey:
  4498                           	opt stack 0
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           intcon	equ	0xFF2
  4504                           intcon2	equ	0xFF1
  4505                           intcon3	equ	0xFF0
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           postdec2	equ	0xFDD
  4509                           fsr2h	equ	0xFDA
  4510                           fsr2l	equ	0xFD9
  4511                           status	equ	0xFD8
  4512                           
  4513 ;; *************** function _LORAWAN_SetApplicationKey *****************
  4514 ;; Defined at:
  4515 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
  4518 ;;		 -> applicationKey(16), 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    8
  4537 ;; This function calls:
  4538 ;;		_memcpy
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text25
  4545  008596                     __ptext25:
  4546                           	opt stack 0
  4547  008596                     _LORAWAN_SetApplicationKey:
  4548                           	opt stack 22
  4549                           
  4550                           ;lorawan.c: 411: if (applicationKeyNew != (0))
  4551                           
  4552                           ;incstack = 0
  4553  008596  0100               	movlb	0	; () banked
  4554  008598  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
  4555  00859A  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
  4556  00859C  B4D8               	btfsc	status,2,c
  4557  00859E  0012               	return	
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;lorawan.c: 412: {
  4561                           ;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, applicationKeyNew, 16
      +                          );
  4562  0085A0  0E42               	movlw	low (_loRa+66)
  4563  0085A2  6F60               	movwf	memcpy@d1& (0+255),b
  4564  0085A4  0E02               	movlw	high (_loRa+66)
  4565  0085A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4566  0085A8  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
  4567  0085AC  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
  4568  0085B0  0E00               	movlw	0
  4569  0085B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4570  0085B4  0E10               	movlw	16
  4571  0085B6  6F64               	movwf	memcpy@n& (0+255),b
  4572  0085B8  EC22  F03D         	call	_memcpy	;wreg free
  4573                           
  4574                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
  4575  0085BC  0102               	movlb	2	; () banked
  4576  0085BE  87A5               	bsf	(_loRa+165)& (0+255),3,b
  4577                           
  4578                           ; BSR set to: 2
  4579                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
  4580  0085C0  9902               	bcf	(_loRa+2)& (0+255),4,b
  4581  0085C2  0012               	return	
  4582  0085C4                     __end_of_LORAWAN_SetApplicationKey:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           intcon3	equ	0xFF0
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec2	equ	0xFDD
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _LORAWAN_SetApplicationEui *****************
  4599 ;; Defined at:
  4600 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
  4603 ;;		 -> applicationEUI(8), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    8
  4622 ;; This function calls:
  4623 ;;		_memcpy
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text26
  4630  0085C4                     __ptext26:
  4631                           	opt stack 0
  4632  0085C4                     _LORAWAN_SetApplicationEui:
  4633                           	opt stack 22
  4634                           
  4635                           ;lorawan.c: 354: if (applicationEuiNew != (0))
  4636                           
  4637                           ;incstack = 0
  4638  0085C4  0100               	movlb	0	; () banked
  4639  0085C6  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
  4640  0085C8  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
  4641  0085CA  B4D8               	btfsc	status,2,c
  4642  0085CC  0012               	return	
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;lorawan.c: 355: {
  4646                           ;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffer, applicationEuiN
      +                          ew, 8);
  4647  0085CE  0E52               	movlw	low (_loRa+82)
  4648  0085D0  6F60               	movwf	memcpy@d1& (0+255),b
  4649  0085D2  0E02               	movlw	high (_loRa+82)
  4650  0085D4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4651  0085D6  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
  4652  0085DA  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
  4653  0085DE  0E00               	movlw	0
  4654  0085E0  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4655  0085E2  0E08               	movlw	8
  4656  0085E4  6F64               	movwf	memcpy@n& (0+255),b
  4657  0085E6  EC22  F03D         	call	_memcpy	;wreg free
  4658                           
  4659                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
  4660  0085EA  0102               	movlb	2	; () banked
  4661  0085EC  83A5               	bsf	(_loRa+165)& (0+255),1,b
  4662                           
  4663                           ; BSR set to: 2
  4664                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
  4665  0085EE  9902               	bcf	(_loRa+2)& (0+255),4,b
  4666  0085F0  0012               	return	
  4667  0085F2                     __end_of_LORAWAN_SetApplicationEui:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           intcon	equ	0xFF2
  4674                           intcon2	equ	0xFF1
  4675                           intcon3	equ	0xFF0
  4676                           postinc0	equ	0xFEE
  4677                           wreg	equ	0xFE8
  4678                           postdec2	equ	0xFDD
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8
  4682                           
  4683 ;; *************** function _LORAWAN_Mainloop *****************
  4684 ;; Defined at:
  4685 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:   18
  4706 ;; This function calls:
  4707 ;;		_INTERRUPT_GetDioStatus
  4708 ;;		_RADIO_DIO0
  4709 ;;		_RADIO_DIO1
  4710 ;;		_RADIO_DIO2
  4711 ;;		_RADIO_DIO3
  4712 ;;		_RADIO_DIO4
  4713 ;;		_RADIO_DIO5
  4714 ;;		_SwTimersExecute
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text27
  4721  0082D6                     __ptext27:
  4722                           	opt stack 0
  4723  0082D6                     _LORAWAN_Mainloop:
  4724                           	opt stack 12
  4725                           
  4726                           ;lorawan.c: 2240: SwTimersExecute();
  4727                           
  4728                           ;incstack = 0
  4729  0082D6  EC4D  F031         	call	_SwTimersExecute	;wreg free
  4730                           
  4731                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  4732  0082DA  EC77  F045         	call	_INTERRUPT_GetDioStatus	;wreg free
  4733  0082DE  0101               	movlb	1	; () banked
  4734  0082E0  6F78               	movwf	_localDioStatus& (0+255),b
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  4738  0082E2  B178               	btfsc	_localDioStatus& (0+255),0,b
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;lorawan.c: 2246: {
  4742                           ;lorawan.c: 2247: RADIO_DIO0();
  4743  0082E4  EC97  F037         	call	_RADIO_DIO0	;wreg free
  4744                           
  4745                           ;lorawan.c: 2248: }
  4746                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  4747  0082E8  0101               	movlb	1	; () banked
  4748  0082EA  B378               	btfsc	_localDioStatus& (0+255),1,b
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;lorawan.c: 2250: {
  4752                           ;lorawan.c: 2251: RADIO_DIO1();
  4753  0082EC  EC89  F03F         	call	_RADIO_DIO1	;wreg free
  4754                           
  4755                           ;lorawan.c: 2252: }
  4756                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  4757  0082F0  0101               	movlb	1	; () banked
  4758  0082F2  B578               	btfsc	_localDioStatus& (0+255),2,b
  4759                           
  4760                           ; BSR set to: 1
  4761                           ;lorawan.c: 2254: {
  4762                           ;lorawan.c: 2255: RADIO_DIO2();
  4763  0082F4  EC64  F03E         	call	_RADIO_DIO2	;wreg free
  4764                           
  4765                           ;lorawan.c: 2256: }
  4766                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  4767  0082F8  0101               	movlb	1	; () banked
  4768  0082FA  B778               	btfsc	_localDioStatus& (0+255),3,b
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;lorawan.c: 2258: {
  4772                           ;lorawan.c: 2259: RADIO_DIO3();
  4773  0082FC  EC28  F044         	call	_RADIO_DIO3	;wreg free
  4774                           
  4775                           ;lorawan.c: 2260: }
  4776                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  4777  008300  0101               	movlb	1	; () banked
  4778  008302  B978               	btfsc	_localDioStatus& (0+255),4,b
  4779                           
  4780                           ; BSR set to: 1
  4781                           ;lorawan.c: 2262: {
  4782                           ;lorawan.c: 2263: RADIO_DIO4();
  4783  008304  ECC3  F041         	call	_RADIO_DIO4	;wreg free
  4784                           
  4785                           ;lorawan.c: 2264: }
  4786                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  4787  008308  0101               	movlb	1	; () banked
  4788  00830A  AB78               	btfss	_localDioStatus& (0+255),5,b
  4789  00830C  0012               	return	
  4790                           
  4791                           ; BSR set to: 1
  4792                           ;lorawan.c: 2266: {
  4793                           ;lorawan.c: 2267: RADIO_DIO5();
  4794  00830E  EC8E  F043         	call	_RADIO_DIO5	;wreg free
  4795  008312  0012               	return	
  4796  008314                     __end_of_LORAWAN_Mainloop:
  4797                           	opt stack 0
  4798                           tblptru	equ	0xFF8
  4799                           tblptrh	equ	0xFF7
  4800                           tblptrl	equ	0xFF6
  4801                           tablat	equ	0xFF5
  4802                           intcon	equ	0xFF2
  4803                           intcon2	equ	0xFF1
  4804                           intcon3	equ	0xFF0
  4805                           postinc0	equ	0xFEE
  4806                           wreg	equ	0xFE8
  4807                           postdec2	equ	0xFDD
  4808                           fsr2h	equ	0xFDA
  4809                           fsr2l	equ	0xFD9
  4810                           status	equ	0xFD8
  4811                           
  4812 ;; *************** function _SwTimersExecute *****************
  4813 ;; Defined at:
  4814 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  i               1  126[BANK0 ] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        5 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:   17
  4835 ;; This function calls:
  4836 ;;		Absolute function
  4837 ;;		_AckRetransmissionCallback
  4838 ;;		_AutomaticReplyCallback
  4839 ;;		_DutyCycleCallback
  4840 ;;		_LORAWAN_LinkCheckCallback
  4841 ;;		_LORAWAN_ReceiveWindow1Callback
  4842 ;;		_LORAWAN_ReceiveWindow2Callback
  4843 ;;		_RADIO_RxFSKTimeout
  4844 ;;		_RADIO_WatchdogTimeout
  4845 ;;		_UnconfirmedTransmissionCallback
  4846 ;;		_UpdateJoinSuccessState
  4847 ;; This function is called by:
  4848 ;;		_LORAWAN_Mainloop
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text28
  4853  00629A                     __ptext28:
  4854                           	opt stack 0
  4855  00629A                     _SwTimersExecute:
  4856                           	opt stack 12
  4857                           
  4858                           ;sw_timer.c: 262: uint8_t i;
  4859                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  4860                           
  4861                           ;incstack = 0
  4862  00629A  9EF2               	bcf	intcon,7,c	;volatile
  4863                           
  4864                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  4865  00629C  0E00               	movlw	0
  4866  00629E  0100               	movlb	0	; () banked
  4867  0062A0  6FDE               	movwf	SwTimersExecute@i& (0+255),b
  4868  0062A2  D068               	goto	l319
  4869  0062A4                     
  4870                           ; BSR set to: 0
  4871                           ;sw_timer.c: 266: {
  4872                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  4873                           
  4874                           ; BSR set to: 0
  4875  0062A4  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4876  0062A6  0D08               	mullw	8
  4877  0062A8  0E04               	movlw	4
  4878  0062AA  26F3               	addwf	prodl,f,c
  4879  0062AC  0E00               	movlw	0
  4880  0062AE  22F4               	addwfc	prodh,f,c
  4881  0062B0  0E00               	movlw	low _swTimers
  4882  0062B2  24F3               	addwf	prodl,w,c
  4883  0062B4  6ED9               	movwf	fsr2l,c
  4884  0062B6  0E03               	movlw	high _swTimers
  4885  0062B8  20F4               	addwfc	prodh,w,c
  4886  0062BA  6EDA               	movwf	fsr2h,c
  4887  0062BC  04DE               	decf	postinc2,w,c
  4888  0062BE  A4D8               	btfss	status,2,c
  4889  0062C0  D057               	goto	l323
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;sw_timer.c: 270: {
  4893                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  4894  0062C2  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4895  0062C4  0D08               	mullw	8
  4896  0062C6  0E00               	movlw	low _swTimers
  4897  0062C8  24F3               	addwf	prodl,w,c
  4898  0062CA  6ED9               	movwf	fsr2l,c
  4899  0062CC  0E03               	movlw	high _swTimers
  4900  0062CE  20F4               	addwfc	prodh,w,c
  4901  0062D0  6EDA               	movwf	fsr2h,c
  4902  0062D2  50DE               	movf	postinc2,w,c
  4903  0062D4  10DE               	iorwf	postinc2,w,c
  4904  0062D6  10DE               	iorwf	postinc2,w,c
  4905  0062D8  10DE               	iorwf	postinc2,w,c
  4906  0062DA  A4D8               	btfss	status,2,c
  4907  0062DC  D049               	goto	l323
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;sw_timer.c: 272: {
  4911                           ;sw_timer.c: 273: swTimers[i].running = 0;
  4912  0062DE  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4913  0062E0  0D08               	mullw	8
  4914  0062E2  0E04               	movlw	4
  4915  0062E4  26F3               	addwf	prodl,f,c
  4916  0062E6  0E00               	movlw	0
  4917  0062E8  22F4               	addwfc	prodh,f,c
  4918  0062EA  0E00               	movlw	low _swTimers
  4919  0062EC  24F3               	addwf	prodl,w,c
  4920  0062EE  6ED9               	movwf	fsr2l,c
  4921  0062F0  0E03               	movlw	high _swTimers
  4922  0062F2  20F4               	addwfc	prodh,w,c
  4923  0062F4  6EDA               	movwf	fsr2h,c
  4924  0062F6  0E00               	movlw	0
  4925  0062F8  6EDF               	movwf	indf2,c
  4926                           
  4927                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  4928  0062FA  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4929  0062FC  0D08               	mullw	8
  4930  0062FE  0E06               	movlw	6
  4931  006300  26F3               	addwf	prodl,f,c
  4932  006302  0E00               	movlw	0
  4933  006304  22F4               	addwfc	prodh,f,c
  4934  006306  0E00               	movlw	low _swTimers
  4935  006308  24F3               	addwf	prodl,w,c
  4936  00630A  6ED9               	movwf	fsr2l,c
  4937  00630C  0E03               	movlw	high _swTimers
  4938  00630E  20F4               	addwfc	prodh,w,c
  4939  006310  6EDA               	movwf	fsr2h,c
  4940  006312  50DE               	movf	postinc2,w,c
  4941  006314  10DE               	iorwf	postinc2,w,c
  4942  006316  B4D8               	btfsc	status,2,c
  4943  006318  D02B               	goto	l323
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;sw_timer.c: 275: {
  4947                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  4948  00631A  8EF2               	bsf	intcon,7,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  4952  00631C  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4953  00631E  0D08               	mullw	8
  4954  006320  0E05               	movlw	5
  4955  006322  26F3               	addwf	prodl,f,c
  4956  006324  0E00               	movlw	0
  4957  006326  22F4               	addwfc	prodh,f,c
  4958  006328  0E00               	movlw	low _swTimers
  4959  00632A  24F3               	addwf	prodl,w,c
  4960  00632C  6ED9               	movwf	fsr2l,c
  4961  00632E  0E03               	movlw	high _swTimers
  4962  006330  20F4               	addwfc	prodh,w,c
  4963  006332  6EDA               	movwf	fsr2h,c
  4964  006334  50DF               	movf	indf2,w,c
  4965  006336  6EE6               	movwf	postinc1,c
  4966  006338  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4967  00633A  0D08               	mullw	8
  4968  00633C  0E06               	movlw	6
  4969  00633E  26F3               	addwf	prodl,f,c
  4970  006340  0E00               	movlw	0
  4971  006342  22F4               	addwfc	prodh,f,c
  4972  006344  0E00               	movlw	low _swTimers
  4973  006346  24F3               	addwf	prodl,w,c
  4974  006348  6ED9               	movwf	fsr2l,c
  4975  00634A  0E03               	movlw	high _swTimers
  4976  00634C  20F4               	addwfc	prodh,w,c
  4977  00634E  6EDA               	movwf	fsr2h,c
  4978  006350  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
  4979  006354  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
  4980  006358  D801               	call	u21528
  4981  00635A  D009               	goto	u21529
  4982  00635C                     u21528:
  4983  00635C  0005               	push	
  4984  00635E  6EFA               	movwf	pclath,c
  4985  006360  51DA               	movf	??_SwTimersExecute& (0+255),w,b
  4986  006362  6EFD               	movwf	tosl,c
  4987  006364  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  4988  006366  6EFE               	movwf	tosh,c
  4989  006368  6AFF               	clrf	tosu,c
  4990  00636A  50FA               	movf	pclath,w,c
  4991  00636C  0012               	return		;indir
  4992  00636E                     u21529:
  4993                           
  4994                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  4995  00636E  9EF2               	bcf	intcon,7,c	;volatile
  4996  006370                     l323:
  4997  006370  0100               	movlb	0	; () banked
  4998  006372  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
  4999  006374                     l319:
  5000                           
  5001                           ; BSR set to: 0
  5002                           
  5003                           ; BSR set to: 0
  5004  006374  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5005  006376  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
  5006  006378  A0D8               	btfss	status,0,c
  5007  00637A  D794               	goto	l320
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;sw_timer.c: 279: }
  5011                           ;sw_timer.c: 280: }
  5012                           ;sw_timer.c: 281: }
  5013                           ;sw_timer.c: 282: }
  5014                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5015  00637C  8EF2               	bsf	intcon,7,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018  00637E  0012               	return		;funcret
  5019  006380                     __end_of_SwTimersExecute:
  5020                           	opt stack 0
  5021                           tosu	equ	0xFFF
  5022                           tosh	equ	0xFFE
  5023                           tosl	equ	0xFFD
  5024                           pclath	equ	0xFFA
  5025                           tblptru	equ	0xFF8
  5026                           tblptrh	equ	0xFF7
  5027                           tblptrl	equ	0xFF6
  5028                           tablat	equ	0xFF5
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           intcon	equ	0xFF2
  5032                           intcon2	equ	0xFF1
  5033                           intcon3	equ	0xFF0
  5034                           postinc0	equ	0xFEE
  5035                           wreg	equ	0xFE8
  5036                           postinc1	equ	0xFE6
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044 ;; *************** function _DutyCycleCallback *****************
  5045 ;; Defined at:
  5046 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  param           1  [STACK] unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  minim           4  [STACK] unsigned long 
  5051 ;;  i               1  [STACK] unsigned char 
  5052 ;;  found           1  [STACK] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1  [STACK] void 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 3F/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:   11
  5069 ;; This function calls:
  5070 ;;		_SwTimerSetTimeout
  5071 ;;		_SwTimerStart
  5072 ;;		___lldiv
  5073 ;; This function is called by:
  5074 ;;		_SetCallbackSoftwareTimers
  5075 ;;		_SwTimersExecute
  5076 ;; This function uses a reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text29
  5080  002C48                     __ptext29:
  5081                           	opt stack 0
  5082  002C48                     _DutyCycleCallback:
  5083                           	opt stack 0
  5084                           
  5085                           ; BSR set to: 0
  5086                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5087  002C48  0E0A               	movlw	10
  5088  002C4A  26E1               	addwf	fsr1l,f,c
  5089  002C4C  0E00               	movlw	0
  5090  002C4E  22E2               	addwfc	fsr1h,f,c
  5091                           
  5092                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5093                           
  5094                           ;incstack = 0
  5095  002C50  0EFF               	movlw	255
  5096  002C52  6E50               	movwf	btemp+8,c
  5097  002C54  0EFF               	movlw	255
  5098  002C56  6E51               	movwf	btemp+9,c
  5099  002C58  0EFF               	movlw	255
  5100  002C5A  6E52               	movwf	btemp+10,c
  5101  002C5C  0EFF               	movlw	255
  5102  002C5E  6E53               	movwf	btemp+11,c
  5103                           
  5104                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5105  002C60  0EFA               	movlw	-6
  5106  002C62  C050  FFE3         	movff	btemp+8,plusw1
  5107  002C66  0EFB               	movlw	-5
  5108  002C68  C051  FFE3         	movff	btemp+9,plusw1
  5109  002C6C  0EFC               	movlw	-4
  5110  002C6E  C052  FFE3         	movff	btemp+10,plusw1
  5111  002C72  0EFD               	movlw	-3
  5112  002C74  C053  FFE3         	movff	btemp+11,plusw1
  5113                           
  5114                           ;lorawan_eu.c: 1224: bool found = 0;
  5115                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5116  002C78  0EFF               	movlw	-1
  5117  002C7A  6AE3               	clrf	plusw1,c
  5118                           
  5119                           ;lorawan_eu.c: 1225: uint8_t i;
  5120                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5121                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5122  002C7C  0EFE               	movlw	-2
  5123  002C7E  6AE3               	clrf	plusw1,c
  5124  002C80                     l15807:
  5125                           
  5126                           ;lorawan_eu.c: 1228: {
  5127                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5128                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5129  002C80  0EFE               	movlw	-2
  5130  002C82  50E3               	movf	plusw1,w,c
  5131  002C84  0D0E               	mullw	14
  5132  002C86  0E04               	movlw	low (_Channels+4)
  5133  002C88  24F3               	addwf	prodl,w,c
  5134  002C8A  6ED9               	movwf	fsr2l,c
  5135  002C8C  0E04               	movlw	high (_Channels+4)
  5136  002C8E  20F4               	addwfc	prodh,w,c
  5137  002C90  6EDA               	movwf	fsr2h,c
  5138  002C92  04DE               	decf	postinc2,w,c
  5139  002C94  A4D8               	btfss	status,2,c
  5140  002C96  D0AD               	goto	l15825
  5141                           
  5142                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5143  002C98  0EFE               	movlw	-2
  5144  002C9A  50E3               	movf	plusw1,w,c
  5145  002C9C  0D0E               	mullw	14
  5146  002C9E  0E08               	movlw	low (_Channels+8)
  5147  002CA0  24F3               	addwf	prodl,w,c
  5148  002CA2  6ED9               	movwf	fsr2l,c
  5149  002CA4  0E04               	movlw	high (_Channels+8)
  5150  002CA6  20F4               	addwfc	prodh,w,c
  5151  002CA8  6EDA               	movwf	fsr2h,c
  5152  002CAA  50DE               	movf	postinc2,w,c
  5153  002CAC  10DE               	iorwf	postinc2,w,c
  5154  002CAE  10DE               	iorwf	postinc2,w,c
  5155  002CB0  10DE               	iorwf	postinc2,w,c
  5156  002CB2  B4D8               	btfsc	status,2,c
  5157  002CB4  D09E               	goto	l15825
  5158                           
  5159                           ;lorawan_eu.c: 1231: {
  5160                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5161                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5162  002CB6  0EFE               	movlw	-2
  5163  002CB8  50E3               	movf	plusw1,w,c
  5164  002CBA  0D0E               	mullw	14
  5165  002CBC  0E08               	movlw	low (_Channels+8)
  5166  002CBE  24F3               	addwf	prodl,w,c
  5167  002CC0  6ED9               	movwf	fsr2l,c
  5168  002CC2  0E04               	movlw	high (_Channels+8)
  5169  002CC4  20F4               	addwfc	prodh,w,c
  5170  002CC6  6EDA               	movwf	fsr2h,c
  5171  002CC8  50DE               	movf	postinc2,w,c
  5172  002CCA  0102               	movlb	2	; () banked
  5173  002CCC  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5174  002CCE  50DE               	movf	postinc2,w,c
  5175  002CD0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5176  002CD2  50DE               	movf	postinc2,w,c
  5177  002CD4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5178  002CD6  50DE               	movf	postinc2,w,c
  5179  002CD8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5180  002CDA  B0D8               	btfsc	status,0,c
  5181  002CDC  D02F               	goto	l15815
  5182                           
  5183                           ; BSR set to: 2
  5184                           ;lorawan_eu.c: 1233: {
  5185                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5186                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5187  002CDE  0EFE               	movlw	-2
  5188  002CE0  50E3               	movf	plusw1,w,c
  5189  002CE2  0D0E               	mullw	14
  5190  002CE4  0E08               	movlw	low (_Channels+8)
  5191  002CE6  24F3               	addwf	prodl,w,c
  5192  002CE8  6ED9               	movwf	fsr2l,c
  5193  002CEA  0E04               	movlw	high (_Channels+8)
  5194  002CEC  20F4               	addwfc	prodh,w,c
  5195  002CEE  6EDA               	movwf	fsr2h,c
  5196  002CF0  CFDE F050          	movff	postinc2,btemp+8
  5197  002CF4  CFDE F051          	movff	postinc2,btemp+9
  5198  002CF8  CFDE F052          	movff	postinc2,btemp+10
  5199  002CFC  CFDE F053          	movff	postinc2,btemp+11
  5200  002D00  51C8               	movf	(_loRa+200)& (0+255),w,b
  5201  002D02  5C50               	subwf	btemp+8,w,c
  5202  002D04  6E4C               	movwf	btemp+4,c
  5203  002D06  51C9               	movf	(_loRa+201)& (0+255),w,b
  5204  002D08  5851               	subwfb	btemp+9,w,c
  5205  002D0A  6E4D               	movwf	btemp+5,c
  5206  002D0C  51CA               	movf	(_loRa+202)& (0+255),w,b
  5207  002D0E  5852               	subwfb	btemp+10,w,c
  5208  002D10  6E4E               	movwf	btemp+6,c
  5209  002D12  51CB               	movf	(_loRa+203)& (0+255),w,b
  5210  002D14  5853               	subwfb	btemp+11,w,c
  5211  002D16  6E4F               	movwf	btemp+7,c
  5212                           
  5213                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5214  002D18  0EFE               	movlw	-2
  5215  002D1A  50E3               	movf	plusw1,w,c
  5216  002D1C  0D0E               	mullw	14
  5217  002D1E  0E08               	movlw	low (_Channels+8)
  5218  002D20  24F3               	addwf	prodl,w,c
  5219  002D22  6ED9               	movwf	fsr2l,c
  5220  002D24  0E04               	movlw	high (_Channels+8)
  5221  002D26  20F4               	addwfc	prodh,w,c
  5222  002D28  6EDA               	movwf	fsr2h,c
  5223  002D2A  C04C  FFDE         	movff	btemp+4,postinc2
  5224  002D2E  C04D  FFDE         	movff	btemp+5,postinc2
  5225  002D32  C04E  FFDE         	movff	btemp+6,postinc2
  5226  002D36  C04F  FFDE         	movff	btemp+7,postinc2
  5227                           
  5228                           ;lorawan_eu.c: 1235: }
  5229  002D3A  D00D               	goto	l15817
  5230  002D3C                     l15815:
  5231                           
  5232                           ; BSR set to: 2
  5233                           ;lorawan_eu.c: 1236: else
  5234                           ;lorawan_eu.c: 1237: {
  5235                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5236                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5237  002D3C  0EFE               	movlw	-2
  5238  002D3E  50E3               	movf	plusw1,w,c
  5239  002D40  0D0E               	mullw	14
  5240  002D42  0E08               	movlw	low (_Channels+8)
  5241  002D44  24F3               	addwf	prodl,w,c
  5242  002D46  6ED9               	movwf	fsr2l,c
  5243  002D48  0E04               	movlw	high (_Channels+8)
  5244  002D4A  20F4               	addwfc	prodh,w,c
  5245  002D4C  6EDA               	movwf	fsr2h,c
  5246  002D4E  6ADE               	clrf	postinc2,c
  5247  002D50  6ADE               	clrf	postinc2,c
  5248  002D52  6ADE               	clrf	postinc2,c
  5249  002D54  6ADD               	clrf	postdec2,c
  5250  002D56                     l15817:
  5251                           
  5252                           ; BSR set to: 2
  5253                           ;lorawan_eu.c: 1239: }
  5254                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5255                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5256  002D56  0EFE               	movlw	-2
  5257  002D58  50E3               	movf	plusw1,w,c
  5258  002D5A  0D0E               	mullw	14
  5259  002D5C  0E08               	movlw	low (_Channels+8)
  5260  002D5E  24F3               	addwf	prodl,w,c
  5261  002D60  6ED9               	movwf	fsr2l,c
  5262  002D62  0E04               	movlw	high (_Channels+8)
  5263  002D64  20F4               	addwfc	prodh,w,c
  5264  002D66  6EDA               	movwf	fsr2h,c
  5265                           
  5266                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5267  002D68  0EFA               	movlw	-6
  5268  002D6A  CFE3 F048          	movff	plusw1,btemp
  5269  002D6E  50DE               	movf	postinc2,w,c
  5270  002D70  5C48               	subwf	btemp,w,c
  5271  002D72  0EFB               	movlw	-5
  5272  002D74  CFE3 F048          	movff	plusw1,btemp
  5273  002D78  50DE               	movf	postinc2,w,c
  5274  002D7A  5848               	subwfb	btemp,w,c
  5275  002D7C  0EFC               	movlw	-4
  5276  002D7E  CFE3 F048          	movff	plusw1,btemp
  5277  002D82  50DE               	movf	postinc2,w,c
  5278  002D84  5848               	subwfb	btemp,w,c
  5279  002D86  0EFD               	movlw	-3
  5280  002D88  CFE3 F048          	movff	plusw1,btemp
  5281  002D8C  50DE               	movf	postinc2,w,c
  5282  002D8E  5848               	subwfb	btemp,w,c
  5283  002D90  A0D8               	btfss	status,0,c
  5284  002D92  D02F               	goto	l15825
  5285                           
  5286                           ; BSR set to: 2
  5287                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5288  002D94  0EFE               	movlw	-2
  5289  002D96  50E3               	movf	plusw1,w,c
  5290  002D98  0D0E               	mullw	14
  5291  002D9A  0E08               	movlw	low (_Channels+8)
  5292  002D9C  24F3               	addwf	prodl,w,c
  5293  002D9E  6ED9               	movwf	fsr2l,c
  5294  002DA0  0E04               	movlw	high (_Channels+8)
  5295  002DA2  20F4               	addwfc	prodh,w,c
  5296  002DA4  6EDA               	movwf	fsr2h,c
  5297  002DA6  50DE               	movf	postinc2,w,c
  5298  002DA8  10DE               	iorwf	postinc2,w,c
  5299  002DAA  10DE               	iorwf	postinc2,w,c
  5300  002DAC  10DE               	iorwf	postinc2,w,c
  5301  002DAE  B4D8               	btfsc	status,2,c
  5302  002DB0  D020               	goto	l15825
  5303                           
  5304                           ; BSR set to: 2
  5305                           ;lorawan_eu.c: 1241: {
  5306                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5307                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5308  002DB2  0EFE               	movlw	-2
  5309  002DB4  50E3               	movf	plusw1,w,c
  5310  002DB6  0D0E               	mullw	14
  5311  002DB8  0E08               	movlw	low (_Channels+8)
  5312  002DBA  24F3               	addwf	prodl,w,c
  5313  002DBC  6ED9               	movwf	fsr2l,c
  5314  002DBE  0E04               	movlw	high (_Channels+8)
  5315  002DC0  20F4               	addwfc	prodh,w,c
  5316  002DC2  6EDA               	movwf	fsr2h,c
  5317  002DC4  CFDE F050          	movff	postinc2,btemp+8
  5318  002DC8  CFDE F051          	movff	postinc2,btemp+9
  5319  002DCC  CFDE F052          	movff	postinc2,btemp+10
  5320  002DD0  CFDE F053          	movff	postinc2,btemp+11
  5321                           
  5322                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5323  002DD4  0EFA               	movlw	-6
  5324  002DD6  C050  FFE3         	movff	btemp+8,plusw1
  5325  002DDA  0EFB               	movlw	-5
  5326  002DDC  C051  FFE3         	movff	btemp+9,plusw1
  5327  002DE0  0EFC               	movlw	-4
  5328  002DE2  C052  FFE3         	movff	btemp+10,plusw1
  5329  002DE6  0EFD               	movlw	-3
  5330  002DE8  C053  FFE3         	movff	btemp+11,plusw1
  5331                           
  5332                           ; BSR set to: 2
  5333                           ;lorawan_eu.c: 1243: found = 1;
  5334                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5335  002DEC  0EFF               	movlw	-1
  5336  002DEE  6AE3               	clrf	plusw1,c
  5337  002DF0  2AE3               	incf	plusw1,f,c
  5338  002DF2                     l15825:
  5339                           
  5340                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5341  002DF2  0EFE               	movlw	-2
  5342  002DF4  2AE3               	incf	plusw1,f,c
  5343                           
  5344                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5345  002DF6  0EFE               	movlw	-2
  5346  002DF8  CFE3 F048          	movff	plusw1,btemp
  5347  002DFC  0E0F               	movlw	15
  5348  002DFE  6448               	cpfsgt	btemp,c
  5349  002E00  D73F               	goto	l15807
  5350                           
  5351                           ;lorawan_eu.c: 1244: }
  5352                           ;lorawan_eu.c: 1245: }
  5353                           ;lorawan_eu.c: 1246: }
  5354                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5355                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5356  002E02  0EFF               	movlw	-1
  5357  002E04  04E3               	decf	plusw1,w,c
  5358  002E06  A4D8               	btfss	status,2,c
  5359  002E08  D09D               	goto	l1351
  5360                           
  5361                           ;lorawan_eu.c: 1248: {
  5362                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5363                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5364  002E0A  50E1               	movf	fsr1l,w,c
  5365  002E0C  0FFA               	addlw	-6
  5366  002E0E  6ED9               	movwf	fsr2l,c
  5367  002E10  50E2               	movf	fsr1h,w,c
  5368  002E12  6EDA               	movwf	fsr2h,c
  5369  002E14  0EFF               	movlw	255
  5370  002E16  22DA               	addwfc	fsr2h,f,c
  5371  002E18  CFDE F2C8          	movff	postinc2,_loRa+200
  5372  002E1C  CFDE F2C9          	movff	postinc2,_loRa+201
  5373  002E20  CFDE F2CA          	movff	postinc2,_loRa+202
  5374  002E24  CFDE F2CB          	movff	postinc2,_loRa+203
  5375                           
  5376                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5377                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5378  002E28  0EFD               	movlw	-3
  5379  002E2A  50E3               	movf	plusw1,w,c
  5380  002E2C  E10E               	bnz	u19430
  5381  002E2E  0EFA               	movlw	-6
  5382  002E30  28E3               	incf	plusw1,w,c
  5383  002E32  0EFB               	movlw	-5
  5384  002E34  CFE3 F048          	movff	plusw1,btemp
  5385  002E38  0EFF               	movlw	255
  5386  002E3A  5A48               	subwfb	btemp,f,c
  5387  002E3C  0EFC               	movlw	-4
  5388  002E3E  CFE3 F048          	movff	plusw1,btemp
  5389  002E42  0E0F               	movlw	15
  5390  002E44  5A48               	subwfb	btemp,f,c
  5391  002E46  A0D8               	btfss	status,0,c
  5392  002E48  D02B               	goto	l15837
  5393  002E4A                     u19430:
  5394                           
  5395                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5396  002E4A  50E1               	movf	fsr1l,w,c
  5397  002E4C  0FFA               	addlw	-6
  5398  002E4E  6ED9               	movwf	fsr2l,c
  5399  002E50  50E2               	movf	fsr1h,w,c
  5400  002E52  6EDA               	movwf	fsr2h,c
  5401  002E54  0EFF               	movlw	255
  5402  002E56  22DA               	addwfc	fsr2h,f,c
  5403  002E58  CFDE F060          	movff	postinc2,___lldiv@dividend
  5404  002E5C  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  5405  002E60  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  5406  002E64  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  5407  002E68  0E7D               	movlw	125
  5408  002E6A  0100               	movlb	0	; () banked
  5409  002E6C  6F64               	movwf	___lldiv@divisor& (0+255),b
  5410  002E6E  0E00               	movlw	0
  5411  002E70  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5412  002E72  0E00               	movlw	0
  5413  002E74  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5414  002E76  0E00               	movlw	0
  5415  002E78  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5416  002E7A  EC7A  F039         	call	___lldiv	;wreg free
  5417  002E7E  C060  F050         	movff	?___lldiv,btemp+8
  5418  002E82  C061  F051         	movff	?___lldiv+1,btemp+9
  5419  002E86  C062  F052         	movff	?___lldiv+2,btemp+10
  5420  002E8A  C063  F053         	movff	?___lldiv+3,btemp+11
  5421  002E8E  0E0C               	movlw	12
  5422  002E90                     u19445:
  5423  002E90  90D8               	bcf	status,0,c
  5424  002E92  3650               	rlcf	btemp+8,f,c
  5425  002E94  3651               	rlcf	btemp+9,f,c
  5426  002E96  3652               	rlcf	btemp+10,f,c
  5427  002E98  3653               	rlcf	btemp+11,f,c
  5428  002E9A  2EE8               	decfsz	wreg,f,c
  5429  002E9C  D7F9               	goto	u19445
  5430  002E9E  D02F               	goto	L1
  5431  002EA0                     l15837:
  5432                           
  5433                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5434  002EA0  0EFA               	movlw	-6
  5435  002EA2  CFE3 F050          	movff	plusw1,btemp+8
  5436  002EA6  0EFB               	movlw	-5
  5437  002EA8  CFE3 F051          	movff	plusw1,btemp+9
  5438  002EAC  0EFC               	movlw	-4
  5439  002EAE  CFE3 F052          	movff	plusw1,btemp+10
  5440  002EB2  0EFD               	movlw	-3
  5441  002EB4  CFE3 F053          	movff	plusw1,btemp+11
  5442  002EB8  0E0C               	movlw	12
  5443  002EBA                     u19455:
  5444  002EBA  90D8               	bcf	status,0,c
  5445  002EBC  3650               	rlcf	btemp+8,f,c
  5446  002EBE  3651               	rlcf	btemp+9,f,c
  5447  002EC0  3652               	rlcf	btemp+10,f,c
  5448  002EC2  3653               	rlcf	btemp+11,f,c
  5449  002EC4  2EE8               	decfsz	wreg,f,c
  5450  002EC6  D7F9               	goto	u19455
  5451  002EC8  C050  F060         	movff	btemp+8,___lldiv@dividend
  5452  002ECC  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5453  002ED0  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5454  002ED4  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5455  002ED8  0E7D               	movlw	125
  5456  002EDA  0100               	movlb	0	; () banked
  5457  002EDC  6F64               	movwf	___lldiv@divisor& (0+255),b
  5458  002EDE  0E00               	movlw	0
  5459  002EE0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5460  002EE2  0E00               	movlw	0
  5461  002EE4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5462  002EE6  0E00               	movlw	0
  5463  002EE8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5464  002EEA  EC7A  F039         	call	___lldiv	;wreg free
  5465  002EEE  C060  F050         	movff	?___lldiv,btemp+8
  5466  002EF2  C061  F051         	movff	?___lldiv+1,btemp+9
  5467  002EF6  C062  F052         	movff	?___lldiv+2,btemp+10
  5468  002EFA  C063  F053         	movff	?___lldiv+3,btemp+11
  5469  002EFE                     L1:
  5470                           
  5471                           ;stkvar	_DutyCycleCallback$2157 @ sp[(-10)+0]
  5472  002EFE  0EF6               	movlw	-10
  5473  002F00  C050  FFE3         	movff	btemp+8,plusw1
  5474  002F04  0EF7               	movlw	-9
  5475  002F06  C051  FFE3         	movff	btemp+9,plusw1
  5476  002F0A  0EF8               	movlw	-8
  5477  002F0C  C052  FFE3         	movff	btemp+10,plusw1
  5478  002F10  0EF9               	movlw	-7
  5479  002F12  C053  FFE3         	movff	btemp+11,plusw1
  5480                           
  5481                           ;stkvar	_DutyCycleCallback$2157 @ sp[(-10)+0]
  5482  002F16  50E1               	movf	fsr1l,w,c
  5483  002F18  0FF6               	addlw	-10
  5484  002F1A  6ED9               	movwf	fsr2l,c
  5485  002F1C  50E2               	movf	fsr1h,w,c
  5486  002F1E  6EDA               	movwf	fsr2h,c
  5487  002F20  0EFF               	movlw	255
  5488  002F22  22DA               	addwfc	fsr2h,f,c
  5489  002F24  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5490  002F28  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5491  002F2C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5492  002F30  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5493  002F34  0102               	movlb	2	; () banked
  5494  002F36  51E9               	movf	(_loRa+233)& (0+255),w,b
  5495  002F38  ECC6  F040         	call	_SwTimerSetTimeout
  5496                           
  5497                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  5498  002F3C  0102               	movlb	2	; () banked
  5499  002F3E  51E9               	movf	(_loRa+233)& (0+255),w,b
  5500  002F40  EC01  F037         	call	_SwTimerStart
  5501  002F44                     l1351:
  5502                           
  5503                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5504  002F44  0EF5               	movlw	245
  5505  002F46  26E1               	addwf	fsr1l,f,c
  5506  002F48  0EFF               	movlw	255
  5507  002F4A  22E2               	addwfc	fsr1h,f,c
  5508  002F4C  0012               	return		;funcret
  5509  002F4E                     __end_of_DutyCycleCallback:
  5510                           	opt stack 0
  5511                           tosu	equ	0xFFF
  5512                           tosh	equ	0xFFE
  5513                           tosl	equ	0xFFD
  5514                           pclath	equ	0xFFA
  5515                           tblptru	equ	0xFF8
  5516                           tblptrh	equ	0xFF7
  5517                           tblptrl	equ	0xFF6
  5518                           tablat	equ	0xFF5
  5519                           prodh	equ	0xFF4
  5520                           prodl	equ	0xFF3
  5521                           intcon	equ	0xFF2
  5522                           intcon2	equ	0xFF1
  5523                           intcon3	equ	0xFF0
  5524                           postinc0	equ	0xFEE
  5525                           wreg	equ	0xFE8
  5526                           postinc1	equ	0xFE6
  5527                           plusw1	equ	0xFE3
  5528                           fsr1h	equ	0xFE2
  5529                           fsr1l	equ	0xFE1
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function _UpdateJoinSuccessState *****************
  5538 ;; Defined at:
  5539 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  param           1  [STACK] unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1  [STACK] void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;Total ram usage:        0 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:   11
  5560 ;; This function calls:
  5561 ;;		_RxJoinResponse
  5562 ;;		_SwTimerSetTimeout
  5563 ;;		_SwTimerStart
  5564 ;;		___lldiv
  5565 ;; This function is called by:
  5566 ;;		_SetCallbackSoftwareTimers
  5567 ;;		_LORAWAN_RxDone
  5568 ;;		_SwTimersExecute
  5569 ;; This function uses a reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text30
  5573  0055F2                     __ptext30:
  5574                           	opt stack 0
  5575  0055F2                     _UpdateJoinSuccessState:
  5576                           	opt stack 0
  5577                           
  5578                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5579  0055F2  52E6               	movf	postinc1,f,c
  5580  0055F4  52E6               	movf	postinc1,f,c
  5581  0055F6  52E6               	movf	postinc1,f,c
  5582  0055F8  52E6               	movf	postinc1,f,c
  5583                           
  5584                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  5585                           
  5586                           ;incstack = 0
  5587  0055FA  0102               	movlb	2	; () banked
  5588  0055FC  9500               	bcf	_loRa& (0+255),2,b
  5589                           
  5590                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  5591  0055FE  8902               	bsf	(_loRa+2)& (0+255),4,b
  5592                           
  5593                           ; BSR set to: 2
  5594                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  5595  005600  0EF0               	movlw	-16
  5596  005602  1702               	andwf	(_loRa+2)& (0+255),f,b
  5597                           
  5598                           ; BSR set to: 2
  5599                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  5600  005604  6BD0               	clrf	(_loRa+208)& (0+255),b
  5601  005606  6BD1               	clrf	(_loRa+209)& (0+255),b
  5602                           
  5603                           ; BSR set to: 2
  5604                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  5605  005608  6BEE               	clrf	(_loRa+238)& (0+255),b
  5606                           
  5607                           ; BSR set to: 2
  5608                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  5609  00560A  A503               	btfss	(_loRa+3)& (0+255),2,b
  5610  00560C  D07B               	goto	l14725
  5611                           
  5612                           ; BSR set to: 2
  5613                           ;lorawan.c: 1052: {
  5614                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5615  00560E  51CF               	movf	(_loRa+207)& (0+255),w,b
  5616  005610  E107               	bnz	u17380
  5617  005612  29CC               	incf	(_loRa+204)& (0+255),w,b
  5618  005614  0EFF               	movlw	255
  5619  005616  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  5620  005618  0E0F               	movlw	15
  5621  00561A  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  5622  00561C  A0D8               	btfss	status,0,c
  5623  00561E  D024               	goto	l14719
  5624  005620                     u17380:
  5625                           
  5626                           ; BSR set to: 2
  5627  005620  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  5628  005624  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  5629  005628  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  5630  00562C  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  5631  005630  0E7D               	movlw	125
  5632  005632  0100               	movlb	0	; () banked
  5633  005634  6F64               	movwf	___lldiv@divisor& (0+255),b
  5634  005636  0E00               	movlw	0
  5635  005638  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5636  00563A  0E00               	movlw	0
  5637  00563C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5638  00563E  0E00               	movlw	0
  5639  005640  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5640  005642  EC7A  F039         	call	___lldiv	;wreg free
  5641  005646  C060  F050         	movff	?___lldiv,btemp+8
  5642  00564A  C061  F051         	movff	?___lldiv+1,btemp+9
  5643  00564E  C062  F052         	movff	?___lldiv+2,btemp+10
  5644  005652  C063  F053         	movff	?___lldiv+3,btemp+11
  5645  005656  0E0C               	movlw	12
  5646  005658                     u17395:
  5647  005658  90D8               	bcf	status,0,c
  5648  00565A  3650               	rlcf	btemp+8,f,c
  5649  00565C  3651               	rlcf	btemp+9,f,c
  5650  00565E  3652               	rlcf	btemp+10,f,c
  5651  005660  3653               	rlcf	btemp+11,f,c
  5652  005662  2EE8               	decfsz	wreg,f,c
  5653  005664  D7F9               	goto	u17395
  5654  005666  D02B               	goto	L2
  5655  005668                     l14719:
  5656                           
  5657                           ; BSR set to: 2
  5658  005668  C2CC  F050         	movff	_loRa+204,btemp+8
  5659  00566C  C2CD  F051         	movff	_loRa+205,btemp+9
  5660  005670  C2CE  F052         	movff	_loRa+206,btemp+10
  5661  005674  C2CF  F053         	movff	_loRa+207,btemp+11
  5662  005678  0E0C               	movlw	12
  5663  00567A                     u17405:
  5664  00567A  90D8               	bcf	status,0,c
  5665  00567C  3650               	rlcf	btemp+8,f,c
  5666  00567E  3651               	rlcf	btemp+9,f,c
  5667  005680  3652               	rlcf	btemp+10,f,c
  5668  005682  3653               	rlcf	btemp+11,f,c
  5669  005684  2EE8               	decfsz	wreg,f,c
  5670  005686  D7F9               	goto	u17405
  5671  005688  C050  F060         	movff	btemp+8,___lldiv@dividend
  5672  00568C  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5673  005690  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5674  005694  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5675  005698  0E7D               	movlw	125
  5676  00569A  0100               	movlb	0	; () banked
  5677  00569C  6F64               	movwf	___lldiv@divisor& (0+255),b
  5678  00569E  0E00               	movlw	0
  5679  0056A0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5680  0056A2  0E00               	movlw	0
  5681  0056A4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5682  0056A6  0E00               	movlw	0
  5683  0056A8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5684  0056AA  EC7A  F039         	call	___lldiv	;wreg free
  5685  0056AE  C060  F050         	movff	?___lldiv,btemp+8
  5686  0056B2  C061  F051         	movff	?___lldiv+1,btemp+9
  5687  0056B6  C062  F052         	movff	?___lldiv+2,btemp+10
  5688  0056BA  C063  F053         	movff	?___lldiv+3,btemp+11
  5689  0056BE                     L2:
  5690                           
  5691                           ;stkvar	_UpdateJoinSuccessState$3490 @ sp[(-4)+0]
  5692  0056BE  0EFC               	movlw	-4
  5693  0056C0  C050  FFE3         	movff	btemp+8,plusw1
  5694  0056C4  0EFD               	movlw	-3
  5695  0056C6  C051  FFE3         	movff	btemp+9,plusw1
  5696  0056CA  0EFE               	movlw	-2
  5697  0056CC  C052  FFE3         	movff	btemp+10,plusw1
  5698  0056D0  0EFF               	movlw	-1
  5699  0056D2  C053  FFE3         	movff	btemp+11,plusw1
  5700                           
  5701                           ;stkvar	_UpdateJoinSuccessState$3490 @ sp[(-4)+0]
  5702  0056D6  50E1               	movf	fsr1l,w,c
  5703  0056D8  0FFC               	addlw	-4
  5704  0056DA  6ED9               	movwf	fsr2l,c
  5705  0056DC  50E2               	movf	fsr1h,w,c
  5706  0056DE  6EDA               	movwf	fsr2h,c
  5707  0056E0  0EFF               	movlw	255
  5708  0056E2  22DA               	addwfc	fsr2h,f,c
  5709  0056E4  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5710  0056E8  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5711  0056EC  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5712  0056F0  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5713  0056F4  0102               	movlb	2	; () banked
  5714  0056F6  51E7               	movf	(_loRa+231)& (0+255),w,b
  5715  0056F8  ECC6  F040         	call	_SwTimerSetTimeout
  5716                           
  5717                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  5718  0056FC  0102               	movlb	2	; () banked
  5719  0056FE  51E7               	movf	(_loRa+231)& (0+255),w,b
  5720  005700  EC01  F037         	call	_SwTimerStart
  5721  005704                     l14725:
  5722                           
  5723                           ;lorawan.c: 1055: }
  5724                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  5725  005704  0101               	movlb	1	; () banked
  5726  005706  516B               	movf	(_rxPayload+2)& (0+255),w,b
  5727  005708  116C               	iorwf	(_rxPayload+3)& (0+255),w,b
  5728  00570A  B4D8               	btfsc	status,2,c
  5729  00570C  D00C               	goto	u17429
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;lorawan.c: 1058: {
  5733                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  5734  00570E  D801               	call	u17428
  5735  005710  D00A               	goto	u17429
  5736  005712                     u17428:
  5737  005712  0005               	push	
  5738  005714  6EFA               	movwf	pclath,c
  5739  005716  516B               	movf	(_rxPayload+2)& (0+255),w,b
  5740  005718  6EFD               	movwf	tosl,c
  5741  00571A  516C               	movf	(_rxPayload+3)& (0+255),w,b
  5742  00571C  6EFE               	movwf	tosh,c
  5743  00571E  6AFF               	clrf	tosu,c
  5744  005720  50FA               	movf	pclath,w,c
  5745  005722  0E01               	movlw	1
  5746  005724  0012               	return		;indir
  5747  005726                     u17429:
  5748                           
  5749                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5750  005726  0EFB               	movlw	251
  5751  005728  26E1               	addwf	fsr1l,f,c
  5752  00572A  0EFF               	movlw	255
  5753  00572C  22E2               	addwfc	fsr1h,f,c
  5754  00572E  0012               	return		;funcret
  5755  005730                     __end_of_UpdateJoinSuccessState:
  5756                           	opt stack 0
  5757                           tosu	equ	0xFFF
  5758                           tosh	equ	0xFFE
  5759                           tosl	equ	0xFFD
  5760                           pclath	equ	0xFFA
  5761                           tblptru	equ	0xFF8
  5762                           tblptrh	equ	0xFF7
  5763                           tblptrl	equ	0xFF6
  5764                           tablat	equ	0xFF5
  5765                           prodh	equ	0xFF4
  5766                           prodl	equ	0xFF3
  5767                           intcon	equ	0xFF2
  5768                           intcon2	equ	0xFF1
  5769                           intcon3	equ	0xFF0
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           postinc1	equ	0xFE6
  5773                           plusw1	equ	0xFE3
  5774                           fsr1h	equ	0xFE2
  5775                           fsr1l	equ	0xFE1
  5776                           indf2	equ	0xFDF
  5777                           postinc2	equ	0xFDE
  5778                           postdec2	equ	0xFDD
  5779                           fsr2h	equ	0xFDA
  5780                           fsr2l	equ	0xFD9
  5781                           status	equ	0xFD8
  5782                           
  5783 ;; *************** function _AutomaticReplyCallback *****************
  5784 ;; Defined at:
  5785 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  param           1  [STACK] unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1  [STACK] void 
  5792 ;; Registers used:
  5793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 3F/0
  5796 ;;		On exit  : 3F/2
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:   14
  5806 ;; This function calls:
  5807 ;;		_LORAWAN_Send
  5808 ;; This function is called by:
  5809 ;;		_SetCallbackSoftwareTimers
  5810 ;;		_SwTimersExecute
  5811 ;; This function uses a reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text31
  5815  0087E4                     __ptext31:
  5816                           	opt stack 0
  5817  0087E4                     _AutomaticReplyCallback:
  5818                           	opt stack 14
  5819                           
  5820                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  5821                           
  5822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5823                           ;incstack = 0
  5824  0087E4  0EF0               	movlw	-16
  5825  0087E6  0102               	movlb	2	; () banked
  5826  0087E8  1702               	andwf	(_loRa+2)& (0+255),f,b
  5827                           
  5828                           ; BSR set to: 2
  5829                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  5830  0087EA  0E00               	movlw	0
  5831  0087EC  0100               	movlb	0	; () banked
  5832  0087EE  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  5833  0087F0  0E00               	movlw	0
  5834  0087F2  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  5835  0087F4  0E00               	movlw	0
  5836  0087F6  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  5837  0087F8  0E00               	movlw	0
  5838  0087FA  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  5839  0087FC  0E00               	movlw	0
  5840  0087FE  EC7C  F033         	call	_LORAWAN_Send
  5841                           
  5842                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  5843  008802  0102               	movlb	2	; () banked
  5844  008804  9700               	bcf	_loRa& (0+255),3,b
  5845                           
  5846                           ; BSR set to: 2
  5847                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5848  008806  52E5               	movf	postdec1,f,c
  5849  008808  0012               	return		;funcret
  5850  00880A                     __end_of_AutomaticReplyCallback:
  5851                           	opt stack 0
  5852                           tosu	equ	0xFFF
  5853                           tosh	equ	0xFFE
  5854                           tosl	equ	0xFFD
  5855                           pclath	equ	0xFFA
  5856                           tblptru	equ	0xFF8
  5857                           tblptrh	equ	0xFF7
  5858                           tblptrl	equ	0xFF6
  5859                           tablat	equ	0xFF5
  5860                           prodh	equ	0xFF4
  5861                           prodl	equ	0xFF3
  5862                           intcon	equ	0xFF2
  5863                           intcon2	equ	0xFF1
  5864                           intcon3	equ	0xFF0
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           postinc1	equ	0xFE6
  5868                           postdec1	equ	0xFE5
  5869                           plusw1	equ	0xFE3
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _AckRetransmissionCallback *****************
  5880 ;; Defined at:
  5881 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  param           1  [STACK] unsigned char 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  maximumPacke    1  [STACK] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1  [STACK] void 
  5888 ;; Registers used:
  5889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 3F/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:   13
  5902 ;; This function calls:
  5903 ;;		_FindSmallestDataRate
  5904 ;;		_LORAWAN_GetMaxPayloadSize
  5905 ;;		_RADIO_Transmit
  5906 ;;		_ResetParametersForConfirmedTransmission
  5907 ;;		_RxData
  5908 ;;		_SelectChannelForTransmission
  5909 ;;		_UpdateRetransmissionAckTimeoutState
  5910 ;; This function is called by:
  5911 ;;		_SetCallbackSoftwareTimers
  5912 ;;		_SwTimersExecute
  5913 ;; This function uses a reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text32
  5917  005AAE                     __ptext32:
  5918                           	opt stack 0
  5919  005AAE                     _AckRetransmissionCallback:
  5920                           	opt stack 0
  5921                           
  5922                           ; BSR set to: 2
  5923                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5924  005AAE  52E6               	movf	postinc1,f,c
  5925                           
  5926                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  5927                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  5928                           
  5929                           ;incstack = 0
  5930  005AB0  0102               	movlb	2	; () banked
  5931  005AB2  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5932  005AB4  D086               	goto	l15943
  5933                           
  5934                           ; BSR set to: 2
  5935                           ;lorawan.c: 939: {
  5936                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  5937  005AB6  51D9               	movf	(_loRa+217)& (0+255),w,b
  5938  005AB8  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  5939  005ABA  A0D8               	btfss	status,0,c
  5940  005ABC  D061               	goto	l15933
  5941                           
  5942                           ; BSR set to: 2
  5943                           ;lorawan.c: 941: {
  5944                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  5945  005ABE  ECF2  F03C         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  5946  005AC2  6E53               	movwf	btemp+11,c
  5947  005AC4  0E0D               	movlw	13
  5948  005AC6  2653               	addwf	btemp+11,f,c
  5949                           
  5950                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5951  005AC8  0EFF               	movlw	-1
  5952  005ACA  C053  FFE3         	movff	btemp+11,plusw1
  5953                           
  5954                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  5955                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5956  005ACE  0EFF               	movlw	-1
  5957  005AD0  50E3               	movf	plusw1,w,c
  5958  005AD2  6E49               	movwf	btemp+1,c
  5959  005AD4  6A4A               	clrf	btemp+2,c
  5960  005AD6  0102               	movlb	2	; () banked
  5961  005AD8  51D4               	movf	(_loRa+212)& (0+255),w,b
  5962  005ADA  5C49               	subwf	btemp+1,w,c
  5963  005ADC  51D5               	movf	(_loRa+213)& (0+255),w,b
  5964  005ADE  584A               	subwfb	btemp+2,w,c
  5965  005AE0  A0D8               	btfss	status,0,c
  5966  005AE2  D039               	goto	l15927
  5967                           
  5968                           ; BSR set to: 2
  5969                           ;lorawan.c: 946: {
  5970                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  5971  005AE4  0E01               	movlw	1
  5972  005AE6  EC26  F03B         	call	_SelectChannelForTransmission
  5973  005AEA  0900               	iorlw	0
  5974  005AEC  A4D8               	btfss	status,2,c
  5975  005AEE  D030               	goto	l15923
  5976                           
  5977                           ;lorawan.c: 948: {
  5978                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  5979  005AF0  0EF0               	movlw	low (_macBuffer+16)
  5980  005AF2  0100               	movlb	0	; () banked
  5981  005AF4  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  5982  005AF6  0E04               	movlw	high (_macBuffer+16)
  5983  005AF8  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  5984  005AFA  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  5985  005AFE  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  5986  005B02  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  5987  005B06  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  5988  005B0A  5049               	movf	btemp+1,w,c
  5989  005B0C  104A               	iorwf	btemp+2,w,c
  5990  005B0E  A4D8               	btfss	status,2,c
  5991  005B10  D01F               	goto	l15923
  5992                           
  5993                           ;lorawan.c: 951: {
  5994                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  5995  005B12  0102               	movlb	2	; () banked
  5996  005B14  5102               	movf	(_loRa+2)& (0+255),w,b
  5997  005B16  0BF0               	andlw	-16
  5998  005B18  0901               	iorlw	1
  5999  005B1A  6F02               	movwf	(_loRa+2)& (0+255),b
  6000                           
  6001                           ; BSR set to: 2
  6002                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6003  005B1C  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6004                           
  6005                           ; BSR set to: 2
  6006                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6007  005B1E  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6008  005B20  D052               	goto	l2129
  6009                           
  6010                           ; BSR set to: 2
  6011  005B22  51DF               	movf	(_loRa+223)& (0+255),w,b
  6012  005B24  B4D8               	btfsc	status,2,c
  6013  005B26  D04F               	goto	l2129
  6014                           
  6015                           ; BSR set to: 2
  6016  005B28  51D9               	movf	(_loRa+217)& (0+255),w,b
  6017  005B2A  6E49               	movwf	btemp+1,c
  6018  005B2C  6A4A               	clrf	btemp+2,c
  6019  005B2E  51D7               	movf	(_loRa+215)& (0+255),w,b
  6020  005B30  6E52               	movwf	btemp+10,c
  6021  005B32  6A53               	clrf	btemp+11,c
  6022  005B34  0E01               	movlw	1
  6023  005B36  2652               	addwf	btemp+10,f,c
  6024  005B38  0E00               	movlw	0
  6025  005B3A  2253               	addwfc	btemp+11,f,c
  6026  005B3C  5049               	movf	btemp+1,w,c
  6027  005B3E  1852               	xorwf	btemp+10,w,c
  6028  005B40  E104               	bnz	u19660
  6029  005B42  504A               	movf	btemp+2,w,c
  6030  005B44  1853               	xorwf	btemp+11,w,c
  6031  005B46  B4D8               	btfsc	status,2,c
  6032  005B48  D03E               	goto	l2129
  6033  005B4A                     u19660:
  6034                           
  6035                           ; BSR set to: 2
  6036                           ;lorawan.c: 957: {
  6037                           ;lorawan.c: 958: FindSmallestDataRate();
  6038  005B4A  EC32  F032         	call	_FindSmallestDataRate	;wreg free
  6039  005B4E  D03B               	goto	l2129
  6040  005B50                     l15923:
  6041                           
  6042                           ;lorawan.c: 961: else
  6043                           ;lorawan.c: 962: {
  6044                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6045  005B50  ECB7  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6046  005B54  D038               	goto	l2129
  6047  005B56                     l15927:
  6048                           
  6049                           ; BSR set to: 2
  6050                           ;lorawan.c: 973: else
  6051                           ;lorawan.c: 974: {
  6052                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6053  005B56  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6054                           
  6055                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6056  005B5A  0101               	movlb	1	; () banked
  6057  005B5C  5169               	movf	_rxPayload& (0+255),w,b
  6058  005B5E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  6059  005B60  B4D8               	btfsc	status,2,c
  6060  005B62  D031               	goto	l2129
  6061                           
  6062                           ; BSR set to: 1
  6063                           ;lorawan.c: 977: {
  6064                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6065  005B64  0E00               	movlw	0
  6066  005B66  0100               	movlb	0	; () banked
  6067  005B68  6F60               	movwf	RxData@pData& (0+255),b
  6068  005B6A  0E00               	movlw	0
  6069  005B6C  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6070  005B6E  0E00               	movlw	0
  6071  005B70  6F62               	movwf	RxData@dataLength& (0+255),b
  6072  005B72  0E04               	movlw	4
  6073  005B74  6F63               	movwf	RxData@status& (0+255),b
  6074  005B76  D801               	call	u19688
  6075  005B78  D026               	goto	l2129
  6076  005B7A                     u19688:
  6077  005B7A  0005               	push	
  6078  005B7C  6EFA               	movwf	pclath,c
  6079  005B7E  D019               	goto	L3
  6080  005B80                     l15933:
  6081                           
  6082                           ; BSR set to: 2
  6083                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6084  005B80  51D9               	movf	(_loRa+217)& (0+255),w,b
  6085  005B82  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6086  005B84  A0D8               	btfss	status,0,c
  6087                           
  6088                           ; BSR set to: 2
  6089  005B86  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6090  005B88  D01E               	goto	l2129
  6091                           
  6092                           ; BSR set to: 2
  6093                           ;lorawan.c: 983: {
  6094                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6095  005B8A  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6096                           
  6097                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6098  005B8E  0101               	movlb	1	; () banked
  6099  005B90  5169               	movf	_rxPayload& (0+255),w,b
  6100  005B92  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  6101  005B94  B4D8               	btfsc	status,2,c
  6102  005B96  D017               	goto	l2129
  6103                           
  6104                           ; BSR set to: 1
  6105                           ;lorawan.c: 986: {
  6106                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6107  005B98  0E00               	movlw	0
  6108  005B9A  0100               	movlb	0	; () banked
  6109  005B9C  6F60               	movwf	RxData@pData& (0+255),b
  6110  005B9E  0E00               	movlw	0
  6111  005BA0  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6112  005BA2  0E00               	movlw	0
  6113  005BA4  6F62               	movwf	RxData@dataLength& (0+255),b
  6114  005BA6  0E00               	movlw	0
  6115  005BA8  6F63               	movwf	RxData@status& (0+255),b
  6116  005BAA  D801               	call	u19728
  6117  005BAC  D00C               	goto	l2129
  6118  005BAE                     u19728:
  6119  005BAE  0005               	push	
  6120  005BB0  6EFA               	movwf	pclath,c
  6121  005BB2                     L3:
  6122  005BB2  0101               	movlb	1	; () banked
  6123  005BB4  5169               	movf	_rxPayload& (0+255),w,b
  6124  005BB6  6EFD               	movwf	tosl,c
  6125  005BB8  516A               	movf	(_rxPayload+1)& (0+255),w,b
  6126  005BBA  6EFE               	movwf	tosh,c
  6127  005BBC  6AFF               	clrf	tosu,c
  6128  005BBE  50FA               	movf	pclath,w,c
  6129  005BC0  0012               	return		;indir
  6130  005BC2                     l15943:
  6131                           
  6132                           ; BSR set to: 2
  6133                           ;lorawan.c: 991: else
  6134                           ;lorawan.c: 992: {
  6135                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6136  005BC2  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6137  005BC6                     l2129:
  6138                           
  6139                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6140  005BC6  52E5               	movf	postdec1,f,c
  6141  005BC8  52E5               	movf	postdec1,f,c
  6142  005BCA  0012               	return		;funcret
  6143  005BCC                     __end_of_AckRetransmissionCallback:
  6144                           	opt stack 0
  6145                           tosu	equ	0xFFF
  6146                           tosh	equ	0xFFE
  6147                           tosl	equ	0xFFD
  6148                           pclath	equ	0xFFA
  6149                           tblptru	equ	0xFF8
  6150                           tblptrh	equ	0xFF7
  6151                           tblptrl	equ	0xFF6
  6152                           tablat	equ	0xFF5
  6153                           prodh	equ	0xFF4
  6154                           prodl	equ	0xFF3
  6155                           intcon	equ	0xFF2
  6156                           intcon2	equ	0xFF1
  6157                           intcon3	equ	0xFF0
  6158                           postinc0	equ	0xFEE
  6159                           wreg	equ	0xFE8
  6160                           postinc1	equ	0xFE6
  6161                           postdec1	equ	0xFE5
  6162                           plusw1	equ	0xFE3
  6163                           fsr1h	equ	0xFE2
  6164                           fsr1l	equ	0xFE1
  6165                           indf2	equ	0xFDF
  6166                           postinc2	equ	0xFDE
  6167                           postdec2	equ	0xFDD
  6168                           fsr2h	equ	0xFDA
  6169                           fsr2l	equ	0xFD9
  6170                           status	equ	0xFD8
  6171                           
  6172 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6173 ;; Defined at:
  6174 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  param           1  [STACK] unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  iCtr            1  [STACK] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1  [STACK] void 
  6181 ;; Registers used:
  6182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 3F/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:   11
  6195 ;; This function calls:
  6196 ;;		_SwTimerSetTimeout
  6197 ;;		_SwTimerStart
  6198 ;;		___lldiv
  6199 ;; This function is called by:
  6200 ;;		_SetCallbackSoftwareTimers
  6201 ;;		_SwTimersExecute
  6202 ;; This function uses a reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text33
  6206  004C58                     __ptext33:
  6207                           	opt stack 0
  6208  004C58                     _LORAWAN_LinkCheckCallback:
  6209                           	opt stack 0
  6210                           
  6211                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6212  004C58  0E05               	movlw	5
  6213  004C5A  26E1               	addwf	fsr1l,f,c
  6214  004C5C  0E00               	movlw	0
  6215  004C5E  22E2               	addwfc	fsr1h,f,c
  6216                           
  6217                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6218                           
  6219                           ;incstack = 0
  6220  004C60  0102               	movlb	2	; () banked
  6221  004C62  A103               	btfss	(_loRa+3)& (0+255),0,b
  6222                           
  6223                           ; BSR set to: 2
  6224  004C64  A503               	btfss	(_loRa+3)& (0+255),2,b
  6225  004C66  D02C               	goto	l15887
  6226                           
  6227                           ; BSR set to: 2
  6228                           ;lorawan.c: 886: {
  6229                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6230                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6231  004C68  0EFF               	movlw	-1
  6232  004C6A  6AE3               	clrf	plusw1,c
  6233  004C6C  D00F               	goto	l15877
  6234  004C6E                     l15871:
  6235                           
  6236                           ; BSR set to: 2
  6237                           ;lorawan.c: 889: {
  6238                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6239                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6240  004C6E  0EFF               	movlw	-1
  6241  004C70  50E3               	movf	plusw1,w,c
  6242  004C72  0D02               	mullw	2
  6243  004C74  0EA8               	movlw	low (_loRa+168)
  6244  004C76  24F3               	addwf	prodl,w,c
  6245  004C78  6ED9               	movwf	fsr2l,c
  6246  004C7A  0E02               	movlw	high (_loRa+168)
  6247  004C7C  20F4               	addwfc	prodh,w,c
  6248  004C7E  6EDA               	movwf	fsr2h,c
  6249  004C80  0E02               	movlw	2
  6250  004C82  18DE               	xorwf	postinc2,w,c
  6251  004C84  B4D8               	btfsc	status,2,c
  6252  004C86  D009               	goto	u19520
  6253                           
  6254                           ; BSR set to: 2
  6255                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6256  004C88  0EFF               	movlw	-1
  6257  004C8A  2AE3               	incf	plusw1,f,c
  6258  004C8C                     l15877:
  6259                           
  6260                           ; BSR set to: 2
  6261                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6262  004C8C  0EFF               	movlw	-1
  6263  004C8E  CFE3 F048          	movff	plusw1,btemp
  6264  004C92  51A7               	movf	(_loRa+167)& (0+255),w,b
  6265  004C94  5C48               	subwf	btemp,w,c
  6266  004C96  A0D8               	btfss	status,0,c
  6267  004C98  D7EA               	goto	l15871
  6268  004C9A                     u19520:
  6269                           
  6270                           ; BSR set to: 2
  6271                           ;lorawan.c: 893: }
  6272                           ;lorawan.c: 894: }
  6273                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6274                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6275  004C9A  0EFF               	movlw	-1
  6276  004C9C  50E3               	movf	plusw1,w,c
  6277  004C9E  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6278  004CA0  A4D8               	btfss	status,2,c
  6279  004CA2  D00E               	goto	l15887
  6280                           
  6281                           ; BSR set to: 2
  6282                           ;lorawan.c: 897: {
  6283                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6284  004CA4  51A7               	movf	(_loRa+167)& (0+255),w,b
  6285  004CA6  0D02               	mullw	2
  6286  004CA8  0EA8               	movlw	low (_loRa+168)
  6287  004CAA  24F3               	addwf	prodl,w,c
  6288  004CAC  6ED9               	movwf	fsr2l,c
  6289  004CAE  0E02               	movlw	high (_loRa+168)
  6290  004CB0  20F4               	addwfc	prodh,w,c
  6291  004CB2  6EDA               	movwf	fsr2h,c
  6292  004CB4  0E02               	movlw	2
  6293  004CB6  6EDF               	movwf	indf2,c
  6294                           
  6295                           ; BSR set to: 2
  6296                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6297  004CB8  0E10               	movlw	16
  6298  004CBA  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6299  004CBC  D001               	goto	l15887
  6300                           
  6301                           ; BSR set to: 2
  6302                           ;lorawan.c: 901: {
  6303                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6304  004CBE  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6305  004CC0                     l15887:
  6306                           
  6307                           ; BSR set to: 2
  6308                           ;lorawan.c: 903: }
  6309                           ;lorawan.c: 904: }
  6310                           ;lorawan.c: 905: }
  6311                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6312  004CC0  A503               	btfss	(_loRa+3)& (0+255),2,b
  6313  004CC2  D07B               	goto	l2107
  6314                           
  6315                           ; BSR set to: 2
  6316                           ;lorawan.c: 909: {
  6317                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6318  004CC4  51CF               	movf	(_loRa+207)& (0+255),w,b
  6319  004CC6  E107               	bnz	u19560
  6320  004CC8  29CC               	incf	(_loRa+204)& (0+255),w,b
  6321  004CCA  0EFF               	movlw	255
  6322  004CCC  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6323  004CCE  0E0F               	movlw	15
  6324  004CD0  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6325  004CD2  A0D8               	btfss	status,0,c
  6326  004CD4  D024               	goto	l15893
  6327  004CD6                     u19560:
  6328                           
  6329                           ; BSR set to: 2
  6330  004CD6  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  6331  004CDA  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  6332  004CDE  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  6333  004CE2  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  6334  004CE6  0E7D               	movlw	125
  6335  004CE8  0100               	movlb	0	; () banked
  6336  004CEA  6F64               	movwf	___lldiv@divisor& (0+255),b
  6337  004CEC  0E00               	movlw	0
  6338  004CEE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6339  004CF0  0E00               	movlw	0
  6340  004CF2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6341  004CF4  0E00               	movlw	0
  6342  004CF6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6343  004CF8  EC7A  F039         	call	___lldiv	;wreg free
  6344  004CFC  C060  F050         	movff	?___lldiv,btemp+8
  6345  004D00  C061  F051         	movff	?___lldiv+1,btemp+9
  6346  004D04  C062  F052         	movff	?___lldiv+2,btemp+10
  6347  004D08  C063  F053         	movff	?___lldiv+3,btemp+11
  6348  004D0C  0E0C               	movlw	12
  6349  004D0E                     u19575:
  6350  004D0E  90D8               	bcf	status,0,c
  6351  004D10  3650               	rlcf	btemp+8,f,c
  6352  004D12  3651               	rlcf	btemp+9,f,c
  6353  004D14  3652               	rlcf	btemp+10,f,c
  6354  004D16  3653               	rlcf	btemp+11,f,c
  6355  004D18  2EE8               	decfsz	wreg,f,c
  6356  004D1A  D7F9               	goto	u19575
  6357  004D1C  D02B               	goto	L4
  6358  004D1E                     l15893:
  6359                           
  6360                           ; BSR set to: 2
  6361  004D1E  C2CC  F050         	movff	_loRa+204,btemp+8
  6362  004D22  C2CD  F051         	movff	_loRa+205,btemp+9
  6363  004D26  C2CE  F052         	movff	_loRa+206,btemp+10
  6364  004D2A  C2CF  F053         	movff	_loRa+207,btemp+11
  6365  004D2E  0E0C               	movlw	12
  6366  004D30                     u19585:
  6367  004D30  90D8               	bcf	status,0,c
  6368  004D32  3650               	rlcf	btemp+8,f,c
  6369  004D34  3651               	rlcf	btemp+9,f,c
  6370  004D36  3652               	rlcf	btemp+10,f,c
  6371  004D38  3653               	rlcf	btemp+11,f,c
  6372  004D3A  2EE8               	decfsz	wreg,f,c
  6373  004D3C  D7F9               	goto	u19585
  6374  004D3E  C050  F060         	movff	btemp+8,___lldiv@dividend
  6375  004D42  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  6376  004D46  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  6377  004D4A  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  6378  004D4E  0E7D               	movlw	125
  6379  004D50  0100               	movlb	0	; () banked
  6380  004D52  6F64               	movwf	___lldiv@divisor& (0+255),b
  6381  004D54  0E00               	movlw	0
  6382  004D56  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6383  004D58  0E00               	movlw	0
  6384  004D5A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6385  004D5C  0E00               	movlw	0
  6386  004D5E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6387  004D60  EC7A  F039         	call	___lldiv	;wreg free
  6388  004D64  C060  F050         	movff	?___lldiv,btemp+8
  6389  004D68  C061  F051         	movff	?___lldiv+1,btemp+9
  6390  004D6C  C062  F052         	movff	?___lldiv+2,btemp+10
  6391  004D70  C063  F053         	movff	?___lldiv+3,btemp+11
  6392  004D74                     L4:
  6393                           
  6394                           ;stkvar	_LORAWAN_LinkCheckCallback$3473 @ sp[(-5)+0]
  6395  004D74  0EFB               	movlw	-5
  6396  004D76  C050  FFE3         	movff	btemp+8,plusw1
  6397  004D7A  0EFC               	movlw	-4
  6398  004D7C  C051  FFE3         	movff	btemp+9,plusw1
  6399  004D80  0EFD               	movlw	-3
  6400  004D82  C052  FFE3         	movff	btemp+10,plusw1
  6401  004D86  0EFE               	movlw	-2
  6402  004D88  C053  FFE3         	movff	btemp+11,plusw1
  6403                           
  6404                           ;stkvar	_LORAWAN_LinkCheckCallback$3473 @ sp[(-5)+0]
  6405  004D8C  50E1               	movf	fsr1l,w,c
  6406  004D8E  0FFB               	addlw	-5
  6407  004D90  6ED9               	movwf	fsr2l,c
  6408  004D92  50E2               	movf	fsr1h,w,c
  6409  004D94  6EDA               	movwf	fsr2h,c
  6410  004D96  0EFF               	movlw	255
  6411  004D98  22DA               	addwfc	fsr2h,f,c
  6412  004D9A  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  6413  004D9E  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6414  004DA2  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6415  004DA6  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6416  004DAA  0102               	movlb	2	; () banked
  6417  004DAC  51E7               	movf	(_loRa+231)& (0+255),w,b
  6418  004DAE  ECC6  F040         	call	_SwTimerSetTimeout
  6419                           
  6420                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6421  004DB2  0102               	movlb	2	; () banked
  6422  004DB4  51E7               	movf	(_loRa+231)& (0+255),w,b
  6423  004DB6  EC01  F037         	call	_SwTimerStart
  6424  004DBA                     l2107:
  6425                           
  6426                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6427  004DBA  0EFA               	movlw	250
  6428  004DBC  26E1               	addwf	fsr1l,f,c
  6429  004DBE  0EFF               	movlw	255
  6430  004DC0  22E2               	addwfc	fsr1h,f,c
  6431  004DC2  0012               	return		;funcret
  6432  004DC4                     __end_of_LORAWAN_LinkCheckCallback:
  6433                           	opt stack 0
  6434                           tosu	equ	0xFFF
  6435                           tosh	equ	0xFFE
  6436                           tosl	equ	0xFFD
  6437                           pclath	equ	0xFFA
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           prodh	equ	0xFF4
  6443                           prodl	equ	0xFF3
  6444                           intcon	equ	0xFF2
  6445                           intcon2	equ	0xFF1
  6446                           intcon3	equ	0xFF0
  6447                           postinc0	equ	0xFEE
  6448                           wreg	equ	0xFE8
  6449                           postinc1	equ	0xFE6
  6450                           postdec1	equ	0xFE5
  6451                           plusw1	equ	0xFE3
  6452                           fsr1h	equ	0xFE2
  6453                           fsr1l	equ	0xFE1
  6454                           indf2	equ	0xFDF
  6455                           postinc2	equ	0xFDE
  6456                           postdec2	equ	0xFDD
  6457                           fsr2h	equ	0xFDA
  6458                           fsr2l	equ	0xFD9
  6459                           status	equ	0xFD8
  6460                           
  6461 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  6462 ;; Defined at:
  6463 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  param           1  [STACK] unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  freq            4  [STACK] unsigned long 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1  [STACK] void 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 3F/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:   13
  6484 ;; This function calls:
  6485 ;;		_ConfigureRadioRx
  6486 ;;		_GetRx1Freq
  6487 ;;		_RADIO_ReceiveStart
  6488 ;;		_RADIO_ReceiveStop
  6489 ;;		_RADIO_ReleaseData
  6490 ;; This function is called by:
  6491 ;;		_SetCallbackSoftwareTimers
  6492 ;;		_SwTimersExecute
  6493 ;; This function uses a reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text34
  6497  00694E                     __ptext34:
  6498                           	opt stack 0
  6499  00694E                     _LORAWAN_ReceiveWindow1Callback:
  6500                           	opt stack 0
  6501                           
  6502                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6503  00694E  52E6               	movf	postinc1,f,c
  6504  006950  52E6               	movf	postinc1,f,c
  6505  006952  52E6               	movf	postinc1,f,c
  6506  006954  52E6               	movf	postinc1,f,c
  6507                           
  6508                           ;lorawan.c: 798: uint32_t freq;
  6509                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  6510                           
  6511                           ;incstack = 0
  6512  006956  0102               	movlb	2	; () banked
  6513  006958  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6514  00695A  D050               	goto	l2080
  6515                           
  6516                           ; BSR set to: 2
  6517                           ;lorawan.c: 801: {
  6518                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  6519  00695C  0E02               	movlw	2
  6520  00695E  1912               	xorwf	(_loRa+18)& (0+255),w,b
  6521  006960  B4D8               	btfsc	status,2,c
  6522                           
  6523                           ; BSR set to: 2
  6524                           ;lorawan.c: 803: {
  6525                           ;lorawan.c: 804: RADIO_ReceiveStop();
  6526  006962  EC6B  F044         	call	_RADIO_ReceiveStop	;wreg free
  6527                           
  6528                           ;lorawan.c: 805: }
  6529                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  6530  006966  0102               	movlb	2	; () banked
  6531  006968  51EF               	movf	(_loRa+239)& (0+255),w,b
  6532  00696A  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6533  00696C  A0D8               	btfss	status,0,c
  6534  00696E  D004               	goto	l2078
  6535                           
  6536                           ; BSR set to: 2
  6537                           ;lorawan.c: 807: {
  6538                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  6539  006970  51EF               	movf	(_loRa+239)& (0+255),w,b
  6540  006972  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6541  006974  6F17               	movwf	(_loRa+23)& (0+255),b
  6542                           
  6543                           ;lorawan.c: 809: }
  6544  006976  D001               	goto	l15853
  6545  006978                     l2078:
  6546                           
  6547                           ; BSR set to: 2
  6548                           ;lorawan.c: 810: else
  6549                           ;lorawan.c: 811: {
  6550                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  6551  006978  6B17               	clrf	(_loRa+23)& (0+255),b
  6552  00697A                     l15853:
  6553                           
  6554                           ; BSR set to: 2
  6555                           ;lorawan.c: 813: }
  6556                           ;lorawan.c: 815: freq = GetRx1Freq();
  6557  00697A  EC8B  F045         	call	_GetRx1Freq	;wreg free
  6558  00697E  C060  F050         	movff	?_GetRx1Freq,btemp+8
  6559  006982  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
  6560  006986  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
  6561  00698A  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
  6562                           
  6563                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6564  00698E  0EFC               	movlw	-4
  6565  006990  C050  FFE3         	movff	btemp+8,plusw1
  6566  006994  0EFD               	movlw	-3
  6567  006996  C051  FFE3         	movff	btemp+9,plusw1
  6568  00699A  0EFE               	movlw	-2
  6569  00699C  C052  FFE3         	movff	btemp+10,plusw1
  6570  0069A0  0EFF               	movlw	-1
  6571  0069A2  C053  FFE3         	movff	btemp+11,plusw1
  6572                           
  6573                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  6574  0069A6  0102               	movlb	2	; () banked
  6575  0069A8  5102               	movf	(_loRa+2)& (0+255),w,b
  6576  0069AA  0BF0               	andlw	-16
  6577  0069AC  0903               	iorlw	3
  6578  0069AE  6F02               	movwf	(_loRa+2)& (0+255),b
  6579                           
  6580                           ; BSR set to: 2
  6581                           ;lorawan.c: 819: RADIO_ReleaseData();
  6582  0069B0  EC4B  F046         	call	_RADIO_ReleaseData	;wreg free
  6583                           
  6584                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  6585                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6586  0069B4  50E1               	movf	fsr1l,w,c
  6587  0069B6  0FFC               	addlw	-4
  6588  0069B8  6ED9               	movwf	fsr2l,c
  6589  0069BA  50E2               	movf	fsr1h,w,c
  6590  0069BC  6EDA               	movwf	fsr2h,c
  6591  0069BE  0EFF               	movlw	255
  6592  0069C0  22DA               	addwfc	fsr2h,f,c
  6593  0069C2  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  6594  0069C6  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  6595  0069CA  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  6596  0069CE  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  6597  0069D2  0102               	movlb	2	; () banked
  6598  0069D4  5117               	movf	(_loRa+23)& (0+255),w,b
  6599  0069D6  EC65  F043         	call	_ConfigureRadioRx
  6600                           
  6601                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  6602  0069DA  0E7F               	movlw	low _rxWindowSize
  6603  0069DC  0102               	movlb	2	; () banked
  6604  0069DE  2517               	addwf	(_loRa+23)& (0+255),w,b
  6605  0069E0  6EF6               	movwf	tblptrl,c
  6606  0069E2  6AF7               	clrf	tblptrh,c
  6607  0069E4  0EFF               	movlw	high _rxWindowSize
  6608  0069E6  22F7               	addwfc	tblptrh,f,c
  6609  0069E8                     	if	1	;There are 3 active tblptr bytes
  6610  0069E8  6AF8               	clrf	tblptru,c
  6611  0069EA  0E00               	movlw	low (__mediumconst shr (0+16))
  6612  0069EC  22F8               	addwfc	tblptru,f,c
  6613  0069EE                     	endif
  6614  0069EE  0008               	tblrd		*
  6615  0069F0  50F5               	movf	tablat,w,c
  6616  0069F2  0100               	movlb	0	; () banked
  6617  0069F4  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6618  0069F6  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6619  0069F8  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  6620  0069FC                     l2080:
  6621                           
  6622                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6623  0069FC  0EFB               	movlw	251
  6624  0069FE  26E1               	addwf	fsr1l,f,c
  6625  006A00  0EFF               	movlw	255
  6626  006A02  22E2               	addwfc	fsr1h,f,c
  6627  006A04  0012               	return		;funcret
  6628  006A06                     __end_of_LORAWAN_ReceiveWindow1Callback:
  6629                           	opt stack 0
  6630                           tosu	equ	0xFFF
  6631                           tosh	equ	0xFFE
  6632                           tosl	equ	0xFFD
  6633                           pclath	equ	0xFFA
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           intcon	equ	0xFF2
  6641                           intcon2	equ	0xFF1
  6642                           intcon3	equ	0xFF0
  6643                           postinc0	equ	0xFEE
  6644                           wreg	equ	0xFE8
  6645                           postinc1	equ	0xFE6
  6646                           postdec1	equ	0xFE5
  6647                           plusw1	equ	0xFE3
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  6658 ;; Defined at:
  6659 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  param           1  [STACK] unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1  [STACK] void 
  6666 ;; Registers used:
  6667 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 3D/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:   14
  6680 ;; This function calls:
  6681 ;;		_ConfigureRadioRx
  6682 ;;		_LORAWAN_EnterContinuousReceive
  6683 ;;		_RADIO_GetStatus
  6684 ;;		_RADIO_ReceiveStart
  6685 ;;		_RADIO_ReceiveStop
  6686 ;;		_RADIO_ReleaseData
  6687 ;;		_ResetParametersForConfirmedTransmission
  6688 ;;		_ResetParametersForUnconfirmedTransmission
  6689 ;;		_RxData
  6690 ;; This function is called by:
  6691 ;;		_LORAWAN_RxTimeout
  6692 ;;		_SetCallbackSoftwareTimers
  6693 ;;		_SwTimersExecute
  6694 ;; This function uses a reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text35
  6698  006620                     __ptext35:
  6699                           	opt stack 0
  6700  006620                     _LORAWAN_ReceiveWindow2Callback:
  6701                           	opt stack 12
  6702                           
  6703                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  6704                           
  6705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6706                           ;incstack = 0
  6707  006620  0102               	movlb	2	; () banked
  6708  006622  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6709  006624  D05F               	goto	l2083
  6710                           
  6711                           ; BSR set to: 2
  6712                           ;lorawan.c: 831: {
  6713                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  6714  006626  EC48  F046         	call	_RADIO_GetStatus	;wreg free
  6715  00662A  6E53               	movwf	btemp+11,c
  6716  00662C  B253               	btfsc	btemp+11,1,c
  6717  00662E  D056               	goto	l14575
  6718                           
  6719                           ;lorawan.c: 833: {
  6720                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  6721  006630  0102               	movlb	2	; () banked
  6722  006632  5102               	movf	(_loRa+2)& (0+255),w,b
  6723  006634  0BF0               	andlw	-16
  6724  006636  0905               	iorlw	5
  6725  006638  6F02               	movwf	(_loRa+2)& (0+255),b
  6726                           
  6727                           ; BSR set to: 2
  6728                           ;lorawan.c: 836: RADIO_ReceiveStop();
  6729  00663A  EC6B  F044         	call	_RADIO_ReceiveStop	;wreg free
  6730                           
  6731                           ;lorawan.c: 837: RADIO_ReleaseData();
  6732  00663E  EC4B  F046         	call	_RADIO_ReleaseData	;wreg free
  6733                           
  6734                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  6735  006642  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  6736  006646  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  6737  00664A  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  6738  00664E  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  6739  006652  0102               	movlb	2	; () banked
  6740  006654  511C               	movf	(_loRa+28)& (0+255),w,b
  6741  006656  EC65  F043         	call	_ConfigureRadioRx
  6742                           
  6743                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  6744  00665A  0102               	movlb	2	; () banked
  6745  00665C  5112               	movf	(_loRa+18)& (0+255),w,b
  6746  00665E  A4D8               	btfss	status,2,c
  6747  006660  D036               	goto	l14571
  6748                           
  6749                           ; BSR set to: 2
  6750                           ;lorawan.c: 842: {
  6751                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  6752  006662  0E7F               	movlw	low _rxWindowSize
  6753  006664  251C               	addwf	(_loRa+28)& (0+255),w,b
  6754  006666  6EF6               	movwf	tblptrl,c
  6755  006668  6AF7               	clrf	tblptrh,c
  6756  00666A  0EFF               	movlw	high _rxWindowSize
  6757  00666C  22F7               	addwfc	tblptrh,f,c
  6758  00666E                     	if	1	;There are 3 active tblptr bytes
  6759  00666E  6AF8               	clrf	tblptru,c
  6760  006670  0E00               	movlw	low (__mediumconst shr (0+16))
  6761  006672  22F8               	addwfc	tblptru,f,c
  6762  006674                     	endif
  6763  006674  0008               	tblrd		*
  6764  006676  50F5               	movf	tablat,w,c
  6765  006678  0100               	movlb	0	; () banked
  6766  00667A  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6767  00667C  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6768  00667E  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  6769  006682  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
  6770  006686  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
  6771  00668A  5049               	movf	btemp+1,w,c
  6772  00668C  104A               	iorwf	btemp+2,w,c
  6773  00668E  B4D8               	btfsc	status,2,c
  6774  006690  D031               	goto	l2092
  6775                           
  6776                           ;lorawan.c: 844: {
  6777                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  6778  006692  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6779                           
  6780                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  6781  006696  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6782                           
  6783                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  6784  00669A  0101               	movlb	1	; () banked
  6785  00669C  5169               	movf	_rxPayload& (0+255),w,b
  6786  00669E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  6787  0066A0  B4D8               	btfsc	status,2,c
  6788  0066A2  D028               	goto	l2092
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;lorawan.c: 848: {
  6792                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  6793  0066A4  0E00               	movlw	0
  6794  0066A6  0100               	movlb	0	; () banked
  6795  0066A8  6F60               	movwf	RxData@pData& (0+255),b
  6796  0066AA  0E00               	movlw	0
  6797  0066AC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6798  0066AE  0E00               	movlw	0
  6799  0066B0  6F62               	movwf	RxData@dataLength& (0+255),b
  6800  0066B2  0E00               	movlw	0
  6801  0066B4  6F63               	movwf	RxData@status& (0+255),b
  6802  0066B6  D801               	call	u17058
  6803  0066B8  D01D               	goto	l2092
  6804  0066BA                     u17058:
  6805  0066BA  0005               	push	
  6806  0066BC  6EFA               	movwf	pclath,c
  6807  0066BE  0101               	movlb	1	; () banked
  6808  0066C0  5169               	movf	_rxPayload& (0+255),w,b
  6809  0066C2  6EFD               	movwf	tosl,c
  6810  0066C4  516A               	movf	(_rxPayload+1)& (0+255),w,b
  6811  0066C6  6EFE               	movwf	tosh,c
  6812  0066C8  6AFF               	clrf	tosu,c
  6813  0066CA  50FA               	movf	pclath,w,c
  6814  0066CC  0012               	return		;indir
  6815  0066CE                     l14571:
  6816                           
  6817                           ; BSR set to: 2
  6818                           ;lorawan.c: 853: else
  6819                           ;lorawan.c: 854: {
  6820                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  6821  0066CE  5102               	movf	(_loRa+2)& (0+255),w,b
  6822  0066D0  0BF0               	andlw	-16
  6823  0066D2  0909               	iorlw	9
  6824  0066D4  6F02               	movwf	(_loRa+2)& (0+255),b
  6825                           
  6826                           ; BSR set to: 2
  6827                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  6828  0066D6  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  6829  0066DA  D00C               	goto	l2092
  6830  0066DC                     l14575:
  6831                           
  6832                           ;lorawan.c: 859: else
  6833                           ;lorawan.c: 860: {
  6834                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  6835  0066DC  0E01               	movlw	1
  6836  0066DE  0102               	movlb	2	; () banked
  6837  0066E0  6FF1               	movwf	(_loRa+241)& (0+255),b
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;lorawan.c: 864: }
  6841                           ;lorawan.c: 865: }
  6842  0066E2  D008               	goto	l2092
  6843  0066E4                     l2083:
  6844                           
  6845                           ; BSR set to: 2
  6846                           ;lorawan.c: 866: else
  6847                           ;lorawan.c: 867: {
  6848                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  6849  0066E4  A500               	btfss	_loRa& (0+255),2,b
  6850  0066E6  D002               	goto	l14579
  6851                           
  6852                           ; BSR set to: 2
  6853                           ;lorawan.c: 871: {
  6854                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  6855  0066E8  9500               	bcf	_loRa& (0+255),2,b
  6856                           
  6857                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  6858  0066EA  9902               	bcf	(_loRa+2)& (0+255),4,b
  6859  0066EC                     l14579:
  6860                           
  6861                           ; BSR set to: 2
  6862                           ;lorawan.c: 874: }
  6863                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  6864  0066EC  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6865                           
  6866                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  6867  0066F0  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6868  0066F4                     l2092:
  6869                           
  6870                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6871  0066F4  52E5               	movf	postdec1,f,c
  6872  0066F6  0012               	return		;funcret
  6873  0066F8                     __end_of_LORAWAN_ReceiveWindow2Callback:
  6874                           	opt stack 0
  6875                           tosu	equ	0xFFF
  6876                           tosh	equ	0xFFE
  6877                           tosl	equ	0xFFD
  6878                           pclath	equ	0xFFA
  6879                           tblptru	equ	0xFF8
  6880                           tblptrh	equ	0xFF7
  6881                           tblptrl	equ	0xFF6
  6882                           tablat	equ	0xFF5
  6883                           prodh	equ	0xFF4
  6884                           prodl	equ	0xFF3
  6885                           intcon	equ	0xFF2
  6886                           intcon2	equ	0xFF1
  6887                           intcon3	equ	0xFF0
  6888                           postinc0	equ	0xFEE
  6889                           wreg	equ	0xFE8
  6890                           postinc1	equ	0xFE6
  6891                           postdec1	equ	0xFE5
  6892                           plusw1	equ	0xFE3
  6893                           fsr1h	equ	0xFE2
  6894                           fsr1l	equ	0xFE1
  6895                           indf2	equ	0xFDF
  6896                           postinc2	equ	0xFDE
  6897                           postdec2	equ	0xFDD
  6898                           fsr2h	equ	0xFDA
  6899                           fsr2l	equ	0xFD9
  6900                           status	equ	0xFD8
  6901                           
  6902 ;; *************** function _RADIO_WatchdogTimeout *****************
  6903 ;; Defined at:
  6904 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  param           1  [STACK] unsigned char 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1  [STACK] void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 3F/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:   16
  6925 ;; This function calls:
  6926 ;;		_LORAWAN_RxTimeout
  6927 ;;		_LORAWAN_TxDone
  6928 ;;		_RADIO_WriteMode
  6929 ;; This function is called by:
  6930 ;;		_RADIO_Init
  6931 ;;		_SwTimersExecute
  6932 ;; This function uses a reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text36
  6936  007FAA                     __ptext36:
  6937                           	opt stack 0
  6938  007FAA                     _RADIO_WatchdogTimeout:
  6939                           	opt stack 12
  6940                           
  6941                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  6942                           
  6943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6944                           ;incstack = 0
  6945  007FAA  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6946  007FAE  0E01               	movlw	1
  6947  007FB0  0100               	movlb	0	; () banked
  6948  007FB2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6949  007FB4  0E01               	movlw	1
  6950  007FB6  ECE7  F02E         	call	_RADIO_WriteMode
  6951                           
  6952                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6953  007FBA  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6954  007FBE  0E00               	movlw	0
  6955  007FC0  0100               	movlb	0	; () banked
  6956  007FC2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6957  007FC4  0E00               	movlw	0
  6958  007FC6  ECE7  F02E         	call	_RADIO_WriteMode
  6959                           
  6960                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  6961  007FCA  0101               	movlb	1	; () banked
  6962  007FCC  899E               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  6963                           
  6964                           ; BSR set to: 1
  6965                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  6966  007FCE  A39E               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  6967  007FD0  D004               	goto	l727
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;radio_driver_SX1276.c: 1414: {
  6971                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  6972  007FD2  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  6976  007FD4  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  6977                           
  6978                           ;radio_driver_SX1276.c: 1417: }
  6979  007FD8  D009               	goto	l730
  6980  007FDA                     l727:
  6981                           
  6982                           ; BSR set to: 1
  6983                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  6984  007FDA  A19E               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  6985  007FDC  D007               	goto	l730
  6986                           
  6987                           ; BSR set to: 1
  6988                           ;radio_driver_SX1276.c: 1419: {
  6989                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  6990  007FDE  919E               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  6994  007FE0  C1A5  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  6995  007FE4  C1A6  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  6996  007FE8  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  6997  007FEC                     l730:
  6998                           
  6999                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7000  007FEC  52E5               	movf	postdec1,f,c
  7001  007FEE  0012               	return		;funcret
  7002  007FF0                     __end_of_RADIO_WatchdogTimeout:
  7003                           	opt stack 0
  7004                           tosu	equ	0xFFF
  7005                           tosh	equ	0xFFE
  7006                           tosl	equ	0xFFD
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           intcon3	equ	0xFF0
  7017                           postinc0	equ	0xFEE
  7018                           wreg	equ	0xFE8
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           plusw1	equ	0xFE3
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _RADIO_RxFSKTimeout *****************
  7032 ;; Defined at:
  7033 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  param           1  [STACK] unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  irqFlags        1  [STACK] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1  [STACK] void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 3F/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:   16
  7054 ;; This function calls:
  7055 ;;		_LORAWAN_RxTimeout
  7056 ;;		_RADIO_RegisterRead
  7057 ;;		_RADIO_WriteMode
  7058 ;;		_SwTimerStop
  7059 ;; This function is called by:
  7060 ;;		_RADIO_Init
  7061 ;;		_SwTimersExecute
  7062 ;; This function uses a reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text37
  7066  008314                     __ptext37:
  7067                           	opt stack 0
  7068  008314                     _RADIO_RxFSKTimeout:
  7069                           	opt stack 0
  7070                           
  7071                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7072  008314  52E6               	movf	postinc1,f,c
  7073                           
  7074                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7075                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7076                           
  7077                           ;incstack = 0
  7078  008316  0E3E               	movlw	62
  7079  008318  ECCA  F043         	call	_RADIO_RegisterRead
  7080  00831C  6E53               	movwf	btemp+11,c
  7081                           
  7082                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7083  00831E  0EFF               	movlw	-1
  7084  008320  C053  FFE3         	movff	btemp+11,plusw1
  7085                           
  7086                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7087                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7088  008324  0EFF               	movlw	-1
  7089  008326  B0E3               	btfsc	plusw1,0,c
  7090  008328  D010               	goto	l724
  7091                           
  7092                           ;radio_driver_SX1276.c: 1397: {
  7093                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7094  00832A  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7095  00832E  0E00               	movlw	0
  7096  008330  0100               	movlb	0	; () banked
  7097  008332  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7098  008334  0E00               	movlw	0
  7099  008336  ECE7  F02E         	call	_RADIO_WriteMode
  7100                           
  7101                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7102  00833A  0101               	movlb	1	; () banked
  7103  00833C  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7104  00833E  ECDE  F043         	call	_SwTimerStop
  7105                           
  7106                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7107  008342  0101               	movlb	1	; () banked
  7108  008344  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7109                           
  7110                           ; BSR set to: 1
  7111                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7112  008346  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  7113  00834A                     l724:
  7114                           
  7115                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7116  00834A  52E5               	movf	postdec1,f,c
  7117  00834C  52E5               	movf	postdec1,f,c
  7118  00834E  0012               	return		;funcret
  7119  008350                     __end_of_RADIO_RxFSKTimeout:
  7120                           	opt stack 0
  7121                           tosu	equ	0xFFF
  7122                           tosh	equ	0xFFE
  7123                           tosl	equ	0xFFD
  7124                           pclath	equ	0xFFA
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           prodh	equ	0xFF4
  7130                           prodl	equ	0xFF3
  7131                           intcon	equ	0xFF2
  7132                           intcon2	equ	0xFF1
  7133                           intcon3	equ	0xFF0
  7134                           postinc0	equ	0xFEE
  7135                           wreg	equ	0xFE8
  7136                           postinc1	equ	0xFE6
  7137                           postdec1	equ	0xFE5
  7138                           plusw1	equ	0xFE3
  7139                           fsr1h	equ	0xFE2
  7140                           fsr1l	equ	0xFE1
  7141                           indf2	equ	0xFDF
  7142                           postinc2	equ	0xFDE
  7143                           postdec2	equ	0xFDD
  7144                           fsr2h	equ	0xFDA
  7145                           fsr2l	equ	0xFD9
  7146                           status	equ	0xFD8
  7147                           
  7148 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7149 ;; Defined at:
  7150 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  param           1  [STACK] unsigned char 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1  [STACK] void 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 3F/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   13
  7171 ;; This function calls:
  7172 ;;		_RADIO_Transmit
  7173 ;;		_ResetParametersForUnconfirmedTransmission
  7174 ;;		_RxData
  7175 ;;		_SelectChannelForTransmission
  7176 ;; This function is called by:
  7177 ;;		_SetCallbackSoftwareTimers
  7178 ;;		_SwTimersExecute
  7179 ;; This function uses a reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text38
  7183  0074F6                     __ptext38:
  7184                           	opt stack 0
  7185  0074F6                     _UnconfirmedTransmissionCallback:
  7186                           	opt stack 15
  7187                           
  7188                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7189                           
  7190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7191                           ;incstack = 0
  7192  0074F6  0E01               	movlw	1
  7193  0074F8  EC26  F03B         	call	_SelectChannelForTransmission
  7194  0074FC  0900               	iorlw	0
  7195  0074FE  A4D8               	btfss	status,2,c
  7196  007500  D018               	goto	l15953
  7197  007502  0EF0               	movlw	low (_macBuffer+16)
  7198  007504  0100               	movlb	0	; () banked
  7199  007506  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  7200  007508  0E04               	movlw	high (_macBuffer+16)
  7201  00750A  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7202  00750C  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7203  007510  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  7204  007514  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  7205  007518  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  7206  00751C  5049               	movf	btemp+1,w,c
  7207  00751E  104A               	iorwf	btemp+2,w,c
  7208  007520  A4D8               	btfss	status,2,c
  7209  007522  D007               	goto	l15953
  7210                           
  7211                           ;lorawan.c: 1001: {
  7212                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7213  007524  0102               	movlb	2	; () banked
  7214  007526  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7215                           
  7216                           ; BSR set to: 2
  7217                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7218  007528  5102               	movf	(_loRa+2)& (0+255),w,b
  7219  00752A  0BF0               	andlw	-16
  7220  00752C  0901               	iorlw	1
  7221  00752E  6F02               	movwf	(_loRa+2)& (0+255),b
  7222                           
  7223                           ;lorawan.c: 1005: }
  7224  007530  D01C               	goto	u19769
  7225  007532                     l15953:
  7226                           
  7227                           ;lorawan.c: 1006: else
  7228                           ;lorawan.c: 1008: {
  7229                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7230  007532  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7231                           
  7232                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7233  007536  0101               	movlb	1	; () banked
  7234  007538  5169               	movf	_rxPayload& (0+255),w,b
  7235  00753A  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  7236  00753C  B4D8               	btfsc	status,2,c
  7237  00753E  D015               	goto	u19769
  7238                           
  7239                           ; BSR set to: 1
  7240                           ;lorawan.c: 1011: {
  7241                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7242  007540  0E00               	movlw	0
  7243  007542  0100               	movlb	0	; () banked
  7244  007544  6F60               	movwf	RxData@pData& (0+255),b
  7245  007546  0E00               	movlw	0
  7246  007548  6F61               	movwf	(RxData@pData+1)& (0+255),b
  7247  00754A  0E00               	movlw	0
  7248  00754C  6F62               	movwf	RxData@dataLength& (0+255),b
  7249  00754E  0E00               	movlw	0
  7250  007550  6F63               	movwf	RxData@status& (0+255),b
  7251  007552  D801               	call	u19768
  7252  007554  D00A               	goto	u19769
  7253  007556                     u19768:
  7254  007556  0005               	push	
  7255  007558  6EFA               	movwf	pclath,c
  7256  00755A  0101               	movlb	1	; () banked
  7257  00755C  5169               	movf	_rxPayload& (0+255),w,b
  7258  00755E  6EFD               	movwf	tosl,c
  7259  007560  516A               	movf	(_rxPayload+1)& (0+255),w,b
  7260  007562  6EFE               	movwf	tosh,c
  7261  007564  6AFF               	clrf	tosu,c
  7262  007566  50FA               	movf	pclath,w,c
  7263  007568  0012               	return		;indir
  7264  00756A                     u19769:
  7265                           
  7266                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7267  00756A  52E5               	movf	postdec1,f,c
  7268  00756C  0012               	return		;funcret
  7269  00756E                     __end_of_UnconfirmedTransmissionCallback:
  7270                           	opt stack 0
  7271                           tosu	equ	0xFFF
  7272                           tosh	equ	0xFFE
  7273                           tosl	equ	0xFFD
  7274                           pclath	equ	0xFFA
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           intcon	equ	0xFF2
  7282                           intcon2	equ	0xFF1
  7283                           intcon3	equ	0xFF0
  7284                           postinc0	equ	0xFEE
  7285                           wreg	equ	0xFE8
  7286                           postinc1	equ	0xFE6
  7287                           postdec1	equ	0xFE5
  7288                           plusw1	equ	0xFE3
  7289                           fsr1h	equ	0xFE2
  7290                           fsr1l	equ	0xFE1
  7291                           indf2	equ	0xFDF
  7292                           postinc2	equ	0xFDE
  7293                           postdec2	equ	0xFDD
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function _GetRx1Freq *****************
  7299 ;; Defined at:
  7300 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  4    0[BANK0 ] unsigned long 
  7307 ;; Registers used:
  7308 ;;		None
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;Total ram usage:        4 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    7
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_LORAWAN_ReceiveWindow1Callback
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text39
  7329  008B16                     __ptext39:
  7330                           	opt stack 0
  7331  008B16                     _GetRx1Freq:
  7332                           	opt stack 20
  7333                           
  7334                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7335                           
  7336                           ;incstack = 0
  7337  008B16  C213  F060         	movff	_loRa+19,?_GetRx1Freq
  7338  008B1A  C214  F061         	movff	_loRa+20,?_GetRx1Freq+1
  7339  008B1E  C215  F062         	movff	_loRa+21,?_GetRx1Freq+2
  7340  008B22  C216  F063         	movff	_loRa+22,?_GetRx1Freq+3
  7341  008B26  0012               	return		;funcret
  7342  008B28                     __end_of_GetRx1Freq:
  7343                           	opt stack 0
  7344                           tosu	equ	0xFFF
  7345                           tosh	equ	0xFFE
  7346                           tosl	equ	0xFFD
  7347                           pclath	equ	0xFFA
  7348                           tblptru	equ	0xFF8
  7349                           tblptrh	equ	0xFF7
  7350                           tblptrl	equ	0xFF6
  7351                           tablat	equ	0xFF5
  7352                           prodh	equ	0xFF4
  7353                           prodl	equ	0xFF3
  7354                           intcon	equ	0xFF2
  7355                           intcon2	equ	0xFF1
  7356                           intcon3	equ	0xFF0
  7357                           postinc0	equ	0xFEE
  7358                           wreg	equ	0xFE8
  7359                           postinc1	equ	0xFE6
  7360                           postdec1	equ	0xFE5
  7361                           plusw1	equ	0xFE3
  7362                           fsr1h	equ	0xFE2
  7363                           fsr1l	equ	0xFE1
  7364                           indf2	equ	0xFDF
  7365                           postinc2	equ	0xFDE
  7366                           postdec2	equ	0xFDD
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function _RADIO_DIO5 *****************
  7372 ;; Defined at:
  7373 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;Total ram usage:        2 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:   11
  7394 ;; This function calls:
  7395 ;;		_RADIO_RegisterRead
  7396 ;;		_RADIO_UnhandledInterrupt
  7397 ;; This function is called by:
  7398 ;;		_LORAWAN_Mainloop
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text40
  7403  00871C                     __ptext40:
  7404                           	opt stack 0
  7405  00871C                     _RADIO_DIO5:
  7406                           	opt stack 18
  7407                           
  7408                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7409                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7410                           
  7411                           ;incstack = 0
  7412  00871C  0E41               	movlw	65
  7413  00871E  ECCA  F043         	call	_RADIO_RegisterRead
  7414  008722  0100               	movlb	0	; () banked
  7415  008724  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  7416  008726  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
  7417  008728  0B0F               	andlw	15
  7418  00872A  0B03               	andlw	3
  7419  00872C  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  7420                           
  7421                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7422  00872E  0E01               	movlw	1
  7423  008730  ECCA  F043         	call	_RADIO_RegisterRead
  7424  008734  0100               	movlb	0	; () banked
  7425  008736  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  7426  008738  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
  7427  00873A  0012               	return	
  7428                           
  7429                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7430                           
  7431                           ; BSR set to: 0
  7432                           
  7433                           ;radio_driver_SX1276.c: 1354: {
  7434                           ;radio_driver_SX1276.c: 1355: default:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;radio_driver_SX1276.c: 1351: {
  7438                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  7439  00873C  0E01               	movlw	1
  7440  00873E  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  7441                           
  7442                           ;radio_driver_SX1276.c: 1358: }
  7443                           
  7444                           ;radio_driver_SX1276.c: 1357: break;
  7445  008742  0012               	return	
  7446  008744                     __end_of_RADIO_DIO5:
  7447                           	opt stack 0
  7448                           tosu	equ	0xFFF
  7449                           tosh	equ	0xFFE
  7450                           tosl	equ	0xFFD
  7451                           pclath	equ	0xFFA
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           intcon	equ	0xFF2
  7459                           intcon2	equ	0xFF1
  7460                           intcon3	equ	0xFF0
  7461                           postinc0	equ	0xFEE
  7462                           wreg	equ	0xFE8
  7463                           postinc1	equ	0xFE6
  7464                           postdec1	equ	0xFE5
  7465                           plusw1	equ	0xFE3
  7466                           fsr1h	equ	0xFE2
  7467                           fsr1l	equ	0xFE1
  7468                           indf2	equ	0xFDF
  7469                           postinc2	equ	0xFDE
  7470                           postdec2	equ	0xFDD
  7471                           fsr2h	equ	0xFDA
  7472                           fsr2l	equ	0xFD9
  7473                           status	equ	0xFD8
  7474                           
  7475 ;; *************** function _RADIO_DIO4 *****************
  7476 ;; Defined at:
  7477 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;		None
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  dioMapping      1    7[BANK0 ] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      void 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;Total ram usage:        3 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; Hardware stack levels required when called:   11
  7498 ;; This function calls:
  7499 ;;		_RADIO_RegisterRead
  7500 ;;		_RADIO_UnhandledInterrupt
  7501 ;; This function is called by:
  7502 ;;		_LORAWAN_Mainloop
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text41
  7507  008386                     __ptext41:
  7508                           	opt stack 0
  7509  008386                     _RADIO_DIO4:
  7510                           	opt stack 18
  7511                           
  7512                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  7513                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  7514                           
  7515                           ;incstack = 0
  7516  008386  0E41               	movlw	65
  7517  008388  ECCA  F043         	call	_RADIO_RegisterRead
  7518  00838C  0100               	movlb	0	; () banked
  7519  00838E  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  7520  008390  0E06               	movlw	6
  7521  008392  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  7522  008394                     u19895:
  7523  008394  90D8               	bcf	status,0,c
  7524  008396  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
  7525  008398  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  7526  00839A  D7FC               	goto	u19895
  7527  00839C  5165               	movf	??_RADIO_DIO4& (0+255),w,b
  7528  00839E  0B03               	andlw	3
  7529  0083A0  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  7530                           
  7531                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7532  0083A2  0E01               	movlw	1
  7533  0083A4  ECCA  F043         	call	_RADIO_RegisterRead
  7534  0083A8  0100               	movlb	0	; () banked
  7535  0083AA  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  7536  0083AC  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
  7537  0083AE  0012               	return	
  7538                           
  7539                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7540                           
  7541                           ; BSR set to: 0
  7542                           
  7543                           ;radio_driver_SX1276.c: 1331: {
  7544                           ;radio_driver_SX1276.c: 1332: default:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;radio_driver_SX1276.c: 1328: {
  7548                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  7549  0083B0  0E01               	movlw	1
  7550  0083B2  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  7551                           
  7552                           ;radio_driver_SX1276.c: 1335: }
  7553                           
  7554                           ;radio_driver_SX1276.c: 1334: break;
  7555  0083B6  0012               	return	
  7556  0083B8                     __end_of_RADIO_DIO4:
  7557                           	opt stack 0
  7558                           tosu	equ	0xFFF
  7559                           tosh	equ	0xFFE
  7560                           tosl	equ	0xFFD
  7561                           pclath	equ	0xFFA
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           prodh	equ	0xFF4
  7567                           prodl	equ	0xFF3
  7568                           intcon	equ	0xFF2
  7569                           intcon2	equ	0xFF1
  7570                           intcon3	equ	0xFF0
  7571                           postinc0	equ	0xFEE
  7572                           wreg	equ	0xFE8
  7573                           postinc1	equ	0xFE6
  7574                           postdec1	equ	0xFE5
  7575                           plusw1	equ	0xFE3
  7576                           fsr1h	equ	0xFE2
  7577                           fsr1l	equ	0xFE1
  7578                           indf2	equ	0xFDF
  7579                           postinc2	equ	0xFDE
  7580                           postdec2	equ	0xFDD
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _RADIO_DIO3 *****************
  7586 ;; Defined at:
  7587 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        2 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:   11
  7608 ;; This function calls:
  7609 ;;		_RADIO_RegisterRead
  7610 ;;		_RADIO_UnhandledInterrupt
  7611 ;; This function is called by:
  7612 ;;		_LORAWAN_Mainloop
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text42
  7617  008850                     __ptext42:
  7618                           	opt stack 0
  7619  008850                     _RADIO_DIO3:
  7620                           	opt stack 18
  7621                           
  7622                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  7623                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  7624                           
  7625                           ;incstack = 0
  7626  008850  0E40               	movlw	64
  7627  008852  ECCA  F043         	call	_RADIO_RegisterRead
  7628  008856  0B03               	andlw	3
  7629  008858  0100               	movlb	0	; () banked
  7630  00885A  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  7631                           
  7632                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7633  00885C  0E01               	movlw	1
  7634  00885E  ECCA  F043         	call	_RADIO_RegisterRead
  7635  008862  0100               	movlb	0	; () banked
  7636  008864  6F65               	movwf	??_RADIO_DIO3& (0+255),b
  7637  008866  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
  7638  008868  0012               	return	
  7639                           
  7640                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7641                           
  7642                           ; BSR set to: 0
  7643                           
  7644                           ;radio_driver_SX1276.c: 1308: {
  7645                           ;radio_driver_SX1276.c: 1309: default:
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;radio_driver_SX1276.c: 1305: {
  7649                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  7650  00886A  0E01               	movlw	1
  7651  00886C  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  7652                           
  7653                           ;radio_driver_SX1276.c: 1312: }
  7654                           
  7655                           ;radio_driver_SX1276.c: 1311: break;
  7656  008870  0012               	return	
  7657  008872                     __end_of_RADIO_DIO3:
  7658                           	opt stack 0
  7659                           tosu	equ	0xFFF
  7660                           tosh	equ	0xFFE
  7661                           tosl	equ	0xFFD
  7662                           pclath	equ	0xFFA
  7663                           tblptru	equ	0xFF8
  7664                           tblptrh	equ	0xFF7
  7665                           tblptrl	equ	0xFF6
  7666                           tablat	equ	0xFF5
  7667                           prodh	equ	0xFF4
  7668                           prodl	equ	0xFF3
  7669                           intcon	equ	0xFF2
  7670                           intcon2	equ	0xFF1
  7671                           intcon3	equ	0xFF0
  7672                           postinc0	equ	0xFEE
  7673                           wreg	equ	0xFE8
  7674                           postinc1	equ	0xFE6
  7675                           postdec1	equ	0xFE5
  7676                           plusw1	equ	0xFE3
  7677                           fsr1h	equ	0xFE2
  7678                           fsr1l	equ	0xFE1
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           fsr2h	equ	0xFDA
  7683                           fsr2l	equ	0xFD9
  7684                           status	equ	0xFD8
  7685                           
  7686 ;; *************** function _RADIO_DIO2 *****************
  7687 ;; Defined at:
  7688 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  7693 ;;  opMode          1   27[BANK0 ] unsigned char 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        3 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:   12
  7710 ;; This function calls:
  7711 ;;		_RADIO_FHSSChangeChannel
  7712 ;;		_RADIO_RegisterRead
  7713 ;;		_RADIO_UnhandledInterrupt
  7714 ;; This function is called by:
  7715 ;;		_LORAWAN_Mainloop
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text43
  7720  007CC8                     __ptext43:
  7721                           	opt stack 0
  7722  007CC8                     _RADIO_DIO2:
  7723                           	opt stack 17
  7724                           
  7725                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  7726                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  7727                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  7728                           
  7729                           ;incstack = 0
  7730  007CC8  0E40               	movlw	64
  7731  007CCA  ECCA  F043         	call	_RADIO_RegisterRead
  7732  007CCE  0100               	movlb	0	; () banked
  7733  007CD0  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7734  007CD2  90D8               	bcf	status,0,c
  7735  007CD4  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
  7736  007CD6  90D8               	bcf	status,0,c
  7737  007CD8  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
  7738  007CDA  0B03               	andlw	3
  7739  007CDC  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  7740                           
  7741                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  7742  007CDE  0E01               	movlw	1
  7743  007CE0  ECCA  F043         	call	_RADIO_RegisterRead
  7744  007CE4  0100               	movlb	0	; () banked
  7745  007CE6  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
  7746                           
  7747                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7748  007CE8  0E01               	movlw	1
  7749  007CEA  ECCA  F043         	call	_RADIO_RegisterRead
  7750  007CEE  0100               	movlb	0	; () banked
  7751  007CF0  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7752  007CF2  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
  7753  007CF4  0012               	return	
  7754  007CF6  D007               	goto	l684
  7755  007CF8                     
  7756                           ; BSR set to: 0
  7757                           ;radio_driver_SX1276.c: 1283: case 0x01:
  7758                           ;radio_driver_SX1276.c: 1284: case 0x02:
  7759                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  7760                           
  7761                           ; BSR set to: 0
  7762                           
  7763                           ; BSR set to: 0
  7764                           
  7765                           ; BSR set to: 0
  7766  007CF8  EC2B  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  7767                           
  7768                           ;radio_driver_SX1276.c: 1286: break;
  7769  007CFC  0012               	return	
  7770  007CFE                     
  7771                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7772  007CFE  0E01               	movlw	1
  7773  007D00  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  7774                           
  7775                           ;radio_driver_SX1276.c: 1290: }
  7776                           
  7777                           ;radio_driver_SX1276.c: 1289: break;
  7778  007D04  0012               	return	
  7779  007D06                     l684:
  7780  007D06  0100               	movlb	0	; () banked
  7781  007D08  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  7782                           
  7783                           ; Switch size 1, requested type "space"
  7784                           ; Number of cases is 3, Range of values is 0 to 2
  7785                           ; switch strategies available:
  7786                           ; Name         Instructions Cycles
  7787                           ; simple_byte           10     6 (average)
  7788                           ;	Chosen strategy is simple_byte
  7789  007D0A  0A00               	xorlw	0	; case 0
  7790  007D0C  B4D8               	btfsc	status,2,c
  7791  007D0E  D7F4               	goto	l685
  7792  007D10  0A01               	xorlw	1	; case 1
  7793  007D12  B4D8               	btfsc	status,2,c
  7794  007D14  D7F1               	goto	l685
  7795  007D16  0A03               	xorlw	3	; case 2
  7796  007D18  B4D8               	btfsc	status,2,c
  7797  007D1A  D7EE               	goto	l685
  7798  007D1C  D7F0               	goto	l689
  7799  007D1E                     __end_of_RADIO_DIO2:
  7800                           	opt stack 0
  7801                           tosu	equ	0xFFF
  7802                           tosh	equ	0xFFE
  7803                           tosl	equ	0xFFD
  7804                           pclath	equ	0xFFA
  7805                           tblptru	equ	0xFF8
  7806                           tblptrh	equ	0xFF7
  7807                           tblptrl	equ	0xFF6
  7808                           tablat	equ	0xFF5
  7809                           prodh	equ	0xFF4
  7810                           prodl	equ	0xFF3
  7811                           intcon	equ	0xFF2
  7812                           intcon2	equ	0xFF1
  7813                           intcon3	equ	0xFF0
  7814                           postinc0	equ	0xFEE
  7815                           wreg	equ	0xFE8
  7816                           postinc1	equ	0xFE6
  7817                           postdec1	equ	0xFE5
  7818                           plusw1	equ	0xFE3
  7819                           fsr1h	equ	0xFE2
  7820                           fsr1l	equ	0xFE1
  7821                           indf2	equ	0xFDF
  7822                           postinc2	equ	0xFDE
  7823                           postdec2	equ	0xFDD
  7824                           fsr2h	equ	0xFDA
  7825                           fsr2l	equ	0xFD9
  7826                           status	equ	0xFD8
  7827                           
  7828 ;; *************** function _RADIO_DIO1 *****************
  7829 ;; Defined at:
  7830 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  dioMapping      1  108[BANK0 ] unsigned char 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;Total ram usage:        2 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:   17
  7851 ;; This function calls:
  7852 ;;		_RADIO_FHSSChangeChannel
  7853 ;;		_RADIO_RegisterRead
  7854 ;;		_RADIO_RxTimeout
  7855 ;;		_RADIO_UnhandledInterrupt
  7856 ;; This function is called by:
  7857 ;;		_LORAWAN_Mainloop
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text44
  7862  007F12                     __ptext44:
  7863                           	opt stack 0
  7864  007F12                     _RADIO_DIO1:
  7865                           	opt stack 12
  7866                           
  7867                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  7868                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  7869                           
  7870                           ;incstack = 0
  7871  007F12  0E40               	movlw	64
  7872  007F14  ECCA  F043         	call	_RADIO_RegisterRead
  7873  007F18  0100               	movlb	0	; () banked
  7874  007F1A  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  7875  007F1C  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
  7876  007F1E  0B0F               	andlw	15
  7877  007F20  0B03               	andlw	3
  7878  007F22  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  7879                           
  7880                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7881  007F24  0E01               	movlw	1
  7882  007F26  ECCA  F043         	call	_RADIO_RegisterRead
  7883  007F2A  0100               	movlb	0	; () banked
  7884  007F2C  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  7885  007F2E  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
  7886  007F30  D00B               	goto	l670
  7887  007F32  D013               	goto	l676
  7888  007F34                     
  7889                           ; BSR set to: 0
  7890                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  7891                           
  7892                           ; BSR set to: 0
  7893  007F34  ECF9  F042         	call	_RADIO_RxTimeout	;wreg free
  7894                           
  7895                           ;radio_driver_SX1276.c: 1244: break;
  7896  007F38  0012               	return	
  7897  007F3A                     
  7898                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  7899  007F3A  EC2B  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  7900                           
  7901                           ;radio_driver_SX1276.c: 1247: break;
  7902  007F3E  0012               	return	
  7903  007F40                     
  7904                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7905  007F40  0E01               	movlw	1
  7906  007F42  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  7907                           
  7908                           ;radio_driver_SX1276.c: 1251: }
  7909                           
  7910                           ;radio_driver_SX1276.c: 1250: break;
  7911  007F46  0012               	return	
  7912  007F48                     l670:
  7913  007F48  0100               	movlb	0	; () banked
  7914  007F4A  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7915                           
  7916                           ; Switch size 1, requested type "space"
  7917                           ; Number of cases is 2, Range of values is 0 to 1
  7918                           ; switch strategies available:
  7919                           ; Name         Instructions Cycles
  7920                           ; simple_byte            7     4 (average)
  7921                           ;	Chosen strategy is simple_byte
  7922  007F4C  0A00               	xorlw	0	; case 0
  7923  007F4E  B4D8               	btfsc	status,2,c
  7924  007F50  D7F1               	goto	l671
  7925  007F52  0A01               	xorlw	1	; case 1
  7926  007F54  B4D8               	btfsc	status,2,c
  7927  007F56  D7F1               	goto	l673
  7928  007F58  D7F3               	goto	l674
  7929  007F5A                     l676:
  7930                           
  7931                           ; BSR set to: 0
  7932                           
  7933                           ; BSR set to: 0
  7934  007F5A  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7935                           
  7936                           ; Switch size 1, requested type "space"
  7937                           ; Number of cases is 1, Range of values is 0 to 0
  7938                           ; switch strategies available:
  7939                           ; Name         Instructions Cycles
  7940                           ; simple_byte            4     3 (average)
  7941                           ;	Chosen strategy is simple_byte
  7942  007F5C  0A00               	xorlw	0	; case 0
  7943                           
  7944                           ; BSR set to: 0
  7945  007F5E  0012               	return	
  7946  007F60                     __end_of_RADIO_DIO1:
  7947                           	opt stack 0
  7948                           tosu	equ	0xFFF
  7949                           tosh	equ	0xFFE
  7950                           tosl	equ	0xFFD
  7951                           pclath	equ	0xFFA
  7952                           tblptru	equ	0xFF8
  7953                           tblptrh	equ	0xFF7
  7954                           tblptrl	equ	0xFF6
  7955                           tablat	equ	0xFF5
  7956                           prodh	equ	0xFF4
  7957                           prodl	equ	0xFF3
  7958                           intcon	equ	0xFF2
  7959                           intcon2	equ	0xFF1
  7960                           intcon3	equ	0xFF0
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           postinc1	equ	0xFE6
  7964                           postdec1	equ	0xFE5
  7965                           plusw1	equ	0xFE3
  7966                           fsr1h	equ	0xFE2
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           fsr2h	equ	0xFDA
  7972                           fsr2l	equ	0xFD9
  7973                           status	equ	0xFD8
  7974                           
  7975 ;; *************** function _RADIO_RxTimeout *****************
  7976 ;; Defined at:
  7977 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;Total ram usage:        0 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:   16
  7998 ;; This function calls:
  7999 ;;		_LORAWAN_RxTimeout
  8000 ;;		_RADIO_RegisterWrite
  8001 ;;		_RADIO_WriteMode
  8002 ;;		_SwTimerStop
  8003 ;; This function is called by:
  8004 ;;		_RADIO_DIO1
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text45
  8009  0085F2                     __ptext45:
  8010                           	opt stack 0
  8011  0085F2                     _RADIO_RxTimeout:
  8012                           	opt stack 12
  8013                           
  8014                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8015                           
  8016                           ;incstack = 0
  8017  0085F2  0101               	movlb	1	; () banked
  8018  0085F4  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8019  0085F6  ECDE  F043         	call	_SwTimerStop
  8020                           
  8021                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8022  0085FA  0E80               	movlw	128
  8023  0085FC  0100               	movlb	0	; () banked
  8024  0085FE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8025  008600  0E12               	movlw	18
  8026  008602  EC7B  F044         	call	_RADIO_RegisterWrite
  8027                           
  8028                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8029  008606  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8030  00860A  0E00               	movlw	0
  8031  00860C  0100               	movlb	0	; () banked
  8032  00860E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8033  008610  0E00               	movlw	0
  8034  008612  ECE7  F02E         	call	_RADIO_WriteMode
  8035                           
  8036                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8037  008616  0101               	movlb	1	; () banked
  8038  008618  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8042  00861A  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  8043  00861E  0012               	return		;funcret
  8044  008620                     __end_of_RADIO_RxTimeout:
  8045                           	opt stack 0
  8046                           tosu	equ	0xFFF
  8047                           tosh	equ	0xFFE
  8048                           tosl	equ	0xFFD
  8049                           pclath	equ	0xFFA
  8050                           tblptru	equ	0xFF8
  8051                           tblptrh	equ	0xFF7
  8052                           tblptrl	equ	0xFF6
  8053                           tablat	equ	0xFF5
  8054                           prodh	equ	0xFF4
  8055                           prodl	equ	0xFF3
  8056                           intcon	equ	0xFF2
  8057                           intcon2	equ	0xFF1
  8058                           intcon3	equ	0xFF0
  8059                           postinc0	equ	0xFEE
  8060                           wreg	equ	0xFE8
  8061                           postinc1	equ	0xFE6
  8062                           postdec1	equ	0xFE5
  8063                           plusw1	equ	0xFE3
  8064                           fsr1h	equ	0xFE2
  8065                           fsr1l	equ	0xFE1
  8066                           indf2	equ	0xFDF
  8067                           postinc2	equ	0xFDE
  8068                           postdec2	equ	0xFDD
  8069                           fsr2h	equ	0xFDA
  8070                           fsr2l	equ	0xFD9
  8071                           status	equ	0xFD8
  8072                           
  8073 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8074 ;; Defined at:
  8075 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  irqFlags        1   25[BANK0 ] unsigned char 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8093 ;;Total ram usage:        1 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:   11
  8096 ;; This function calls:
  8097 ;;		_RADIO_RegisterRead
  8098 ;;		_RADIO_RegisterWrite
  8099 ;;		_RADIO_WriteFrequency
  8100 ;; This function is called by:
  8101 ;;		_RADIO_DIO1
  8102 ;;		_RADIO_DIO2
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text46
  8107  008256                     __ptext46:
  8108                           	opt stack 0
  8109  008256                     _RADIO_FHSSChangeChannel:
  8110                           	opt stack 17
  8111                           
  8112                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8113                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8114                           
  8115                           ;incstack = 0
  8116  008256  0E12               	movlw	18
  8117  008258  ECCA  F043         	call	_RADIO_RegisterRead
  8118  00825C  0100               	movlb	0	; () banked
  8119  00825E  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8123  008260  0101               	movlb	1	; () banked
  8124  008262  5199               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8125  008264  119A               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8126  008266  B4D8               	btfsc	status,2,c
  8127  008268  D00F               	goto	l647
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;radio_driver_SX1276.c: 1164: {
  8131                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8132  00826A  51AA               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8133  00826C  11AB               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8134  00826E  B4D8               	btfsc	status,2,c
  8135  008270  D00B               	goto	l647
  8136                           
  8137                           ; BSR set to: 1
  8138                           ;radio_driver_SX1276.c: 1166: {
  8139                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8140  008272  0E00               	movlw	0
  8141  008274  0100               	movlb	0	; () banked
  8142  008276  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  8143  008278  0E00               	movlw	0
  8144  00827A  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8145  00827C  0E00               	movlw	0
  8146  00827E  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8147  008280  0E00               	movlw	0
  8148  008282  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8149  008284  ECD5  F030         	call	_RADIO_WriteFrequency	;wreg free
  8150  008288                     l647:
  8151                           
  8152                           ;radio_driver_SX1276.c: 1168: }
  8153                           ;radio_driver_SX1276.c: 1169: }
  8154                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8155  008288  0E02               	movlw	2
  8156  00828A  0100               	movlb	0	; () banked
  8157  00828C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8158  00828E  0E12               	movlw	18
  8159  008290  EC7B  F044         	call	_RADIO_RegisterWrite
  8160  008294  0012               	return		;funcret
  8161  008296                     __end_of_RADIO_FHSSChangeChannel:
  8162                           	opt stack 0
  8163                           tosu	equ	0xFFF
  8164                           tosh	equ	0xFFE
  8165                           tosl	equ	0xFFD
  8166                           pclath	equ	0xFFA
  8167                           tblptru	equ	0xFF8
  8168                           tblptrh	equ	0xFF7
  8169                           tblptrl	equ	0xFF6
  8170                           tablat	equ	0xFF5
  8171                           prodh	equ	0xFF4
  8172                           prodl	equ	0xFF3
  8173                           intcon	equ	0xFF2
  8174                           intcon2	equ	0xFF1
  8175                           intcon3	equ	0xFF0
  8176                           postinc0	equ	0xFEE
  8177                           wreg	equ	0xFE8
  8178                           postinc1	equ	0xFE6
  8179                           postdec1	equ	0xFE5
  8180                           plusw1	equ	0xFE3
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           indf2	equ	0xFDF
  8184                           postinc2	equ	0xFDE
  8185                           postdec2	equ	0xFDD
  8186                           fsr2h	equ	0xFDA
  8187                           fsr2l	equ	0xFD9
  8188                           status	equ	0xFD8
  8189                           
  8190 ;; *************** function _RADIO_DIO0 *****************
  8191 ;; Defined at:
  8192 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  opMode          1  152[BANK0 ] unsigned char 
  8197 ;;  dioMapping      1  151[BANK0 ] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      void 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;Total ram usage:        4 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:   17
  8214 ;; This function calls:
  8215 ;;		_RADIO_FSKPacketSent
  8216 ;;		_RADIO_FSKPayloadReady
  8217 ;;		_RADIO_RegisterRead
  8218 ;;		_RADIO_RxDone
  8219 ;;		_RADIO_TxDone
  8220 ;;		_RADIO_UnhandledInterrupt
  8221 ;; This function is called by:
  8222 ;;		_LORAWAN_Mainloop
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text47
  8227  006F2E                     __ptext47:
  8228                           	opt stack 0
  8229  006F2E                     _RADIO_DIO0:
  8230                           	opt stack 12
  8231                           
  8232                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8233                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8234                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8235                           
  8236                           ;incstack = 0
  8237  006F2E  0E40               	movlw	64
  8238  006F30  ECCA  F043         	call	_RADIO_RegisterRead
  8239  006F34  0100               	movlb	0	; () banked
  8240  006F36  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
  8241  006F38  0E06               	movlw	6
  8242  006F3A  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8243  006F3C                     u19825:
  8244  006F3C  90D8               	bcf	status,0,c
  8245  006F3E  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8246  006F40  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8247  006F42  D7FC               	goto	u19825
  8248  006F44  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
  8249  006F46  0B03               	andlw	3
  8250  006F48  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8251                           
  8252                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8253  006F4A  0E01               	movlw	1
  8254  006F4C  ECCA  F043         	call	_RADIO_RegisterRead
  8255  006F50  0100               	movlb	0	; () banked
  8256  006F52  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8260  006F54  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  8261  006F56  D00B               	goto	l652
  8262  006F58  D02C               	goto	l658
  8263  006F5A                     
  8264                           ; BSR set to: 0
  8265                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  8266                           
  8267                           ; BSR set to: 0
  8268  006F5A  ECC0  F031         	call	_RADIO_RxDone	;wreg free
  8269                           
  8270                           ;radio_driver_SX1276.c: 1191: break;
  8271  006F5E  0012               	return	
  8272  006F60                     
  8273                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  8274  006F60  ECC4  F02C         	call	_RADIO_TxDone	;wreg free
  8275                           
  8276                           ;radio_driver_SX1276.c: 1194: break;
  8277  006F64  0012               	return	
  8278  006F66                     
  8279                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8280  006F66  0E01               	movlw	1
  8281  006F68  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  8282                           
  8283                           ;radio_driver_SX1276.c: 1198: }
  8284                           
  8285                           ;radio_driver_SX1276.c: 1197: break;
  8286  006F6C  0012               	return	
  8287  006F6E                     l652:
  8288  006F6E  0100               	movlb	0	; () banked
  8289  006F70  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8290                           
  8291                           ; Switch size 1, requested type "space"
  8292                           ; Number of cases is 2, Range of values is 0 to 1
  8293                           ; switch strategies available:
  8294                           ; Name         Instructions Cycles
  8295                           ; simple_byte            7     4 (average)
  8296                           ;	Chosen strategy is simple_byte
  8297  006F72  0A00               	xorlw	0	; case 0
  8298  006F74  B4D8               	btfsc	status,2,c
  8299  006F76  D7F1               	goto	l653
  8300  006F78  0A01               	xorlw	1	; case 1
  8301  006F7A  B4D8               	btfsc	status,2,c
  8302  006F7C  D7F1               	goto	l655
  8303  006F7E  D7F3               	goto	l656
  8304  006F80                     
  8305                           ; BSR set to: 0
  8306                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8307                           
  8308                           ; BSR set to: 0
  8309  006F80  0E07               	movlw	7
  8310  006F82  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8311                           
  8312                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8313  006F84  0E03               	movlw	3
  8314  006F86  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8315  006F88  A4D8               	btfss	status,2,c
  8316  006F8A  D003               	goto	l660
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;radio_driver_SX1276.c: 1209: {
  8320                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8321  006F8C  EC98  F02B         	call	_RADIO_FSKPacketSent	;wreg free
  8322                           
  8323                           ;radio_driver_SX1276.c: 1212: }
  8324  006F90  0012               	return	
  8325  006F92                     l660:
  8326                           
  8327                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8328  006F92  0E05               	movlw	5
  8329  006F94  0100               	movlb	0	; () banked
  8330  006F96  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8331  006F98  A4D8               	btfss	status,2,c
  8332  006F9A  D003               	goto	l662
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;radio_driver_SX1276.c: 1214: {
  8336                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8337  006F9C  EC03  F035         	call	_RADIO_FSKPayloadReady	;wreg free
  8338                           
  8339                           ;radio_driver_SX1276.c: 1217: }
  8340  006FA0  0012               	return	
  8341  006FA2                     l662:
  8342                           
  8343                           ;radio_driver_SX1276.c: 1218: else
  8344                           ;radio_driver_SX1276.c: 1219: {
  8345                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8346  006FA2  0E00               	movlw	0
  8347  006FA4  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  8348                           
  8349                           ;radio_driver_SX1276.c: 1221: }
  8350                           ;radio_driver_SX1276.c: 1222: break;
  8351  006FA8  0012               	return	
  8352  006FAA                     
  8353                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8354  006FAA  0E00               	movlw	0
  8355  006FAC  ECDC  F041         	call	_RADIO_UnhandledInterrupt
  8356                           
  8357                           ;radio_driver_SX1276.c: 1226: }
  8358                           
  8359                           ;radio_driver_SX1276.c: 1225: break;
  8360  006FB0  0012               	return	
  8361  006FB2                     l658:
  8362  006FB2  0100               	movlb	0	; () banked
  8363  006FB4  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8364                           
  8365                           ; Switch size 1, requested type "space"
  8366                           ; Number of cases is 1, Range of values is 0 to 0
  8367                           ; switch strategies available:
  8368                           ; Name         Instructions Cycles
  8369                           ; simple_byte            4     3 (average)
  8370                           ;	Chosen strategy is simple_byte
  8371  006FB6  0A00               	xorlw	0	; case 0
  8372  006FB8  B4D8               	btfsc	status,2,c
  8373  006FBA  D7E2               	goto	l659
  8374  006FBC  D7F6               	goto	l665
  8375  006FBE                     __end_of_RADIO_DIO0:
  8376                           	opt stack 0
  8377                           tosu	equ	0xFFF
  8378                           tosh	equ	0xFFE
  8379                           tosl	equ	0xFFD
  8380                           pclath	equ	0xFFA
  8381                           tblptru	equ	0xFF8
  8382                           tblptrh	equ	0xFF7
  8383                           tblptrl	equ	0xFF6
  8384                           tablat	equ	0xFF5
  8385                           prodh	equ	0xFF4
  8386                           prodl	equ	0xFF3
  8387                           intcon	equ	0xFF2
  8388                           intcon2	equ	0xFF1
  8389                           intcon3	equ	0xFF0
  8390                           postinc0	equ	0xFEE
  8391                           wreg	equ	0xFE8
  8392                           postinc1	equ	0xFE6
  8393                           postdec1	equ	0xFE5
  8394                           plusw1	equ	0xFE3
  8395                           fsr1h	equ	0xFE2
  8396                           fsr1l	equ	0xFE1
  8397                           indf2	equ	0xFDF
  8398                           postinc2	equ	0xFDE
  8399                           postdec2	equ	0xFDD
  8400                           fsr2h	equ	0xFDA
  8401                           fsr2l	equ	0xFD9
  8402                           status	equ	0xFD8
  8403                           
  8404 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8405 ;; Defined at:
  8406 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  modulation      1    wreg     enum E6984
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  modulation      1    4[BANK0 ] enum E6984
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0, cstack
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8424 ;;Total ram usage:        1 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:   10
  8427 ;; This function calls:
  8428 ;;		_RADIO_RegisterWrite
  8429 ;; This function is called by:
  8430 ;;		_RADIO_DIO0
  8431 ;;		_RADIO_DIO1
  8432 ;;		_RADIO_DIO2
  8433 ;;		_RADIO_DIO3
  8434 ;;		_RADIO_DIO4
  8435 ;;		_RADIO_DIO5
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text48
  8440  0083B8                     __ptext48:
  8441                           	opt stack 0
  8442  0083B8                     _RADIO_UnhandledInterrupt:
  8443                           	opt stack 18
  8444                           
  8445                           ;incstack = 0
  8446                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8447  0083B8  0100               	movlb	0	; () banked
  8448  0083BA  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8449                           
  8450                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8451  0083BC  0100               	movlb	0	; () banked
  8452  0083BE  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8453  0083C0  A4D8               	btfss	status,2,c
  8454  0083C2  D006               	goto	l641
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;radio_driver_SX1276.c: 1145: {
  8458                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8459  0083C4  0EFF               	movlw	255
  8460  0083C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8461  0083C8  0E12               	movlw	18
  8462  0083CA  EC7B  F044         	call	_RADIO_RegisterWrite
  8463                           
  8464                           ;radio_driver_SX1276.c: 1147: }
  8465  0083CE  0012               	return	
  8466  0083D0                     l641:
  8467                           
  8468                           ;radio_driver_SX1276.c: 1148: else
  8469                           ;radio_driver_SX1276.c: 1149: {
  8470                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8471  0083D0  0EFF               	movlw	255
  8472  0083D2  0100               	movlb	0	; () banked
  8473  0083D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8474  0083D6  0E3E               	movlw	62
  8475  0083D8  EC7B  F044         	call	_RADIO_RegisterWrite
  8476                           
  8477                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8478  0083DC  0EFF               	movlw	255
  8479  0083DE  0100               	movlb	0	; () banked
  8480  0083E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8481  0083E2  0E3F               	movlw	63
  8482  0083E4  EC7B  F044         	call	_RADIO_RegisterWrite
  8483  0083E8  0012               	return	
  8484  0083EA                     __end_of_RADIO_UnhandledInterrupt:
  8485                           	opt stack 0
  8486                           tosu	equ	0xFFF
  8487                           tosh	equ	0xFFE
  8488                           tosl	equ	0xFFD
  8489                           pclath	equ	0xFFA
  8490                           tblptru	equ	0xFF8
  8491                           tblptrh	equ	0xFF7
  8492                           tblptrl	equ	0xFF6
  8493                           tablat	equ	0xFF5
  8494                           prodh	equ	0xFF4
  8495                           prodl	equ	0xFF3
  8496                           intcon	equ	0xFF2
  8497                           intcon2	equ	0xFF1
  8498                           intcon3	equ	0xFF0
  8499                           postinc0	equ	0xFEE
  8500                           wreg	equ	0xFE8
  8501                           postinc1	equ	0xFE6
  8502                           postdec1	equ	0xFE5
  8503                           plusw1	equ	0xFE3
  8504                           fsr1h	equ	0xFE2
  8505                           fsr1l	equ	0xFE1
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function _RADIO_TxDone *****************
  8514 ;; Defined at:
  8515 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;Total ram usage:       12 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:   15
  8536 ;; This function calls:
  8537 ;;		_LORAWAN_TxDone
  8538 ;;		_RADIO_RegisterWrite
  8539 ;;		_RADIO_WriteMode
  8540 ;;		_SwTimerReadValue
  8541 ;;		_SwTimerStop
  8542 ;;		___lmul
  8543 ;; This function is called by:
  8544 ;;		_RADIO_DIO0
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text49
  8549  005988                     __ptext49:
  8550                           	opt stack 0
  8551  005988                     _RADIO_TxDone:
  8552                           	opt stack 13
  8553                           
  8554                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8555                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8556                           
  8557                           ;incstack = 0
  8558  005988  0101               	movlb	1	; () banked
  8559  00598A  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8560  00598C  ECDE  F043         	call	_SwTimerStop
  8561                           
  8562                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8563  005990  0E08               	movlw	8
  8564  005992  0100               	movlb	0	; () banked
  8565  005994  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8566  005996  0E12               	movlw	18
  8567  005998  EC7B  F044         	call	_RADIO_RegisterWrite
  8568                           
  8569                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8570  00599C  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8571  0059A0  0E00               	movlw	0
  8572  0059A2  0100               	movlb	0	; () banked
  8573  0059A4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8574  0059A6  0E00               	movlw	0
  8575  0059A8  ECE7  F02E         	call	_RADIO_WriteMode
  8576                           
  8577                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8578  0059AC  0101               	movlb	1	; () banked
  8579  0059AE  919E               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8583  0059B0  B99E               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8584  0059B2  0012               	return	
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;radio_driver_SX1276.c: 1087: {
  8588                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8589  0059B4  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8590  0059B6  EC4B  F041         	call	_SwTimerReadValue
  8591  0059BA  0100               	movlb	0	; () banked
  8592  0059BC  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8593  0059BE  E108               	bnz	u19110
  8594  0059C0  0E1F               	movlw	31
  8595  0059C2  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
  8596  0059C4  0EAC               	movlw	172
  8597  0059C6  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8598  0059C8  0EDF               	movlw	223
  8599  0059CA  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8600  0059CC  A0D8               	btfss	status,0,c
  8601  0059CE  D021               	goto	l616
  8602  0059D0                     u19110:
  8603                           
  8604                           ; BSR set to: 0
  8605  0059D0  0101               	movlb	1	; () banked
  8606  0059D2  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8607  0059D4  EC4B  F041         	call	_SwTimerReadValue
  8608  0059D8  0E0D               	movlw	13
  8609  0059DA  D006               	goto	u19120
  8610  0059DC                     u19125:
  8611  0059DC  0100               	movlb	0	; () banked
  8612  0059DE  90D8               	bcf	status,0,c
  8613  0059E0  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  8614  0059E2  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  8615  0059E4  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  8616  0059E6  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
  8617  0059E8                     u19120:
  8618  0059E8  2EE8               	decfsz	wreg,f,c
  8619  0059EA  D7F8               	goto	u19125
  8620  0059EC  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8621  0059F0  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8622  0059F4  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8623  0059F8  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8624  0059FC  0E7D               	movlw	125
  8625  0059FE  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8626  005A00  0E00               	movlw	0
  8627  005A02  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8628  005A04  0E00               	movlw	0
  8629  005A06  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8630  005A08  0E00               	movlw	0
  8631  005A0A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8632  005A0C  EC38  F03E         	call	___lmul	;wreg free
  8633  005A10  D021               	goto	L5
  8634  005A12                     l616:
  8635  005A12  0101               	movlb	1	; () banked
  8636  005A14  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8637  005A16  EC4B  F041         	call	_SwTimerReadValue
  8638  005A1A  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8639  005A1E  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8640  005A22  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8641  005A26  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8642  005A2A  0E7D               	movlw	125
  8643  005A2C  0100               	movlb	0	; () banked
  8644  005A2E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8645  005A30  0E00               	movlw	0
  8646  005A32  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8647  005A34  0E00               	movlw	0
  8648  005A36  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8649  005A38  0E00               	movlw	0
  8650  005A3A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8651  005A3C  EC38  F03E         	call	___lmul	;wreg free
  8652  005A40  0E0D               	movlw	13
  8653  005A42  D006               	goto	u19130
  8654  005A44                     u19135:
  8655  005A44  0100               	movlb	0	; () banked
  8656  005A46  90D8               	bcf	status,0,c
  8657  005A48  339D               	rrcf	(?___lmul+3)& (0+255),f,b
  8658  005A4A  339C               	rrcf	(?___lmul+2)& (0+255),f,b
  8659  005A4C  339B               	rrcf	(?___lmul+1)& (0+255),f,b
  8660  005A4E  339A               	rrcf	?___lmul& (0+255),f,b
  8661  005A50                     u19130:
  8662  005A50  2EE8               	decfsz	wreg,f,c
  8663  005A52  D7F8               	goto	u19135
  8664  005A54                     L5:
  8665  005A54  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$1094
  8666  005A58  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$1094+1
  8667  005A5C  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$1094+2
  8668  005A60  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$1094+3
  8669                           
  8670                           ; BSR set to: 0
  8671  005A64  C0EB  F0E3         	movff	_RADIO_TxDone$1094,??_RADIO_TxDone
  8672  005A68  C0EC  F0E4         	movff	_RADIO_TxDone$1094+1,??_RADIO_TxDone+1
  8673  005A6C  C0ED  F0E5         	movff	_RADIO_TxDone$1094+2,??_RADIO_TxDone+2
  8674  005A70  C0EE  F0E6         	movff	_RADIO_TxDone$1094+3,??_RADIO_TxDone+3
  8675  005A74  0100               	movlb	0	; () banked
  8676  005A76  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
  8677  005A78  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  8678  005A7A  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  8679  005A7C  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  8680  005A7E  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
  8681  005A80  0E00               	movlw	0
  8682  005A82  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  8683  005A84  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  8684  005A86  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  8685  005A88  0E20               	movlw	32
  8686  005A8A  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
  8687  005A8C  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  8688  005A8E  0E4E               	movlw	78
  8689  005A90  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  8690  005A92  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  8691  005A94  0E00               	movlw	0
  8692  005A96  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  8693  005A98  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  8694  005A9A  0E00               	movlw	0
  8695  005A9C  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  8696  005A9E  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  8700  005AA0  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  8701  005AA4  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  8702  005AA8  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  8703  005AAC  0012               	return	
  8704  005AAE                     __end_of_RADIO_TxDone:
  8705                           	opt stack 0
  8706                           tosu	equ	0xFFF
  8707                           tosh	equ	0xFFE
  8708                           tosl	equ	0xFFD
  8709                           pclath	equ	0xFFA
  8710                           tblptru	equ	0xFF8
  8711                           tblptrh	equ	0xFF7
  8712                           tblptrl	equ	0xFF6
  8713                           tablat	equ	0xFF5
  8714                           prodh	equ	0xFF4
  8715                           prodl	equ	0xFF3
  8716                           intcon	equ	0xFF2
  8717                           intcon2	equ	0xFF1
  8718                           intcon3	equ	0xFF0
  8719                           postinc0	equ	0xFEE
  8720                           wreg	equ	0xFE8
  8721                           postinc1	equ	0xFE6
  8722                           postdec1	equ	0xFE5
  8723                           plusw1	equ	0xFE3
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _RADIO_RxDone *****************
  8734 ;; Defined at:
  8735 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  i               1  148[BANK0 ] unsigned char 
  8740 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;Total ram usage:        2 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:   16
  8757 ;; This function calls:
  8758 ;;		_HALSPICSAssert
  8759 ;;		_HALSPICSDeassert
  8760 ;;		_HALSPISend
  8761 ;;		_LORAWAN_RxDone
  8762 ;;		_RADIO_RegisterRead
  8763 ;;		_RADIO_RegisterWrite
  8764 ;;		_RADIO_WriteMode
  8765 ;;		_SwTimerStop
  8766 ;;		___abdiv
  8767 ;; This function is called by:
  8768 ;;		_RADIO_DIO0
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text50
  8773  006380                     __ptext50:
  8774                           	opt stack 0
  8775  006380                     _RADIO_RxDone:
  8776                           	opt stack 12
  8777                           
  8778                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  8779                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  8780                           
  8781                           ;incstack = 0
  8782  006380  0E12               	movlw	18
  8783  006382  ECCA  F043         	call	_RADIO_RegisterRead
  8784  006386  0100               	movlb	0	; () banked
  8785  006388  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  8786                           
  8787                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  8788  00638A  0E70               	movlw	112
  8789  00638C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8790  00638E  0E12               	movlw	18
  8791  006390  EC7B  F044         	call	_RADIO_RegisterWrite
  8792                           
  8793                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  8794  006394  0100               	movlb	0	; () banked
  8795  006396  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  8796  006398  0B50               	andlw	80
  8797  00639A  0A50               	xorlw	80
  8798  00639C  A4D8               	btfss	status,2,c
  8799  00639E  0012               	return	
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;radio_driver_SX1276.c: 969: {
  8803                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8804  0063A0  0101               	movlb	1	; () banked
  8805  0063A2  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8806  0063A4  ECDE  F043         	call	_SwTimerStop
  8807                           
  8808                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  8809  0063A8  0E1C               	movlw	28
  8810  0063AA  ECCA  F043         	call	_RADIO_RegisterRead
  8811  0063AE  0100               	movlb	0	; () banked
  8812  0063B0  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  8816  0063B2  0101               	movlb	1	; () banked
  8817  0063B4  5197               	movf	(_RadioConfiguration+28)& (0+255),w,b
  8818  0063B6  B4D8               	btfsc	status,2,c
  8819  0063B8  D004               	goto	u19030
  8820                           
  8821                           ; BSR set to: 1
  8822  0063BA  0100               	movlb	0	; () banked
  8823  0063BC  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  8824                           
  8825                           ; BSR set to: 0
  8826  0063BE  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
  8827  0063C0  D03C               	goto	l588
  8828  0063C2                     u19030:
  8829                           
  8830                           ;radio_driver_SX1276.c: 976: {
  8831                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  8832                           
  8833                           ; BSR set to: 0
  8834  0063C2  0E13               	movlw	19
  8835  0063C4  ECCA  F043         	call	_RADIO_RegisterRead
  8836  0063C8  0101               	movlb	1	; () banked
  8837  0063CA  6F9F               	movwf	(_RadioConfiguration+36)& (0+255),b
  8838                           
  8839                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  8840  0063CC  0E00               	movlw	0
  8841  0063CE  0100               	movlb	0	; () banked
  8842  0063D0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8843  0063D2  0E0D               	movlw	13
  8844  0063D4  EC7B  F044         	call	_RADIO_RegisterWrite
  8845                           
  8846                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  8847  0063D8  EC5D  F046         	call	_HALSPICSAssert	;wreg free
  8848                           
  8849                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  8850  0063DC  0E00               	movlw	0
  8851  0063DE  ECDC  F045         	call	_HALSPISend
  8852                           
  8853                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8854  0063E2  0E00               	movlw	0
  8855  0063E4  0100               	movlb	0	; () banked
  8856  0063E6  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8857  0063E8  D00F               	goto	l591
  8858  0063EA                     
  8859                           ; BSR set to: 0
  8860                           ;radio_driver_SX1276.c: 990: {
  8861                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8862                           
  8863                           ; BSR set to: 0
  8864  0063EA  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
  8865  0063EC  0D01               	mullw	1
  8866  0063EE  50F3               	movf	prodl,w,c
  8867  0063F0  0101               	movlb	1	; () banked
  8868  0063F2  25A0               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8869  0063F4  6ED9               	movwf	fsr2l,c
  8870  0063F6  50F4               	movf	prodh,w,c
  8871  0063F8  21A1               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8872  0063FA  6EDA               	movwf	fsr2h,c
  8873  0063FC  0EFF               	movlw	255
  8874  0063FE  ECDC  F045         	call	_HALSPISend
  8875  006402  6EDF               	movwf	indf2,c
  8876  006404  0100               	movlb	0	; () banked
  8877  006406  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
  8878  006408                     l591:
  8879                           
  8880                           ; BSR set to: 0
  8881                           
  8882                           ; BSR set to: 0
  8883  006408  0101               	movlb	1	; () banked
  8884  00640A  519F               	movf	(_RadioConfiguration+36)& (0+255),w,b
  8885  00640C  0100               	movlb	0	; () banked
  8886  00640E  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
  8887  006410  A0D8               	btfss	status,0,c
  8888  006412  D7EB               	goto	l592
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;radio_driver_SX1276.c: 992: }
  8892                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  8893                           
  8894                           ; BSR set to: 0
  8895  006414  EC5B  F046         	call	_HALSPICSDeassert	;wreg free
  8896                           
  8897                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  8898  006418  0101               	movlb	1	; () banked
  8899  00641A  859E               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  8903  00641C  0E19               	movlw	25
  8904  00641E  ECCA  F043         	call	_RADIO_RegisterRead
  8905  006422  0101               	movlb	1	; () banked
  8906  006424  6FAD               	movwf	(_RadioConfiguration+50)& (0+255),b
  8907                           
  8908                           ; BSR set to: 1
  8909                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  8910  006426  0E04               	movlw	4
  8911  006428  0100               	movlb	0	; () banked
  8912  00642A  6F60               	movwf	___abdiv@divisor& (0+255),b
  8913  00642C  0101               	movlb	1	; () banked
  8914  00642E  51AD               	movf	(_RadioConfiguration+50)& (0+255),w,b
  8915  006430  ECF9  F03B         	call	___abdiv
  8916  006434  0101               	movlb	1	; () banked
  8917  006436  6FAD               	movwf	(_RadioConfiguration+50)& (0+255),b
  8918                           
  8919                           ;radio_driver_SX1276.c: 998: }
  8920  006438  D002               	goto	l594
  8921  00643A                     l588:
  8922                           
  8923                           ;radio_driver_SX1276.c: 999: else
  8924                           ;radio_driver_SX1276.c: 1000: {
  8925                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  8926                           
  8927                           ; BSR set to: 1
  8928  00643A  0101               	movlb	1	; () banked
  8929  00643C  879E               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  8930  00643E                     l594:
  8931                           
  8932                           ; BSR set to: 1
  8933                           ;radio_driver_SX1276.c: 1003: }
  8934                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8935                           
  8936                           ; BSR set to: 1
  8937  00643E  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8938  006442  0E00               	movlw	0
  8939  006444  0100               	movlb	0	; () banked
  8940  006446  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8941  006448  0E00               	movlw	0
  8942  00644A  ECE7  F02E         	call	_RADIO_WriteMode
  8943                           
  8944                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  8945  00644E  0101               	movlb	1	; () banked
  8946  006450  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8947                           
  8948                           ; BSR set to: 1
  8949                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  8950  006452  C1A0  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  8951  006456  C1A1  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  8952  00645A  C19F  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  8953  00645E  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  8954  006462  0012               	return	
  8955  006464                     __end_of_RADIO_RxDone:
  8956                           	opt stack 0
  8957                           tosu	equ	0xFFF
  8958                           tosh	equ	0xFFE
  8959                           tosl	equ	0xFFD
  8960                           pclath	equ	0xFFA
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           intcon2	equ	0xFF1
  8969                           intcon3	equ	0xFF0
  8970                           postinc0	equ	0xFEE
  8971                           wreg	equ	0xFE8
  8972                           postinc1	equ	0xFE6
  8973                           postdec1	equ	0xFE5
  8974                           plusw1	equ	0xFE3
  8975                           fsr1h	equ	0xFE2
  8976                           fsr1l	equ	0xFE1
  8977                           indf2	equ	0xFDF
  8978                           postinc2	equ	0xFDE
  8979                           postdec2	equ	0xFDD
  8980                           fsr2h	equ	0xFDA
  8981                           fsr2l	equ	0xFD9
  8982                           status	equ	0xFD8
  8983                           
  8984 ;; *************** function ___abdiv *****************
  8985 ;; Defined at:
  8986 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  dividend        1    wreg     char 
  8989 ;;  divisor         1    0[BANK0 ] char 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  dividend        1    6[BANK0 ] char 
  8992 ;;  quotient        1    5[BANK0 ] char 
  8993 ;;  sign            1    4[BANK0 ] unsigned char 
  8994 ;;  counter         1    3[BANK0 ] unsigned char 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      char 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9004 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;Total ram usage:        7 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    7
  9011 ;; This function calls:
  9012 ;;		Nothing
  9013 ;; This function is called by:
  9014 ;;		_RADIO_RxDone
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           	psect	text51
  9019  0077F2                     __ptext51:
  9020                           	opt stack 0
  9021  0077F2                     ___abdiv:
  9022                           	opt stack 20
  9023                           
  9024                           ;incstack = 0
  9025                           ;___abdiv@dividend stored from wreg
  9026  0077F2  0100               	movlb	0	; () banked
  9027  0077F4  6F66               	movwf	___abdiv@dividend& (0+255),b
  9028  0077F6  0E00               	movlw	0
  9029  0077F8  0100               	movlb	0	; () banked
  9030  0077FA  6F64               	movwf	___abdiv@sign& (0+255),b
  9031                           
  9032                           ; BSR set to: 0
  9033  0077FC  AF60               	btfss	___abdiv@divisor& (0+255),7,b
  9034  0077FE  D003               	goto	l2535
  9035                           
  9036                           ; BSR set to: 0
  9037  007800  6D60               	negf	___abdiv@divisor& (0+255),b
  9038                           
  9039                           ; BSR set to: 0
  9040  007802  0E01               	movlw	1
  9041  007804  6F64               	movwf	___abdiv@sign& (0+255),b
  9042  007806                     l2535:
  9043                           
  9044                           ; BSR set to: 0
  9045                           
  9046                           ; BSR set to: 0
  9047  007806  AF66               	btfss	___abdiv@dividend& (0+255),7,b
  9048  007808  D003               	goto	l2536
  9049                           
  9050                           ; BSR set to: 0
  9051  00780A  6D66               	negf	___abdiv@dividend& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054  00780C  0E01               	movlw	1
  9055  00780E  1B64               	xorwf	___abdiv@sign& (0+255),f,b
  9056  007810                     l2536:
  9057                           
  9058                           ; BSR set to: 0
  9059                           
  9060                           ; BSR set to: 0
  9061  007810  0E00               	movlw	0
  9062  007812  6F65               	movwf	___abdiv@quotient& (0+255),b
  9063                           
  9064                           ; BSR set to: 0
  9065  007814  5160               	movf	___abdiv@divisor& (0+255),w,b
  9066  007816  B4D8               	btfsc	status,2,c
  9067  007818  D01A               	goto	l2543
  9068                           
  9069                           ; BSR set to: 0
  9070  00781A  0E01               	movlw	1
  9071  00781C  6F63               	movwf	___abdiv@counter& (0+255),b
  9072  00781E  D003               	goto	l2538
  9073  007820                     
  9074                           ; BSR set to: 0
  9075                           
  9076                           ; BSR set to: 0
  9077  007820  90D8               	bcf	status,0,c
  9078  007822  3760               	rlcf	___abdiv@divisor& (0+255),f,b
  9079                           
  9080                           ; BSR set to: 0
  9081  007824  2B63               	incf	___abdiv@counter& (0+255),f,b
  9082  007826                     l2538:
  9083                           
  9084                           ; BSR set to: 0
  9085                           
  9086                           ; BSR set to: 0
  9087  007826  C060  F061         	movff	___abdiv@divisor,??___abdiv
  9088  00782A  6B62               	clrf	(??___abdiv+1)& (0+255),b
  9089  00782C  BF61               	btfsc	??___abdiv& (0+255),7,b
  9090  00782E  0762               	decf	(??___abdiv+1)& (0+255),f,b
  9091  007830  AF61               	btfss	??___abdiv& (0+255),7,b
  9092  007832  D7F6               	goto	l2539
  9093  007834                     u18950:
  9094                           
  9095                           ; BSR set to: 0
  9096                           
  9097                           ; BSR set to: 0
  9098                           
  9099                           ; BSR set to: 0
  9100  007834  90D8               	bcf	status,0,c
  9101  007836  3765               	rlcf	___abdiv@quotient& (0+255),f,b
  9102  007838  5160               	movf	___abdiv@divisor& (0+255),w,b
  9103  00783A  5D66               	subwf	___abdiv@dividend& (0+255),w,b
  9104  00783C  A0D8               	btfss	status,0,c
  9105  00783E  D003               	goto	l2542
  9106                           
  9107                           ; BSR set to: 0
  9108  007840  5160               	movf	___abdiv@divisor& (0+255),w,b
  9109  007842  5F66               	subwf	___abdiv@dividend& (0+255),f,b
  9110                           
  9111                           ; BSR set to: 0
  9112  007844  8165               	bsf	___abdiv@quotient& (0+255),0,b
  9113  007846                     l2542:
  9114                           
  9115                           ; BSR set to: 0
  9116                           
  9117                           ; BSR set to: 0
  9118  007846  90D8               	bcf	status,0,c
  9119  007848  3360               	rrcf	___abdiv@divisor& (0+255),f,b
  9120                           
  9121                           ; BSR set to: 0
  9122  00784A  2F63               	decfsz	___abdiv@counter& (0+255),f,b
  9123  00784C  D7F3               	goto	u18950
  9124  00784E                     l2543:
  9125                           
  9126                           ; BSR set to: 0
  9127                           
  9128                           ; BSR set to: 0
  9129                           
  9130                           ; BSR set to: 0
  9131  00784E  5164               	movf	___abdiv@sign& (0+255),w,b
  9132  007850  A4D8               	btfss	status,2,c
  9133                           
  9134                           ; BSR set to: 0
  9135  007852  6D65               	negf	___abdiv@quotient& (0+255),b
  9136                           
  9137                           ; BSR set to: 0
  9138                           
  9139                           ; BSR set to: 0
  9140  007854  5165               	movf	___abdiv@quotient& (0+255),w,b
  9141  007856  0012               	return	
  9142  007858                     __end_of___abdiv:
  9143                           	opt stack 0
  9144                           tosu	equ	0xFFF
  9145                           tosh	equ	0xFFE
  9146                           tosl	equ	0xFFD
  9147                           pclath	equ	0xFFA
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodh	equ	0xFF4
  9153                           prodl	equ	0xFF3
  9154                           intcon	equ	0xFF2
  9155                           intcon2	equ	0xFF1
  9156                           intcon3	equ	0xFF0
  9157                           postinc0	equ	0xFEE
  9158                           wreg	equ	0xFE8
  9159                           postinc1	equ	0xFE6
  9160                           postdec1	equ	0xFE5
  9161                           plusw1	equ	0xFE3
  9162                           fsr1h	equ	0xFE2
  9163                           fsr1l	equ	0xFE1
  9164                           indf2	equ	0xFDF
  9165                           postinc2	equ	0xFDE
  9166                           postdec2	equ	0xFDD
  9167                           fsr2h	equ	0xFDA
  9168                           fsr2l	equ	0xFD9
  9169                           status	equ	0xFD8
  9170                           
  9171 ;; *************** function _RADIO_FSKPayloadReady *****************
  9172 ;; Defined at:
  9173 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  i               1  148[BANK0 ] unsigned char 
  9178 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:   16
  9195 ;; This function calls:
  9196 ;;		_HALSPICSAssert
  9197 ;;		_HALSPICSDeassert
  9198 ;;		_HALSPISend
  9199 ;;		_LORAWAN_RxDone
  9200 ;;		_LORAWAN_RxTimeout
  9201 ;;		_RADIO_RegisterRead
  9202 ;;		_RADIO_WriteMode
  9203 ;;		_SwTimerStop
  9204 ;; This function is called by:
  9205 ;;		_RADIO_DIO0
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text52
  9210  006A06                     __ptext52:
  9211                           	opt stack 0
  9212  006A06                     _RADIO_FSKPayloadReady:
  9213                           	opt stack 12
  9214                           
  9215                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9216                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9217                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;incstack = 0
  9221  006A06  0E3F               	movlw	63
  9222  006A08  ECCA  F043         	call	_RADIO_RegisterRead
  9223  006A0C  0100               	movlb	0	; () banked
  9224  006A0E  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9228  006A10  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9229  006A12  0012               	return	
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;radio_driver_SX1276.c: 1017: {
  9233                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9234  006A14  0101               	movlb	1	; () banked
  9235  006A16  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9236  006A18  ECDE  F043         	call	_SwTimerStop
  9237                           
  9238                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9239  006A1C  0101               	movlb	1	; () banked
  9240  006A1E  51A3               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9241  006A20  ECDE  F043         	call	_SwTimerStop
  9242                           
  9243                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9244  006A24  EC5D  F046         	call	_HALSPICSAssert	;wreg free
  9245                           
  9246                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9247  006A28  0E00               	movlw	0
  9248  006A2A  ECDC  F045         	call	_HALSPISend
  9249                           
  9250                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9251  006A2E  0EFF               	movlw	255
  9252  006A30  ECDC  F045         	call	_HALSPISend
  9253  006A34  0101               	movlb	1	; () banked
  9254  006A36  6F9F               	movwf	(_RadioConfiguration+36)& (0+255),b
  9255                           
  9256                           ; BSR set to: 1
  9257                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9258  006A38  0E00               	movlw	0
  9259  006A3A  0100               	movlb	0	; () banked
  9260  006A3C  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  9261  006A3E  D00F               	goto	l599
  9262  006A40                     
  9263                           ; BSR set to: 0
  9264                           ;radio_driver_SX1276.c: 1029: {
  9265                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9266                           
  9267                           ; BSR set to: 0
  9268  006A40  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9269  006A42  0D01               	mullw	1
  9270  006A44  50F3               	movf	prodl,w,c
  9271  006A46  0101               	movlb	1	; () banked
  9272  006A48  25A0               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9273  006A4A  6ED9               	movwf	fsr2l,c
  9274  006A4C  50F4               	movf	prodh,w,c
  9275  006A4E  21A1               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9276  006A50  6EDA               	movwf	fsr2h,c
  9277  006A52  0EFF               	movlw	255
  9278  006A54  ECDC  F045         	call	_HALSPISend
  9279  006A58  6EDF               	movwf	indf2,c
  9280  006A5A  0100               	movlb	0	; () banked
  9281  006A5C  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9282  006A5E                     l599:
  9283                           
  9284                           ; BSR set to: 0
  9285                           
  9286                           ; BSR set to: 0
  9287  006A5E  0101               	movlb	1	; () banked
  9288  006A60  519F               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9289  006A62  0100               	movlb	0	; () banked
  9290  006A64  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9291  006A66  A0D8               	btfss	status,0,c
  9292  006A68  D7EB               	goto	l600
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;radio_driver_SX1276.c: 1031: }
  9296                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9297                           
  9298                           ; BSR set to: 0
  9299  006A6A  EC5B  F046         	call	_HALSPICSDeassert	;wreg free
  9300                           
  9301                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9302  006A6E  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9303  006A72  0E00               	movlw	0
  9304  006A74  0100               	movlb	0	; () banked
  9305  006A76  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9306  006A78  0E00               	movlw	0
  9307  006A7A  ECE7  F02E         	call	_RADIO_WriteMode
  9308                           
  9309                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9310  006A7E  0101               	movlb	1	; () banked
  9311  006A80  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9312                           
  9313                           ; BSR set to: 1
  9314                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9315  006A82  0E80               	movlw	128
  9316  006A84  6FAD               	movwf	(_RadioConfiguration+50)& (0+255),b
  9317                           
  9318                           ; BSR set to: 1
  9319                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9320  006A86  0597               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9321  006A88  A4D8               	btfss	status,2,c
  9322  006A8A  D008               	goto	l602
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;radio_driver_SX1276.c: 1040: {
  9326                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9327  006A8C  0100               	movlb	0	; () banked
  9328  006A8E  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9329  006A90  D002               	goto	l603
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;radio_driver_SX1276.c: 1042: {
  9333                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9334  006A92  0101               	movlb	1	; () banked
  9335  006A94  D003               	goto	l602
  9336  006A96                     l603:
  9337                           
  9338                           ;radio_driver_SX1276.c: 1045: else
  9339                           ;radio_driver_SX1276.c: 1046: {
  9340                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9341                           
  9342                           ; BSR set to: 1
  9343  006A96  0101               	movlb	1	; () banked
  9344  006A98  959E               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9345                           
  9346                           ; BSR set to: 1
  9347                           ;radio_driver_SX1276.c: 1048: }
  9348                           ;radio_driver_SX1276.c: 1049: }
  9349  006A9A  D001               	goto	l605
  9350  006A9C                     l602:
  9351                           
  9352                           ; BSR set to: 1
  9353                           ;radio_driver_SX1276.c: 1050: else
  9354                           ;radio_driver_SX1276.c: 1051: {
  9355                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
  9356                           
  9357                           ; BSR set to: 1
  9358  006A9C  859E               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9359  006A9E                     l605:
  9360                           
  9361                           ; BSR set to: 1
  9362                           ;radio_driver_SX1276.c: 1053: }
  9363                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9364                           
  9365                           ; BSR set to: 1
  9366  006A9E  A59E               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9367  006AA0  D009               	goto	l606
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;radio_driver_SX1276.c: 1056: {
  9371                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9372  006AA2  C1A0  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9373  006AA6  C1A1  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9374  006AAA  C19F  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9375  006AAE  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  9376                           
  9377                           ;radio_driver_SX1276.c: 1058: }
  9378  006AB2  0012               	return	
  9379  006AB4                     l606:
  9380                           
  9381                           ;radio_driver_SX1276.c: 1059: else
  9382                           ;radio_driver_SX1276.c: 1060: {
  9383                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
  9384  006AB4  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  9385  006AB8  0012               	return	
  9386  006ABA                     __end_of_RADIO_FSKPayloadReady:
  9387                           	opt stack 0
  9388                           tosu	equ	0xFFF
  9389                           tosh	equ	0xFFE
  9390                           tosl	equ	0xFFD
  9391                           pclath	equ	0xFFA
  9392                           tblptru	equ	0xFF8
  9393                           tblptrh	equ	0xFF7
  9394                           tblptrl	equ	0xFF6
  9395                           tablat	equ	0xFF5
  9396                           prodh	equ	0xFF4
  9397                           prodl	equ	0xFF3
  9398                           intcon	equ	0xFF2
  9399                           intcon2	equ	0xFF1
  9400                           intcon3	equ	0xFF0
  9401                           postinc0	equ	0xFEE
  9402                           wreg	equ	0xFE8
  9403                           postinc1	equ	0xFE6
  9404                           postdec1	equ	0xFE5
  9405                           plusw1	equ	0xFE3
  9406                           fsr1h	equ	0xFE2
  9407                           fsr1l	equ	0xFE1
  9408                           indf2	equ	0xFDF
  9409                           postinc2	equ	0xFDE
  9410                           postdec2	equ	0xFDD
  9411                           fsr2h	equ	0xFDA
  9412                           fsr2l	equ	0xFD9
  9413                           status	equ	0xFD8
  9414                           
  9415 ;; *************** function _LORAWAN_RxTimeout *****************
  9416 ;; Defined at:
  9417 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  minim           4  102[BANK0 ] unsigned long 
  9422 ;;  i               1  106[BANK0 ] unsigned char 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;Total ram usage:        9 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:   15
  9439 ;; This function calls:
  9440 ;;		_LORAWAN_ReceiveWindow2Callback
  9441 ;;		_RADIO_Transmit
  9442 ;;		_ResetParametersForConfirmedTransmission
  9443 ;;		_ResetParametersForUnconfirmedTransmission
  9444 ;;		_RxData
  9445 ;;		_SelectChannelForTransmission
  9446 ;;		_SetJoinFailState
  9447 ;;		_SwTimerSetTimeout
  9448 ;;		_SwTimerStart
  9449 ;;		___lldiv
  9450 ;; This function is called by:
  9451 ;;		_RADIO_FSKPayloadReady
  9452 ;;		_RADIO_RxTimeout
  9453 ;;		_RADIO_RxFSKTimeout
  9454 ;;		_RADIO_WatchdogTimeout
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text53
  9459  00259A                     __ptext53:
  9460                           	opt stack 0
  9461  00259A                     _LORAWAN_RxTimeout:
  9462                           	opt stack 12
  9463                           
  9464                           ;lorawan_eu.c: 466: uint8_t i;
  9465                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9466                           
  9467                           ;incstack = 0
  9468  00259A  0100               	movlb	0	; () banked
  9469  00259C  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9470  00259E  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9471  0025A0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9472  0025A2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9473                           
  9474                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9475  0025A4  0102               	movlb	2	; () banked
  9476  0025A6  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9477  0025A8  D190               	goto	l1102
  9478                           
  9479                           ; BSR set to: 2
  9480                           ;lorawan_eu.c: 470: {
  9481                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9482  0025AA  5102               	movf	(_loRa+2)& (0+255),w,b
  9483  0025AC  0B0F               	andlw	15
  9484  0025AE  0A03               	xorlw	3
  9485  0025B0  A4D8               	btfss	status,2,c
  9486  0025B2  D011               	goto	l1103
  9487                           
  9488                           ; BSR set to: 2
  9489                           ;lorawan_eu.c: 473: {
  9490                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9491  0025B4  5112               	movf	(_loRa+18)& (0+255),w,b
  9492  0025B6  A4D8               	btfss	status,2,c
  9493  0025B8  D005               	goto	l1104
  9494                           
  9495                           ; BSR set to: 2
  9496                           ;lorawan_eu.c: 475: {
  9497                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9498  0025BA  5102               	movf	(_loRa+2)& (0+255),w,b
  9499  0025BC  0BF0               	andlw	-16
  9500  0025BE  0904               	iorlw	4
  9501  0025C0  6F02               	movwf	(_loRa+2)& (0+255),b
  9502                           
  9503                           ;lorawan_eu.c: 477: }
  9504  0025C2  0012               	return	
  9505  0025C4                     l1104:
  9506                           
  9507                           ; BSR set to: 2
  9508                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9509                           
  9510                           ; BSR set to: 2
  9511  0025C4  0E02               	movlw	2
  9512  0025C6  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9513  0025C8  A4D8               	btfss	status,2,c
  9514  0025CA  0012               	return	
  9515                           
  9516                           ; BSR set to: 2
  9517                           ;lorawan_eu.c: 479: {
  9518                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9519  0025CC  0E00               	movlw	0
  9520  0025CE  6EE6               	movwf	postinc1,c
  9521  0025D0  EC10  F033         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9522                           
  9523                           ;lorawan_eu.c: 481: }
  9524                           ;lorawan_eu.c: 482: }
  9525  0025D4  0012               	return	
  9526  0025D6                     l1103:
  9527                           
  9528                           ; BSR set to: 2
  9529                           ;lorawan_eu.c: 483: else
  9530                           ;lorawan_eu.c: 484: {
  9531                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9532  0025D6  A500               	btfss	_loRa& (0+255),2,b
  9533  0025D8  D003               	goto	l1108
  9534                           
  9535                           ; BSR set to: 2
  9536                           ;lorawan_eu.c: 487: {
  9537                           ;lorawan_eu.c: 488: SetJoinFailState();
  9538  0025DA  EC26  F042         	call	_SetJoinFailState	;wreg free
  9539                           
  9540                           ;lorawan_eu.c: 489: }
  9541  0025DE  0012               	return	
  9542  0025E0                     l1108:
  9543                           
  9544                           ; BSR set to: 2
  9545                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9546  0025E0  A902               	btfss	(_loRa+2)& (0+255),4,b
  9547  0025E2  0012               	return	
  9548                           
  9549                           ; BSR set to: 2
  9550                           ;lorawan_eu.c: 492: {
  9551                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9552  0025E4  A100               	btfss	_loRa& (0+255),0,b
  9553  0025E6  D058               	goto	l1111
  9554                           
  9555                           ; BSR set to: 2
  9556                           ;lorawan_eu.c: 494: {
  9557                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9558  0025E8  51D9               	movf	(_loRa+217)& (0+255),w,b
  9559  0025EA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9560  0025EC  A0D8               	btfss	status,0,c
  9561  0025EE  D038               	goto	l1112
  9562                           
  9563                           ; BSR set to: 2
  9564                           ;lorawan_eu.c: 496: {
  9565                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9566  0025F0  5102               	movf	(_loRa+2)& (0+255),w,b
  9567  0025F2  0BF0               	andlw	-16
  9568  0025F4  0906               	iorlw	6
  9569  0025F6  6F02               	movwf	(_loRa+2)& (0+255),b
  9570                           
  9571                           ; BSR set to: 2
  9572                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9573  0025F8  51A0               	movf	(_loRa+160)& (0+255),w,b
  9574  0025FA  0100               	movlb	0	; () banked
  9575  0025FC  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9576  0025FE  0102               	movlb	2	; () banked
  9577  002600  51A1               	movf	(_loRa+161)& (0+255),w,b
  9578  002602  0100               	movlb	0	; () banked
  9579  002604  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9580  002606  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9581  002608  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9582  00260A  0E0C               	movlw	12
  9583  00260C                     u18455:
  9584  00260C  90D8               	bcf	status,0,c
  9585  00260E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9586  002610  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9587  002612  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9588  002614  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9589  002616  2EE8               	decfsz	wreg,f,c
  9590  002618  D7F9               	goto	u18455
  9591  00261A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9592  00261E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9593  002622  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9594  002626  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9595  00262A  0E7D               	movlw	125
  9596  00262C  6F64               	movwf	___lldiv@divisor& (0+255),b
  9597  00262E  0E00               	movlw	0
  9598  002630  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9599  002632  0E00               	movlw	0
  9600  002634  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9601  002636  0E00               	movlw	0
  9602  002638  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9603  00263A  EC7A  F039         	call	___lldiv	;wreg free
  9604  00263E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9605  002642  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9606  002646  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9607  00264A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9608  00264E  0102               	movlb	2	; () banked
  9609  002650  51E8               	movf	(_loRa+232)& (0+255),w,b
  9610  002652  ECC6  F040         	call	_SwTimerSetTimeout
  9611                           
  9612                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9613  002656  0102               	movlb	2	; () banked
  9614  002658  51E8               	movf	(_loRa+232)& (0+255),w,b
  9615  00265A  EC01  F037         	call	_SwTimerStart
  9616                           
  9617                           ;lorawan_eu.c: 500: }
  9618  00265E  0012               	return	
  9619  002660                     l1112:
  9620                           
  9621                           ;lorawan_eu.c: 501: else
  9622                           ;lorawan_eu.c: 502: {
  9623                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9624  002660  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9625                           
  9626                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9627  002664  0101               	movlb	1	; () banked
  9628  002666  5169               	movf	_rxPayload& (0+255),w,b
  9629  002668  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9630  00266A  B4D8               	btfsc	status,2,c
  9631  00266C  0012               	return	
  9632                           
  9633                           ; BSR set to: 1
  9634                           ;lorawan_eu.c: 505: {
  9635                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9636  00266E  0E00               	movlw	0
  9637  002670  0100               	movlb	0	; () banked
  9638  002672  6F60               	movwf	RxData@pData& (0+255),b
  9639  002674  0E00               	movlw	0
  9640  002676  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9641  002678  0E00               	movlw	0
  9642  00267A  6F62               	movwf	RxData@dataLength& (0+255),b
  9643  00267C  0E00               	movlw	0
  9644  00267E  6F63               	movwf	RxData@status& (0+255),b
  9645  002680  D801               	call	u18478
  9646  002682  0012               	return	
  9647  002684                     u18478:
  9648  002684  0005               	push	
  9649  002686  6EFA               	movwf	pclath,c
  9650  002688  0101               	movlb	1	; () banked
  9651  00268A  5169               	movf	_rxPayload& (0+255),w,b
  9652  00268C  6EFD               	movwf	tosl,c
  9653  00268E  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9654  002690  6EFE               	movwf	tosh,c
  9655  002692  6AFF               	clrf	tosu,c
  9656  002694  50FA               	movf	pclath,w,c
  9657  002696  0012               	return		;indir
  9658  002698                     l1111:
  9659                           
  9660                           ;lorawan_eu.c: 511: else
  9661                           ;lorawan_eu.c: 512: {
  9662                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
  9663  002698  0102               	movlb	2	; () banked
  9664  00269A  51D8               	movf	(_loRa+216)& (0+255),w,b
  9665  00269C  5DD6               	subwf	(_loRa+214)& (0+255),w,b
  9666  00269E  A0D8               	btfss	status,0,c
  9667  0026A0  D0F8               	goto	l1116
  9668                           
  9669                           ; BSR set to: 2
  9670                           ;lorawan_eu.c: 514: {
  9671                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9672  0026A2  5102               	movf	(_loRa+2)& (0+255),w,b
  9673  0026A4  0BF0               	andlw	-16
  9674  0026A6  0906               	iorlw	6
  9675  0026A8  6F02               	movwf	(_loRa+2)& (0+255),b
  9676                           
  9677                           ; BSR set to: 2
  9678                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
  9679  0026AA  0E01               	movlw	1
  9680  0026AC  EC26  F03B         	call	_SelectChannelForTransmission
  9681  0026B0  0900               	iorlw	0
  9682  0026B2  A4D8               	btfss	status,2,c
  9683  0026B4  D031               	goto	l1117
  9684                           
  9685                           ;lorawan_eu.c: 517: {
  9686                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  9687  0026B6  0EF0               	movlw	low (_macBuffer+16)
  9688  0026B8  0100               	movlb	0	; () banked
  9689  0026BA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  9690  0026BC  0E04               	movlw	high (_macBuffer+16)
  9691  0026BE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9692  0026C0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9693  0026C4  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  9694  0026C8  0100               	movlb	0	; () banked
  9695  0026CA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
  9696  0026CC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  9697  0026CE  A4D8               	btfss	status,2,c
  9698  0026D0  D007               	goto	l1118
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;lorawan_eu.c: 520: {
  9702                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9703  0026D2  0102               	movlb	2	; () banked
  9704  0026D4  2BD8               	incf	(_loRa+216)& (0+255),f,b
  9705                           
  9706                           ; BSR set to: 2
  9707                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9708  0026D6  5102               	movf	(_loRa+2)& (0+255),w,b
  9709  0026D8  0BF0               	andlw	-16
  9710  0026DA  0901               	iorlw	1
  9711  0026DC  6F02               	movwf	(_loRa+2)& (0+255),b
  9712                           
  9713                           ;lorawan_eu.c: 523: }
  9714  0026DE  0012               	return	
  9715  0026E0                     l1118:
  9716                           
  9717                           ;lorawan_eu.c: 524: else
  9718                           ;lorawan_eu.c: 526: {
  9719                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
  9720                           
  9721                           ; BSR set to: 2
  9722  0026E0  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9723                           
  9724                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
  9725  0026E4  0101               	movlb	1	; () banked
  9726  0026E6  5169               	movf	_rxPayload& (0+255),w,b
  9727  0026E8  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9728  0026EA  B4D8               	btfsc	status,2,c
  9729  0026EC  0012               	return	
  9730                           
  9731                           ; BSR set to: 1
  9732                           ;lorawan_eu.c: 529: {
  9733                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9734  0026EE  0E00               	movlw	0
  9735  0026F0  0100               	movlb	0	; () banked
  9736  0026F2  6F60               	movwf	RxData@pData& (0+255),b
  9737  0026F4  0E00               	movlw	0
  9738  0026F6  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9739  0026F8  0E00               	movlw	0
  9740  0026FA  6F62               	movwf	RxData@dataLength& (0+255),b
  9741  0026FC  0E00               	movlw	0
  9742  0026FE  6F63               	movwf	RxData@status& (0+255),b
  9743  002700  D801               	call	u18528
  9744  002702  0012               	return	
  9745  002704                     u18528:
  9746  002704  0005               	push	
  9747  002706  6EFA               	movwf	pclath,c
  9748  002708  0101               	movlb	1	; () banked
  9749  00270A  5169               	movf	_rxPayload& (0+255),w,b
  9750  00270C  6EFD               	movwf	tosl,c
  9751  00270E  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9752  002710  6EFE               	movwf	tosh,c
  9753  002712  6AFF               	clrf	tosu,c
  9754  002714  50FA               	movf	pclath,w,c
  9755  002716  0012               	return		;indir
  9756  002718                     l1117:
  9757                           
  9758                           ;lorawan_eu.c: 534: else
  9759                           ;lorawan_eu.c: 535: {
  9760                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
  9761  002718  0E00               	movlw	0
  9762  00271A  0100               	movlb	0	; () banked
  9763  00271C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
  9764  00271E  D07C               	goto	l1122
  9765  002720                     
  9766                           ;lorawan_eu.c: 538: {
  9767                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
  9768                           
  9769                           ; BSR set to: 0
  9770  002720  0100               	movlb	0	; () banked
  9771  002722  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9772  002724  0D0E               	mullw	14
  9773  002726  0E04               	movlw	4
  9774  002728  26F3               	addwf	prodl,f,c
  9775  00272A  0E00               	movlw	0
  9776  00272C  22F4               	addwfc	prodh,f,c
  9777  00272E  0E00               	movlw	low _Channels
  9778  002730  24F3               	addwf	prodl,w,c
  9779  002732  6ED9               	movwf	fsr2l,c
  9780  002734  0E04               	movlw	high _Channels
  9781  002736  20F4               	addwfc	prodh,w,c
  9782  002738  6EDA               	movwf	fsr2h,c
  9783  00273A  04DE               	decf	postinc2,w,c
  9784  00273C  A4D8               	btfss	status,2,c
  9785  00273E  D06A               	goto	l1124
  9786                           
  9787                           ; BSR set to: 0
  9788  002740  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9789  002742  0D0E               	mullw	14
  9790  002744  0E08               	movlw	8
  9791  002746  26F3               	addwf	prodl,f,c
  9792  002748  0E00               	movlw	0
  9793  00274A  22F4               	addwfc	prodh,f,c
  9794  00274C  0E00               	movlw	low _Channels
  9795  00274E  24F3               	addwf	prodl,w,c
  9796  002750  6ED9               	movwf	fsr2l,c
  9797  002752  0E04               	movlw	high _Channels
  9798  002754  20F4               	addwfc	prodh,w,c
  9799  002756  6EDA               	movwf	fsr2h,c
  9800  002758  50DE               	movf	postinc2,w,c
  9801  00275A  10DE               	iorwf	postinc2,w,c
  9802  00275C  10DE               	iorwf	postinc2,w,c
  9803  00275E  10DE               	iorwf	postinc2,w,c
  9804  002760  B4D8               	btfsc	status,2,c
  9805  002762  D058               	goto	l1124
  9806                           
  9807                           ; BSR set to: 0
  9808  002764  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9809  002766  0D0E               	mullw	14
  9810  002768  0E08               	movlw	8
  9811  00276A  26F3               	addwf	prodl,f,c
  9812  00276C  0E00               	movlw	0
  9813  00276E  22F4               	addwfc	prodh,f,c
  9814  002770  0E00               	movlw	low _Channels
  9815  002772  24F3               	addwf	prodl,w,c
  9816  002774  6ED9               	movwf	fsr2l,c
  9817  002776  0E04               	movlw	high _Channels
  9818  002778  20F4               	addwfc	prodh,w,c
  9819  00277A  6EDA               	movwf	fsr2h,c
  9820  00277C  50DE               	movf	postinc2,w,c
  9821  00277E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
  9822  002780  50DE               	movf	postinc2,w,c
  9823  002782  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
  9824  002784  50DE               	movf	postinc2,w,c
  9825  002786  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
  9826  002788  50DE               	movf	postinc2,w,c
  9827  00278A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
  9828  00278C  A0D8               	btfss	status,0,c
  9829  00278E  D042               	goto	l1124
  9830                           
  9831                           ; BSR set to: 0
  9832  002790  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9833  002792  0D0E               	mullw	14
  9834  002794  0E05               	movlw	5
  9835  002796  26F3               	addwf	prodl,f,c
  9836  002798  0E00               	movlw	0
  9837  00279A  22F4               	addwfc	prodh,f,c
  9838  00279C  0E00               	movlw	low _Channels
  9839  00279E  24F3               	addwf	prodl,w,c
  9840  0027A0  6ED9               	movwf	fsr2l,c
  9841  0027A2  0E04               	movlw	high _Channels
  9842  0027A4  20F4               	addwfc	prodh,w,c
  9843  0027A6  6EDA               	movwf	fsr2h,c
  9844  0027A8  0104               	movlb	4	; () banked
  9845  0027AA  50DF               	movf	223,w,c
  9846  0027AC  0B0F               	andlw	15
  9847  0027AE  0100               	movlb	0	; () banked
  9848  0027B0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9849  0027B2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
  9850  0027B4  0102               	movlb	2	; () banked
  9851  0027B6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
  9852  0027B8  A0D8               	btfss	status,0,c
  9853  0027BA  D02C               	goto	l1124
  9854                           
  9855                           ; BSR set to: 2
  9856  0027BC  0100               	movlb	0	; () banked
  9857  0027BE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9858  0027C0  0D0E               	mullw	14
  9859  0027C2  0E05               	movlw	5
  9860  0027C4  26F3               	addwf	prodl,f,c
  9861  0027C6  0E00               	movlw	0
  9862  0027C8  22F4               	addwfc	prodh,f,c
  9863  0027CA  0E00               	movlw	low _Channels
  9864  0027CC  24F3               	addwf	prodl,w,c
  9865  0027CE  6ED9               	movwf	fsr2l,c
  9866  0027D0  0E04               	movlw	high _Channels
  9867  0027D2  20F4               	addwfc	prodh,w,c
  9868  0027D4  6EDA               	movwf	fsr2h,c
  9869  0027D6  0104               	movlb	4	; () banked
  9870  0027D8  38DF               	swapf	223,w,c
  9871  0027DA  0B0F               	andlw	15
  9872  0027DC  0100               	movlb	0	; () banked
  9873  0027DE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9874  0027E0  0102               	movlb	2	; () banked
  9875  0027E2  51DF               	movf	(_loRa+223)& (0+255),w,b
  9876  0027E4  0100               	movlb	0	; () banked
  9877  0027E6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9878  0027E8  A0D8               	btfss	status,0,c
  9879  0027EA  D014               	goto	l1124
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;lorawan_eu.c: 540: {
  9883                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
  9884  0027EC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9885  0027EE  0D0E               	mullw	14
  9886  0027F0  0E08               	movlw	8
  9887  0027F2  26F3               	addwf	prodl,f,c
  9888  0027F4  0E00               	movlw	0
  9889  0027F6  22F4               	addwfc	prodh,f,c
  9890  0027F8  0E00               	movlw	low _Channels
  9891  0027FA  24F3               	addwf	prodl,w,c
  9892  0027FC  6ED9               	movwf	fsr2l,c
  9893  0027FE  0E04               	movlw	high _Channels
  9894  002800  20F4               	addwfc	prodh,w,c
  9895  002802  6EDA               	movwf	fsr2h,c
  9896  002804  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
  9897  002808  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
  9898  00280C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
  9899  002810  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
  9900  002814                     l1124:
  9901                           
  9902                           ; BSR set to: 0
  9903  002814  0100               	movlb	0	; () banked
  9904  002816  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
  9905  002818                     l1122:
  9906                           
  9907                           ; BSR set to: 0
  9908                           
  9909                           ; BSR set to: 0
  9910  002818  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9911  00281A  0102               	movlb	2	; () banked
  9912  00281C  5DED               	subwf	(_loRa+237)& (0+255),w,b
  9913  00281E  B0D8               	btfsc	status,0,c
  9914  002820  D77F               	goto	l1123
  9915                           
  9916                           ; BSR set to: 2
  9917                           ;lorawan_eu.c: 542: }
  9918                           ;lorawan_eu.c: 543: }
  9919                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
  9920                           
  9921                           ; BSR set to: 2
  9922  002822  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
  9923  002826  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
  9924  00282A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
  9925  00282E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
  9926  002832  0E0C               	movlw	12
  9927  002834                     u18595:
  9928  002834  90D8               	bcf	status,0,c
  9929  002836  0100               	movlb	0	; () banked
  9930  002838  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9931  00283A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9932  00283C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9933  00283E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9934  002840  2EE8               	decfsz	wreg,f,c
  9935  002842  D7F8               	goto	u18595
  9936  002844  0E00               	movlw	0
  9937  002846  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9938  002848  6F60               	movwf	___lldiv@dividend& (0+255),b
  9939  00284A  0E20               	movlw	32
  9940  00284C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
  9941  00284E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  9942  002850  0E03               	movlw	3
  9943  002852  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
  9944  002854  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  9945  002856  0E00               	movlw	0
  9946  002858  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
  9947  00285A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  9948  00285C  0E7D               	movlw	125
  9949  00285E  6F64               	movwf	___lldiv@divisor& (0+255),b
  9950  002860  0E00               	movlw	0
  9951  002862  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9952  002864  0E00               	movlw	0
  9953  002866  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9954  002868  0E00               	movlw	0
  9955  00286A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9956  00286C  EC7A  F039         	call	___lldiv	;wreg free
  9957  002870  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9958  002874  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9959  002878  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9960  00287C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9961  002880  0102               	movlb	2	; () banked
  9962  002882  51EA               	movf	(_loRa+234)& (0+255),w,b
  9963  002884  ECC6  F040         	call	_SwTimerSetTimeout
  9964                           
  9965                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
  9966  002888  0102               	movlb	2	; () banked
  9967  00288A  51EA               	movf	(_loRa+234)& (0+255),w,b
  9968  00288C  EC01  F037         	call	_SwTimerStart
  9969                           
  9970                           ;lorawan_eu.c: 546: }
  9971                           ;lorawan_eu.c: 547: }
  9972  002890  0012               	return	
  9973  002892                     l1116:
  9974                           
  9975                           ;lorawan_eu.c: 548: else
  9976                           ;lorawan_eu.c: 549: {
  9977                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
  9978  002892  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9979                           
  9980                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
  9981  002896  0101               	movlb	1	; () banked
  9982  002898  5169               	movf	_rxPayload& (0+255),w,b
  9983  00289A  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9984  00289C  B4D8               	btfsc	status,2,c
  9985  00289E  0012               	return	
  9986                           
  9987                           ; BSR set to: 1
  9988                           ;lorawan_eu.c: 552: {
  9989                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
  9990  0028A0  0E00               	movlw	0
  9991  0028A2  0100               	movlb	0	; () banked
  9992  0028A4  6F60               	movwf	RxData@pData& (0+255),b
  9993  0028A6  0E00               	movlw	0
  9994  0028A8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9995  0028AA  0E00               	movlw	0
  9996  0028AC  6F62               	movwf	RxData@dataLength& (0+255),b
  9997  0028AE  0E01               	movlw	1
  9998  0028B0  6F63               	movwf	RxData@status& (0+255),b
  9999  0028B2  D801               	call	u18618
 10000  0028B4  0012               	return	
 10001  0028B6                     u18618:
 10002  0028B6  0005               	push	
 10003  0028B8  6EFA               	movwf	pclath,c
 10004  0028BA  0101               	movlb	1	; () banked
 10005  0028BC  5169               	movf	_rxPayload& (0+255),w,b
 10006  0028BE  6EFD               	movwf	tosl,c
 10007  0028C0  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10008  0028C2  6EFE               	movwf	tosh,c
 10009  0028C4  6AFF               	clrf	tosu,c
 10010  0028C6  50FA               	movf	pclath,w,c
 10011  0028C8  0012               	return		;indir
 10012  0028CA                     l1102:
 10013                           
 10014                           ;lorawan_eu.c: 560: else
 10015                           ;lorawan_eu.c: 561: {
 10016                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10017  0028CA  0101               	movlb	1	; () banked
 10018  0028CC  5169               	movf	_rxPayload& (0+255),w,b
 10019  0028CE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10020  0028D0  B4D8               	btfsc	status,2,c
 10021  0028D2  0012               	return	
 10022                           
 10023                           ; BSR set to: 1
 10024                           ;lorawan_eu.c: 564: {
 10025                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10026  0028D4  0E00               	movlw	0
 10027  0028D6  0100               	movlb	0	; () banked
 10028  0028D8  6F60               	movwf	RxData@pData& (0+255),b
 10029  0028DA  0E00               	movlw	0
 10030  0028DC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10031  0028DE  0E00               	movlw	0
 10032  0028E0  6F62               	movwf	RxData@dataLength& (0+255),b
 10033  0028E2  0E02               	movlw	2
 10034  0028E4  6F63               	movwf	RxData@status& (0+255),b
 10035  0028E6  D801               	call	u18638
 10036  0028E8  0012               	return	
 10037  0028EA                     u18638:
 10038  0028EA  0005               	push	
 10039  0028EC  6EFA               	movwf	pclath,c
 10040  0028EE  0101               	movlb	1	; () banked
 10041  0028F0  5169               	movf	_rxPayload& (0+255),w,b
 10042  0028F2  6EFD               	movwf	tosl,c
 10043  0028F4  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10044  0028F6  6EFE               	movwf	tosh,c
 10045  0028F8  6AFF               	clrf	tosu,c
 10046  0028FA  50FA               	movf	pclath,w,c
 10047  0028FC  0012               	return		;indir
 10048  0028FE                     __end_of_LORAWAN_RxTimeout:
 10049                           	opt stack 0
 10050                           tosu	equ	0xFFF
 10051                           tosh	equ	0xFFE
 10052                           tosl	equ	0xFFD
 10053                           pclath	equ	0xFFA
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           intcon	equ	0xFF2
 10061                           intcon2	equ	0xFF1
 10062                           intcon3	equ	0xFF0
 10063                           postinc0	equ	0xFEE
 10064                           wreg	equ	0xFE8
 10065                           postinc1	equ	0xFE6
 10066                           postdec1	equ	0xFE5
 10067                           plusw1	equ	0xFE3
 10068                           fsr1h	equ	0xFE2
 10069                           fsr1l	equ	0xFE1
 10070                           indf2	equ	0xFDF
 10071                           postinc2	equ	0xFDE
 10072                           postdec2	equ	0xFDD
 10073                           fsr2h	equ	0xFDA
 10074                           fsr2l	equ	0xFD9
 10075                           status	equ	0xFD8
 10076                           
 10077 ;; *************** function _LORAWAN_RxDone *****************
 10078 ;; Defined at:
 10079 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10082 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10083 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  hdr             2  145[BANK0 ] PTR struct .
 10086 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10087 ;;  joinAccept      2  142[BANK0 ] PTR struct .
 10088 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10089 ;;  computedMic     4  138[BANK0 ] unsigned long 
 10090 ;;  extractedMic    4  130[BANK0 ] unsigned long 
 10091 ;;  packet          2  136[BANK0 ] PTR unsigned char 
 10092 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10093 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
 10094 ;;  temp            1  135[BANK0 ] unsigned char 
 10095 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 10096 ;;  mhdr            1  129[BANK0 ] struct .
 10097 ;;  channelIndex    1  128[BANK0 ] unsigned char 
 10098 ;;  fPort           1  127[BANK0 ] unsigned char 
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      enum E7426
 10101 ;; Registers used:
 10102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10108 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;Total ram usage:       28 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:   15
 10115 ;; This function calls:
 10116 ;;		_AESCmac
 10117 ;;		_AESEncodeLoRa
 10118 ;;		_AssembleEncryptionBlock
 10119 ;;		_CheckFlags
 10120 ;;		_CheckMcastFlags
 10121 ;;		_ComputeMic
 10122 ;;		_ComputeSessionKeys
 10123 ;;		_EncryptFRMPayload
 10124 ;;		_ExtractMic
 10125 ;;		_LORAWAN_EnterContinuousReceive
 10126 ;;		_LORAWAN_Send
 10127 ;;		_MacExecuteCommands
 10128 ;;		_RADIO_GetStatus
 10129 ;;		_RADIO_ReleaseData
 10130 ;;		_RxData
 10131 ;;		_SearchAvailableChannel
 10132 ;;		_SetJoinFailState
 10133 ;;		_SetReceptionNotOkState
 10134 ;;		_StartReTxTimer
 10135 ;;		_SwTimerStop
 10136 ;;		_UpdateCfList
 10137 ;;		_UpdateDLSettings
 10138 ;;		_UpdateJoinSuccessState
 10139 ;;		_UpdateReceiveDelays
 10140 ;;		_UpdateRetransmissionAckTimeoutState
 10141 ;;		_memcpy
 10142 ;; This function is called by:
 10143 ;;		_RADIO_RxDone
 10144 ;;		_RADIO_FSKPayloadReady
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text54
 10149  000086                     __ptext54:
 10150                           	opt stack 0
 10151  000086                     _LORAWAN_RxDone:
 10152                           	opt stack 12
 10153                           
 10154                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10155                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10156                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10157                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10158                           ;lorawan.c: 1127: uint8_t *packet;
 10159                           ;lorawan.c: 1128: uint8_t temp;
 10160                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10161                           
 10162                           ;incstack = 0
 10163  000086  EC4B  F046         	call	_RADIO_ReleaseData	;wreg free
 10164                           
 10165                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10166  00008A  0102               	movlb	2	; () banked
 10167  00008C  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10168  00008E  EF62  F006         	goto	l2183
 10169                           
 10170                           ; BSR set to: 2
 10171                           ;lorawan.c: 1133: {
 10172                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10173  000092  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10174  000096  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10175  00009A  50DF               	movf	indf2,w,c
 10176  00009C  0100               	movlb	0	; () banked
 10177  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10181  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10182  0000A2  32E8               	rrcf	wreg,f,c
 10183  0000A4  0B07               	andlw	7
 10184  0000A6  06E8               	decf	wreg,f,c
 10185  0000A8  A4D8               	btfss	status,2,c
 10186  0000AA  D0D8               	goto	l2184
 10187                           
 10188                           ; BSR set to: 0
 10189  0000AC  0102               	movlb	2	; () banked
 10190  0000AE  511D               	movf	(_loRa+29)& (0+255),w,b
 10191  0000B0  A4D8               	btfss	status,2,c
 10192  0000B2  D0D4               	goto	l2184
 10193                           
 10194                           ; BSR set to: 2
 10195                           ;lorawan.c: 1136: {
 10196                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10197  0000B4  0101               	movlb	1	; () banked
 10198  0000B6  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10199  0000B8  0100               	movlb	0	; () banked
 10200  0000BA  D028               	goto	L6
 10201  0000BC                     
 10202                           ; BSR set to: 0
 10203                           ;lorawan.c: 1139: {
 10204                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10205                           
 10206                           ; BSR set to: 0
 10207  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10208  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 10209  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 10210  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
 10211  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10212  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 10213  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10214  0000CA  0101               	movlb	1	; () banked
 10215  0000CC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10216  0000CE  0100               	movlb	0	; () banked
 10217  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 10218  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 10219  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10220  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10221  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10222  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10223  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10224  0000DE  0101               	movlb	1	; () banked
 10225  0000E0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10226  0000E2  0100               	movlb	0	; () banked
 10227  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 10228  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10229  0000E8  0101               	movlb	1	; () banked
 10230  0000EA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10231  0000EC  0100               	movlb	0	; () banked
 10232  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10233  0000F0  0E42               	movlw	low (_loRa+66)
 10234  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 10235  0000F4  0E02               	movlw	high (_loRa+66)
 10236  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10237  0000F8  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 10238                           
 10239                           ;lorawan.c: 1142: if (temp > 16)
 10240  0000FC  0E10               	movlw	16
 10241  0000FE  0100               	movlb	0	; () banked
 10242  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10243  000102  D003               	goto	l2187
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;lorawan.c: 1143: {
 10247                           ;lorawan.c: 1144: temp -= 16;
 10248  000104  0E10               	movlw	16
 10249  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10250                           
 10251                           ;lorawan.c: 1145: }
 10252  000108  D002               	goto	l2188
 10253  00010A                     l2187:
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;lorawan.c: 1146: else
 10257                           ;lorawan.c: 1147: {
 10258                           ;lorawan.c: 1148: temp = 0;
 10259                           
 10260                           ; BSR set to: 0
 10261  00010A  0E00               	movlw	0
 10262  00010C                     L6:
 10263  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10264  00010E                     l2188:
 10265                           
 10266                           ; BSR set to: 0
 10267                           
 10268                           ; BSR set to: 0
 10269  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10270  000110  A4D8               	btfss	status,2,c
 10271  000112  D7D4               	goto	l2186
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;lorawan.c: 1149: }
 10275                           ;lorawan.c: 1150: }
 10276                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10277                           
 10278                           ; BSR set to: 0
 10279  000114  0E42               	movlw	low (_loRa+66)
 10280  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
 10281  000118  0E02               	movlw	high (_loRa+66)
 10282  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 10283  00011C  C166  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10284  000120  C167  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10285  000124  0101               	movlb	1	; () banked
 10286  000126  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10287  000128  0FFC               	addlw	252
 10288  00012A  0100               	movlb	0	; () banked
 10289  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
 10290  00012E  EC5F  F03C         	call	_ComputeMic	;wreg free
 10291  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10292  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10293  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10294  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10295                           
 10296                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10297  000142  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10298  000146  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10299  00014A  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10300  00014E  EC0B  F03E         	call	_ExtractMic	;wreg free
 10301  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10302  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10303  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10304  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10305                           
 10306                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10307  000162  0100               	movlb	0	; () banked
 10308  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10309  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10310  000168  E10A               	bnz	u17690
 10311  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10312  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10313  00016E  E107               	bnz	u17690
 10314  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10315  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10316  000174  E104               	bnz	u17690
 10317  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10318  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10319  00017A  B4D8               	btfsc	status,2,c
 10320  00017C  D011               	goto	l2190
 10321  00017E                     u17690:
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;lorawan.c: 1156: {
 10325                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10326  00017E  0102               	movlb	2	; () banked
 10327  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 10328  000182  0B0F               	andlw	15
 10329  000184  0A05               	xorlw	5
 10330  000186  B4D8               	btfsc	status,2,c
 10331  000188  D008               	goto	u17720
 10332                           
 10333                           ; BSR set to: 2
 10334  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
 10335  00018C  0B0F               	andlw	15
 10336  00018E  0A03               	xorlw	3
 10337  000190  A4D8               	btfss	status,2,c
 10338  000192  0012               	return	
 10339                           
 10340                           ; BSR set to: 2
 10341  000194  51F1               	movf	(_loRa+241)& (0+255),w,b
 10342  000196  B4D8               	btfsc	status,2,c
 10343  000198  0012               	return	
 10344  00019A                     u17720:
 10345                           
 10346                           ; BSR set to: 2
 10347                           ;lorawan.c: 1158: {
 10348                           ;lorawan.c: 1159: SetJoinFailState();
 10349                           
 10350                           ; BSR set to: 2
 10351  00019A  EC26  F042         	call	_SetJoinFailState	;wreg free
 10352                           
 10353                           ;lorawan.c: 1160: }
 10354                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 10355                           ;	Return value of _LORAWAN_RxDone is never used
 10356  00019E  0012               	return	
 10357  0001A0                     l2190:
 10358                           
 10359                           ;lorawan.c: 1163: }
 10360                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10361  0001A0  0102               	movlb	2	; () banked
 10362  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10363  0001A4  0B0F               	andlw	15
 10364  0001A6  0A03               	xorlw	3
 10365  0001A8  A4D8               	btfss	status,2,c
 10366  0001AA  D003               	goto	l2195
 10367                           
 10368                           ; BSR set to: 2
 10369                           ;lorawan.c: 1167: {
 10370                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10371  0001AC  51E3               	movf	(_loRa+227)& (0+255),w,b
 10372  0001AE  ECDE  F043         	call	_SwTimerStop
 10373  0001B2                     l2195:
 10374                           
 10375                           ;lorawan.c: 1169: }
 10376                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10377                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10378  0001B2  C166  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10379  0001B6  C167  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10380                           
 10381                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10382  0001BA  0100               	movlb	0	; () banked
 10383  0001BC  EE20 F007          	lfsr	2,7
 10384  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10385  0001C2  26D9               	addwf	fsr2l,f,c
 10386  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10387  0001C6  22DA               	addwfc	fsr2h,f,c
 10388  0001C8  CFDE F21E          	movff	postinc2,_loRa+30
 10389  0001CC  CFDE F21F          	movff	postinc2,_loRa+31
 10390  0001D0  CFDE F220          	movff	postinc2,_loRa+32
 10391  0001D4  CFDE F221          	movff	postinc2,_loRa+33
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10395  0001D8  EE20 F00C          	lfsr	2,12
 10396  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10397  0001DE  26D9               	addwf	fsr2l,f,c
 10398  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10399  0001E2  22DA               	addwfc	fsr2h,f,c
 10400  0001E4  50DF               	movf	indf2,w,c
 10401  0001E6  0B0F               	andlw	15
 10402  0001E8  EC0A  F041         	call	_UpdateReceiveDelays
 10403                           
 10404                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10405  0001EC  0100               	movlb	0	; () banked
 10406  0001EE  EE20 F00B          	lfsr	2,11
 10407  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10408  0001F4  26D9               	addwf	fsr2l,f,c
 10409  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10410  0001F8  22DA               	addwfc	fsr2h,f,c
 10411  0001FA  38DF               	swapf	223,w,c
 10412  0001FC  0B07               	andlw	7
 10413  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10414  000200  EE20 F00B          	lfsr	2,11
 10415  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10416  000206  26D9               	addwf	fsr2l,f,c
 10417  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10418  00020A  22DA               	addwfc	fsr2h,f,c
 10419  00020C  50DF               	movf	223,w,c
 10420  00020E  0B0F               	andlw	15
 10421  000210  ECFA  F044         	call	_UpdateDLSettings
 10422                           
 10423                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10424  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10425  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10426  00021C  0101               	movlb	1	; () banked
 10427  00021E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10428  000220  EC4E  F020         	call	_UpdateCfList
 10429                           
 10430                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10431  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10432  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10433  00022C  EC37  F039         	call	_ComputeSessionKeys	;wreg free
 10434                           
 10435                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10436  000230  0E00               	movlw	0
 10437  000232  6EE6               	movwf	postinc1,c
 10438  000234  ECF9  F02A         	call	_UpdateJoinSuccessState	;wreg free
 10439                           
 10440                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10441  000238  0E00               	movlw	0
 10442  00023A  0102               	movlb	2	; () banked
 10443  00023C  6F06               	movwf	(_loRa+6)& (0+255),b
 10444  00023E  0E00               	movlw	0
 10445  000240  6F07               	movwf	(_loRa+7)& (0+255),b
 10446  000242  0E00               	movlw	0
 10447  000244  6F08               	movwf	(_loRa+8)& (0+255),b
 10448  000246  0E00               	movlw	0
 10449  000248  6F09               	movwf	(_loRa+9)& (0+255),b
 10450                           
 10451                           ; BSR set to: 2
 10452                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10453  00024A  0E00               	movlw	0
 10454  00024C  6F0A               	movwf	(_loRa+10)& (0+255),b
 10455  00024E  0E00               	movlw	0
 10456  000250  6F0B               	movwf	(_loRa+11)& (0+255),b
 10457  000252  0E00               	movlw	0
 10458  000254  6F0C               	movwf	(_loRa+12)& (0+255),b
 10459  000256  0E00               	movlw	0
 10460  000258  6F0D               	movwf	(_loRa+13)& (0+255),b
 10461                           
 10462                           ; BSR set to: 2
 10463                           ;lorawan.c: 1190: }
 10464                           
 10465                           ; BSR set to: 2
 10466                           ;lorawan.c: 1189: return OK;
 10467                           ;	Return value of _LORAWAN_RxDone is never used
 10468  00025A  0012               	return	
 10469  00025C                     l2184:
 10470                           
 10471                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10472                           
 10473                           ; BSR set to: 2
 10474  00025C  0100               	movlb	0	; () banked
 10475  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10476  000260  32E8               	rrcf	wreg,f,c
 10477  000262  0B07               	andlw	7
 10478  000264  0A03               	xorlw	3
 10479  000266  B4D8               	btfsc	status,2,c
 10480  000268  D007               	goto	u17750
 10481                           
 10482                           ; BSR set to: 0
 10483  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10484  00026C  32E8               	rrcf	wreg,f,c
 10485  00026E  0B07               	andlw	7
 10486  000270  0A05               	xorlw	5
 10487  000272  A4D8               	btfss	status,2,c
 10488  000274  EF5F  F006         	goto	l2197
 10489  000278                     u17750:
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;lorawan.c: 1192: {
 10493                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10494                           
 10495                           ; BSR set to: 0
 10496  000278  0E00               	movlw	0
 10497  00027A  0102               	movlb	2	; () banked
 10498  00027C  6FA7               	movwf	(_loRa+167)& (0+255),b
 10499                           
 10500                           ; BSR set to: 2
 10501                           ;lorawan.c: 1195: Hdr_t *hdr;
 10502                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10503  00027E  C166  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10504  000282  C167  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10505                           
 10506                           ; BSR set to: 2
 10507                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10508  000286  0E02               	movlw	2
 10509  000288  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10510  00028A  A4D8               	btfss	status,2,c
 10511  00028C  D210               	goto	l2200
 10512                           
 10513                           ; BSR set to: 2
 10514  00028E  0100               	movlb	0	; () banked
 10515  000290  EE20 F001          	lfsr	2,1
 10516  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10517  000296  26D9               	addwf	fsr2l,f,c
 10518  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10519  00029A  22DA               	addwfc	fsr2h,f,c
 10520  00029C  0102               	movlb	2	; () banked
 10521  00029E  5162               	movf	(_loRa+98)& (0+255),w,b
 10522  0002A0  18DE               	xorwf	postinc2,w,c
 10523  0002A2  E109               	bnz	u17771
 10524  0002A4  5163               	movf	(_loRa+99)& (0+255),w,b
 10525  0002A6  18DE               	xorwf	postinc2,w,c
 10526  0002A8  E106               	bnz	u17771
 10527  0002AA  5164               	movf	(_loRa+100)& (0+255),w,b
 10528  0002AC  18DE               	xorwf	postinc2,w,c
 10529  0002AE  E103               	bnz	u17771
 10530  0002B0  5165               	movf	(_loRa+101)& (0+255),w,b
 10531  0002B2  18DE               	xorwf	postinc2,w,c
 10532  0002B4  A4D8               	btfss	status,2,c
 10533  0002B6                     u17771:
 10534  0002B6  D1FB               	goto	l2200
 10535                           
 10536                           ; BSR set to: 2
 10537  0002B8  A504               	btfss	(_loRa+4)& (0+255),2,b
 10538  0002BA  D1F9               	goto	l2200
 10539                           
 10540                           ; BSR set to: 2
 10541                           ;lorawan.c: 1200: {
 10542                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10543  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10544  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10545  0002C4  ECBC  F039         	call	_CheckMcastFlags	;wreg free
 10546  0002C8  0900               	iorlw	0
 10547  0002CA  A4D8               	btfss	status,2,c
 10548  0002CC  D008               	goto	l2201
 10549                           
 10550                           ;lorawan.c: 1203: {
 10551                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10552  0002CE  0102               	movlb	2	; () banked
 10553  0002D0  5102               	movf	(_loRa+2)& (0+255),w,b
 10554  0002D2  0BF0               	andlw	-16
 10555  0002D4  0909               	iorlw	9
 10556  0002D6  6F02               	movwf	(_loRa+2)& (0+255),b
 10557                           
 10558                           ; BSR set to: 2
 10559                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10560  0002D8  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10561                           
 10562                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 10563                           ;	Return value of _LORAWAN_RxDone is never used
 10564  0002DC  0012               	return	
 10565  0002DE                     l2201:
 10566                           
 10567                           ;lorawan.c: 1207: }
 10568                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10569  0002DE  0100               	movlb	0	; () banked
 10570  0002E0  EE20 F006          	lfsr	2,6
 10571  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10572  0002E6  26D9               	addwf	fsr2l,f,c
 10573  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10574  0002EA  22DA               	addwfc	fsr2h,f,c
 10575  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10576  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10577  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10578  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10579  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10580  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10581  000300  0101               	movlb	1	; () banked
 10582  000302  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10583  000304  0FFC               	addlw	252
 10584  000306  0100               	movlb	0	; () banked
 10585  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10586  00030A  0E49               	movlw	73
 10587  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10588  00030E  0E01               	movlw	1
 10589  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10590  000312  0E01               	movlw	1
 10591  000314  ECE3  F02F         	call	_AssembleEncryptionBlock
 10592                           
 10593                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10594  000318  0EEF               	movlw	low _radioBuffer
 10595  00031A  0100               	movlb	0	; () banked
 10596  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 10597  00031E  0E05               	movlw	high _radioBuffer
 10598  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10599  000322  0EB1               	movlw	low _aesBuffer
 10600  000324  6F62               	movwf	memcpy@s1& (0+255),b
 10601  000326  0E01               	movlw	high _aesBuffer
 10602  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10603  00032A  0E00               	movlw	0
 10604  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10605  00032E  0E10               	movlw	16
 10606  000330  6F64               	movwf	memcpy@n& (0+255),b
 10607  000332  EC22  F03D         	call	_memcpy	;wreg free
 10608                           
 10609                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10610  000336  0EFF               	movlw	low (_radioBuffer+16)
 10611  000338  0100               	movlb	0	; () banked
 10612  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 10613  00033C  0E05               	movlw	high (_radioBuffer+16)
 10614  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10615  000340  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10616  000344  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10617  000348  0EFC               	movlw	252
 10618  00034A  0101               	movlb	1	; () banked
 10619  00034C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10620  00034E  0100               	movlb	0	; () banked
 10621  000350  6F64               	movwf	memcpy@n& (0+255),b
 10622  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 10623  000354  0EFF               	movlw	255
 10624  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 10625  000358  EC22  F03D         	call	_memcpy	;wreg free
 10626                           
 10627                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10628  00035C  0E66               	movlw	low (_loRa+102)
 10629  00035E  0100               	movlb	0	; () banked
 10630  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 10631  000362  0E02               	movlw	high (_loRa+102)
 10632  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 10633  000366  0EB1               	movlw	low _aesBuffer
 10634  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 10635  00036A  0E01               	movlw	high _aesBuffer
 10636  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 10637  00036E  0EEF               	movlw	low _radioBuffer
 10638  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 10639  000372  0E05               	movlw	high _radioBuffer
 10640  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 10641  000376  0101               	movlb	1	; () banked
 10642  000378  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10643  00037A  0F0C               	addlw	12
 10644  00037C  0100               	movlb	0	; () banked
 10645  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 10646  000380  ECF8  F010         	call	_AESCmac	;wreg free
 10647                           
 10648                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10649  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 10650  000386  0100               	movlb	0	; () banked
 10651  000388  6F60               	movwf	memcpy@d1& (0+255),b
 10652  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 10653  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10654  00038E  0EB1               	movlw	low _aesBuffer
 10655  000390  6F62               	movwf	memcpy@s1& (0+255),b
 10656  000392  0E01               	movlw	high _aesBuffer
 10657  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10658  000396  0E00               	movlw	0
 10659  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10660  00039A  0E04               	movlw	4
 10661  00039C  6F64               	movwf	memcpy@n& (0+255),b
 10662  00039E  EC22  F03D         	call	_memcpy	;wreg free
 10663                           
 10664                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10665  0003A2  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10666  0003A6  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10667  0003AA  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10668  0003AE  EC0B  F03E         	call	_ExtractMic	;wreg free
 10669  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10670  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10671  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10672  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10673                           
 10674                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10675  0003C2  0100               	movlb	0	; () banked
 10676  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10677  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10678  0003C8  E10A               	bnz	u17800
 10679  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10680  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10681  0003CE  E107               	bnz	u17800
 10682  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10683  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10684  0003D4  E104               	bnz	u17800
 10685  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10686  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10687  0003DA  B4D8               	btfsc	status,2,c
 10688  0003DC  D008               	goto	l2202
 10689  0003DE                     u17800:
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;lorawan.c: 1218: {
 10693                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10694  0003DE  0102               	movlb	2	; () banked
 10695  0003E0  5102               	movf	(_loRa+2)& (0+255),w,b
 10696  0003E2  0BF0               	andlw	-16
 10697  0003E4  0909               	iorlw	9
 10698  0003E6  6F02               	movwf	(_loRa+2)& (0+255),b
 10699                           
 10700                           ; BSR set to: 2
 10701                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 10702  0003E8  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10703                           
 10704                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 10705                           ;	Return value of _LORAWAN_RxDone is never used
 10706  0003EC  0012               	return	
 10707  0003EE                     l2202:
 10708                           
 10709                           ;lorawan.c: 1222: }
 10710                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10711  0003EE  0100               	movlb	0	; () banked
 10712  0003F0  EE20 F006          	lfsr	2,6
 10713  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10714  0003F6  26D9               	addwf	fsr2l,f,c
 10715  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10716  0003FA  22DA               	addwfc	fsr2h,f,c
 10717  0003FC  0102               	movlb	2	; () banked
 10718  0003FE  510E               	movf	(_loRa+14)& (0+255),w,b
 10719  000400  5CDE               	subwf	postinc2,w,c
 10720  000402  510F               	movf	(_loRa+15)& (0+255),w,b
 10721  000404  58DE               	subwfb	postinc2,w,c
 10722  000406  A0D8               	btfss	status,0,c
 10723  000408  D050               	goto	l2203
 10724                           
 10725                           ; BSR set to: 2
 10726                           ;lorawan.c: 1225: {
 10727                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10728  00040A  0100               	movlb	0	; () banked
 10729  00040C  EE20 F006          	lfsr	2,6
 10730  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10731  000412  26D9               	addwf	fsr2l,f,c
 10732  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10733  000416  22DA               	addwfc	fsr2h,f,c
 10734  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10735  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10736  000420  EE22  F00E         	lfsr	2,_loRa+14
 10737  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 10738  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 10739  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10740  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10741  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10742  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10743  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10744  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10745  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10746  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10747  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10748  00043E  0102               	movlb	2	; () banked
 10749  000440  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10750  000442  0100               	movlb	0	; () banked
 10751  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10752  000446  0102               	movlb	2	; () banked
 10753  000448  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10754  00044A  B0D8               	btfsc	status,0,c
 10755  00044C  D022               	goto	l2204
 10756                           
 10757                           ; BSR set to: 2
 10758                           ;lorawan.c: 1227: {
 10759                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10760  00044E  0101               	movlb	1	; () banked
 10761  000450  5169               	movf	_rxPayload& (0+255),w,b
 10762  000452  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10763  000454  B4D8               	btfsc	status,2,c
 10764  000456  D015               	goto	u17849
 10765                           
 10766                           ; BSR set to: 1
 10767                           ;lorawan.c: 1229: {
 10768                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10769  000458  0E00               	movlw	0
 10770  00045A  0100               	movlb	0	; () banked
 10771  00045C  6F60               	movwf	RxData@pData& (0+255),b
 10772  00045E  0E00               	movlw	0
 10773  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10774  000462  0E00               	movlw	0
 10775  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 10776  000466  0E05               	movlw	5
 10777  000468  6F63               	movwf	RxData@status& (0+255),b
 10778  00046A  D801               	call	u17848
 10779  00046C  D00A               	goto	u17849
 10780  00046E                     u17848:
 10781  00046E  0005               	push	
 10782  000470  6EFA               	movwf	pclath,c
 10783  000472  0101               	movlb	1	; () banked
 10784  000474  5169               	movf	_rxPayload& (0+255),w,b
 10785  000476  6EFD               	movwf	tosl,c
 10786  000478  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10787  00047A  6EFE               	movwf	tosh,c
 10788  00047C  6AFF               	clrf	tosu,c
 10789  00047E  50FA               	movf	pclath,w,c
 10790  000480  0012               	return		;indir
 10791  000482                     u17849:
 10792                           
 10793                           ;lorawan.c: 1231: }
 10794                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10795  000482  0102               	movlb	2	; () banked
 10796  000484  5102               	movf	(_loRa+2)& (0+255),w,b
 10797  000486  0BF0               	andlw	-16
 10798  000488  0909               	iorlw	9
 10799  00048A  6F02               	movwf	(_loRa+2)& (0+255),b
 10800                           
 10801                           ; BSR set to: 2
 10802                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 10803  00048C  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10804                           
 10805                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 10806                           ;	Return value of _LORAWAN_RxDone is never used
 10807  000490  0012               	return	
 10808  000492                     l2204:
 10809                           
 10810                           ;lorawan.c: 1237: else
 10811                           ;lorawan.c: 1238: {
 10812                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10813  000492  0100               	movlb	0	; () banked
 10814  000494  EE20 F006          	lfsr	2,6
 10815  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10816  00049A  26D9               	addwf	fsr2l,f,c
 10817  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10818  00049E  22DA               	addwfc	fsr2h,f,c
 10819  0004A0  CFDE F20E          	movff	postinc2,_loRa+14
 10820  0004A4  CFDD F20F          	movff	postdec2,_loRa+15
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;lorawan.c: 1240: }
 10824                           ;lorawan.c: 1241: }
 10825  0004A8  D03A               	goto	l2209
 10826  0004AA                     l2203:
 10827                           
 10828                           ;lorawan.c: 1242: else
 10829                           ;lorawan.c: 1243: {
 10830                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10831                           
 10832                           ; BSR set to: 0
 10833  0004AA  0100               	movlb	0	; () banked
 10834  0004AC  EE20 F006          	lfsr	2,6
 10835  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10836  0004B2  26D9               	addwf	fsr2l,f,c
 10837  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10838  0004B6  22DA               	addwfc	fsr2h,f,c
 10839  0004B8  50DE               	movf	postinc2,w,c
 10840  0004BA  10DE               	iorwf	postinc2,w,c
 10841  0004BC  A4D8               	btfss	status,2,c
 10842  0004BE  D00D               	goto	l2208
 10843                           
 10844                           ; BSR set to: 0
 10845  0004C0  0102               	movlb	2	; () banked
 10846  0004C2  290E               	incf	(_loRa+14)& (0+255),w,b
 10847  0004C4  E10A               	bnz	l15013
 10848  0004C6  290F               	incf	(_loRa+15)& (0+255),w,b
 10849  0004C8  A4D8               	btfss	status,2,c
 10850  0004CA  D007               	goto	l2208
 10851                           
 10852                           ; BSR set to: 2
 10853                           ;lorawan.c: 1245: {
 10854                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 10855  0004CC  0E00               	movlw	0
 10856  0004CE  6F0F               	movwf	(_loRa+15)& (0+255),b
 10857  0004D0  0E00               	movlw	0
 10858  0004D2  6F0E               	movwf	(_loRa+14)& (0+255),b
 10859                           
 10860                           ; BSR set to: 2
 10861                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 10862  0004D4  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 10863  0004D6  2B11               	incf	(_loRa+17)& (0+255),f,b
 10864                           
 10865                           ;lorawan.c: 1248: }
 10866  0004D8  D022               	goto	l2209
 10867  0004DA                     l2208:
 10868  0004DA                     l15013:
 10869                           
 10870                           ;lorawan.c: 1249: else
 10871                           ;lorawan.c: 1250: {
 10872                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 10873  0004DA  0101               	movlb	1	; () banked
 10874  0004DC  5169               	movf	_rxPayload& (0+255),w,b
 10875  0004DE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10876  0004E0  B4D8               	btfsc	status,2,c
 10877  0004E2  D015               	goto	u17889
 10878                           
 10879                           ; BSR set to: 1
 10880                           ;lorawan.c: 1252: {
 10881                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10882  0004E4  0E00               	movlw	0
 10883  0004E6  0100               	movlb	0	; () banked
 10884  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 10885  0004EA  0E00               	movlw	0
 10886  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10887  0004EE  0E00               	movlw	0
 10888  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 10889  0004F2  0E05               	movlw	5
 10890  0004F4  6F63               	movwf	RxData@status& (0+255),b
 10891  0004F6  D801               	call	u17888
 10892  0004F8  D00A               	goto	u17889
 10893  0004FA                     u17888:
 10894  0004FA  0005               	push	
 10895  0004FC  6EFA               	movwf	pclath,c
 10896  0004FE  0101               	movlb	1	; () banked
 10897  000500  5169               	movf	_rxPayload& (0+255),w,b
 10898  000502  6EFD               	movwf	tosl,c
 10899  000504  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10900  000506  6EFE               	movwf	tosh,c
 10901  000508  6AFF               	clrf	tosu,c
 10902  00050A  50FA               	movf	pclath,w,c
 10903  00050C  0012               	return		;indir
 10904  00050E                     u17889:
 10905                           
 10906                           ;lorawan.c: 1254: }
 10907                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10908  00050E  0102               	movlb	2	; () banked
 10909  000510  5102               	movf	(_loRa+2)& (0+255),w,b
 10910  000512  0BF0               	andlw	-16
 10911  000514  0909               	iorlw	9
 10912  000516  6F02               	movwf	(_loRa+2)& (0+255),b
 10913                           
 10914                           ; BSR set to: 2
 10915                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 10916  000518  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10917                           
 10918                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 10919                           ;	Return value of _LORAWAN_RxDone is never used
 10920  00051C  0012               	return	
 10921  00051E                     l2209:
 10922                           
 10923                           ;lorawan.c: 1259: }
 10924                           ;lorawan.c: 1260: }
 10925                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 10926  00051E  0102               	movlb	2	; () banked
 10927  000520  290E               	incf	(_loRa+14)& (0+255),w,b
 10928  000522  E129               	bnz	l15035
 10929  000524  290F               	incf	(_loRa+15)& (0+255),w,b
 10930  000526  E127               	bnz	l15035
 10931  000528  2910               	incf	(_loRa+16)& (0+255),w,b
 10932  00052A  E125               	bnz	l15035
 10933  00052C  2911               	incf	(_loRa+17)& (0+255),w,b
 10934  00052E  A4D8               	btfss	status,2,c
 10935  000530  D022               	goto	l2211
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;lorawan.c: 1263: {
 10939                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 10940  000532  0101               	movlb	1	; () banked
 10941  000534  5169               	movf	_rxPayload& (0+255),w,b
 10942  000536  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10943  000538  B4D8               	btfsc	status,2,c
 10944  00053A  D015               	goto	u17919
 10945                           
 10946                           ; BSR set to: 1
 10947                           ;lorawan.c: 1265: {
 10948                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10949  00053C  0E00               	movlw	0
 10950  00053E  0100               	movlb	0	; () banked
 10951  000540  6F60               	movwf	RxData@pData& (0+255),b
 10952  000542  0E00               	movlw	0
 10953  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10954  000546  0E00               	movlw	0
 10955  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 10956  00054A  0E05               	movlw	5
 10957  00054C  6F63               	movwf	RxData@status& (0+255),b
 10958  00054E  D801               	call	u17918
 10959  000550  D00A               	goto	u17919
 10960  000552                     u17918:
 10961  000552  0005               	push	
 10962  000554  6EFA               	movwf	pclath,c
 10963  000556  0101               	movlb	1	; () banked
 10964  000558  5169               	movf	_rxPayload& (0+255),w,b
 10965  00055A  6EFD               	movwf	tosl,c
 10966  00055C  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10967  00055E  6EFE               	movwf	tosh,c
 10968  000560  6AFF               	clrf	tosu,c
 10969  000562  50FA               	movf	pclath,w,c
 10970  000564  0012               	return		;indir
 10971  000566                     u17919:
 10972                           
 10973                           ;lorawan.c: 1267: }
 10974                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10975  000566  0102               	movlb	2	; () banked
 10976  000568  5102               	movf	(_loRa+2)& (0+255),w,b
 10977  00056A  0BF0               	andlw	-16
 10978  00056C  0909               	iorlw	9
 10979  00056E  6F02               	movwf	(_loRa+2)& (0+255),b
 10980                           
 10981                           ; BSR set to: 2
 10982                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 10983  000570  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10984                           
 10985                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10986                           ;	Return value of _LORAWAN_RxDone is never used
 10987  000574  0012               	return	
 10988  000576                     l2211:
 10989  000576                     l15035:
 10990                           
 10991                           ;lorawan.c: 1272: }
 10992                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 10993  000576  0102               	movlb	2	; () banked
 10994  000578  5102               	movf	(_loRa+2)& (0+255),w,b
 10995  00057A  0B0F               	andlw	15
 10996  00057C  0A08               	xorlw	8
 10997  00057E  A4D8               	btfss	status,2,c
 10998  000580  D008               	goto	l2213
 10999                           
 11000                           ; BSR set to: 2
 11001                           ;lorawan.c: 1275: {
 11002                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11003  000582  51E4               	movf	(_loRa+228)& (0+255),w,b
 11004  000584  ECDE  F043         	call	_SwTimerStop
 11005                           
 11006                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11007  000588  0102               	movlb	2	; () banked
 11008  00058A  51E5               	movf	(_loRa+229)& (0+255),w,b
 11009  00058C  ECDE  F043         	call	_SwTimerStop
 11010                           
 11011                           ;lorawan.c: 1278: }
 11012  000590  D009               	goto	l2215
 11013  000592                     l2213:
 11014                           
 11015                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11016  000592  0102               	movlb	2	; () banked
 11017  000594  5102               	movf	(_loRa+2)& (0+255),w,b
 11018  000596  0B0F               	andlw	15
 11019  000598  0A03               	xorlw	3
 11020  00059A  A4D8               	btfss	status,2,c
 11021  00059C  D003               	goto	l2215
 11022                           
 11023                           ; BSR set to: 2
 11024                           ;lorawan.c: 1280: {
 11025                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11026  00059E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11027  0005A0  ECDE  F043         	call	_SwTimerStop
 11028  0005A4                     l2215:
 11029                           
 11030                           ;lorawan.c: 1282: }
 11031                           ;lorawan.c: 1284: buffer = buffer + 8;
 11032  0005A4  0E08               	movlw	8
 11033  0005A6  0101               	movlb	1	; () banked
 11034  0005A8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11035  0005AA  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11036  0005AC  0E00               	movlw	0
 11037  0005AE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11038  0005B0  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11042  0005B2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11043  0005B4  0100               	movlb	0	; () banked
 11044  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11045  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11046  0005BA  EE20 F005          	lfsr	2,5
 11047  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11048  0005C0  26D9               	addwf	fsr2l,f,c
 11049  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11050  0005C4  22DA               	addwfc	fsr2h,f,c
 11051  0005C6  50DF               	movf	223,w,c
 11052  0005C8  0B0F               	andlw	15
 11053  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11054  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11055  0005CE  0E0C               	movlw	12
 11056  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11057  0005D2  0E00               	movlw	0
 11058  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11059  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11060  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11061  0005DA  E104               	bnz	u17940
 11062  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11063  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11064  0005E0  B4D8               	btfsc	status,2,c
 11065  0005E2  D037               	goto	l2216
 11066  0005E4                     u17940:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;lorawan.c: 1287: {
 11070                           ;lorawan.c: 1288: fPort = *(buffer++);
 11071  0005E4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11072  0005E8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11073  0005EC  50DF               	movf	indf2,w,c
 11074  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11075                           
 11076                           ; BSR set to: 0
 11077  0005F0  0101               	movlb	1	; () banked
 11078  0005F2  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11079  0005F4  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11080                           
 11081                           ; BSR set to: 1
 11082                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11083  0005F6  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11084  0005F8  0FF4               	addlw	244
 11085  0005FA  0100               	movlb	0	; () banked
 11086  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11090  0005FE  0E19               	movlw	25
 11091  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11095  000602  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11096  000606  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11097  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11098  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11099  00060E  0E01               	movlw	1
 11100  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11101  000612  C20E  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11102  000616  C20F  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11103  00061A  C210  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11104  00061E  C211  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11105  000622  0E76               	movlw	low (_loRa+118)
 11106  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11107  000626  0E02               	movlw	high (_loRa+118)
 11108  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11109  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11110  00062E  0EEF               	movlw	low _radioBuffer
 11111  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11112  000632  0E05               	movlw	high _radioBuffer
 11113  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11114  000636  0E01               	movlw	1
 11115  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11116  00063A  ECA5  F024         	call	_EncryptFRMPayload	;wreg free
 11117                           
 11118                           ;lorawan.c: 1294: packet = buffer - 1;
 11119  00063E  0EFF               	movlw	255
 11120  000640  0101               	movlb	1	; () banked
 11121  000642  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11122  000644  0100               	movlb	0	; () banked
 11123  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11124  000648  0EFF               	movlw	255
 11125  00064A  0101               	movlb	1	; () banked
 11126  00064C  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11127  00064E  0100               	movlb	0	; () banked
 11128  000650  D005               	goto	L7
 11129  000652                     l2216:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;lorawan.c: 1296: else
 11133                           ;lorawan.c: 1297: {
 11134                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11135                           
 11136                           ; BSR set to: 0
 11137  000652  0E00               	movlw	0
 11138  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;lorawan.c: 1299: packet = (0);
 11142  000656  0E00               	movlw	0
 11143  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11144  00065A  0E00               	movlw	0
 11145  00065C                     L7:
 11146  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;lorawan.c: 1300: }
 11150                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11151                           
 11152                           ; BSR set to: 0
 11153  00065E  0102               	movlb	2	; () banked
 11154  000660  8303               	bsf	(_loRa+3)& (0+255),1,b
 11155                           
 11156                           ; BSR set to: 2
 11157                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11158  000662  9102               	bcf	(_loRa+2)& (0+255),0,b
 11159  000664  9302               	bcf	(_loRa+2)& (0+255),1,b
 11160  000666  9502               	bcf	(_loRa+2)& (0+255),2,b
 11161  000668  9702               	bcf	(_loRa+2)& (0+255),3,b
 11162                           
 11163                           ; BSR set to: 2
 11164                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11165  00066A  0101               	movlb	1	; () banked
 11166  00066C  5169               	movf	_rxPayload& (0+255),w,b
 11167  00066E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11168  000670  B4D8               	btfsc	status,2,c
 11169  000672  D015               	goto	u17969
 11170                           
 11171                           ; BSR set to: 1
 11172                           ;lorawan.c: 1306: {
 11173                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11174  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11175  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11176  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11177  000680  0E01               	movlw	1
 11178  000682  0100               	movlb	0	; () banked
 11179  000684  6F63               	movwf	RxData@status& (0+255),b
 11180  000686  D801               	call	u17968
 11181  000688  D00A               	goto	u17969
 11182  00068A                     u17968:
 11183  00068A  0005               	push	
 11184  00068C  6EFA               	movwf	pclath,c
 11185  00068E  0101               	movlb	1	; () banked
 11186  000690  5169               	movf	_rxPayload& (0+255),w,b
 11187  000692  6EFD               	movwf	tosl,c
 11188  000694  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11189  000696  6EFE               	movwf	tosh,c
 11190  000698  6AFF               	clrf	tosu,c
 11191  00069A  50FA               	movf	pclath,w,c
 11192  00069C  0012               	return		;indir
 11193  00069E                     u17969:
 11194                           
 11195                           ;lorawan.c: 1308: }
 11196                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11197  00069E  0102               	movlb	2	; () banked
 11198  0006A0  5102               	movf	(_loRa+2)& (0+255),w,b
 11199  0006A2  0BF0               	andlw	-16
 11200  0006A4  0909               	iorlw	9
 11201  0006A6  6F02               	movwf	(_loRa+2)& (0+255),b
 11202                           
 11203                           ; BSR set to: 2
 11204                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 11205  0006A8  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11206                           
 11207                           ;lorawan.c: 1312: return MAC_OK;
 11208                           ;	Return value of _LORAWAN_RxDone is never used
 11209  0006AC  0012               	return	
 11210  0006AE                     l2200:
 11211                           
 11212                           ;lorawan.c: 1313: }
 11213                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11214  0006AE  0100               	movlb	0	; () banked
 11215  0006B0  EE20 F001          	lfsr	2,1
 11216  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11217  0006B6  26D9               	addwf	fsr2l,f,c
 11218  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11219  0006BA  22DA               	addwfc	fsr2h,f,c
 11220  0006BC  0102               	movlb	2	; () banked
 11221  0006BE  511E               	movf	(_loRa+30)& (0+255),w,b
 11222  0006C0  18DE               	xorwf	postinc2,w,c
 11223  0006C2  E10A               	bnz	u17970
 11224  0006C4  511F               	movf	(_loRa+31)& (0+255),w,b
 11225  0006C6  18DE               	xorwf	postinc2,w,c
 11226  0006C8  E107               	bnz	u17970
 11227  0006CA  5120               	movf	(_loRa+32)& (0+255),w,b
 11228  0006CC  18DE               	xorwf	postinc2,w,c
 11229  0006CE  E104               	bnz	u17970
 11230  0006D0  5121               	movf	(_loRa+33)& (0+255),w,b
 11231  0006D2  18DE               	xorwf	postinc2,w,c
 11232  0006D4  B4D8               	btfsc	status,2,c
 11233  0006D6  D00E               	goto	l2219
 11234  0006D8                     u17970:
 11235                           
 11236                           ; BSR set to: 2
 11237                           ;lorawan.c: 1317: {
 11238                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11239  0006D8  ECFD  F039         	call	_SetReceptionNotOkState	;wreg free
 11240                           
 11241                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11242  0006DC  0E02               	movlw	2
 11243  0006DE  0102               	movlb	2	; () banked
 11244  0006E0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11245  0006E2  A4D8               	btfss	status,2,c
 11246  0006E4  0012               	return	
 11247                           
 11248                           ; BSR set to: 2
 11249                           ;lorawan.c: 1320: {
 11250                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11251  0006E6  5102               	movf	(_loRa+2)& (0+255),w,b
 11252  0006E8  0BF0               	andlw	-16
 11253  0006EA  0909               	iorlw	9
 11254  0006EC  6F02               	movwf	(_loRa+2)& (0+255),b
 11255                           
 11256                           ; BSR set to: 2
 11257                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 11258  0006EE  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11259                           
 11260                           ;lorawan.c: 1323: }
 11261                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 11262                           ;	Return value of _LORAWAN_RxDone is never used
 11263  0006F2  0012               	return	
 11264  0006F4                     l2219:
 11265                           
 11266                           ;lorawan.c: 1325: }
 11267                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11268  0006F4  0100               	movlb	0	; () banked
 11269  0006F6  EE20 F006          	lfsr	2,6
 11270  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11271  0006FC  26D9               	addwf	fsr2l,f,c
 11272  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11273  000700  22DA               	addwfc	fsr2h,f,c
 11274  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11275  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11276  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11277  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11278  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11279  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11280  000716  0101               	movlb	1	; () banked
 11281  000718  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11282  00071A  0FFC               	addlw	252
 11283  00071C  0100               	movlb	0	; () banked
 11284  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11285  000720  0E49               	movlw	73
 11286  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11287  000724  0E00               	movlw	0
 11288  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11289  000728  0E01               	movlw	1
 11290  00072A  ECE3  F02F         	call	_AssembleEncryptionBlock
 11291                           
 11292                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11293  00072E  0EEF               	movlw	low _radioBuffer
 11294  000730  0100               	movlb	0	; () banked
 11295  000732  6F60               	movwf	memcpy@d1& (0+255),b
 11296  000734  0E05               	movlw	high _radioBuffer
 11297  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11298  000738  0EB1               	movlw	low _aesBuffer
 11299  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 11300  00073C  0E01               	movlw	high _aesBuffer
 11301  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11302  000740  0E00               	movlw	0
 11303  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11304  000744  0E10               	movlw	16
 11305  000746  6F64               	movwf	memcpy@n& (0+255),b
 11306  000748  EC22  F03D         	call	_memcpy	;wreg free
 11307                           
 11308                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11309  00074C  0EFF               	movlw	low (_radioBuffer+16)
 11310  00074E  0100               	movlb	0	; () banked
 11311  000750  6F60               	movwf	memcpy@d1& (0+255),b
 11312  000752  0E05               	movlw	high (_radioBuffer+16)
 11313  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11314  000756  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11315  00075A  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11316  00075E  0EFC               	movlw	252
 11317  000760  0101               	movlb	1	; () banked
 11318  000762  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11319  000764  0100               	movlb	0	; () banked
 11320  000766  6F64               	movwf	memcpy@n& (0+255),b
 11321  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 11322  00076A  0EFF               	movlw	255
 11323  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 11324  00076E  EC22  F03D         	call	_memcpy	;wreg free
 11325                           
 11326                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11327  000772  0E22               	movlw	low (_loRa+34)
 11328  000774  0100               	movlb	0	; () banked
 11329  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 11330  000778  0E02               	movlw	high (_loRa+34)
 11331  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 11332  00077C  0EB1               	movlw	low _aesBuffer
 11333  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 11334  000780  0E01               	movlw	high _aesBuffer
 11335  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 11336  000784  0EEF               	movlw	low _radioBuffer
 11337  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 11338  000788  0E05               	movlw	high _radioBuffer
 11339  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 11340  00078C  0101               	movlb	1	; () banked
 11341  00078E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11342  000790  0F0C               	addlw	12
 11343  000792  0100               	movlb	0	; () banked
 11344  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 11345  000796  ECF8  F010         	call	_AESCmac	;wreg free
 11346                           
 11347                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11348  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 11349  00079C  0100               	movlb	0	; () banked
 11350  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 11351  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 11352  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11353  0007A4  0EB1               	movlw	low _aesBuffer
 11354  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 11355  0007A8  0E01               	movlw	high _aesBuffer
 11356  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11357  0007AC  0E00               	movlw	0
 11358  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11359  0007B0  0E04               	movlw	4
 11360  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 11361  0007B4  EC22  F03D         	call	_memcpy	;wreg free
 11362                           
 11363                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11364  0007B8  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11365  0007BC  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11366  0007C0  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11367  0007C4  EC0B  F03E         	call	_ExtractMic	;wreg free
 11368  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11369  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11370  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11371  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11372                           
 11373                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11374  0007D8  0100               	movlb	0	; () banked
 11375  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11376  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11377  0007DE  E10A               	bnz	u17990
 11378  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11379  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11380  0007E4  E107               	bnz	u17990
 11381  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11382  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11383  0007EA  E104               	bnz	u17990
 11384  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11385  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11386  0007F0  B4D8               	btfsc	status,2,c
 11387  0007F2  D00E               	goto	l2221
 11388  0007F4                     u17990:
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;lorawan.c: 1337: {
 11392                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11393  0007F4  ECFD  F039         	call	_SetReceptionNotOkState	;wreg free
 11394                           
 11395                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 11396  0007F8  0E02               	movlw	2
 11397  0007FA  0102               	movlb	2	; () banked
 11398  0007FC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11399  0007FE  A4D8               	btfss	status,2,c
 11400  000800  0012               	return	
 11401                           
 11402                           ; BSR set to: 2
 11403                           ;lorawan.c: 1340: {
 11404                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11405  000802  5102               	movf	(_loRa+2)& (0+255),w,b
 11406  000804  0BF0               	andlw	-16
 11407  000806  0909               	iorlw	9
 11408  000808  6F02               	movwf	(_loRa+2)& (0+255),b
 11409                           
 11410                           ; BSR set to: 2
 11411                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 11412  00080A  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11413                           
 11414                           ;lorawan.c: 1343: }
 11415                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 11416                           ;	Return value of _LORAWAN_RxDone is never used
 11417  00080E  0012               	return	
 11418  000810                     l2221:
 11419                           
 11420                           ;lorawan.c: 1345: }
 11421                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11422  000810  0100               	movlb	0	; () banked
 11423  000812  EE20 F006          	lfsr	2,6
 11424  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11425  000818  26D9               	addwf	fsr2l,f,c
 11426  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11427  00081C  22DA               	addwfc	fsr2h,f,c
 11428  00081E  0102               	movlb	2	; () banked
 11429  000820  510A               	movf	(_loRa+10)& (0+255),w,b
 11430  000822  5CDE               	subwf	postinc2,w,c
 11431  000824  510B               	movf	(_loRa+11)& (0+255),w,b
 11432  000826  58DE               	subwfb	postinc2,w,c
 11433  000828  A0D8               	btfss	status,0,c
 11434  00082A  D05D               	goto	l2223
 11435                           
 11436                           ; BSR set to: 2
 11437                           ;lorawan.c: 1349: {
 11438                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11439  00082C  0100               	movlb	0	; () banked
 11440  00082E  EE20 F006          	lfsr	2,6
 11441  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11442  000834  26D9               	addwf	fsr2l,f,c
 11443  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11444  000838  22DA               	addwfc	fsr2h,f,c
 11445  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11446  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11447  000842  EE22  F00A         	lfsr	2,_loRa+10
 11448  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 11449  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 11450  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11451  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11452  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11453  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11454  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11455  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11456  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11457  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11458  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11459  000860  0102               	movlb	2	; () banked
 11460  000862  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11461  000864  0100               	movlb	0	; () banked
 11462  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11463  000868  0102               	movlb	2	; () banked
 11464  00086A  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11465  00086C  B0D8               	btfsc	status,0,c
 11466  00086E  D02F               	goto	l2224
 11467                           
 11468                           ; BSR set to: 2
 11469                           ;lorawan.c: 1351: {
 11470                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11471  000870  9100               	bcf	_loRa& (0+255),0,b
 11472                           
 11473                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11474  000872  9102               	bcf	(_loRa+2)& (0+255),0,b
 11475  000874  9302               	bcf	(_loRa+2)& (0+255),1,b
 11476  000876  9502               	bcf	(_loRa+2)& (0+255),2,b
 11477  000878  9702               	bcf	(_loRa+2)& (0+255),3,b
 11478                           
 11479                           ; BSR set to: 2
 11480                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11481  00087A  0101               	movlb	1	; () banked
 11482  00087C  5169               	movf	_rxPayload& (0+255),w,b
 11483  00087E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11484  000880  B4D8               	btfsc	status,2,c
 11485  000882  D017               	goto	u18049
 11486                           
 11487                           ; BSR set to: 1
 11488                           ;lorawan.c: 1355: {
 11489                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11490  000884  0102               	movlb	2	; () banked
 11491  000886  9B00               	bcf	_loRa& (0+255),5,b
 11492                           
 11493                           ; BSR set to: 2
 11494                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11495  000888  0E00               	movlw	0
 11496  00088A  0100               	movlb	0	; () banked
 11497  00088C  6F60               	movwf	RxData@pData& (0+255),b
 11498  00088E  0E00               	movlw	0
 11499  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11500  000892  0E00               	movlw	0
 11501  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 11502  000896  0E00               	movlw	0
 11503  000898  6F63               	movwf	RxData@status& (0+255),b
 11504  00089A  D801               	call	u18048
 11505  00089C  D00A               	goto	u18049
 11506  00089E                     u18048:
 11507  00089E  0005               	push	
 11508  0008A0  6EFA               	movwf	pclath,c
 11509  0008A2  0101               	movlb	1	; () banked
 11510  0008A4  5169               	movf	_rxPayload& (0+255),w,b
 11511  0008A6  6EFD               	movwf	tosl,c
 11512  0008A8  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11513  0008AA  6EFE               	movwf	tosh,c
 11514  0008AC  6AFF               	clrf	tosu,c
 11515  0008AE  50FA               	movf	pclath,w,c
 11516  0008B0  0012               	return		;indir
 11517  0008B2                     u18049:
 11518                           
 11519                           ;lorawan.c: 1358: }
 11520                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11521  0008B2  0102               	movlb	2	; () banked
 11522  0008B4  9303               	bcf	(_loRa+3)& (0+255),1,b
 11523                           
 11524                           ; BSR set to: 2
 11525                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 11526  0008B6  8304               	bsf	(_loRa+4)& (0+255),1,b
 11527                           
 11528                           ; BSR set to: 2
 11529                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 11530  0008B8  0E02               	movlw	2
 11531  0008BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11532  0008BC  A4D8               	btfss	status,2,c
 11533  0008BE  0012               	return	
 11534                           
 11535                           ; BSR set to: 2
 11536                           ;lorawan.c: 1364: {
 11537                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11538  0008C0  5102               	movf	(_loRa+2)& (0+255),w,b
 11539  0008C2  0BF0               	andlw	-16
 11540  0008C4  0909               	iorlw	9
 11541  0008C6  6F02               	movwf	(_loRa+2)& (0+255),b
 11542                           
 11543                           ; BSR set to: 2
 11544                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 11545  0008C8  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11546                           
 11547                           ;lorawan.c: 1367: }
 11548                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11549                           ;	Return value of _LORAWAN_RxDone is never used
 11550  0008CC  0012               	return	
 11551  0008CE                     l2224:
 11552                           
 11553                           ;lorawan.c: 1370: else
 11554                           ;lorawan.c: 1371: {
 11555                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11556  0008CE  0100               	movlb	0	; () banked
 11557  0008D0  EE20 F006          	lfsr	2,6
 11558  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11559  0008D6  26D9               	addwf	fsr2l,f,c
 11560  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11561  0008DA  22DA               	addwfc	fsr2h,f,c
 11562  0008DC  CFDE F20A          	movff	postinc2,_loRa+10
 11563  0008E0  CFDD F20B          	movff	postdec2,_loRa+11
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;lorawan.c: 1373: }
 11567                           ;lorawan.c: 1374: }
 11568  0008E4  D02E               	goto	l2230
 11569  0008E6                     l2223:
 11570                           
 11571                           ;lorawan.c: 1375: else
 11572                           ;lorawan.c: 1376: {
 11573                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11574                           
 11575                           ; BSR set to: 0
 11576  0008E6  0100               	movlb	0	; () banked
 11577  0008E8  EE20 F006          	lfsr	2,6
 11578  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11579  0008EE  26D9               	addwf	fsr2l,f,c
 11580  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11581  0008F2  22DA               	addwfc	fsr2h,f,c
 11582  0008F4  50DE               	movf	postinc2,w,c
 11583  0008F6  10DE               	iorwf	postinc2,w,c
 11584  0008F8  A4D8               	btfss	status,2,c
 11585  0008FA  D015               	goto	l2229
 11586                           
 11587                           ; BSR set to: 0
 11588  0008FC  0102               	movlb	2	; () banked
 11589  0008FE  290A               	incf	(_loRa+10)& (0+255),w,b
 11590  000900  E112               	bnz	l15147
 11591  000902  290B               	incf	(_loRa+11)& (0+255),w,b
 11592  000904  A4D8               	btfss	status,2,c
 11593  000906  D00F               	goto	l2229
 11594                           
 11595                           ; BSR set to: 2
 11596                           ;lorawan.c: 1378: {
 11597                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11598  000908  0100               	movlb	0	; () banked
 11599  00090A  EE20 F006          	lfsr	2,6
 11600  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11601  000910  26D9               	addwf	fsr2l,f,c
 11602  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11603  000914  22DA               	addwfc	fsr2h,f,c
 11604  000916  CFDE F20A          	movff	postinc2,_loRa+10
 11605  00091A  CFDD F20B          	movff	postdec2,_loRa+11
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11609  00091E  0102               	movlb	2	; () banked
 11610  000920  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11611  000922  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11612                           
 11613                           ;lorawan.c: 1382: }
 11614  000924  D00E               	goto	l2230
 11615  000926                     l2229:
 11616  000926                     l15147:
 11617                           
 11618                           ;lorawan.c: 1383: else
 11619                           ;lorawan.c: 1384: {
 11620                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11621  000926  ECFD  F039         	call	_SetReceptionNotOkState	;wreg free
 11622                           
 11623                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 11624  00092A  0E02               	movlw	2
 11625  00092C  0102               	movlb	2	; () banked
 11626  00092E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11627  000930  A4D8               	btfss	status,2,c
 11628  000932  0012               	return	
 11629                           
 11630                           ; BSR set to: 2
 11631                           ;lorawan.c: 1387: {
 11632                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11633  000934  5102               	movf	(_loRa+2)& (0+255),w,b
 11634  000936  0BF0               	andlw	-16
 11635  000938  0909               	iorlw	9
 11636  00093A  6F02               	movwf	(_loRa+2)& (0+255),b
 11637                           
 11638                           ; BSR set to: 2
 11639                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 11640  00093C  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11641                           
 11642                           ;lorawan.c: 1390: }
 11643                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 11644                           ;	Return value of _LORAWAN_RxDone is never used
 11645  000940  0012               	return	
 11646  000942                     l2230:
 11647                           
 11648                           ;lorawan.c: 1393: }
 11649                           ;lorawan.c: 1394: }
 11650                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11651  000942  0102               	movlb	2	; () banked
 11652  000944  290A               	incf	(_loRa+10)& (0+255),w,b
 11653  000946  E113               	bnz	l15169
 11654  000948  290B               	incf	(_loRa+11)& (0+255),w,b
 11655  00094A  E111               	bnz	l15169
 11656  00094C  290C               	incf	(_loRa+12)& (0+255),w,b
 11657  00094E  E10F               	bnz	l15169
 11658  000950  290D               	incf	(_loRa+13)& (0+255),w,b
 11659  000952  A4D8               	btfss	status,2,c
 11660  000954  D00C               	goto	l2232
 11661                           
 11662                           ; BSR set to: 2
 11663                           ;lorawan.c: 1397: {
 11664                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11665  000956  8304               	bsf	(_loRa+4)& (0+255),1,b
 11666                           
 11667                           ; BSR set to: 2
 11668                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11669  000958  0E02               	movlw	2
 11670  00095A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11671  00095C  A4D8               	btfss	status,2,c
 11672  00095E  0012               	return	
 11673                           
 11674                           ; BSR set to: 2
 11675                           ;lorawan.c: 1402: {
 11676                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11677  000960  5102               	movf	(_loRa+2)& (0+255),w,b
 11678  000962  0BF0               	andlw	-16
 11679  000964  0909               	iorlw	9
 11680  000966  6F02               	movwf	(_loRa+2)& (0+255),b
 11681                           
 11682                           ; BSR set to: 2
 11683                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 11684  000968  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11685                           
 11686                           ;lorawan.c: 1405: }
 11687                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11688                           ;	Return value of _LORAWAN_RxDone is never used
 11689  00096C  0012               	return	
 11690  00096E                     l2232:
 11691  00096E                     l15169:
 11692                           
 11693                           ;lorawan.c: 1407: }
 11694                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11695  00096E  0102               	movlb	2	; () banked
 11696  000970  5102               	movf	(_loRa+2)& (0+255),w,b
 11697  000972  0B0F               	andlw	15
 11698  000974  0A03               	xorlw	3
 11699  000976  A4D8               	btfss	status,2,c
 11700  000978  D003               	goto	l2234
 11701                           
 11702                           ; BSR set to: 2
 11703                           ;lorawan.c: 1411: {
 11704                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11705  00097A  51E5               	movf	(_loRa+229)& (0+255),w,b
 11706  00097C  ECDE  F043         	call	_SwTimerStop
 11707  000980                     l2234:
 11708                           
 11709                           ;lorawan.c: 1413: }
 11710                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11711  000980  0E01               	movlw	1
 11712  000982  0102               	movlb	2	; () banked
 11713  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 11714                           
 11715                           ; BSR set to: 2
 11716                           ;lorawan.c: 1417: CheckFlags (hdr);
 11717  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11718  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11719  00098E  EC81  F03D         	call	_CheckFlags	;wreg free
 11720                           
 11721                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11722  000992  0100               	movlb	0	; () banked
 11723  000994  EE20 F005          	lfsr	2,5
 11724  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11725  00099A  26D9               	addwf	fsr2l,f,c
 11726  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11727  00099E  22DA               	addwfc	fsr2h,f,c
 11728  0009A0  50DF               	movf	223,w,c
 11729  0009A2  0B0F               	andlw	15
 11730  0009A4  0900               	iorlw	0
 11731  0009A6  B4D8               	btfsc	status,2,c
 11732  0009A8  D016               	goto	l2235
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;lorawan.c: 1420: {
 11736                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11737  0009AA  0E08               	movlw	8
 11738  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11739  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 11740  0009B0  0E00               	movlw	0
 11741  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11742  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11743  0009B6  EE20 F005          	lfsr	2,5
 11744  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11745  0009BC  26D9               	addwf	fsr2l,f,c
 11746  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11747  0009C0  22DA               	addwfc	fsr2h,f,c
 11748  0009C2  50DF               	movf	223,w,c
 11749  0009C4  0B0F               	andlw	15
 11750  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11751  0009C8  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 11752  0009CC  C0B0  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11753  0009D0  C0B1  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11754                           
 11755                           ;lorawan.c: 1422: }
 11756  0009D4  D007               	goto	l2236
 11757  0009D6                     l2235:
 11758                           
 11759                           ;lorawan.c: 1423: else
 11760                           ;lorawan.c: 1424: {
 11761                           ;lorawan.c: 1425: buffer = buffer + 8;
 11762  0009D6  0E08               	movlw	8
 11763  0009D8  0101               	movlb	1	; () banked
 11764  0009DA  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11765  0009DC  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11766  0009DE  0E00               	movlw	0
 11767  0009E0  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11768  0009E2  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11769  0009E4                     l2236:
 11770                           
 11771                           ;lorawan.c: 1426: }
 11772                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11773                           
 11774                           ; BSR set to: 1
 11775  0009E4  0101               	movlb	1	; () banked
 11776  0009E6  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11777  0009E8  0100               	movlb	0	; () banked
 11778  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11779  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11780  0009EE  EE20 F005          	lfsr	2,5
 11781  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11782  0009F4  26D9               	addwf	fsr2l,f,c
 11783  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11784  0009F8  22DA               	addwfc	fsr2h,f,c
 11785  0009FA  50DF               	movf	223,w,c
 11786  0009FC  0B0F               	andlw	15
 11787  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11788  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11789  000A02  0E0C               	movlw	12
 11790  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11791  000A06  0E00               	movlw	0
 11792  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11793  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11794  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11795  000A0E  E104               	bnz	u18130
 11796  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11797  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11798  000A14  B4D8               	btfsc	status,2,c
 11799  000A16  D098               	goto	l2237
 11800  000A18                     u18130:
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;lorawan.c: 1428: {
 11804                           ;lorawan.c: 1429: fPort = *(buffer++);
 11805  000A18  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11806  000A1C  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11807  000A20  50DF               	movf	indf2,w,c
 11808  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11809                           
 11810                           ; BSR set to: 0
 11811  000A24  0101               	movlb	1	; () banked
 11812  000A26  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11813  000A28  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11814                           
 11815                           ; BSR set to: 1
 11816                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11817  000A2A  0100               	movlb	0	; () banked
 11818  000A2C  EE20 F005          	lfsr	2,5
 11819  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11820  000A32  26D9               	addwf	fsr2l,f,c
 11821  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11822  000A36  22DA               	addwfc	fsr2h,f,c
 11823  000A38  50DF               	movf	223,w,c
 11824  000A3A  0B0F               	andlw	15
 11825  000A3C  0800               	sublw	0
 11826  000A3E  0101               	movlb	1	; () banked
 11827  000A40  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11828  000A42  0FF4               	addlw	244
 11829  000A44  0100               	movlb	0	; () banked
 11830  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11834  000A48  EE20 F005          	lfsr	2,5
 11835  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11836  000A4E  26D9               	addwf	fsr2l,f,c
 11837  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11838  000A52  22DA               	addwfc	fsr2h,f,c
 11839  000A54  50DF               	movf	223,w,c
 11840  000A56  0B0F               	andlw	15
 11841  000A58  0F19               	addlw	25
 11842  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;lorawan.c: 1434: if (fPort != 0)
 11846  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11847  000A5E  B4D8               	btfsc	status,2,c
 11848  000A60  D028               	goto	l2238
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;lorawan.c: 1435: {
 11852                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11853  000A62  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11854  000A66  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11855  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11856  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11857  000A6E  0E01               	movlw	1
 11858  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11859  000A72  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11860  000A76  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11861  000A7A  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11862  000A7E  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11863  000A82  0E32               	movlw	low (_loRa+50)
 11864  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11865  000A86  0E02               	movlw	high (_loRa+50)
 11866  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11867  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11868  000A8E  0EEF               	movlw	low _radioBuffer
 11869  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11870  000A92  0E05               	movlw	high _radioBuffer
 11871  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11872  000A96  0E00               	movlw	0
 11873  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11874  000A9A  ECA5  F024         	call	_EncryptFRMPayload	;wreg free
 11875                           
 11876                           ;lorawan.c: 1437: packet = buffer - 1;
 11877  000A9E  0EFF               	movlw	255
 11878  000AA0  0101               	movlb	1	; () banked
 11879  000AA2  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11880  000AA4  0100               	movlb	0	; () banked
 11881  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11882  000AA8  0EFF               	movlw	255
 11883  000AAA  0101               	movlb	1	; () banked
 11884  000AAC  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11885  000AAE  0100               	movlb	0	; () banked
 11886  000AB0  D050               	goto	L29
 11887  000AB2                     l2238:
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;lorawan.c: 1439: else
 11891                           ;lorawan.c: 1440: {
 11892                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11893                           
 11894                           ; BSR set to: 0
 11895  000AB2  0101               	movlb	1	; () banked
 11896  000AB4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11897  000AB6  0100               	movlb	0	; () banked
 11898  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11899  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11900  000ABC  EE20 F005          	lfsr	2,5
 11901  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11902  000AC2  26D9               	addwf	fsr2l,f,c
 11903  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11904  000AC6  22DA               	addwfc	fsr2h,f,c
 11905  000AC8  50DF               	movf	223,w,c
 11906  000ACA  0B0F               	andlw	15
 11907  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11908  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11909  000AD0  0E0D               	movlw	13
 11910  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11911  000AD4  0E00               	movlw	0
 11912  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11913  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11914  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11915  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11916  000ADE  0A80               	xorlw	128
 11917  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11918  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11919  000AE4  0A80               	xorlw	128
 11920  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11921  000AE8  B0D8               	btfsc	status,0,c
 11922  000AEA  D02B               	goto	l2240
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;lorawan.c: 1443: {
 11926                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11927  000AEC  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11928  000AF0  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11929  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11930  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11931  000AF8  0E01               	movlw	1
 11932  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11933  000AFC  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11934  000B00  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11935  000B04  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11936  000B08  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11937  000B0C  0E22               	movlw	low (_loRa+34)
 11938  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11939  000B10  0E02               	movlw	high (_loRa+34)
 11940  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11941  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11942  000B18  0EEF               	movlw	low _radioBuffer
 11943  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11944  000B1C  0E05               	movlw	high _radioBuffer
 11945  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11946  000B20  0E00               	movlw	0
 11947  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11948  000B24  ECA5  F024         	call	_EncryptFRMPayload	;wreg free
 11949                           
 11950                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11951  000B28  C166  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11952  000B2C  C167  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11953  000B30  0100               	movlb	0	; () banked
 11954  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11955  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11956  000B36  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 11957  000B3A  C0B0  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11958  000B3E  C0B1  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11959  000B42                     l2240:
 11960                           
 11961                           ;lorawan.c: 1447: }
 11962                           ;lorawan.c: 1449: frmPayloadLength = 0;
 11963  000B42  0E00               	movlw	0
 11964  000B44  0100               	movlb	0	; () banked
 11965  000B46  D001               	goto	L9
 11966  000B48                     l2237:
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;lorawan.c: 1453: else
 11970                           ;lorawan.c: 1454: {
 11971                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11972                           
 11973                           ; BSR set to: 0
 11974  000B48  0E00               	movlw	0
 11975  000B4A                     L9:
 11976  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;lorawan.c: 1456: packet = (0);
 11980  000B4C  0E00               	movlw	0
 11981  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11982  000B50  0E00               	movlw	0
 11983  000B52                     L29:
 11984  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;lorawan.c: 1457: }
 11988                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11989                           
 11990                           ; BSR set to: 0
 11991  000B54  0E01               	movlw	1
 11992  000B56  0102               	movlb	2	; () banked
 11993  000B58  6FD8               	movwf	(_loRa+216)& (0+255),b
 11994                           
 11995                           ; BSR set to: 2
 11996                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11997  000B5A  0E00               	movlw	0
 11998  000B5C  6FD1               	movwf	(_loRa+209)& (0+255),b
 11999  000B5E  0E00               	movlw	0
 12000  000B60  6FD0               	movwf	(_loRa+208)& (0+255),b
 12001                           
 12002                           ; BSR set to: 2
 12003                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 12004  000B62  0E00               	movlw	0
 12005  000B64  6FEE               	movwf	(_loRa+238)& (0+255),b
 12006                           
 12007                           ; BSR set to: 2
 12008                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 12009  000B66  9900               	bcf	_loRa& (0+255),4,b
 12010                           
 12011                           ; BSR set to: 2
 12012                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 12013  000B68  8303               	bsf	(_loRa+3)& (0+255),1,b
 12014                           
 12015                           ; BSR set to: 2
 12016                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 12017  000B6A  A100               	btfss	_loRa& (0+255),0,b
 12018  000B6C  D055               	goto	l2242
 12019                           
 12020                           ; BSR set to: 2
 12021                           ;lorawan.c: 1468: {
 12022                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 12023  000B6E  0100               	movlb	0	; () banked
 12024  000B70  EE20 F005          	lfsr	2,5
 12025  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12026  000B76  26D9               	addwf	fsr2l,f,c
 12027  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12028  000B7A  22DA               	addwfc	fsr2h,f,c
 12029  000B7C  AADF               	btfss	indf2,5,c
 12030  000B7E  D049               	goto	l2243
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;lorawan.c: 1470: {
 12034                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12035  000B80  0102               	movlb	2	; () banked
 12036  000B82  9100               	bcf	_loRa& (0+255),0,b
 12037                           
 12038                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 12039  000B84  9102               	bcf	(_loRa+2)& (0+255),0,b
 12040  000B86  9302               	bcf	(_loRa+2)& (0+255),1,b
 12041  000B88  9502               	bcf	(_loRa+2)& (0+255),2,b
 12042  000B8A  9702               	bcf	(_loRa+2)& (0+255),3,b
 12043                           
 12044                           ; BSR set to: 2
 12045                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 12046  000B8C  0101               	movlb	1	; () banked
 12047  000B8E  5169               	movf	_rxPayload& (0+255),w,b
 12048  000B90  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 12049  000B92  B4D8               	btfsc	status,2,c
 12050  000B94  D017               	goto	u18199
 12051                           
 12052                           ; BSR set to: 1
 12053                           ;lorawan.c: 1474: {
 12054                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 12055  000B96  0102               	movlb	2	; () banked
 12056  000B98  9B00               	bcf	_loRa& (0+255),5,b
 12057                           
 12058                           ; BSR set to: 2
 12059                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12060  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 12061  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 12062  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 12063  000BA6  0E01               	movlw	1
 12064  000BA8  0100               	movlb	0	; () banked
 12065  000BAA  6F63               	movwf	RxData@status& (0+255),b
 12066  000BAC  D801               	call	u18198
 12067  000BAE  D00A               	goto	u18199
 12068  000BB0                     u18198:
 12069  000BB0  0005               	push	
 12070  000BB2  6EFA               	movwf	pclath,c
 12071  000BB4  0101               	movlb	1	; () banked
 12072  000BB6  5169               	movf	_rxPayload& (0+255),w,b
 12073  000BB8  6EFD               	movwf	tosl,c
 12074  000BBA  516A               	movf	(_rxPayload+1)& (0+255),w,b
 12075  000BBC  6EFE               	movwf	tosh,c
 12076  000BBE  6AFF               	clrf	tosu,c
 12077  000BC0  50FA               	movf	pclath,w,c
 12078  000BC2  0012               	return		;indir
 12079  000BC4                     u18199:
 12080                           
 12081                           ;lorawan.c: 1477: }
 12082                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 12083  000BC4  0102               	movlb	2	; () banked
 12084  000BC6  9303               	bcf	(_loRa+3)& (0+255),1,b
 12085                           
 12086                           ; BSR set to: 2
 12087                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12088  000BC8  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12089                           
 12090                           ; BSR set to: 2
 12091  000BCA  BB00               	btfsc	_loRa& (0+255),5,b
 12092  000BCC  D06C               	goto	l2257
 12093                           
 12094                           ; BSR set to: 2
 12095  000BCE  B300               	btfsc	_loRa& (0+255),1,b
 12096  000BD0  D002               	goto	u18230
 12097                           
 12098                           ; BSR set to: 2
 12099  000BD2  A700               	btfss	_loRa& (0+255),3,b
 12100  000BD4  D068               	goto	l2257
 12101  000BD6                     u18230:
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;lorawan.c: 1480: {
 12105                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12106                           
 12107                           ; BSR set to: 2
 12108  000BD6  0E01               	movlw	1
 12109  000BD8  0100               	movlb	0	; () banked
 12110  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12111  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 12112  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12113  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 12114  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12115  000BE4  0102               	movlb	2	; () banked
 12116  000BE6  51ED               	movf	(_loRa+237)& (0+255),w,b
 12117  000BE8  EC2F  F02C         	call	_SearchAvailableChannel
 12118  000BEC  0900               	iorlw	0
 12119  000BEE  A4D8               	btfss	status,2,c
 12120  000BF0  D00D               	goto	l2248
 12121                           
 12122                           ;lorawan.c: 1482: {
 12123                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12124  000BF2  0E00               	movlw	0
 12125  000BF4  0100               	movlb	0	; () banked
 12126  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 12127  000BF8  0E00               	movlw	0
 12128  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 12129  000BFC  0E00               	movlw	0
 12130  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12131  000C00  0E00               	movlw	0
 12132  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12133  000C04  0E00               	movlw	0
 12134  000C06  EC7C  F033         	call	_LORAWAN_Send
 12135  000C0A  D048               	goto	l15273
 12136  000C0C                     l2248:
 12137                           
 12138                           ;lorawan.c: 1486: else
 12139                           ;lorawan.c: 1487: {
 12140                           ;lorawan.c: 1489: StartReTxTimer();
 12141                           
 12142                           ; BSR set to: 2
 12143  000C0C  EC6B  F025         	call	_StartReTxTimer	;wreg free
 12144                           
 12145                           ;lorawan.c: 1490: }
 12146                           ;lorawan.c: 1491: }
 12147                           ;lorawan.c: 1492: }
 12148  000C10  D04A               	goto	l2257
 12149  000C12                     l2243:
 12150                           
 12151                           ;lorawan.c: 1494: else
 12152                           ;lorawan.c: 1495: {
 12153                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12154  000C12  ECB7  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12155                           
 12156                           ;lorawan.c: 1497: }
 12157                           ;lorawan.c: 1498: }
 12158  000C16  D047               	goto	l2257
 12159  000C18                     l2242:
 12160                           
 12161                           ; BSR set to: 2
 12162                           ;lorawan.c: 1499: else
 12163                           ;lorawan.c: 1500: {
 12164                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12165  000C18  9102               	bcf	(_loRa+2)& (0+255),0,b
 12166  000C1A  9302               	bcf	(_loRa+2)& (0+255),1,b
 12167  000C1C  9502               	bcf	(_loRa+2)& (0+255),2,b
 12168  000C1E  9702               	bcf	(_loRa+2)& (0+255),3,b
 12169                           
 12170                           ; BSR set to: 2
 12171                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12172  000C20  0101               	movlb	1	; () banked
 12173  000C22  5169               	movf	_rxPayload& (0+255),w,b
 12174  000C24  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 12175  000C26  B4D8               	btfsc	status,2,c
 12176  000C28  D017               	goto	u18269
 12177                           
 12178                           ; BSR set to: 1
 12179                           ;lorawan.c: 1504: {
 12180                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12181  000C2A  0102               	movlb	2	; () banked
 12182  000C2C  9B00               	bcf	_loRa& (0+255),5,b
 12183                           
 12184                           ; BSR set to: 2
 12185                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12186  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 12187  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 12188  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 12189  000C3A  0E01               	movlw	1
 12190  000C3C  0100               	movlb	0	; () banked
 12191  000C3E  6F63               	movwf	RxData@status& (0+255),b
 12192  000C40  D801               	call	u18268
 12193  000C42  D00A               	goto	u18269
 12194  000C44                     u18268:
 12195  000C44  0005               	push	
 12196  000C46  6EFA               	movwf	pclath,c
 12197  000C48  0101               	movlb	1	; () banked
 12198  000C4A  5169               	movf	_rxPayload& (0+255),w,b
 12199  000C4C  6EFD               	movwf	tosl,c
 12200  000C4E  516A               	movf	(_rxPayload+1)& (0+255),w,b
 12201  000C50  6EFE               	movwf	tosh,c
 12202  000C52  6AFF               	clrf	tosu,c
 12203  000C54  50FA               	movf	pclath,w,c
 12204  000C56  0012               	return		;indir
 12205  000C58                     u18269:
 12206                           
 12207                           ;lorawan.c: 1507: }
 12208                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12209  000C58  0102               	movlb	2	; () banked
 12210  000C5A  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12211                           
 12212                           ; BSR set to: 2
 12213  000C5C  BB00               	btfsc	_loRa& (0+255),5,b
 12214  000C5E  D023               	goto	l2257
 12215                           
 12216                           ; BSR set to: 2
 12217  000C60  B300               	btfsc	_loRa& (0+255),1,b
 12218  000C62  D002               	goto	u18300
 12219                           
 12220                           ; BSR set to: 2
 12221  000C64  A700               	btfss	_loRa& (0+255),3,b
 12222  000C66  D01F               	goto	l2257
 12223  000C68                     u18300:
 12224                           
 12225                           ; BSR set to: 2
 12226                           ;lorawan.c: 1510: {
 12227                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12228                           
 12229                           ; BSR set to: 2
 12230  000C68  0E01               	movlw	1
 12231  000C6A  0100               	movlb	0	; () banked
 12232  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12233  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 12234  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12235  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 12236  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12237  000C76  0102               	movlb	2	; () banked
 12238  000C78  51ED               	movf	(_loRa+237)& (0+255),w,b
 12239  000C7A  EC2F  F02C         	call	_SearchAvailableChannel
 12240  000C7E  0900               	iorlw	0
 12241  000C80  A4D8               	btfss	status,2,c
 12242  000C82  D00F               	goto	l2256
 12243                           
 12244                           ;lorawan.c: 1512: {
 12245                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12246  000C84  0E00               	movlw	0
 12247  000C86  0100               	movlb	0	; () banked
 12248  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 12249  000C8A  0E00               	movlw	0
 12250  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 12251  000C8E  0E00               	movlw	0
 12252  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12253  000C92  0E00               	movlw	0
 12254  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12255  000C96  0E00               	movlw	0
 12256  000C98  EC7C  F033         	call	_LORAWAN_Send
 12257  000C9C                     l15273:
 12258                           
 12259                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 12260  000C9C  0102               	movlb	2	; () banked
 12261  000C9E  9700               	bcf	_loRa& (0+255),3,b
 12262                           
 12263                           ;lorawan.c: 1515: }
 12264  000CA0  D002               	goto	l2257
 12265  000CA2                     l2256:
 12266                           
 12267                           ;lorawan.c: 1516: else
 12268                           ;lorawan.c: 1517: {
 12269                           ;lorawan.c: 1519: StartReTxTimer();
 12270                           
 12271                           ; BSR set to: 2
 12272  000CA2  EC6B  F025         	call	_StartReTxTimer	;wreg free
 12273  000CA6                     l2257:
 12274                           
 12275                           ;lorawan.c: 1520: }
 12276                           ;lorawan.c: 1521: }
 12277                           ;lorawan.c: 1522: }
 12278                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 12279  000CA6  0E02               	movlw	2
 12280  000CA8  0102               	movlb	2	; () banked
 12281  000CAA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12282  000CAC  A4D8               	btfss	status,2,c
 12283  000CAE  0012               	return	
 12284                           
 12285                           ; BSR set to: 2
 12286                           ;lorawan.c: 1525: {
 12287                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12288  000CB0  5102               	movf	(_loRa+2)& (0+255),w,b
 12289  000CB2  0BF0               	andlw	-16
 12290  000CB4  0909               	iorlw	9
 12291  000CB6  6F02               	movwf	(_loRa+2)& (0+255),b
 12292                           
 12293                           ; BSR set to: 2
 12294                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 12295  000CB8  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12296                           
 12297                           ;lorawan.c: 1528: }
 12298                           ;lorawan.c: 1529: }
 12299  000CBC  0012               	return	
 12300  000CBE                     l2197:
 12301                           
 12302                           ;lorawan.c: 1530: else
 12303                           ;lorawan.c: 1531: {
 12304                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 12305  000CBE  ECFD  F039         	call	_SetReceptionNotOkState	;wreg free
 12306                           
 12307                           ;lorawan.c: 1535: }
 12308                           ;lorawan.c: 1536: }
 12309                           
 12310                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 12311                           ;	Return value of _LORAWAN_RxDone is never used
 12312  000CC2  0012               	return	
 12313  000CC4                     l2183:
 12314                           
 12315                           ;lorawan.c: 1537: else
 12316                           ;lorawan.c: 1538: {
 12317                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12318  000CC4  0101               	movlb	1	; () banked
 12319  000CC6  5169               	movf	_rxPayload& (0+255),w,b
 12320  000CC8  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 12321  000CCA  B4D8               	btfsc	status,2,c
 12322  000CCC  0012               	return	
 12323                           
 12324                           ; BSR set to: 1
 12325                           ;lorawan.c: 1541: {
 12326                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12327  000CCE  EC48  F046         	call	_RADIO_GetStatus	;wreg free
 12328  000CD2  0100               	movlb	0	; () banked
 12329  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 12330  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12331  000CD8  D014               	goto	l2262
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;lorawan.c: 1543: {
 12335                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12336  000CDA  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 12337  000CDE  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 12338  000CE2  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 12339  000CE6  0E03               	movlw	3
 12340  000CE8  6F63               	movwf	RxData@status& (0+255),b
 12341  000CEA  D801               	call	u18358
 12342  000CEC  0012               	return	
 12343  000CEE                     u18358:
 12344  000CEE  0005               	push	
 12345  000CF0  6EFA               	movwf	pclath,c
 12346  000CF2  0101               	movlb	1	; () banked
 12347  000CF4  5169               	movf	_rxPayload& (0+255),w,b
 12348  000CF6  6EFD               	movwf	tosl,c
 12349  000CF8  516A               	movf	(_rxPayload+1)& (0+255),w,b
 12350  000CFA  6EFE               	movwf	tosh,c
 12351  000CFC  6AFF               	clrf	tosu,c
 12352  000CFE  50FA               	movf	pclath,w,c
 12353  000D00  0012               	return		;indir
 12354  000D02                     l2262:
 12355                           
 12356                           ;lorawan.c: 1546: else
 12357                           ;lorawan.c: 1547: {
 12358                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12359  000D02  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 12360  000D06  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 12361  000D0A  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 12362  000D0E  0E02               	movlw	2
 12363  000D10  0100               	movlb	0	; () banked
 12364  000D12  6F63               	movwf	RxData@status& (0+255),b
 12365  000D14  D801               	call	u18368
 12366  000D16  0012               	return	
 12367  000D18                     u18368:
 12368  000D18  0005               	push	
 12369  000D1A  6EFA               	movwf	pclath,c
 12370  000D1C  0101               	movlb	1	; () banked
 12371  000D1E  5169               	movf	_rxPayload& (0+255),w,b
 12372  000D20  6EFD               	movwf	tosl,c
 12373  000D22  516A               	movf	(_rxPayload+1)& (0+255),w,b
 12374  000D24  6EFE               	movwf	tosh,c
 12375  000D26  6AFF               	clrf	tosu,c
 12376  000D28  50FA               	movf	pclath,w,c
 12377  000D2A  0012               	return		;indir
 12378  000D2C                     __end_of_LORAWAN_RxDone:
 12379                           	opt stack 0
 12380                           tosu	equ	0xFFF
 12381                           tosh	equ	0xFFE
 12382                           tosl	equ	0xFFD
 12383                           pclath	equ	0xFFA
 12384                           tblptru	equ	0xFF8
 12385                           tblptrh	equ	0xFF7
 12386                           tblptrl	equ	0xFF6
 12387                           tablat	equ	0xFF5
 12388                           prodh	equ	0xFF4
 12389                           prodl	equ	0xFF3
 12390                           intcon	equ	0xFF2
 12391                           intcon2	equ	0xFF1
 12392                           intcon3	equ	0xFF0
 12393                           postinc0	equ	0xFEE
 12394                           wreg	equ	0xFE8
 12395                           postinc1	equ	0xFE6
 12396                           postdec1	equ	0xFE5
 12397                           plusw1	equ	0xFE3
 12398                           fsr1h	equ	0xFE2
 12399                           fsr1l	equ	0xFE1
 12400                           indf2	equ	0xFDF
 12401                           postinc2	equ	0xFDE
 12402                           postdec2	equ	0xFDD
 12403                           fsr2h	equ	0xFDA
 12404                           fsr2l	equ	0xFD9
 12405                           status	equ	0xFD8
 12406                           
 12407 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12408 ;; Defined at:
 12409 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;		None
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;		None
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;Total ram usage:        4 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:   11
 12430 ;; This function calls:
 12431 ;;		_SwTimerSetTimeout
 12432 ;;		_SwTimerStart
 12433 ;;		___lldiv
 12434 ;; This function is called by:
 12435 ;;		_AckRetransmissionCallback
 12436 ;;		_LORAWAN_RxDone
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text55
 12441  00756E                     __ptext55:
 12442                           	opt stack 0
 12443  00756E                     _UpdateRetransmissionAckTimeoutState:
 12444                           	opt stack 16
 12445                           
 12446                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12447                           
 12448                           ;incstack = 0
 12449  00756E  0102               	movlb	2	; () banked
 12450  007570  5102               	movf	(_loRa+2)& (0+255),w,b
 12451  007572  0BF0               	andlw	-16
 12452  007574  0906               	iorlw	6
 12453  007576  6F02               	movwf	(_loRa+2)& (0+255),b
 12454                           
 12455                           ; BSR set to: 2
 12456                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12457  007578  51A0               	movf	(_loRa+160)& (0+255),w,b
 12458  00757A  0100               	movlb	0	; () banked
 12459  00757C  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12460  00757E  0102               	movlb	2	; () banked
 12461  007580  51A1               	movf	(_loRa+161)& (0+255),w,b
 12462  007582  0100               	movlb	0	; () banked
 12463  007584  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12464  007586  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12465  007588  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12466  00758A  0E0C               	movlw	12
 12467  00758C                     u17365:
 12468  00758C  90D8               	bcf	status,0,c
 12469  00758E  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12470  007590  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12471  007592  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12472  007594  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12473  007596  2EE8               	decfsz	wreg,f,c
 12474  007598  D7F9               	goto	u17365
 12475  00759A  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12476  00759E  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12477  0075A2  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12478  0075A6  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12479  0075AA  0E7D               	movlw	125
 12480  0075AC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12481  0075AE  0E00               	movlw	0
 12482  0075B0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12483  0075B2  0E00               	movlw	0
 12484  0075B4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12485  0075B6  0E00               	movlw	0
 12486  0075B8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12487  0075BA  EC7A  F039         	call	___lldiv	;wreg free
 12488  0075BE  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12489  0075C2  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12490  0075C6  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12491  0075CA  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12492  0075CE  0102               	movlb	2	; () banked
 12493  0075D0  51E8               	movf	(_loRa+232)& (0+255),w,b
 12494  0075D2  ECC6  F040         	call	_SwTimerSetTimeout
 12495                           
 12496                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12497  0075D6  0102               	movlb	2	; () banked
 12498  0075D8  51E8               	movf	(_loRa+232)& (0+255),w,b
 12499  0075DA  EC01  F037         	call	_SwTimerStart
 12500  0075DE  0012               	return		;funcret
 12501  0075E0                     __end_of_UpdateRetransmissionAckTimeoutState:
 12502                           	opt stack 0
 12503                           tosu	equ	0xFFF
 12504                           tosh	equ	0xFFE
 12505                           tosl	equ	0xFFD
 12506                           pclath	equ	0xFFA
 12507                           tblptru	equ	0xFF8
 12508                           tblptrh	equ	0xFF7
 12509                           tblptrl	equ	0xFF6
 12510                           tablat	equ	0xFF5
 12511                           prodh	equ	0xFF4
 12512                           prodl	equ	0xFF3
 12513                           intcon	equ	0xFF2
 12514                           intcon2	equ	0xFF1
 12515                           intcon3	equ	0xFF0
 12516                           postinc0	equ	0xFEE
 12517                           wreg	equ	0xFE8
 12518                           postinc1	equ	0xFE6
 12519                           postdec1	equ	0xFE5
 12520                           plusw1	equ	0xFE3
 12521                           fsr1h	equ	0xFE2
 12522                           fsr1l	equ	0xFE1
 12523                           indf2	equ	0xFDF
 12524                           postinc2	equ	0xFDE
 12525                           postdec2	equ	0xFDD
 12526                           fsr2h	equ	0xFDA
 12527                           fsr2l	equ	0xFD9
 12528                           status	equ	0xFD8
 12529                           
 12530 ;; *************** function _UpdateDLSettings *****************
 12531 ;; Defined at:
 12532 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;  dlRx2Dr         1    wreg     unsigned char 
 12535 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      void 
 12540 ;; Registers used:
 12541 ;;		wreg, status,2, status,0
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:        2 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    7
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_LORAWAN_RxDone
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           	psect	text56
 12562  0089F4                     __ptext56:
 12563                           	opt stack 0
 12564  0089F4                     _UpdateDLSettings:
 12565                           	opt stack 19
 12566                           
 12567                           ;incstack = 0
 12568                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12569  0089F4  0100               	movlb	0	; () banked
 12570  0089F6  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12571                           
 12572                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12573  0089F8  0E08               	movlw	8
 12574  0089FA  0100               	movlb	0	; () banked
 12575  0089FC  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12576  0089FE  D002               	goto	l1221
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;lorawan_eu.c: 891: {
 12580                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12581  008A00  C061  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12582  008A04                     l1221:
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;lorawan_eu.c: 893: }
 12586                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12587                           
 12588                           ; BSR set to: 0
 12589  008A04  0E06               	movlw	6
 12590  008A06  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12591  008A08  0012               	return	
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;lorawan_eu.c: 896: {
 12595                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12596  008A0A  C060  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12597  008A0E  0012               	return	
 12598  008A10                     __end_of_UpdateDLSettings:
 12599                           	opt stack 0
 12600                           tosu	equ	0xFFF
 12601                           tosh	equ	0xFFE
 12602                           tosl	equ	0xFFD
 12603                           pclath	equ	0xFFA
 12604                           tblptru	equ	0xFF8
 12605                           tblptrh	equ	0xFF7
 12606                           tblptrl	equ	0xFF6
 12607                           tablat	equ	0xFF5
 12608                           prodh	equ	0xFF4
 12609                           prodl	equ	0xFF3
 12610                           intcon	equ	0xFF2
 12611                           intcon2	equ	0xFF1
 12612                           intcon3	equ	0xFF0
 12613                           postinc0	equ	0xFEE
 12614                           wreg	equ	0xFE8
 12615                           postinc1	equ	0xFE6
 12616                           postdec1	equ	0xFE5
 12617                           plusw1	equ	0xFE3
 12618                           fsr1h	equ	0xFE2
 12619                           fsr1l	equ	0xFE1
 12620                           indf2	equ	0xFDF
 12621                           postinc2	equ	0xFDE
 12622                           postdec2	equ	0xFDD
 12623                           fsr2h	equ	0xFDA
 12624                           fsr2l	equ	0xFD9
 12625                           status	equ	0xFD8
 12626                           
 12627 ;; *************** function _UpdateCfList *****************
 12628 ;; Defined at:
 12629 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  bufferLength    1    wreg     unsigned char 
 12632 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 12633 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 12636 ;;  frequency       4   73[BANK0 ] unsigned long 
 12637 ;;  i               1   78[BANK0 ] unsigned char 
 12638 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12651 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;Total ram usage:        9 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    9
 12655 ;; This function calls:
 12656 ;;		_LORAWAN_SetChannelIdStatus
 12657 ;;		_ValidateFrequency
 12658 ;;		___lmul
 12659 ;;		___wmul
 12660 ;;		_memcpy
 12661 ;; This function is called by:
 12662 ;;		_LORAWAN_RxDone
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text57
 12667  00409C                     __ptext57:
 12668                           	opt stack 0
 12669  00409C                     _UpdateCfList:
 12670                           	opt stack 17
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674                           ;UpdateCfList@bufferLength stored from wreg
 12675  00409C  0100               	movlb	0	; () banked
 12676  00409E  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 12677                           
 12678                           ;lorawan_eu.c: 826: uint8_t i;
 12679                           ;lorawan_eu.c: 827: uint32_t frequency;
 12680                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12681                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12682  0040A0  0E21               	movlw	33
 12683  0040A2  0100               	movlb	0	; () banked
 12684  0040A4  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12685  0040A6  A4D8               	btfss	status,2,c
 12686  0040A8  0012               	return	
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;lorawan_eu.c: 831: {
 12690                           ;lorawan_eu.c: 833: channelIndex = 3;
 12691  0040AA  0E03               	movlw	3
 12692  0040AC  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 12693                           
 12694                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12695  0040AE  0E00               	movlw	0
 12696  0040B0  6FAE               	movwf	UpdateCfList@i& (0+255),b
 12697  0040B2                     l14591:
 12698                           
 12699                           ; BSR set to: 0
 12700  0040B2  0E04               	movlw	4
 12701  0040B4  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 12702  0040B6  D001               	goto	l1205
 12703  0040B8  D0E5               	goto	u17130
 12704  0040BA                     l1205:
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;lorawan_eu.c: 836: {
 12708                           ;lorawan_eu.c: 837: frequency = 0;
 12709                           
 12710                           ; BSR set to: 0
 12711  0040BA  0E00               	movlw	0
 12712  0040BC  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 12713  0040BE  0E00               	movlw	0
 12714  0040C0  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 12715  0040C2  0E00               	movlw	0
 12716  0040C4  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 12717  0040C6  0E00               	movlw	0
 12718  0040C8  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12722  0040CA  0EA9               	movlw	low UpdateCfList@frequency
 12723  0040CC  6F60               	movwf	memcpy@d1& (0+255),b
 12724  0040CE  0E00               	movlw	high UpdateCfList@frequency
 12725  0040D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12726  0040D2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12727  0040D4  0D03               	mullw	3
 12728  0040D6  0E0D               	movlw	13
 12729  0040D8  26F3               	addwf	prodl,f,c
 12730  0040DA  0E00               	movlw	0
 12731  0040DC  22F4               	addwfc	prodh,f,c
 12732  0040DE  50F3               	movf	prodl,w,c
 12733  0040E0  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 12734  0040E2  6F62               	movwf	memcpy@s1& (0+255),b
 12735  0040E4  50F4               	movf	prodh,w,c
 12736  0040E6  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 12737  0040E8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12738  0040EA  0E00               	movlw	0
 12739  0040EC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12740  0040EE  0E03               	movlw	3
 12741  0040F0  6F64               	movwf	memcpy@n& (0+255),b
 12742  0040F2  EC22  F03D         	call	_memcpy	;wreg free
 12743                           
 12744                           ;lorawan_eu.c: 839: frequency *= 100;
 12745  0040F6  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 12746  0040FA  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12747  0040FE  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12748  004102  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12749  004106  0E64               	movlw	100
 12750  004108  0100               	movlb	0	; () banked
 12751  00410A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 12752  00410C  0E00               	movlw	0
 12753  00410E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12754  004110  0E00               	movlw	0
 12755  004112  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12756  004114  0E00               	movlw	0
 12757  004116  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12758  004118  EC38  F03E         	call	___lmul	;wreg free
 12759  00411C  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 12760  004120  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 12761  004124  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 12762  004128  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 12763                           
 12764                           ;lorawan_eu.c: 840: if (frequency != 0)
 12765  00412C  0100               	movlb	0	; () banked
 12766  00412E  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 12767  004130  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12768  004132  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12769  004134  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12770  004136  B4D8               	btfsc	status,2,c
 12771  004138  D09B               	goto	l1207
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;lorawan_eu.c: 841: {
 12775                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12776  00413A  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12777  00413E  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12778  004142  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12779  004146  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12780  00414A  EC2C  F03C         	call	_ValidateFrequency	;wreg free
 12781  00414E  0900               	iorlw	0
 12782  004150  A4D8               	btfss	status,2,c
 12783  004152  D095               	goto	l1209
 12784                           
 12785                           ;lorawan_eu.c: 843: {
 12786                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12787  004154  0100               	movlb	0	; () banked
 12788  004156  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12789  004158  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12790  00415A  6F60               	movwf	___wmul@multiplier& (0+255),b
 12791  00415C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12792  00415E  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12793  004160  0E00               	movlw	0
 12794  004162  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12795  004164  0E0E               	movlw	14
 12796  004166  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12797  004168  ECB6  F043         	call	___wmul	;wreg free
 12798  00416C  0E00               	movlw	low _Channels
 12799  00416E  0100               	movlb	0	; () banked
 12800  004170  2560               	addwf	?___wmul& (0+255),w,b
 12801  004172  6ED9               	movwf	fsr2l,c
 12802  004174  0E04               	movlw	high _Channels
 12803  004176  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12804  004178  6EDA               	movwf	fsr2h,c
 12805  00417A  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 12806  00417E  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12807  004182  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12808  004186  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12809                           
 12810                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12811  00418A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12812  00418C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12813  00418E  6F60               	movwf	___wmul@multiplier& (0+255),b
 12814  004190  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12815  004192  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12816  004194  0E00               	movlw	0
 12817  004196  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12818  004198  0E0E               	movlw	14
 12819  00419A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12820  00419C  ECB6  F043         	call	___wmul	;wreg free
 12821  0041A0  0E05               	movlw	5
 12822  0041A2  0100               	movlb	0	; () banked
 12823  0041A4  2760               	addwf	?___wmul& (0+255),f,b
 12824  0041A6  0E00               	movlw	0
 12825  0041A8  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12826  0041AA  0E00               	movlw	low _Channels
 12827  0041AC  2560               	addwf	?___wmul& (0+255),w,b
 12828  0041AE  6ED9               	movwf	fsr2l,c
 12829  0041B0  0E04               	movlw	high _Channels
 12830  0041B2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12831  0041B4  6EDA               	movwf	fsr2h,c
 12832  0041B6  0104               	movlb	4	; () banked
 12833  0041B8  50DF               	movf	223,w,c
 12834  0041BA  0B0F               	andlw	-241
 12835  0041BC  0950               	iorlw	80
 12836  0041BE  6EDF               	movwf	223,c
 12837                           
 12838                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12839  0041C0  0100               	movlb	0	; () banked
 12840  0041C2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12841  0041C4  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12842  0041C6  6F60               	movwf	___wmul@multiplier& (0+255),b
 12843  0041C8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12844  0041CA  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12845  0041CC  0E00               	movlw	0
 12846  0041CE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12847  0041D0  0E0E               	movlw	14
 12848  0041D2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12849  0041D4  ECB6  F043         	call	___wmul	;wreg free
 12850  0041D8  0E05               	movlw	5
 12851  0041DA  0100               	movlb	0	; () banked
 12852  0041DC  2760               	addwf	?___wmul& (0+255),f,b
 12853  0041DE  0E00               	movlw	0
 12854  0041E0  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12855  0041E2  0E00               	movlw	low _Channels
 12856  0041E4  2560               	addwf	?___wmul& (0+255),w,b
 12857  0041E6  6ED9               	movwf	fsr2l,c
 12858  0041E8  0E04               	movlw	high _Channels
 12859  0041EA  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12860  0041EC  6EDA               	movwf	fsr2h,c
 12861  0041EE  0104               	movlb	4	; () banked
 12862  0041F0  90DF               	bcf	223,0,c
 12863  0041F2  92DF               	bcf	223,1,c
 12864  0041F4  94DF               	bcf	223,2,c
 12865  0041F6  96DF               	bcf	223,3,c
 12866                           
 12867                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12868  0041F8  0100               	movlb	0	; () banked
 12869  0041FA  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12870  0041FC  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12871  0041FE  6F60               	movwf	___wmul@multiplier& (0+255),b
 12872  004200  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12873  004202  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12874  004204  0E00               	movlw	0
 12875  004206  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12876  004208  0E0E               	movlw	14
 12877  00420A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12878  00420C  ECB6  F043         	call	___wmul	;wreg free
 12879  004210  0E06               	movlw	6
 12880  004212  0100               	movlb	0	; () banked
 12881  004214  2760               	addwf	?___wmul& (0+255),f,b
 12882  004216  0E00               	movlw	0
 12883  004218  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12884  00421A  0E00               	movlw	low _Channels
 12885  00421C  2560               	addwf	?___wmul& (0+255),w,b
 12886  00421E  6ED9               	movwf	fsr2l,c
 12887  004220  0E04               	movlw	high _Channels
 12888  004222  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12889  004224  6EDA               	movwf	fsr2h,c
 12890  004226  0EE7               	movlw	231
 12891  004228  6EDE               	movwf	postinc2,c
 12892  00422A  0E03               	movlw	3
 12893  00422C  6EDD               	movwf	postdec2,c
 12894                           
 12895                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12896  00422E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12897  004230  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12898  004232  6F60               	movwf	___wmul@multiplier& (0+255),b
 12899  004234  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12900  004236  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12901  004238  0E00               	movlw	0
 12902  00423A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12903  00423C  0E0E               	movlw	14
 12904  00423E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12905  004240  ECB6  F043         	call	___wmul	;wreg free
 12906  004244  0E0D               	movlw	13
 12907  004246  0100               	movlb	0	; () banked
 12908  004248  2760               	addwf	?___wmul& (0+255),f,b
 12909  00424A  0E00               	movlw	0
 12910  00424C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12911  00424E  0E00               	movlw	low _Channels
 12912  004250  2560               	addwf	?___wmul& (0+255),w,b
 12913  004252  6ED9               	movwf	fsr2l,c
 12914  004254  0E04               	movlw	high _Channels
 12915  004256  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12916  004258  6EDA               	movwf	fsr2h,c
 12917  00425A  0EFF               	movlw	255
 12918  00425C  6EDF               	movwf	indf2,c
 12919                           
 12920                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12921  00425E  0E01               	movlw	1
 12922  004260  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12923  004262  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12924  004264  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12925  004266  ECDE  F03D         	call	_LORAWAN_SetChannelIdStatus
 12926                           
 12927                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12928  00426A  0102               	movlb	2	; () banked
 12929  00426C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12930                           
 12931                           ; BSR set to: 2
 12932                           ;lorawan_eu.c: 851: }
 12933                           ;lorawan_eu.c: 852: }
 12934  00426E  D007               	goto	l1209
 12935  004270                     l1207:
 12936                           
 12937                           ;lorawan_eu.c: 853: else
 12938                           ;lorawan_eu.c: 854: {
 12939                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12940                           
 12941                           ; BSR set to: 2
 12942  004270  0E00               	movlw	0
 12943  004272  0100               	movlb	0	; () banked
 12944  004274  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12945  004276  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12946  004278  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12947  00427A  ECDE  F03D         	call	_LORAWAN_SetChannelIdStatus
 12948  00427E                     l1209:
 12949  00427E  0100               	movlb	0	; () banked
 12950  004280  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 12951  004282  D717               	goto	l14591
 12952  004284                     u17130:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;lorawan_eu.c: 856: }
 12956                           ;lorawan_eu.c: 857: }
 12957                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12958  004284  0102               	movlb	2	; () banked
 12959  004286  8703               	bsf	(_loRa+3)& (0+255),3,b
 12960  004288  0012               	return	
 12961  00428A                     __end_of_UpdateCfList:
 12962                           	opt stack 0
 12963                           tosu	equ	0xFFF
 12964                           tosh	equ	0xFFE
 12965                           tosl	equ	0xFFD
 12966                           pclath	equ	0xFFA
 12967                           tblptru	equ	0xFF8
 12968                           tblptrh	equ	0xFF7
 12969                           tblptrl	equ	0xFF6
 12970                           tablat	equ	0xFF5
 12971                           prodh	equ	0xFF4
 12972                           prodl	equ	0xFF3
 12973                           intcon	equ	0xFF2
 12974                           intcon2	equ	0xFF1
 12975                           intcon3	equ	0xFF0
 12976                           postinc0	equ	0xFEE
 12977                           wreg	equ	0xFE8
 12978                           postinc1	equ	0xFE6
 12979                           postdec1	equ	0xFE5
 12980                           plusw1	equ	0xFE3
 12981                           fsr1h	equ	0xFE2
 12982                           fsr1l	equ	0xFE1
 12983                           indf2	equ	0xFDF
 12984                           postinc2	equ	0xFDE
 12985                           postdec2	equ	0xFDD
 12986                           fsr2h	equ	0xFDA
 12987                           fsr2l	equ	0xFD9
 12988                           status	equ	0xFD8
 12989                           
 12990 ;; *************** function _StartReTxTimer *****************
 12991 ;; Defined at:
 12992 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;  minim           4   62[BANK0 ] unsigned long 
 12997 ;;  i               1   66[BANK0 ] unsigned char 
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      void 
 13000 ;; Registers used:
 13001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13011 ;;Total ram usage:        9 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:   11
 13014 ;; This function calls:
 13015 ;;		_SwTimerSetTimeout
 13016 ;;		_SwTimerStart
 13017 ;;		___lldiv
 13018 ;; This function is called by:
 13019 ;;		_LORAWAN_RxDone
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           	psect	text58
 13024  004AD6                     __ptext58:
 13025                           	opt stack 0
 13026  004AD6                     _StartReTxTimer:
 13027                           	opt stack 15
 13028                           
 13029                           ;lorawan_eu.c: 904: uint8_t i;
 13030                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 13031                           
 13032                           ;incstack = 0
 13033  004AD6  0100               	movlb	0	; () banked
 13034  004AD8  699E               	setf	StartReTxTimer@minim& (0+255),b
 13035  004ADA  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 13036  004ADC  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 13037  004ADE  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 13041  004AE0  0E00               	movlw	0
 13042  004AE2  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 13043  004AE4  D07C               	goto	l1226
 13044  004AE6                     
 13045                           ;lorawan_eu.c: 908: {
 13046                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 13047                           
 13048                           ; BSR set to: 0
 13049  004AE6  0100               	movlb	0	; () banked
 13050  004AE8  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13051  004AEA  0D0E               	mullw	14
 13052  004AEC  0E04               	movlw	4
 13053  004AEE  26F3               	addwf	prodl,f,c
 13054  004AF0  0E00               	movlw	0
 13055  004AF2  22F4               	addwfc	prodh,f,c
 13056  004AF4  0E00               	movlw	low _Channels
 13057  004AF6  24F3               	addwf	prodl,w,c
 13058  004AF8  6ED9               	movwf	fsr2l,c
 13059  004AFA  0E04               	movlw	high _Channels
 13060  004AFC  20F4               	addwfc	prodh,w,c
 13061  004AFE  6EDA               	movwf	fsr2h,c
 13062  004B00  04DE               	decf	postinc2,w,c
 13063  004B02  A4D8               	btfss	status,2,c
 13064  004B04  D06A               	goto	l1228
 13065                           
 13066                           ; BSR set to: 0
 13067  004B06  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13068  004B08  0D0E               	mullw	14
 13069  004B0A  0E08               	movlw	8
 13070  004B0C  26F3               	addwf	prodl,f,c
 13071  004B0E  0E00               	movlw	0
 13072  004B10  22F4               	addwfc	prodh,f,c
 13073  004B12  0E00               	movlw	low _Channels
 13074  004B14  24F3               	addwf	prodl,w,c
 13075  004B16  6ED9               	movwf	fsr2l,c
 13076  004B18  0E04               	movlw	high _Channels
 13077  004B1A  20F4               	addwfc	prodh,w,c
 13078  004B1C  6EDA               	movwf	fsr2h,c
 13079  004B1E  50DE               	movf	postinc2,w,c
 13080  004B20  10DE               	iorwf	postinc2,w,c
 13081  004B22  10DE               	iorwf	postinc2,w,c
 13082  004B24  10DE               	iorwf	postinc2,w,c
 13083  004B26  B4D8               	btfsc	status,2,c
 13084  004B28  D058               	goto	l1228
 13085                           
 13086                           ; BSR set to: 0
 13087  004B2A  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13088  004B2C  0D0E               	mullw	14
 13089  004B2E  0E08               	movlw	8
 13090  004B30  26F3               	addwf	prodl,f,c
 13091  004B32  0E00               	movlw	0
 13092  004B34  22F4               	addwfc	prodh,f,c
 13093  004B36  0E00               	movlw	low _Channels
 13094  004B38  24F3               	addwf	prodl,w,c
 13095  004B3A  6ED9               	movwf	fsr2l,c
 13096  004B3C  0E04               	movlw	high _Channels
 13097  004B3E  20F4               	addwfc	prodh,w,c
 13098  004B40  6EDA               	movwf	fsr2h,c
 13099  004B42  50DE               	movf	postinc2,w,c
 13100  004B44  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 13101  004B46  50DE               	movf	postinc2,w,c
 13102  004B48  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 13103  004B4A  50DE               	movf	postinc2,w,c
 13104  004B4C  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 13105  004B4E  50DE               	movf	postinc2,w,c
 13106  004B50  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 13107  004B52  A0D8               	btfss	status,0,c
 13108  004B54  D042               	goto	l1228
 13109                           
 13110                           ; BSR set to: 0
 13111  004B56  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13112  004B58  0D0E               	mullw	14
 13113  004B5A  0E05               	movlw	5
 13114  004B5C  26F3               	addwf	prodl,f,c
 13115  004B5E  0E00               	movlw	0
 13116  004B60  22F4               	addwfc	prodh,f,c
 13117  004B62  0E00               	movlw	low _Channels
 13118  004B64  24F3               	addwf	prodl,w,c
 13119  004B66  6ED9               	movwf	fsr2l,c
 13120  004B68  0E04               	movlw	high _Channels
 13121  004B6A  20F4               	addwfc	prodh,w,c
 13122  004B6C  6EDA               	movwf	fsr2h,c
 13123  004B6E  0104               	movlb	4	; () banked
 13124  004B70  50DF               	movf	223,w,c
 13125  004B72  0B0F               	andlw	15
 13126  004B74  0100               	movlb	0	; () banked
 13127  004B76  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 13128  004B78  519A               	movf	??_StartReTxTimer& (0+255),w,b
 13129  004B7A  0102               	movlb	2	; () banked
 13130  004B7C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 13131  004B7E  A0D8               	btfss	status,0,c
 13132  004B80  D02C               	goto	l1228
 13133                           
 13134                           ; BSR set to: 2
 13135  004B82  0100               	movlb	0	; () banked
 13136  004B84  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13137  004B86  0D0E               	mullw	14
 13138  004B88  0E05               	movlw	5
 13139  004B8A  26F3               	addwf	prodl,f,c
 13140  004B8C  0E00               	movlw	0
 13141  004B8E  22F4               	addwfc	prodh,f,c
 13142  004B90  0E00               	movlw	low _Channels
 13143  004B92  24F3               	addwf	prodl,w,c
 13144  004B94  6ED9               	movwf	fsr2l,c
 13145  004B96  0E04               	movlw	high _Channels
 13146  004B98  20F4               	addwfc	prodh,w,c
 13147  004B9A  6EDA               	movwf	fsr2h,c
 13148  004B9C  0104               	movlb	4	; () banked
 13149  004B9E  38DF               	swapf	223,w,c
 13150  004BA0  0B0F               	andlw	15
 13151  004BA2  0100               	movlb	0	; () banked
 13152  004BA4  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 13153  004BA6  0102               	movlb	2	; () banked
 13154  004BA8  51DF               	movf	(_loRa+223)& (0+255),w,b
 13155  004BAA  0100               	movlb	0	; () banked
 13156  004BAC  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 13157  004BAE  A0D8               	btfss	status,0,c
 13158  004BB0  D014               	goto	l1228
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;lorawan_eu.c: 910: {
 13162                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 13163  004BB2  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13164  004BB4  0D0E               	mullw	14
 13165  004BB6  0E08               	movlw	8
 13166  004BB8  26F3               	addwf	prodl,f,c
 13167  004BBA  0E00               	movlw	0
 13168  004BBC  22F4               	addwfc	prodh,f,c
 13169  004BBE  0E00               	movlw	low _Channels
 13170  004BC0  24F3               	addwf	prodl,w,c
 13171  004BC2  6ED9               	movwf	fsr2l,c
 13172  004BC4  0E04               	movlw	high _Channels
 13173  004BC6  20F4               	addwfc	prodh,w,c
 13174  004BC8  6EDA               	movwf	fsr2h,c
 13175  004BCA  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 13176  004BCE  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 13177  004BD2  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 13178  004BD6  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 13179  004BDA                     l1228:
 13180                           
 13181                           ; BSR set to: 0
 13182  004BDA  0100               	movlb	0	; () banked
 13183  004BDC  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 13184  004BDE                     l1226:
 13185                           
 13186                           ; BSR set to: 0
 13187                           
 13188                           ; BSR set to: 0
 13189  004BDE  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 13190  004BE0  0102               	movlb	2	; () banked
 13191  004BE2  5DED               	subwf	(_loRa+237)& (0+255),w,b
 13192  004BE4  B0D8               	btfsc	status,0,c
 13193  004BE6  D77F               	goto	l1227
 13194                           
 13195                           ; BSR set to: 2
 13196                           ;lorawan_eu.c: 912: }
 13197                           ;lorawan_eu.c: 913: }
 13198                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13199                           
 13200                           ; BSR set to: 2
 13201  004BE8  5102               	movf	(_loRa+2)& (0+255),w,b
 13202  004BEA  0BF0               	andlw	-16
 13203  004BEC  0906               	iorlw	6
 13204  004BEE  6F02               	movwf	(_loRa+2)& (0+255),b
 13205                           
 13206                           ; BSR set to: 2
 13207                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 13208  004BF0  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 13209  004BF4  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 13210  004BF8  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 13211  004BFC  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 13212  004C00  0E0C               	movlw	12
 13213  004C02                     u17225:
 13214  004C02  90D8               	bcf	status,0,c
 13215  004C04  0100               	movlb	0	; () banked
 13216  004C06  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 13217  004C08  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 13218  004C0A  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 13219  004C0C  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 13220  004C0E  2EE8               	decfsz	wreg,f,c
 13221  004C10  D7F8               	goto	u17225
 13222  004C12  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 13223  004C16  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 13224  004C1A  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 13225  004C1E  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 13226  004C22  0E7D               	movlw	125
 13227  004C24  6F64               	movwf	___lldiv@divisor& (0+255),b
 13228  004C26  0E00               	movlw	0
 13229  004C28  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13230  004C2A  0E00               	movlw	0
 13231  004C2C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13232  004C2E  0E00               	movlw	0
 13233  004C30  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13234  004C32  EC7A  F039         	call	___lldiv	;wreg free
 13235  004C36  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13236  004C3A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13237  004C3E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13238  004C42  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13239  004C46  0102               	movlb	2	; () banked
 13240  004C48  51E6               	movf	(_loRa+230)& (0+255),w,b
 13241  004C4A  ECC6  F040         	call	_SwTimerSetTimeout
 13242                           
 13243                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 13244  004C4E  0102               	movlb	2	; () banked
 13245  004C50  51E6               	movf	(_loRa+230)& (0+255),w,b
 13246  004C52  EC01  F037         	call	_SwTimerStart
 13247  004C56  0012               	return		;funcret
 13248  004C58                     __end_of_StartReTxTimer:
 13249                           	opt stack 0
 13250                           tosu	equ	0xFFF
 13251                           tosh	equ	0xFFE
 13252                           tosl	equ	0xFFD
 13253                           pclath	equ	0xFFA
 13254                           tblptru	equ	0xFF8
 13255                           tblptrh	equ	0xFF7
 13256                           tblptrl	equ	0xFF6
 13257                           tablat	equ	0xFF5
 13258                           prodh	equ	0xFF4
 13259                           prodl	equ	0xFF3
 13260                           intcon	equ	0xFF2
 13261                           intcon2	equ	0xFF1
 13262                           intcon3	equ	0xFF0
 13263                           postinc0	equ	0xFEE
 13264                           wreg	equ	0xFE8
 13265                           postinc1	equ	0xFE6
 13266                           postdec1	equ	0xFE5
 13267                           plusw1	equ	0xFE3
 13268                           fsr1h	equ	0xFE2
 13269                           fsr1l	equ	0xFE1
 13270                           indf2	equ	0xFDF
 13271                           postinc2	equ	0xFDE
 13272                           postdec2	equ	0xFDD
 13273                           fsr2h	equ	0xFDA
 13274                           fsr2l	equ	0xFD9
 13275                           status	equ	0xFD8
 13276                           
 13277 ;; *************** function _SetReceptionNotOkState *****************
 13278 ;; Defined at:
 13279 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;		None
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;Total ram usage:        0 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:   14
 13300 ;; This function calls:
 13301 ;;		_LORAWAN_EnterContinuousReceive
 13302 ;;		_RxData
 13303 ;; This function is called by:
 13304 ;;		_LORAWAN_RxDone
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text59
 13309  0073FA                     __ptext59:
 13310                           	opt stack 0
 13311  0073FA                     _SetReceptionNotOkState:
 13312                           	opt stack 12
 13313                           
 13314                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13315                           
 13316                           ;incstack = 0
 13317  0073FA  0102               	movlb	2	; () banked
 13318  0073FC  5102               	movf	(_loRa+2)& (0+255),w,b
 13319  0073FE  0B0F               	andlw	15
 13320  007400  0A05               	xorlw	5
 13321  007402  B4D8               	btfsc	status,2,c
 13322  007404  D008               	goto	u17510
 13323                           
 13324                           ; BSR set to: 2
 13325  007406  5102               	movf	(_loRa+2)& (0+255),w,b
 13326  007408  0B0F               	andlw	15
 13327  00740A  0A03               	xorlw	3
 13328  00740C  A4D8               	btfss	status,2,c
 13329  00740E  D029               	goto	l2371
 13330                           
 13331                           ; BSR set to: 2
 13332  007410  51F1               	movf	(_loRa+241)& (0+255),w,b
 13333  007412  B4D8               	btfsc	status,2,c
 13334  007414  D026               	goto	l2371
 13335  007416                     u17510:
 13336                           
 13337                           ; BSR set to: 2
 13338                           ;lorawan.c: 2000: {
 13339                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13340  007416  9100               	bcf	_loRa& (0+255),0,b
 13341                           
 13342                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13343  007418  9102               	bcf	(_loRa+2)& (0+255),0,b
 13344  00741A  9302               	bcf	(_loRa+2)& (0+255),1,b
 13345  00741C  9502               	bcf	(_loRa+2)& (0+255),2,b
 13346  00741E  9702               	bcf	(_loRa+2)& (0+255),3,b
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13350  007420  5112               	movf	(_loRa+18)& (0+255),w,b
 13351  007422  A4D8               	btfss	status,2,c
 13352  007424  D01C               	goto	u17549
 13353                           
 13354                           ; BSR set to: 2
 13355  007426  0101               	movlb	1	; () banked
 13356  007428  5169               	movf	_rxPayload& (0+255),w,b
 13357  00742A  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 13358  00742C  B4D8               	btfsc	status,2,c
 13359  00742E  D017               	goto	u17549
 13360                           
 13361                           ; BSR set to: 1
 13362                           ;lorawan.c: 2005: {
 13363                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13364  007430  0102               	movlb	2	; () banked
 13365  007432  9B00               	bcf	_loRa& (0+255),5,b
 13366                           
 13367                           ; BSR set to: 2
 13368                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13369  007434  0E00               	movlw	0
 13370  007436  0100               	movlb	0	; () banked
 13371  007438  6F60               	movwf	RxData@pData& (0+255),b
 13372  00743A  0E00               	movlw	0
 13373  00743C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13374  00743E  0E00               	movlw	0
 13375  007440  6F62               	movwf	RxData@dataLength& (0+255),b
 13376  007442  0E00               	movlw	0
 13377  007444  6F63               	movwf	RxData@status& (0+255),b
 13378  007446  D801               	call	u17548
 13379  007448  D00A               	goto	u17549
 13380  00744A                     u17548:
 13381  00744A  0005               	push	
 13382  00744C  6EFA               	movwf	pclath,c
 13383  00744E  0101               	movlb	1	; () banked
 13384  007450  5169               	movf	_rxPayload& (0+255),w,b
 13385  007452  6EFD               	movwf	tosl,c
 13386  007454  516A               	movf	(_rxPayload+1)& (0+255),w,b
 13387  007456  6EFE               	movwf	tosh,c
 13388  007458  6AFF               	clrf	tosu,c
 13389  00745A  50FA               	movf	pclath,w,c
 13390  00745C  0012               	return		;indir
 13391  00745E                     u17549:
 13392                           
 13393                           ;lorawan.c: 2008: }
 13394                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13395  00745E  0102               	movlb	2	; () banked
 13396  007460  9303               	bcf	(_loRa+3)& (0+255),1,b
 13397  007462                     l2371:
 13398                           
 13399                           ; BSR set to: 2
 13400                           ;lorawan.c: 2010: }
 13401                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13402                           
 13403                           ; BSR set to: 2
 13404  007462  0E02               	movlw	2
 13405  007464  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13406  007466  A4D8               	btfss	status,2,c
 13407  007468  0012               	return	
 13408                           
 13409                           ; BSR set to: 2
 13410                           ;lorawan.c: 2013: {
 13411                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13412  00746A  5102               	movf	(_loRa+2)& (0+255),w,b
 13413  00746C  0BF0               	andlw	-16
 13414  00746E  0909               	iorlw	9
 13415  007470  6F02               	movwf	(_loRa+2)& (0+255),b
 13416                           
 13417                           ; BSR set to: 2
 13418                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13419  007472  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13420  007476  0012               	return	
 13421  007478                     __end_of_SetReceptionNotOkState:
 13422                           	opt stack 0
 13423                           tosu	equ	0xFFF
 13424                           tosh	equ	0xFFE
 13425                           tosl	equ	0xFFD
 13426                           pclath	equ	0xFFA
 13427                           tblptru	equ	0xFF8
 13428                           tblptrh	equ	0xFF7
 13429                           tblptrl	equ	0xFF6
 13430                           tablat	equ	0xFF5
 13431                           prodh	equ	0xFF4
 13432                           prodl	equ	0xFF3
 13433                           intcon	equ	0xFF2
 13434                           intcon2	equ	0xFF1
 13435                           intcon3	equ	0xFF0
 13436                           postinc0	equ	0xFEE
 13437                           wreg	equ	0xFE8
 13438                           postinc1	equ	0xFE6
 13439                           postdec1	equ	0xFE5
 13440                           plusw1	equ	0xFE3
 13441                           fsr1h	equ	0xFE2
 13442                           fsr1l	equ	0xFE1
 13443                           indf2	equ	0xFDF
 13444                           postinc2	equ	0xFDE
 13445                           postdec2	equ	0xFDD
 13446                           fsr2h	equ	0xFDA
 13447                           fsr2l	equ	0xFD9
 13448                           status	equ	0xFD8
 13449                           
 13450 ;; *************** function _SetJoinFailState *****************
 13451 ;; Defined at:
 13452 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;		None
 13455 ;; Auto vars:     Size  Location     Type
 13456 ;;		None
 13457 ;; Return value:  Size  Location     Type
 13458 ;;                  1    wreg      void 
 13459 ;; Registers used:
 13460 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13461 ;; Tracked objects:
 13462 ;;		On entry : 0/0
 13463 ;;		On exit  : 0/0
 13464 ;;		Unchanged: 0/0
 13465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;Total ram usage:        0 bytes
 13471 ;; Hardware stack levels used:    1
 13472 ;; Hardware stack levels required when called:    8
 13473 ;; This function calls:
 13474 ;;		_RxJoinResponse
 13475 ;; This function is called by:
 13476 ;;		_LORAWAN_RxTimeout
 13477 ;;		_LORAWAN_RxDone
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text60
 13482  00844C                     __ptext60:
 13483                           	opt stack 0
 13484  00844C                     _SetJoinFailState:
 13485                           	opt stack 18
 13486                           
 13487                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13488                           
 13489                           ;incstack = 0
 13490  00844C  0102               	movlb	2	; () banked
 13491  00844E  9902               	bcf	(_loRa+2)& (0+255),4,b
 13492                           
 13493                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13494  008450  9500               	bcf	_loRa& (0+255),2,b
 13495                           
 13496                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13497  008452  9102               	bcf	(_loRa+2)& (0+255),0,b
 13498  008454  9302               	bcf	(_loRa+2)& (0+255),1,b
 13499  008456  9502               	bcf	(_loRa+2)& (0+255),2,b
 13500  008458  9702               	bcf	(_loRa+2)& (0+255),3,b
 13501                           
 13502                           ; BSR set to: 2
 13503                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13504  00845A  0101               	movlb	1	; () banked
 13505  00845C  516B               	movf	(_rxPayload+2)& (0+255),w,b
 13506  00845E  116C               	iorwf	(_rxPayload+3)& (0+255),w,b
 13507  008460  B4D8               	btfsc	status,2,c
 13508  008462  0012               	return	
 13509                           
 13510                           ; BSR set to: 1
 13511                           ;lorawan.c: 1110: {
 13512                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13513  008464  D801               	call	u17088
 13514  008466  0012               	return	
 13515  008468                     u17088:
 13516  008468  0005               	push	
 13517  00846A  6EFA               	movwf	pclath,c
 13518  00846C  516B               	movf	(_rxPayload+2)& (0+255),w,b
 13519  00846E  6EFD               	movwf	tosl,c
 13520  008470  516C               	movf	(_rxPayload+3)& (0+255),w,b
 13521  008472  6EFE               	movwf	tosh,c
 13522  008474  6AFF               	clrf	tosu,c
 13523  008476  50FA               	movf	pclath,w,c
 13524  008478  0E00               	movlw	0
 13525  00847A  0012               	return		;indir
 13526  00847C                     __end_of_SetJoinFailState:
 13527                           	opt stack 0
 13528                           tosu	equ	0xFFF
 13529                           tosh	equ	0xFFE
 13530                           tosl	equ	0xFFD
 13531                           pclath	equ	0xFFA
 13532                           tblptru	equ	0xFF8
 13533                           tblptrh	equ	0xFF7
 13534                           tblptrl	equ	0xFF6
 13535                           tablat	equ	0xFF5
 13536                           prodh	equ	0xFF4
 13537                           prodl	equ	0xFF3
 13538                           intcon	equ	0xFF2
 13539                           intcon2	equ	0xFF1
 13540                           intcon3	equ	0xFF0
 13541                           postinc0	equ	0xFEE
 13542                           wreg	equ	0xFE8
 13543                           postinc1	equ	0xFE6
 13544                           postdec1	equ	0xFE5
 13545                           plusw1	equ	0xFE3
 13546                           fsr1h	equ	0xFE2
 13547                           fsr1l	equ	0xFE1
 13548                           indf2	equ	0xFDF
 13549                           postinc2	equ	0xFDE
 13550                           postdec2	equ	0xFDD
 13551                           fsr2h	equ	0xFDA
 13552                           fsr2l	equ	0xFD9
 13553                           status	equ	0xFD8
 13554                           
 13555 ;; *************** function _RxJoinResponse *****************
 13556 ;; Defined at:
 13557 ;;		line 63 in file "main.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;  status          1    wreg     unsigned char 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  status          1    0[COMRAM] unsigned char 
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		wreg
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:    7
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_main
 13582 ;;		_SetJoinFailState
 13583 ;;		_UpdateJoinSuccessState
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           	psect	text61
 13588  008CCC                     __ptext61:
 13589                           	opt stack 0
 13590  008CCC                     _RxJoinResponse:
 13591                           	opt stack 20
 13592                           
 13593                           ;incstack = 0
 13594  008CCC  0012               	return		;funcret
 13595  008CCE                     __end_of_RxJoinResponse:
 13596                           	opt stack 0
 13597                           tosu	equ	0xFFF
 13598                           tosh	equ	0xFFE
 13599                           tosl	equ	0xFFD
 13600                           pclath	equ	0xFFA
 13601                           tblptru	equ	0xFF8
 13602                           tblptrh	equ	0xFF7
 13603                           tblptrl	equ	0xFF6
 13604                           tablat	equ	0xFF5
 13605                           prodh	equ	0xFF4
 13606                           prodl	equ	0xFF3
 13607                           intcon	equ	0xFF2
 13608                           intcon2	equ	0xFF1
 13609                           intcon3	equ	0xFF0
 13610                           postinc0	equ	0xFEE
 13611                           wreg	equ	0xFE8
 13612                           postinc1	equ	0xFE6
 13613                           postdec1	equ	0xFE5
 13614                           plusw1	equ	0xFE3
 13615                           fsr1h	equ	0xFE2
 13616                           fsr1l	equ	0xFE1
 13617                           indf2	equ	0xFDF
 13618                           postinc2	equ	0xFDE
 13619                           postdec2	equ	0xFDD
 13620                           fsr2h	equ	0xFDA
 13621                           fsr2l	equ	0xFD9
 13622                           status	equ	0xFD8
 13623                           
 13624 ;; *************** function _MacExecuteCommands *****************
 13625 ;; Defined at:
 13626 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 13629 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13630 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 13631 ;; Auto vars:     Size  Location     Type
 13632 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 13633 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13634 ;;  done            1   85[BANK0 ] unsigned char 
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  2   80[BANK0 ] PTR unsigned char 
 13637 ;; Registers used:
 13638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13644 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;Total ram usage:        8 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:   11
 13651 ;; This function calls:
 13652 ;;		_ExecuteDevStatus
 13653 ;;		_ExecuteDutyCycle
 13654 ;;		_ExecuteLinkAdr
 13655 ;;		_ExecuteLinkCheck
 13656 ;;		_ExecuteNewChannel
 13657 ;;		_ExecuteRxParamSetupReq
 13658 ;;		_ExecuteRxTimingSetup
 13659 ;; This function is called by:
 13660 ;;		_LORAWAN_RxDone
 13661 ;; This function uses a non-reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text62
 13665  002F4E                     __ptext62:
 13666                           	opt stack 0
 13667  002F4E                     _MacExecuteCommands:
 13668                           	opt stack 15
 13669                           
 13670                           ;lorawan.c: 1577: bool done = 0;
 13671                           
 13672                           ;incstack = 0
 13673  002F4E  0E00               	movlw	0
 13674  002F50  0100               	movlb	0	; () banked
 13675  002F52  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;lorawan.c: 1578: uint8_t *ptr;
 13679                           ;lorawan.c: 1579: ptr = buffer;
 13680  002F54  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13681  002F58  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13682                           
 13683                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13684  002F5C  D15A               	goto	l2283
 13685  002F5E                     
 13686                           ; BSR set to: 0
 13687                           ;lorawan.c: 1581: {
 13688                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13689                           
 13690                           ; BSR set to: 0
 13691  002F5E  0102               	movlb	2	; () banked
 13692  002F60  51A7               	movf	(_loRa+167)& (0+255),w,b
 13693  002F62  0D02               	mullw	2
 13694  002F64  0E00               	movlw	low _loRa
 13695  002F66  0100               	movlb	0	; () banked
 13696  002F68  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13697  002F6A  0E02               	movlw	high _loRa
 13698  002F6C  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13699  002F6E  0EA8               	movlw	168
 13700  002F70  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13701  002F72  0E00               	movlw	0
 13702  002F74  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13703  002F76  50F3               	movf	prodl,w,c
 13704  002F78  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13705  002F7A  50F4               	movf	prodh,w,c
 13706  002F7C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13707  002F7E  0E01               	movlw	1
 13708  002F80  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13709  002F82  6ED9               	movwf	fsr2l,c
 13710  002F84  0E00               	movlw	0
 13711  002F86  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13712  002F88  6EDA               	movwf	fsr2h,c
 13713  002F8A  0102               	movlb	2	; () banked
 13714  002F8C  90DF               	bcf	indf2,0,c
 13715                           
 13716                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13717  002F8E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13718  002F90  0D02               	mullw	2
 13719  002F92  0E00               	movlw	low _loRa
 13720  002F94  0100               	movlb	0	; () banked
 13721  002F96  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13722  002F98  0E02               	movlw	high _loRa
 13723  002F9A  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13724  002F9C  0EA8               	movlw	168
 13725  002F9E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13726  002FA0  0E00               	movlw	0
 13727  002FA2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13728  002FA4  50F3               	movf	prodl,w,c
 13729  002FA6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13730  002FA8  50F4               	movf	prodh,w,c
 13731  002FAA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13732  002FAC  0E01               	movlw	1
 13733  002FAE  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13734  002FB0  6ED9               	movwf	fsr2l,c
 13735  002FB2  0E00               	movlw	0
 13736  002FB4  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13737  002FB6  6EDA               	movwf	fsr2h,c
 13738  002FB8  0102               	movlb	2	; () banked
 13739  002FBA  92DF               	bcf	indf2,1,c
 13740                           
 13741                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13742  002FBC  51A7               	movf	(_loRa+167)& (0+255),w,b
 13743  002FBE  0D02               	mullw	2
 13744  002FC0  0E00               	movlw	low _loRa
 13745  002FC2  0100               	movlb	0	; () banked
 13746  002FC4  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13747  002FC6  0E02               	movlw	high _loRa
 13748  002FC8  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13749  002FCA  0EA8               	movlw	168
 13750  002FCC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13751  002FCE  0E00               	movlw	0
 13752  002FD0  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13753  002FD2  50F3               	movf	prodl,w,c
 13754  002FD4  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13755  002FD6  50F4               	movf	prodh,w,c
 13756  002FD8  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13757  002FDA  0E01               	movlw	1
 13758  002FDC  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13759  002FDE  6ED9               	movwf	fsr2l,c
 13760  002FE0  0E00               	movlw	0
 13761  002FE2  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13762  002FE4  6EDA               	movwf	fsr2h,c
 13763  002FE6  0102               	movlb	2	; () banked
 13764  002FE8  94DF               	bcf	indf2,2,c
 13765                           
 13766                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13767  002FEA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13768  002FEC  0D02               	mullw	2
 13769  002FEE  0E00               	movlw	low _loRa
 13770  002FF0  0100               	movlb	0	; () banked
 13771  002FF2  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13772  002FF4  0E02               	movlw	high _loRa
 13773  002FF6  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13774  002FF8  0EA8               	movlw	168
 13775  002FFA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13776  002FFC  0E00               	movlw	0
 13777  002FFE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13778  003000  50F3               	movf	prodl,w,c
 13779  003002  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13780  003004  50F4               	movf	prodh,w,c
 13781  003006  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13782  003008  0E01               	movlw	1
 13783  00300A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13784  00300C  6ED9               	movwf	fsr2l,c
 13785  00300E  0E00               	movlw	0
 13786  003010  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13787  003012  6EDA               	movwf	fsr2h,c
 13788  003014  0102               	movlb	2	; () banked
 13789  003016  96DF               	bcf	indf2,3,c
 13790                           
 13791                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13792  003018  51A7               	movf	(_loRa+167)& (0+255),w,b
 13793  00301A  0D02               	mullw	2
 13794  00301C  0E00               	movlw	low _loRa
 13795  00301E  0100               	movlb	0	; () banked
 13796  003020  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13797  003022  0E02               	movlw	high _loRa
 13798  003024  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13799  003026  0EA8               	movlw	168
 13800  003028  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13801  00302A  0E00               	movlw	0
 13802  00302C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13803  00302E  50F3               	movf	prodl,w,c
 13804  003030  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13805  003032  50F4               	movf	prodh,w,c
 13806  003034  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13807  003036  0E01               	movlw	1
 13808  003038  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13809  00303A  6ED9               	movwf	fsr2l,c
 13810  00303C  0E00               	movlw	0
 13811  00303E  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13812  003040  6EDA               	movwf	fsr2h,c
 13813  003042  0102               	movlb	2	; () banked
 13814  003044  98DF               	bcf	indf2,4,c
 13815                           
 13816                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13817  003046  51A7               	movf	(_loRa+167)& (0+255),w,b
 13818  003048  0D02               	mullw	2
 13819  00304A  0E00               	movlw	low _loRa
 13820  00304C  0100               	movlb	0	; () banked
 13821  00304E  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13822  003050  0E02               	movlw	high _loRa
 13823  003052  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13824  003054  0EA8               	movlw	168
 13825  003056  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13826  003058  0E00               	movlw	0
 13827  00305A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13828  00305C  50F3               	movf	prodl,w,c
 13829  00305E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13830  003060  50F4               	movf	prodh,w,c
 13831  003062  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13832  003064  0E01               	movlw	1
 13833  003066  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13834  003068  6ED9               	movwf	fsr2l,c
 13835  00306A  0E00               	movlw	0
 13836  00306C  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13837  00306E  6EDA               	movwf	fsr2h,c
 13838  003070  0102               	movlb	2	; () banked
 13839  003072  9ADF               	bcf	indf2,5,c
 13840                           
 13841                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13842  003074  51A7               	movf	(_loRa+167)& (0+255),w,b
 13843  003076  0D02               	mullw	2
 13844  003078  0E00               	movlw	low _loRa
 13845  00307A  0100               	movlb	0	; () banked
 13846  00307C  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13847  00307E  0E02               	movlw	high _loRa
 13848  003080  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13849  003082  0EA8               	movlw	168
 13850  003084  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13851  003086  0E00               	movlw	0
 13852  003088  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13853  00308A  50F3               	movf	prodl,w,c
 13854  00308C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13855  00308E  50F4               	movf	prodh,w,c
 13856  003090  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13857  003092  0E01               	movlw	1
 13858  003094  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13859  003096  6ED9               	movwf	fsr2l,c
 13860  003098  0E00               	movlw	0
 13861  00309A  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13862  00309C  6EDA               	movwf	fsr2h,c
 13863  00309E  0102               	movlb	2	; () banked
 13864  0030A0  9CDF               	bcf	indf2,6,c
 13865                           
 13866                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13867  0030A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 13868  0030A4  0D02               	mullw	2
 13869  0030A6  0E00               	movlw	low _loRa
 13870  0030A8  0100               	movlb	0	; () banked
 13871  0030AA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13872  0030AC  0E02               	movlw	high _loRa
 13873  0030AE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13874  0030B0  0EA8               	movlw	168
 13875  0030B2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13876  0030B4  0E00               	movlw	0
 13877  0030B6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13878  0030B8  50F3               	movf	prodl,w,c
 13879  0030BA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13880  0030BC  50F4               	movf	prodh,w,c
 13881  0030BE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13882  0030C0  0E01               	movlw	1
 13883  0030C2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13884  0030C4  6ED9               	movwf	fsr2l,c
 13885  0030C6  0E00               	movlw	0
 13886  0030C8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13887  0030CA  6EDA               	movwf	fsr2h,c
 13888  0030CC  0102               	movlb	2	; () banked
 13889  0030CE  9EDF               	bcf	indf2,7,c
 13890                           
 13891                           ; BSR set to: 2
 13892                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13893  0030D0  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13894  0030D4  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13895  0030D8  51A7               	movf	(_loRa+167)& (0+255),w,b
 13896  0030DA  0D02               	mullw	2
 13897  0030DC  0EA8               	movlw	low (_loRa+168)
 13898  0030DE  24F3               	addwf	prodl,w,c
 13899  0030E0  6EE9               	movwf	fsr0l,c
 13900  0030E2  0E02               	movlw	high (_loRa+168)
 13901  0030E4  20F4               	addwfc	prodh,w,c
 13902  0030E6  6EEA               	movwf	fsr0h,c
 13903  0030E8  CFDF FFEF          	movff	indf2,indf0
 13904                           
 13905                           ;lorawan.c: 1595: switch (*ptr ++)
 13906  0030EC  D064               	goto	l2273
 13907  0030EE                     
 13908                           ;lorawan.c: 1598: {
 13909                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13910                           
 13911                           ; BSR set to: 2
 13912  0030EE  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13913  0030F2  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13914  0030F6  ECF5  F041         	call	_ExecuteLinkCheck
 13915  0030FA  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13916  0030FE  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13917  003102  D04D               	goto	l14855
 13918  003104                     
 13919                           ;lorawan.c: 1605: {
 13920                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13921                           
 13922                           ; BSR set to: 2
 13923  003104  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13924  003108  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13925  00310C  EC22  F019         	call	_ExecuteLinkAdr	;wreg free
 13926  003110  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13927  003114  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13928                           
 13929                           ;lorawan.c: 1607: } break;
 13930  003118  D06C               	goto	l2275
 13931  00311A                     
 13932                           ;lorawan.c: 1610: {
 13933                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13934  00311A  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13935  00311E  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13936  003122  ECE4  F03E         	call	_ExecuteDutyCycle	;wreg free
 13937  003126  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13938  00312A  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13939                           
 13940                           ;lorawan.c: 1612: } break;
 13941  00312E  D061               	goto	l2275
 13942  003130                     
 13943                           ;lorawan.c: 1615: {
 13944                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13945  003130  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13946  003134  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13947  003138  EC44  F01F         	call	_ExecuteRxParamSetupReq	;wreg free
 13948  00313C  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13949  003140  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13950                           
 13951                           ;lorawan.c: 1617: } break;
 13952  003144  D056               	goto	l2275
 13953  003146                     
 13954                           ;lorawan.c: 1620: {
 13955                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13956  003146  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13957  00314A  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13958  00314E  EC07  F046         	call	_ExecuteDevStatus	;wreg free
 13959  003152  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13960  003156  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13961                           
 13962                           ;lorawan.c: 1622: } break;
 13963  00315A  D04B               	goto	l2275
 13964  00315C                     
 13965                           ;lorawan.c: 1625: {
 13966                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13967  00315C  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13968  003160  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13969  003164  ECD8  F01B         	call	_ExecuteNewChannel	;wreg free
 13970  003168  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13971  00316C  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13972                           
 13973                           ;lorawan.c: 1628: } break;
 13974  003170  D040               	goto	l2275
 13975  003172                     
 13976                           ;lorawan.c: 1631: {
 13977                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13978  003172  C0B6  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13979  003176  C0B7  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13980  00317A  ECA2  F043         	call	_ExecuteRxTimingSetup	;wreg free
 13981  00317E  C067  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13982  003182  C068  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13983                           
 13984                           ;lorawan.c: 1633: } break;
 13985  003186  D035               	goto	l2275
 13986  003188                     
 13987                           ;lorawan.c: 1636: {
 13988                           ;lorawan.c: 1637: done = 1;
 13989  003188  0E01               	movlw	1
 13990  00318A  0100               	movlb	0	; () banked
 13991  00318C  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13995  00318E  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13996  003190  0D01               	mullw	1
 13997  003192  50F3               	movf	prodl,w,c
 13998  003194  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13999  003196  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 14000  003198  50F4               	movf	prodh,w,c
 14001  00319A  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 14002  00319C  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 14003  00319E                     l14855:
 14004                           
 14005                           ; BSR set to: 0
 14006                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 14007  00319E  0102               	movlb	2	; () banked
 14008  0031A0  51A7               	movf	(_loRa+167)& (0+255),w,b
 14009  0031A2  0D02               	mullw	2
 14010  0031A4  0EA8               	movlw	low (_loRa+168)
 14011  0031A6  24F3               	addwf	prodl,w,c
 14012  0031A8  6ED9               	movwf	fsr2l,c
 14013  0031AA  0E02               	movlw	high (_loRa+168)
 14014  0031AC  20F4               	addwfc	prodh,w,c
 14015  0031AE  6EDA               	movwf	fsr2h,c
 14016  0031B0  0EFF               	movlw	255
 14017  0031B2  6EDF               	movwf	indf2,c
 14018                           
 14019                           ; BSR set to: 2
 14020                           ;lorawan.c: 1641: }
 14021                           
 14022                           ;lorawan.c: 1640: } break;
 14023  0031B4  D01E               	goto	l2275
 14024  0031B6                     l2273:
 14025                           
 14026                           ; BSR set to: 2
 14027                           
 14028                           ; BSR set to: 2
 14029  0031B6  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 14030  0031BA  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 14031  0031BE  0100               	movlb	0	; () banked
 14032  0031C0  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 14033  0031C2  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 14034  0031C4  50DF               	movf	indf2,w,c
 14035                           
 14036                           ; Switch size 1, requested type "space"
 14037                           ; Number of cases is 7, Range of values is 2 to 8
 14038                           ; switch strategies available:
 14039                           ; Name         Instructions Cycles
 14040                           ; simple_byte           22    12 (average)
 14041                           ;	Chosen strategy is simple_byte
 14042  0031C6  0A02               	xorlw	2	; case 2
 14043  0031C8  B4D8               	btfsc	status,2,c
 14044  0031CA  D791               	goto	l2274
 14045  0031CC  0A01               	xorlw	1	; case 3
 14046  0031CE  B4D8               	btfsc	status,2,c
 14047  0031D0  D799               	goto	l2276
 14048  0031D2  0A07               	xorlw	7	; case 4
 14049  0031D4  B4D8               	btfsc	status,2,c
 14050  0031D6  D7A1               	goto	l2277
 14051  0031D8  0A01               	xorlw	1	; case 5
 14052  0031DA  B4D8               	btfsc	status,2,c
 14053  0031DC  D7A9               	goto	l2278
 14054  0031DE  0A03               	xorlw	3	; case 6
 14055  0031E0  B4D8               	btfsc	status,2,c
 14056  0031E2  D7B1               	goto	l2279
 14057  0031E4  0A01               	xorlw	1	; case 7
 14058  0031E6  B4D8               	btfsc	status,2,c
 14059  0031E8  D7B9               	goto	l2280
 14060  0031EA  0A0F               	xorlw	15	; case 8
 14061  0031EC  B4D8               	btfsc	status,2,c
 14062  0031EE  D7C1               	goto	l2281
 14063  0031F0  D7CB               	goto	l2282
 14064  0031F2                     l2275:
 14065                           
 14066                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 14067                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 14068                           
 14069                           ; BSR set to: 0
 14070  0031F2  0102               	movlb	2	; () banked
 14071  0031F4  51A7               	movf	(_loRa+167)& (0+255),w,b
 14072  0031F6  0D02               	mullw	2
 14073  0031F8  0EA8               	movlw	low (_loRa+168)
 14074  0031FA  24F3               	addwf	prodl,w,c
 14075  0031FC  6ED9               	movwf	fsr2l,c
 14076  0031FE  0E02               	movlw	high (_loRa+168)
 14077  003200  20F4               	addwfc	prodh,w,c
 14078  003202  6EDA               	movwf	fsr2h,c
 14079  003204  28DE               	incf	postinc2,w,c
 14080  003206  B4D8               	btfsc	status,2,c
 14081  003208  D004               	goto	l2283
 14082                           
 14083                           ; BSR set to: 2
 14084  00320A  0E10               	movlw	16
 14085  00320C  61A7               	cpfslt	(_loRa+167)& (0+255),b
 14086  00320E  D001               	goto	l2283
 14087                           
 14088                           ; BSR set to: 2
 14089                           ;lorawan.c: 1645: {
 14090                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 14091  003210  2BA7               	incf	(_loRa+167)& (0+255),f,b
 14092  003212                     l2283:
 14093                           
 14094                           ; BSR set to: 2
 14095                           
 14096                           ; BSR set to: 2
 14097  003212  0100               	movlb	0	; () banked
 14098  003214  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14099  003216  0D01               	mullw	1
 14100  003218  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 14101  00321C  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 14102  003220  50F3               	movf	prodl,w,c
 14103  003222  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 14104  003224  50F4               	movf	prodh,w,c
 14105  003226  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14106  003228  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 14107  00322A  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 14108  00322C  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 14109  00322E  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 14110  003230  B0D8               	btfsc	status,0,c
 14111  003232  D003               	goto	u17630
 14112                           
 14113                           ; BSR set to: 0
 14114  003234  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 14115  003236  B4D8               	btfsc	status,2,c
 14116  003238  D692               	goto	l2272
 14117  00323A                     u17630:
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;lorawan.c: 1647: }
 14121                           ;lorawan.c: 1648: }
 14122                           ;lorawan.c: 1649: return ptr;
 14123                           
 14124                           ; BSR set to: 0
 14125                           
 14126                           ; BSR set to: 0
 14127  00323A  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 14128  00323E  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 14129  003242  0012               	return	
 14130  003244                     __end_of_MacExecuteCommands:
 14131                           	opt stack 0
 14132                           tosu	equ	0xFFF
 14133                           tosh	equ	0xFFE
 14134                           tosl	equ	0xFFD
 14135                           pclath	equ	0xFFA
 14136                           tblptru	equ	0xFF8
 14137                           tblptrh	equ	0xFF7
 14138                           tblptrl	equ	0xFF6
 14139                           tablat	equ	0xFF5
 14140                           prodh	equ	0xFF4
 14141                           prodl	equ	0xFF3
 14142                           intcon	equ	0xFF2
 14143                           intcon2	equ	0xFF1
 14144                           intcon3	equ	0xFF0
 14145                           indf0	equ	0xFEF
 14146                           postinc0	equ	0xFEE
 14147                           fsr0h	equ	0xFEA
 14148                           fsr0l	equ	0xFE9
 14149                           wreg	equ	0xFE8
 14150                           postinc1	equ	0xFE6
 14151                           postdec1	equ	0xFE5
 14152                           plusw1	equ	0xFE3
 14153                           fsr1h	equ	0xFE2
 14154                           fsr1l	equ	0xFE1
 14155                           indf2	equ	0xFDF
 14156                           postinc2	equ	0xFDE
 14157                           postdec2	equ	0xFDD
 14158                           fsr2h	equ	0xFDA
 14159                           fsr2l	equ	0xFD9
 14160                           status	equ	0xFD8
 14161                           
 14162 ;; *************** function _ExecuteRxTimingSetup *****************
 14163 ;; Defined at:
 14164 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 14167 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;  delay           1    9[BANK0 ] unsigned char 
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  2    7[BANK0 ] PTR unsigned char 
 14172 ;; Registers used:
 14173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14183 ;;Total ram usage:        3 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:    9
 14186 ;; This function calls:
 14187 ;;		_UpdateReceiveDelays
 14188 ;; This function is called by:
 14189 ;;		_MacExecuteCommands
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text63
 14194  008744                     __ptext63:
 14195                           	opt stack 0
 14196  008744                     _ExecuteRxTimingSetup:
 14197                           	opt stack 16
 14198                           
 14199                           ;lorawan.c: 1661: uint8_t delay;
 14200                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;incstack = 0
 14204  008744  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 14205  008748  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 14206  00874C  50DF               	movf	indf2,w,c
 14207  00874E  0B0F               	andlw	15
 14208  008750  0100               	movlb	0	; () banked
 14209  008752  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;lorawan.c: 1664: ptr++;
 14213  008754  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 14214  008756  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 14218  008758  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 14219  00875A  EC0A  F041         	call	_UpdateReceiveDelays
 14220                           
 14221                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 14222  00875E  0102               	movlb	2	; () banked
 14223  008760  8104               	bsf	(_loRa+4)& (0+255),0,b
 14224                           
 14225                           ; BSR set to: 2
 14226                           ;lorawan.c: 1669: return ptr;
 14227  008762  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 14228  008766  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 14229  00876A  0012               	return	
 14230  00876C                     __end_of_ExecuteRxTimingSetup:
 14231                           	opt stack 0
 14232                           tosu	equ	0xFFF
 14233                           tosh	equ	0xFFE
 14234                           tosl	equ	0xFFD
 14235                           pclath	equ	0xFFA
 14236                           tblptru	equ	0xFF8
 14237                           tblptrh	equ	0xFF7
 14238                           tblptrl	equ	0xFF6
 14239                           tablat	equ	0xFF5
 14240                           prodh	equ	0xFF4
 14241                           prodl	equ	0xFF3
 14242                           intcon	equ	0xFF2
 14243                           intcon2	equ	0xFF1
 14244                           intcon3	equ	0xFF0
 14245                           indf0	equ	0xFEF
 14246                           postinc0	equ	0xFEE
 14247                           fsr0h	equ	0xFEA
 14248                           fsr0l	equ	0xFE9
 14249                           wreg	equ	0xFE8
 14250                           postinc1	equ	0xFE6
 14251                           postdec1	equ	0xFE5
 14252                           plusw1	equ	0xFE3
 14253                           fsr1h	equ	0xFE2
 14254                           fsr1l	equ	0xFE1
 14255                           indf2	equ	0xFDF
 14256                           postinc2	equ	0xFDE
 14257                           postdec2	equ	0xFDD
 14258                           fsr2h	equ	0xFDA
 14259                           fsr2l	equ	0xFD9
 14260                           status	equ	0xFD8
 14261                           
 14262 ;; *************** function _UpdateReceiveDelays *****************
 14263 ;; Defined at:
 14264 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14265 ;; Parameters:    Size  Location     Type
 14266 ;;  delay           1    wreg     unsigned char 
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;  delay           1    6[BANK0 ] unsigned char 
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1    wreg      void 
 14271 ;; Registers used:
 14272 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;Total ram usage:        1 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:    8
 14285 ;; This function calls:
 14286 ;;		___wmul
 14287 ;; This function is called by:
 14288 ;;		_LORAWAN_RxDone
 14289 ;;		_ExecuteRxTimingSetup
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text64
 14294  008214                     __ptext64:
 14295                           	opt stack 0
 14296  008214                     _UpdateReceiveDelays:
 14297                           	opt stack 18
 14298                           
 14299                           ; BSR set to: 2
 14300                           ;incstack = 0
 14301                           ;UpdateReceiveDelays@delay stored from wreg
 14302  008214  0100               	movlb	0	; () banked
 14303  008216  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 14304                           
 14305                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 14306  008218  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 14307  00821C  0100               	movlb	0	; () banked
 14308  00821E  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 14309  008220  0E03               	movlw	3
 14310  008222  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14311  008224  0EE8               	movlw	232
 14312  008226  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14313  008228  ECB6  F043         	call	___wmul	;wreg free
 14314  00822C  C060  F294         	movff	?___wmul,_loRa+148
 14315  008230  C061  F295         	movff	?___wmul+1,_loRa+149
 14316                           
 14317                           ;lorawan.c: 2029: if (delay == 0)
 14318  008234  0100               	movlb	0	; () banked
 14319  008236  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14320  008238  A4D8               	btfss	status,2,c
 14321  00823A  D005               	goto	l2382
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;lorawan.c: 2030: {
 14325                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 14326  00823C  0E03               	movlw	3
 14327  00823E  0102               	movlb	2	; () banked
 14328  008240  6F95               	movwf	(_loRa+149)& (0+255),b
 14329  008242  0EE8               	movlw	232
 14330  008244  6F94               	movwf	(_loRa+148)& (0+255),b
 14331  008246                     l2382:
 14332                           
 14333                           ;lorawan.c: 2032: }
 14334                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 14335                           
 14336                           ; BSR set to: 2
 14337  008246  0EE8               	movlw	232
 14338  008248  0102               	movlb	2	; () banked
 14339  00824A  2594               	addwf	(_loRa+148)& (0+255),w,b
 14340  00824C  6F96               	movwf	(_loRa+150)& (0+255),b
 14341  00824E  0E03               	movlw	3
 14342  008250  2195               	addwfc	(_loRa+149)& (0+255),w,b
 14343  008252  6F97               	movwf	(_loRa+151)& (0+255),b
 14344                           
 14345                           ; BSR set to: 2
 14346  008254  0012               	return		;funcret
 14347  008256                     __end_of_UpdateReceiveDelays:
 14348                           	opt stack 0
 14349                           tosu	equ	0xFFF
 14350                           tosh	equ	0xFFE
 14351                           tosl	equ	0xFFD
 14352                           pclath	equ	0xFFA
 14353                           tblptru	equ	0xFF8
 14354                           tblptrh	equ	0xFF7
 14355                           tblptrl	equ	0xFF6
 14356                           tablat	equ	0xFF5
 14357                           prodh	equ	0xFF4
 14358                           prodl	equ	0xFF3
 14359                           intcon	equ	0xFF2
 14360                           intcon2	equ	0xFF1
 14361                           intcon3	equ	0xFF0
 14362                           indf0	equ	0xFEF
 14363                           postinc0	equ	0xFEE
 14364                           fsr0h	equ	0xFEA
 14365                           fsr0l	equ	0xFE9
 14366                           wreg	equ	0xFE8
 14367                           postinc1	equ	0xFE6
 14368                           postdec1	equ	0xFE5
 14369                           plusw1	equ	0xFE3
 14370                           fsr1h	equ	0xFE2
 14371                           fsr1l	equ	0xFE1
 14372                           indf2	equ	0xFDF
 14373                           postinc2	equ	0xFDE
 14374                           postdec2	equ	0xFDD
 14375                           fsr2h	equ	0xFDA
 14376                           fsr2l	equ	0xFD9
 14377                           status	equ	0xFD8
 14378                           
 14379 ;; *************** function ___wmul *****************
 14380 ;; Defined at:
 14381 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14384 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;  product         2    4[BANK0 ] unsigned int 
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  2    0[BANK0 ] unsigned int 
 14389 ;; Registers used:
 14390 ;;		wreg, status,2, status,0, prodl, prodh
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14396 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;Total ram usage:        6 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; Hardware stack levels required when called:    7
 14403 ;; This function calls:
 14404 ;;		Nothing
 14405 ;; This function is called by:
 14406 ;;		_UpdateCfList
 14407 ;;		_UpdateReceiveDelays
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text65
 14412  00876C                     __ptext65:
 14413                           	opt stack 0
 14414  00876C                     ___wmul:
 14415                           	opt stack 18
 14416                           
 14417                           ; BSR set to: 2
 14418                           ;incstack = 0
 14419  00876C  0100               	movlb	0	; () banked
 14420  00876E  5160               	movf	___wmul@multiplier& (0+255),w,b
 14421  008770  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14422  008772  CFF3 F064          	movff	prodl,___wmul@product
 14423  008776  CFF4 F065          	movff	prodh,___wmul@product+1
 14424  00877A  5160               	movf	___wmul@multiplier& (0+255),w,b
 14425  00877C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14426  00877E  50F3               	movf	prodl,w,c
 14427  008780  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14428  008782  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14429  008784  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14430  008786  50F3               	movf	prodl,w,c
 14431  008788  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14432                           
 14433                           ; BSR set to: 0
 14434  00878A  C064  F060         	movff	___wmul@product,?___wmul
 14435  00878E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 14436  008792  0012               	return	
 14437  008794                     __end_of___wmul:
 14438                           	opt stack 0
 14439                           tosu	equ	0xFFF
 14440                           tosh	equ	0xFFE
 14441                           tosl	equ	0xFFD
 14442                           pclath	equ	0xFFA
 14443                           tblptru	equ	0xFF8
 14444                           tblptrh	equ	0xFF7
 14445                           tblptrl	equ	0xFF6
 14446                           tablat	equ	0xFF5
 14447                           prodh	equ	0xFF4
 14448                           prodl	equ	0xFF3
 14449                           intcon	equ	0xFF2
 14450                           intcon2	equ	0xFF1
 14451                           intcon3	equ	0xFF0
 14452                           indf0	equ	0xFEF
 14453                           postinc0	equ	0xFEE
 14454                           fsr0h	equ	0xFEA
 14455                           fsr0l	equ	0xFE9
 14456                           wreg	equ	0xFE8
 14457                           postinc1	equ	0xFE6
 14458                           postdec1	equ	0xFE5
 14459                           plusw1	equ	0xFE3
 14460                           fsr1h	equ	0xFE2
 14461                           fsr1l	equ	0xFE1
 14462                           indf2	equ	0xFDF
 14463                           postinc2	equ	0xFDE
 14464                           postdec2	equ	0xFDD
 14465                           fsr2h	equ	0xFDA
 14466                           fsr2l	equ	0xFD9
 14467                           status	equ	0xFD8
 14468                           
 14469 ;; *************** function _ExecuteRxParamSetupReq *****************
 14470 ;; Defined at:
 14471 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14474 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  frequency       4   74[BANK0 ] unsigned long 
 14477 ;;  dlSettings      1   78[BANK0 ] struct .
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  2   70[BANK0 ] PTR unsigned char 
 14480 ;; Registers used:
 14481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;Total ram usage:        9 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:    8
 14494 ;; This function calls:
 14495 ;;		_UpdateReceiveWindow2Parameters
 14496 ;;		_ValidateDataRate
 14497 ;;		_ValidateFrequency
 14498 ;;		_ValidateRxOffset
 14499 ;;		___lmul
 14500 ;; This function is called by:
 14501 ;;		_MacExecuteCommands
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text66
 14506  003E88                     __ptext66:
 14507                           	opt stack 0
 14508  003E88                     _ExecuteRxParamSetupReq:
 14509                           	opt stack 17
 14510                           
 14511                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 14512                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;incstack = 0
 14516  003E88  0E00               	movlw	0
 14517  003E8A  0100               	movlb	0	; () banked
 14518  003E8C  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14519  003E8E  0E00               	movlw	0
 14520  003E90  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14521  003E92  0E00               	movlw	0
 14522  003E94  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14523  003E96  0E00               	movlw	0
 14524  003E98  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14525                           
 14526                           ; BSR set to: 0
 14527                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14528  003E9A  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14529  003E9E  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14530  003EA2  50DF               	movf	indf2,w,c
 14531  003EA4  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14532                           
 14533                           ; BSR set to: 0
 14534  003EA6  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14535  003EA8  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14539  003EAA  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14540  003EAE  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14541  003EB2  0EFF               	movlw	255
 14542  003EB4  14DE               	andwf	postinc2,w,c
 14543  003EB6  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14544  003EB8  0EFF               	movlw	255
 14545  003EBA  14DE               	andwf	postinc2,w,c
 14546  003EBC  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14547  003EBE  0EFF               	movlw	255
 14548  003EC0  14DE               	andwf	postinc2,w,c
 14549  003EC2  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14550  003EC4  0E00               	movlw	0
 14551  003EC6  14DE               	andwf	postinc2,w,c
 14552  003EC8  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14556  003ECA  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14557  003ECE  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14558  003ED2  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14559  003ED6  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14560  003EDA  0E64               	movlw	100
 14561  003EDC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 14562  003EDE  0E00               	movlw	0
 14563  003EE0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14564  003EE2  0E00               	movlw	0
 14565  003EE4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14566  003EE6  0E00               	movlw	0
 14567  003EE8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14568  003EEA  EC38  F03E         	call	___lmul	;wreg free
 14569  003EEE  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14570  003EF2  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14571  003EF6  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14572  003EFA  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14573                           
 14574                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14575  003EFE  0E03               	movlw	3
 14576  003F00  0100               	movlb	0	; () banked
 14577  003F02  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 14578  003F04  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 14579  003F06  0E00               	movlw	0
 14580  003F08  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 14581  003F0A  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 14582                           
 14583                           ; BSR set to: 0
 14584                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14585  003F0C  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14586  003F10  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14587  003F14  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14588  003F18  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14589  003F1C  EC2C  F03C         	call	_ValidateFrequency	;wreg free
 14590  003F20  0900               	iorlw	0
 14591  003F22  A4D8               	btfss	status,2,c
 14592  003F24  D018               	goto	l1179
 14593                           
 14594                           ;lorawan_eu.c: 754: {
 14595                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14596  003F26  0102               	movlb	2	; () banked
 14597  003F28  51A7               	movf	(_loRa+167)& (0+255),w,b
 14598  003F2A  0D02               	mullw	2
 14599  003F2C  0E00               	movlw	low _loRa
 14600  003F2E  0100               	movlb	0	; () banked
 14601  003F30  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14602  003F32  0E02               	movlw	high _loRa
 14603  003F34  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14604  003F36  0EA8               	movlw	168
 14605  003F38  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14606  003F3A  0E00               	movlw	0
 14607  003F3C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14608  003F3E  50F3               	movf	prodl,w,c
 14609  003F40  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14610  003F42  50F4               	movf	prodh,w,c
 14611  003F44  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14612  003F46  0E01               	movlw	1
 14613  003F48  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14614  003F4A  6ED9               	movwf	fsr2l,c
 14615  003F4C  0E00               	movlw	0
 14616  003F4E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14617  003F50  6EDA               	movwf	fsr2h,c
 14618  003F52  0102               	movlb	2	; () banked
 14619  003F54  86DF               	bsf	indf2,3,c
 14620  003F56                     l1179:
 14621                           
 14622                           ;lorawan_eu.c: 756: }
 14623                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14624                           
 14625                           ; BSR set to: 2
 14626  003F56  0100               	movlb	0	; () banked
 14627  003F58  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14628  003F5A  0B0F               	andlw	15
 14629  003F5C  EC56  F045         	call	_ValidateDataRate
 14630  003F60  0900               	iorlw	0
 14631  003F62  A4D8               	btfss	status,2,c
 14632  003F64  D018               	goto	l1180
 14633                           
 14634                           ;lorawan_eu.c: 759: {
 14635                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14636  003F66  0102               	movlb	2	; () banked
 14637  003F68  51A7               	movf	(_loRa+167)& (0+255),w,b
 14638  003F6A  0D02               	mullw	2
 14639  003F6C  0E00               	movlw	low _loRa
 14640  003F6E  0100               	movlb	0	; () banked
 14641  003F70  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14642  003F72  0E02               	movlw	high _loRa
 14643  003F74  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14644  003F76  0EA8               	movlw	168
 14645  003F78  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14646  003F7A  0E00               	movlw	0
 14647  003F7C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14648  003F7E  50F3               	movf	prodl,w,c
 14649  003F80  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14650  003F82  50F4               	movf	prodh,w,c
 14651  003F84  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14652  003F86  0E01               	movlw	1
 14653  003F88  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14654  003F8A  6ED9               	movwf	fsr2l,c
 14655  003F8C  0E00               	movlw	0
 14656  003F8E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14657  003F90  6EDA               	movwf	fsr2h,c
 14658  003F92  0102               	movlb	2	; () banked
 14659  003F94  88DF               	bsf	indf2,4,c
 14660  003F96                     l1180:
 14661                           
 14662                           ;lorawan_eu.c: 761: }
 14663                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14664                           
 14665                           ; BSR set to: 2
 14666  003F96  0100               	movlb	0	; () banked
 14667  003F98  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14668  003F9A  0B07               	andlw	7
 14669  003F9C  EC4A  F045         	call	_ValidateRxOffset
 14670  003FA0  0900               	iorlw	0
 14671  003FA2  A4D8               	btfss	status,2,c
 14672  003FA4  D018               	goto	l1181
 14673                           
 14674                           ;lorawan_eu.c: 764: {
 14675                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14676  003FA6  0102               	movlb	2	; () banked
 14677  003FA8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14678  003FAA  0D02               	mullw	2
 14679  003FAC  0E00               	movlw	low _loRa
 14680  003FAE  0100               	movlb	0	; () banked
 14681  003FB0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14682  003FB2  0E02               	movlw	high _loRa
 14683  003FB4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14684  003FB6  0EA8               	movlw	168
 14685  003FB8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14686  003FBA  0E00               	movlw	0
 14687  003FBC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14688  003FBE  50F3               	movf	prodl,w,c
 14689  003FC0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14690  003FC2  50F4               	movf	prodh,w,c
 14691  003FC4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14692  003FC6  0E01               	movlw	1
 14693  003FC8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14694  003FCA  6ED9               	movwf	fsr2l,c
 14695  003FCC  0E00               	movlw	0
 14696  003FCE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14697  003FD0  6EDA               	movwf	fsr2h,c
 14698  003FD2  0102               	movlb	2	; () banked
 14699  003FD4  8ADF               	bsf	indf2,5,c
 14700  003FD6                     l1181:
 14701                           
 14702                           ;lorawan_eu.c: 766: }
 14703                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14704  003FD6  0102               	movlb	2	; () banked
 14705  003FD8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14706  003FDA  0D02               	mullw	2
 14707  003FDC  0E00               	movlw	low _loRa
 14708  003FDE  0100               	movlb	0	; () banked
 14709  003FE0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14710  003FE2  0E02               	movlw	high _loRa
 14711  003FE4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14712  003FE6  0EA8               	movlw	168
 14713  003FE8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14714  003FEA  0E00               	movlw	0
 14715  003FEC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14716  003FEE  50F3               	movf	prodl,w,c
 14717  003FF0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14718  003FF2  50F4               	movf	prodh,w,c
 14719  003FF4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14720  003FF6  0E01               	movlw	1
 14721  003FF8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14722  003FFA  6ED9               	movwf	fsr2l,c
 14723  003FFC  0E00               	movlw	0
 14724  003FFE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14725  004000  6EDA               	movwf	fsr2h,c
 14726  004002  0102               	movlb	2	; () banked
 14727  004004  A8DF               	btfss	indf2,4,c
 14728  004006  D045               	goto	l1182
 14729                           
 14730                           ; BSR set to: 2
 14731  004008  51A7               	movf	(_loRa+167)& (0+255),w,b
 14732  00400A  0D02               	mullw	2
 14733  00400C  0E00               	movlw	low _loRa
 14734  00400E  0100               	movlb	0	; () banked
 14735  004010  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14736  004012  0E02               	movlw	high _loRa
 14737  004014  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14738  004016  0EA8               	movlw	168
 14739  004018  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14740  00401A  0E00               	movlw	0
 14741  00401C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14742  00401E  50F3               	movf	prodl,w,c
 14743  004020  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14744  004022  50F4               	movf	prodh,w,c
 14745  004024  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14746  004026  0E01               	movlw	1
 14747  004028  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14748  00402A  6ED9               	movwf	fsr2l,c
 14749  00402C  0E00               	movlw	0
 14750  00402E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14751  004030  6EDA               	movwf	fsr2h,c
 14752  004032  0102               	movlb	2	; () banked
 14753  004034  A6DF               	btfss	indf2,3,c
 14754  004036  D02D               	goto	l1182
 14755                           
 14756                           ; BSR set to: 2
 14757  004038  51A7               	movf	(_loRa+167)& (0+255),w,b
 14758  00403A  0D02               	mullw	2
 14759  00403C  0E00               	movlw	low _loRa
 14760  00403E  0100               	movlb	0	; () banked
 14761  004040  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14762  004042  0E02               	movlw	high _loRa
 14763  004044  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14764  004046  0EA8               	movlw	168
 14765  004048  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14766  00404A  0E00               	movlw	0
 14767  00404C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14768  00404E  50F3               	movf	prodl,w,c
 14769  004050  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14770  004052  50F4               	movf	prodh,w,c
 14771  004054  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14772  004056  0E01               	movlw	1
 14773  004058  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14774  00405A  6ED9               	movwf	fsr2l,c
 14775  00405C  0E00               	movlw	0
 14776  00405E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14777  004060  6EDA               	movwf	fsr2h,c
 14778  004062  0102               	movlb	2	; () banked
 14779  004064  AADF               	btfss	indf2,5,c
 14780  004066  D015               	goto	l1182
 14781                           
 14782                           ; BSR set to: 2
 14783                           ;lorawan_eu.c: 769: {
 14784                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14785  004068  0100               	movlb	0	; () banked
 14786  00406A  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14787  00406C  0B07               	andlw	7
 14788  00406E  0102               	movlb	2	; () banked
 14789  004070  6FEF               	movwf	(_loRa+239)& (0+255),b
 14790                           
 14791                           ; BSR set to: 2
 14792                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14793  004072  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14794  004076  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14795  00407A  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14796  00407E  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14797  004082  0100               	movlb	0	; () banked
 14798  004084  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14799  004086  0B0F               	andlw	15
 14800  004088  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14801  00408A  EC62  F045         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14802                           
 14803                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14804  00408E  0102               	movlb	2	; () banked
 14805  004090  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14806  004092                     l1182:
 14807                           
 14808                           ; BSR set to: 2
 14809                           ;lorawan_eu.c: 773: }
 14810                           ;lorawan_eu.c: 775: return ptr;
 14811                           
 14812                           ; BSR set to: 2
 14813  004092  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14814  004096  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14815  00409A  0012               	return	
 14816  00409C                     __end_of_ExecuteRxParamSetupReq:
 14817                           	opt stack 0
 14818                           tosu	equ	0xFFF
 14819                           tosh	equ	0xFFE
 14820                           tosl	equ	0xFFD
 14821                           pclath	equ	0xFFA
 14822                           tblptru	equ	0xFF8
 14823                           tblptrh	equ	0xFF7
 14824                           tblptrl	equ	0xFF6
 14825                           tablat	equ	0xFF5
 14826                           prodh	equ	0xFF4
 14827                           prodl	equ	0xFF3
 14828                           intcon	equ	0xFF2
 14829                           intcon2	equ	0xFF1
 14830                           intcon3	equ	0xFF0
 14831                           indf0	equ	0xFEF
 14832                           postinc0	equ	0xFEE
 14833                           fsr0h	equ	0xFEA
 14834                           fsr0l	equ	0xFE9
 14835                           wreg	equ	0xFE8
 14836                           postinc1	equ	0xFE6
 14837                           postdec1	equ	0xFE5
 14838                           plusw1	equ	0xFE3
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           postdec2	equ	0xFDD
 14844                           fsr2h	equ	0xFDA
 14845                           fsr2l	equ	0xFD9
 14846                           status	equ	0xFD8
 14847                           
 14848 ;; *************** function _ValidateRxOffset *****************
 14849 ;; Defined at:
 14850 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14851 ;; Parameters:    Size  Location     Type
 14852 ;;  rxOffset        1    wreg     unsigned char 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 14855 ;;  result          1    1[BANK0 ] enum E7249
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      enum E7249
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, status,0
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;Total ram usage:        2 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    7
 14872 ;; This function calls:
 14873 ;;		Nothing
 14874 ;; This function is called by:
 14875 ;;		_ExecuteRxParamSetupReq
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text67
 14880  008A94                     __ptext67:
 14881                           	opt stack 0
 14882  008A94                     _ValidateRxOffset:
 14883                           	opt stack 17
 14884                           
 14885                           ; BSR set to: 2
 14886                           ;incstack = 0
 14887                           ;ValidateRxOffset@rxOffset stored from wreg
 14888  008A94  0100               	movlb	0	; () banked
 14889  008A96  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14890                           
 14891                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14892  008A98  0E00               	movlw	0
 14893  008A9A  0100               	movlb	0	; () banked
 14894  008A9C  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14898  008A9E  0E05               	movlw	5
 14899  008AA0  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14900  008AA2  D002               	goto	l1277
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;lorawan_eu.c: 1081: {
 14904                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14905  008AA4  0E03               	movlw	3
 14906  008AA6  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14907  008AA8                     l1277:
 14908                           
 14909                           ; BSR set to: 0
 14910                           ;lorawan_eu.c: 1083: }
 14911                           ;lorawan_eu.c: 1085: return result;
 14912  008AA8  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 14913  008AAA  0012               	return	
 14914  008AAC                     __end_of_ValidateRxOffset:
 14915                           	opt stack 0
 14916                           tosu	equ	0xFFF
 14917                           tosh	equ	0xFFE
 14918                           tosl	equ	0xFFD
 14919                           pclath	equ	0xFFA
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           intcon2	equ	0xFF1
 14928                           intcon3	equ	0xFF0
 14929                           indf0	equ	0xFEF
 14930                           postinc0	equ	0xFEE
 14931                           fsr0h	equ	0xFEA
 14932                           fsr0l	equ	0xFE9
 14933                           wreg	equ	0xFE8
 14934                           postinc1	equ	0xFE6
 14935                           postdec1	equ	0xFE5
 14936                           plusw1	equ	0xFE3
 14937                           fsr1h	equ	0xFE2
 14938                           fsr1l	equ	0xFE1
 14939                           indf2	equ	0xFDF
 14940                           postinc2	equ	0xFDE
 14941                           postdec2	equ	0xFDD
 14942                           fsr2h	equ	0xFDA
 14943                           fsr2l	equ	0xFD9
 14944                           status	equ	0xFD8
 14945                           
 14946 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14947 ;; Defined at:
 14948 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;  frequency       4    0[BANK0 ] unsigned long 
 14951 ;;  dataRate        1    4[BANK0 ] unsigned char 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;		None
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  1    wreg      void 
 14956 ;; Registers used:
 14957 ;;		None
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14963 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14966 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;Total ram usage:        5 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    7
 14970 ;; This function calls:
 14971 ;;		Nothing
 14972 ;; This function is called by:
 14973 ;;		_ExecuteRxParamSetupReq
 14974 ;;		_LORAWAN_SetReceiveWindow2Parameters
 14975 ;; This function uses a non-reentrant model
 14976 ;;
 14977                           
 14978                           	psect	text68
 14979  008AC4                     __ptext68:
 14980                           	opt stack 0
 14981  008AC4                     _UpdateReceiveWindow2Parameters:
 14982                           	opt stack 17
 14983                           
 14984                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;incstack = 0
 14988  008AC4  C064  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14989                           
 14990                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14991  008AC8  C060  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14992  008ACC  C061  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14993  008AD0  C062  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14994  008AD4  C063  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14995  008AD8  0012               	return		;funcret
 14996  008ADA                     __end_of_UpdateReceiveWindow2Parameters:
 14997                           	opt stack 0
 14998                           tosu	equ	0xFFF
 14999                           tosh	equ	0xFFE
 15000                           tosl	equ	0xFFD
 15001                           pclath	equ	0xFFA
 15002                           tblptru	equ	0xFF8
 15003                           tblptrh	equ	0xFF7
 15004                           tblptrl	equ	0xFF6
 15005                           tablat	equ	0xFF5
 15006                           prodh	equ	0xFF4
 15007                           prodl	equ	0xFF3
 15008                           intcon	equ	0xFF2
 15009                           intcon2	equ	0xFF1
 15010                           intcon3	equ	0xFF0
 15011                           indf0	equ	0xFEF
 15012                           postinc0	equ	0xFEE
 15013                           fsr0h	equ	0xFEA
 15014                           fsr0l	equ	0xFE9
 15015                           wreg	equ	0xFE8
 15016                           postinc1	equ	0xFE6
 15017                           postdec1	equ	0xFE5
 15018                           plusw1	equ	0xFE3
 15019                           fsr1h	equ	0xFE2
 15020                           fsr1l	equ	0xFE1
 15021                           indf2	equ	0xFDF
 15022                           postinc2	equ	0xFDE
 15023                           postdec2	equ	0xFDD
 15024                           fsr2h	equ	0xFDA
 15025                           fsr2l	equ	0xFD9
 15026                           status	equ	0xFD8
 15027                           
 15028 ;; *************** function _ExecuteNewChannel *****************
 15029 ;; Defined at:
 15030 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 15033 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;  frequency       4   75[BANK0 ] unsigned long 
 15036 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 15037 ;;  drRange         1   74[BANK0 ] struct .
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  2   70[BANK0 ] PTR unsigned char 
 15040 ;; Registers used:
 15041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;Total ram usage:       10 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    9
 15054 ;; This function calls:
 15055 ;;		_LORAWAN_SetChannelIdStatus
 15056 ;;		_UpdateChannelIdStatus
 15057 ;;		_UpdateDataRange
 15058 ;;		_UpdateDutyCycle
 15059 ;;		_UpdateFrequency
 15060 ;;		_ValidateChannelId
 15061 ;;		_ValidateDataRange
 15062 ;;		_ValidateFrequency
 15063 ;;		___lmul
 15064 ;; This function is called by:
 15065 ;;		_MacExecuteCommands
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text69
 15070  0037B0                     __ptext69:
 15071                           	opt stack 0
 15072  0037B0                     _ExecuteNewChannel:
 15073                           	opt stack 16
 15074                           
 15075                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 15076                           ;lorawan_eu.c: 680: DataRange_t drRange;
 15077                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 15078                           
 15079                           ;incstack = 0
 15080  0037B0  0E00               	movlw	0
 15081  0037B2  0100               	movlb	0	; () banked
 15082  0037B4  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15083  0037B6  0E00               	movlw	0
 15084  0037B8  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15085  0037BA  0E00               	movlw	0
 15086  0037BC  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15087  0037BE  0E00               	movlw	0
 15088  0037C0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 15092  0037C2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15093  0037C6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15094  0037CA  50DF               	movf	indf2,w,c
 15095  0037CC  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15096                           
 15097                           ; BSR set to: 0
 15098  0037CE  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15099  0037D0  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15100                           
 15101                           ; BSR set to: 0
 15102                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15103  0037D2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15104  0037D6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15105  0037DA  0EFF               	movlw	255
 15106  0037DC  14DE               	andwf	postinc2,w,c
 15107  0037DE  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15108  0037E0  0EFF               	movlw	255
 15109  0037E2  14DE               	andwf	postinc2,w,c
 15110  0037E4  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15111  0037E6  0EFF               	movlw	255
 15112  0037E8  14DE               	andwf	postinc2,w,c
 15113  0037EA  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15114  0037EC  0E00               	movlw	0
 15115  0037EE  14DE               	andwf	postinc2,w,c
 15116  0037F0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 15120  0037F2  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 15121  0037F6  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 15122  0037FA  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 15123  0037FE  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 15124  003802  0E64               	movlw	100
 15125  003804  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 15126  003806  0E00               	movlw	0
 15127  003808  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15128  00380A  0E00               	movlw	0
 15129  00380C  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15130  00380E  0E00               	movlw	0
 15131  003810  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15132  003812  EC38  F03E         	call	___lmul	;wreg free
 15133  003816  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 15134  00381A  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 15135  00381E  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 15136  003822  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 15137                           
 15138                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 15139  003826  0E03               	movlw	3
 15140  003828  0100               	movlb	0	; () banked
 15141  00382A  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 15142  00382C  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 15143  00382E  0E00               	movlw	0
 15144  003830  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 15145  003832  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 15149  003834  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15150  003838  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15151  00383C  50DF               	movf	indf2,w,c
 15152  00383E  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 15153                           
 15154                           ; BSR set to: 0
 15155  003840  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15156  003842  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 15160  003844  0E00               	movlw	0
 15161  003846  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15162  003848  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15163  00384A  EC05  F044         	call	_ValidateChannelId
 15164  00384E  0900               	iorlw	0
 15165  003850  A4D8               	btfss	status,2,c
 15166  003852  D04B               	goto	l1168
 15167                           
 15168                           ;lorawan_eu.c: 692: {
 15169                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 15170  003854  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 15171  003858  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 15172  00385C  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 15173  003860  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 15174  003864  EC2C  F03C         	call	_ValidateFrequency	;wreg free
 15175  003868  0900               	iorlw	0
 15176  00386A  B4D8               	btfsc	status,2,c
 15177  00386C  D007               	goto	u16720
 15178  00386E  0100               	movlb	0	; () banked
 15179  003870  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15180  003872  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15181  003874  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15182  003876  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15183  003878  A4D8               	btfss	status,2,c
 15184  00387A  D018               	goto	l1165
 15185  00387C                     u16720:
 15186                           
 15187                           ;lorawan_eu.c: 694: {
 15188                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 15189                           
 15190                           ; BSR set to: 0
 15191  00387C  0102               	movlb	2	; () banked
 15192  00387E  51A7               	movf	(_loRa+167)& (0+255),w,b
 15193  003880  0D02               	mullw	2
 15194  003882  0E00               	movlw	low _loRa
 15195  003884  0100               	movlb	0	; () banked
 15196  003886  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15197  003888  0E02               	movlw	high _loRa
 15198  00388A  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15199  00388C  0EA8               	movlw	168
 15200  00388E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15201  003890  0E00               	movlw	0
 15202  003892  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15203  003894  50F3               	movf	prodl,w,c
 15204  003896  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15205  003898  50F4               	movf	prodh,w,c
 15206  00389A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15207  00389C  0E01               	movlw	1
 15208  00389E  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15209  0038A0  6ED9               	movwf	fsr2l,c
 15210  0038A2  0E00               	movlw	0
 15211  0038A4  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15212  0038A6  6EDA               	movwf	fsr2h,c
 15213  0038A8  0102               	movlb	2	; () banked
 15214  0038AA  8EDF               	bsf	indf2,7,c
 15215  0038AC                     l1165:
 15216                           
 15217                           ;lorawan_eu.c: 696: }
 15218                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 15219                           
 15220                           ; BSR set to: 2
 15221  0038AC  0100               	movlb	0	; () banked
 15222  0038AE  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 15223  0038B0  ECF8  F03F         	call	_ValidateDataRange
 15224  0038B4  0900               	iorlw	0
 15225  0038B6  A4D8               	btfss	status,2,c
 15226  0038B8  D018               	goto	l1168
 15227                           
 15228                           ;lorawan_eu.c: 699: {
 15229                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 15230  0038BA  0102               	movlb	2	; () banked
 15231  0038BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15232  0038BE  0D02               	mullw	2
 15233  0038C0  0E00               	movlw	low _loRa
 15234  0038C2  0100               	movlb	0	; () banked
 15235  0038C4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15236  0038C6  0E02               	movlw	high _loRa
 15237  0038C8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15238  0038CA  0EA8               	movlw	168
 15239  0038CC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15240  0038CE  0E00               	movlw	0
 15241  0038D0  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15242  0038D2  50F3               	movf	prodl,w,c
 15243  0038D4  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15244  0038D6  50F4               	movf	prodh,w,c
 15245  0038D8  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15246  0038DA  0E01               	movlw	1
 15247  0038DC  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15248  0038DE  6ED9               	movwf	fsr2l,c
 15249  0038E0  0E00               	movlw	0
 15250  0038E2  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15251  0038E4  6EDA               	movwf	fsr2h,c
 15252  0038E6  0102               	movlb	2	; () banked
 15253  0038E8  8CDF               	bsf	indf2,6,c
 15254  0038EA                     l1168:
 15255                           
 15256                           ;lorawan_eu.c: 701: }
 15257                           ;lorawan_eu.c: 702: }
 15258                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 15259                           
 15260                           ; BSR set to: 2
 15261  0038EA  0102               	movlb	2	; () banked
 15262  0038EC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15263  0038EE  0D02               	mullw	2
 15264  0038F0  0E00               	movlw	low _loRa
 15265  0038F2  0100               	movlb	0	; () banked
 15266  0038F4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15267  0038F6  0E02               	movlw	high _loRa
 15268  0038F8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15269  0038FA  0EA8               	movlw	168
 15270  0038FC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15271  0038FE  0E00               	movlw	0
 15272  003900  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15273  003902  50F3               	movf	prodl,w,c
 15274  003904  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15275  003906  50F4               	movf	prodh,w,c
 15276  003908  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15277  00390A  0E01               	movlw	1
 15278  00390C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15279  00390E  6ED9               	movwf	fsr2l,c
 15280  003910  0E00               	movlw	0
 15281  003912  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15282  003914  6EDA               	movwf	fsr2h,c
 15283  003916  0102               	movlb	2	; () banked
 15284  003918  AEDF               	btfss	indf2,7,c
 15285  00391A  D07D               	goto	l1169
 15286                           
 15287                           ; BSR set to: 2
 15288  00391C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15289  00391E  0D02               	mullw	2
 15290  003920  0E00               	movlw	low _loRa
 15291  003922  0100               	movlb	0	; () banked
 15292  003924  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 15293  003926  0E02               	movlw	high _loRa
 15294  003928  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 15295  00392A  0EA8               	movlw	168
 15296  00392C  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15297  00392E  0E00               	movlw	0
 15298  003930  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15299  003932  50F3               	movf	prodl,w,c
 15300  003934  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 15301  003936  50F4               	movf	prodh,w,c
 15302  003938  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 15303  00393A  0E01               	movlw	1
 15304  00393C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 15305  00393E  6ED9               	movwf	fsr2l,c
 15306  003940  0E00               	movlw	0
 15307  003942  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 15308  003944  6EDA               	movwf	fsr2h,c
 15309  003946  0102               	movlb	2	; () banked
 15310  003948  ACDF               	btfss	indf2,6,c
 15311  00394A  D065               	goto	l1169
 15312                           
 15313                           ; BSR set to: 2
 15314                           ;lorawan_eu.c: 705: {
 15315                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 15316  00394C  0E10               	movlw	16
 15317  00394E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 15318  003950  D02E               	goto	l1170
 15319                           
 15320                           ; BSR set to: 2
 15321                           ;lorawan_eu.c: 707: {
 15322                           ;lorawan_eu.c: 708: if (frequency != 0)
 15323  003952  0100               	movlb	0	; () banked
 15324  003954  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15325  003956  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15326  003958  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15327  00395A  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15328  00395C  B4D8               	btfsc	status,2,c
 15329  00395E  D020               	goto	l1171
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;lorawan_eu.c: 709: {
 15333                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 15334  003960  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15335  003964  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15336  003968  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15337  00396C  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15338  003970  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15339  003972  EC3E  F040         	call	_UpdateFrequency
 15340                           
 15341                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 15342  003976  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15343  00397A  0100               	movlb	0	; () banked
 15344  00397C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15345  00397E  ECAC  F029         	call	_UpdateDataRange
 15346                           
 15347                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 15348  003982  0E01               	movlw	1
 15349  003984  0100               	movlb	0	; () banked
 15350  003986  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15351  003988  0E2E               	movlw	46
 15352  00398A  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15353  00398C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15354  00398E  EC60  F040         	call	_UpdateDutyCycle
 15355                           
 15356                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 15357  003992  0E01               	movlw	1
 15358  003994  0100               	movlb	0	; () banked
 15359  003996  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15360  003998  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15361  00399A  EC98  F027         	call	_UpdateChannelIdStatus
 15362                           
 15363                           ;lorawan_eu.c: 714: }
 15364  00399E  D039               	goto	l1175
 15365  0039A0                     l1171:
 15366                           
 15367                           ;lorawan_eu.c: 715: else
 15368                           ;lorawan_eu.c: 716: {
 15369                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 15370  0039A0  0E00               	movlw	0
 15371  0039A2  0100               	movlb	0	; () banked
 15372  0039A4  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15373  0039A6  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15374  0039A8  ECDE  F03D         	call	_LORAWAN_SetChannelIdStatus
 15375                           
 15376                           ;lorawan_eu.c: 718: }
 15377                           ;lorawan_eu.c: 719: }
 15378  0039AC  D032               	goto	l1175
 15379  0039AE                     l1170:
 15380                           
 15381                           ;lorawan_eu.c: 720: else
 15382                           ;lorawan_eu.c: 721: {
 15383                           ;lorawan_eu.c: 722: if (frequency != 0)
 15384  0039AE  0100               	movlb	0	; () banked
 15385  0039B0  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15386  0039B2  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15387  0039B4  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15388  0039B6  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15389  0039B8  B4D8               	btfsc	status,2,c
 15390  0039BA  D024               	goto	l1174
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;lorawan_eu.c: 723: {
 15394                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 15395  0039BC  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15396  0039C0  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15397  0039C4  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15398  0039C8  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15399  0039CC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15400  0039CE  0F10               	addlw	16
 15401  0039D0  EC3E  F040         	call	_UpdateFrequency
 15402                           
 15403                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 15404  0039D4  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15405  0039D8  0100               	movlb	0	; () banked
 15406  0039DA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15407  0039DC  0F10               	addlw	16
 15408  0039DE  ECAC  F029         	call	_UpdateDataRange
 15409                           
 15410                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 15411  0039E2  0E01               	movlw	1
 15412  0039E4  0100               	movlb	0	; () banked
 15413  0039E6  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15414  0039E8  0E2E               	movlw	46
 15415  0039EA  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15416  0039EC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15417  0039EE  0F10               	addlw	16
 15418  0039F0  EC60  F040         	call	_UpdateDutyCycle
 15419                           
 15420                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 15421  0039F4  0E01               	movlw	1
 15422  0039F6  0100               	movlb	0	; () banked
 15423  0039F8  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15424  0039FA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15425  0039FC  0F10               	addlw	16
 15426  0039FE  EC98  F027         	call	_UpdateChannelIdStatus
 15427                           
 15428                           ;lorawan_eu.c: 728: }
 15429  003A02  D007               	goto	l1175
 15430  003A04                     l1174:
 15431                           
 15432                           ;lorawan_eu.c: 729: else
 15433                           ;lorawan_eu.c: 730: {
 15434                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 15435  003A04  0E00               	movlw	0
 15436  003A06  0100               	movlb	0	; () banked
 15437  003A08  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15438  003A0A  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15439  003A0C  0F10               	addlw	16
 15440  003A0E  ECDE  F03D         	call	_LORAWAN_SetChannelIdStatus
 15441  003A12                     l1175:
 15442                           
 15443                           ;lorawan_eu.c: 732: }
 15444                           ;lorawan_eu.c: 733: }
 15445                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 15446  003A12  0102               	movlb	2	; () banked
 15447  003A14  8703               	bsf	(_loRa+3)& (0+255),3,b
 15448  003A16                     l1169:
 15449                           
 15450                           ; BSR set to: 2
 15451                           ;lorawan_eu.c: 736: }
 15452                           ;lorawan_eu.c: 737: return ptr;
 15453                           
 15454                           ; BSR set to: 2
 15455  003A16  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 15456  003A1A  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 15457  003A1E  0012               	return	
 15458  003A20                     __end_of_ExecuteNewChannel:
 15459                           	opt stack 0
 15460                           tosu	equ	0xFFF
 15461                           tosh	equ	0xFFE
 15462                           tosl	equ	0xFFD
 15463                           pclath	equ	0xFFA
 15464                           tblptru	equ	0xFF8
 15465                           tblptrh	equ	0xFF7
 15466                           tblptrl	equ	0xFF6
 15467                           tablat	equ	0xFF5
 15468                           prodh	equ	0xFF4
 15469                           prodl	equ	0xFF3
 15470                           intcon	equ	0xFF2
 15471                           intcon2	equ	0xFF1
 15472                           intcon3	equ	0xFF0
 15473                           indf0	equ	0xFEF
 15474                           postinc0	equ	0xFEE
 15475                           fsr0h	equ	0xFEA
 15476                           fsr0l	equ	0xFE9
 15477                           wreg	equ	0xFE8
 15478                           postinc1	equ	0xFE6
 15479                           postdec1	equ	0xFE5
 15480                           plusw1	equ	0xFE3
 15481                           fsr1h	equ	0xFE2
 15482                           fsr1l	equ	0xFE1
 15483                           indf2	equ	0xFDF
 15484                           postinc2	equ	0xFDE
 15485                           postdec2	equ	0xFDD
 15486                           fsr2h	equ	0xFDA
 15487                           fsr2l	equ	0xFD9
 15488                           status	equ	0xFD8
 15489                           
 15490 ;; *************** function _ValidateFrequency *****************
 15491 ;; Defined at:
 15492 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15493 ;; Parameters:    Size  Location     Type
 15494 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;  result          1    4[BANK0 ] enum E7249
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      enum E7249
 15499 ;; Registers used:
 15500 ;;		wreg, status,2, status,0
 15501 ;; Tracked objects:
 15502 ;;		On entry : 0/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15509 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15510 ;;Total ram usage:        5 bytes
 15511 ;; Hardware stack levels used:    1
 15512 ;; Hardware stack levels required when called:    7
 15513 ;; This function calls:
 15514 ;;		Nothing
 15515 ;; This function is called by:
 15516 ;;		_ExecuteNewChannel
 15517 ;;		_ExecuteRxParamSetupReq
 15518 ;;		_UpdateCfList
 15519 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15520 ;;		_LORAWAN_SetFrequency
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text70
 15525  007858                     __ptext70:
 15526                           	opt stack 0
 15527  007858                     _ValidateFrequency:
 15528                           	opt stack 18
 15529                           
 15530                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 15531                           
 15532                           ; BSR set to: 2
 15533                           ;incstack = 0
 15534  007858  0E00               	movlw	0
 15535  00785A  0100               	movlb	0	; () banked
 15536  00785C  6F64               	movwf	ValidateFrequency@result& (0+255),b
 15537                           
 15538                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 15539  00785E  0102               	movlb	2	; () banked
 15540  007860  51A4               	movf	(_loRa+164)& (0+255),w,b
 15541  007862  A4D8               	btfss	status,2,c
 15542  007864  D013               	goto	l1281
 15543                           
 15544                           ; BSR set to: 2
 15545                           ;lorawan_eu.c: 1093: {
 15546                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 15547  007866  0E81               	movlw	129
 15548  007868  0100               	movlb	0	; () banked
 15549  00786A  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15550  00786C  0E25               	movlw	37
 15551  00786E  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15552  007870  0EDB               	movlw	219
 15553  007872  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15554  007874  0E33               	movlw	51
 15555  007876  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15556  007878  B0D8               	btfsc	status,0,c
 15557  00787A  D01D               	goto	u15720
 15558                           
 15559                           ; BSR set to: 0
 15560  00787C  0EC0               	movlw	192
 15561  00787E  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15562  007880  0E55               	movlw	85
 15563  007882  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15564  007884  0E70               	movlw	112
 15565  007886  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15566  007888  0E33               	movlw	51
 15567  00788A  D012               	goto	L30
 15568  00788C                     l1281:
 15569                           
 15570                           ;lorawan_eu.c: 1099: else
 15571                           ;lorawan_eu.c: 1100: {
 15572                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 15573                           
 15574                           ; BSR set to: 0
 15575  00788C  0E71               	movlw	113
 15576  00788E  0100               	movlb	0	; () banked
 15577  007890  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15578  007892  0E5E               	movlw	94
 15579  007894  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15580  007896  0EEA               	movlw	234
 15581  007898  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15582  00789A  0E19               	movlw	25
 15583  00789C  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15584  00789E  B0D8               	btfsc	status,0,c
 15585  0078A0  D00A               	goto	u15720
 15586                           
 15587                           ; BSR set to: 0
 15588  0078A2  0E90               	movlw	144
 15589  0078A4  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15590  0078A6  0ED1               	movlw	209
 15591  0078A8  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15592  0078AA  0ECF               	movlw	207
 15593  0078AC  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15594  0078AE  0E19               	movlw	25
 15595  0078B0                     L30:
 15596  0078B0  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15597  0078B2  B0D8               	btfsc	status,0,c
 15598  0078B4  D002               	goto	l1286
 15599  0078B6                     u15720:
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;lorawan_eu.c: 1102: {
 15603                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 15604                           
 15605                           ; BSR set to: 0
 15606  0078B6  0E03               	movlw	3
 15607  0078B8  6F64               	movwf	ValidateFrequency@result& (0+255),b
 15608  0078BA                     l1286:
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;lorawan_eu.c: 1104: }
 15612                           ;lorawan_eu.c: 1105: }
 15613                           ;lorawan_eu.c: 1107: return result;
 15614                           
 15615                           ; BSR set to: 0
 15616  0078BA  5164               	movf	ValidateFrequency@result& (0+255),w,b
 15617  0078BC  0012               	return	
 15618  0078BE                     __end_of_ValidateFrequency:
 15619                           	opt stack 0
 15620                           tosu	equ	0xFFF
 15621                           tosh	equ	0xFFE
 15622                           tosl	equ	0xFFD
 15623                           pclath	equ	0xFFA
 15624                           tblptru	equ	0xFF8
 15625                           tblptrh	equ	0xFF7
 15626                           tblptrl	equ	0xFF6
 15627                           tablat	equ	0xFF5
 15628                           prodh	equ	0xFF4
 15629                           prodl	equ	0xFF3
 15630                           intcon	equ	0xFF2
 15631                           intcon2	equ	0xFF1
 15632                           intcon3	equ	0xFF0
 15633                           indf0	equ	0xFEF
 15634                           postinc0	equ	0xFEE
 15635                           fsr0h	equ	0xFEA
 15636                           fsr0l	equ	0xFE9
 15637                           wreg	equ	0xFE8
 15638                           postinc1	equ	0xFE6
 15639                           postdec1	equ	0xFE5
 15640                           plusw1	equ	0xFE3
 15641                           fsr1h	equ	0xFE2
 15642                           fsr1l	equ	0xFE1
 15643                           indf2	equ	0xFDF
 15644                           postinc2	equ	0xFDE
 15645                           postdec2	equ	0xFDD
 15646                           fsr2h	equ	0xFDA
 15647                           fsr2l	equ	0xFD9
 15648                           status	equ	0xFD8
 15649                           
 15650 ;; *************** function _ValidateDataRange *****************
 15651 ;; Defined at:
 15652 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15653 ;; Parameters:    Size  Location     Type
 15654 ;;  dataRangeNew    1    wreg     unsigned char 
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 15657 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 15658 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 15659 ;;  result          1    2[BANK0 ] enum E7249
 15660 ;; Return value:  Size  Location     Type
 15661 ;;                  1    wreg      enum E7249
 15662 ;; Registers used:
 15663 ;;		wreg, status,2, status,0, cstack
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15670 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15673 ;;Total ram usage:        4 bytes
 15674 ;; Hardware stack levels used:    1
 15675 ;; Hardware stack levels required when called:    8
 15676 ;; This function calls:
 15677 ;;		_ValidateDataRate
 15678 ;; This function is called by:
 15679 ;;		_ExecuteNewChannel
 15680 ;;		_LORAWAN_SetDataRange
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text71
 15685  007FF0                     __ptext71:
 15686                           	opt stack 0
 15687  007FF0                     _ValidateDataRange:
 15688                           	opt stack 16
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;incstack = 0
 15692                           ;ValidateDataRange@dataRangeNew stored from wreg
 15693  007FF0  0100               	movlb	0	; () banked
 15694  007FF2  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15695                           
 15696                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15697  007FF4  0E00               	movlw	0
 15698  007FF6  0100               	movlb	0	; () banked
 15699  007FF8  6F62               	movwf	ValidateDataRange@result& (0+255),b
 15700                           
 15701                           ; BSR set to: 0
 15702                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15703                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15704  007FFA  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15705  007FFC  0B0F               	andlw	15
 15706  007FFE  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15710  008000  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15711  008002  0B0F               	andlw	15
 15712  008004  0B0F               	andlw	15
 15713  008006  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15717  008008  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15718  00800A  EC56  F045         	call	_ValidateDataRate
 15719  00800E  0900               	iorlw	0
 15720  008010  A4D8               	btfss	status,2,c
 15721  008012  D00C               	goto	u15750
 15722  008014  0100               	movlb	0	; () banked
 15723  008016  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15724  008018  EC56  F045         	call	_ValidateDataRate
 15725  00801C  0900               	iorlw	0
 15726  00801E  A4D8               	btfss	status,2,c
 15727  008020  D005               	goto	u15750
 15728  008022  0100               	movlb	0	; () banked
 15729  008024  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15730  008026  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15731  008028  B0D8               	btfsc	status,0,c
 15732  00802A  D003               	goto	l1292
 15733  00802C                     u15750:
 15734                           
 15735                           ;lorawan_eu.c: 1119: {
 15736                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15737                           
 15738                           ; BSR set to: 0
 15739  00802C  0E03               	movlw	3
 15740  00802E  0100               	movlb	0	; () banked
 15741  008030  6F62               	movwf	ValidateDataRange@result& (0+255),b
 15742  008032                     l1292:
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;lorawan_eu.c: 1121: }
 15746                           ;lorawan_eu.c: 1122: return result;
 15747  008032  5162               	movf	ValidateDataRange@result& (0+255),w,b
 15748  008034  0012               	return	
 15749  008036                     __end_of_ValidateDataRange:
 15750                           	opt stack 0
 15751                           tosu	equ	0xFFF
 15752                           tosh	equ	0xFFE
 15753                           tosl	equ	0xFFD
 15754                           pclath	equ	0xFFA
 15755                           tblptru	equ	0xFF8
 15756                           tblptrh	equ	0xFF7
 15757                           tblptrl	equ	0xFF6
 15758                           tablat	equ	0xFF5
 15759                           prodh	equ	0xFF4
 15760                           prodl	equ	0xFF3
 15761                           intcon	equ	0xFF2
 15762                           intcon2	equ	0xFF1
 15763                           intcon3	equ	0xFF0
 15764                           indf0	equ	0xFEF
 15765                           postinc0	equ	0xFEE
 15766                           fsr0h	equ	0xFEA
 15767                           fsr0l	equ	0xFE9
 15768                           wreg	equ	0xFE8
 15769                           postinc1	equ	0xFE6
 15770                           postdec1	equ	0xFE5
 15771                           plusw1	equ	0xFE3
 15772                           fsr1h	equ	0xFE2
 15773                           fsr1l	equ	0xFE1
 15774                           indf2	equ	0xFDF
 15775                           postinc2	equ	0xFDE
 15776                           postdec2	equ	0xFDD
 15777                           fsr2h	equ	0xFDA
 15778                           fsr2l	equ	0xFD9
 15779                           status	equ	0xFD8
 15780                           
 15781 ;; *************** function _UpdateFrequency *****************
 15782 ;; Defined at:
 15783 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;  channelId       1    wreg     unsigned char 
 15786 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;  channelId       1    4[BANK0 ] unsigned char 
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15798 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;Total ram usage:        5 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:    7
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_ExecuteNewChannel
 15809 ;;		_LORAWAN_SetFrequency
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813                           	psect	text72
 15814  00807C                     __ptext72:
 15815                           	opt stack 0
 15816  00807C                     _UpdateFrequency:
 15817                           	opt stack 17
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;incstack = 0
 15821                           ;UpdateFrequency@channelId stored from wreg
 15822  00807C  0100               	movlb	0	; () banked
 15823  00807E  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 15824                           
 15825                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15826  008080  0100               	movlb	0	; () banked
 15827  008082  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 15828  008084  0D0E               	mullw	14
 15829  008086  0E00               	movlw	low _Channels
 15830  008088  24F3               	addwf	prodl,w,c
 15831  00808A  6ED9               	movwf	fsr2l,c
 15832  00808C  0E04               	movlw	high _Channels
 15833  00808E  20F4               	addwfc	prodh,w,c
 15834  008090  6EDA               	movwf	fsr2h,c
 15835  008092  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15836  008096  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15837  00809A  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15838  00809E  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15839                           
 15840                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15841  0080A2  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 15842  0080A4  0D0E               	mullw	14
 15843  0080A6  0E0D               	movlw	13
 15844  0080A8  26F3               	addwf	prodl,f,c
 15845  0080AA  0E00               	movlw	0
 15846  0080AC  22F4               	addwfc	prodh,f,c
 15847  0080AE  0E00               	movlw	low _Channels
 15848  0080B0  24F3               	addwf	prodl,w,c
 15849  0080B2  6ED9               	movwf	fsr2l,c
 15850  0080B4  0E04               	movlw	high _Channels
 15851  0080B6  20F4               	addwfc	prodh,w,c
 15852  0080B8  6EDA               	movwf	fsr2h,c
 15853  0080BA  0E00               	movlw	0
 15854  0080BC  80DB               	bsf	plusw2,0,c
 15855                           
 15856                           ; BSR set to: 0
 15857  0080BE  0012               	return		;funcret
 15858  0080C0                     __end_of_UpdateFrequency:
 15859                           	opt stack 0
 15860                           tosu	equ	0xFFF
 15861                           tosh	equ	0xFFE
 15862                           tosl	equ	0xFFD
 15863                           pclath	equ	0xFFA
 15864                           tblptru	equ	0xFF8
 15865                           tblptrh	equ	0xFF7
 15866                           tblptrl	equ	0xFF6
 15867                           tablat	equ	0xFF5
 15868                           prodh	equ	0xFF4
 15869                           prodl	equ	0xFF3
 15870                           intcon	equ	0xFF2
 15871                           intcon2	equ	0xFF1
 15872                           intcon3	equ	0xFF0
 15873                           indf0	equ	0xFEF
 15874                           postinc0	equ	0xFEE
 15875                           fsr0h	equ	0xFEA
 15876                           fsr0l	equ	0xFE9
 15877                           wreg	equ	0xFE8
 15878                           postinc1	equ	0xFE6
 15879                           postdec1	equ	0xFE5
 15880                           plusw1	equ	0xFE3
 15881                           fsr1h	equ	0xFE2
 15882                           fsr1l	equ	0xFE1
 15883                           indf2	equ	0xFDF
 15884                           postinc2	equ	0xFDE
 15885                           postdec2	equ	0xFDD
 15886                           plusw2	equ	0xFDB
 15887                           fsr2h	equ	0xFDA
 15888                           fsr2l	equ	0xFD9
 15889                           status	equ	0xFD8
 15890                           
 15891 ;; *************** function _UpdateDutyCycle *****************
 15892 ;; Defined at:
 15893 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15894 ;; Parameters:    Size  Location     Type
 15895 ;;  channelId       1    wreg     unsigned char 
 15896 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 15897 ;; Auto vars:     Size  Location     Type
 15898 ;;  channelId       1    2[BANK0 ] unsigned char 
 15899 ;; Return value:  Size  Location     Type
 15900 ;;                  1    wreg      void 
 15901 ;; Registers used:
 15902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15903 ;; Tracked objects:
 15904 ;;		On entry : 0/0
 15905 ;;		On exit  : 0/0
 15906 ;;		Unchanged: 0/0
 15907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15911 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15912 ;;Total ram usage:        3 bytes
 15913 ;; Hardware stack levels used:    1
 15914 ;; Hardware stack levels required when called:    7
 15915 ;; This function calls:
 15916 ;;		Nothing
 15917 ;; This function is called by:
 15918 ;;		_ExecuteNewChannel
 15919 ;;		_LORAWAN_SetDutyCycle
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text73
 15924  0080C0                     __ptext73:
 15925                           	opt stack 0
 15926  0080C0                     _UpdateDutyCycle:
 15927                           	opt stack 17
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;incstack = 0
 15931                           ;UpdateDutyCycle@channelId stored from wreg
 15932  0080C0  0100               	movlb	0	; () banked
 15933  0080C2  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15934                           
 15935                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15936  0080C4  0100               	movlb	0	; () banked
 15937  0080C6  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15938  0080C8  0D0E               	mullw	14
 15939  0080CA  0E06               	movlw	6
 15940  0080CC  26F3               	addwf	prodl,f,c
 15941  0080CE  0E00               	movlw	0
 15942  0080D0  22F4               	addwfc	prodh,f,c
 15943  0080D2  0E00               	movlw	low _Channels
 15944  0080D4  24F3               	addwf	prodl,w,c
 15945  0080D6  6ED9               	movwf	fsr2l,c
 15946  0080D8  0E04               	movlw	high _Channels
 15947  0080DA  20F4               	addwfc	prodh,w,c
 15948  0080DC  6EDA               	movwf	fsr2h,c
 15949  0080DE  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15950  0080E2  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15951                           
 15952                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15953  0080E6  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15954  0080E8  0D0E               	mullw	14
 15955  0080EA  0E0D               	movlw	13
 15956  0080EC  26F3               	addwf	prodl,f,c
 15957  0080EE  0E00               	movlw	0
 15958  0080F0  22F4               	addwfc	prodh,f,c
 15959  0080F2  0E00               	movlw	low _Channels
 15960  0080F4  24F3               	addwf	prodl,w,c
 15961  0080F6  6ED9               	movwf	fsr2l,c
 15962  0080F8  0E04               	movlw	high _Channels
 15963  0080FA  20F4               	addwfc	prodh,w,c
 15964  0080FC  6EDA               	movwf	fsr2h,c
 15965  0080FE  0E00               	movlw	0
 15966  008100  84DB               	bsf	plusw2,2,c
 15967                           
 15968                           ; BSR set to: 0
 15969  008102  0012               	return		;funcret
 15970  008104                     __end_of_UpdateDutyCycle:
 15971                           	opt stack 0
 15972                           tosu	equ	0xFFF
 15973                           tosh	equ	0xFFE
 15974                           tosl	equ	0xFFD
 15975                           pclath	equ	0xFFA
 15976                           tblptru	equ	0xFF8
 15977                           tblptrh	equ	0xFF7
 15978                           tblptrl	equ	0xFF6
 15979                           tablat	equ	0xFF5
 15980                           prodh	equ	0xFF4
 15981                           prodl	equ	0xFF3
 15982                           intcon	equ	0xFF2
 15983                           intcon2	equ	0xFF1
 15984                           intcon3	equ	0xFF0
 15985                           indf0	equ	0xFEF
 15986                           postinc0	equ	0xFEE
 15987                           fsr0h	equ	0xFEA
 15988                           fsr0l	equ	0xFE9
 15989                           wreg	equ	0xFE8
 15990                           postinc1	equ	0xFE6
 15991                           postdec1	equ	0xFE5
 15992                           plusw1	equ	0xFE3
 15993                           fsr1h	equ	0xFE2
 15994                           fsr1l	equ	0xFE1
 15995                           indf2	equ	0xFDF
 15996                           postinc2	equ	0xFDE
 15997                           postdec2	equ	0xFDD
 15998                           plusw2	equ	0xFDB
 15999                           fsr2h	equ	0xFDA
 16000                           fsr2l	equ	0xFD9
 16001                           status	equ	0xFD8
 16002                           
 16003 ;; *************** function _UpdateDataRange *****************
 16004 ;; Defined at:
 16005 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  channelId       1    wreg     unsigned char 
 16008 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;  channelId       1    2[BANK0 ] unsigned char 
 16011 ;;  i               1    3[BANK0 ] unsigned char 
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  1    wreg      void 
 16014 ;; Registers used:
 16015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16021 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;Total ram usage:        4 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; Hardware stack levels required when called:    7
 16028 ;; This function calls:
 16029 ;;		Nothing
 16030 ;; This function is called by:
 16031 ;;		_ExecuteNewChannel
 16032 ;;		_LORAWAN_SetDataRange
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text74
 16037  005358                     __ptext74:
 16038                           	opt stack 0
 16039  005358                     _UpdateDataRange:
 16040                           	opt stack 17
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;incstack = 0
 16044                           ;UpdateDataRange@channelId stored from wreg
 16045  005358  0100               	movlb	0	; () banked
 16046  00535A  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 16047                           
 16048                           ;lorawan_eu.c: 1011: uint8_t i;
 16049                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 16050  00535C  0E07               	movlw	7
 16051  00535E  0102               	movlb	2	; () banked
 16052  005360  6FEB               	movwf	(_loRa+235)& (0+255),b
 16053                           
 16054                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 16055  005362  0E00               	movlw	0
 16056  005364  6FEC               	movwf	(_loRa+236)& (0+255),b
 16057                           
 16058                           ; BSR set to: 2
 16059                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 16060  005366  0100               	movlb	0	; () banked
 16061  005368  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16062  00536A  0D0E               	mullw	14
 16063  00536C  0E05               	movlw	5
 16064  00536E  26F3               	addwf	prodl,f,c
 16065  005370  0E00               	movlw	0
 16066  005372  22F4               	addwfc	prodh,f,c
 16067  005374  0E00               	movlw	low _Channels
 16068  005376  24F3               	addwf	prodl,w,c
 16069  005378  6ED9               	movwf	fsr2l,c
 16070  00537A  0E04               	movlw	high _Channels
 16071  00537C  20F4               	addwfc	prodh,w,c
 16072  00537E  6EDA               	movwf	fsr2h,c
 16073  005380  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16074                           
 16075                           ; BSR set to: 0
 16076                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 16077  005384  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16078  005386  0D0E               	mullw	14
 16079  005388  0E0D               	movlw	13
 16080  00538A  26F3               	addwf	prodl,f,c
 16081  00538C  0E00               	movlw	0
 16082  00538E  22F4               	addwfc	prodh,f,c
 16083  005390  0E00               	movlw	low _Channels
 16084  005392  24F3               	addwf	prodl,w,c
 16085  005394  6ED9               	movwf	fsr2l,c
 16086  005396  0E04               	movlw	high _Channels
 16087  005398  20F4               	addwfc	prodh,w,c
 16088  00539A  6EDA               	movwf	fsr2h,c
 16089  00539C  0E00               	movlw	0
 16090  00539E  82DB               	bsf	plusw2,1,c
 16091                           
 16092                           ; BSR set to: 0
 16093                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 16094  0053A0  0E00               	movlw	0
 16095  0053A2  6F63               	movwf	UpdateDataRange@i& (0+255),b
 16096  0053A4  D06D               	goto	l1256
 16097  0053A6                     
 16098                           ; BSR set to: 0
 16099                           ;lorawan_eu.c: 1020: {
 16100                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 16101                           
 16102                           ; BSR set to: 0
 16103  0053A6  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16104  0053A8  0D0E               	mullw	14
 16105  0053AA  0E05               	movlw	5
 16106  0053AC  26F3               	addwf	prodl,f,c
 16107  0053AE  0E00               	movlw	0
 16108  0053B0  22F4               	addwfc	prodh,f,c
 16109  0053B2  0E00               	movlw	low _Channels
 16110  0053B4  24F3               	addwf	prodl,w,c
 16111  0053B6  6ED9               	movwf	fsr2l,c
 16112  0053B8  0E04               	movlw	high _Channels
 16113  0053BA  20F4               	addwfc	prodh,w,c
 16114  0053BC  6EDA               	movwf	fsr2h,c
 16115  0053BE  0104               	movlb	4	; () banked
 16116  0053C0  50DF               	movf	223,w,c
 16117  0053C2  0B0F               	andlw	15
 16118  0053C4  0100               	movlb	0	; () banked
 16119  0053C6  6F61               	movwf	??_UpdateDataRange& (0+255),b
 16120  0053C8  0102               	movlb	2	; () banked
 16121  0053CA  51EB               	movf	(_loRa+235)& (0+255),w,b
 16122  0053CC  0100               	movlb	0	; () banked
 16123  0053CE  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 16124  0053D0  B0D8               	btfsc	status,0,c
 16125  0053D2  D020               	goto	l1258
 16126                           
 16127                           ; BSR set to: 0
 16128  0053D4  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16129  0053D6  0D0E               	mullw	14
 16130  0053D8  0E04               	movlw	4
 16131  0053DA  26F3               	addwf	prodl,f,c
 16132  0053DC  0E00               	movlw	0
 16133  0053DE  22F4               	addwfc	prodh,f,c
 16134  0053E0  0E00               	movlw	low _Channels
 16135  0053E2  24F3               	addwf	prodl,w,c
 16136  0053E4  6ED9               	movwf	fsr2l,c
 16137  0053E6  0E04               	movlw	high _Channels
 16138  0053E8  20F4               	addwfc	prodh,w,c
 16139  0053EA  6EDA               	movwf	fsr2h,c
 16140  0053EC  04DE               	decf	postinc2,w,c
 16141  0053EE  A4D8               	btfss	status,2,c
 16142  0053F0  D011               	goto	l1258
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;lorawan_eu.c: 1022: {
 16146                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 16147  0053F2  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16148  0053F4  0D0E               	mullw	14
 16149  0053F6  0E05               	movlw	5
 16150  0053F8  26F3               	addwf	prodl,f,c
 16151  0053FA  0E00               	movlw	0
 16152  0053FC  22F4               	addwfc	prodh,f,c
 16153  0053FE  0E00               	movlw	low _Channels
 16154  005400  24F3               	addwf	prodl,w,c
 16155  005402  6ED9               	movwf	fsr2l,c
 16156  005404  0E04               	movlw	high _Channels
 16157  005406  20F4               	addwfc	prodh,w,c
 16158  005408  6EDA               	movwf	fsr2h,c
 16159  00540A  0104               	movlb	4	; () banked
 16160  00540C  50DF               	movf	223,w,c
 16161  00540E  0B0F               	andlw	15
 16162  005410  0102               	movlb	2	; () banked
 16163  005412  6FEB               	movwf	(_loRa+235)& (0+255),b
 16164  005414                     l1258:
 16165                           
 16166                           ;lorawan_eu.c: 1024: }
 16167                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 16168  005414  0100               	movlb	0	; () banked
 16169  005416  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16170  005418  0D0E               	mullw	14
 16171  00541A  0E05               	movlw	5
 16172  00541C  26F3               	addwf	prodl,f,c
 16173  00541E  0E00               	movlw	0
 16174  005420  22F4               	addwfc	prodh,f,c
 16175  005422  0E00               	movlw	low _Channels
 16176  005424  24F3               	addwf	prodl,w,c
 16177  005426  6ED9               	movwf	fsr2l,c
 16178  005428  0E04               	movlw	high _Channels
 16179  00542A  20F4               	addwfc	prodh,w,c
 16180  00542C  6EDA               	movwf	fsr2h,c
 16181  00542E  0104               	movlb	4	; () banked
 16182  005430  38DF               	swapf	223,w,c
 16183  005432  0B0F               	andlw	15
 16184  005434  0102               	movlb	2	; () banked
 16185  005436  61EC               	cpfslt	(_loRa+236)& (0+255),b
 16186  005438  D021               	goto	l1259
 16187                           
 16188                           ; BSR set to: 2
 16189  00543A  0100               	movlb	0	; () banked
 16190  00543C  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16191  00543E  0D0E               	mullw	14
 16192  005440  0E04               	movlw	4
 16193  005442  26F3               	addwf	prodl,f,c
 16194  005444  0E00               	movlw	0
 16195  005446  22F4               	addwfc	prodh,f,c
 16196  005448  0E00               	movlw	low _Channels
 16197  00544A  24F3               	addwf	prodl,w,c
 16198  00544C  6ED9               	movwf	fsr2l,c
 16199  00544E  0E04               	movlw	high _Channels
 16200  005450  20F4               	addwfc	prodh,w,c
 16201  005452  6EDA               	movwf	fsr2h,c
 16202  005454  04DE               	decf	postinc2,w,c
 16203  005456  A4D8               	btfss	status,2,c
 16204  005458  D011               	goto	l1259
 16205                           
 16206                           ; BSR set to: 0
 16207                           ;lorawan_eu.c: 1026: {
 16208                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 16209  00545A  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16210  00545C  0D0E               	mullw	14
 16211  00545E  0E05               	movlw	5
 16212  005460  26F3               	addwf	prodl,f,c
 16213  005462  0E00               	movlw	0
 16214  005464  22F4               	addwfc	prodh,f,c
 16215  005466  0E00               	movlw	low _Channels
 16216  005468  24F3               	addwf	prodl,w,c
 16217  00546A  6ED9               	movwf	fsr2l,c
 16218  00546C  0E04               	movlw	high _Channels
 16219  00546E  20F4               	addwfc	prodh,w,c
 16220  005470  6EDA               	movwf	fsr2h,c
 16221  005472  0104               	movlb	4	; () banked
 16222  005474  38DF               	swapf	223,w,c
 16223  005476  0B0F               	andlw	15
 16224  005478  0102               	movlb	2	; () banked
 16225  00547A  6FEC               	movwf	(_loRa+236)& (0+255),b
 16226  00547C                     l1259:
 16227                           
 16228                           ; BSR set to: 2
 16229  00547C  0100               	movlb	0	; () banked
 16230  00547E  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 16231  005480                     l1256:
 16232                           
 16233                           ; BSR set to: 0
 16234                           
 16235                           ; BSR set to: 0
 16236  005480  0102               	movlb	2	; () banked
 16237  005482  51ED               	movf	(_loRa+237)& (0+255),w,b
 16238  005484  0100               	movlb	0	; () banked
 16239  005486  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 16240  005488  A0D8               	btfss	status,0,c
 16241  00548A  D78D               	goto	l1257
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;lorawan_eu.c: 1028: }
 16245                           ;lorawan_eu.c: 1029: }
 16246                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 16247                           
 16248                           ; BSR set to: 0
 16249  00548C  0102               	movlb	2	; () banked
 16250  00548E  51DF               	movf	(_loRa+223)& (0+255),w,b
 16251  005490  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16252  005492  A0D8               	btfss	status,0,c
 16253                           
 16254                           ; BSR set to: 2
 16255                           ;lorawan_eu.c: 1032: {
 16256                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 16257  005494  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 16258                           
 16259                           ; BSR set to: 2
 16260                           ;lorawan_eu.c: 1034: }
 16261                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 16262                           
 16263                           ; BSR set to: 2
 16264  005498  51EB               	movf	(_loRa+235)& (0+255),w,b
 16265  00549A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 16266  00549C  B0D8               	btfsc	status,0,c
 16267  00549E  0012               	return	
 16268                           
 16269                           ; BSR set to: 2
 16270                           ;lorawan_eu.c: 1037: {
 16271                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 16272  0054A0  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 16273  0054A4  0012               	return	
 16274  0054A6                     __end_of_UpdateDataRange:
 16275                           	opt stack 0
 16276                           tosu	equ	0xFFF
 16277                           tosh	equ	0xFFE
 16278                           tosl	equ	0xFFD
 16279                           pclath	equ	0xFFA
 16280                           tblptru	equ	0xFF8
 16281                           tblptrh	equ	0xFF7
 16282                           tblptrl	equ	0xFF6
 16283                           tablat	equ	0xFF5
 16284                           prodh	equ	0xFF4
 16285                           prodl	equ	0xFF3
 16286                           intcon	equ	0xFF2
 16287                           intcon2	equ	0xFF1
 16288                           intcon3	equ	0xFF0
 16289                           indf0	equ	0xFEF
 16290                           postinc0	equ	0xFEE
 16291                           fsr0h	equ	0xFEA
 16292                           fsr0l	equ	0xFE9
 16293                           wreg	equ	0xFE8
 16294                           postinc1	equ	0xFE6
 16295                           postdec1	equ	0xFE5
 16296                           plusw1	equ	0xFE3
 16297                           fsr1h	equ	0xFE2
 16298                           fsr1l	equ	0xFE1
 16299                           indf2	equ	0xFDF
 16300                           postinc2	equ	0xFDE
 16301                           postdec2	equ	0xFDD
 16302                           plusw2	equ	0xFDB
 16303                           fsr2h	equ	0xFDA
 16304                           fsr2l	equ	0xFD9
 16305                           status	equ	0xFD8
 16306                           
 16307 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16308 ;; Defined at:
 16309 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16310 ;; Parameters:    Size  Location     Type
 16311 ;;  channelId       1    wreg     unsigned char 
 16312 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;  channelId       1    6[BANK0 ] unsigned char 
 16315 ;;  result          1    5[BANK0 ] enum E7249
 16316 ;; Return value:  Size  Location     Type
 16317 ;;                  1    wreg      enum E7249
 16318 ;; Registers used:
 16319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16320 ;; Tracked objects:
 16321 ;;		On entry : 0/0
 16322 ;;		On exit  : 0/0
 16323 ;;		Unchanged: 0/0
 16324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16325 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;Total ram usage:        3 bytes
 16330 ;; Hardware stack levels used:    1
 16331 ;; Hardware stack levels required when called:    8
 16332 ;; This function calls:
 16333 ;;		_UpdateChannelIdStatus
 16334 ;;		_ValidateChannelId
 16335 ;; This function is called by:
 16336 ;;		_ExecuteNewChannel
 16337 ;;		_UpdateCfList
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           	psect	text75
 16342  007BBC                     __ptext75:
 16343                           	opt stack 0
 16344  007BBC                     _LORAWAN_SetChannelIdStatus:
 16345                           	opt stack 17
 16346                           
 16347                           ; BSR set to: 2
 16348                           ;incstack = 0
 16349                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16350  007BBC  0100               	movlb	0	; () banked
 16351  007BBE  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16352                           
 16353                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 16354  007BC0  0E00               	movlw	0
 16355  007BC2  0100               	movlb	0	; () banked
 16356  007BC4  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 16360  007BC6  0E01               	movlw	1
 16361  007BC8  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16362  007BCA  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16363  007BCC  EC05  F044         	call	_ValidateChannelId
 16364  007BD0  0900               	iorlw	0
 16365  007BD2  B4D8               	btfsc	status,2,c
 16366  007BD4  D004               	goto	l1044
 16367                           
 16368                           ;lorawan_eu.c: 288: {
 16369                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 16370  007BD6  0E03               	movlw	3
 16371  007BD8  0100               	movlb	0	; () banked
 16372  007BDA  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16373                           
 16374                           ;lorawan_eu.c: 290: }
 16375  007BDC  0012               	return	
 16376  007BDE                     l1044:
 16377                           
 16378                           ;lorawan_eu.c: 292: else
 16379                           ;lorawan_eu.c: 293: {
 16380                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 16381                           
 16382                           ; BSR set to: 0
 16383  007BDE  0100               	movlb	0	; () banked
 16384  007BE0  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16385  007BE2  0D0E               	mullw	14
 16386  007BE4  0E0D               	movlw	13
 16387  007BE6  26F3               	addwf	prodl,f,c
 16388  007BE8  0E00               	movlw	0
 16389  007BEA  22F4               	addwfc	prodh,f,c
 16390  007BEC  0E00               	movlw	low _Channels
 16391  007BEE  24F3               	addwf	prodl,w,c
 16392  007BF0  6ED9               	movwf	fsr2l,c
 16393  007BF2  0E04               	movlw	high _Channels
 16394  007BF4  20F4               	addwfc	prodh,w,c
 16395  007BF6  6EDA               	movwf	fsr2h,c
 16396  007BF8  50DF               	movf	indf2,w,c
 16397  007BFA  0B07               	andlw	7
 16398  007BFC  0A07               	xorlw	7
 16399  007BFE  A4D8               	btfss	status,2,c
 16400  007C00  D006               	goto	l1046
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;lorawan_eu.c: 295: {
 16404                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 16405  007C02  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16406  007C06  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16407  007C08  EC98  F027         	call	_UpdateChannelIdStatus
 16408                           
 16409                           ;lorawan_eu.c: 297: }
 16410  007C0C  0012               	return	
 16411  007C0E                     l1046:
 16412                           
 16413                           ;lorawan_eu.c: 298: else
 16414                           ;lorawan_eu.c: 299: {
 16415                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 16416  007C0E  0E03               	movlw	3
 16417  007C10  0100               	movlb	0	; () banked
 16418  007C12  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16419                           
 16420                           ; BSR set to: 0
 16421                           
 16422                           ; BSR set to: 0
 16423  007C14  0012               	return	
 16424  007C16                     __end_of_LORAWAN_SetChannelIdStatus:
 16425                           	opt stack 0
 16426                           tosu	equ	0xFFF
 16427                           tosh	equ	0xFFE
 16428                           tosl	equ	0xFFD
 16429                           pclath	equ	0xFFA
 16430                           tblptru	equ	0xFF8
 16431                           tblptrh	equ	0xFF7
 16432                           tblptrl	equ	0xFF6
 16433                           tablat	equ	0xFF5
 16434                           prodh	equ	0xFF4
 16435                           prodl	equ	0xFF3
 16436                           intcon	equ	0xFF2
 16437                           intcon2	equ	0xFF1
 16438                           intcon3	equ	0xFF0
 16439                           indf0	equ	0xFEF
 16440                           postinc0	equ	0xFEE
 16441                           fsr0h	equ	0xFEA
 16442                           fsr0l	equ	0xFE9
 16443                           wreg	equ	0xFE8
 16444                           postinc1	equ	0xFE6
 16445                           postdec1	equ	0xFE5
 16446                           plusw1	equ	0xFE3
 16447                           fsr1h	equ	0xFE2
 16448                           fsr1l	equ	0xFE1
 16449                           indf2	equ	0xFDF
 16450                           postinc2	equ	0xFDE
 16451                           postdec2	equ	0xFDD
 16452                           plusw2	equ	0xFDB
 16453                           fsr2h	equ	0xFDA
 16454                           fsr2l	equ	0xFD9
 16455                           status	equ	0xFD8
 16456                           
 16457 ;; *************** function _ValidateChannelId *****************
 16458 ;; Defined at:
 16459 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  channelId       1    wreg     unsigned char 
 16462 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;  channelId       1    2[BANK0 ] unsigned char 
 16465 ;;  result          1    1[BANK0 ] enum E7249
 16466 ;; Return value:  Size  Location     Type
 16467 ;;                  1    wreg      enum E7249
 16468 ;; Registers used:
 16469 ;;		wreg, status,2, status,0
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16475 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16479 ;;Total ram usage:        3 bytes
 16480 ;; Hardware stack levels used:    1
 16481 ;; Hardware stack levels required when called:    7
 16482 ;; This function calls:
 16483 ;;		Nothing
 16484 ;; This function is called by:
 16485 ;;		_LORAWAN_SetChannelIdStatus
 16486 ;;		_ExecuteNewChannel
 16487 ;;		_LORAWAN_SetDataRange
 16488 ;;		_LORAWAN_GetDataRange
 16489 ;;		_LORAWAN_GetChannelIdStatus
 16490 ;;		_LORAWAN_SetFrequency
 16491 ;;		_LORAWAN_SetDutyCycle
 16492 ;;		_LORAWAN_GetDutyCycle
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           	psect	text76
 16497  00880A                     __ptext76:
 16498                           	opt stack 0
 16499  00880A                     _ValidateChannelId:
 16500                           	opt stack 17
 16501                           
 16502                           ;incstack = 0
 16503                           ;ValidateChannelId@channelId stored from wreg
 16504  00880A  0100               	movlb	0	; () banked
 16505  00880C  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 16506                           
 16507                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 16508  00880E  0E00               	movlw	0
 16509  008810  0100               	movlb	0	; () banked
 16510  008812  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 16514  008814  0E10               	movlw	16
 16515  008816  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16516  008818  D006               	goto	u15250
 16517                           
 16518                           ; BSR set to: 0
 16519  00881A  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 16520  00881C  A4D8               	btfss	status,2,c
 16521  00881E  D005               	goto	l1298
 16522                           
 16523                           ; BSR set to: 0
 16524  008820  0E03               	movlw	3
 16525  008822  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16526  008824  D002               	goto	l1298
 16527  008826                     u15250:
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;lorawan_eu.c: 1130: {
 16531                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 16532                           
 16533                           ; BSR set to: 0
 16534  008826  0E03               	movlw	3
 16535  008828  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16536  00882A                     l1298:
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;lorawan_eu.c: 1132: }
 16540                           ;lorawan_eu.c: 1134: return result;
 16541  00882A  5161               	movf	ValidateChannelId@result& (0+255),w,b
 16542  00882C  0012               	return	
 16543  00882E                     __end_of_ValidateChannelId:
 16544                           	opt stack 0
 16545                           tosu	equ	0xFFF
 16546                           tosh	equ	0xFFE
 16547                           tosl	equ	0xFFD
 16548                           pclath	equ	0xFFA
 16549                           tblptru	equ	0xFF8
 16550                           tblptrh	equ	0xFF7
 16551                           tblptrl	equ	0xFF6
 16552                           tablat	equ	0xFF5
 16553                           prodh	equ	0xFF4
 16554                           prodl	equ	0xFF3
 16555                           intcon	equ	0xFF2
 16556                           intcon2	equ	0xFF1
 16557                           intcon3	equ	0xFF0
 16558                           indf0	equ	0xFEF
 16559                           postinc0	equ	0xFEE
 16560                           fsr0h	equ	0xFEA
 16561                           fsr0l	equ	0xFE9
 16562                           wreg	equ	0xFE8
 16563                           postinc1	equ	0xFE6
 16564                           postdec1	equ	0xFE5
 16565                           plusw1	equ	0xFE3
 16566                           fsr1h	equ	0xFE2
 16567                           fsr1l	equ	0xFE1
 16568                           indf2	equ	0xFDF
 16569                           postinc2	equ	0xFDE
 16570                           postdec2	equ	0xFDD
 16571                           plusw2	equ	0xFDB
 16572                           fsr2h	equ	0xFDA
 16573                           fsr2l	equ	0xFD9
 16574                           status	equ	0xFD8
 16575                           
 16576 ;; *************** function _ExecuteLinkCheck *****************
 16577 ;; Defined at:
 16578 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 16581 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16582 ;; Auto vars:     Size  Location     Type
 16583 ;;		None
 16584 ;; Return value:  Size  Location     Type
 16585 ;;                  2    0[BANK0 ] PTR unsigned char 
 16586 ;; Registers used:
 16587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16588 ;; Tracked objects:
 16589 ;;		On entry : 0/0
 16590 ;;		On exit  : 0/0
 16591 ;;		Unchanged: 0/0
 16592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16597 ;;Total ram usage:        2 bytes
 16598 ;; Hardware stack levels used:    1
 16599 ;; Hardware stack levels required when called:    7
 16600 ;; This function calls:
 16601 ;;		Nothing
 16602 ;; This function is called by:
 16603 ;;		_MacExecuteCommands
 16604 ;; This function uses a non-reentrant model
 16605 ;;
 16606                           
 16607                           	psect	text77
 16608  0083EA                     __ptext77:
 16609                           	opt stack 0
 16610  0083EA                     _ExecuteLinkCheck:
 16611                           	opt stack 18
 16612                           
 16613                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;incstack = 0
 16617  0083EA  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16618  0083EE  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16619  0083F2  50DF               	movf	indf2,w,c
 16620  0083F4  0102               	movlb	2	; () banked
 16621  0083F6  6FDD               	movwf	(_loRa+221)& (0+255),b
 16622                           
 16623                           ; BSR set to: 2
 16624  0083F8  0100               	movlb	0	; () banked
 16625  0083FA  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16626  0083FC  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 16630  0083FE  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16631  008402  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16632  008406  50DF               	movf	indf2,w,c
 16633  008408  0102               	movlb	2	; () banked
 16634  00840A  6FDE               	movwf	(_loRa+222)& (0+255),b
 16635  00840C  0100               	movlb	0	; () banked
 16636  00840E  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16637  008410  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;lorawan.c: 1656: return ptr;
 16641  008412  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 16642  008416  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 16643  00841A  0012               	return	
 16644  00841C                     __end_of_ExecuteLinkCheck:
 16645                           	opt stack 0
 16646                           tosu	equ	0xFFF
 16647                           tosh	equ	0xFFE
 16648                           tosl	equ	0xFFD
 16649                           pclath	equ	0xFFA
 16650                           tblptru	equ	0xFF8
 16651                           tblptrh	equ	0xFF7
 16652                           tblptrl	equ	0xFF6
 16653                           tablat	equ	0xFF5
 16654                           prodh	equ	0xFF4
 16655                           prodl	equ	0xFF3
 16656                           intcon	equ	0xFF2
 16657                           intcon2	equ	0xFF1
 16658                           intcon3	equ	0xFF0
 16659                           indf0	equ	0xFEF
 16660                           postinc0	equ	0xFEE
 16661                           fsr0h	equ	0xFEA
 16662                           fsr0l	equ	0xFE9
 16663                           wreg	equ	0xFE8
 16664                           postinc1	equ	0xFE6
 16665                           postdec1	equ	0xFE5
 16666                           plusw1	equ	0xFE3
 16667                           fsr1h	equ	0xFE2
 16668                           fsr1l	equ	0xFE1
 16669                           indf2	equ	0xFDF
 16670                           postinc2	equ	0xFDE
 16671                           postdec2	equ	0xFDD
 16672                           plusw2	equ	0xFDB
 16673                           fsr2h	equ	0xFDA
 16674                           fsr2l	equ	0xFD9
 16675                           status	equ	0xFD8
 16676                           
 16677 ;; *************** function _ExecuteLinkAdr *****************
 16678 ;; Defined at:
 16679 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 16682 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;  redundancy      2   22[BANK0 ] PTR struct .
 16685 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16686 ;;  channelMask     2   19[BANK0 ] unsigned int 
 16687 ;;  dataRate        1   24[BANK0 ] unsigned char 
 16688 ;;  txPower         1   21[BANK0 ] unsigned char 
 16689 ;; Return value:  Size  Location     Type
 16690 ;;                  2   15[BANK0 ] PTR unsigned char 
 16691 ;; Registers used:
 16692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16693 ;; Tracked objects:
 16694 ;;		On entry : 0/0
 16695 ;;		On exit  : 0/0
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16699 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;Total ram usage:       10 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:   10
 16705 ;; This function calls:
 16706 ;;		_EnableChannels
 16707 ;;		_UpdateCurrentDataRate
 16708 ;;		_UpdateTxPower
 16709 ;;		_ValidateChannelMask
 16710 ;;		_ValidateChannelMaskCntl
 16711 ;;		_ValidateDataRate
 16712 ;;		_ValidateTxPower
 16713 ;; This function is called by:
 16714 ;;		_MacExecuteCommands
 16715 ;; This function uses a non-reentrant model
 16716 ;;
 16717                           
 16718                           	psect	text78
 16719  003244                     __ptext78:
 16720                           	opt stack 0
 16721  003244                     _ExecuteLinkAdr:
 16722                           	opt stack 15
 16723                           
 16724                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 16725                           ;lorawan_eu.c: 616: uint16_t channelMask;
 16726                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;incstack = 0
 16730  003244  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16731  003248  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16732  00324C  50DF               	movf	indf2,w,c
 16733  00324E  0B0F               	andlw	15
 16734  003250  0100               	movlb	0	; () banked
 16735  003252  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 16736                           
 16737                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 16738  003254  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16739  003258  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16740  00325C  50DF               	movf	indf2,w,c
 16741  00325E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16742  003260  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16743  003262  0B0F               	andlw	15
 16744  003264  0B0F               	andlw	15
 16745  003266  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 16746                           
 16747                           ; BSR set to: 0
 16748                           ;lorawan_eu.c: 620: ptr++;
 16749  003268  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16750  00326A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 16754  00326C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16755  003270  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16756  003274  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 16757  003278  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 16761  00327C  0E02               	movlw	2
 16762  00327E  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 16763  003280  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 16764  003282  0E00               	movlw	0
 16765  003284  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 16766  003286  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 16770                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 16771  003288  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16772  00328C  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16773                           
 16774                           ; BSR set to: 0
 16775  003290  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16776  003292  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16780  003294  0102               	movlb	2	; () banked
 16781  003296  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16782  003298  D0EF               	goto	l1150
 16783                           
 16784                           ; BSR set to: 2
 16785                           ;lorawan_eu.c: 627: {
 16786                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 16787  00329A  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16788  00329E  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16789  0032A2  0100               	movlb	0	; () banked
 16790  0032A4  38DF               	swapf	223,w,c
 16791  0032A6  0B07               	andlw	7
 16792  0032A8  EC5B  F044         	call	_ValidateChannelMaskCntl
 16793  0032AC  0900               	iorlw	0
 16794  0032AE  A4D8               	btfss	status,2,c
 16795  0032B0  D021               	goto	l1151
 16796  0032B2  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16797  0032B6  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16798  0032BA  EC52  F03D         	call	_ValidateChannelMask	;wreg free
 16799  0032BE  0900               	iorlw	0
 16800  0032C0  A4D8               	btfss	status,2,c
 16801  0032C2  D018               	goto	l1151
 16802                           
 16803                           ;lorawan_eu.c: 629: {
 16804                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16805  0032C4  0102               	movlb	2	; () banked
 16806  0032C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16807  0032C8  0D02               	mullw	2
 16808  0032CA  0E00               	movlw	low _loRa
 16809  0032CC  0100               	movlb	0	; () banked
 16810  0032CE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16811  0032D0  0E02               	movlw	high _loRa
 16812  0032D2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16813  0032D4  0EA8               	movlw	168
 16814  0032D6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16815  0032D8  0E00               	movlw	0
 16816  0032DA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16817  0032DC  50F3               	movf	prodl,w,c
 16818  0032DE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16819  0032E0  50F4               	movf	prodh,w,c
 16820  0032E2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16821  0032E4  0E01               	movlw	1
 16822  0032E6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16823  0032E8  6ED9               	movwf	fsr2l,c
 16824  0032EA  0E00               	movlw	0
 16825  0032EC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16826  0032EE  6EDA               	movwf	fsr2h,c
 16827  0032F0  0102               	movlb	2	; () banked
 16828  0032F2  80DF               	bsf	indf2,0,c
 16829  0032F4                     l1151:
 16830                           
 16831                           ;lorawan_eu.c: 631: }
 16832                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16833                           
 16834                           ; BSR set to: 2
 16835  0032F4  0100               	movlb	0	; () banked
 16836  0032F6  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16837  0032F8  EC56  F045         	call	_ValidateDataRate
 16838  0032FC  0900               	iorlw	0
 16839  0032FE  A4D8               	btfss	status,2,c
 16840  003300  D022               	goto	l1152
 16841  003302  0102               	movlb	2	; () banked
 16842  003304  51EB               	movf	(_loRa+235)& (0+255),w,b
 16843  003306  0100               	movlb	0	; () banked
 16844  003308  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16845  00330A  A0D8               	btfss	status,0,c
 16846  00330C  D01C               	goto	l1152
 16847                           
 16848                           ; BSR set to: 0
 16849  00330E  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16850  003310  0102               	movlb	2	; () banked
 16851  003312  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16852  003314  A0D8               	btfss	status,0,c
 16853  003316  D017               	goto	l1152
 16854                           
 16855                           ; BSR set to: 2
 16856                           ;lorawan_eu.c: 634: {
 16857                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16858  003318  51A7               	movf	(_loRa+167)& (0+255),w,b
 16859  00331A  0D02               	mullw	2
 16860  00331C  0E00               	movlw	low _loRa
 16861  00331E  0100               	movlb	0	; () banked
 16862  003320  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16863  003322  0E02               	movlw	high _loRa
 16864  003324  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16865  003326  0EA8               	movlw	168
 16866  003328  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16867  00332A  0E00               	movlw	0
 16868  00332C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16869  00332E  50F3               	movf	prodl,w,c
 16870  003330  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16871  003332  50F4               	movf	prodh,w,c
 16872  003334  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16873  003336  0E01               	movlw	1
 16874  003338  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16875  00333A  6ED9               	movwf	fsr2l,c
 16876  00333C  0E00               	movlw	0
 16877  00333E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16878  003340  6EDA               	movwf	fsr2h,c
 16879  003342  0102               	movlb	2	; () banked
 16880  003344  82DF               	bsf	indf2,1,c
 16881  003346                     l1152:
 16882                           
 16883                           ;lorawan_eu.c: 636: }
 16884                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16885                           
 16886                           ; BSR set to: 2
 16887  003346  0100               	movlb	0	; () banked
 16888  003348  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16889  00334A  EC3B  F043         	call	_ValidateTxPower
 16890  00334E  0900               	iorlw	0
 16891  003350  A4D8               	btfss	status,2,c
 16892  003352  D018               	goto	l1153
 16893                           
 16894                           ;lorawan_eu.c: 639: {
 16895                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16896  003354  0102               	movlb	2	; () banked
 16897  003356  51A7               	movf	(_loRa+167)& (0+255),w,b
 16898  003358  0D02               	mullw	2
 16899  00335A  0E00               	movlw	low _loRa
 16900  00335C  0100               	movlb	0	; () banked
 16901  00335E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16902  003360  0E02               	movlw	high _loRa
 16903  003362  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16904  003364  0EA8               	movlw	168
 16905  003366  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16906  003368  0E00               	movlw	0
 16907  00336A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16908  00336C  50F3               	movf	prodl,w,c
 16909  00336E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16910  003370  50F4               	movf	prodh,w,c
 16911  003372  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16912  003374  0E01               	movlw	1
 16913  003376  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16914  003378  6ED9               	movwf	fsr2l,c
 16915  00337A  0E00               	movlw	0
 16916  00337C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16917  00337E  6EDA               	movwf	fsr2h,c
 16918  003380  0102               	movlb	2	; () banked
 16919  003382  84DF               	bsf	indf2,2,c
 16920  003384                     l1153:
 16921                           
 16922                           ;lorawan_eu.c: 641: }
 16923                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16924  003384  0102               	movlb	2	; () banked
 16925  003386  51A7               	movf	(_loRa+167)& (0+255),w,b
 16926  003388  0D02               	mullw	2
 16927  00338A  0E00               	movlw	low _loRa
 16928  00338C  0100               	movlb	0	; () banked
 16929  00338E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16930  003390  0E02               	movlw	high _loRa
 16931  003392  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16932  003394  0EA8               	movlw	168
 16933  003396  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16934  003398  0E00               	movlw	0
 16935  00339A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16936  00339C  50F3               	movf	prodl,w,c
 16937  00339E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16938  0033A0  50F4               	movf	prodh,w,c
 16939  0033A2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16940  0033A4  0E01               	movlw	1
 16941  0033A6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16942  0033A8  6ED9               	movwf	fsr2l,c
 16943  0033AA  0E00               	movlw	0
 16944  0033AC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16945  0033AE  6EDA               	movwf	fsr2h,c
 16946  0033B0  0102               	movlb	2	; () banked
 16947  0033B2  A4DF               	btfss	indf2,2,c
 16948  0033B4  D0A6               	goto	l1157
 16949                           
 16950                           ; BSR set to: 2
 16951  0033B6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16952  0033B8  0D02               	mullw	2
 16953  0033BA  0E00               	movlw	low _loRa
 16954  0033BC  0100               	movlb	0	; () banked
 16955  0033BE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16956  0033C0  0E02               	movlw	high _loRa
 16957  0033C2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16958  0033C4  0EA8               	movlw	168
 16959  0033C6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16960  0033C8  0E00               	movlw	0
 16961  0033CA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16962  0033CC  50F3               	movf	prodl,w,c
 16963  0033CE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16964  0033D0  50F4               	movf	prodh,w,c
 16965  0033D2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16966  0033D4  0E01               	movlw	1
 16967  0033D6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16968  0033D8  6ED9               	movwf	fsr2l,c
 16969  0033DA  0E00               	movlw	0
 16970  0033DC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16971  0033DE  6EDA               	movwf	fsr2h,c
 16972  0033E0  0102               	movlb	2	; () banked
 16973  0033E2  A2DF               	btfss	indf2,1,c
 16974  0033E4  D08E               	goto	l1157
 16975                           
 16976                           ; BSR set to: 2
 16977  0033E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16978  0033E8  0D02               	mullw	2
 16979  0033EA  0E00               	movlw	low _loRa
 16980  0033EC  0100               	movlb	0	; () banked
 16981  0033EE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16982  0033F0  0E02               	movlw	high _loRa
 16983  0033F2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16984  0033F4  0EA8               	movlw	168
 16985  0033F6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16986  0033F8  0E00               	movlw	0
 16987  0033FA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16988  0033FC  50F3               	movf	prodl,w,c
 16989  0033FE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16990  003400  50F4               	movf	prodh,w,c
 16991  003402  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16992  003404  0E01               	movlw	1
 16993  003406  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16994  003408  6ED9               	movwf	fsr2l,c
 16995  00340A  0E00               	movlw	0
 16996  00340C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16997  00340E  6EDA               	movwf	fsr2h,c
 16998  003410  0102               	movlb	2	; () banked
 16999  003412  A0DF               	btfss	indf2,0,c
 17000  003414  D076               	goto	l1157
 17001                           
 17002                           ; BSR set to: 2
 17003                           ;lorawan_eu.c: 644: {
 17004                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 17005  003416  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17006  00341A  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17007  00341E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17008  003422  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17009  003426  0100               	movlb	0	; () banked
 17010  003428  38DF               	swapf	223,w,c
 17011  00342A  0B07               	andlw	7
 17012  00342C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17013  00342E  EC08  F045         	call	_EnableChannels	;wreg free
 17014                           
 17015                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 17016  003432  0100               	movlb	0	; () banked
 17017  003434  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17018  003436  ECFD  F045         	call	_UpdateTxPower
 17019                           
 17020                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 17021  00343A  0102               	movlb	2	; () banked
 17022  00343C  8903               	bsf	(_loRa+3)& (0+255),4,b
 17023                           
 17024                           ; BSR set to: 2
 17025                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 17026  00343E  0100               	movlb	0	; () banked
 17027  003440  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17028  003442  EC02  F046         	call	_UpdateCurrentDataRate
 17029                           
 17030                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 17031  003446  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17032  00344A  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17033  00344E  0100               	movlb	0	; () banked
 17034  003450  50DF               	movf	223,w,c
 17035  003452  0B0F               	andlw	15
 17036  003454  0900               	iorlw	0
 17037  003456  A4D8               	btfss	status,2,c
 17038  003458  D002               	goto	l1155
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;lorawan_eu.c: 652: {
 17042                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17043  00345A  0E00               	movlw	0
 17044  00345C  D009               	goto	L10
 17045  00345E                     l1155:
 17046                           
 17047                           ;lorawan_eu.c: 655: else
 17048                           ;lorawan_eu.c: 656: {
 17049                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 17050                           
 17051                           ; BSR set to: 2
 17052  00345E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17053  003462  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17054  003466  0100               	movlb	0	; () banked
 17055  003468  50DF               	movf	223,w,c
 17056  00346A  0B0F               	andlw	15
 17057  00346C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17058  00346E  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17059  003470                     L10:
 17060  003470  0102               	movlb	2	; () banked
 17061  003472  6FD6               	movwf	(_loRa+214)& (0+255),b
 17062                           
 17063                           ; BSR set to: 2
 17064                           ;lorawan_eu.c: 658: }
 17065                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 17066                           
 17067                           ; BSR set to: 2
 17068  003474  8B03               	bsf	(_loRa+3)& (0+255),5,b
 17069                           
 17070                           ; BSR set to: 2
 17071                           ;lorawan_eu.c: 660: }
 17072                           ;lorawan_eu.c: 661: }
 17073  003476  D045               	goto	l1157
 17074  003478                     l1150:
 17075                           
 17076                           ; BSR set to: 2
 17077                           ;lorawan_eu.c: 662: else
 17078                           ;lorawan_eu.c: 663: {
 17079                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 17080                           
 17081                           ; BSR set to: 2
 17082  003478  51A7               	movf	(_loRa+167)& (0+255),w,b
 17083  00347A  0D02               	mullw	2
 17084  00347C  0E00               	movlw	low _loRa
 17085  00347E  0100               	movlb	0	; () banked
 17086  003480  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17087  003482  0E02               	movlw	high _loRa
 17088  003484  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17089  003486  0EA8               	movlw	168
 17090  003488  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17091  00348A  0E00               	movlw	0
 17092  00348C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17093  00348E  50F3               	movf	prodl,w,c
 17094  003490  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17095  003492  50F4               	movf	prodh,w,c
 17096  003494  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17097  003496  0E01               	movlw	1
 17098  003498  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17099  00349A  6ED9               	movwf	fsr2l,c
 17100  00349C  0E00               	movlw	0
 17101  00349E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17102  0034A0  6EDA               	movwf	fsr2h,c
 17103  0034A2  0102               	movlb	2	; () banked
 17104  0034A4  90DF               	bcf	indf2,0,c
 17105                           
 17106                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17107  0034A6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17108  0034A8  0D02               	mullw	2
 17109  0034AA  0E00               	movlw	low _loRa
 17110  0034AC  0100               	movlb	0	; () banked
 17111  0034AE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17112  0034B0  0E02               	movlw	high _loRa
 17113  0034B2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17114  0034B4  0EA8               	movlw	168
 17115  0034B6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17116  0034B8  0E00               	movlw	0
 17117  0034BA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17118  0034BC  50F3               	movf	prodl,w,c
 17119  0034BE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17120  0034C0  50F4               	movf	prodh,w,c
 17121  0034C2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17122  0034C4  0E01               	movlw	1
 17123  0034C6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17124  0034C8  6ED9               	movwf	fsr2l,c
 17125  0034CA  0E00               	movlw	0
 17126  0034CC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17127  0034CE  6EDA               	movwf	fsr2h,c
 17128  0034D0  0102               	movlb	2	; () banked
 17129  0034D2  92DF               	bcf	indf2,1,c
 17130                           
 17131                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17132  0034D4  51A7               	movf	(_loRa+167)& (0+255),w,b
 17133  0034D6  0D02               	mullw	2
 17134  0034D8  0E00               	movlw	low _loRa
 17135  0034DA  0100               	movlb	0	; () banked
 17136  0034DC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17137  0034DE  0E02               	movlw	high _loRa
 17138  0034E0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 17139  0034E2  0EA8               	movlw	168
 17140  0034E4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17141  0034E6  0E00               	movlw	0
 17142  0034E8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17143  0034EA  50F3               	movf	prodl,w,c
 17144  0034EC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 17145  0034EE  50F4               	movf	prodh,w,c
 17146  0034F0  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 17147  0034F2  0E01               	movlw	1
 17148  0034F4  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 17149  0034F6  6ED9               	movwf	fsr2l,c
 17150  0034F8  0E00               	movlw	0
 17151  0034FA  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 17152  0034FC  6EDA               	movwf	fsr2h,c
 17153  0034FE  0102               	movlb	2	; () banked
 17154  003500  94DF               	bcf	indf2,2,c
 17155  003502                     l1157:
 17156                           
 17157                           ; BSR set to: 2
 17158                           ;lorawan_eu.c: 667: }
 17159                           ;lorawan_eu.c: 669: return ptr;
 17160                           
 17161                           ; BSR set to: 2
 17162  003502  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17163  003506  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17164  00350A  0012               	return	
 17165  00350C                     __end_of_ExecuteLinkAdr:
 17166                           	opt stack 0
 17167                           tosu	equ	0xFFF
 17168                           tosh	equ	0xFFE
 17169                           tosl	equ	0xFFD
 17170                           pclath	equ	0xFFA
 17171                           tblptru	equ	0xFF8
 17172                           tblptrh	equ	0xFF7
 17173                           tblptrl	equ	0xFF6
 17174                           tablat	equ	0xFF5
 17175                           prodh	equ	0xFF4
 17176                           prodl	equ	0xFF3
 17177                           intcon	equ	0xFF2
 17178                           intcon2	equ	0xFF1
 17179                           intcon3	equ	0xFF0
 17180                           indf0	equ	0xFEF
 17181                           postinc0	equ	0xFEE
 17182                           fsr0h	equ	0xFEA
 17183                           fsr0l	equ	0xFE9
 17184                           wreg	equ	0xFE8
 17185                           postinc1	equ	0xFE6
 17186                           postdec1	equ	0xFE5
 17187                           plusw1	equ	0xFE3
 17188                           fsr1h	equ	0xFE2
 17189                           fsr1l	equ	0xFE1
 17190                           indf2	equ	0xFDF
 17191                           postinc2	equ	0xFDE
 17192                           postdec2	equ	0xFDD
 17193                           plusw2	equ	0xFDB
 17194                           fsr2h	equ	0xFDA
 17195                           fsr2l	equ	0xFD9
 17196                           status	equ	0xFD8
 17197                           
 17198 ;; *************** function _ValidateTxPower *****************
 17199 ;; Defined at:
 17200 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;  txPowerNew      1    wreg     unsigned char 
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 17205 ;;  result          1    0[BANK0 ] enum E7249
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      enum E7249
 17208 ;; Registers used:
 17209 ;;		wreg, status,2, status,0
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/0
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17219 ;;Total ram usage:        2 bytes
 17220 ;; Hardware stack levels used:    1
 17221 ;; Hardware stack levels required when called:    7
 17222 ;; This function calls:
 17223 ;;		Nothing
 17224 ;; This function is called by:
 17225 ;;		_ExecuteLinkAdr
 17226 ;;		_LORAWAN_SetTxPower
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text79
 17231  008676                     __ptext79:
 17232                           	opt stack 0
 17233  008676                     _ValidateTxPower:
 17234                           	opt stack 17
 17235                           
 17236                           ; BSR set to: 2
 17237                           ;incstack = 0
 17238                           ;ValidateTxPower@txPowerNew stored from wreg
 17239  008676  0100               	movlb	0	; () banked
 17240  008678  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17241                           
 17242                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 17243  00867A  0E00               	movlw	0
 17244  00867C  0100               	movlb	0	; () banked
 17245  00867E  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17246                           
 17247                           ; BSR set to: 0
 17248                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17249  008680  0102               	movlb	2	; () banked
 17250  008682  51A4               	movf	(_loRa+164)& (0+255),w,b
 17251  008684  A4D8               	btfss	status,2,c
 17252  008686  D004               	goto	u15860
 17253                           
 17254                           ; BSR set to: 2
 17255  008688  0100               	movlb	0	; () banked
 17256  00868A  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17257  00868C  B4D8               	btfsc	status,2,c
 17258  00868E  D004               	goto	u15870
 17259  008690                     u15860:
 17260                           
 17261                           ; BSR set to: 0
 17262  008690  0E05               	movlw	5
 17263  008692  0100               	movlb	0	; () banked
 17264  008694  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17265  008696  D002               	goto	l1137
 17266  008698                     u15870:
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;lorawan_eu.c: 587: {
 17270                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 17271                           
 17272                           ; BSR set to: 0
 17273  008698  0E03               	movlw	3
 17274  00869A  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17275  00869C                     l1137:
 17276                           
 17277                           ; BSR set to: 0
 17278                           ;lorawan_eu.c: 589: }
 17279                           ;lorawan_eu.c: 591: return result;
 17280  00869C  5160               	movf	ValidateTxPower@result& (0+255),w,b
 17281  00869E  0012               	return	
 17282  0086A0                     __end_of_ValidateTxPower:
 17283                           	opt stack 0
 17284                           tosu	equ	0xFFF
 17285                           tosh	equ	0xFFE
 17286                           tosl	equ	0xFFD
 17287                           pclath	equ	0xFFA
 17288                           tblptru	equ	0xFF8
 17289                           tblptrh	equ	0xFF7
 17290                           tblptrl	equ	0xFF6
 17291                           tablat	equ	0xFF5
 17292                           prodh	equ	0xFF4
 17293                           prodl	equ	0xFF3
 17294                           intcon	equ	0xFF2
 17295                           intcon2	equ	0xFF1
 17296                           intcon3	equ	0xFF0
 17297                           indf0	equ	0xFEF
 17298                           postinc0	equ	0xFEE
 17299                           fsr0h	equ	0xFEA
 17300                           fsr0l	equ	0xFE9
 17301                           wreg	equ	0xFE8
 17302                           postinc1	equ	0xFE6
 17303                           postdec1	equ	0xFE5
 17304                           plusw1	equ	0xFE3
 17305                           fsr1h	equ	0xFE2
 17306                           fsr1l	equ	0xFE1
 17307                           indf2	equ	0xFDF
 17308                           postinc2	equ	0xFDE
 17309                           postdec2	equ	0xFDD
 17310                           plusw2	equ	0xFDB
 17311                           fsr2h	equ	0xFDA
 17312                           fsr2l	equ	0xFD9
 17313                           status	equ	0xFD8
 17314                           
 17315 ;; *************** function _ValidateDataRate *****************
 17316 ;; Defined at:
 17317 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17318 ;; Parameters:    Size  Location     Type
 17319 ;;  dataRate        1    wreg     unsigned char 
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17322 ;;  result          1    1[BANK0 ] enum E7249
 17323 ;; Return value:  Size  Location     Type
 17324 ;;                  1    wreg      enum E7249
 17325 ;; Registers used:
 17326 ;;		wreg, status,2, status,0
 17327 ;; Tracked objects:
 17328 ;;		On entry : 0/0
 17329 ;;		On exit  : 0/0
 17330 ;;		Unchanged: 0/0
 17331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17336 ;;Total ram usage:        2 bytes
 17337 ;; Hardware stack levels used:    1
 17338 ;; Hardware stack levels required when called:    7
 17339 ;; This function calls:
 17340 ;;		Nothing
 17341 ;; This function is called by:
 17342 ;;		_ExecuteLinkAdr
 17343 ;;		_ExecuteRxParamSetupReq
 17344 ;;		_ValidateDataRange
 17345 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17346 ;;		_LORAWAN_SetCurrentDataRate
 17347 ;; This function uses a non-reentrant model
 17348 ;;
 17349                           
 17350                           	psect	text80
 17351  008AAC                     __ptext80:
 17352                           	opt stack 0
 17353  008AAC                     _ValidateDataRate:
 17354                           	opt stack 17
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;incstack = 0
 17358                           ;ValidateDataRate@dataRate stored from wreg
 17359  008AAC  0100               	movlb	0	; () banked
 17360  008AAE  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 17361                           
 17362                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 17363  008AB0  0E00               	movlw	0
 17364  008AB2  0100               	movlb	0	; () banked
 17365  008AB4  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 17369  008AB6  0E07               	movlw	7
 17370  008AB8  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17371  008ABA  D002               	goto	l1133
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;lorawan_eu.c: 575: {
 17375                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 17376  008ABC  0E03               	movlw	3
 17377  008ABE  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17378  008AC0                     l1133:
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;lorawan_eu.c: 577: }
 17382                           ;lorawan_eu.c: 579: return result;
 17383  008AC0  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17384  008AC2  0012               	return	
 17385  008AC4                     __end_of_ValidateDataRate:
 17386                           	opt stack 0
 17387                           tosu	equ	0xFFF
 17388                           tosh	equ	0xFFE
 17389                           tosl	equ	0xFFD
 17390                           pclath	equ	0xFFA
 17391                           tblptru	equ	0xFF8
 17392                           tblptrh	equ	0xFF7
 17393                           tblptrl	equ	0xFF6
 17394                           tablat	equ	0xFF5
 17395                           prodh	equ	0xFF4
 17396                           prodl	equ	0xFF3
 17397                           intcon	equ	0xFF2
 17398                           intcon2	equ	0xFF1
 17399                           intcon3	equ	0xFF0
 17400                           indf0	equ	0xFEF
 17401                           postinc0	equ	0xFEE
 17402                           fsr0h	equ	0xFEA
 17403                           fsr0l	equ	0xFE9
 17404                           wreg	equ	0xFE8
 17405                           postinc1	equ	0xFE6
 17406                           postdec1	equ	0xFE5
 17407                           plusw1	equ	0xFE3
 17408                           fsr1h	equ	0xFE2
 17409                           fsr1l	equ	0xFE1
 17410                           indf2	equ	0xFDF
 17411                           postinc2	equ	0xFDE
 17412                           postdec2	equ	0xFDD
 17413                           plusw2	equ	0xFDB
 17414                           fsr2h	equ	0xFDA
 17415                           fsr2l	equ	0xFD9
 17416                           status	equ	0xFD8
 17417                           
 17418 ;; *************** function _ValidateChannelMaskCntl *****************
 17419 ;; Defined at:
 17420 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  channelMaskC    1    wreg     unsigned char 
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17425 ;;  result          1    0[BANK0 ] enum E7249
 17426 ;; Return value:  Size  Location     Type
 17427 ;;                  1    wreg      enum E7249
 17428 ;; Registers used:
 17429 ;;		wreg, status,2, status,0
 17430 ;; Tracked objects:
 17431 ;;		On entry : 0/0
 17432 ;;		On exit  : 0/0
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;Total ram usage:        2 bytes
 17440 ;; Hardware stack levels used:    1
 17441 ;; Hardware stack levels required when called:    7
 17442 ;; This function calls:
 17443 ;;		Nothing
 17444 ;; This function is called by:
 17445 ;;		_ExecuteLinkAdr
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text81
 17450  0088B6                     __ptext81:
 17451                           	opt stack 0
 17452  0088B6                     _ValidateChannelMaskCntl:
 17453                           	opt stack 17
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;incstack = 0
 17457                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17458  0088B6  0100               	movlb	0	; () banked
 17459  0088B8  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17460                           
 17461                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 17462  0088BA  0E00               	movlw	0
 17463  0088BC  0100               	movlb	0	; () banked
 17464  0088BE  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17468  0088C0  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17469  0088C2  B4D8               	btfsc	status,2,c
 17470  0088C4  D006               	goto	l1304
 17471                           
 17472                           ; BSR set to: 0
 17473  0088C6  0E06               	movlw	6
 17474  0088C8  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17475  0088CA  B4D8               	btfsc	status,2,c
 17476  0088CC  D002               	goto	l1304
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;lorawan_eu.c: 1142: {
 17480                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 17481  0088CE  0E03               	movlw	3
 17482  0088D0  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17483  0088D2                     l1304:
 17484                           
 17485                           ; BSR set to: 0
 17486                           ;lorawan_eu.c: 1144: }
 17487                           ;lorawan_eu.c: 1146: return result;
 17488  0088D2  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17489  0088D4  0012               	return	
 17490  0088D6                     __end_of_ValidateChannelMaskCntl:
 17491                           	opt stack 0
 17492                           tosu	equ	0xFFF
 17493                           tosh	equ	0xFFE
 17494                           tosl	equ	0xFFD
 17495                           pclath	equ	0xFFA
 17496                           tblptru	equ	0xFF8
 17497                           tblptrh	equ	0xFF7
 17498                           tblptrl	equ	0xFF6
 17499                           tablat	equ	0xFF5
 17500                           prodh	equ	0xFF4
 17501                           prodl	equ	0xFF3
 17502                           intcon	equ	0xFF2
 17503                           intcon2	equ	0xFF1
 17504                           intcon3	equ	0xFF0
 17505                           indf0	equ	0xFEF
 17506                           postinc0	equ	0xFEE
 17507                           fsr0h	equ	0xFEA
 17508                           fsr0l	equ	0xFE9
 17509                           wreg	equ	0xFE8
 17510                           postinc1	equ	0xFE6
 17511                           postdec1	equ	0xFE5
 17512                           plusw1	equ	0xFE3
 17513                           fsr1h	equ	0xFE2
 17514                           fsr1l	equ	0xFE1
 17515                           indf2	equ	0xFDF
 17516                           postinc2	equ	0xFDE
 17517                           postdec2	equ	0xFDD
 17518                           plusw2	equ	0xFDB
 17519                           fsr2h	equ	0xFDA
 17520                           fsr2l	equ	0xFD9
 17521                           status	equ	0xFD8
 17522                           
 17523 ;; *************** function _ValidateChannelMask *****************
 17524 ;; Defined at:
 17525 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;  i               1    4[BANK0 ] unsigned char 
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      enum E7249
 17532 ;; Registers used:
 17533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/0
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;Total ram usage:        5 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:    7
 17546 ;; This function calls:
 17547 ;;		Nothing
 17548 ;; This function is called by:
 17549 ;;		_ExecuteLinkAdr
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text82
 17554  007AA4                     __ptext82:
 17555                           	opt stack 0
 17556  007AA4                     _ValidateChannelMask:
 17557                           	opt stack 17
 17558                           
 17559                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;incstack = 0
 17563  007AA4  0E00               	movlw	0
 17564  007AA6  0100               	movlb	0	; () banked
 17565  007AA8  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 17569  007AAA  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17570  007AAC  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17571  007AAE  B4D8               	btfsc	status,2,c
 17572  007AB0  D026               	goto	l1317
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;lorawan_eu.c: 1171: {
 17576                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 17577  007AB2  0E00               	movlw	0
 17578  007AB4  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17579  007AB6                     l13767:
 17580                           
 17581                           ; BSR set to: 0
 17582  007AB6  0E0F               	movlw	15
 17583  007AB8  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17584  007ABA  D001               	goto	l1318
 17585  007ABC  D01E               	goto	u15940
 17586  007ABE                     l1318:
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;lorawan_eu.c: 1173: {
 17590                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 17591  007ABE  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17592  007AC0  D013               	goto	l1320
 17593                           
 17594                           ; BSR set to: 0
 17595  007AC2  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 17596  007AC4  0D0E               	mullw	14
 17597  007AC6  0E0D               	movlw	13
 17598  007AC8  26F3               	addwf	prodl,f,c
 17599  007ACA  0E00               	movlw	0
 17600  007ACC  22F4               	addwfc	prodh,f,c
 17601  007ACE  0E00               	movlw	low _Channels
 17602  007AD0  24F3               	addwf	prodl,w,c
 17603  007AD2  6ED9               	movwf	fsr2l,c
 17604  007AD4  0E04               	movlw	high _Channels
 17605  007AD6  20F4               	addwfc	prodh,w,c
 17606  007AD8  6EDA               	movwf	fsr2h,c
 17607  007ADA  50DF               	movf	indf2,w,c
 17608  007ADC  0B07               	andlw	7
 17609  007ADE  0A07               	xorlw	7
 17610  007AE0  B4D8               	btfsc	status,2,c
 17611  007AE2  D002               	goto	l1320
 17612                           
 17613                           ; BSR set to: 0
 17614                           ;lorawan_eu.c: 1175: {
 17615                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 17616  007AE4  0E03               	movlw	3
 17617                           
 17618                           ; BSR set to: 0
 17619  007AE6  0012               	return	
 17620  007AE8                     l1320:
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;lorawan_eu.c: 1178: else
 17624                           ;lorawan_eu.c: 1179: {
 17625                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 17626                           
 17627                           ; BSR set to: 0
 17628  007AE8  90D8               	bcf	status,0,c
 17629  007AEA  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17630  007AEC  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 17631  007AEE  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17632  007AF0  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 17633  007AF2  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17634                           
 17635                           ; BSR set to: 0
 17636                           
 17637                           ; BSR set to: 0
 17638  007AF6  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 17639  007AF8  D7DE               	goto	l13767
 17640  007AFA                     u15940:
 17641                           
 17642                           ; BSR set to: 0
 17643                           ;lorawan_eu.c: 1181: }
 17644                           ;lorawan_eu.c: 1182: }
 17645                           ;lorawan_eu.c: 1184: return OK;
 17646                           
 17647                           ; BSR set to: 0
 17648  007AFA  0E00               	movlw	0
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;lorawan_eu.c: 1185: }
 17652                           
 17653                           ; BSR set to: 0
 17654  007AFC  0012               	return	
 17655  007AFE                     l1317:
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;lorawan_eu.c: 1186: else
 17659                           ;lorawan_eu.c: 1187: {
 17660                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 17661                           
 17662                           ; BSR set to: 0
 17663  007AFE  0E03               	movlw	3
 17664                           
 17665                           ; BSR set to: 0
 17666  007B00  0012               	return	
 17667  007B02                     __end_of_ValidateChannelMask:
 17668                           	opt stack 0
 17669                           tosu	equ	0xFFF
 17670                           tosh	equ	0xFFE
 17671                           tosl	equ	0xFFD
 17672                           pclath	equ	0xFFA
 17673                           tblptru	equ	0xFF8
 17674                           tblptrh	equ	0xFF7
 17675                           tblptrl	equ	0xFF6
 17676                           tablat	equ	0xFF5
 17677                           prodh	equ	0xFF4
 17678                           prodl	equ	0xFF3
 17679                           intcon	equ	0xFF2
 17680                           intcon2	equ	0xFF1
 17681                           intcon3	equ	0xFF0
 17682                           indf0	equ	0xFEF
 17683                           postinc0	equ	0xFEE
 17684                           fsr0h	equ	0xFEA
 17685                           fsr0l	equ	0xFE9
 17686                           wreg	equ	0xFE8
 17687                           postinc1	equ	0xFE6
 17688                           postdec1	equ	0xFE5
 17689                           plusw1	equ	0xFE3
 17690                           fsr1h	equ	0xFE2
 17691                           fsr1l	equ	0xFE1
 17692                           indf2	equ	0xFDF
 17693                           postinc2	equ	0xFDE
 17694                           postdec2	equ	0xFDD
 17695                           plusw2	equ	0xFDB
 17696                           fsr2h	equ	0xFDA
 17697                           fsr2l	equ	0xFD9
 17698                           status	equ	0xFD8
 17699                           
 17700 ;; *************** function _UpdateTxPower *****************
 17701 ;; Defined at:
 17702 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17703 ;; Parameters:    Size  Location     Type
 17704 ;;  txPowerNew      1    wreg     unsigned char 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  1    wreg      void 
 17709 ;; Registers used:
 17710 ;;		wreg
 17711 ;; Tracked objects:
 17712 ;;		On entry : 0/0
 17713 ;;		On exit  : 0/0
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17720 ;;Total ram usage:        1 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:    7
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_ExecuteLinkAdr
 17727 ;;		_LORAWAN_SetTxPower
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           	psect	text83
 17732  008BFA                     __ptext83:
 17733                           	opt stack 0
 17734  008BFA                     _UpdateTxPower:
 17735                           	opt stack 17
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;incstack = 0
 17739                           ;UpdateTxPower@txPowerNew stored from wreg
 17740  008BFA  0100               	movlb	0	; () banked
 17741  008BFC  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17742                           
 17743                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17744  008BFE  C060  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17745  008C02  0012               	return		;funcret
 17746  008C04                     __end_of_UpdateTxPower:
 17747                           	opt stack 0
 17748                           tosu	equ	0xFFF
 17749                           tosh	equ	0xFFE
 17750                           tosl	equ	0xFFD
 17751                           pclath	equ	0xFFA
 17752                           tblptru	equ	0xFF8
 17753                           tblptrh	equ	0xFF7
 17754                           tblptrl	equ	0xFF6
 17755                           tablat	equ	0xFF5
 17756                           prodh	equ	0xFF4
 17757                           prodl	equ	0xFF3
 17758                           intcon	equ	0xFF2
 17759                           intcon2	equ	0xFF1
 17760                           intcon3	equ	0xFF0
 17761                           indf0	equ	0xFEF
 17762                           postinc0	equ	0xFEE
 17763                           fsr0h	equ	0xFEA
 17764                           fsr0l	equ	0xFE9
 17765                           wreg	equ	0xFE8
 17766                           postinc1	equ	0xFE6
 17767                           postdec1	equ	0xFE5
 17768                           plusw1	equ	0xFE3
 17769                           fsr1h	equ	0xFE2
 17770                           fsr1l	equ	0xFE1
 17771                           indf2	equ	0xFDF
 17772                           postinc2	equ	0xFDE
 17773                           postdec2	equ	0xFDD
 17774                           plusw2	equ	0xFDB
 17775                           fsr2h	equ	0xFDA
 17776                           fsr2l	equ	0xFD9
 17777                           status	equ	0xFD8
 17778                           
 17779 ;; *************** function _UpdateCurrentDataRate *****************
 17780 ;; Defined at:
 17781 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17782 ;; Parameters:    Size  Location     Type
 17783 ;;  valueNew        1    wreg     unsigned char 
 17784 ;; Auto vars:     Size  Location     Type
 17785 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17786 ;; Return value:  Size  Location     Type
 17787 ;;                  1    wreg      void 
 17788 ;; Registers used:
 17789 ;;		wreg
 17790 ;; Tracked objects:
 17791 ;;		On entry : 0/0
 17792 ;;		On exit  : 0/0
 17793 ;;		Unchanged: 0/0
 17794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17798 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17799 ;;Total ram usage:        1 bytes
 17800 ;; Hardware stack levels used:    1
 17801 ;; Hardware stack levels required when called:    7
 17802 ;; This function calls:
 17803 ;;		Nothing
 17804 ;; This function is called by:
 17805 ;;		_ExecuteLinkAdr
 17806 ;;		_LORAWAN_SetCurrentDataRate
 17807 ;; This function uses a non-reentrant model
 17808 ;;
 17809                           
 17810                           	psect	text84
 17811  008C04                     __ptext84:
 17812                           	opt stack 0
 17813  008C04                     _UpdateCurrentDataRate:
 17814                           	opt stack 17
 17815                           
 17816                           ;incstack = 0
 17817                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17818  008C04  0100               	movlb	0	; () banked
 17819  008C06  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17820                           
 17821                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17822  008C08  C060  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17823  008C0C  0012               	return		;funcret
 17824  008C0E                     __end_of_UpdateCurrentDataRate:
 17825                           	opt stack 0
 17826                           tosu	equ	0xFFF
 17827                           tosh	equ	0xFFE
 17828                           tosl	equ	0xFFD
 17829                           pclath	equ	0xFFA
 17830                           tblptru	equ	0xFF8
 17831                           tblptrh	equ	0xFF7
 17832                           tblptrl	equ	0xFF6
 17833                           tablat	equ	0xFF5
 17834                           prodh	equ	0xFF4
 17835                           prodl	equ	0xFF3
 17836                           intcon	equ	0xFF2
 17837                           intcon2	equ	0xFF1
 17838                           intcon3	equ	0xFF0
 17839                           indf0	equ	0xFEF
 17840                           postinc0	equ	0xFEE
 17841                           fsr0h	equ	0xFEA
 17842                           fsr0l	equ	0xFE9
 17843                           wreg	equ	0xFE8
 17844                           postinc1	equ	0xFE6
 17845                           postdec1	equ	0xFE5
 17846                           plusw1	equ	0xFE3
 17847                           fsr1h	equ	0xFE2
 17848                           fsr1l	equ	0xFE1
 17849                           indf2	equ	0xFDF
 17850                           postinc2	equ	0xFDE
 17851                           postdec2	equ	0xFDD
 17852                           plusw2	equ	0xFDB
 17853                           fsr2h	equ	0xFDA
 17854                           fsr2l	equ	0xFD9
 17855                           status	equ	0xFD8
 17856                           
 17857 ;; *************** function _EnableChannels *****************
 17858 ;; Defined at:
 17859 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17862 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17863 ;; Auto vars:     Size  Location     Type
 17864 ;;		None
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  1    wreg      void 
 17867 ;; Registers used:
 17868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17878 ;;Total ram usage:        3 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:    9
 17881 ;; This function calls:
 17882 ;;		_EnableChannels1
 17883 ;; This function is called by:
 17884 ;;		_ExecuteLinkAdr
 17885 ;; This function uses a non-reentrant model
 17886 ;;
 17887                           
 17888                           	psect	text85
 17889  008A10                     __ptext85:
 17890                           	opt stack 0
 17891  008A10                     _EnableChannels:
 17892                           	opt stack 15
 17893                           
 17894                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17895                           
 17896                           ;incstack = 0
 17897  008A10  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17898  008A14  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17899  008A18  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17900  008A1C  0E00               	movlw	0
 17901  008A1E  0100               	movlb	0	; () banked
 17902  008A20  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 17903  008A22  0E10               	movlw	16
 17904  008A24  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17905  008A26  ECF0  F03A         	call	_EnableChannels1	;wreg free
 17906  008A2A  0012               	return		;funcret
 17907  008A2C                     __end_of_EnableChannels:
 17908                           	opt stack 0
 17909                           tosu	equ	0xFFF
 17910                           tosh	equ	0xFFE
 17911                           tosl	equ	0xFFD
 17912                           pclath	equ	0xFFA
 17913                           tblptru	equ	0xFF8
 17914                           tblptrh	equ	0xFF7
 17915                           tblptrl	equ	0xFF6
 17916                           tablat	equ	0xFF5
 17917                           prodh	equ	0xFF4
 17918                           prodl	equ	0xFF3
 17919                           intcon	equ	0xFF2
 17920                           intcon2	equ	0xFF1
 17921                           intcon3	equ	0xFF0
 17922                           indf0	equ	0xFEF
 17923                           postinc0	equ	0xFEE
 17924                           fsr0h	equ	0xFEA
 17925                           fsr0l	equ	0xFE9
 17926                           wreg	equ	0xFE8
 17927                           postinc1	equ	0xFE6
 17928                           postdec1	equ	0xFE5
 17929                           plusw1	equ	0xFE3
 17930                           fsr1h	equ	0xFE2
 17931                           fsr1l	equ	0xFE1
 17932                           indf2	equ	0xFDF
 17933                           postinc2	equ	0xFDE
 17934                           postdec2	equ	0xFDD
 17935                           plusw2	equ	0xFDB
 17936                           fsr2h	equ	0xFDA
 17937                           fsr2l	equ	0xFD9
 17938                           status	equ	0xFD8
 17939                           
 17940 ;; *************** function _EnableChannels1 *****************
 17941 ;; Defined at:
 17942 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17943 ;; Parameters:    Size  Location     Type
 17944 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17945 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 17946 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 17947 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;  i               1   11[BANK0 ] unsigned char 
 17950 ;; Return value:  Size  Location     Type
 17951 ;;                  1    wreg      void 
 17952 ;; Registers used:
 17953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17954 ;; Tracked objects:
 17955 ;;		On entry : 0/0
 17956 ;;		On exit  : 0/0
 17957 ;;		Unchanged: 0/0
 17958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17959 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17963 ;;Total ram usage:        8 bytes
 17964 ;; Hardware stack levels used:    1
 17965 ;; Hardware stack levels required when called:    8
 17966 ;; This function calls:
 17967 ;;		_UpdateChannelIdStatus
 17968 ;; This function is called by:
 17969 ;;		_EnableChannels
 17970 ;; This function uses a non-reentrant model
 17971 ;;
 17972                           
 17973                           	psect	text86
 17974  0075E0                     __ptext86:
 17975                           	opt stack 0
 17976  0075E0                     _EnableChannels1:
 17977                           	opt stack 15
 17978                           
 17979                           ;lorawan_eu.c: 1195: uint8_t i;
 17980                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 17981                           
 17982                           ;incstack = 0
 17983  0075E0  0E06               	movlw	6
 17984  0075E2  0100               	movlb	0	; () banked
 17985  0075E4  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17986  0075E6  A4D8               	btfss	status,2,c
 17987  0075E8  D00F               	goto	l1326
 17988                           
 17989                           ; BSR set to: 0
 17990                           ;lorawan_eu.c: 1198: {
 17991                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17992  0075EA  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17993  0075EE  D007               	goto	l1327
 17994  0075F0                     
 17995                           ; BSR set to: 0
 17996                           ;lorawan_eu.c: 1200: {
 17997                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 17998                           
 17999                           ; BSR set to: 0
 18000  0075F0  0E01               	movlw	1
 18001  0075F2  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18002  0075F4  516B               	movf	EnableChannels1@i& (0+255),w,b
 18003  0075F6  EC98  F027         	call	_UpdateChannelIdStatus
 18004  0075FA  0100               	movlb	0	; () banked
 18005  0075FC  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18006  0075FE                     l1327:
 18007                           
 18008                           ; BSR set to: 0
 18009                           
 18010                           ; BSR set to: 0
 18011  0075FE  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18012  007600  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18013  007602  B0D8               	btfsc	status,0,c
 18014  007604  0012               	return	
 18015  007606  D7F4               	goto	l1328
 18016  007608                     l1326:
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 18020                           
 18021                           ; BSR set to: 0
 18022  007608  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18023  00760A  A4D8               	btfss	status,2,c
 18024  00760C  0012               	return	
 18025                           
 18026                           ; BSR set to: 0
 18027                           ;lorawan_eu.c: 1205: {
 18028                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 18029  00760E  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18030  007612  D017               	goto	l1332
 18031  007614                     l1333:
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;lorawan_eu.c: 1207: {
 18035                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 18036  007614  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 18037  007616  D006               	goto	l1334
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;lorawan_eu.c: 1209: {
 18041                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 18042  007618  0E01               	movlw	1
 18043  00761A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18044  00761C  516B               	movf	EnableChannels1@i& (0+255),w,b
 18045  00761E  EC98  F027         	call	_UpdateChannelIdStatus
 18046                           
 18047                           ;lorawan_eu.c: 1211: }
 18048  007622  D006               	goto	l1335
 18049  007624                     l1334:
 18050                           
 18051                           ;lorawan_eu.c: 1212: else
 18052                           ;lorawan_eu.c: 1213: {
 18053                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 18054  007624  0E00               	movlw	0
 18055  007626  0100               	movlb	0	; () banked
 18056  007628  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18057  00762A  516B               	movf	EnableChannels1@i& (0+255),w,b
 18058  00762C  EC98  F027         	call	_UpdateChannelIdStatus
 18059  007630                     l1335:
 18060                           
 18061                           ;lorawan_eu.c: 1215: }
 18062                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 18063  007630  90D8               	bcf	status,0,c
 18064  007632  0100               	movlb	0	; () banked
 18065  007634  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 18066  007636  6F69               	movwf	??_EnableChannels1& (0+255),b
 18067  007638  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 18068  00763A  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 18069  00763C  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 18070                           
 18071                           ; BSR set to: 0
 18072  007640  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18073  007642                     l1332:
 18074                           
 18075                           ; BSR set to: 0
 18076                           
 18077                           ; BSR set to: 0
 18078  007642  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18079  007644  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18080  007646  B0D8               	btfsc	status,0,c
 18081  007648  0012               	return	
 18082  00764A  D7E4               	goto	l1333
 18083  00764C                     __end_of_EnableChannels1:
 18084                           	opt stack 0
 18085                           tosu	equ	0xFFF
 18086                           tosh	equ	0xFFE
 18087                           tosl	equ	0xFFD
 18088                           pclath	equ	0xFFA
 18089                           tblptru	equ	0xFF8
 18090                           tblptrh	equ	0xFF7
 18091                           tblptrl	equ	0xFF6
 18092                           tablat	equ	0xFF5
 18093                           prodh	equ	0xFF4
 18094                           prodl	equ	0xFF3
 18095                           intcon	equ	0xFF2
 18096                           intcon2	equ	0xFF1
 18097                           intcon3	equ	0xFF0
 18098                           indf0	equ	0xFEF
 18099                           postinc0	equ	0xFEE
 18100                           fsr0h	equ	0xFEA
 18101                           fsr0l	equ	0xFE9
 18102                           wreg	equ	0xFE8
 18103                           postinc1	equ	0xFE6
 18104                           postdec1	equ	0xFE5
 18105                           plusw1	equ	0xFE3
 18106                           fsr1h	equ	0xFE2
 18107                           fsr1l	equ	0xFE1
 18108                           indf2	equ	0xFDF
 18109                           postinc2	equ	0xFDE
 18110                           postdec2	equ	0xFDD
 18111                           plusw2	equ	0xFDB
 18112                           fsr2h	equ	0xFDA
 18113                           fsr2l	equ	0xFD9
 18114                           status	equ	0xFD8
 18115                           
 18116 ;; *************** function _UpdateChannelIdStatus *****************
 18117 ;; Defined at:
 18118 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18119 ;; Parameters:    Size  Location     Type
 18120 ;;  channelId       1    wreg     unsigned char 
 18121 ;;  statusNew       1    0[BANK0 ] unsigned char 
 18122 ;; Auto vars:     Size  Location     Type
 18123 ;;  channelId       1    2[BANK0 ] unsigned char 
 18124 ;;  i               1    3[BANK0 ] unsigned char 
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1    wreg      void 
 18127 ;; Registers used:
 18128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18134 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18138 ;;Total ram usage:        4 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    7
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_LORAWAN_SetChannelIdStatus
 18145 ;;		_ExecuteNewChannel
 18146 ;;		_EnableChannels1
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text87
 18151  004F30                     __ptext87:
 18152                           	opt stack 0
 18153  004F30                     _UpdateChannelIdStatus:
 18154                           	opt stack 17
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;incstack = 0
 18158                           ;UpdateChannelIdStatus@channelId stored from wreg
 18159  004F30  0100               	movlb	0	; () banked
 18160  004F32  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18161                           
 18162                           ;lorawan_eu.c: 1044: uint8_t i;
 18163                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 18164  004F34  0100               	movlb	0	; () banked
 18165  004F36  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18166  004F38  0D0E               	mullw	14
 18167  004F3A  0E04               	movlw	4
 18168  004F3C  26F3               	addwf	prodl,f,c
 18169  004F3E  0E00               	movlw	0
 18170  004F40  22F4               	addwfc	prodh,f,c
 18171  004F42  0E00               	movlw	low _Channels
 18172  004F44  24F3               	addwf	prodl,w,c
 18173  004F46  6ED9               	movwf	fsr2l,c
 18174  004F48  0E04               	movlw	high _Channels
 18175  004F4A  20F4               	addwfc	prodh,w,c
 18176  004F4C  6EDA               	movwf	fsr2h,c
 18177  004F4E  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18178                           
 18179                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 18180  004F52  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18181  004F54  0D0E               	mullw	14
 18182  004F56  0E04               	movlw	4
 18183  004F58  26F3               	addwf	prodl,f,c
 18184  004F5A  0E00               	movlw	0
 18185  004F5C  22F4               	addwfc	prodh,f,c
 18186  004F5E  0E00               	movlw	low _Channels
 18187  004F60  24F3               	addwf	prodl,w,c
 18188  004F62  6ED9               	movwf	fsr2l,c
 18189  004F64  0E04               	movlw	high _Channels
 18190  004F66  20F4               	addwfc	prodh,w,c
 18191  004F68  6EDA               	movwf	fsr2h,c
 18192  004F6A  50DF               	movf	indf2,w,c
 18193  004F6C  A4D8               	btfss	status,2,c
 18194  004F6E  D010               	goto	l1266
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;lorawan_eu.c: 1048: {
 18198                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 18199  004F70  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18200  004F72  0D0E               	mullw	14
 18201  004F74  0E08               	movlw	8
 18202  004F76  26F3               	addwf	prodl,f,c
 18203  004F78  0E00               	movlw	0
 18204  004F7A  22F4               	addwfc	prodh,f,c
 18205  004F7C  0E00               	movlw	low _Channels
 18206  004F7E  24F3               	addwf	prodl,w,c
 18207  004F80  6ED9               	movwf	fsr2l,c
 18208  004F82  0E04               	movlw	high _Channels
 18209  004F84  20F4               	addwfc	prodh,w,c
 18210  004F86  6EDA               	movwf	fsr2h,c
 18211  004F88  6ADE               	clrf	postinc2,c
 18212  004F8A  6ADE               	clrf	postinc2,c
 18213  004F8C  6ADE               	clrf	postinc2,c
 18214  004F8E  6ADD               	clrf	postdec2,c
 18215  004F90                     l1266:
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;lorawan_eu.c: 1051: }
 18219                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 18220                           
 18221                           ; BSR set to: 0
 18222  004F90  0E00               	movlw	0
 18223  004F92  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 18224  004F94  D06D               	goto	l1267
 18225  004F96                     
 18226                           ; BSR set to: 0
 18227                           ;lorawan_eu.c: 1054: {
 18228                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 18229                           
 18230                           ; BSR set to: 0
 18231  004F96  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18232  004F98  0D0E               	mullw	14
 18233  004F9A  0E05               	movlw	5
 18234  004F9C  26F3               	addwf	prodl,f,c
 18235  004F9E  0E00               	movlw	0
 18236  004FA0  22F4               	addwfc	prodh,f,c
 18237  004FA2  0E00               	movlw	low _Channels
 18238  004FA4  24F3               	addwf	prodl,w,c
 18239  004FA6  6ED9               	movwf	fsr2l,c
 18240  004FA8  0E04               	movlw	high _Channels
 18241  004FAA  20F4               	addwfc	prodh,w,c
 18242  004FAC  6EDA               	movwf	fsr2h,c
 18243  004FAE  0104               	movlb	4	; () banked
 18244  004FB0  50DF               	movf	223,w,c
 18245  004FB2  0B0F               	andlw	15
 18246  004FB4  0100               	movlb	0	; () banked
 18247  004FB6  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18248  004FB8  0102               	movlb	2	; () banked
 18249  004FBA  51EB               	movf	(_loRa+235)& (0+255),w,b
 18250  004FBC  0100               	movlb	0	; () banked
 18251  004FBE  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18252  004FC0  B0D8               	btfsc	status,0,c
 18253  004FC2  D020               	goto	l1269
 18254                           
 18255                           ; BSR set to: 0
 18256  004FC4  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18257  004FC6  0D0E               	mullw	14
 18258  004FC8  0E04               	movlw	4
 18259  004FCA  26F3               	addwf	prodl,f,c
 18260  004FCC  0E00               	movlw	0
 18261  004FCE  22F4               	addwfc	prodh,f,c
 18262  004FD0  0E00               	movlw	low _Channels
 18263  004FD2  24F3               	addwf	prodl,w,c
 18264  004FD4  6ED9               	movwf	fsr2l,c
 18265  004FD6  0E04               	movlw	high _Channels
 18266  004FD8  20F4               	addwfc	prodh,w,c
 18267  004FDA  6EDA               	movwf	fsr2h,c
 18268  004FDC  04DE               	decf	postinc2,w,c
 18269  004FDE  A4D8               	btfss	status,2,c
 18270  004FE0  D011               	goto	l1269
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;lorawan_eu.c: 1056: {
 18274                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 18275  004FE2  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18276  004FE4  0D0E               	mullw	14
 18277  004FE6  0E05               	movlw	5
 18278  004FE8  26F3               	addwf	prodl,f,c
 18279  004FEA  0E00               	movlw	0
 18280  004FEC  22F4               	addwfc	prodh,f,c
 18281  004FEE  0E00               	movlw	low _Channels
 18282  004FF0  24F3               	addwf	prodl,w,c
 18283  004FF2  6ED9               	movwf	fsr2l,c
 18284  004FF4  0E04               	movlw	high _Channels
 18285  004FF6  20F4               	addwfc	prodh,w,c
 18286  004FF8  6EDA               	movwf	fsr2h,c
 18287  004FFA  0104               	movlb	4	; () banked
 18288  004FFC  50DF               	movf	223,w,c
 18289  004FFE  0B0F               	andlw	15
 18290  005000  0102               	movlb	2	; () banked
 18291  005002  6FEB               	movwf	(_loRa+235)& (0+255),b
 18292  005004                     l1269:
 18293                           
 18294                           ;lorawan_eu.c: 1058: }
 18295                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 18296  005004  0100               	movlb	0	; () banked
 18297  005006  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18298  005008  0D0E               	mullw	14
 18299  00500A  0E05               	movlw	5
 18300  00500C  26F3               	addwf	prodl,f,c
 18301  00500E  0E00               	movlw	0
 18302  005010  22F4               	addwfc	prodh,f,c
 18303  005012  0E00               	movlw	low _Channels
 18304  005014  24F3               	addwf	prodl,w,c
 18305  005016  6ED9               	movwf	fsr2l,c
 18306  005018  0E04               	movlw	high _Channels
 18307  00501A  20F4               	addwfc	prodh,w,c
 18308  00501C  6EDA               	movwf	fsr2h,c
 18309  00501E  0104               	movlb	4	; () banked
 18310  005020  38DF               	swapf	223,w,c
 18311  005022  0B0F               	andlw	15
 18312  005024  0102               	movlb	2	; () banked
 18313  005026  61EC               	cpfslt	(_loRa+236)& (0+255),b
 18314  005028  D021               	goto	l1270
 18315                           
 18316                           ; BSR set to: 2
 18317  00502A  0100               	movlb	0	; () banked
 18318  00502C  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18319  00502E  0D0E               	mullw	14
 18320  005030  0E04               	movlw	4
 18321  005032  26F3               	addwf	prodl,f,c
 18322  005034  0E00               	movlw	0
 18323  005036  22F4               	addwfc	prodh,f,c
 18324  005038  0E00               	movlw	low _Channels
 18325  00503A  24F3               	addwf	prodl,w,c
 18326  00503C  6ED9               	movwf	fsr2l,c
 18327  00503E  0E04               	movlw	high _Channels
 18328  005040  20F4               	addwfc	prodh,w,c
 18329  005042  6EDA               	movwf	fsr2h,c
 18330  005044  04DE               	decf	postinc2,w,c
 18331  005046  A4D8               	btfss	status,2,c
 18332  005048  D011               	goto	l1270
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;lorawan_eu.c: 1060: {
 18336                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 18337  00504A  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18338  00504C  0D0E               	mullw	14
 18339  00504E  0E05               	movlw	5
 18340  005050  26F3               	addwf	prodl,f,c
 18341  005052  0E00               	movlw	0
 18342  005054  22F4               	addwfc	prodh,f,c
 18343  005056  0E00               	movlw	low _Channels
 18344  005058  24F3               	addwf	prodl,w,c
 18345  00505A  6ED9               	movwf	fsr2l,c
 18346  00505C  0E04               	movlw	high _Channels
 18347  00505E  20F4               	addwfc	prodh,w,c
 18348  005060  6EDA               	movwf	fsr2h,c
 18349  005062  0104               	movlb	4	; () banked
 18350  005064  38DF               	swapf	223,w,c
 18351  005066  0B0F               	andlw	15
 18352  005068  0102               	movlb	2	; () banked
 18353  00506A  6FEC               	movwf	(_loRa+236)& (0+255),b
 18354  00506C                     l1270:
 18355                           
 18356                           ; BSR set to: 2
 18357  00506C  0100               	movlb	0	; () banked
 18358  00506E  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18359  005070                     l1267:
 18360                           
 18361                           ; BSR set to: 0
 18362                           
 18363                           ; BSR set to: 0
 18364  005070  0102               	movlb	2	; () banked
 18365  005072  51ED               	movf	(_loRa+237)& (0+255),w,b
 18366  005074  0100               	movlb	0	; () banked
 18367  005076  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18368  005078  A0D8               	btfss	status,0,c
 18369  00507A  D78D               	goto	l1268
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;lorawan_eu.c: 1062: }
 18373                           ;lorawan_eu.c: 1063: }
 18374                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 18375                           
 18376                           ; BSR set to: 0
 18377  00507C  0102               	movlb	2	; () banked
 18378  00507E  51DF               	movf	(_loRa+223)& (0+255),w,b
 18379  005080  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18380  005082  A0D8               	btfss	status,0,c
 18381                           
 18382                           ; BSR set to: 2
 18383                           ;lorawan_eu.c: 1066: {
 18384                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 18385  005084  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 18386                           
 18387                           ; BSR set to: 2
 18388                           ;lorawan_eu.c: 1068: }
 18389                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 18390                           
 18391                           ; BSR set to: 2
 18392  005088  51EB               	movf	(_loRa+235)& (0+255),w,b
 18393  00508A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 18394  00508C  B0D8               	btfsc	status,0,c
 18395  00508E  0012               	return	
 18396                           
 18397                           ; BSR set to: 2
 18398                           ;lorawan_eu.c: 1071: {
 18399                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 18400  005090  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 18401  005094  0012               	return	
 18402  005096                     __end_of_UpdateChannelIdStatus:
 18403                           	opt stack 0
 18404                           tosu	equ	0xFFF
 18405                           tosh	equ	0xFFE
 18406                           tosl	equ	0xFFD
 18407                           pclath	equ	0xFFA
 18408                           tblptru	equ	0xFF8
 18409                           tblptrh	equ	0xFF7
 18410                           tblptrl	equ	0xFF6
 18411                           tablat	equ	0xFF5
 18412                           prodh	equ	0xFF4
 18413                           prodl	equ	0xFF3
 18414                           intcon	equ	0xFF2
 18415                           intcon2	equ	0xFF1
 18416                           intcon3	equ	0xFF0
 18417                           indf0	equ	0xFEF
 18418                           postinc0	equ	0xFEE
 18419                           fsr0h	equ	0xFEA
 18420                           fsr0l	equ	0xFE9
 18421                           wreg	equ	0xFE8
 18422                           postinc1	equ	0xFE6
 18423                           postdec1	equ	0xFE5
 18424                           plusw1	equ	0xFE3
 18425                           fsr1h	equ	0xFE2
 18426                           fsr1l	equ	0xFE1
 18427                           indf2	equ	0xFDF
 18428                           postinc2	equ	0xFDE
 18429                           postdec2	equ	0xFDD
 18430                           plusw2	equ	0xFDB
 18431                           fsr2h	equ	0xFDA
 18432                           fsr2l	equ	0xFD9
 18433                           status	equ	0xFD8
 18434                           
 18435 ;; *************** function _ExecuteDutyCycle *****************
 18436 ;; Defined at:
 18437 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18440 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18441 ;; Auto vars:     Size  Location     Type
 18442 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;                  2    0[BANK0 ] PTR unsigned char 
 18445 ;; Registers used:
 18446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18447 ;; Tracked objects:
 18448 ;;		On entry : 0/0
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18454 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18456 ;;Total ram usage:        6 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:    7
 18459 ;; This function calls:
 18460 ;;		Nothing
 18461 ;; This function is called by:
 18462 ;;		_MacExecuteCommands
 18463 ;; This function uses a non-reentrant model
 18464 ;;
 18465                           
 18466                           	psect	text88
 18467  007DC8                     __ptext88:
 18468                           	opt stack 0
 18469  007DC8                     _ExecuteDutyCycle:
 18470                           	opt stack 18
 18471                           
 18472                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 18473                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 18474                           
 18475                           ; BSR set to: 2
 18476                           ;incstack = 0
 18477  007DC8  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18478  007DCC  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18479  007DD0  50DF               	movf	indf2,w,c
 18480  007DD2  0100               	movlb	0	; () banked
 18481  007DD4  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18482                           
 18483                           ; BSR set to: 0
 18484  007DD6  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18485  007DD8  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 18489  007DDA  0E0F               	movlw	15
 18490  007DDC  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18491  007DDE  D013               	goto	l1145
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;lorawan_eu.c: 600: {
 18495                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 18496  007DE0  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18497  007DE4  0E01               	movlw	1
 18498  007DE6  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18499  007DE8  0E00               	movlw	0
 18500  007DEA  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18501  007DEC  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18502  007DEE  D003               	goto	u16574
 18503  007DF0                     u16575:
 18504  007DF0  90D8               	bcf	status,0,c
 18505  007DF2  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18506  007DF4  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18507  007DF6                     u16574:
 18508  007DF6  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18509  007DF8  D7FB               	goto	u16575
 18510  007DFA  C063  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18511  007DFE  C064  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18512                           
 18513                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 18514  007E02  0102               	movlb	2	; () banked
 18515  007E04  8D03               	bsf	(_loRa+3)& (0+255),6,b
 18516  007E06                     l1145:
 18517                           
 18518                           ;lorawan_eu.c: 603: }
 18519                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 18520  007E06  0100               	movlb	0	; () banked
 18521  007E08  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18522  007E0A  A4D8               	btfss	status,2,c
 18523  007E0C  D002               	goto	l1146
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;lorawan_eu.c: 606: {
 18527                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 18528  007E0E  0102               	movlb	2	; () banked
 18529  007E10  8F02               	bsf	(_loRa+2)& (0+255),7,b
 18530  007E12                     l1146:
 18531                           
 18532                           ;lorawan_eu.c: 608: }
 18533                           ;lorawan_eu.c: 610: return ptr;
 18534                           
 18535                           ; BSR set to: 2
 18536  007E12  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18537  007E16  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18538  007E1A  0012               	return	
 18539  007E1C                     __end_of_ExecuteDutyCycle:
 18540                           	opt stack 0
 18541                           tosu	equ	0xFFF
 18542                           tosh	equ	0xFFE
 18543                           tosl	equ	0xFFD
 18544                           pclath	equ	0xFFA
 18545                           tblptru	equ	0xFF8
 18546                           tblptrh	equ	0xFF7
 18547                           tblptrl	equ	0xFF6
 18548                           tablat	equ	0xFF5
 18549                           prodh	equ	0xFF4
 18550                           prodl	equ	0xFF3
 18551                           intcon	equ	0xFF2
 18552                           intcon2	equ	0xFF1
 18553                           intcon3	equ	0xFF0
 18554                           indf0	equ	0xFEF
 18555                           postinc0	equ	0xFEE
 18556                           fsr0h	equ	0xFEA
 18557                           fsr0l	equ	0xFE9
 18558                           wreg	equ	0xFE8
 18559                           postinc1	equ	0xFE6
 18560                           postdec1	equ	0xFE5
 18561                           plusw1	equ	0xFE3
 18562                           fsr1h	equ	0xFE2
 18563                           fsr1l	equ	0xFE1
 18564                           indf2	equ	0xFDF
 18565                           postinc2	equ	0xFDE
 18566                           postdec2	equ	0xFDD
 18567                           plusw2	equ	0xFDB
 18568                           fsr2h	equ	0xFDA
 18569                           fsr2l	equ	0xFD9
 18570                           status	equ	0xFD8
 18571                           
 18572 ;; *************** function _ExecuteDevStatus *****************
 18573 ;; Defined at:
 18574 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18575 ;; Parameters:    Size  Location     Type
 18576 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18577 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;		None
 18580 ;; Return value:  Size  Location     Type
 18581 ;;                  2    0[BANK0 ] PTR unsigned char 
 18582 ;; Registers used:
 18583 ;;		wreg, status,2, status,0
 18584 ;; Tracked objects:
 18585 ;;		On entry : 0/0
 18586 ;;		On exit  : 0/0
 18587 ;;		Unchanged: 0/0
 18588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18593 ;;Total ram usage:        2 bytes
 18594 ;; Hardware stack levels used:    1
 18595 ;; Hardware stack levels required when called:    7
 18596 ;; This function calls:
 18597 ;;		Nothing
 18598 ;; This function is called by:
 18599 ;;		_MacExecuteCommands
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text89
 18604  008C0E                     __ptext89:
 18605                           	opt stack 0
 18606  008C0E                     _ExecuteDevStatus:
 18607                           	opt stack 18
 18608                           
 18609                           ;lorawan_eu.c: 674: return ptr;
 18610                           
 18611                           ;incstack = 0
 18612  008C0E  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18613  008C12  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18614  008C16  0012               	return	
 18615  008C18                     __end_of_ExecuteDevStatus:
 18616                           	opt stack 0
 18617                           tosu	equ	0xFFF
 18618                           tosh	equ	0xFFE
 18619                           tosl	equ	0xFFD
 18620                           pclath	equ	0xFFA
 18621                           tblptru	equ	0xFF8
 18622                           tblptrh	equ	0xFF7
 18623                           tblptrl	equ	0xFF6
 18624                           tablat	equ	0xFF5
 18625                           prodh	equ	0xFF4
 18626                           prodl	equ	0xFF3
 18627                           intcon	equ	0xFF2
 18628                           intcon2	equ	0xFF1
 18629                           intcon3	equ	0xFF0
 18630                           indf0	equ	0xFEF
 18631                           postinc0	equ	0xFEE
 18632                           fsr0h	equ	0xFEA
 18633                           fsr0l	equ	0xFE9
 18634                           wreg	equ	0xFE8
 18635                           postinc1	equ	0xFE6
 18636                           postdec1	equ	0xFE5
 18637                           plusw1	equ	0xFE3
 18638                           fsr1h	equ	0xFE2
 18639                           fsr1l	equ	0xFE1
 18640                           indf2	equ	0xFDF
 18641                           postinc2	equ	0xFDE
 18642                           postdec2	equ	0xFDD
 18643                           plusw2	equ	0xFDB
 18644                           fsr2h	equ	0xFDA
 18645                           fsr2l	equ	0xFD9
 18646                           status	equ	0xFD8
 18647                           
 18648 ;; *************** function _LORAWAN_Send *****************
 18649 ;; Defined at:
 18650 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18651 ;; Parameters:    Size  Location     Type
 18652 ;;  confirmed       1    wreg     enum E7217
 18653 ;;  port            1  115[BANK0 ] unsigned char 
 18654 ;;  buffer          2  116[BANK0 ] PTR void 
 18655 ;;		 -> data(8), NULL(0), 
 18656 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;  confirmed       1  121[BANK0 ] enum E7217
 18659 ;;  result          1  120[BANK0 ] enum E7190
 18660 ;; Return value:  Size  Location     Type
 18661 ;;                  1    wreg      enum E7190
 18662 ;; Registers used:
 18663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18664 ;; Tracked objects:
 18665 ;;		On entry : 0/0
 18666 ;;		On exit  : 0/0
 18667 ;;		Unchanged: 0/0
 18668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18672 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18673 ;;Total ram usage:        7 bytes
 18674 ;; Hardware stack levels used:    1
 18675 ;; Hardware stack levels required when called:   13
 18676 ;; This function calls:
 18677 ;;		_AssemblePacket
 18678 ;;		_LORAWAN_GetMaxPayloadSize
 18679 ;;		_RADIO_ReceiveStop
 18680 ;;		_RADIO_Transmit
 18681 ;;		_SelectChannelForTransmission
 18682 ;; This function is called by:
 18683 ;;		_AutomaticReplyCallback
 18684 ;;		_LORAWAN_RxDone
 18685 ;;		_main
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           	psect	text90
 18690  0066F8                     __ptext90:
 18691                           	opt stack 0
 18692  0066F8                     _LORAWAN_Send:
 18693                           	opt stack 17
 18694                           
 18695                           ;incstack = 0
 18696                           ;LORAWAN_Send@confirmed stored from wreg
 18697  0066F8  0100               	movlb	0	; () banked
 18698  0066FA  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18699                           
 18700                           ;lorawan.c: 187: LorawanError_t result;
 18701                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 18702  0066FC  0102               	movlb	2	; () banked
 18703  0066FE  B103               	btfsc	(_loRa+3)& (0+255),0,b
 18704  006700  0012               	return	
 18705                           
 18706                           ; BSR set to: 2
 18707                           ;lorawan.c: 192: }
 18708                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18709                           
 18710                           ; BSR set to: 2
 18711                           ;lorawan.c: 190: {
 18712                           ;lorawan.c: 191: return MAC_PAUSED;
 18713                           ;	Return value of _LORAWAN_Send is never used
 18714  006702  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 18715  006704  0012               	return	
 18716                           
 18717                           ; BSR set to: 2
 18718                           ;lorawan.c: 197: }
 18719                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18720                           
 18721                           ; BSR set to: 2
 18722                           ;lorawan.c: 195: {
 18723                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18724                           ;	Return value of _LORAWAN_Send is never used
 18725  006706  A902               	btfss	(_loRa+2)& (0+255),4,b
 18726  006708  0012               	return	
 18727                           
 18728                           ; BSR set to: 2
 18729                           ;lorawan.c: 202: }
 18730                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18731                           
 18732                           ; BSR set to: 2
 18733                           
 18734                           ; BSR set to: 2
 18735                           ;lorawan.c: 200: {
 18736                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18737                           ;	Return value of _LORAWAN_Send is never used
 18738  00670A  0100               	movlb	0	; () banked
 18739  00670C  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 18740  00670E  A4D8               	btfss	status,2,c
 18741  006710  D003               	goto	l1804
 18742                           
 18743                           ; BSR set to: 0
 18744  006712  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18745  006714  A4D8               	btfss	status,2,c
 18746  006716  0012               	return	
 18747  006718                     l1804:
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;lorawan.c: 207: }
 18751                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18752                           
 18753                           ; BSR set to: 0
 18754  006718  ECF2  F03C         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18755  00671C  0100               	movlb	0	; () banked
 18756  00671E  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 18757  006720  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18758  006722  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 18759  006724  A0D8               	btfss	status,0,c
 18760  006726  0012               	return	
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;lorawan.c: 213: }
 18764                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18765                           
 18766                           ; BSR set to: 0
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;lorawan.c: 211: {
 18770                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18771                           ;	Return value of _LORAWAN_Send is never used
 18772  006728  0102               	movlb	2	; () banked
 18773  00672A  2906               	incf	(_loRa+6)& (0+255),w,b
 18774  00672C  E109               	bnz	l14671
 18775  00672E  2907               	incf	(_loRa+7)& (0+255),w,b
 18776  006730  E107               	bnz	l14671
 18777  006732  2908               	incf	(_loRa+8)& (0+255),w,b
 18778  006734  E105               	bnz	l14671
 18779  006736  2909               	incf	(_loRa+9)& (0+255),w,b
 18780  006738  A4D8               	btfss	status,2,c
 18781  00673A  D002               	goto	l1806
 18782                           
 18783                           ; BSR set to: 2
 18784                           ;lorawan.c: 216: {
 18785                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18786  00673C  8304               	bsf	(_loRa+4)& (0+255),1,b
 18787                           
 18788                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18789                           ;	Return value of _LORAWAN_Send is never used
 18790  00673E  0012               	return	
 18791  006740                     l1806:
 18792  006740                     l14671:
 18793                           
 18794                           ; BSR set to: 2
 18795                           ;lorawan.c: 220: }
 18796                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 18797  006740  5102               	movf	(_loRa+2)& (0+255),w,b
 18798  006742  0B0F               	andlw	15
 18799  006744  0900               	iorlw	0
 18800  006746  B4D8               	btfsc	status,2,c
 18801  006748  D003               	goto	l1807
 18802                           
 18803                           ; BSR set to: 2
 18804  00674A  5112               	movf	(_loRa+18)& (0+255),w,b
 18805  00674C  B4D8               	btfsc	status,2,c
 18806  00674E  0012               	return	
 18807  006750                     l1807:
 18808                           
 18809                           ; BSR set to: 2
 18810                           ;lorawan.c: 225: }
 18811                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 18812                           
 18813                           ; BSR set to: 2
 18814  006750  0E01               	movlw	1
 18815  006752  EC26  F03B         	call	_SelectChannelForTransmission
 18816  006756  0100               	movlb	0	; () banked
 18817  006758  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;lorawan.c: 228: if (result != OK)
 18821  00675A  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 18822  00675C  A4D8               	btfss	status,2,c
 18823  00675E  0012               	return	
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;lorawan.c: 232: else
 18827                           ;lorawan.c: 233: {
 18828                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18829                           
 18830                           ; BSR set to: 0
 18831                           
 18832                           ; BSR set to: 0
 18833                           ;lorawan.c: 231: }
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;lorawan.c: 229: {
 18837                           ;lorawan.c: 230: return result;
 18838                           ;	Return value of _LORAWAN_Send is never used
 18839  006760  0E02               	movlw	2
 18840  006762  0102               	movlb	2	; () banked
 18841  006764  1912               	xorwf	(_loRa+18)& (0+255),w,b
 18842  006766  B4D8               	btfsc	status,2,c
 18843                           
 18844                           ; BSR set to: 2
 18845                           ;lorawan.c: 235: {
 18846                           ;lorawan.c: 236: RADIO_ReceiveStop();
 18847  006768  EC6B  F044         	call	_RADIO_ReceiveStop	;wreg free
 18848                           
 18849                           ;lorawan.c: 237: }
 18850                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 18851  00676C  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 18852  006770  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18853  006774  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18854  006778  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18855  00677C  0100               	movlb	0	; () banked
 18856  00677E  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18857  006780  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18858  006782  EC20  F00F         	call	_AssemblePacket
 18859                           
 18860                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18861  006786  0EF0               	movlw	low (_macBuffer+16)
 18862  006788  0100               	movlb	0	; () banked
 18863  00678A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 18864  00678C  0E04               	movlw	high (_macBuffer+16)
 18865  00678E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18866  006790  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18867  006794  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 18868  006798  0100               	movlb	0	; () banked
 18869  00679A  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 18870  00679C  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18871  00679E  A4D8               	btfss	status,2,c
 18872  0067A0  0012               	return	
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;lorawan.c: 242: {
 18876                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 18877  0067A2  0E01               	movlw	1
 18878  0067A4  0102               	movlb	2	; () banked
 18879  0067A6  2706               	addwf	(_loRa+6)& (0+255),f,b
 18880  0067A8  0E00               	movlw	0
 18881  0067AA  2307               	addwfc	(_loRa+7)& (0+255),f,b
 18882  0067AC  2308               	addwfc	(_loRa+8)& (0+255),f,b
 18883  0067AE  2309               	addwfc	(_loRa+9)& (0+255),f,b
 18884                           
 18885                           ;lorawan.c: 245: if (CNF == confirmed)
 18886  0067B0  0100               	movlb	0	; () banked
 18887  0067B2  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18888  0067B4  A4D8               	btfss	status,2,c
 18889  0067B6  D002               	goto	l1812
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;lorawan.c: 246: {
 18893                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18894  0067B8  0102               	movlb	2	; () banked
 18895  0067BA  8100               	bsf	_loRa& (0+255),0,b
 18896  0067BC                     l1812:
 18897                           
 18898                           ;lorawan.c: 248: }
 18899                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18900  0067BC  0102               	movlb	2	; () banked
 18901  0067BE  8B00               	bsf	_loRa& (0+255),5,b
 18902                           
 18903                           ; BSR set to: 2
 18904                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18905  0067C0  5102               	movf	(_loRa+2)& (0+255),w,b
 18906  0067C2  0BF0               	andlw	-16
 18907  0067C4  0901               	iorlw	1
 18908  0067C6  6F02               	movwf	(_loRa+2)& (0+255),b
 18909                           
 18910                           ; BSR set to: 2
 18911                           
 18912                           ; BSR set to: 2
 18913                           ;lorawan.c: 252: else
 18914                           ;lorawan.c: 253: {
 18915                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18916                           ;	Return value of _LORAWAN_Send is never used
 18917                           
 18918                           ;lorawan.c: 251: }
 18919  0067C8  0012               	return	
 18920  0067CA                     __end_of_LORAWAN_Send:
 18921                           	opt stack 0
 18922                           tosu	equ	0xFFF
 18923                           tosh	equ	0xFFE
 18924                           tosl	equ	0xFFD
 18925                           pclath	equ	0xFFA
 18926                           tblptru	equ	0xFF8
 18927                           tblptrh	equ	0xFF7
 18928                           tblptrl	equ	0xFF6
 18929                           tablat	equ	0xFF5
 18930                           prodh	equ	0xFF4
 18931                           prodl	equ	0xFF3
 18932                           intcon	equ	0xFF2
 18933                           intcon2	equ	0xFF1
 18934                           intcon3	equ	0xFF0
 18935                           indf0	equ	0xFEF
 18936                           postinc0	equ	0xFEE
 18937                           fsr0h	equ	0xFEA
 18938                           fsr0l	equ	0xFE9
 18939                           wreg	equ	0xFE8
 18940                           postinc1	equ	0xFE6
 18941                           postdec1	equ	0xFE5
 18942                           plusw1	equ	0xFE3
 18943                           fsr1h	equ	0xFE2
 18944                           fsr1l	equ	0xFE1
 18945                           indf2	equ	0xFDF
 18946                           postinc2	equ	0xFDE
 18947                           postdec2	equ	0xFDD
 18948                           plusw2	equ	0xFDB
 18949                           fsr2h	equ	0xFDA
 18950                           fsr2l	equ	0xFD9
 18951                           status	equ	0xFD8
 18952                           
 18953 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18954 ;; Defined at:
 18955 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;		None
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;  result          1   10[BANK0 ] unsigned char 
 18960 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18961 ;; Return value:  Size  Location     Type
 18962 ;;                  1    wreg      unsigned char 
 18963 ;; Registers used:
 18964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18965 ;; Tracked objects:
 18966 ;;		On entry : 0/0
 18967 ;;		On exit  : 0/0
 18968 ;;		Unchanged: 0/0
 18969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;Total ram usage:        3 bytes
 18975 ;; Hardware stack levels used:    1
 18976 ;; Hardware stack levels required when called:    8
 18977 ;; This function calls:
 18978 ;;		_CountfOptsLength
 18979 ;; This function is called by:
 18980 ;;		_LORAWAN_Send
 18981 ;;		_AckRetransmissionCallback
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           	psect	text91
 18986  0079E4                     __ptext91:
 18987                           	opt stack 0
 18988  0079E4                     _LORAWAN_GetMaxPayloadSize:
 18989                           	opt stack 21
 18990                           
 18991                           ;lorawan.c: 1558: uint8_t result = 0;
 18992                           
 18993                           ;incstack = 0
 18994  0079E4  0E00               	movlw	0
 18995  0079E6  0100               	movlb	0	; () banked
 18996  0079E8  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18997                           
 18998                           ; BSR set to: 0
 18999                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 19000                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 19001  0079EA  ECE5  F033         	call	_CountfOptsLength	;wreg free
 19002  0079EE  0100               	movlb	0	; () banked
 19003  0079F0  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 19004                           
 19005                           ; BSR set to: 0
 19006                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 19007  0079F2  0102               	movlb	2	; () banked
 19008  0079F4  51A7               	movf	(_loRa+167)& (0+255),w,b
 19009  0079F6  A4D8               	btfss	status,2,c
 19010  0079F8  D00F               	goto	l2266
 19011                           
 19012                           ; BSR set to: 2
 19013                           ;lorawan.c: 1564: {
 19014                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 19015  0079FA  51DF               	movf	(_loRa+223)& (0+255),w,b
 19016  0079FC  0D01               	mullw	1
 19017  0079FE  0E77               	movlw	low _maxPayloadSize
 19018  007A00  24F3               	addwf	prodl,w,c
 19019  007A02  6EF6               	movwf	tblptrl,c
 19020  007A04  0EFF               	movlw	high _maxPayloadSize
 19021  007A06  20F4               	addwfc	prodh,w,c
 19022  007A08  6EF7               	movwf	tblptrh,c
 19023  007A0A                     	if	1	;There are 3 active tblptr bytes
 19024  007A0A  6AF8               	clrf	tblptru,c
 19025  007A0C  0E00               	movlw	low (__mediumconst shr (0+16))
 19026  007A0E  22F8               	addwfc	tblptru,f,c
 19027  007A10                     	endif
 19028  007A10  0008               	tblrd		*
 19029  007A12  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 19030                           
 19031                           ;lorawan.c: 1566: }
 19032  007A16  D013               	goto	l2267
 19033  007A18                     l2266:
 19034                           
 19035                           ; BSR set to: 2
 19036                           ;lorawan.c: 1567: else
 19037                           ;lorawan.c: 1568: {
 19038                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 19039                           
 19040                           ; BSR set to: 2
 19041  007A18  51DF               	movf	(_loRa+223)& (0+255),w,b
 19042  007A1A  0D01               	mullw	1
 19043  007A1C  0E77               	movlw	low _maxPayloadSize
 19044  007A1E  24F3               	addwf	prodl,w,c
 19045  007A20  6EF6               	movwf	tblptrl,c
 19046  007A22  0EFF               	movlw	high _maxPayloadSize
 19047  007A24  20F4               	addwfc	prodh,w,c
 19048  007A26  6EF7               	movwf	tblptrh,c
 19049  007A28                     	if	1	;There are 3 active tblptr bytes
 19050  007A28  6AF8               	clrf	tblptru,c
 19051  007A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 19052  007A2C  22F8               	addwfc	tblptru,f,c
 19053  007A2E                     	endif
 19054  007A2E  0008               	tblrd		*
 19055  007A30  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 19056  007A34  0100               	movlb	0	; () banked
 19057  007A36  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 19058  007A38  0800               	sublw	0
 19059  007A3A  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 19060  007A3C  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 19061  007A3E                     l2267:
 19062                           
 19063                           ;lorawan.c: 1570: }
 19064                           ;lorawan.c: 1572: return result;
 19065                           
 19066                           ; BSR set to: 0
 19067  007A3E  0100               	movlb	0	; () banked
 19068  007A40  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 19069  007A42  0012               	return	
 19070  007A44                     __end_of_LORAWAN_GetMaxPayloadSize:
 19071                           	opt stack 0
 19072                           tosu	equ	0xFFF
 19073                           tosh	equ	0xFFE
 19074                           tosl	equ	0xFFD
 19075                           pclath	equ	0xFFA
 19076                           tblptru	equ	0xFF8
 19077                           tblptrh	equ	0xFF7
 19078                           tblptrl	equ	0xFF6
 19079                           tablat	equ	0xFF5
 19080                           prodh	equ	0xFF4
 19081                           prodl	equ	0xFF3
 19082                           intcon	equ	0xFF2
 19083                           intcon2	equ	0xFF1
 19084                           intcon3	equ	0xFF0
 19085                           indf0	equ	0xFEF
 19086                           postinc0	equ	0xFEE
 19087                           fsr0h	equ	0xFEA
 19088                           fsr0l	equ	0xFE9
 19089                           wreg	equ	0xFE8
 19090                           postinc1	equ	0xFE6
 19091                           postdec1	equ	0xFE5
 19092                           plusw1	equ	0xFE3
 19093                           fsr1h	equ	0xFE2
 19094                           fsr1l	equ	0xFE1
 19095                           indf2	equ	0xFDF
 19096                           postinc2	equ	0xFDE
 19097                           postdec2	equ	0xFDD
 19098                           plusw2	equ	0xFDB
 19099                           fsr2h	equ	0xFDA
 19100                           fsr2l	equ	0xFD9
 19101                           status	equ	0xFD8
 19102                           
 19103 ;; *************** function _AssemblePacket *****************
 19104 ;; Defined at:
 19105 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19106 ;; Parameters:    Size  Location     Type
 19107 ;;  confirmed       1    wreg     unsigned char 
 19108 ;;  port            1  103[BANK0 ] unsigned char 
 19109 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 19110 ;;		 -> data(8), NULL(0), 
 19111 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 19112 ;; Auto vars:     Size  Location     Type
 19113 ;;  confirmed       1  110[BANK0 ] unsigned char 
 19114 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 19115 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 19116 ;;  fCtrl           1  112[BANK0 ] struct .
 19117 ;;  mhdr            1  111[BANK0 ] struct .
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  1    wreg      void 
 19120 ;; Registers used:
 19121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19122 ;; Tracked objects:
 19123 ;;		On entry : 0/0
 19124 ;;		On exit  : 0/0
 19125 ;;		Unchanged: 0/0
 19126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19127 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19128 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19130 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19131 ;;Total ram usage:       12 bytes
 19132 ;; Hardware stack levels used:    1
 19133 ;; Hardware stack levels required when called:   12
 19134 ;; This function calls:
 19135 ;;		_AESCmac
 19136 ;;		_AssembleEncryptionBlock
 19137 ;;		_CountfOptsLength
 19138 ;;		_EncryptFRMPayload
 19139 ;;		_FindSmallestDataRate
 19140 ;;		_IncludeMacCommandsResponse
 19141 ;;		_memcpy
 19142 ;;		_memset
 19143 ;; This function is called by:
 19144 ;;		_LORAWAN_Send
 19145 ;; This function uses a non-reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text92
 19149  001E40                     __ptext92:
 19150                           	opt stack 0
 19151  001E40                     _AssemblePacket:
 19152                           	opt stack 17
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;incstack = 0
 19156                           ;AssemblePacket@confirmed stored from wreg
 19157  001E40  0100               	movlb	0	; () banked
 19158  001E42  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 19159                           
 19160                           ;lorawan.c: 1674: Mhdr_t mhdr;
 19161                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 19162  001E44  0E10               	movlw	16
 19163  001E46  0100               	movlb	0	; () banked
 19164  001E48  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19165                           
 19166                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 19167                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 19168  001E4A  0E00               	movlw	0
 19169  001E4C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 19173  001E4E  0ECF               	movlw	low AssemblePacket@mhdr
 19174  001E50  6F60               	movwf	memset@p1& (0+255),b
 19175  001E52  0E00               	movlw	high AssemblePacket@mhdr
 19176  001E54  6F61               	movwf	(memset@p1+1)& (0+255),b
 19177  001E56  0E00               	movlw	0
 19178  001E58  6F63               	movwf	(memset@c+1)& (0+255),b
 19179  001E5A  0E00               	movlw	0
 19180  001E5C  6F62               	movwf	memset@c& (0+255),b
 19181  001E5E  0E00               	movlw	0
 19182  001E60  6F65               	movwf	(memset@n+1)& (0+255),b
 19183  001E62  0E01               	movlw	1
 19184  001E64  6F64               	movwf	memset@n& (0+255),b
 19185  001E66  EC6E  F042         	call	_memset	;wreg free
 19186                           
 19187                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 19188  001E6A  0EE0               	movlw	low _macBuffer
 19189  001E6C  0100               	movlb	0	; () banked
 19190  001E6E  6F60               	movwf	memset@p1& (0+255),b
 19191  001E70  0E04               	movlw	high _macBuffer
 19192  001E72  6F61               	movwf	(memset@p1+1)& (0+255),b
 19193  001E74  0E00               	movlw	0
 19194  001E76  6F63               	movwf	(memset@c+1)& (0+255),b
 19195  001E78  0E00               	movlw	0
 19196  001E7A  6F62               	movwf	memset@c& (0+255),b
 19197  001E7C  0E01               	movlw	1
 19198  001E7E  6F65               	movwf	(memset@n+1)& (0+255),b
 19199  001E80  0E0F               	movlw	15
 19200  001E82  6F64               	movwf	memset@n& (0+255),b
 19201  001E84  EC6E  F042         	call	_memset	;wreg free
 19202                           
 19203                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 19204  001E88  0EB1               	movlw	low _aesBuffer
 19205  001E8A  0100               	movlb	0	; () banked
 19206  001E8C  6F60               	movwf	memset@p1& (0+255),b
 19207  001E8E  0E01               	movlw	high _aesBuffer
 19208  001E90  6F61               	movwf	(memset@p1+1)& (0+255),b
 19209  001E92  0E00               	movlw	0
 19210  001E94  6F63               	movwf	(memset@c+1)& (0+255),b
 19211  001E96  0E00               	movlw	0
 19212  001E98  6F62               	movwf	memset@c& (0+255),b
 19213  001E9A  0E00               	movlw	0
 19214  001E9C  6F65               	movwf	(memset@n+1)& (0+255),b
 19215  001E9E  0E10               	movlw	16
 19216  001EA0  6F64               	movwf	memset@n& (0+255),b
 19217  001EA2  EC6E  F042         	call	_memset	;wreg free
 19218                           
 19219                           ;lorawan.c: 1683: if (confirmed == 1)
 19220  001EA6  0100               	movlb	0	; () banked
 19221  001EA8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 19222  001EAA  A4D8               	btfss	status,2,c
 19223  001EAC  D007               	goto	l2296
 19224                           
 19225                           ; BSR set to: 0
 19226                           ;lorawan.c: 1684: {
 19227                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 19228  001EAE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19229  001EB0  0B1F               	andlw	-225
 19230  001EB2  0980               	iorlw	128
 19231  001EB4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19235  001EB6  0102               	movlb	2	; () banked
 19236  001EB8  8100               	bsf	_loRa& (0+255),0,b
 19237                           
 19238                           ;lorawan.c: 1687: }
 19239  001EBA  D005               	goto	l2297
 19240  001EBC                     l2296:
 19241                           
 19242                           ;lorawan.c: 1688: else
 19243                           ;lorawan.c: 1689: {
 19244                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 19245                           
 19246                           ; BSR set to: 2
 19247  001EBC  0100               	movlb	0	; () banked
 19248  001EBE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 19249  001EC0  0B1F               	andlw	-225
 19250  001EC2  0940               	iorlw	64
 19251  001EC4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 19252  001EC6                     l2297:
 19253                           
 19254                           ;lorawan.c: 1691: }
 19255                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 19256  001EC6  0EFC               	movlw	-4
 19257  001EC8  0100               	movlb	0	; () banked
 19258  001ECA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19262  001ECC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 19263  001ECE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 19264  001ED0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19268  001ED2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19269  001ED4  0D01               	mullw	1
 19270  001ED6  0EE0               	movlw	low _macBuffer
 19271  001ED8  24F3               	addwf	prodl,w,c
 19272  001EDA  6ED9               	movwf	fsr2l,c
 19273  001EDC  0E04               	movlw	high _macBuffer
 19274  001EDE  20F4               	addwfc	prodh,w,c
 19275  001EE0  6EDA               	movwf	fsr2h,c
 19276  001EE2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 19277                           
 19278                           ; BSR set to: 0
 19279  001EE6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19283  001EE8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19284  001EEA  0D01               	mullw	1
 19285  001EEC  0EE0               	movlw	low _macBuffer
 19286  001EEE  24F3               	addwf	prodl,w,c
 19287  001EF0  6F60               	movwf	memcpy@d1& (0+255),b
 19288  001EF2  0E04               	movlw	high _macBuffer
 19289  001EF4  20F4               	addwfc	prodh,w,c
 19290  001EF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19291  001EF8  0E1E               	movlw	low (_loRa+30)
 19292  001EFA  6F62               	movwf	memcpy@s1& (0+255),b
 19293  001EFC  0E02               	movlw	high (_loRa+30)
 19294  001EFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19295  001F00  0E00               	movlw	0
 19296  001F02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19297  001F04  0E04               	movlw	4
 19298  001F06  6F64               	movwf	memcpy@n& (0+255),b
 19299  001F08  EC22  F03D         	call	_memcpy	;wreg free
 19300                           
 19301                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19302  001F0C  0100               	movlb	0	; () banked
 19303  001F0E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19304  001F10  0F04               	addlw	4
 19305  001F12  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;lorawan.c: 1699: fCtrl.value = 0;
 19309  001F14  0E00               	movlw	0
 19310  001F16  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19311                           
 19312                           ; BSR set to: 0
 19313                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19314  001F18  0102               	movlb	2	; () banked
 19315  001F1A  AD02               	btfss	(_loRa+2)& (0+255),6,b
 19316  001F1C  D047               	goto	l2306
 19317                           
 19318                           ; BSR set to: 2
 19319                           ;lorawan.c: 1702: {
 19320                           ;lorawan.c: 1703: fCtrl.adr = 1;
 19321  001F1E  0100               	movlb	0	; () banked
 19322  001F20  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19326  001F22  0102               	movlb	2	; () banked
 19327  001F24  51DF               	movf	(_loRa+223)& (0+255),w,b
 19328  001F26  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19329  001F28  B0D8               	btfsc	status,0,c
 19330  001F2A  D03F               	goto	l2299
 19331                           
 19332                           ; BSR set to: 2
 19333                           ;lorawan.c: 1705: {
 19334                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19335  001F2C  0100               	movlb	0	; () banked
 19336  001F2E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19337                           
 19338                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19339  001F30  0102               	movlb	2	; () banked
 19340  001F32  8900               	bsf	_loRa& (0+255),4,b
 19341                           
 19342                           ; BSR set to: 2
 19343                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19344  001F34  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 19345  001F36  2BD1               	incf	(_loRa+209)& (0+255),f,b
 19346                           
 19347                           ; BSR set to: 2
 19348                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19349  001F38  51A2               	movf	(_loRa+162)& (0+255),w,b
 19350  001F3A  0100               	movlb	0	; () banked
 19351  001F3C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19352  001F3E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 19353  001F40  0102               	movlb	2	; () banked
 19354  001F42  51D0               	movf	(_loRa+208)& (0+255),w,b
 19355  001F44  0100               	movlb	0	; () banked
 19356  001F46  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19357  001F48  E10C               	bnz	l14423
 19358  001F4A  0102               	movlb	2	; () banked
 19359  001F4C  51D1               	movf	(_loRa+209)& (0+255),w,b
 19360  001F4E  0100               	movlb	0	; () banked
 19361  001F50  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19362  001F52  A4D8               	btfss	status,2,c
 19363  001F54  D006               	goto	l2300
 19364                           
 19365                           ; BSR set to: 0
 19366                           ;lorawan.c: 1711: {
 19367                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19368  001F56  0E00               	movlw	0
 19369  001F58  0102               	movlb	2	; () banked
 19370  001F5A  6FEE               	movwf	(_loRa+238)& (0+255),b
 19371  001F5C  D023               	goto	l14435
 19372  001F5E                     l14421:
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 19376  001F5E  0102               	movlb	2	; () banked
 19377  001F60  D024               	goto	l2299
 19378  001F62                     l2300:
 19379  001F62                     l14423:
 19380                           
 19381                           ;lorawan.c: 1716: else
 19382                           ;lorawan.c: 1717: {
 19383                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 19384  001F62  0102               	movlb	2	; () banked
 19385  001F64  51A2               	movf	(_loRa+162)& (0+255),w,b
 19386  001F66  0100               	movlb	0	; () banked
 19387  001F68  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19388  001F6A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 19389  001F6C  0102               	movlb	2	; () banked
 19390  001F6E  51D0               	movf	(_loRa+208)& (0+255),w,b
 19391  001F70  0100               	movlb	0	; () banked
 19392  001F72  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 19393  001F74  0102               	movlb	2	; () banked
 19394  001F76  51D1               	movf	(_loRa+209)& (0+255),w,b
 19395  001F78  0100               	movlb	0	; () banked
 19396  001F7A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19397  001F7C  B0D8               	btfsc	status,0,c
 19398  001F7E  D013               	goto	l2302
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;lorawan.c: 1719: {
 19402                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19403  001F80  0102               	movlb	2	; () banked
 19404  001F82  2BEE               	incf	(_loRa+238)& (0+255),f,b
 19405                           
 19406                           ; BSR set to: 2
 19407                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19408  001F84  51EE               	movf	(_loRa+238)& (0+255),w,b
 19409  001F86  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 19410  001F88  B0D8               	btfsc	status,0,c
 19411  001F8A  D010               	goto	l2306
 19412                           
 19413                           ; BSR set to: 2
 19414                           ;lorawan.c: 1725: {
 19415                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19416  001F8C  0E00               	movlw	0
 19417  001F8E  6FEE               	movwf	(_loRa+238)& (0+255),b
 19418                           
 19419                           ; BSR set to: 2
 19420                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19421  001F90  EC32  F032         	call	_FindSmallestDataRate	;wreg free
 19422  001F94  0900               	iorlw	0
 19423  001F96  A4D8               	btfss	status,2,c
 19424  001F98  D009               	goto	l2306
 19425                           
 19426                           ;lorawan.c: 1729: {
 19427                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19428  001F9A  0E00               	movlw	0
 19429  001F9C  0102               	movlb	2	; () banked
 19430  001F9E  6FD1               	movwf	(_loRa+209)& (0+255),b
 19431  001FA0  0E00               	movlw	0
 19432  001FA2  6FD0               	movwf	(_loRa+208)& (0+255),b
 19433  001FA4                     l14435:
 19434                           
 19435                           ; BSR set to: 2
 19436                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 19437  001FA4  0100               	movlb	0	; () banked
 19438  001FA6                     l2302:
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;lorawan.c: 1737: else
 19442                           ;lorawan.c: 1738: {
 19443                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19444  001FA6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19445  001FA8  D7DA               	goto	l14421
 19446  001FAA                     l2299:
 19447                           
 19448                           ; BSR set to: 2
 19449                           ;lorawan.c: 1744: else
 19450                           ;lorawan.c: 1745: {
 19451                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 19452  001FAA  9900               	bcf	_loRa& (0+255),4,b
 19453  001FAC                     l2306:
 19454                           
 19455                           ;lorawan.c: 1747: }
 19456                           ;lorawan.c: 1748: }
 19457                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 19458                           
 19459                           ; BSR set to: 2
 19460  001FAC  0102               	movlb	2	; () banked
 19461  001FAE  A300               	btfss	_loRa& (0+255),1,b
 19462  001FB0  D004               	goto	l2307
 19463                           
 19464                           ; BSR set to: 2
 19465                           ;lorawan.c: 1751: {
 19466                           ;lorawan.c: 1752: fCtrl.ack = 1;
 19467  001FB2  0100               	movlb	0	; () banked
 19468  001FB4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19469                           
 19470                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19471  001FB6  0102               	movlb	2	; () banked
 19472  001FB8  9300               	bcf	_loRa& (0+255),1,b
 19473  001FBA                     l2307:
 19474                           
 19475                           ; BSR set to: 2
 19476                           ;lorawan.c: 1754: }
 19477                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 19478  001FBA  0100               	movlb	0	; () banked
 19479  001FBC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19483  001FBE  0102               	movlb	2	; () banked
 19484  001FC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 19485  001FC2  B4D8               	btfsc	status,2,c
 19486  001FC4  D005               	goto	u16950
 19487                           
 19488                           ; BSR set to: 2
 19489  001FC6  0100               	movlb	0	; () banked
 19490  001FC8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19491  001FCA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19492  001FCC  A4D8               	btfss	status,2,c
 19493  001FCE  D006               	goto	l2308
 19494  001FD0                     u16950:
 19495                           
 19496                           ;lorawan.c: 1759: {
 19497                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19498  001FD0  0100               	movlb	0	; () banked
 19499  001FD2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 19500  001FD4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 19501  001FD6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 19502  001FD8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 19503                           
 19504                           ;lorawan.c: 1761: }
 19505  001FDA  D009               	goto	l2311
 19506  001FDC                     l2308:
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;lorawan.c: 1763: else
 19510                           ;lorawan.c: 1764: {
 19511                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 19512                           
 19513                           ; BSR set to: 0
 19514  001FDC  ECE5  F033         	call	_CountfOptsLength	;wreg free
 19515  001FE0  0100               	movlb	0	; () banked
 19516  001FE2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19517  001FE4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19518  001FE6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19519  001FE8  0BF0               	andlw	-16
 19520  001FEA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19521  001FEC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19522  001FEE                     l2311:
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;lorawan.c: 1766: }
 19526                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19527                           
 19528                           ; BSR set to: 0
 19529  001FEE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19530  001FF0  0D01               	mullw	1
 19531  001FF2  0EE0               	movlw	low _macBuffer
 19532  001FF4  24F3               	addwf	prodl,w,c
 19533  001FF6  6ED9               	movwf	fsr2l,c
 19534  001FF8  0E04               	movlw	high _macBuffer
 19535  001FFA  20F4               	addwfc	prodh,w,c
 19536  001FFC  6EDA               	movwf	fsr2h,c
 19537  001FFE  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19538                           
 19539                           ; BSR set to: 0
 19540  002002  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19544  002004  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19545  002006  0D01               	mullw	1
 19546  002008  0EE0               	movlw	low _macBuffer
 19547  00200A  24F3               	addwf	prodl,w,c
 19548  00200C  6F60               	movwf	memcpy@d1& (0+255),b
 19549  00200E  0E04               	movlw	high _macBuffer
 19550  002010  20F4               	addwfc	prodh,w,c
 19551  002012  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19552  002014  0E06               	movlw	low (_loRa+6)
 19553  002016  6F62               	movwf	memcpy@s1& (0+255),b
 19554  002018  0E02               	movlw	high (_loRa+6)
 19555  00201A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19556  00201C  0E00               	movlw	0
 19557  00201E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19558  002020  0E02               	movlw	2
 19559  002022  6F64               	movwf	memcpy@n& (0+255),b
 19560  002024  EC22  F03D         	call	_memcpy	;wreg free
 19561                           
 19562                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19563  002028  0100               	movlb	0	; () banked
 19564  00202A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19565  00202C  0F02               	addlw	2
 19566  00202E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19570  002030  0102               	movlb	2	; () banked
 19571  002032  51A7               	movf	(_loRa+167)& (0+255),w,b
 19572  002034  B4D8               	btfsc	status,2,c
 19573  002036  D011               	goto	l2312
 19574                           
 19575                           ; BSR set to: 2
 19576  002038  0100               	movlb	0	; () banked
 19577  00203A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19578  00203C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19579  00203E  B4D8               	btfsc	status,2,c
 19580  002040  D00C               	goto	l2312
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;lorawan.c: 1774: {
 19584                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 19585  002042  0EE0               	movlw	low _macBuffer
 19586  002044  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19587  002046  0E04               	movlw	high _macBuffer
 19588  002048  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19589  00204A  0ED2               	movlw	low AssemblePacket@bufferIndex
 19590  00204C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19591  00204E  0E00               	movlw	high AssemblePacket@bufferIndex
 19592  002050  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19593  002052  0E01               	movlw	1
 19594  002054  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19595  002056  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 19596  00205A                     l2312:
 19597                           
 19598                           ;lorawan.c: 1776: }
 19599                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19600  00205A  0100               	movlb	0	; () banked
 19601  00205C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19602  00205E  0D01               	mullw	1
 19603  002060  0EE0               	movlw	low _macBuffer
 19604  002062  24F3               	addwf	prodl,w,c
 19605  002064  6ED9               	movwf	fsr2l,c
 19606  002066  0E04               	movlw	high _macBuffer
 19607  002068  20F4               	addwfc	prodh,w,c
 19608  00206A  6EDA               	movwf	fsr2h,c
 19609  00206C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 19610                           
 19611                           ; BSR set to: 0
 19612  002070  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;lorawan.c: 1780: if (bufferLength != 0)
 19616  002072  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19617  002074  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19618  002076  B4D8               	btfsc	status,2,c
 19619  002078  D035               	goto	l2313
 19620                           
 19621                           ; BSR set to: 0
 19622                           ;lorawan.c: 1781: {
 19623                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 19624  00207A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19625  00207C  0D01               	mullw	1
 19626  00207E  0EE0               	movlw	low _macBuffer
 19627  002080  24F3               	addwf	prodl,w,c
 19628  002082  6F60               	movwf	memcpy@d1& (0+255),b
 19629  002084  0E04               	movlw	high _macBuffer
 19630  002086  20F4               	addwfc	prodh,w,c
 19631  002088  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19632  00208A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19633  00208E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19634  002092  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19635  002096  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19636  00209A  EC22  F03D         	call	_memcpy	;wreg free
 19637                           
 19638                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19639  00209E  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19640  0020A2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19641  0020A6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19642  0020AA  0E00               	movlw	0
 19643  0020AC  0100               	movlb	0	; () banked
 19644  0020AE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19645  0020B0  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19646  0020B4  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19647  0020B8  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19648  0020BC  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19649  0020C0  0E32               	movlw	low (_loRa+50)
 19650  0020C2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19651  0020C4  0E02               	movlw	high (_loRa+50)
 19652  0020C6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19653  0020C8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19654  0020CC  0EE0               	movlw	low _macBuffer
 19655  0020CE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19656  0020D0  0E04               	movlw	high _macBuffer
 19657  0020D2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19658  0020D4  0E00               	movlw	0
 19659  0020D6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19660  0020D8  ECA5  F024         	call	_EncryptFRMPayload	;wreg free
 19661                           
 19662                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19663  0020DC  0100               	movlb	0	; () banked
 19664  0020DE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19665  0020E0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19666  0020E2  D033               	goto	L11
 19667  0020E4                     l2313:
 19668                           
 19669                           ; BSR set to: 0
 19670                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19671                           
 19672                           ; BSR set to: 0
 19673  0020E4  0102               	movlb	2	; () banked
 19674  0020E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 19675  0020E8  B4D8               	btfsc	status,2,c
 19676  0020EA  D030               	goto	l2315
 19677                           
 19678                           ; BSR set to: 2
 19679                           ;lorawan.c: 1787: {
 19680                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 19681  0020EC  0EEF               	movlw	low _radioBuffer
 19682  0020EE  0100               	movlb	0	; () banked
 19683  0020F0  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19684  0020F2  0E05               	movlw	high _radioBuffer
 19685  0020F4  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19686  0020F6  0ED1               	movlw	low AssemblePacket@macCmdIdx
 19687  0020F8  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19688  0020FA  0E00               	movlw	high AssemblePacket@macCmdIdx
 19689  0020FC  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19690  0020FE  0E00               	movlw	0
 19691  002100  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19692  002102  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 19693                           
 19694                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19695  002106  0EEF               	movlw	low _radioBuffer
 19696  002108  0100               	movlb	0	; () banked
 19697  00210A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19698  00210C  0E05               	movlw	high _radioBuffer
 19699  00210E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19700  002110  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19701  002114  0E00               	movlw	0
 19702  002116  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19703  002118  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19704  00211C  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19705  002120  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19706  002124  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19707  002128  0E22               	movlw	low (_loRa+34)
 19708  00212A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19709  00212C  0E02               	movlw	high (_loRa+34)
 19710  00212E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19711  002130  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19712  002134  0EE0               	movlw	low _macBuffer
 19713  002136  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19714  002138  0E04               	movlw	high _macBuffer
 19715  00213A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19716  00213C  0E00               	movlw	0
 19717  00213E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19718  002140  ECA5  F024         	call	_EncryptFRMPayload	;wreg free
 19719                           
 19720                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19721  002144  0100               	movlb	0	; () banked
 19722  002146  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19723  002148  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19724  00214A                     L11:
 19725  00214A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19726  00214C                     l2315:
 19727                           
 19728                           ;lorawan.c: 1793: }
 19729                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 19730                           
 19731                           ; BSR set to: 0
 19732                           
 19733                           ; BSR set to: 0
 19734  00214C  C206  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19735  002150  C207  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19736  002154  C208  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19737  002158  C209  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19738  00215C  0100               	movlb	0	; () banked
 19739  00215E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19740  002160  0FF0               	addlw	240
 19741  002162  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19742  002164  0E49               	movlw	73
 19743  002166  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19744  002168  0E00               	movlw	0
 19745  00216A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19746  00216C  0E00               	movlw	0
 19747  00216E  ECE3  F02F         	call	_AssembleEncryptionBlock
 19748                           
 19749                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19750  002172  0EE0               	movlw	low _macBuffer
 19751  002174  0100               	movlb	0	; () banked
 19752  002176  6F60               	movwf	memcpy@d1& (0+255),b
 19753  002178  0E04               	movlw	high _macBuffer
 19754  00217A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19755  00217C  0EB1               	movlw	low _aesBuffer
 19756  00217E  6F62               	movwf	memcpy@s1& (0+255),b
 19757  002180  0E01               	movlw	high _aesBuffer
 19758  002182  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19759  002184  0E00               	movlw	0
 19760  002186  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19761  002188  0E10               	movlw	16
 19762  00218A  6F64               	movwf	memcpy@n& (0+255),b
 19763  00218C  EC22  F03D         	call	_memcpy	;wreg free
 19764                           
 19765                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19766  002190  0E22               	movlw	low (_loRa+34)
 19767  002192  0100               	movlb	0	; () banked
 19768  002194  6FB9               	movwf	AESCmac@key& (0+255),b
 19769  002196  0E02               	movlw	high (_loRa+34)
 19770  002198  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 19771  00219A  0EB1               	movlw	low _aesBuffer
 19772  00219C  6FBB               	movwf	AESCmac@output& (0+255),b
 19773  00219E  0E01               	movlw	high _aesBuffer
 19774  0021A0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 19775  0021A2  0EE0               	movlw	low _macBuffer
 19776  0021A4  6FBD               	movwf	AESCmac@input& (0+255),b
 19777  0021A6  0E04               	movlw	high _macBuffer
 19778  0021A8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 19779  0021AA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19780  0021AE  ECF8  F010         	call	_AESCmac	;wreg free
 19781                           
 19782                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19783  0021B2  0100               	movlb	0	; () banked
 19784  0021B4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19785  0021B6  0D01               	mullw	1
 19786  0021B8  0EE0               	movlw	low _macBuffer
 19787  0021BA  24F3               	addwf	prodl,w,c
 19788  0021BC  6F60               	movwf	memcpy@d1& (0+255),b
 19789  0021BE  0E04               	movlw	high _macBuffer
 19790  0021C0  20F4               	addwfc	prodh,w,c
 19791  0021C2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19792  0021C4  0EB1               	movlw	low _aesBuffer
 19793  0021C6  6F62               	movwf	memcpy@s1& (0+255),b
 19794  0021C8  0E01               	movlw	high _aesBuffer
 19795  0021CA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19796  0021CC  0E00               	movlw	0
 19797  0021CE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19798  0021D0  0E04               	movlw	4
 19799  0021D2  6F64               	movwf	memcpy@n& (0+255),b
 19800  0021D4  EC22  F03D         	call	_memcpy	;wreg free
 19801                           
 19802                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19803  0021D8  0100               	movlb	0	; () banked
 19804  0021DA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19805  0021DC  0F04               	addlw	4
 19806  0021DE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19810  0021E0  0EF0               	movlw	240
 19811  0021E2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19812  0021E4  0102               	movlb	2	; () banked
 19813  0021E6  6FD4               	movwf	(_loRa+212)& (0+255),b
 19814  0021E8  6BD5               	clrf	(_loRa+213)& (0+255),b
 19815  0021EA  0EFF               	movlw	255
 19816  0021EC  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 19817                           
 19818                           ; BSR set to: 2
 19819  0021EE  0012               	return		;funcret
 19820  0021F0                     __end_of_AssemblePacket:
 19821                           	opt stack 0
 19822                           tosu	equ	0xFFF
 19823                           tosh	equ	0xFFE
 19824                           tosl	equ	0xFFD
 19825                           pclath	equ	0xFFA
 19826                           tblptru	equ	0xFF8
 19827                           tblptrh	equ	0xFF7
 19828                           tblptrl	equ	0xFF6
 19829                           tablat	equ	0xFF5
 19830                           prodh	equ	0xFF4
 19831                           prodl	equ	0xFF3
 19832                           intcon	equ	0xFF2
 19833                           intcon2	equ	0xFF1
 19834                           intcon3	equ	0xFF0
 19835                           indf0	equ	0xFEF
 19836                           postinc0	equ	0xFEE
 19837                           fsr0h	equ	0xFEA
 19838                           fsr0l	equ	0xFE9
 19839                           wreg	equ	0xFE8
 19840                           postinc1	equ	0xFE6
 19841                           postdec1	equ	0xFE5
 19842                           plusw1	equ	0xFE3
 19843                           fsr1h	equ	0xFE2
 19844                           fsr1l	equ	0xFE1
 19845                           indf2	equ	0xFDF
 19846                           postinc2	equ	0xFDE
 19847                           postdec2	equ	0xFDD
 19848                           plusw2	equ	0xFDB
 19849                           fsr2h	equ	0xFDA
 19850                           fsr2l	equ	0xFD9
 19851                           status	equ	0xFD8
 19852                           
 19853 ;; *************** function _IncludeMacCommandsResponse *****************
 19854 ;; Defined at:
 19855 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19856 ;; Parameters:    Size  Location     Type
 19857 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19858 ;;		 -> macBuffer(271), radioBuffer(271), 
 19859 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19860 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19861 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 19864 ;;  i               1   13[BANK0 ] unsigned char 
 19865 ;; Return value:  Size  Location     Type
 19866 ;;                  1    wreg      void 
 19867 ;; Registers used:
 19868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19869 ;; Tracked objects:
 19870 ;;		On entry : 0/0
 19871 ;;		On exit  : 0/0
 19872 ;;		Unchanged: 0/0
 19873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19874 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19876 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19877 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19878 ;;Total ram usage:       15 bytes
 19879 ;; Hardware stack levels used:    1
 19880 ;; Hardware stack levels required when called:    8
 19881 ;; This function calls:
 19882 ;;		_RADIO_GetPacketSnr
 19883 ;; This function is called by:
 19884 ;;		_AssemblePacket
 19885 ;; This function uses a non-reentrant model
 19886 ;;
 19887                           
 19888                           	psect	text93
 19889  0019DE                     __ptext93:
 19890                           	opt stack 0
 19891  0019DE                     _IncludeMacCommandsResponse:
 19892                           	opt stack 20
 19893                           
 19894                           ;lorawan.c: 1847: uint8_t i = 0;
 19895                           
 19896                           ; BSR set to: 2
 19897                           ;incstack = 0
 19898  0019DE  0E00               	movlw	0
 19899  0019E0  0100               	movlb	0	; () banked
 19900  0019E2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19904  0019E4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19905  0019E8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19906  0019EC  50DF               	movf	indf2,w,c
 19907  0019EE  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19908                           
 19909                           ; BSR set to: 0
 19910                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19911  0019F0  0E00               	movlw	0
 19912  0019F2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19913  0019F4  D218               	goto	l2326
 19914  0019F6                     
 19915                           ; BSR set to: 0
 19916                           ;lorawan.c: 1851: {
 19917                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 19918                           
 19919                           ; BSR set to: 0
 19920  0019F6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19921  0019F8  B4D8               	btfsc	status,2,c
 19922  0019FA  D1F6               	goto	l2331
 19923                           
 19924                           ; BSR set to: 0
 19925  0019FC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19926  0019FE  0D02               	mullw	2
 19927  001A00  0EA8               	movlw	low (_loRa+168)
 19928  001A02  24F3               	addwf	prodl,w,c
 19929  001A04  6ED9               	movwf	fsr2l,c
 19930  001A06  0E02               	movlw	high (_loRa+168)
 19931  001A08  20F4               	addwfc	prodh,w,c
 19932  001A0A  6EDA               	movwf	fsr2h,c
 19933  001A0C  28DE               	incf	postinc2,w,c
 19934  001A0E  B4D8               	btfsc	status,2,c
 19935  001A10  D1EB               	goto	l2331
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;lorawan.c: 1853: {
 19939                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 19940  001A12  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19941  001A16  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19942  001A1A  50DF               	movf	indf2,w,c
 19943  001A1C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19944  001A1E  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19945  001A20  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 19946  001A22  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19947  001A24  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 19948  001A26  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19949  001A28  0EFE               	movlw	254
 19950  001A2A  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19951  001A2C  0EFF               	movlw	255
 19952  001A2E  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19953  001A30  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19954  001A32  0D02               	mullw	2
 19955  001A34  0EA8               	movlw	low (_loRa+168)
 19956  001A36  24F3               	addwf	prodl,w,c
 19957  001A38  6ED9               	movwf	fsr2l,c
 19958  001A3A  0E02               	movlw	high (_loRa+168)
 19959  001A3C  20F4               	addwfc	prodh,w,c
 19960  001A3E  6EDA               	movwf	fsr2h,c
 19961  001A40  50DF               	movf	indf2,w,c
 19962  001A42  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 19963  001A44  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19964  001A46  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19965  001A48  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19966  001A4A  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19967  001A4C  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19968  001A4E  0E87               	movlw	low _macEndDevCmdReplyLen
 19969  001A50  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19970  001A52  6EF6               	movwf	tblptrl,c
 19971  001A54  0EFF               	movlw	high _macEndDevCmdReplyLen
 19972  001A56  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19973  001A58  6EF7               	movwf	tblptrh,c
 19974  001A5A                     	if	1	;There are 3 active tblptr bytes
 19975  001A5A  6AF8               	clrf	tblptru,c
 19976  001A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 19977  001A5E  22F8               	addwfc	tblptru,f,c
 19978  001A60                     	endif
 19979  001A60  0008               	tblrd		*
 19980  001A62  50F5               	movf	tablat,w,c
 19981  001A64  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 19982  001A68  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 19983  001A6A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19984  001A6C  0E00               	movlw	0
 19985  001A6E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19986  001A70  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19987  001A72  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19988  001A74  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19989  001A76  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19990  001A78  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 19991  001A7A  D1B6               	goto	l2331
 19992  001A7C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 19993  001A7E  E105               	bnz	u16290
 19994  001A80  0E10               	movlw	16
 19995  001A82  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19996  001A84  B0D8               	btfsc	status,0,c
 19997  001A86  D1D5               	goto	u16400
 19998  001A88  D1AF               	goto	l2331
 19999  001A8A                     u16290:
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;lorawan.c: 1855: {
 20003                           ;lorawan.c: 1856: break;
 20004  001A8A  D1D3               	goto	u16400
 20005  001A8C                     
 20006                           ; BSR set to: 0
 20007                           ;lorawan.c: 1862: {
 20008                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 20009                           
 20010                           ; BSR set to: 0
 20011  001A8C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20012  001A8E  0D01               	mullw	1
 20013  001A90  50F3               	movf	prodl,w,c
 20014  001A92  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20015  001A94  6ED9               	movwf	fsr2l,c
 20016  001A96  50F4               	movf	prodh,w,c
 20017  001A98  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20018  001A9A  6EDA               	movwf	fsr2h,c
 20019  001A9C  0E03               	movlw	3
 20020  001A9E  6EDF               	movwf	indf2,c
 20021                           
 20022                           ; BSR set to: 0
 20023  001AA0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 20027  001AA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20028  001AA4  0D01               	mullw	1
 20029  001AA6  50F3               	movf	prodl,w,c
 20030  001AA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20031  001AAA  6ED9               	movwf	fsr2l,c
 20032  001AAC  50F4               	movf	prodh,w,c
 20033  001AAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20034  001AB0  6EDA               	movwf	fsr2h,c
 20035  001AB2  0E00               	movlw	0
 20036  001AB4  6EDF               	movwf	indf2,c
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 20040  001AB6  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20041  001AB8  0D02               	mullw	2
 20042  001ABA  0E00               	movlw	low _loRa
 20043  001ABC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20044  001ABE  0E02               	movlw	high _loRa
 20045  001AC0  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20046  001AC2  0EA8               	movlw	168
 20047  001AC4  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20048  001AC6  0E00               	movlw	0
 20049  001AC8  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20050  001ACA  50F3               	movf	prodl,w,c
 20051  001ACC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20052  001ACE  50F4               	movf	prodh,w,c
 20053  001AD0  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20054  001AD2  0E01               	movlw	1
 20055  001AD4  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20056  001AD6  6ED9               	movwf	fsr2l,c
 20057  001AD8  0E00               	movlw	0
 20058  001ADA  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20059  001ADC  6EDA               	movwf	fsr2h,c
 20060  001ADE  0102               	movlb	2	; () banked
 20061  001AE0  A0DF               	btfss	indf2,0,c
 20062  001AE2  D00B               	goto	l2333
 20063                           
 20064                           ; BSR set to: 2
 20065                           ;lorawan.c: 1866: {
 20066                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 20067  001AE4  0100               	movlb	0	; () banked
 20068  001AE6  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20069  001AE8  0D01               	mullw	1
 20070  001AEA  50F3               	movf	prodl,w,c
 20071  001AEC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20072  001AEE  6ED9               	movwf	fsr2l,c
 20073  001AF0  50F4               	movf	prodh,w,c
 20074  001AF2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20075  001AF4  6EDA               	movwf	fsr2h,c
 20076  001AF6  0E00               	movlw	0
 20077  001AF8  80DB               	bsf	plusw2,0,c
 20078  001AFA                     l2333:
 20079                           
 20080                           ;lorawan.c: 1868: }
 20081                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 20082  001AFA  0100               	movlb	0	; () banked
 20083  001AFC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20084  001AFE  0D02               	mullw	2
 20085  001B00  0E00               	movlw	low _loRa
 20086  001B02  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20087  001B04  0E02               	movlw	high _loRa
 20088  001B06  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20089  001B08  0EA8               	movlw	168
 20090  001B0A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20091  001B0C  0E00               	movlw	0
 20092  001B0E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20093  001B10  50F3               	movf	prodl,w,c
 20094  001B12  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20095  001B14  50F4               	movf	prodh,w,c
 20096  001B16  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20097  001B18  0E01               	movlw	1
 20098  001B1A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20099  001B1C  6ED9               	movwf	fsr2l,c
 20100  001B1E  0E00               	movlw	0
 20101  001B20  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20102  001B22  6EDA               	movwf	fsr2h,c
 20103  001B24  0102               	movlb	2	; () banked
 20104  001B26  A2DF               	btfss	indf2,1,c
 20105  001B28  D00B               	goto	l2334
 20106                           
 20107                           ; BSR set to: 2
 20108                           ;lorawan.c: 1871: {
 20109                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 20110  001B2A  0100               	movlb	0	; () banked
 20111  001B2C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20112  001B2E  0D01               	mullw	1
 20113  001B30  50F3               	movf	prodl,w,c
 20114  001B32  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20115  001B34  6ED9               	movwf	fsr2l,c
 20116  001B36  50F4               	movf	prodh,w,c
 20117  001B38  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20118  001B3A  6EDA               	movwf	fsr2h,c
 20119  001B3C  0E00               	movlw	0
 20120  001B3E  82DB               	bsf	plusw2,1,c
 20121  001B40                     l2334:
 20122                           
 20123                           ;lorawan.c: 1873: }
 20124                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 20125  001B40  0100               	movlb	0	; () banked
 20126  001B42  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20127  001B44  0D02               	mullw	2
 20128  001B46  0E00               	movlw	low _loRa
 20129  001B48  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20130  001B4A  0E02               	movlw	high _loRa
 20131  001B4C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20132  001B4E  0EA8               	movlw	168
 20133  001B50  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20134  001B52  0E00               	movlw	0
 20135  001B54  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20136  001B56  50F3               	movf	prodl,w,c
 20137  001B58  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20138  001B5A  50F4               	movf	prodh,w,c
 20139  001B5C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20140  001B5E  0E01               	movlw	1
 20141  001B60  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20142  001B62  6ED9               	movwf	fsr2l,c
 20143  001B64  0E00               	movlw	0
 20144  001B66  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20145  001B68  6EDA               	movwf	fsr2h,c
 20146  001B6A  0102               	movlb	2	; () banked
 20147  001B6C  A4DF               	btfss	indf2,2,c
 20148  001B6E  D089               	goto	l2340
 20149                           
 20150                           ; BSR set to: 2
 20151                           ;lorawan.c: 1876: {
 20152                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 20153  001B70  0100               	movlb	0	; () banked
 20154  001B72  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20155  001B74  0D01               	mullw	1
 20156  001B76  50F3               	movf	prodl,w,c
 20157  001B78  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20158  001B7A  6ED9               	movwf	fsr2l,c
 20159  001B7C  50F4               	movf	prodh,w,c
 20160  001B7E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20161  001B80  6EDA               	movwf	fsr2h,c
 20162  001B82  0E00               	movlw	0
 20163  001B84  84DB               	bsf	plusw2,2,c
 20164                           
 20165                           ; BSR set to: 0
 20166  001B86  D07D               	goto	l2340
 20167  001B88                     
 20168                           ; BSR set to: 0
 20169                           ;lorawan.c: 1884: {
 20170                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 20171                           
 20172                           ; BSR set to: 0
 20173  001B88  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20174  001B8A  0D01               	mullw	1
 20175  001B8C  50F3               	movf	prodl,w,c
 20176  001B8E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20177  001B90  6ED9               	movwf	fsr2l,c
 20178  001B92  50F4               	movf	prodh,w,c
 20179  001B94  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20180  001B96  6EDA               	movwf	fsr2h,c
 20181  001B98  0E05               	movlw	5
 20182  001B9A  6EDF               	movwf	indf2,c
 20183                           
 20184                           ; BSR set to: 0
 20185  001B9C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 20189  001B9E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20190  001BA0  0D01               	mullw	1
 20191  001BA2  50F3               	movf	prodl,w,c
 20192  001BA4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20193  001BA6  6ED9               	movwf	fsr2l,c
 20194  001BA8  50F4               	movf	prodh,w,c
 20195  001BAA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20196  001BAC  6EDA               	movwf	fsr2h,c
 20197  001BAE  0E00               	movlw	0
 20198  001BB0  6EDF               	movwf	indf2,c
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 20202  001BB2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20203  001BB4  0D02               	mullw	2
 20204  001BB6  0E00               	movlw	low _loRa
 20205  001BB8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20206  001BBA  0E02               	movlw	high _loRa
 20207  001BBC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20208  001BBE  0EA8               	movlw	168
 20209  001BC0  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20210  001BC2  0E00               	movlw	0
 20211  001BC4  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20212  001BC6  50F3               	movf	prodl,w,c
 20213  001BC8  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20214  001BCA  50F4               	movf	prodh,w,c
 20215  001BCC  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20216  001BCE  0E01               	movlw	1
 20217  001BD0  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20218  001BD2  6ED9               	movwf	fsr2l,c
 20219  001BD4  0E00               	movlw	0
 20220  001BD6  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20221  001BD8  6EDA               	movwf	fsr2h,c
 20222  001BDA  0102               	movlb	2	; () banked
 20223  001BDC  A6DF               	btfss	indf2,3,c
 20224  001BDE  D00B               	goto	l2338
 20225                           
 20226                           ; BSR set to: 2
 20227                           ;lorawan.c: 1888: {
 20228                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 20229  001BE0  0100               	movlb	0	; () banked
 20230  001BE2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20231  001BE4  0D01               	mullw	1
 20232  001BE6  50F3               	movf	prodl,w,c
 20233  001BE8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20234  001BEA  6ED9               	movwf	fsr2l,c
 20235  001BEC  50F4               	movf	prodh,w,c
 20236  001BEE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20237  001BF0  6EDA               	movwf	fsr2h,c
 20238  001BF2  0E00               	movlw	0
 20239  001BF4  80DB               	bsf	plusw2,0,c
 20240  001BF6                     l2338:
 20241                           
 20242                           ;lorawan.c: 1890: }
 20243                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 20244  001BF6  0100               	movlb	0	; () banked
 20245  001BF8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20246  001BFA  0D02               	mullw	2
 20247  001BFC  0E00               	movlw	low _loRa
 20248  001BFE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20249  001C00  0E02               	movlw	high _loRa
 20250  001C02  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20251  001C04  0EA8               	movlw	168
 20252  001C06  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20253  001C08  0E00               	movlw	0
 20254  001C0A  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20255  001C0C  50F3               	movf	prodl,w,c
 20256  001C0E  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20257  001C10  50F4               	movf	prodh,w,c
 20258  001C12  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20259  001C14  0E01               	movlw	1
 20260  001C16  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20261  001C18  6ED9               	movwf	fsr2l,c
 20262  001C1A  0E00               	movlw	0
 20263  001C1C  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20264  001C1E  6EDA               	movwf	fsr2h,c
 20265  001C20  0102               	movlb	2	; () banked
 20266  001C22  A8DF               	btfss	indf2,4,c
 20267  001C24  D00B               	goto	l2339
 20268                           
 20269                           ; BSR set to: 2
 20270                           ;lorawan.c: 1893: {
 20271                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 20272  001C26  0100               	movlb	0	; () banked
 20273  001C28  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20274  001C2A  0D01               	mullw	1
 20275  001C2C  50F3               	movf	prodl,w,c
 20276  001C2E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20277  001C30  6ED9               	movwf	fsr2l,c
 20278  001C32  50F4               	movf	prodh,w,c
 20279  001C34  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20280  001C36  6EDA               	movwf	fsr2h,c
 20281  001C38  0E00               	movlw	0
 20282  001C3A  82DB               	bsf	plusw2,1,c
 20283  001C3C                     l2339:
 20284                           
 20285                           ;lorawan.c: 1895: }
 20286                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 20287  001C3C  0100               	movlb	0	; () banked
 20288  001C3E  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20289  001C40  0D02               	mullw	2
 20290  001C42  0E00               	movlw	low _loRa
 20291  001C44  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20292  001C46  0E02               	movlw	high _loRa
 20293  001C48  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20294  001C4A  0EA8               	movlw	168
 20295  001C4C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20296  001C4E  0E00               	movlw	0
 20297  001C50  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20298  001C52  50F3               	movf	prodl,w,c
 20299  001C54  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20300  001C56  50F4               	movf	prodh,w,c
 20301  001C58  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20302  001C5A  0E01               	movlw	1
 20303  001C5C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20304  001C5E  6ED9               	movwf	fsr2l,c
 20305  001C60  0E00               	movlw	0
 20306  001C62  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20307  001C64  6EDA               	movwf	fsr2h,c
 20308  001C66  0102               	movlb	2	; () banked
 20309  001C68  AADF               	btfss	indf2,5,c
 20310  001C6A  D00B               	goto	l2340
 20311                           
 20312                           ; BSR set to: 2
 20313                           ;lorawan.c: 1898: {
 20314                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 20315  001C6C  0100               	movlb	0	; () banked
 20316  001C6E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20317  001C70  0D01               	mullw	1
 20318  001C72  50F3               	movf	prodl,w,c
 20319  001C74  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20320  001C76  6ED9               	movwf	fsr2l,c
 20321  001C78  50F4               	movf	prodh,w,c
 20322  001C7A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20323  001C7C  6EDA               	movwf	fsr2h,c
 20324  001C7E  0E00               	movlw	0
 20325  001C80  84DB               	bsf	plusw2,2,c
 20326  001C82                     l2340:
 20327                           
 20328                           ;lorawan.c: 1900: }
 20329                           ;lorawan.c: 1902: bufferIndex ++;
 20330                           
 20331                           ; BSR set to: 0
 20332  001C82  0100               	movlb	0	; () banked
 20333  001C84  D03C               	goto	L12
 20334  001C86                     
 20335                           ; BSR set to: 0
 20336                           ;lorawan.c: 1907: {
 20337                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 20338                           
 20339                           ; BSR set to: 0
 20340  001C86  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20341  001C88  0D01               	mullw	1
 20342  001C8A  50F3               	movf	prodl,w,c
 20343  001C8C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20344  001C8E  6ED9               	movwf	fsr2l,c
 20345  001C90  50F4               	movf	prodh,w,c
 20346  001C92  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20347  001C94  6EDA               	movwf	fsr2h,c
 20348  001C96  0E06               	movlw	6
 20349  001C98  6EDF               	movwf	indf2,c
 20350                           
 20351                           ; BSR set to: 0
 20352  001C9A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 20356  001C9C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20357  001C9E  0D01               	mullw	1
 20358  001CA0  50F3               	movf	prodl,w,c
 20359  001CA2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20360  001CA4  6ED9               	movwf	fsr2l,c
 20361  001CA6  50F4               	movf	prodh,w,c
 20362  001CA8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20363  001CAA  6EDA               	movwf	fsr2h,c
 20364  001CAC  C2E0  FFDF         	movff	_loRa+224,indf2
 20365  001CB0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20366                           
 20367                           ; BSR set to: 0
 20368                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 20369  001CB2  EC45  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20370  001CB6  0A80               	xorlw	128
 20371  001CB8  0FA0               	addlw	160
 20372  001CBA  A0D8               	btfss	status,0,c
 20373  001CBC  D006               	goto	u16370
 20374  001CBE  EC45  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20375  001CC2  0A80               	xorlw	128
 20376  001CC4  0F60               	addlw	-160
 20377  001CC6  A0D8               	btfss	status,0,c
 20378  001CC8  D00C               	goto	l2342
 20379  001CCA                     u16370:
 20380                           
 20381                           ;lorawan.c: 1911: {
 20382                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 20383  001CCA  0100               	movlb	0	; () banked
 20384  001CCC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20385  001CCE  0D01               	mullw	1
 20386  001CD0  50F3               	movf	prodl,w,c
 20387  001CD2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20388  001CD4  6ED9               	movwf	fsr2l,c
 20389  001CD6  50F4               	movf	prodh,w,c
 20390  001CD8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20391  001CDA  6EDA               	movwf	fsr2h,c
 20392  001CDC  0E20               	movlw	32
 20393  001CDE  6EDF               	movwf	indf2,c
 20394  001CE0  D00E               	goto	L12
 20395  001CE2                     l2342:
 20396                           
 20397                           ;lorawan.c: 1914: else
 20398                           ;lorawan.c: 1915: {
 20399                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 20400                           
 20401                           ; BSR set to: 0
 20402  001CE2  0100               	movlb	0	; () banked
 20403  001CE4  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20404  001CE6  0D01               	mullw	1
 20405  001CE8  50F3               	movf	prodl,w,c
 20406  001CEA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20407  001CEC  6ED9               	movwf	fsr2l,c
 20408  001CEE  50F4               	movf	prodh,w,c
 20409  001CF0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20410  001CF2  6EDA               	movwf	fsr2h,c
 20411  001CF4  EC45  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20412  001CF8  0B3F               	andlw	63
 20413  001CFA  6EDF               	movwf	indf2,c
 20414  001CFC  D7C2               	goto	l2340
 20415  001CFE                     L12:
 20416  001CFE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;lorawan.c: 1917: }
 20420                           ;lorawan.c: 1918: }
 20421                           ;lorawan.c: 1919: break;
 20422  001D00  D091               	goto	l2336
 20423  001D02                     
 20424                           ; BSR set to: 0
 20425                           ;lorawan.c: 1922: {
 20426                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 20427                           
 20428                           ; BSR set to: 0
 20429  001D02  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20430  001D04  0D01               	mullw	1
 20431  001D06  50F3               	movf	prodl,w,c
 20432  001D08  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20433  001D0A  6ED9               	movwf	fsr2l,c
 20434  001D0C  50F4               	movf	prodh,w,c
 20435  001D0E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20436  001D10  6EDA               	movwf	fsr2h,c
 20437  001D12  0E07               	movlw	7
 20438  001D14  6EDF               	movwf	indf2,c
 20439                           
 20440                           ; BSR set to: 0
 20441  001D16  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 20445  001D18  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20446  001D1A  0D01               	mullw	1
 20447  001D1C  50F3               	movf	prodl,w,c
 20448  001D1E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20449  001D20  6ED9               	movwf	fsr2l,c
 20450  001D22  50F4               	movf	prodh,w,c
 20451  001D24  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20452  001D26  6EDA               	movwf	fsr2h,c
 20453  001D28  0E00               	movlw	0
 20454  001D2A  6EDF               	movwf	indf2,c
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 20458  001D2C  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20459  001D2E  0D02               	mullw	2
 20460  001D30  0E00               	movlw	low _loRa
 20461  001D32  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20462  001D34  0E02               	movlw	high _loRa
 20463  001D36  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20464  001D38  0EA8               	movlw	168
 20465  001D3A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20466  001D3C  0E00               	movlw	0
 20467  001D3E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20468  001D40  50F3               	movf	prodl,w,c
 20469  001D42  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20470  001D44  50F4               	movf	prodh,w,c
 20471  001D46  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20472  001D48  0E01               	movlw	1
 20473  001D4A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20474  001D4C  6ED9               	movwf	fsr2l,c
 20475  001D4E  0E00               	movlw	0
 20476  001D50  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20477  001D52  6EDA               	movwf	fsr2h,c
 20478  001D54  0102               	movlb	2	; () banked
 20479  001D56  AEDF               	btfss	indf2,7,c
 20480  001D58  D00B               	goto	l2347
 20481                           
 20482                           ; BSR set to: 2
 20483                           ;lorawan.c: 1926: {
 20484                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 20485  001D5A  0100               	movlb	0	; () banked
 20486  001D5C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20487  001D5E  0D01               	mullw	1
 20488  001D60  50F3               	movf	prodl,w,c
 20489  001D62  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20490  001D64  6ED9               	movwf	fsr2l,c
 20491  001D66  50F4               	movf	prodh,w,c
 20492  001D68  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20493  001D6A  6EDA               	movwf	fsr2h,c
 20494  001D6C  0E00               	movlw	0
 20495  001D6E  80DB               	bsf	plusw2,0,c
 20496  001D70                     l2347:
 20497                           
 20498                           ;lorawan.c: 1928: }
 20499                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 20500  001D70  0100               	movlb	0	; () banked
 20501  001D72  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20502  001D74  0D02               	mullw	2
 20503  001D76  0E00               	movlw	low _loRa
 20504  001D78  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20505  001D7A  0E02               	movlw	high _loRa
 20506  001D7C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20507  001D7E  0EA8               	movlw	168
 20508  001D80  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20509  001D82  0E00               	movlw	0
 20510  001D84  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20511  001D86  50F3               	movf	prodl,w,c
 20512  001D88  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20513  001D8A  50F4               	movf	prodh,w,c
 20514  001D8C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20515  001D8E  0E01               	movlw	1
 20516  001D90  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20517  001D92  6ED9               	movwf	fsr2l,c
 20518  001D94  0E00               	movlw	0
 20519  001D96  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20520  001D98  6EDA               	movwf	fsr2h,c
 20521  001D9A  0102               	movlb	2	; () banked
 20522  001D9C  ACDF               	btfss	indf2,6,c
 20523  001D9E  D771               	goto	l2340
 20524                           
 20525                           ; BSR set to: 2
 20526                           ;lorawan.c: 1931: {
 20527                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20528  001DA0  0100               	movlb	0	; () banked
 20529  001DA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20530  001DA4  0D01               	mullw	1
 20531  001DA6  50F3               	movf	prodl,w,c
 20532  001DA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20533  001DAA  6ED9               	movwf	fsr2l,c
 20534  001DAC  50F4               	movf	prodh,w,c
 20535  001DAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20536  001DB0  6EDA               	movwf	fsr2h,c
 20537  001DB2  0E00               	movlw	0
 20538  001DB4  82DB               	bsf	plusw2,1,c
 20539                           
 20540                           ; BSR set to: 0
 20541  001DB6  D765               	goto	l2340
 20542  001DB8                     l2349:
 20543                           
 20544                           ; BSR set to: 0
 20545                           ;lorawan.c: 1939: {
 20546                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20547  001DB8  0102               	movlb	2	; () banked
 20548  001DBA  69DD               	setf	(_loRa+221)& (0+255),b
 20549                           
 20550                           ; BSR set to: 2
 20551                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20552  001DBC  0E00               	movlw	0
 20553  001DBE  6FDE               	movwf	(_loRa+222)& (0+255),b
 20554                           
 20555                           ; BSR set to: 2
 20556                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20557  001DC0  0100               	movlb	0	; () banked
 20558  001DC2                     
 20559                           ; BSR set to: 0
 20560                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 20561                           ;lorawan.c: 1948: {
 20562                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20563                           
 20564                           ; BSR set to: 0
 20565                           
 20566                           ; BSR set to: 0
 20567  001DC2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20568  001DC4  0D02               	mullw	2
 20569  001DC6  0EA8               	movlw	low (_loRa+168)
 20570  001DC8  24F3               	addwf	prodl,w,c
 20571  001DCA  6ED9               	movwf	fsr2l,c
 20572  001DCC  0E02               	movlw	high (_loRa+168)
 20573  001DCE  20F4               	addwfc	prodh,w,c
 20574  001DD0  6EDA               	movwf	fsr2h,c
 20575  001DD2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20576  001DD4  0D01               	mullw	1
 20577  001DD6  50F3               	movf	prodl,w,c
 20578  001DD8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20579  001DDA  6EE9               	movwf	fsr0l,c
 20580  001DDC  50F4               	movf	prodh,w,c
 20581  001DDE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20582  001DE0  6EEA               	movwf	fsr0h,c
 20583  001DE2  CFDF FFEF          	movff	indf2,indf0
 20584  001DE6  D78B               	goto	L12
 20585  001DE8                     l2331:
 20586                           
 20587                           ; BSR set to: 0
 20588                           
 20589                           ; BSR set to: 0
 20590  001DE8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20591  001DEA  0D02               	mullw	2
 20592  001DEC  0EA8               	movlw	low (_loRa+168)
 20593  001DEE  24F3               	addwf	prodl,w,c
 20594  001DF0  6ED9               	movwf	fsr2l,c
 20595  001DF2  0E02               	movlw	high (_loRa+168)
 20596  001DF4  20F4               	addwfc	prodh,w,c
 20597  001DF6  6EDA               	movwf	fsr2h,c
 20598  001DF8  50DF               	movf	indf2,w,c
 20599                           
 20600                           ; Switch size 1, requested type "space"
 20601                           ; Number of cases is 7, Range of values is 2 to 8
 20602                           ; switch strategies available:
 20603                           ; Name         Instructions Cycles
 20604                           ; simple_byte           22    12 (average)
 20605                           ;	Chosen strategy is simple_byte
 20606  001DFA  0A02               	xorlw	2	; case 2
 20607  001DFC  B4D8               	btfsc	status,2,c
 20608  001DFE  D7DC               	goto	l2349
 20609  001E00  0A01               	xorlw	1	; case 3
 20610  001E02  B4D8               	btfsc	status,2,c
 20611  001E04  D643               	goto	l2332
 20612  001E06  0A07               	xorlw	7	; case 4
 20613  001E08  B4D8               	btfsc	status,2,c
 20614  001E0A  D7DB               	goto	l2350
 20615  001E0C  0A01               	xorlw	1	; case 5
 20616  001E0E  B4D8               	btfsc	status,2,c
 20617  001E10  D6BB               	goto	l2337
 20618  001E12  0A03               	xorlw	3	; case 6
 20619  001E14  B4D8               	btfsc	status,2,c
 20620  001E16  D737               	goto	l2341
 20621  001E18  0A01               	xorlw	1	; case 7
 20622  001E1A  B4D8               	btfsc	status,2,c
 20623  001E1C  D772               	goto	l2346
 20624  001E1E  0A0F               	xorlw	15	; case 8
 20625  001E20  B4D8               	btfsc	status,2,c
 20626  001E22  D7CF               	goto	l2350
 20627  001E24                     l2336:
 20628                           
 20629                           ; BSR set to: 0
 20630                           
 20631                           ; BSR set to: 0
 20632  001E24  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20633  001E26                     l2326:
 20634                           
 20635                           ; BSR set to: 0
 20636                           
 20637                           ; BSR set to: 0
 20638  001E26  0102               	movlb	2	; () banked
 20639  001E28  51A7               	movf	(_loRa+167)& (0+255),w,b
 20640  001E2A  0100               	movlb	0	; () banked
 20641  001E2C  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20642  001E2E  A0D8               	btfss	status,0,c
 20643  001E30  D5E2               	goto	l2327
 20644  001E32                     u16400:
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;lorawan.c: 1957: }
 20648                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20649                           
 20650                           ; BSR set to: 0
 20651  001E32  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20652  001E36  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20653  001E3A  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20654                           
 20655                           ; BSR set to: 0
 20656  001E3E  0012               	return		;funcret
 20657  001E40                     __end_of_IncludeMacCommandsResponse:
 20658                           	opt stack 0
 20659                           tosu	equ	0xFFF
 20660                           tosh	equ	0xFFE
 20661                           tosl	equ	0xFFD
 20662                           pclath	equ	0xFFA
 20663                           tblptru	equ	0xFF8
 20664                           tblptrh	equ	0xFF7
 20665                           tblptrl	equ	0xFF6
 20666                           tablat	equ	0xFF5
 20667                           prodh	equ	0xFF4
 20668                           prodl	equ	0xFF3
 20669                           intcon	equ	0xFF2
 20670                           intcon2	equ	0xFF1
 20671                           intcon3	equ	0xFF0
 20672                           indf0	equ	0xFEF
 20673                           postinc0	equ	0xFEE
 20674                           fsr0h	equ	0xFEA
 20675                           fsr0l	equ	0xFE9
 20676                           wreg	equ	0xFE8
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           plusw1	equ	0xFE3
 20680                           fsr1h	equ	0xFE2
 20681                           fsr1l	equ	0xFE1
 20682                           indf2	equ	0xFDF
 20683                           postinc2	equ	0xFDE
 20684                           postdec2	equ	0xFDD
 20685                           plusw2	equ	0xFDB
 20686                           fsr2h	equ	0xFDA
 20687                           fsr2l	equ	0xFD9
 20688                           status	equ	0xFD8
 20689                           
 20690 ;; *************** function _RADIO_GetPacketSnr *****************
 20691 ;; Defined at:
 20692 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20693 ;; Parameters:    Size  Location     Type
 20694 ;;		None
 20695 ;; Auto vars:     Size  Location     Type
 20696 ;;		None
 20697 ;; Return value:  Size  Location     Type
 20698 ;;                  1    wreg      char 
 20699 ;; Registers used:
 20700 ;;		wreg, status,2
 20701 ;; Tracked objects:
 20702 ;;		On entry : 0/0
 20703 ;;		On exit  : 0/0
 20704 ;;		Unchanged: 0/0
 20705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20710 ;;Total ram usage:        0 bytes
 20711 ;; Hardware stack levels used:    1
 20712 ;; Hardware stack levels required when called:    7
 20713 ;; This function calls:
 20714 ;;		Nothing
 20715 ;; This function is called by:
 20716 ;;		_IncludeMacCommandsResponse
 20717 ;; This function uses a non-reentrant model
 20718 ;;
 20719                           
 20720                           	psect	text94
 20721  008C8A                     __ptext94:
 20722                           	opt stack 0
 20723  008C8A                     _RADIO_GetPacketSnr:
 20724                           	opt stack 20
 20725                           
 20726                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20727                           
 20728                           ; BSR set to: 0
 20729                           ;incstack = 0
 20730  008C8A  0101               	movlb	1	; () banked
 20731  008C8C  51AD               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20732  008C8E  0012               	return	
 20733  008C90                     __end_of_RADIO_GetPacketSnr:
 20734                           	opt stack 0
 20735                           tosu	equ	0xFFF
 20736                           tosh	equ	0xFFE
 20737                           tosl	equ	0xFFD
 20738                           pclath	equ	0xFFA
 20739                           tblptru	equ	0xFF8
 20740                           tblptrh	equ	0xFF7
 20741                           tblptrl	equ	0xFF6
 20742                           tablat	equ	0xFF5
 20743                           prodh	equ	0xFF4
 20744                           prodl	equ	0xFF3
 20745                           intcon	equ	0xFF2
 20746                           intcon2	equ	0xFF1
 20747                           intcon3	equ	0xFF0
 20748                           indf0	equ	0xFEF
 20749                           postinc0	equ	0xFEE
 20750                           fsr0h	equ	0xFEA
 20751                           fsr0l	equ	0xFE9
 20752                           wreg	equ	0xFE8
 20753                           postinc1	equ	0xFE6
 20754                           postdec1	equ	0xFE5
 20755                           plusw1	equ	0xFE3
 20756                           fsr1h	equ	0xFE2
 20757                           fsr1l	equ	0xFE1
 20758                           indf2	equ	0xFDF
 20759                           postinc2	equ	0xFDE
 20760                           postdec2	equ	0xFDD
 20761                           plusw2	equ	0xFDB
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function _FindSmallestDataRate *****************
 20767 ;; Defined at:
 20768 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;		None
 20771 ;; Auto vars:     Size  Location     Type
 20772 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20773 ;;  i               1    2[BANK0 ] unsigned char 
 20774 ;;  found           1    1[BANK0 ] unsigned char 
 20775 ;; Return value:  Size  Location     Type
 20776 ;;                  1    wreg      unsigned char 
 20777 ;; Registers used:
 20778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20779 ;; Tracked objects:
 20780 ;;		On entry : 0/0
 20781 ;;		On exit  : 0/0
 20782 ;;		Unchanged: 0/0
 20783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20788 ;;Total ram usage:        4 bytes
 20789 ;; Hardware stack levels used:    1
 20790 ;; Hardware stack levels required when called:    7
 20791 ;; This function calls:
 20792 ;;		Nothing
 20793 ;; This function is called by:
 20794 ;;		_AckRetransmissionCallback
 20795 ;;		_AssemblePacket
 20796 ;; This function uses a non-reentrant model
 20797 ;;
 20798                           
 20799                           	psect	text95
 20800  006464                     __ptext95:
 20801                           	opt stack 0
 20802  006464                     _FindSmallestDataRate:
 20803                           	opt stack 21
 20804                           
 20805                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 20806                           
 20807                           ; BSR set to: 1
 20808                           ;incstack = 0
 20809  006464  0E00               	movlw	0
 20810  006466  0100               	movlb	0	; () banked
 20811  006468  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20812                           
 20813                           ;lorawan.c: 1966: bool found = 0;
 20814  00646A  0E00               	movlw	0
 20815  00646C  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20819  00646E  0102               	movlb	2	; () banked
 20820  006470  51DF               	movf	(_loRa+223)& (0+255),w,b
 20821  006472  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20822  006474  B0D8               	btfsc	status,0,c
 20823  006476  D062               	goto	l2367
 20824                           
 20825                           ; BSR set to: 2
 20826                           ;lorawan.c: 1969: {
 20827                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20828  006478  05DF               	decf	(_loRa+223)& (0+255),w,b
 20829  00647A  0100               	movlb	0	; () banked
 20830  00647C  D050               	goto	L13
 20831  00647E                     
 20832                           ; BSR set to: 0
 20833                           ;lorawan.c: 1973: {
 20834                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20835                           
 20836                           ; BSR set to: 0
 20837  00647E  0E00               	movlw	0
 20838  006480  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20839  006482  D03D               	goto	l2359
 20840  006484                     
 20841                           ; BSR set to: 0
 20842                           ;lorawan.c: 1975: {
 20843                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20844                           
 20845                           ; BSR set to: 0
 20846  006484  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20847  006486  0D0E               	mullw	14
 20848  006488  0E05               	movlw	5
 20849  00648A  26F3               	addwf	prodl,f,c
 20850  00648C  0E00               	movlw	0
 20851  00648E  22F4               	addwfc	prodh,f,c
 20852  006490  0E00               	movlw	low _Channels
 20853  006492  24F3               	addwf	prodl,w,c
 20854  006494  6ED9               	movwf	fsr2l,c
 20855  006496  0E04               	movlw	high _Channels
 20856  006498  20F4               	addwfc	prodh,w,c
 20857  00649A  6EDA               	movwf	fsr2h,c
 20858  00649C  0104               	movlb	4	; () banked
 20859  00649E  50DF               	movf	223,w,c
 20860  0064A0  0B0F               	andlw	15
 20861  0064A2  0100               	movlb	0	; () banked
 20862  0064A4  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20863  0064A6  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20864  0064A8  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20865  0064AA  A0D8               	btfss	status,0,c
 20866  0064AC  D027               	goto	l2361
 20867                           
 20868                           ; BSR set to: 0
 20869  0064AE  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20870  0064B0  0D0E               	mullw	14
 20871  0064B2  0E05               	movlw	5
 20872  0064B4  26F3               	addwf	prodl,f,c
 20873  0064B6  0E00               	movlw	0
 20874  0064B8  22F4               	addwfc	prodh,f,c
 20875  0064BA  0E00               	movlw	low _Channels
 20876  0064BC  24F3               	addwf	prodl,w,c
 20877  0064BE  6ED9               	movwf	fsr2l,c
 20878  0064C0  0E04               	movlw	high _Channels
 20879  0064C2  20F4               	addwfc	prodh,w,c
 20880  0064C4  6EDA               	movwf	fsr2h,c
 20881  0064C6  0104               	movlb	4	; () banked
 20882  0064C8  38DF               	swapf	223,w,c
 20883  0064CA  0B0F               	andlw	15
 20884  0064CC  0100               	movlb	0	; () banked
 20885  0064CE  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20886  0064D0  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20887  0064D2  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20888  0064D4  A0D8               	btfss	status,0,c
 20889  0064D6  D012               	goto	l2361
 20890                           
 20891                           ; BSR set to: 0
 20892  0064D8  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20893  0064DA  0D0E               	mullw	14
 20894  0064DC  0E04               	movlw	4
 20895  0064DE  26F3               	addwf	prodl,f,c
 20896  0064E0  0E00               	movlw	0
 20897  0064E2  22F4               	addwfc	prodh,f,c
 20898  0064E4  0E00               	movlw	low _Channels
 20899  0064E6  24F3               	addwf	prodl,w,c
 20900  0064E8  6ED9               	movwf	fsr2l,c
 20901  0064EA  0E04               	movlw	high _Channels
 20902  0064EC  20F4               	addwfc	prodh,w,c
 20903  0064EE  6EDA               	movwf	fsr2h,c
 20904  0064F0  04DE               	decf	postinc2,w,c
 20905  0064F2  A4D8               	btfss	status,2,c
 20906  0064F4  D003               	goto	l2361
 20907                           
 20908                           ; BSR set to: 0
 20909                           ;lorawan.c: 1977: {
 20910                           ;lorawan.c: 1978: found = 1;
 20911  0064F6  0E01               	movlw	1
 20912  0064F8  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20913                           
 20914                           ;lorawan.c: 1979: break;
 20915  0064FA  D007               	goto	u16120
 20916  0064FC                     l2361:
 20917                           
 20918                           ; BSR set to: 0
 20919                           
 20920                           ; BSR set to: 0
 20921  0064FC  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20922  0064FE                     l2359:
 20923                           
 20924                           ; BSR set to: 0
 20925                           
 20926                           ; BSR set to: 0
 20927  0064FE  0102               	movlb	2	; () banked
 20928  006500  51ED               	movf	(_loRa+237)& (0+255),w,b
 20929  006502  0100               	movlb	0	; () banked
 20930  006504  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20931  006506  A0D8               	btfss	status,0,c
 20932  006508  D7BD               	goto	l2360
 20933  00650A                     u16120:
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;lorawan.c: 1980: }
 20937                           ;lorawan.c: 1981: }
 20938                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 20939                           
 20940                           ; BSR set to: 0
 20941  00650A  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20942  00650C  A4D8               	btfss	status,2,c
 20943  00650E  D008               	goto	l2363
 20944                           
 20945                           ; BSR set to: 0
 20946  006510  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20947  006512  0102               	movlb	2	; () banked
 20948  006514  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20949  006516  B0D8               	btfsc	status,0,c
 20950  006518  D003               	goto	l2363
 20951                           
 20952                           ; BSR set to: 2
 20953                           ;lorawan.c: 1983: {
 20954                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 20955  00651A  0100               	movlb	0	; () banked
 20956  00651C  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20957  00651E                     L13:
 20958  00651E  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20959  006520                     l2363:
 20960                           
 20961                           ; BSR set to: 0
 20962                           
 20963                           ; BSR set to: 0
 20964  006520  0100               	movlb	0	; () banked
 20965  006522  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20966  006524  A4D8               	btfss	status,2,c
 20967  006526  D006               	goto	u16160
 20968                           
 20969                           ; BSR set to: 0
 20970  006528  0102               	movlb	2	; () banked
 20971  00652A  51EB               	movf	(_loRa+235)& (0+255),w,b
 20972  00652C  0100               	movlb	0	; () banked
 20973  00652E  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20974  006530  B0D8               	btfsc	status,0,c
 20975  006532  D7A5               	goto	l2358
 20976  006534                     u16160:
 20977                           
 20978                           ; BSR set to: 0
 20979                           ;lorawan.c: 1985: }
 20980                           ;lorawan.c: 1986: }
 20981                           ;lorawan.c: 1988: if (found == 1)
 20982                           
 20983                           ; BSR set to: 0
 20984                           
 20985                           ; BSR set to: 0
 20986  006534  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20987  006536  B4D8               	btfsc	status,2,c
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;lorawan.c: 1989: {
 20991                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20992  006538  C063  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20993  00653C                     l2367:
 20994                           
 20995                           ;lorawan.c: 1991: }
 20996                           ;lorawan.c: 1992: }
 20997                           ;lorawan.c: 1994: return found;
 20998                           
 20999                           ; BSR set to: 0
 21000                           
 21001                           ; BSR set to: 0
 21002  00653C  0100               	movlb	0	; () banked
 21003  00653E  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 21004  006540  0012               	return	
 21005  006542                     __end_of_FindSmallestDataRate:
 21006                           	opt stack 0
 21007                           tosu	equ	0xFFF
 21008                           tosh	equ	0xFFE
 21009                           tosl	equ	0xFFD
 21010                           pclath	equ	0xFFA
 21011                           tblptru	equ	0xFF8
 21012                           tblptrh	equ	0xFF7
 21013                           tblptrl	equ	0xFF6
 21014                           tablat	equ	0xFF5
 21015                           prodh	equ	0xFF4
 21016                           prodl	equ	0xFF3
 21017                           intcon	equ	0xFF2
 21018                           intcon2	equ	0xFF1
 21019                           intcon3	equ	0xFF0
 21020                           indf0	equ	0xFEF
 21021                           postinc0	equ	0xFEE
 21022                           fsr0h	equ	0xFEA
 21023                           fsr0l	equ	0xFE9
 21024                           wreg	equ	0xFE8
 21025                           postinc1	equ	0xFE6
 21026                           postdec1	equ	0xFE5
 21027                           plusw1	equ	0xFE3
 21028                           fsr1h	equ	0xFE2
 21029                           fsr1l	equ	0xFE1
 21030                           indf2	equ	0xFDF
 21031                           postinc2	equ	0xFDE
 21032                           postdec2	equ	0xFDD
 21033                           plusw2	equ	0xFDB
 21034                           fsr2h	equ	0xFDA
 21035                           fsr2l	equ	0xFD9
 21036                           status	equ	0xFD8
 21037                           
 21038 ;; *************** function _EncryptFRMPayload *****************
 21039 ;; Defined at:
 21040 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 21043 ;;		 -> data(8), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 21044 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 21045 ;;  dir             1   52[BANK0 ] unsigned char 
 21046 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 21047 ;;  key             2   57[BANK0 ] PTR unsigned char 
 21048 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21049 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 21050 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 21051 ;;		 -> macBuffer(271), radioBuffer(271), 
 21052 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 21053 ;; Auto vars:     Size  Location     Type
 21054 ;;  j               1   70[BANK0 ] unsigned char 
 21055 ;;  i               1   69[BANK0 ] unsigned char 
 21056 ;;  k               1   68[BANK0 ] unsigned char 
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21066 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21067 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21068 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21069 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21070 ;;Total ram usage:       22 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   10
 21073 ;; This function calls:
 21074 ;;		_AESEncodeLoRa
 21075 ;;		_AssembleEncryptionBlock
 21076 ;;		___awdiv
 21077 ;; This function is called by:
 21078 ;;		_LORAWAN_RxDone
 21079 ;;		_AssemblePacket
 21080 ;; This function uses a non-reentrant model
 21081 ;;
 21082                           
 21083                           	psect	text96
 21084  00494A                     __ptext96:
 21085                           	opt stack 0
 21086  00494A                     _EncryptFRMPayload:
 21087                           	opt stack 18
 21088                           
 21089                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 21090                           
 21091                           ; BSR set to: 0
 21092                           ;incstack = 0
 21093  00494A  0E00               	movlw	0
 21094  00494C  0100               	movlb	0	; () banked
 21095  00494E  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 21096  004950  0E00               	movlw	0
 21097  004952  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 21098  004954  0E00               	movlw	0
 21099  004956  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 21100                           
 21101                           ; BSR set to: 0
 21102                           ;lorawan.c: 2209: k = bufferLength / 16;
 21103  004958  C093  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 21104  00495C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 21105  00495E  0E00               	movlw	0
 21106  004960  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 21107  004962  0E10               	movlw	16
 21108  004964  6F62               	movwf	___awdiv@divisor& (0+255),b
 21109  004966  ECF4  F038         	call	___awdiv	;wreg free
 21110  00496A  0100               	movlb	0	; () banked
 21111  00496C  5160               	movf	?___awdiv& (0+255),w,b
 21112  00496E  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 21113                           
 21114                           ; BSR set to: 0
 21115                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 21116  004970  0E01               	movlw	1
 21117  004972  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 21118  004974  D05A               	goto	l2432
 21119  004976                     
 21120                           ; BSR set to: 0
 21121                           ;lorawan.c: 2211: {
 21122                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21123                           
 21124                           ; BSR set to: 0
 21125  004976  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21126  00497A  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21127  00497E  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21128  004982  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21129  004986  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21130  00498A  0E01               	movlw	1
 21131  00498C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21132  00498E  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21133  004992  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 21134  004994  ECE3  F02F         	call	_AssembleEncryptionBlock
 21135                           
 21136                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 21137  004998  0EB1               	movlw	low _aesBuffer
 21138  00499A  0100               	movlb	0	; () banked
 21139  00499C  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21140  00499E  0E01               	movlw	high _aesBuffer
 21141  0049A0  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21142  0049A2  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21143  0049A6  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21144  0049AA  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 21145                           
 21146                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 21147  0049AE  0E00               	movlw	0
 21148  0049B0  0100               	movlb	0	; () banked
 21149  0049B2  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 21150  0049B4                     l13927:
 21151                           
 21152                           ; BSR set to: 0
 21153  0049B4  0E0F               	movlw	15
 21154  0049B6  65A6               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 21155  0049B8  D001               	goto	l2434
 21156  0049BA  D036               	goto	u16200
 21157  0049BC                     l2434:
 21158                           
 21159                           ; BSR set to: 0
 21160                           ;lorawan.c: 2216: {
 21161                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 21162                           
 21163                           ; BSR set to: 0
 21164  0049BC  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21165  0049BE  0D01               	mullw	1
 21166  0049C0  50F3               	movf	prodl,w,c
 21167  0049C2  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21168  0049C4  6ED9               	movwf	fsr2l,c
 21169  0049C6  50F4               	movf	prodh,w,c
 21170  0049C8  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21171  0049CA  6EDA               	movwf	fsr2h,c
 21172  0049CC  0EF0               	movlw	240
 21173  0049CE  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 21174  0049D0  0EFF               	movlw	255
 21175  0049D2  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 21176  0049D4  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 21177  0049D6  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 21178  0049D8  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 21179  0049DA  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21180  0049DC  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21181  0049DE  0EF0               	movlw	240
 21182  0049E0  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21183  0049E2  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21184  0049E4  0B0F               	andlw	15
 21185  0049E6  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 21186  0049E8  0EF0               	movlw	240
 21187  0049EA  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21188  0049EC  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 21189  0049EE  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21190  0049F0  0E00               	movlw	0
 21191  0049F2  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21192  0049F4  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21193  0049F6  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 21194  0049F8  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 21195  0049FA  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 21196  0049FC  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 21197  0049FE  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 21198  004A00  6EE9               	movwf	fsr0l,c
 21199  004A02  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 21200  004A04  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 21201  004A06  6EEA               	movwf	fsr0h,c
 21202  004A08  50EF               	movf	indf0,w,c
 21203  004A0A  6FA3               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 21204  004A0C  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 21205  004A0E  0D01               	mullw	1
 21206  004A10  0EB1               	movlw	low _aesBuffer
 21207  004A12  24F3               	addwf	prodl,w,c
 21208  004A14  6EE9               	movwf	fsr0l,c
 21209  004A16  0E01               	movlw	high _aesBuffer
 21210  004A18  20F4               	addwfc	prodh,w,c
 21211  004A1A  6EEA               	movwf	fsr0h,c
 21212  004A1C  50EF               	movf	indf0,w,c
 21213  004A1E  19A3               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 21214  004A20  6EDF               	movwf	indf2,c
 21215                           
 21216                           ; BSR set to: 0
 21217  004A22  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21218                           
 21219                           ; BSR set to: 0
 21220  004A24  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 21221  004A26  D7C6               	goto	l13927
 21222  004A28                     u16200:
 21223                           
 21224                           ; BSR set to: 0
 21225                           
 21226                           ; BSR set to: 0
 21227  004A28  2BA5               	incf	EncryptFRMPayload@i& (0+255),f,b
 21228  004A2A                     l2432:
 21229                           
 21230                           ; BSR set to: 0
 21231                           
 21232                           ; BSR set to: 0
 21233  004A2A  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 21234  004A2C  5DA4               	subwf	EncryptFRMPayload@k& (0+255),w,b
 21235  004A2E  B0D8               	btfsc	status,0,c
 21236  004A30  D7A2               	goto	l2433
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;lorawan.c: 2218: }
 21240                           ;lorawan.c: 2219: }
 21241                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 21242                           
 21243                           ; BSR set to: 0
 21244  004A32  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21245  004A36  0E0F               	movlw	15
 21246  004A38  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21247  004A3A  B4D8               	btfsc	status,2,c
 21248  004A3C  0012               	return	
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;lorawan.c: 2222: {
 21252                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 21253  004A3E  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 21254  004A42  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 21255  004A46  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 21256  004A4A  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 21257  004A4E  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 21258  004A52  0E01               	movlw	1
 21259  004A54  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21260  004A56  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 21261  004A5A  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 21262  004A5C  ECE3  F02F         	call	_AssembleEncryptionBlock
 21263                           
 21264                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 21265  004A60  0EB1               	movlw	low _aesBuffer
 21266  004A62  0100               	movlb	0	; () banked
 21267  004A64  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21268  004A66  0E01               	movlw	high _aesBuffer
 21269  004A68  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21270  004A6A  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 21271  004A6E  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 21272  004A72  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 21273                           
 21274                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 21275  004A76  0E00               	movlw	0
 21276  004A78  0100               	movlb	0	; () banked
 21277  004A7A  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 21278  004A7C  D023               	goto	l2438
 21279  004A7E                     
 21280                           ; BSR set to: 0
 21281                           ;lorawan.c: 2227: {
 21282                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 21283                           
 21284                           ; BSR set to: 0
 21285  004A7E  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 21286  004A80  0D01               	mullw	1
 21287  004A82  50F3               	movf	prodl,w,c
 21288  004A84  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 21289  004A86  6ED9               	movwf	fsr2l,c
 21290  004A88  50F4               	movf	prodh,w,c
 21291  004A8A  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 21292  004A8C  6EDA               	movwf	fsr2h,c
 21293  004A8E  51A4               	movf	EncryptFRMPayload@k& (0+255),w,b
 21294  004A90  0D10               	mullw	16
 21295  004A92  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 21296  004A94  26F3               	addwf	prodl,f,c
 21297  004A96  0E00               	movlw	0
 21298  004A98  22F4               	addwfc	prodh,f,c
 21299  004A9A  50F3               	movf	prodl,w,c
 21300  004A9C  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 21301  004A9E  6EE9               	movwf	fsr0l,c
 21302  004AA0  50F4               	movf	prodh,w,c
 21303  004AA2  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 21304  004AA4  6EEA               	movwf	fsr0h,c
 21305  004AA6  50EF               	movf	indf0,w,c
 21306  004AA8  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 21307  004AAA  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 21308  004AAC  0D01               	mullw	1
 21309  004AAE  0EB1               	movlw	low _aesBuffer
 21310  004AB0  24F3               	addwf	prodl,w,c
 21311  004AB2  6EE9               	movwf	fsr0l,c
 21312  004AB4  0E01               	movlw	high _aesBuffer
 21313  004AB6  20F4               	addwfc	prodh,w,c
 21314  004AB8  6EEA               	movwf	fsr0h,c
 21315  004ABA  50EF               	movf	indf0,w,c
 21316  004ABC  199F               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 21317  004ABE  6EDF               	movwf	indf2,c
 21318                           
 21319                           ; BSR set to: 0
 21320  004AC0  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 21321                           
 21322                           ; BSR set to: 0
 21323  004AC2  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 21324  004AC4                     l2438:
 21325                           
 21326                           ; BSR set to: 0
 21327                           
 21328                           ; BSR set to: 0
 21329  004AC4  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 21330  004AC8  0E0F               	movlw	15
 21331  004ACA  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21332  004ACC  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21333  004ACE  5DA6               	subwf	EncryptFRMPayload@j& (0+255),w,b
 21334  004AD0  B0D8               	btfsc	status,0,c
 21335  004AD2  0012               	return	
 21336  004AD4  D7D4               	goto	l2439
 21337  004AD6                     __end_of_EncryptFRMPayload:
 21338                           	opt stack 0
 21339                           tosu	equ	0xFFF
 21340                           tosh	equ	0xFFE
 21341                           tosl	equ	0xFFD
 21342                           pclath	equ	0xFFA
 21343                           tblptru	equ	0xFF8
 21344                           tblptrh	equ	0xFF7
 21345                           tblptrl	equ	0xFF6
 21346                           tablat	equ	0xFF5
 21347                           prodh	equ	0xFF4
 21348                           prodl	equ	0xFF3
 21349                           intcon	equ	0xFF2
 21350                           intcon2	equ	0xFF1
 21351                           intcon3	equ	0xFF0
 21352                           indf0	equ	0xFEF
 21353                           postinc0	equ	0xFEE
 21354                           fsr0h	equ	0xFEA
 21355                           fsr0l	equ	0xFE9
 21356                           wreg	equ	0xFE8
 21357                           postinc1	equ	0xFE6
 21358                           postdec1	equ	0xFE5
 21359                           plusw1	equ	0xFE3
 21360                           fsr1h	equ	0xFE2
 21361                           fsr1l	equ	0xFE1
 21362                           indf2	equ	0xFDF
 21363                           postinc2	equ	0xFDE
 21364                           postdec2	equ	0xFDD
 21365                           plusw2	equ	0xFDB
 21366                           fsr2h	equ	0xFDA
 21367                           fsr2l	equ	0xFD9
 21368                           status	equ	0xFD8
 21369                           
 21370 ;; *************** function ___awdiv *****************
 21371 ;; Defined at:
 21372 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21373 ;; Parameters:    Size  Location     Type
 21374 ;;  dividend        2    0[BANK0 ] int 
 21375 ;;  divisor         2    2[BANK0 ] int 
 21376 ;; Auto vars:     Size  Location     Type
 21377 ;;  quotient        2    6[BANK0 ] int 
 21378 ;;  sign            1    5[BANK0 ] unsigned char 
 21379 ;;  counter         1    4[BANK0 ] unsigned char 
 21380 ;; Return value:  Size  Location     Type
 21381 ;;                  2    0[BANK0 ] int 
 21382 ;; Registers used:
 21383 ;;		wreg, status,2, status,0
 21384 ;; Tracked objects:
 21385 ;;		On entry : 0/0
 21386 ;;		On exit  : 0/0
 21387 ;;		Unchanged: 0/0
 21388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21392 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21393 ;;Total ram usage:        8 bytes
 21394 ;; Hardware stack levels used:    1
 21395 ;; Hardware stack levels required when called:    7
 21396 ;; This function calls:
 21397 ;;		Nothing
 21398 ;; This function is called by:
 21399 ;;		_EncryptFRMPayload
 21400 ;; This function uses a non-reentrant model
 21401 ;;
 21402                           
 21403                           	psect	text97
 21404  0071E8                     __ptext97:
 21405                           	opt stack 0
 21406  0071E8                     ___awdiv:
 21407                           	opt stack 20
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;incstack = 0
 21411  0071E8  0E00               	movlw	0
 21412  0071EA  0100               	movlb	0	; () banked
 21413  0071EC  6F65               	movwf	___awdiv@sign& (0+255),b
 21414                           
 21415                           ; BSR set to: 0
 21416  0071EE  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21417  0071F0  D006               	goto	l2679
 21418                           
 21419                           ; BSR set to: 0
 21420  0071F2  6D62               	negf	___awdiv@divisor& (0+255),b
 21421  0071F4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 21422  0071F6  B0D8               	btfsc	status,0,c
 21423  0071F8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 21424                           
 21425                           ; BSR set to: 0
 21426  0071FA  0E01               	movlw	1
 21427  0071FC  6F65               	movwf	___awdiv@sign& (0+255),b
 21428  0071FE                     l2679:
 21429                           
 21430                           ; BSR set to: 0
 21431                           
 21432                           ; BSR set to: 0
 21433  0071FE  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 21434  007200  D006               	goto	l2680
 21435                           
 21436                           ; BSR set to: 0
 21437  007202  6D60               	negf	___awdiv@dividend& (0+255),b
 21438  007204  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 21439  007206  B0D8               	btfsc	status,0,c
 21440  007208  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 21441                           
 21442                           ; BSR set to: 0
 21443  00720A  0E01               	movlw	1
 21444  00720C  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 21445  00720E                     l2680:
 21446                           
 21447                           ; BSR set to: 0
 21448                           
 21449                           ; BSR set to: 0
 21450  00720E  0E00               	movlw	0
 21451  007210  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 21452  007212  0E00               	movlw	0
 21453  007214  6F66               	movwf	___awdiv@quotient& (0+255),b
 21454                           
 21455                           ; BSR set to: 0
 21456  007216  5162               	movf	___awdiv@divisor& (0+255),w,b
 21457  007218  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 21458  00721A  B4D8               	btfsc	status,2,c
 21459  00721C  D01C               	goto	l2687
 21460                           
 21461                           ; BSR set to: 0
 21462  00721E  0E01               	movlw	1
 21463  007220  6F64               	movwf	___awdiv@counter& (0+255),b
 21464  007222  D004               	goto	l2682
 21465  007224                     
 21466                           ; BSR set to: 0
 21467                           
 21468                           ; BSR set to: 0
 21469  007224  90D8               	bcf	status,0,c
 21470  007226  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 21471  007228  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 21472  00722A  2B64               	incf	___awdiv@counter& (0+255),f,b
 21473  00722C                     l2682:
 21474                           
 21475                           ; BSR set to: 0
 21476                           
 21477                           ; BSR set to: 0
 21478  00722C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21479  00722E  D7FA               	goto	l2683
 21480  007230                     u15360:
 21481                           
 21482                           ; BSR set to: 0
 21483                           
 21484                           ; BSR set to: 0
 21485                           
 21486                           ; BSR set to: 0
 21487  007230  90D8               	bcf	status,0,c
 21488  007232  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 21489  007234  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 21490                           
 21491                           ; BSR set to: 0
 21492  007236  5162               	movf	___awdiv@divisor& (0+255),w,b
 21493  007238  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 21494  00723A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21495  00723C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 21496  00723E  A0D8               	btfss	status,0,c
 21497  007240  D005               	goto	l2686
 21498                           
 21499                           ; BSR set to: 0
 21500  007242  5162               	movf	___awdiv@divisor& (0+255),w,b
 21501  007244  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 21502  007246  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21503  007248  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 21504                           
 21505                           ; BSR set to: 0
 21506  00724A  8166               	bsf	___awdiv@quotient& (0+255),0,b
 21507  00724C                     l2686:
 21508                           
 21509                           ; BSR set to: 0
 21510                           
 21511                           ; BSR set to: 0
 21512  00724C  90D8               	bcf	status,0,c
 21513  00724E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 21514  007250  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 21515                           
 21516                           ; BSR set to: 0
 21517  007252  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 21518  007254  D7ED               	goto	u15360
 21519  007256                     l2687:
 21520                           
 21521                           ; BSR set to: 0
 21522                           
 21523                           ; BSR set to: 0
 21524                           
 21525                           ; BSR set to: 0
 21526  007256  5165               	movf	___awdiv@sign& (0+255),w,b
 21527  007258  B4D8               	btfsc	status,2,c
 21528  00725A  D004               	goto	l2688
 21529                           
 21530                           ; BSR set to: 0
 21531  00725C  6D66               	negf	___awdiv@quotient& (0+255),b
 21532  00725E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 21533  007260  B0D8               	btfsc	status,0,c
 21534  007262  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 21535  007264                     l2688:
 21536                           
 21537                           ; BSR set to: 0
 21538                           
 21539                           ; BSR set to: 0
 21540  007264  C066  F060         	movff	___awdiv@quotient,?___awdiv
 21541  007268  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 21542  00726C  0012               	return	
 21543  00726E                     __end_of___awdiv:
 21544                           	opt stack 0
 21545                           tosu	equ	0xFFF
 21546                           tosh	equ	0xFFE
 21547                           tosl	equ	0xFFD
 21548                           pclath	equ	0xFFA
 21549                           tblptru	equ	0xFF8
 21550                           tblptrh	equ	0xFF7
 21551                           tblptrl	equ	0xFF6
 21552                           tablat	equ	0xFF5
 21553                           prodh	equ	0xFF4
 21554                           prodl	equ	0xFF3
 21555                           intcon	equ	0xFF2
 21556                           intcon2	equ	0xFF1
 21557                           intcon3	equ	0xFF0
 21558                           indf0	equ	0xFEF
 21559                           postinc0	equ	0xFEE
 21560                           fsr0h	equ	0xFEA
 21561                           fsr0l	equ	0xFE9
 21562                           wreg	equ	0xFE8
 21563                           postinc1	equ	0xFE6
 21564                           postdec1	equ	0xFE5
 21565                           plusw1	equ	0xFE3
 21566                           fsr1h	equ	0xFE2
 21567                           fsr1l	equ	0xFE1
 21568                           indf2	equ	0xFDF
 21569                           postinc2	equ	0xFDE
 21570                           postdec2	equ	0xFDD
 21571                           plusw2	equ	0xFDB
 21572                           fsr2h	equ	0xFDA
 21573                           fsr2l	equ	0xFD9
 21574                           status	equ	0xFD8
 21575                           
 21576 ;; *************** function _AssembleEncryptionBlock *****************
 21577 ;; Defined at:
 21578 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21579 ;; Parameters:    Size  Location     Type
 21580 ;;  dir             1    wreg     unsigned char 
 21581 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 21582 ;;  blockId         1   15[BANK0 ] unsigned char 
 21583 ;;  firstByte       1   16[BANK0 ] unsigned char 
 21584 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 21585 ;; Auto vars:     Size  Location     Type
 21586 ;;  dir             1   18[BANK0 ] unsigned char 
 21587 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 21588 ;; Return value:  Size  Location     Type
 21589 ;;                  1    wreg      void 
 21590 ;; Registers used:
 21591 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21592 ;; Tracked objects:
 21593 ;;		On entry : 0/0
 21594 ;;		On exit  : 0/0
 21595 ;;		Unchanged: 0/0
 21596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21597 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21600 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21601 ;;Total ram usage:        9 bytes
 21602 ;; Hardware stack levels used:    1
 21603 ;; Hardware stack levels required when called:    8
 21604 ;; This function calls:
 21605 ;;		_memcpy
 21606 ;;		_memset
 21607 ;; This function is called by:
 21608 ;;		_LORAWAN_RxDone
 21609 ;;		_AssemblePacket
 21610 ;;		_EncryptFRMPayload
 21611 ;; This function uses a non-reentrant model
 21612 ;;
 21613                           
 21614                           	psect	text98
 21615  005FC6                     __ptext98:
 21616                           	opt stack 0
 21617  005FC6                     _AssembleEncryptionBlock:
 21618                           	opt stack 19
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;incstack = 0
 21622                           ;AssembleEncryptionBlock@dir stored from wreg
 21623  005FC6  0100               	movlb	0	; () banked
 21624  005FC8  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 21625                           
 21626                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 21627  005FCA  0E00               	movlw	0
 21628  005FCC  0100               	movlb	0	; () banked
 21629  005FCE  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 21633  005FD0  0EB1               	movlw	low _aesBuffer
 21634  005FD2  6F60               	movwf	memset@p1& (0+255),b
 21635  005FD4  0E01               	movlw	high _aesBuffer
 21636  005FD6  6F61               	movwf	(memset@p1+1)& (0+255),b
 21637  005FD8  0E00               	movlw	0
 21638  005FDA  6F63               	movwf	(memset@c+1)& (0+255),b
 21639  005FDC  0E00               	movlw	0
 21640  005FDE  6F62               	movwf	memset@c& (0+255),b
 21641  005FE0  0E00               	movlw	0
 21642  005FE2  6F65               	movwf	(memset@n+1)& (0+255),b
 21643  005FE4  0E10               	movlw	16
 21644  005FE6  6F64               	movwf	memset@n& (0+255),b
 21645  005FE8  EC6E  F042         	call	_memset	;wreg free
 21646                           
 21647                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 21648  005FEC  0100               	movlb	0	; () banked
 21649  005FEE  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21650  005FF0  0D01               	mullw	1
 21651  005FF2  0EB1               	movlw	low _aesBuffer
 21652  005FF4  24F3               	addwf	prodl,w,c
 21653  005FF6  6ED9               	movwf	fsr2l,c
 21654  005FF8  0E01               	movlw	high _aesBuffer
 21655  005FFA  20F4               	addwfc	prodh,w,c
 21656  005FFC  6EDA               	movwf	fsr2h,c
 21657  005FFE  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 21661  006002  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21662  006004  0F05               	addlw	5
 21663  006006  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21664                           
 21665                           ; BSR set to: 0
 21666                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 21667  006008  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21668  00600A  0D01               	mullw	1
 21669  00600C  0EB1               	movlw	low _aesBuffer
 21670  00600E  24F3               	addwf	prodl,w,c
 21671  006010  6ED9               	movwf	fsr2l,c
 21672  006012  0E01               	movlw	high _aesBuffer
 21673  006014  20F4               	addwfc	prodh,w,c
 21674  006016  6EDA               	movwf	fsr2h,c
 21675  006018  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 21676                           
 21677                           ; BSR set to: 0
 21678  00601C  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;lorawan.c: 2168: if (0 == multicastStatus)
 21682  00601E  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 21683  006020  A4D8               	btfss	status,2,c
 21684  006022  D013               	goto	l2421
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;lorawan.c: 2169: {
 21688                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 21689  006024  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21690  006026  0D01               	mullw	1
 21691  006028  0EB1               	movlw	low _aesBuffer
 21692  00602A  24F3               	addwf	prodl,w,c
 21693  00602C  6F60               	movwf	memcpy@d1& (0+255),b
 21694  00602E  0E01               	movlw	high _aesBuffer
 21695  006030  20F4               	addwfc	prodh,w,c
 21696  006032  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21697  006034  0E1E               	movlw	low (_loRa+30)
 21698  006036  6F62               	movwf	memcpy@s1& (0+255),b
 21699  006038  0E02               	movlw	high (_loRa+30)
 21700  00603A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21701  00603C  0E00               	movlw	0
 21702  00603E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21703  006040  0E04               	movlw	4
 21704  006042  6F64               	movwf	memcpy@n& (0+255),b
 21705  006044  EC22  F03D         	call	_memcpy	;wreg free
 21706  006048  D012               	goto	l13417
 21707  00604A                     l2421:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;lorawan.c: 2173: else
 21711                           ;lorawan.c: 2174: {
 21712                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 21713                           
 21714                           ; BSR set to: 0
 21715  00604A  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21716  00604C  0D01               	mullw	1
 21717  00604E  0EB1               	movlw	low _aesBuffer
 21718  006050  24F3               	addwf	prodl,w,c
 21719  006052  6F60               	movwf	memcpy@d1& (0+255),b
 21720  006054  0E01               	movlw	high _aesBuffer
 21721  006056  20F4               	addwfc	prodh,w,c
 21722  006058  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21723  00605A  0E62               	movlw	low (_loRa+98)
 21724  00605C  6F62               	movwf	memcpy@s1& (0+255),b
 21725  00605E  0E02               	movlw	high (_loRa+98)
 21726  006060  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21727  006062  0E00               	movlw	0
 21728  006064  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21729  006066  0E04               	movlw	4
 21730  006068  6F64               	movwf	memcpy@n& (0+255),b
 21731  00606A  EC22  F03D         	call	_memcpy	;wreg free
 21732  00606E                     l13417:
 21733                           
 21734                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 21735  00606E  0100               	movlb	0	; () banked
 21736  006070  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21737  006072  0F04               	addlw	4
 21738  006074  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;lorawan.c: 2177: }
 21742                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 21743                           
 21744                           ; BSR set to: 0
 21745  006076  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21746  006078  0D01               	mullw	1
 21747  00607A  0EB1               	movlw	low _aesBuffer
 21748  00607C  24F3               	addwf	prodl,w,c
 21749  00607E  6F60               	movwf	memcpy@d1& (0+255),b
 21750  006080  0E01               	movlw	high _aesBuffer
 21751  006082  20F4               	addwfc	prodh,w,c
 21752  006084  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21753  006086  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 21754  006088  6F62               	movwf	memcpy@s1& (0+255),b
 21755  00608A  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 21756  00608C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21757  00608E  0E00               	movlw	0
 21758  006090  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21759  006092  0E04               	movlw	4
 21760  006094  6F64               	movwf	memcpy@n& (0+255),b
 21761  006096  EC22  F03D         	call	_memcpy	;wreg free
 21762                           
 21763                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 21764  00609A  0100               	movlb	0	; () banked
 21765  00609C  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21766  00609E  0F04               	addlw	4
 21767  0060A0  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21768                           
 21769                           ; BSR set to: 0
 21770                           ;lorawan.c: 2182: bufferIndex ++;
 21771  0060A2  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 21775  0060A4  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21776  0060A6  0D01               	mullw	1
 21777  0060A8  0EB1               	movlw	low _aesBuffer
 21778  0060AA  24F3               	addwf	prodl,w,c
 21779  0060AC  6ED9               	movwf	fsr2l,c
 21780  0060AE  0E01               	movlw	high _aesBuffer
 21781  0060B0  20F4               	addwfc	prodh,w,c
 21782  0060B2  6EDA               	movwf	fsr2h,c
 21783  0060B4  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 21784                           
 21785                           ; BSR set to: 0
 21786  0060B8  0012               	return		;funcret
 21787  0060BA                     __end_of_AssembleEncryptionBlock:
 21788                           	opt stack 0
 21789                           tosu	equ	0xFFF
 21790                           tosh	equ	0xFFE
 21791                           tosl	equ	0xFFD
 21792                           pclath	equ	0xFFA
 21793                           tblptru	equ	0xFF8
 21794                           tblptrh	equ	0xFF7
 21795                           tblptrl	equ	0xFF6
 21796                           tablat	equ	0xFF5
 21797                           prodh	equ	0xFF4
 21798                           prodl	equ	0xFF3
 21799                           intcon	equ	0xFF2
 21800                           intcon2	equ	0xFF1
 21801                           intcon3	equ	0xFF0
 21802                           indf0	equ	0xFEF
 21803                           postinc0	equ	0xFEE
 21804                           fsr0h	equ	0xFEA
 21805                           fsr0l	equ	0xFE9
 21806                           wreg	equ	0xFE8
 21807                           postinc1	equ	0xFE6
 21808                           postdec1	equ	0xFE5
 21809                           plusw1	equ	0xFE3
 21810                           fsr1h	equ	0xFE2
 21811                           fsr1l	equ	0xFE1
 21812                           indf2	equ	0xFDF
 21813                           postinc2	equ	0xFDE
 21814                           postdec2	equ	0xFDD
 21815                           plusw2	equ	0xFDB
 21816                           fsr2h	equ	0xFDA
 21817                           fsr2l	equ	0xFD9
 21818                           status	equ	0xFD8
 21819                           
 21820 ;; *************** function _CountfOptsLength *****************
 21821 ;; Defined at:
 21822 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21823 ;; Parameters:    Size  Location     Type
 21824 ;;		None
 21825 ;; Auto vars:     Size  Location     Type
 21826 ;;  i               1    7[BANK0 ] unsigned char 
 21827 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 21828 ;; Return value:  Size  Location     Type
 21829 ;;                  1    wreg      unsigned char 
 21830 ;; Registers used:
 21831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21832 ;; Tracked objects:
 21833 ;;		On entry : 0/0
 21834 ;;		On exit  : 0/0
 21835 ;;		Unchanged: 0/0
 21836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21839 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21840 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21841 ;;Total ram usage:        8 bytes
 21842 ;; Hardware stack levels used:    1
 21843 ;; Hardware stack levels required when called:    7
 21844 ;; This function calls:
 21845 ;;		Nothing
 21846 ;; This function is called by:
 21847 ;;		_LORAWAN_GetMaxPayloadSize
 21848 ;;		_AssemblePacket
 21849 ;; This function uses a non-reentrant model
 21850 ;;
 21851                           
 21852                           	psect	text99
 21853  0067CA                     __ptext99:
 21854                           	opt stack 0
 21855  0067CA                     _CountfOptsLength:
 21856                           	opt stack 21
 21857                           
 21858                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;incstack = 0
 21862  0067CA  0E00               	movlw	0
 21863  0067CC  0100               	movlb	0	; () banked
 21864  0067CE  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 21865                           
 21866                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21867  0067D0  0E00               	movlw	0
 21868  0067D2  6F67               	movwf	CountfOptsLength@i& (0+255),b
 21869  0067D4  D057               	goto	l2412
 21870  0067D6                     
 21871                           ; BSR set to: 0
 21872                           ;lorawan.c: 2139: {
 21873                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21874                           
 21875                           ; BSR set to: 0
 21876  0067D6  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21877  0067D8  0D02               	mullw	2
 21878  0067DA  0EA8               	movlw	low (_loRa+168)
 21879  0067DC  24F3               	addwf	prodl,w,c
 21880  0067DE  6ED9               	movwf	fsr2l,c
 21881  0067E0  0E02               	movlw	high (_loRa+168)
 21882  0067E2  20F4               	addwfc	prodh,w,c
 21883  0067E4  6EDA               	movwf	fsr2h,c
 21884  0067E6  28DE               	incf	postinc2,w,c
 21885  0067E8  B4D8               	btfsc	status,2,c
 21886  0067EA  D04B               	goto	l2416
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;lorawan.c: 2141: {
 21890                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 21891  0067EC  0EFE               	movlw	254
 21892  0067EE  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21893  0067F0  0EFF               	movlw	255
 21894  0067F2  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21895  0067F4  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21896  0067F6  0D02               	mullw	2
 21897  0067F8  0EA8               	movlw	low (_loRa+168)
 21898  0067FA  24F3               	addwf	prodl,w,c
 21899  0067FC  6ED9               	movwf	fsr2l,c
 21900  0067FE  0E02               	movlw	high (_loRa+168)
 21901  006800  20F4               	addwfc	prodh,w,c
 21902  006802  6EDA               	movwf	fsr2h,c
 21903  006804  50DF               	movf	indf2,w,c
 21904  006806  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21905  006808  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21906  00680A  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21907  00680C  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21908  00680E  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21909  006810  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21910  006812  0E87               	movlw	low _macEndDevCmdReplyLen
 21911  006814  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21912  006816  6EF6               	movwf	tblptrl,c
 21913  006818  0EFF               	movlw	high _macEndDevCmdReplyLen
 21914  00681A  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21915  00681C  6EF7               	movwf	tblptrh,c
 21916  00681E                     	if	1	;There are 3 active tblptr bytes
 21917  00681E  6AF8               	clrf	tblptru,c
 21918  006820  0E00               	movlw	low (__mediumconst shr (0+16))
 21919  006822  22F8               	addwfc	tblptru,f,c
 21920  006824                     	endif
 21921  006824  0008               	tblrd		*
 21922  006826  50F5               	movf	tablat,w,c
 21923  006828  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21924  00682C  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 21925  00682E  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21926  006830  0E00               	movlw	0
 21927  006832  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21928  006834  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21929  006836  D006               	goto	u16250
 21930  006838  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21931  00683A  E12A               	bnz	l13969
 21932  00683C  0E10               	movlw	16
 21933  00683E  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21934  006840  B0D8               	btfsc	status,0,c
 21935  006842  D026               	goto	u16260
 21936  006844                     u16250:
 21937                           
 21938                           ; BSR set to: 0
 21939                           ;lorawan.c: 2143: {
 21940                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 21941  006844  0EFE               	movlw	254
 21942  006846  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21943  006848  0EFF               	movlw	255
 21944  00684A  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21945  00684C  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21946  00684E  0D02               	mullw	2
 21947  006850  0EA8               	movlw	low (_loRa+168)
 21948  006852  24F3               	addwf	prodl,w,c
 21949  006854  6ED9               	movwf	fsr2l,c
 21950  006856  0E02               	movlw	high (_loRa+168)
 21951  006858  20F4               	addwfc	prodh,w,c
 21952  00685A  6EDA               	movwf	fsr2h,c
 21953  00685C  50DF               	movf	indf2,w,c
 21954  00685E  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21955  006860  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21956  006862  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21957  006864  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21958  006866  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21959  006868  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21960  00686A  0E87               	movlw	low _macEndDevCmdReplyLen
 21961  00686C  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21962  00686E  6EF6               	movwf	tblptrl,c
 21963  006870  0EFF               	movlw	high _macEndDevCmdReplyLen
 21964  006872  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21965  006874  6EF7               	movwf	tblptrh,c
 21966  006876                     	if	1	;There are 3 active tblptr bytes
 21967  006876  6AF8               	clrf	tblptru,c
 21968  006878  0E00               	movlw	low (__mediumconst shr (0+16))
 21969  00687A  22F8               	addwfc	tblptru,f,c
 21970  00687C                     	endif
 21971  00687C  0008               	tblrd		*
 21972  00687E  50F5               	movf	tablat,w,c
 21973  006880  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21974  006882                     l2416:
 21975                           
 21976                           ; BSR set to: 0
 21977                           
 21978                           ; BSR set to: 0
 21979                           
 21980                           ; BSR set to: 0
 21981  006882  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21982  006884                     l2412:
 21983                           
 21984                           ; BSR set to: 0
 21985                           
 21986                           ; BSR set to: 0
 21987  006884  0102               	movlb	2	; () banked
 21988  006886  51A7               	movf	(_loRa+167)& (0+255),w,b
 21989  006888  0100               	movlb	0	; () banked
 21990  00688A  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21991  00688C  A0D8               	btfss	status,0,c
 21992  00688E  D7A3               	goto	l2413
 21993  006890                     u16260:
 21994  006890                     l13969:
 21995                           
 21996                           ; BSR set to: 0
 21997                           ;lorawan.c: 2149: }
 21998                           ;lorawan.c: 2150: }
 21999                           ;lorawan.c: 2151: }
 22000                           ;lorawan.c: 2153: return macCommandLength;
 22001  006890  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 22002  006892  0012               	return	
 22003  006894                     __end_of_CountfOptsLength:
 22004                           	opt stack 0
 22005                           tosu	equ	0xFFF
 22006                           tosh	equ	0xFFE
 22007                           tosl	equ	0xFFD
 22008                           pclath	equ	0xFFA
 22009                           tblptru	equ	0xFF8
 22010                           tblptrh	equ	0xFF7
 22011                           tblptrl	equ	0xFF6
 22012                           tablat	equ	0xFF5
 22013                           prodh	equ	0xFF4
 22014                           prodl	equ	0xFF3
 22015                           intcon	equ	0xFF2
 22016                           intcon2	equ	0xFF1
 22017                           intcon3	equ	0xFF0
 22018                           indf0	equ	0xFEF
 22019                           postinc0	equ	0xFEE
 22020                           fsr0h	equ	0xFEA
 22021                           fsr0l	equ	0xFE9
 22022                           wreg	equ	0xFE8
 22023                           postinc1	equ	0xFE6
 22024                           postdec1	equ	0xFE5
 22025                           plusw1	equ	0xFE3
 22026                           fsr1h	equ	0xFE2
 22027                           fsr1l	equ	0xFE1
 22028                           indf2	equ	0xFDF
 22029                           postinc2	equ	0xFDE
 22030                           postdec2	equ	0xFDD
 22031                           plusw2	equ	0xFDB
 22032                           fsr2h	equ	0xFDA
 22033                           fsr2l	equ	0xFD9
 22034                           status	equ	0xFD8
 22035                           
 22036 ;; *************** function _ExtractMic *****************
 22037 ;; Defined at:
 22038 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22039 ;; Parameters:    Size  Location     Type
 22040 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 22041 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22042 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 22043 ;; Auto vars:     Size  Location     Type
 22044 ;;  mic             4   19[BANK0 ] unsigned long 
 22045 ;; Return value:  Size  Location     Type
 22046 ;;                  4   11[BANK0 ] unsigned long 
 22047 ;; Registers used:
 22048 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22049 ;; Tracked objects:
 22050 ;;		On entry : 0/0
 22051 ;;		On exit  : 0/0
 22052 ;;		Unchanged: 0/0
 22053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22055 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22057 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22058 ;;Total ram usage:       12 bytes
 22059 ;; Hardware stack levels used:    1
 22060 ;; Hardware stack levels required when called:    8
 22061 ;; This function calls:
 22062 ;;		_memcpy
 22063 ;; This function is called by:
 22064 ;;		_LORAWAN_RxDone
 22065 ;; This function uses a non-reentrant model
 22066 ;;
 22067                           
 22068                           	psect	text100
 22069  007C16                     __ptext100:
 22070                           	opt stack 0
 22071  007C16                     _ExtractMic:
 22072                           	opt stack 18
 22073                           
 22074                           ;lorawan.c: 2189: uint32_t mic = 0;
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;incstack = 0
 22078  007C16  0E00               	movlw	0
 22079  007C18  0100               	movlb	0	; () banked
 22080  007C1A  6F73               	movwf	ExtractMic@mic& (0+255),b
 22081  007C1C  0E00               	movlw	0
 22082  007C1E  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 22083  007C20  0E00               	movlw	0
 22084  007C22  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 22085  007C24  0E00               	movlw	0
 22086  007C26  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 22090  007C28  0E73               	movlw	low ExtractMic@mic
 22091  007C2A  6F60               	movwf	memcpy@d1& (0+255),b
 22092  007C2C  0E00               	movlw	high ExtractMic@mic
 22093  007C2E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22094  007C30  0EFC               	movlw	252
 22095  007C32  6F6F               	movwf	??_ExtractMic& (0+255),b
 22096  007C34  0EFF               	movlw	255
 22097  007C36  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 22098  007C38  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 22099  007C3A  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 22100  007C3C  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 22101  007C3E  516F               	movf	??_ExtractMic& (0+255),w,b
 22102  007C40  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 22103  007C42  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 22104  007C44  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 22105  007C46  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 22106  007C48  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 22107  007C4A  6F62               	movwf	memcpy@s1& (0+255),b
 22108  007C4C  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 22109  007C4E  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 22110  007C50  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22111  007C52  0E00               	movlw	0
 22112  007C54  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22113  007C56  0E04               	movlw	4
 22114  007C58  6F64               	movwf	memcpy@n& (0+255),b
 22115  007C5A  EC22  F03D         	call	_memcpy	;wreg free
 22116                           
 22117                           ;lorawan.c: 2191: return mic;
 22118  007C5E  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 22119  007C62  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 22120  007C66  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 22121  007C6A  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 22122  007C6E  0012               	return	
 22123  007C70                     __end_of_ExtractMic:
 22124                           	opt stack 0
 22125                           tosu	equ	0xFFF
 22126                           tosh	equ	0xFFE
 22127                           tosl	equ	0xFFD
 22128                           pclath	equ	0xFFA
 22129                           tblptru	equ	0xFF8
 22130                           tblptrh	equ	0xFF7
 22131                           tblptrl	equ	0xFF6
 22132                           tablat	equ	0xFF5
 22133                           prodh	equ	0xFF4
 22134                           prodl	equ	0xFF3
 22135                           intcon	equ	0xFF2
 22136                           intcon2	equ	0xFF1
 22137                           intcon3	equ	0xFF0
 22138                           indf0	equ	0xFEF
 22139                           postinc0	equ	0xFEE
 22140                           fsr0h	equ	0xFEA
 22141                           fsr0l	equ	0xFE9
 22142                           wreg	equ	0xFE8
 22143                           postinc1	equ	0xFE6
 22144                           postdec1	equ	0xFE5
 22145                           plusw1	equ	0xFE3
 22146                           fsr1h	equ	0xFE2
 22147                           fsr1l	equ	0xFE1
 22148                           indf2	equ	0xFDF
 22149                           postinc2	equ	0xFDE
 22150                           postdec2	equ	0xFDD
 22151                           plusw2	equ	0xFDB
 22152                           fsr2h	equ	0xFDA
 22153                           fsr2l	equ	0xFD9
 22154                           status	equ	0xFD8
 22155                           
 22156 ;; *************** function _ComputeSessionKeys *****************
 22157 ;; Defined at:
 22158 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22159 ;; Parameters:    Size  Location     Type
 22160 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 22161 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22162 ;; Auto vars:     Size  Location     Type
 22163 ;;		None
 22164 ;; Return value:  Size  Location     Type
 22165 ;;                  1    wreg      void 
 22166 ;; Registers used:
 22167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22168 ;; Tracked objects:
 22169 ;;		On entry : 0/0
 22170 ;;		On exit  : 0/0
 22171 ;;		Unchanged: 0/0
 22172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22177 ;;Total ram usage:        2 bytes
 22178 ;; Hardware stack levels used:    1
 22179 ;; Hardware stack levels required when called:   10
 22180 ;; This function calls:
 22181 ;;		_AESEncodeLoRa
 22182 ;;		_PrepareSessionKeys
 22183 ;; This function is called by:
 22184 ;;		_LORAWAN_RxDone
 22185 ;; This function uses a non-reentrant model
 22186 ;;
 22187                           
 22188                           	psect	text101
 22189  00726E                     __ptext101:
 22190                           	opt stack 0
 22191  00726E                     _ComputeSessionKeys:
 22192                           	opt stack 16
 22193                           
 22194                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22195                           
 22196                           ;incstack = 0
 22197  00726E  0E32               	movlw	low (_loRa+50)
 22198  007270  0100               	movlb	0	; () banked
 22199  007272  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22200  007274  0E02               	movlw	high (_loRa+50)
 22201  007276  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22202  007278  0E01               	movlw	1
 22203  00727A  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22204  00727C  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22205  00727E  0E00               	movlw	0
 22206  007280  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22207  007282  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22208  007284  0E04               	movlw	4
 22209  007286  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22210  007288  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22211  00728A  0E00               	movlw	0
 22212  00728C  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22213  00728E  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22214  007290  ECB3  F035         	call	_PrepareSessionKeys	;wreg free
 22215                           
 22216                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 22217  007294  0E02               	movlw	2
 22218  007296  0102               	movlb	2	; () banked
 22219  007298  6F32               	movwf	(_loRa+50)& (0+255),b
 22220                           
 22221                           ; BSR set to: 2
 22222                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 22223  00729A  0E32               	movlw	low (_loRa+50)
 22224  00729C  0100               	movlb	0	; () banked
 22225  00729E  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22226  0072A0  0E02               	movlw	high (_loRa+50)
 22227  0072A2  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22228  0072A4  0E42               	movlw	low (_loRa+66)
 22229  0072A6  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22230  0072A8  0E02               	movlw	high (_loRa+66)
 22231  0072AA  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22232  0072AC  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 22233                           
 22234                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 22235  0072B0  0E22               	movlw	low (_loRa+34)
 22236  0072B2  0100               	movlb	0	; () banked
 22237  0072B4  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 22238  0072B6  0E02               	movlw	high (_loRa+34)
 22239  0072B8  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 22240  0072BA  0E01               	movlw	1
 22241  0072BC  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22242  0072BE  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 22243  0072C0  0E00               	movlw	0
 22244  0072C2  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22245  0072C4  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 22246  0072C6  0E04               	movlw	4
 22247  0072C8  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 22248  0072CA  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 22249  0072CC  0E00               	movlw	0
 22250  0072CE  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 22251  0072D0  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 22252  0072D2  ECB3  F035         	call	_PrepareSessionKeys	;wreg free
 22253                           
 22254                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 22255  0072D6  0E01               	movlw	1
 22256  0072D8  0102               	movlb	2	; () banked
 22257  0072DA  6F22               	movwf	(_loRa+34)& (0+255),b
 22258                           
 22259                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 22260  0072DC  0E22               	movlw	low (_loRa+34)
 22261  0072DE  0100               	movlb	0	; () banked
 22262  0072E0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 22263  0072E2  0E02               	movlw	high (_loRa+34)
 22264  0072E4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22265  0072E6  0E42               	movlw	low (_loRa+66)
 22266  0072E8  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 22267  0072EA  0E02               	movlw	high (_loRa+66)
 22268  0072EC  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 22269  0072EE  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 22270  0072F2  0012               	return		;funcret
 22271  0072F4                     __end_of_ComputeSessionKeys:
 22272                           	opt stack 0
 22273                           tosu	equ	0xFFF
 22274                           tosh	equ	0xFFE
 22275                           tosl	equ	0xFFD
 22276                           pclath	equ	0xFFA
 22277                           tblptru	equ	0xFF8
 22278                           tblptrh	equ	0xFF7
 22279                           tblptrl	equ	0xFF6
 22280                           tablat	equ	0xFF5
 22281                           prodh	equ	0xFF4
 22282                           prodl	equ	0xFF3
 22283                           intcon	equ	0xFF2
 22284                           intcon2	equ	0xFF1
 22285                           intcon3	equ	0xFF0
 22286                           indf0	equ	0xFEF
 22287                           postinc0	equ	0xFEE
 22288                           fsr0h	equ	0xFEA
 22289                           fsr0l	equ	0xFE9
 22290                           wreg	equ	0xFE8
 22291                           postinc1	equ	0xFE6
 22292                           postdec1	equ	0xFE5
 22293                           plusw1	equ	0xFE3
 22294                           fsr1h	equ	0xFE2
 22295                           fsr1l	equ	0xFE1
 22296                           indf2	equ	0xFDF
 22297                           postinc2	equ	0xFDE
 22298                           postdec2	equ	0xFDD
 22299                           plusw2	equ	0xFDB
 22300                           fsr2h	equ	0xFDA
 22301                           fsr2l	equ	0xFD9
 22302                           status	equ	0xFD8
 22303                           
 22304 ;; *************** function _PrepareSessionKeys *****************
 22305 ;; Defined at:
 22306 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22307 ;; Parameters:    Size  Location     Type
 22308 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 22309 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22310 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 22311 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22312 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 22313 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22314 ;; Auto vars:     Size  Location     Type
 22315 ;;  index           1   17[BANK0 ] unsigned char 
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  1    wreg      void 
 22318 ;; Registers used:
 22319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22320 ;; Tracked objects:
 22321 ;;		On entry : 0/0
 22322 ;;		On exit  : 0/0
 22323 ;;		Unchanged: 0/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22325 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22328 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22329 ;;Total ram usage:        7 bytes
 22330 ;; Hardware stack levels used:    1
 22331 ;; Hardware stack levels required when called:    8
 22332 ;; This function calls:
 22333 ;;		_memcpy
 22334 ;;		_memset
 22335 ;; This function is called by:
 22336 ;;		_ComputeSessionKeys
 22337 ;; This function uses a non-reentrant model
 22338 ;;
 22339                           
 22340                           	psect	text102
 22341  006B66                     __ptext102:
 22342                           	opt stack 0
 22343  006B66                     _PrepareSessionKeys:
 22344                           	opt stack 17
 22345                           
 22346                           ;lorawan.c: 2047: uint8_t index = 0;
 22347                           
 22348                           ;incstack = 0
 22349  006B66  0E00               	movlw	0
 22350  006B68  0100               	movlb	0	; () banked
 22351  006B6A  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22352                           
 22353                           ; BSR set to: 0
 22354                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 22355  006B6C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22356  006B6E  0D01               	mullw	1
 22357  006B70  50F3               	movf	prodl,w,c
 22358  006B72  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22359  006B74  6F60               	movwf	memset@p1& (0+255),b
 22360  006B76  50F4               	movf	prodh,w,c
 22361  006B78  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22362  006B7A  6F61               	movwf	(memset@p1+1)& (0+255),b
 22363  006B7C  0E00               	movlw	0
 22364  006B7E  6F63               	movwf	(memset@c+1)& (0+255),b
 22365  006B80  0E00               	movlw	0
 22366  006B82  6F62               	movwf	memset@c& (0+255),b
 22367  006B84  0E00               	movlw	0
 22368  006B86  6F65               	movwf	(memset@n+1)& (0+255),b
 22369  006B88  0E10               	movlw	16
 22370  006B8A  6F64               	movwf	memset@n& (0+255),b
 22371  006B8C  EC6E  F042         	call	_memset	;wreg free
 22372                           
 22373                           ;lorawan.c: 2050: index ++;
 22374  006B90  0100               	movlb	0	; () banked
 22375  006B92  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 22379  006B94  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22380  006B96  0D01               	mullw	1
 22381  006B98  50F3               	movf	prodl,w,c
 22382  006B9A  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22383  006B9C  6F60               	movwf	memcpy@d1& (0+255),b
 22384  006B9E  50F4               	movf	prodh,w,c
 22385  006BA0  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22386  006BA2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22387  006BA4  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 22388  006BA8  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 22389  006BAC  0E00               	movlw	0
 22390  006BAE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22391  006BB0  0E03               	movlw	3
 22392  006BB2  6F64               	movwf	memcpy@n& (0+255),b
 22393  006BB4  EC22  F03D         	call	_memcpy	;wreg free
 22394                           
 22395                           ;lorawan.c: 2053: index = index + 3;
 22396  006BB8  0100               	movlb	0	; () banked
 22397  006BBA  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22398  006BBC  0F03               	addlw	3
 22399  006BBE  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22400                           
 22401                           ; BSR set to: 0
 22402                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 22403  006BC0  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22404  006BC2  0D01               	mullw	1
 22405  006BC4  50F3               	movf	prodl,w,c
 22406  006BC6  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22407  006BC8  6F60               	movwf	memcpy@d1& (0+255),b
 22408  006BCA  50F4               	movf	prodh,w,c
 22409  006BCC  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22410  006BCE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22411  006BD0  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 22412  006BD4  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 22413  006BD8  0E00               	movlw	0
 22414  006BDA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22415  006BDC  0E03               	movlw	3
 22416  006BDE  6F64               	movwf	memcpy@n& (0+255),b
 22417  006BE0  EC22  F03D         	call	_memcpy	;wreg free
 22418                           
 22419                           ;lorawan.c: 2056: index = index + 3;
 22420  006BE4  0100               	movlb	0	; () banked
 22421  006BE6  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22422  006BE8  0F03               	addlw	3
 22423  006BEA  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 22427  006BEC  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22428  006BEE  0D01               	mullw	1
 22429  006BF0  50F3               	movf	prodl,w,c
 22430  006BF2  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22431  006BF4  6F60               	movwf	memcpy@d1& (0+255),b
 22432  006BF6  50F4               	movf	prodh,w,c
 22433  006BF8  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22434  006BFA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22435  006BFC  0ED2               	movlw	low (_loRa+210)
 22436  006BFE  6F62               	movwf	memcpy@s1& (0+255),b
 22437  006C00  0E02               	movlw	high (_loRa+210)
 22438  006C02  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22439  006C04  0E00               	movlw	0
 22440  006C06  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22441  006C08  0E02               	movlw	2
 22442  006C0A  6F64               	movwf	memcpy@n& (0+255),b
 22443  006C0C  EC22  F03D         	call	_memcpy	;wreg free
 22444  006C10  0012               	return		;funcret
 22445  006C12                     __end_of_PrepareSessionKeys:
 22446                           	opt stack 0
 22447                           tosu	equ	0xFFF
 22448                           tosh	equ	0xFFE
 22449                           tosl	equ	0xFFD
 22450                           pclath	equ	0xFFA
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           intcon2	equ	0xFF1
 22459                           intcon3	equ	0xFF0
 22460                           indf0	equ	0xFEF
 22461                           postinc0	equ	0xFEE
 22462                           fsr0h	equ	0xFEA
 22463                           fsr0l	equ	0xFE9
 22464                           wreg	equ	0xFE8
 22465                           postinc1	equ	0xFE6
 22466                           postdec1	equ	0xFE5
 22467                           plusw1	equ	0xFE3
 22468                           fsr1h	equ	0xFE2
 22469                           fsr1l	equ	0xFE1
 22470                           indf2	equ	0xFDF
 22471                           postinc2	equ	0xFDE
 22472                           postdec2	equ	0xFDD
 22473                           plusw2	equ	0xFDB
 22474                           fsr2h	equ	0xFDA
 22475                           fsr2l	equ	0xFD9
 22476                           status	equ	0xFD8
 22477                           
 22478 ;; *************** function _CheckMcastFlags *****************
 22479 ;; Defined at:
 22480 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22481 ;; Parameters:    Size  Location     Type
 22482 ;;  hdr             2    0[BANK0 ] PTR struct .
 22483 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;		None
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1    wreg      unsigned char 
 22488 ;; Registers used:
 22489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/0
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22499 ;;Total ram usage:        2 bytes
 22500 ;; Hardware stack levels used:    1
 22501 ;; Hardware stack levels required when called:    7
 22502 ;; This function calls:
 22503 ;;		Nothing
 22504 ;; This function is called by:
 22505 ;;		_LORAWAN_RxDone
 22506 ;; This function uses a non-reentrant model
 22507 ;;
 22508                           
 22509                           	psect	text103
 22510  007378                     __ptext103:
 22511                           	opt stack 0
 22512  007378                     _CheckMcastFlags:
 22513                           	opt stack 19
 22514                           
 22515                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 22516                           
 22517                           ;incstack = 0
 22518  007378  0100               	movlb	0	; () banked
 22519  00737A  EE20 F005          	lfsr	2,5
 22520  00737E  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22521  007380  26D9               	addwf	fsr2l,f,c
 22522  007382  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22523  007384  22DA               	addwfc	fsr2h,f,c
 22524  007386  BADF               	btfsc	indf2,5,c
 22525  007388  D012               	goto	u17450
 22526                           
 22527                           ; BSR set to: 0
 22528  00738A  EE20 F005          	lfsr	2,5
 22529  00738E  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22530  007390  26D9               	addwf	fsr2l,f,c
 22531  007392  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22532  007394  22DA               	addwfc	fsr2h,f,c
 22533  007396  BCDF               	btfsc	indf2,6,c
 22534  007398  D00A               	goto	u17450
 22535                           
 22536                           ; BSR set to: 0
 22537  00739A  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 22538  00739E  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 22539  0073A2  38DF               	swapf	223,w,c
 22540  0073A4  32E8               	rrcf	wreg,f,c
 22541  0073A6  0B07               	andlw	7
 22542  0073A8  0A03               	xorlw	3
 22543  0073AA  B4D8               	btfsc	status,2,c
 22544  0073AC  D002               	goto	l2402
 22545  0073AE                     u17450:
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;lorawan.c: 2110: {
 22549                           ;lorawan.c: 2111: return 0;
 22550                           
 22551                           ; BSR set to: 0
 22552  0073AE  0E00               	movlw	0
 22553                           
 22554                           ; BSR set to: 0
 22555  0073B0  0012               	return	
 22556  0073B2                     l2402:
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;lorawan.c: 2112: }
 22560                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 22561                           
 22562                           ; BSR set to: 0
 22563  0073B2  EE20 F005          	lfsr	2,5
 22564  0073B6  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22565  0073B8  26D9               	addwf	fsr2l,f,c
 22566  0073BA  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22567  0073BC  22DA               	addwfc	fsr2h,f,c
 22568  0073BE  50DF               	movf	223,w,c
 22569  0073C0  0B0F               	andlw	15
 22570  0073C2  0900               	iorlw	0
 22571  0073C4  B4D8               	btfsc	status,2,c
 22572  0073C6  D002               	goto	l2406
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;lorawan.c: 2115: {
 22576                           ;lorawan.c: 2116: return 0;
 22577  0073C8  0E00               	movlw	0
 22578                           
 22579                           ; BSR set to: 0
 22580  0073CA  0012               	return	
 22581  0073CC                     l2406:
 22582                           
 22583                           ; BSR set to: 0
 22584                           ;lorawan.c: 2118: else
 22585                           ;lorawan.c: 2119: {
 22586                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 22587                           
 22588                           ; BSR set to: 0
 22589  0073CC  EE20 F008          	lfsr	2,8
 22590  0073D0  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22591  0073D2  26D9               	addwf	fsr2l,f,c
 22592  0073D4  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22593  0073D6  22DA               	addwfc	fsr2h,f,c
 22594  0073D8  50DF               	movf	indf2,w,c
 22595  0073DA  A4D8               	btfss	status,2,c
 22596  0073DC  D002               	goto	l2408
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;lorawan.c: 2121: {
 22600                           ;lorawan.c: 2122: return 0;
 22601  0073DE  0E00               	movlw	0
 22602                           
 22603                           ; BSR set to: 0
 22604  0073E0  0012               	return	
 22605  0073E2                     l2408:
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;lorawan.c: 2123: }
 22609                           ;lorawan.c: 2124: }
 22610                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 22611                           
 22612                           ; BSR set to: 0
 22613                           
 22614                           ; BSR set to: 0
 22615  0073E2  EE20 F005          	lfsr	2,5
 22616  0073E6  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22617  0073E8  26D9               	addwf	fsr2l,f,c
 22618  0073EA  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22619  0073EC  22DA               	addwfc	fsr2h,f,c
 22620  0073EE  A8DF               	btfss	indf2,4,c
 22621  0073F0  D002               	goto	l2409
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;lorawan.c: 2127: {
 22625                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 22626  0073F2  0102               	movlb	2	; () banked
 22627  0073F4  8700               	bsf	_loRa& (0+255),3,b
 22628  0073F6                     l2409:
 22629                           
 22630                           ;lorawan.c: 2129: }
 22631                           ;lorawan.c: 2131: return 1;
 22632                           
 22633                           ; BSR set to: 2
 22634  0073F6  0E01               	movlw	1
 22635  0073F8  0012               	return	
 22636  0073FA                     __end_of_CheckMcastFlags:
 22637                           	opt stack 0
 22638                           tosu	equ	0xFFF
 22639                           tosh	equ	0xFFE
 22640                           tosl	equ	0xFFD
 22641                           pclath	equ	0xFFA
 22642                           tblptru	equ	0xFF8
 22643                           tblptrh	equ	0xFF7
 22644                           tblptrl	equ	0xFF6
 22645                           tablat	equ	0xFF5
 22646                           prodh	equ	0xFF4
 22647                           prodl	equ	0xFF3
 22648                           intcon	equ	0xFF2
 22649                           intcon2	equ	0xFF1
 22650                           intcon3	equ	0xFF0
 22651                           indf0	equ	0xFEF
 22652                           postinc0	equ	0xFEE
 22653                           fsr0h	equ	0xFEA
 22654                           fsr0l	equ	0xFE9
 22655                           wreg	equ	0xFE8
 22656                           postinc1	equ	0xFE6
 22657                           postdec1	equ	0xFE5
 22658                           plusw1	equ	0xFE3
 22659                           fsr1h	equ	0xFE2
 22660                           fsr1l	equ	0xFE1
 22661                           indf2	equ	0xFDF
 22662                           postinc2	equ	0xFDE
 22663                           postdec2	equ	0xFDD
 22664                           plusw2	equ	0xFDB
 22665                           fsr2h	equ	0xFDA
 22666                           fsr2l	equ	0xFD9
 22667                           status	equ	0xFD8
 22668                           
 22669 ;; *************** function _CheckFlags *****************
 22670 ;; Defined at:
 22671 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22672 ;; Parameters:    Size  Location     Type
 22673 ;;  hdr             2    0[BANK0 ] PTR struct .
 22674 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;		None
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  1    wreg      void 
 22679 ;; Registers used:
 22680 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22681 ;; Tracked objects:
 22682 ;;		On entry : 0/0
 22683 ;;		On exit  : 0/0
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22690 ;;Total ram usage:        2 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:    7
 22693 ;; This function calls:
 22694 ;;		Nothing
 22695 ;; This function is called by:
 22696 ;;		_LORAWAN_RxDone
 22697 ;; This function uses a non-reentrant model
 22698 ;;
 22699                           
 22700                           	psect	text104
 22701  007B02                     __ptext104:
 22702                           	opt stack 0
 22703  007B02                     _CheckFlags:
 22704                           	opt stack 19
 22705                           
 22706                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 22707                           
 22708                           ;incstack = 0
 22709  007B02  0100               	movlb	0	; () banked
 22710  007B04  EE20 F005          	lfsr	2,5
 22711  007B08  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22712  007B0A  26D9               	addwf	fsr2l,f,c
 22713  007B0C  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22714  007B0E  22DA               	addwfc	fsr2h,f,c
 22715  007B10  AEDF               	btfss	indf2,7,c
 22716  007B12  D002               	goto	l2395
 22717                           
 22718                           ; BSR set to: 0
 22719                           ;lorawan.c: 2077: {
 22720                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 22721  007B14  0102               	movlb	2	; () banked
 22722  007B16  8D02               	bsf	(_loRa+2)& (0+255),6,b
 22723  007B18                     l2395:
 22724                           
 22725                           ;lorawan.c: 2079: }
 22726                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 22727                           
 22728                           ; BSR set to: 2
 22729  007B18  0100               	movlb	0	; () banked
 22730  007B1A  EE20 F005          	lfsr	2,5
 22731  007B1E  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22732  007B20  26D9               	addwf	fsr2l,f,c
 22733  007B22  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22734  007B24  22DA               	addwfc	fsr2h,f,c
 22735  007B26  A8DF               	btfss	indf2,4,c
 22736  007B28  D002               	goto	l2396
 22737                           
 22738                           ; BSR set to: 0
 22739                           ;lorawan.c: 2082: {
 22740                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 22741  007B2A  0102               	movlb	2	; () banked
 22742  007B2C  8700               	bsf	_loRa& (0+255),3,b
 22743  007B2E                     l2396:
 22744                           
 22745                           ;lorawan.c: 2084: }
 22746                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 22747                           
 22748                           ; BSR set to: 2
 22749  007B2E  0100               	movlb	0	; () banked
 22750  007B30  EE20 F005          	lfsr	2,5
 22751  007B34  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22752  007B36  26D9               	addwf	fsr2l,f,c
 22753  007B38  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22754  007B3A  22DA               	addwfc	fsr2h,f,c
 22755  007B3C  ACDF               	btfss	indf2,6,c
 22756  007B3E  D002               	goto	l2397
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;lorawan.c: 2087: {
 22760                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 22761  007B40  0102               	movlb	2	; () banked
 22762  007B42  8900               	bsf	_loRa& (0+255),4,b
 22763  007B44                     l2397:
 22764                           
 22765                           ;lorawan.c: 2089: }
 22766                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 22767                           
 22768                           ; BSR set to: 2
 22769  007B44  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 22770  007B48  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 22771  007B4C  0100               	movlb	0	; () banked
 22772  007B4E  38DF               	swapf	223,w,c
 22773  007B50  32E8               	rrcf	wreg,f,c
 22774  007B52  0B07               	andlw	7
 22775  007B54  0A05               	xorlw	5
 22776  007B56  A4D8               	btfss	status,2,c
 22777  007B58  0012               	return	
 22778                           
 22779                           ; BSR set to: 0
 22780                           ;lorawan.c: 2092: {
 22781                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 22782  007B5A  0102               	movlb	2	; () banked
 22783  007B5C  8300               	bsf	_loRa& (0+255),1,b
 22784  007B5E  0012               	return	
 22785  007B60                     __end_of_CheckFlags:
 22786                           	opt stack 0
 22787                           tosu	equ	0xFFF
 22788                           tosh	equ	0xFFE
 22789                           tosl	equ	0xFFD
 22790                           pclath	equ	0xFFA
 22791                           tblptru	equ	0xFF8
 22792                           tblptrh	equ	0xFF7
 22793                           tblptrl	equ	0xFF6
 22794                           tablat	equ	0xFF5
 22795                           prodh	equ	0xFF4
 22796                           prodl	equ	0xFF3
 22797                           intcon	equ	0xFF2
 22798                           intcon2	equ	0xFF1
 22799                           intcon3	equ	0xFF0
 22800                           indf0	equ	0xFEF
 22801                           postinc0	equ	0xFEE
 22802                           fsr0h	equ	0xFEA
 22803                           fsr0l	equ	0xFE9
 22804                           wreg	equ	0xFE8
 22805                           postinc1	equ	0xFE6
 22806                           postdec1	equ	0xFE5
 22807                           plusw1	equ	0xFE3
 22808                           fsr1h	equ	0xFE2
 22809                           fsr1l	equ	0xFE1
 22810                           indf2	equ	0xFDF
 22811                           postinc2	equ	0xFDE
 22812                           postdec2	equ	0xFDD
 22813                           plusw2	equ	0xFDB
 22814                           fsr2h	equ	0xFDA
 22815                           fsr2l	equ	0xFD9
 22816                           status	equ	0xFD8
 22817                           
 22818 ;; *************** function _RADIO_FSKPacketSent *****************
 22819 ;; Defined at:
 22820 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;		None
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 22825 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 22826 ;; Return value:  Size  Location     Type
 22827 ;;                  1    wreg      void 
 22828 ;; Registers used:
 22829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22830 ;; Tracked objects:
 22831 ;;		On entry : 0/0
 22832 ;;		On exit  : 0/0
 22833 ;;		Unchanged: 0/0
 22834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22836 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22838 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22839 ;;Total ram usage:       13 bytes
 22840 ;; Hardware stack levels used:    1
 22841 ;; Hardware stack levels required when called:   15
 22842 ;; This function calls:
 22843 ;;		_LORAWAN_TxDone
 22844 ;;		_RADIO_RegisterRead
 22845 ;;		_RADIO_WriteMode
 22846 ;;		_SwTimerReadValue
 22847 ;;		_SwTimerStop
 22848 ;;		___lmul
 22849 ;; This function is called by:
 22850 ;;		_RADIO_DIO0
 22851 ;; This function uses a non-reentrant model
 22852 ;;
 22853                           
 22854                           	psect	text105
 22855  005730                     __ptext105:
 22856                           	opt stack 0
 22857  005730                     _RADIO_FSKPacketSent:
 22858                           	opt stack 13
 22859                           
 22860                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 22861                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 22862                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 22863                           
 22864                           ;incstack = 0
 22865  005730  0E3F               	movlw	63
 22866  005732  ECCA  F043         	call	_RADIO_RegisterRead
 22867  005736  0100               	movlb	0	; () banked
 22868  005738  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 22872  00573A  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 22873  00573C  0012               	return	
 22874                           
 22875                           ; BSR set to: 0
 22876                           ;radio_driver_SX1276.c: 1100: {
 22877                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 22878  00573E  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 22879  005742  0E00               	movlw	0
 22880  005744  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 22881  005746  0E00               	movlw	0
 22882  005748  ECE7  F02E         	call	_RADIO_WriteMode
 22883                           
 22884                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 22885  00574C  0101               	movlb	1	; () banked
 22886  00574E  919E               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 22890  005750  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 22891  005752  ECDE  F043         	call	_SwTimerStop
 22892                           
 22893                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 22894  005756  0101               	movlb	1	; () banked
 22895  005758  B99E               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 22896  00575A  0012               	return	
 22897                           
 22898                           ; BSR set to: 1
 22899                           ;radio_driver_SX1276.c: 1107: {
 22900                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 22901  00575C  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22902  00575E  EC4B  F041         	call	_SwTimerReadValue
 22903  005762  0100               	movlb	0	; () banked
 22904  005764  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 22905  005766  E108               	bnz	u19160
 22906  005768  0E1F               	movlw	31
 22907  00576A  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 22908  00576C  0EAC               	movlw	172
 22909  00576E  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 22910  005770  0EDF               	movlw	223
 22911  005772  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 22912  005774  A0D8               	btfss	status,0,c
 22913  005776  D021               	goto	l625
 22914  005778                     u19160:
 22915                           
 22916                           ; BSR set to: 0
 22917  005778  0101               	movlb	1	; () banked
 22918  00577A  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22919  00577C  EC4B  F041         	call	_SwTimerReadValue
 22920  005780  0E0D               	movlw	13
 22921  005782  D006               	goto	u19170
 22922  005784                     u19175:
 22923  005784  0100               	movlb	0	; () banked
 22924  005786  90D8               	bcf	status,0,c
 22925  005788  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 22926  00578A  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 22927  00578C  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 22928  00578E  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 22929  005790                     u19170:
 22930  005790  2EE8               	decfsz	wreg,f,c
 22931  005792  D7F8               	goto	u19175
 22932  005794  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22933  005798  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22934  00579C  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22935  0057A0  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22936  0057A4  0E7D               	movlw	125
 22937  0057A6  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22938  0057A8  0E00               	movlw	0
 22939  0057AA  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22940  0057AC  0E00               	movlw	0
 22941  0057AE  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22942  0057B0  0E00               	movlw	0
 22943  0057B2  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22944  0057B4  EC38  F03E         	call	___lmul	;wreg free
 22945  0057B8  D021               	goto	L14
 22946  0057BA                     l625:
 22947  0057BA  0101               	movlb	1	; () banked
 22948  0057BC  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22949  0057BE  EC4B  F041         	call	_SwTimerReadValue
 22950  0057C2  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22951  0057C6  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22952  0057CA  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22953  0057CE  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22954  0057D2  0E7D               	movlw	125
 22955  0057D4  0100               	movlb	0	; () banked
 22956  0057D6  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22957  0057D8  0E00               	movlw	0
 22958  0057DA  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22959  0057DC  0E00               	movlw	0
 22960  0057DE  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22961  0057E0  0E00               	movlw	0
 22962  0057E2  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22963  0057E4  EC38  F03E         	call	___lmul	;wreg free
 22964  0057E8  0E0D               	movlw	13
 22965  0057EA  D006               	goto	u19180
 22966  0057EC                     u19185:
 22967  0057EC  0100               	movlb	0	; () banked
 22968  0057EE  90D8               	bcf	status,0,c
 22969  0057F0  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 22970  0057F2  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 22971  0057F4  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 22972  0057F6  339A               	rrcf	?___lmul& (0+255),f,b
 22973  0057F8                     u19180:
 22974  0057F8  2EE8               	decfsz	wreg,f,c
 22975  0057FA  D7F8               	goto	u19185
 22976  0057FC                     L14:
 22977  0057FC  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$1098
 22978  005800  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$1098+1
 22979  005804  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$1098+2
 22980  005808  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$1098+3
 22981                           
 22982                           ; BSR set to: 0
 22983  00580C  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$1098,??_RADIO_FSKPacketSent
 22984  005810  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$1098+1,??_RADIO_FSKPacketSent+1
 22985  005814  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$1098+2,??_RADIO_FSKPacketSent+2
 22986  005818  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$1098+3,??_RADIO_FSKPacketSent+3
 22987  00581C  0100               	movlb	0	; () banked
 22988  00581E  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 22989  005820  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22990  005822  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22991  005824  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22992  005826  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 22993  005828  0E00               	movlw	0
 22994  00582A  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22995  00582C  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22996  00582E  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22997  005830  0E20               	movlw	32
 22998  005832  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 22999  005834  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 23000  005836  0E4E               	movlw	78
 23001  005838  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 23002  00583A  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 23003  00583C  0E00               	movlw	0
 23004  00583E  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 23005  005840  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 23006  005842  0E00               	movlw	0
 23007  005844  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 23008  005846  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 23009                           
 23010                           ; BSR set to: 0
 23011                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 23012  005848  0101               	movlb	1	; () banked
 23013  00584A  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 23014  00584C  ECDE  F043         	call	_SwTimerStop
 23015                           
 23016                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 23017  005850  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 23018  005854  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 23019  005858  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
 23020  00585C  0012               	return	
 23021  00585E                     __end_of_RADIO_FSKPacketSent:
 23022                           	opt stack 0
 23023                           tosu	equ	0xFFF
 23024                           tosh	equ	0xFFE
 23025                           tosl	equ	0xFFD
 23026                           pclath	equ	0xFFA
 23027                           tblptru	equ	0xFF8
 23028                           tblptrh	equ	0xFF7
 23029                           tblptrl	equ	0xFF6
 23030                           tablat	equ	0xFF5
 23031                           prodh	equ	0xFF4
 23032                           prodl	equ	0xFF3
 23033                           intcon	equ	0xFF2
 23034                           intcon2	equ	0xFF1
 23035                           intcon3	equ	0xFF0
 23036                           indf0	equ	0xFEF
 23037                           postinc0	equ	0xFEE
 23038                           fsr0h	equ	0xFEA
 23039                           fsr0l	equ	0xFE9
 23040                           wreg	equ	0xFE8
 23041                           postinc1	equ	0xFE6
 23042                           postdec1	equ	0xFE5
 23043                           plusw1	equ	0xFE3
 23044                           fsr1h	equ	0xFE2
 23045                           fsr1l	equ	0xFE1
 23046                           indf2	equ	0xFDF
 23047                           postinc2	equ	0xFDE
 23048                           postdec2	equ	0xFDD
 23049                           plusw2	equ	0xFDB
 23050                           fsr2h	equ	0xFDA
 23051                           fsr2l	equ	0xFD9
 23052                           status	equ	0xFD8
 23053                           
 23054 ;; *************** function _LORAWAN_TxDone *****************
 23055 ;; Defined at:
 23056 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;  minim           4  126[BANK0 ] unsigned long 
 23061 ;;  ticks           4  122[BANK0 ] unsigned long 
 23062 ;;  delta           4  114[BANK0 ] unsigned long 
 23063 ;;  i               1  130[BANK0 ] unsigned char 
 23064 ;;  found           1  113[BANK0 ] unsigned char 
 23065 ;; Return value:  Size  Location     Type
 23066 ;;                  1    wreg      void 
 23067 ;; Registers used:
 23068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23069 ;; Tracked objects:
 23070 ;;		On entry : 0/0
 23071 ;;		On exit  : 0/0
 23072 ;;		Unchanged: 0/0
 23073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23075 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23076 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23077 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23078 ;;Total ram usage:       40 bytes
 23079 ;; Hardware stack levels used:    1
 23080 ;; Hardware stack levels required when called:   14
 23081 ;; This function calls:
 23082 ;;		_LORAWAN_EnterContinuousReceive
 23083 ;;		_RADIO_GetStatus
 23084 ;;		_RxData
 23085 ;;		_SwTimerIsRunning
 23086 ;;		_SwTimerReadValue
 23087 ;;		_SwTimerSetTimeout
 23088 ;;		_SwTimerStart
 23089 ;;		_SwTimerStop
 23090 ;;		___lldiv
 23091 ;;		___lmul
 23092 ;; This function is called by:
 23093 ;;		_RADIO_TxDone
 23094 ;;		_RADIO_FSKPacketSent
 23095 ;;		_RADIO_WatchdogTimeout
 23096 ;; This function uses a non-reentrant model
 23097 ;;
 23098                           
 23099                           	psect	text106
 23100  000D2C                     __ptext106:
 23101                           	opt stack 0
 23102  000D2C                     _LORAWAN_TxDone:
 23103                           	opt stack 13
 23104                           
 23105                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 23106                           
 23107                           ;incstack = 0
 23108  000D2C  0102               	movlb	2	; () banked
 23109  000D2E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 23110  000D30  D3A2               	goto	l1073
 23111                           
 23112                           ; BSR set to: 2
 23113                           ;lorawan_eu.c: 368: {
 23114                           ;lorawan_eu.c: 369: bool found = 0;
 23115  000D32  0E00               	movlw	0
 23116  000D34  0100               	movlb	0	; () banked
 23117  000D36  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 23118                           
 23119                           ;lorawan_eu.c: 370: uint8_t i;
 23120                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 23121  000D38  0E00               	movlw	0
 23122  000D3A  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23123  000D3C  0E00               	movlw	0
 23124  000D3E  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23125  000D40  0E00               	movlw	0
 23126  000D42  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23127  000D44  0E00               	movlw	0
 23128  000D46  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23129                           
 23130                           ; BSR set to: 0
 23131  000D48  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 23132  000D4A  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 23133  000D4C  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 23134  000D4E  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 23135                           
 23136                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 23137  000D50  0E00               	movlw	0
 23138  000D52  0102               	movlb	2	; () banked
 23139  000D54  6FF1               	movwf	(_loRa+241)& (0+255),b
 23140                           
 23141                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 23142  000D56  5102               	movf	(_loRa+2)& (0+255),w,b
 23143  000D58  0BF0               	andlw	-16
 23144  000D5A  0902               	iorlw	2
 23145  000D5C  6F02               	movwf	(_loRa+2)& (0+255),b
 23146                           
 23147                           ; BSR set to: 2
 23148                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 23149  000D5E  C2DA  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 23150                           
 23151                           ; BSR set to: 2
 23152                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 23153  000D62  A500               	btfss	_loRa& (0+255),2,b
 23154  000D64  D0BA               	goto	l1074
 23155                           
 23156                           ; BSR set to: 2
 23157                           ;lorawan_eu.c: 382: {
 23158                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23159  000D66  5117               	movf	(_loRa+23)& (0+255),w,b
 23160  000D68  0D01               	mullw	1
 23161  000D6A  0E6F               	movlw	low _rxWindowOffset
 23162  000D6C  24F3               	addwf	prodl,w,c
 23163  000D6E  6EF6               	movwf	tblptrl,c
 23164  000D70  0EFF               	movlw	high _rxWindowOffset
 23165  000D72  20F4               	addwfc	prodh,w,c
 23166  000D74  6EF7               	movwf	tblptrh,c
 23167  000D76                     	if	1	;There are 3 active tblptr bytes
 23168  000D76  6AF8               	clrf	tblptru,c
 23169  000D78  0E00               	movlw	low (__mediumconst shr (0+16))
 23170  000D7A  22F8               	addwfc	tblptru,f,c
 23171  000D7C                     	endif
 23172  000D7C  0008               	tblrd		*
 23173  000D7E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23174  000D82  5198               	movf	(_loRa+152)& (0+255),w,b
 23175  000D84  0100               	movlb	0	; () banked
 23176  000D86  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23177  000D88  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23178  000D8A  0E00               	movlw	0
 23179  000D8C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23180  000D8E  0EFF               	movlw	255
 23181  000D90  0102               	movlb	2	; () banked
 23182  000D92  2199               	addwfc	(_loRa+153)& (0+255),w,b
 23183  000D94  0100               	movlb	0	; () banked
 23184  000D96  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23185  000D98  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23186  000D9A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23187  000D9C  0E0C               	movlw	12
 23188  000D9E                     u18665:
 23189  000D9E  90D8               	bcf	status,0,c
 23190  000DA0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23191  000DA2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23192  000DA4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23193  000DA6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23194  000DA8  2EE8               	decfsz	wreg,f,c
 23195  000DAA  D7F9               	goto	u18665
 23196  000DAC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23197  000DB0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23198  000DB4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23199  000DB8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23200  000DBC  0E7D               	movlw	125
 23201  000DBE  6F64               	movwf	___lldiv@divisor& (0+255),b
 23202  000DC0  0E00               	movlw	0
 23203  000DC2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23204  000DC4  0E00               	movlw	0
 23205  000DC6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23206  000DC8  0E00               	movlw	0
 23207  000DCA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23208  000DCC  EC7A  F039         	call	___lldiv	;wreg free
 23209  000DD0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23210  000DD4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23211  000DD8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23212  000DDC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23213  000DE0  0102               	movlb	2	; () banked
 23214  000DE2  51E2               	movf	(_loRa+226)& (0+255),w,b
 23215  000DE4  ECC6  F040         	call	_SwTimerSetTimeout
 23216                           
 23217                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23218  000DE8  0102               	movlb	2	; () banked
 23219  000DEA  511C               	movf	(_loRa+28)& (0+255),w,b
 23220  000DEC  0D01               	mullw	1
 23221  000DEE  0E6F               	movlw	low _rxWindowOffset
 23222  000DF0  24F3               	addwf	prodl,w,c
 23223  000DF2  6EF6               	movwf	tblptrl,c
 23224  000DF4  0EFF               	movlw	high _rxWindowOffset
 23225  000DF6  20F4               	addwfc	prodh,w,c
 23226  000DF8  6EF7               	movwf	tblptrh,c
 23227  000DFA                     	if	1	;There are 3 active tblptr bytes
 23228  000DFA  6AF8               	clrf	tblptru,c
 23229  000DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 23230  000DFE  22F8               	addwfc	tblptru,f,c
 23231  000E00                     	endif
 23232  000E00  0008               	tblrd		*
 23233  000E02  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23234  000E06  519A               	movf	(_loRa+154)& (0+255),w,b
 23235  000E08  0100               	movlb	0	; () banked
 23236  000E0A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23237  000E0C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23238  000E0E  0E00               	movlw	0
 23239  000E10  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23240  000E12  0EFF               	movlw	255
 23241  000E14  0102               	movlb	2	; () banked
 23242  000E16  219B               	addwfc	(_loRa+155)& (0+255),w,b
 23243  000E18  0100               	movlb	0	; () banked
 23244  000E1A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23245  000E1C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23246  000E1E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23247  000E20  0E0C               	movlw	12
 23248  000E22                     u18675:
 23249  000E22  90D8               	bcf	status,0,c
 23250  000E24  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23251  000E26  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23252  000E28  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23253  000E2A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23254  000E2C  2EE8               	decfsz	wreg,f,c
 23255  000E2E  D7F9               	goto	u18675
 23256  000E30  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23257  000E34  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23258  000E38  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23259  000E3C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23260  000E40  0E7D               	movlw	125
 23261  000E42  6F64               	movwf	___lldiv@divisor& (0+255),b
 23262  000E44  0E00               	movlw	0
 23263  000E46  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23264  000E48  0E00               	movlw	0
 23265  000E4A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23266  000E4C  0E00               	movlw	0
 23267  000E4E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23268  000E50  EC7A  F039         	call	___lldiv	;wreg free
 23269  000E54  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23270  000E58  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23271  000E5C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23272  000E60  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23273  000E64  0102               	movlb	2	; () banked
 23274  000E66  51E3               	movf	(_loRa+227)& (0+255),w,b
 23275  000E68  ECC6  F040         	call	_SwTimerSetTimeout
 23276                           
 23277                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 23278  000E6C  0102               	movlb	2	; () banked
 23279  000E6E  51E2               	movf	(_loRa+226)& (0+255),w,b
 23280  000E70  EC01  F037         	call	_SwTimerStart
 23281                           
 23282                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 23283  000E74  0102               	movlb	2	; () banked
 23284  000E76  51E3               	movf	(_loRa+227)& (0+255),w,b
 23285  000E78  EC01  F037         	call	_SwTimerStart
 23286                           
 23287                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 23288  000E7C  C2DB  F09A         	movff	_loRa+219,___lmul@multiplier
 23289  000E80  C2DC  F09B         	movff	_loRa+220,___lmul@multiplier+1
 23290  000E84  0100               	movlb	0	; () banked
 23291  000E86  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 23292  000E88  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 23293  000E8A  0ED6               	movlw	214
 23294  000E8C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23295  000E8E  0E0B               	movlw	11
 23296  000E90  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23297  000E92  0E00               	movlw	0
 23298  000E94  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23299  000E96  0E00               	movlw	0
 23300  000E98  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23301  000E9A  EC38  F03E         	call	___lmul	;wreg free
 23302  000E9E  0EFF               	movlw	255
 23303  000EA0  0100               	movlb	0	; () banked
 23304  000EA2  259A               	addwf	?___lmul& (0+255),w,b
 23305  000EA4  6FD6               	movwf	_LORAWAN_TxDone$5004& (0+255),b
 23306  000EA6  0EFF               	movlw	255
 23307  000EA8  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 23308  000EAA  6FD7               	movwf	(_LORAWAN_TxDone$5004+1)& (0+255),b
 23309  000EAC  0EFF               	movlw	255
 23310  000EAE  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 23311  000EB0  6FD8               	movwf	(_LORAWAN_TxDone$5004+2)& (0+255),b
 23312  000EB2  0EFF               	movlw	255
 23313  000EB4  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 23314  000EB6  6FD9               	movwf	(_LORAWAN_TxDone$5004+3)& (0+255),b
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 23318  000EB8  C0D6  F09A         	movff	_LORAWAN_TxDone$5004,___lmul@multiplier
 23319  000EBC  C0D7  F09B         	movff	_LORAWAN_TxDone$5004+1,___lmul@multiplier+1
 23320  000EC0  C0D8  F09C         	movff	_LORAWAN_TxDone$5004+2,___lmul@multiplier+2
 23321  000EC4  C0D9  F09D         	movff	_LORAWAN_TxDone$5004+3,___lmul@multiplier+3
 23322  000EC8  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 23323  000ECC  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 23324  000ED0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 23325  000ED2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 23326  000ED4  EC38  F03E         	call	___lmul	;wreg free
 23327  000ED8  D0D7               	goto	L15
 23328  000EDA                     l1074:
 23329                           
 23330                           ;lorawan_eu.c: 390: else
 23331                           ;lorawan_eu.c: 391: {
 23332                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23333                           
 23334                           ; BSR set to: 0
 23335  000EDA  0102               	movlb	2	; () banked
 23336  000EDC  5117               	movf	(_loRa+23)& (0+255),w,b
 23337  000EDE  0D01               	mullw	1
 23338  000EE0  0E6F               	movlw	low _rxWindowOffset
 23339  000EE2  24F3               	addwf	prodl,w,c
 23340  000EE4  6EF6               	movwf	tblptrl,c
 23341  000EE6  0EFF               	movlw	high _rxWindowOffset
 23342  000EE8  20F4               	addwfc	prodh,w,c
 23343  000EEA  6EF7               	movwf	tblptrh,c
 23344  000EEC                     	if	1	;There are 3 active tblptr bytes
 23345  000EEC  6AF8               	clrf	tblptru,c
 23346  000EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 23347  000EF0  22F8               	addwfc	tblptru,f,c
 23348  000EF2                     	endif
 23349  000EF2  0008               	tblrd		*
 23350  000EF4  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23351  000EF8  5194               	movf	(_loRa+148)& (0+255),w,b
 23352  000EFA  0100               	movlb	0	; () banked
 23353  000EFC  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23354  000EFE  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23355  000F00  0E00               	movlw	0
 23356  000F02  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23357  000F04  0EFF               	movlw	255
 23358  000F06  0102               	movlb	2	; () banked
 23359  000F08  2195               	addwfc	(_loRa+149)& (0+255),w,b
 23360  000F0A  0100               	movlb	0	; () banked
 23361  000F0C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23362  000F0E  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23363  000F10  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23364  000F12  0E0C               	movlw	12
 23365  000F14                     u18685:
 23366  000F14  90D8               	bcf	status,0,c
 23367  000F16  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23368  000F18  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23369  000F1A  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23370  000F1C  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23371  000F1E  2EE8               	decfsz	wreg,f,c
 23372  000F20  D7F9               	goto	u18685
 23373  000F22  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23374  000F26  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23375  000F2A  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23376  000F2E  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23377  000F32  0E7D               	movlw	125
 23378  000F34  6F64               	movwf	___lldiv@divisor& (0+255),b
 23379  000F36  0E00               	movlw	0
 23380  000F38  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23381  000F3A  0E00               	movlw	0
 23382  000F3C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23383  000F3E  0E00               	movlw	0
 23384  000F40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23385  000F42  EC7A  F039         	call	___lldiv	;wreg free
 23386  000F46  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23387  000F4A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23388  000F4E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23389  000F52  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23390  000F56  0102               	movlb	2	; () banked
 23391  000F58  51E4               	movf	(_loRa+228)& (0+255),w,b
 23392  000F5A  ECC6  F040         	call	_SwTimerSetTimeout
 23393                           
 23394                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23395  000F5E  0102               	movlb	2	; () banked
 23396  000F60  511C               	movf	(_loRa+28)& (0+255),w,b
 23397  000F62  0D01               	mullw	1
 23398  000F64  0E6F               	movlw	low _rxWindowOffset
 23399  000F66  24F3               	addwf	prodl,w,c
 23400  000F68  6EF6               	movwf	tblptrl,c
 23401  000F6A  0EFF               	movlw	high _rxWindowOffset
 23402  000F6C  20F4               	addwfc	prodh,w,c
 23403  000F6E  6EF7               	movwf	tblptrh,c
 23404  000F70                     	if	1	;There are 3 active tblptr bytes
 23405  000F70  6AF8               	clrf	tblptru,c
 23406  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 23407  000F74  22F8               	addwfc	tblptru,f,c
 23408  000F76                     	endif
 23409  000F76  0008               	tblrd		*
 23410  000F78  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23411  000F7C  5196               	movf	(_loRa+150)& (0+255),w,b
 23412  000F7E  0100               	movlb	0	; () banked
 23413  000F80  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23414  000F82  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23415  000F84  0E00               	movlw	0
 23416  000F86  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23417  000F88  0EFF               	movlw	255
 23418  000F8A  0102               	movlb	2	; () banked
 23419  000F8C  2197               	addwfc	(_loRa+151)& (0+255),w,b
 23420  000F8E  0100               	movlb	0	; () banked
 23421  000F90  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23422  000F92  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23423  000F94  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23424  000F96  0E0C               	movlw	12
 23425  000F98                     u18695:
 23426  000F98  90D8               	bcf	status,0,c
 23427  000F9A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23428  000F9C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23429  000F9E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23430  000FA0  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23431  000FA2  2EE8               	decfsz	wreg,f,c
 23432  000FA4  D7F9               	goto	u18695
 23433  000FA6  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23434  000FAA  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23435  000FAE  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23436  000FB2  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23437  000FB6  0E7D               	movlw	125
 23438  000FB8  6F64               	movwf	___lldiv@divisor& (0+255),b
 23439  000FBA  0E00               	movlw	0
 23440  000FBC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23441  000FBE  0E00               	movlw	0
 23442  000FC0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23443  000FC2  0E00               	movlw	0
 23444  000FC4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23445  000FC6  EC7A  F039         	call	___lldiv	;wreg free
 23446  000FCA  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23447  000FCE  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23448  000FD2  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23449  000FD6  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23450  000FDA  0102               	movlb	2	; () banked
 23451  000FDC  51E5               	movf	(_loRa+229)& (0+255),w,b
 23452  000FDE  ECC6  F040         	call	_SwTimerSetTimeout
 23453                           
 23454                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 23455  000FE2  0102               	movlb	2	; () banked
 23456  000FE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 23457  000FE6  EC01  F037         	call	_SwTimerStart
 23458                           
 23459                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 23460  000FEA  0102               	movlb	2	; () banked
 23461  000FEC  5112               	movf	(_loRa+18)& (0+255),w,b
 23462  000FEE  A4D8               	btfss	status,2,c
 23463  000FF0  D003               	goto	l1076
 23464                           
 23465                           ; BSR set to: 2
 23466                           ;lorawan_eu.c: 396: {
 23467                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 23468  000FF2  51E5               	movf	(_loRa+229)& (0+255),w,b
 23469  000FF4  EC01  F037         	call	_SwTimerStart
 23470  000FF8                     l1076:
 23471                           
 23472                           ;lorawan_eu.c: 398: }
 23473                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23474  000FF8  0100               	movlb	0	; () banked
 23475  000FFA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23476  000FFC  0D0E               	mullw	14
 23477  000FFE  0E06               	movlw	6
 23478  001000  26F3               	addwf	prodl,f,c
 23479  001002  0E00               	movlw	0
 23480  001004  22F4               	addwfc	prodh,f,c
 23481  001006  0E00               	movlw	low _Channels
 23482  001008  24F3               	addwf	prodl,w,c
 23483  00100A  6ED9               	movwf	fsr2l,c
 23484  00100C  0E04               	movlw	high _Channels
 23485  00100E  20F4               	addwfc	prodh,w,c
 23486  001010  6EDA               	movwf	fsr2h,c
 23487  001012  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 23488  001016  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 23489  00101A  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 23490  00101C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23491  00101E  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23492  001020  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 23493  001022  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23494  001024  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 23495  001026  0E01               	movlw	1
 23496  001028  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23497  00102A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 23498  00102C  0E00               	movlw	0
 23499  00102E  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23500  001030  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 23501  001032  0E00               	movlw	0
 23502  001034  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23503  001036  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 23504  001038  0E00               	movlw	0
 23505  00103A  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23506  00103C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 23507  00103E  C2DB  F09E         	movff	_loRa+219,___lmul@multiplicand
 23508  001042  C2DC  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 23509  001046  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 23510  001048  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 23511  00104A  EC38  F03E         	call	___lmul	;wreg free
 23512  00104E  0EFF               	movlw	255
 23513  001050  0100               	movlb	0	; () banked
 23514  001052  259A               	addwf	?___lmul& (0+255),w,b
 23515  001054  6FD6               	movwf	_LORAWAN_TxDone$5004& (0+255),b
 23516  001056  0EFF               	movlw	255
 23517  001058  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 23518  00105A  6FD7               	movwf	(_LORAWAN_TxDone$5004+1)& (0+255),b
 23519  00105C  0EFF               	movlw	255
 23520  00105E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 23521  001060  6FD8               	movwf	(_LORAWAN_TxDone$5004+2)& (0+255),b
 23522  001062  0EFF               	movlw	255
 23523  001064  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 23524  001066  6FD9               	movwf	(_LORAWAN_TxDone$5004+3)& (0+255),b
 23525                           
 23526                           ;lorawan_eu.c: 398: }
 23527                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23528  001068  C0D6  F09A         	movff	_LORAWAN_TxDone$5004,___lmul@multiplier
 23529  00106C  C0D7  F09B         	movff	_LORAWAN_TxDone$5004+1,___lmul@multiplier+1
 23530  001070  C0D8  F09C         	movff	_LORAWAN_TxDone$5004+2,___lmul@multiplier+2
 23531  001074  C0D9  F09D         	movff	_LORAWAN_TxDone$5004+3,___lmul@multiplier+3
 23532  001078  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 23533  00107C  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 23534  001080  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 23535  001082  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 23536  001084  EC38  F03E         	call	___lmul	;wreg free
 23537  001088                     L15:
 23538  001088  0100               	movlb	0	; () banked
 23539  00108A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23540  00108C  0D0E               	mullw	14
 23541  00108E  0E08               	movlw	8
 23542  001090  26F3               	addwf	prodl,f,c
 23543  001092  0E00               	movlw	0
 23544  001094  22F4               	addwfc	prodh,f,c
 23545  001096  0E00               	movlw	low _Channels
 23546  001098  24F3               	addwf	prodl,w,c
 23547  00109A  6ED9               	movwf	fsr2l,c
 23548  00109C  0E04               	movlw	high _Channels
 23549  00109E  20F4               	addwfc	prodh,w,c
 23550  0010A0  6EDA               	movwf	fsr2h,c
 23551  0010A2  C09A  FFDE         	movff	?___lmul,postinc2
 23552  0010A6  C09B  FFDE         	movff	?___lmul+1,postinc2
 23553  0010AA  C09C  FFDE         	movff	?___lmul+2,postinc2
 23554  0010AE  C09D  FFDE         	movff	?___lmul+3,postinc2
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;lorawan_eu.c: 401: }
 23558                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 23559  0010B2  0102               	movlb	2	; () banked
 23560  0010B4  51E9               	movf	(_loRa+233)& (0+255),w,b
 23561  0010B6  EC50  F043         	call	_SwTimerIsRunning
 23562  0010BA  0900               	iorlw	0
 23563  0010BC  B4D8               	btfsc	status,2,c
 23564  0010BE  D08A               	goto	l1077
 23565                           
 23566                           ;lorawan_eu.c: 404: {
 23567                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 23568  0010C0  0102               	movlb	2	; () banked
 23569  0010C2  51E9               	movf	(_loRa+233)& (0+255),w,b
 23570  0010C4  ECDE  F043         	call	_SwTimerStop
 23571                           
 23572                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 23573  0010C8  0102               	movlb	2	; () banked
 23574  0010CA  51E9               	movf	(_loRa+233)& (0+255),w,b
 23575  0010CC  EC4B  F041         	call	_SwTimerReadValue
 23576  0010D0  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 23577  0010D4  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 23578  0010D8  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 23579  0010DC  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 23580                           
 23581                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 23582  0010E0  0100               	movlb	0	; () banked
 23583  0010E2  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 23584  0010E4  E108               	bnz	u18720
 23585  0010E6  0E1F               	movlw	31
 23586  0010E8  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 23587  0010EA  0EAC               	movlw	172
 23588  0010EC  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 23589  0010EE  0EDF               	movlw	223
 23590  0010F0  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 23591  0010F2  A0D8               	btfss	status,0,c
 23592  0010F4  D024               	goto	l1079
 23593  0010F6                     u18720:
 23594                           
 23595                           ; BSR set to: 0
 23596  0010F6  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 23597  0010FA  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 23598  0010FE  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 23599  001102  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 23600  001106  0E0D               	movlw	13
 23601  001108  D005               	goto	u18730
 23602  00110A                     u18735:
 23603  00110A  90D8               	bcf	status,0,c
 23604  00110C  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23605  00110E  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23606  001110  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23607  001112  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 23608  001114                     u18730:
 23609  001114  2EE8               	decfsz	wreg,f,c
 23610  001116  D7F9               	goto	u18735
 23611  001118  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 23612  00111C  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 23613  001120  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 23614  001124  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 23615  001128  0E7D               	movlw	125
 23616  00112A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23617  00112C  0E00               	movlw	0
 23618  00112E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23619  001130  0E00               	movlw	0
 23620  001132  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23621  001134  0E00               	movlw	0
 23622  001136  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23623  001138  EC38  F03E         	call	___lmul	;wreg free
 23624  00113C  D01D               	goto	L16
 23625  00113E                     l1079:
 23626  00113E  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 23627  001142  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 23628  001146  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 23629  00114A  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 23630  00114E  0E7D               	movlw	125
 23631  001150  0100               	movlb	0	; () banked
 23632  001152  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23633  001154  0E00               	movlw	0
 23634  001156  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23635  001158  0E00               	movlw	0
 23636  00115A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23637  00115C  0E00               	movlw	0
 23638  00115E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23639  001160  EC38  F03E         	call	___lmul	;wreg free
 23640  001164  0E0D               	movlw	13
 23641  001166  D006               	goto	u18740
 23642  001168                     u18745:
 23643  001168  0100               	movlb	0	; () banked
 23644  00116A  90D8               	bcf	status,0,c
 23645  00116C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 23646  00116E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 23647  001170  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 23648  001172  339A               	rrcf	?___lmul& (0+255),f,b
 23649  001174                     u18740:
 23650  001174  2EE8               	decfsz	wreg,f,c
 23651  001176  D7F8               	goto	u18745
 23652  001178                     L16:
 23653  001178  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$1971
 23654  00117C  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$1971+1
 23655  001180  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$1971+2
 23656  001184  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$1971+3
 23657                           
 23658                           ; BSR set to: 0
 23659  001188  C0C9  F0BD         	movff	_LORAWAN_TxDone$1971,??_LORAWAN_TxDone
 23660  00118C  C0CA  F0BE         	movff	_LORAWAN_TxDone$1971+1,??_LORAWAN_TxDone+1
 23661  001190  C0CB  F0BF         	movff	_LORAWAN_TxDone$1971+2,??_LORAWAN_TxDone+2
 23662  001194  C0CC  F0C0         	movff	_LORAWAN_TxDone$1971+3,??_LORAWAN_TxDone+3
 23663  001198  0100               	movlb	0	; () banked
 23664  00119A  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 23665  00119C  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23666  00119E  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23667  0011A0  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23668  0011A2  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 23669  0011A4  0E00               	movlw	0
 23670  0011A6  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23671  0011A8  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23672  0011AA  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23673  0011AC  0102               	movlb	2	; () banked
 23674  0011AE  51C8               	movf	(_loRa+200)& (0+255),w,b
 23675  0011B0  0100               	movlb	0	; () banked
 23676  0011B2  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23677  0011B4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23678  0011B6  0102               	movlb	2	; () banked
 23679  0011B8  51C9               	movf	(_loRa+201)& (0+255),w,b
 23680  0011BA  0100               	movlb	0	; () banked
 23681  0011BC  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23682  0011BE  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23683  0011C0  0102               	movlb	2	; () banked
 23684  0011C2  51CA               	movf	(_loRa+202)& (0+255),w,b
 23685  0011C4  0100               	movlb	0	; () banked
 23686  0011C6  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23687  0011C8  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23688  0011CA  0102               	movlb	2	; () banked
 23689  0011CC  51CB               	movf	(_loRa+203)& (0+255),w,b
 23690  0011CE  0100               	movlb	0	; () banked
 23691  0011D0  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23692  0011D2  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23693  0011D4                     l1077:
 23694                           
 23695                           ;lorawan_eu.c: 409: }
 23696                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 23697                           
 23698                           ; BSR set to: 0
 23699  0011D4  0E00               	movlw	0
 23700  0011D6  0100               	movlb	0	; () banked
 23701  0011D8  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 23702  0011DA                     l15415:
 23703                           
 23704                           ; BSR set to: 0
 23705  0011DA  0E0F               	movlw	15
 23706  0011DC  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 23707  0011DE  D001               	goto	l1082
 23708  0011E0  D0D4               	goto	u18820
 23709  0011E2                     l1082:
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;lorawan_eu.c: 412: {
 23713                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 23714                           
 23715                           ; BSR set to: 0
 23716  0011E2  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23717  0011E4  0D0E               	mullw	14
 23718  0011E6  0E04               	movlw	4
 23719  0011E8  26F3               	addwf	prodl,f,c
 23720  0011EA  0E00               	movlw	0
 23721  0011EC  22F4               	addwfc	prodh,f,c
 23722  0011EE  0E00               	movlw	low _Channels
 23723  0011F0  24F3               	addwf	prodl,w,c
 23724  0011F2  6ED9               	movwf	fsr2l,c
 23725  0011F4  0E04               	movlw	high _Channels
 23726  0011F6  20F4               	addwfc	prodh,w,c
 23727  0011F8  6EDA               	movwf	fsr2h,c
 23728  0011FA  04DE               	decf	postinc2,w,c
 23729  0011FC  A4D8               	btfss	status,2,c
 23730  0011FE  D0C3               	goto	l1088
 23731                           
 23732                           ; BSR set to: 0
 23733  001200  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23734  001202  0D0E               	mullw	14
 23735  001204  0E08               	movlw	8
 23736  001206  26F3               	addwf	prodl,f,c
 23737  001208  0E00               	movlw	0
 23738  00120A  22F4               	addwfc	prodh,f,c
 23739  00120C  0E00               	movlw	low _Channels
 23740  00120E  24F3               	addwf	prodl,w,c
 23741  001210  6ED9               	movwf	fsr2l,c
 23742  001212  0E04               	movlw	high _Channels
 23743  001214  20F4               	addwfc	prodh,w,c
 23744  001216  6EDA               	movwf	fsr2h,c
 23745  001218  50DE               	movf	postinc2,w,c
 23746  00121A  10DE               	iorwf	postinc2,w,c
 23747  00121C  10DE               	iorwf	postinc2,w,c
 23748  00121E  10DE               	iorwf	postinc2,w,c
 23749  001220  B4D8               	btfsc	status,2,c
 23750  001222  D0B1               	goto	l1088
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;lorawan_eu.c: 414: {
 23754                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 23755  001224  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23756  001226  0102               	movlb	2	; () banked
 23757  001228  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 23758  00122A  B4D8               	btfsc	status,2,c
 23759  00122C  D06D               	goto	l1087
 23760                           
 23761                           ; BSR set to: 2
 23762                           ;lorawan_eu.c: 416: {
 23763                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 23764  00122E  0100               	movlb	0	; () banked
 23765  001230  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23766  001232  0D0E               	mullw	14
 23767  001234  0E08               	movlw	8
 23768  001236  26F3               	addwf	prodl,f,c
 23769  001238  0E00               	movlw	0
 23770  00123A  22F4               	addwfc	prodh,f,c
 23771  00123C  0E00               	movlw	low _Channels
 23772  00123E  24F3               	addwf	prodl,w,c
 23773  001240  6ED9               	movwf	fsr2l,c
 23774  001242  0E04               	movlw	high _Channels
 23775  001244  20F4               	addwfc	prodh,w,c
 23776  001246  6EDA               	movwf	fsr2h,c
 23777  001248  50DE               	movf	postinc2,w,c
 23778  00124A  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 23779  00124C  50DE               	movf	postinc2,w,c
 23780  00124E  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 23781  001250  50DE               	movf	postinc2,w,c
 23782  001252  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 23783  001254  50DE               	movf	postinc2,w,c
 23784  001256  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 23785  001258  B0D8               	btfsc	status,0,c
 23786  00125A  D046               	goto	l1086
 23787                           
 23788                           ; BSR set to: 0
 23789                           ;lorawan_eu.c: 418: {
 23790                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 23791  00125C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23792  00125E  0D0E               	mullw	14
 23793  001260  0E08               	movlw	8
 23794  001262  26F3               	addwf	prodl,f,c
 23795  001264  0E00               	movlw	0
 23796  001266  22F4               	addwfc	prodh,f,c
 23797  001268  0E00               	movlw	low _Channels
 23798  00126A  24F3               	addwf	prodl,w,c
 23799  00126C  6ED9               	movwf	fsr2l,c
 23800  00126E  0E04               	movlw	high _Channels
 23801  001270  20F4               	addwfc	prodh,w,c
 23802  001272  6EDA               	movwf	fsr2h,c
 23803  001274  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 23804  001278  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 23805  00127C  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 23806  001280  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 23807  001284  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 23808  001288  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 23809  00128C  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 23810  001290  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 23811  001294  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23812  001296  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23813  001298  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23814  00129A  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23815  00129C  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23816  00129E  0E00               	movlw	0
 23817  0012A0  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23818  0012A2  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23819  0012A4  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23820  0012A6  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 23821  0012A8  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23822  0012AA  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 23823  0012AC  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23824  0012AE  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23825  0012B0  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 23826  0012B2  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23827  0012B4  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 23828  0012B6  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 23829  0012B8  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23830  0012BA  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 23831  0012BC  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 23832  0012BE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23833  0012C0  0D0E               	mullw	14
 23834  0012C2  0E08               	movlw	8
 23835  0012C4  26F3               	addwf	prodl,f,c
 23836  0012C6  0E00               	movlw	0
 23837  0012C8  22F4               	addwfc	prodh,f,c
 23838  0012CA  0E00               	movlw	low _Channels
 23839  0012CC  24F3               	addwf	prodl,w,c
 23840  0012CE  6ED9               	movwf	fsr2l,c
 23841  0012D0  0E04               	movlw	high _Channels
 23842  0012D2  20F4               	addwfc	prodh,w,c
 23843  0012D4  6EDA               	movwf	fsr2h,c
 23844  0012D6  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 23845  0012DA  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 23846  0012DE  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 23847  0012E2  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 23848                           
 23849                           ;lorawan_eu.c: 420: }
 23850  0012E6  D010               	goto	l1087
 23851  0012E8                     l1086:
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;lorawan_eu.c: 421: else
 23855                           ;lorawan_eu.c: 422: {
 23856                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 23857                           
 23858                           ; BSR set to: 0
 23859  0012E8  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23860  0012EA  0D0E               	mullw	14
 23861  0012EC  0E08               	movlw	8
 23862  0012EE  26F3               	addwf	prodl,f,c
 23863  0012F0  0E00               	movlw	0
 23864  0012F2  22F4               	addwfc	prodh,f,c
 23865  0012F4  0E00               	movlw	low _Channels
 23866  0012F6  24F3               	addwf	prodl,w,c
 23867  0012F8  6ED9               	movwf	fsr2l,c
 23868  0012FA  0E04               	movlw	high _Channels
 23869  0012FC  20F4               	addwfc	prodh,w,c
 23870  0012FE  6EDA               	movwf	fsr2h,c
 23871  001300  6ADE               	clrf	postinc2,c
 23872  001302  6ADE               	clrf	postinc2,c
 23873  001304  6ADE               	clrf	postinc2,c
 23874  001306  6ADD               	clrf	postdec2,c
 23875  001308                     l1087:
 23876                           
 23877                           ;lorawan_eu.c: 424: }
 23878                           ;lorawan_eu.c: 425: }
 23879                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 23880                           
 23881                           ; BSR set to: 0
 23882  001308  0100               	movlb	0	; () banked
 23883  00130A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23884  00130C  0D0E               	mullw	14
 23885  00130E  0E08               	movlw	8
 23886  001310  26F3               	addwf	prodl,f,c
 23887  001312  0E00               	movlw	0
 23888  001314  22F4               	addwfc	prodh,f,c
 23889  001316  0E00               	movlw	low _Channels
 23890  001318  24F3               	addwf	prodl,w,c
 23891  00131A  6ED9               	movwf	fsr2l,c
 23892  00131C  0E04               	movlw	high _Channels
 23893  00131E  20F4               	addwfc	prodh,w,c
 23894  001320  6EDA               	movwf	fsr2h,c
 23895  001322  50DE               	movf	postinc2,w,c
 23896  001324  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 23897  001326  50DE               	movf	postinc2,w,c
 23898  001328  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23899  00132A  50DE               	movf	postinc2,w,c
 23900  00132C  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23901  00132E  50DE               	movf	postinc2,w,c
 23902  001330  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23903  001332  A0D8               	btfss	status,0,c
 23904  001334  D028               	goto	l1088
 23905                           
 23906                           ; BSR set to: 0
 23907  001336  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23908  001338  0D0E               	mullw	14
 23909  00133A  0E08               	movlw	8
 23910  00133C  26F3               	addwf	prodl,f,c
 23911  00133E  0E00               	movlw	0
 23912  001340  22F4               	addwfc	prodh,f,c
 23913  001342  0E00               	movlw	low _Channels
 23914  001344  24F3               	addwf	prodl,w,c
 23915  001346  6ED9               	movwf	fsr2l,c
 23916  001348  0E04               	movlw	high _Channels
 23917  00134A  20F4               	addwfc	prodh,w,c
 23918  00134C  6EDA               	movwf	fsr2h,c
 23919  00134E  50DE               	movf	postinc2,w,c
 23920  001350  10DE               	iorwf	postinc2,w,c
 23921  001352  10DE               	iorwf	postinc2,w,c
 23922  001354  10DE               	iorwf	postinc2,w,c
 23923  001356  B4D8               	btfsc	status,2,c
 23924  001358  D016               	goto	l1088
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;lorawan_eu.c: 427: {
 23928                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 23929  00135A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23930  00135C  0D0E               	mullw	14
 23931  00135E  0E08               	movlw	8
 23932  001360  26F3               	addwf	prodl,f,c
 23933  001362  0E00               	movlw	0
 23934  001364  22F4               	addwfc	prodh,f,c
 23935  001366  0E00               	movlw	low _Channels
 23936  001368  24F3               	addwf	prodl,w,c
 23937  00136A  6ED9               	movwf	fsr2l,c
 23938  00136C  0E04               	movlw	high _Channels
 23939  00136E  20F4               	addwfc	prodh,w,c
 23940  001370  6EDA               	movwf	fsr2h,c
 23941  001372  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 23942  001376  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 23943  00137A  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 23944  00137E  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 23945                           
 23946                           ; BSR set to: 0
 23947                           ;lorawan_eu.c: 429: found = 1;
 23948  001382  0E01               	movlw	1
 23949  001384  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 23950  001386                     l1088:
 23951                           
 23952                           ; BSR set to: 0
 23953                           
 23954                           ; BSR set to: 0
 23955                           
 23956                           ; BSR set to: 0
 23957  001386  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 23958  001388  D728               	goto	l15415
 23959  00138A                     u18820:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;lorawan_eu.c: 430: }
 23963                           ;lorawan_eu.c: 431: }
 23964                           ;lorawan_eu.c: 432: }
 23965                           ;lorawan_eu.c: 433: if (found == 1)
 23966                           
 23967                           ; BSR set to: 0
 23968  00138A  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 23969  00138C  A4D8               	btfss	status,2,c
 23970  00138E  D067               	goto	l1089
 23971                           
 23972                           ; BSR set to: 0
 23973                           ;lorawan_eu.c: 434: {
 23974                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 23975  001390  C0DE  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 23976  001394  C0DF  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 23977  001398  C0E0  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 23978  00139C  C0E1  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 23979                           
 23980                           ; BSR set to: 0
 23981                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 23982  0013A0  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23983  0013A2  E107               	bnz	u18840
 23984  0013A4  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 23985  0013A6  0EFF               	movlw	255
 23986  0013A8  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23987  0013AA  0E0F               	movlw	15
 23988  0013AC  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23989  0013AE  A0D8               	btfss	status,0,c
 23990  0013B0  D01C               	goto	l1091
 23991  0013B2                     u18840:
 23992                           
 23993                           ; BSR set to: 0
 23994  0013B2  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 23995  0013B6  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 23996  0013BA  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 23997  0013BE  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 23998  0013C2  0E7D               	movlw	125
 23999  0013C4  6F64               	movwf	___lldiv@divisor& (0+255),b
 24000  0013C6  0E00               	movlw	0
 24001  0013C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24002  0013CA  0E00               	movlw	0
 24003  0013CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24004  0013CE  0E00               	movlw	0
 24005  0013D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24006  0013D2  EC7A  F039         	call	___lldiv	;wreg free
 24007  0013D6  0E0C               	movlw	12
 24008  0013D8                     u18855:
 24009  0013D8  90D8               	bcf	status,0,c
 24010  0013DA  0100               	movlb	0	; () banked
 24011  0013DC  3760               	rlcf	?___lldiv& (0+255),f,b
 24012  0013DE  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 24013  0013E0  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 24014  0013E2  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 24015  0013E4  2EE8               	decfsz	wreg,f,c
 24016  0013E6  D7F8               	goto	u18855
 24017  0013E8  D022               	goto	L17
 24018  0013EA                     l1091:
 24019                           
 24020                           ; BSR set to: 0
 24021                           
 24022                           ; BSR set to: 0
 24023  0013EA  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 24024  0013EE  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 24025  0013F2  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 24026  0013F6  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 24027  0013FA  0E0C               	movlw	12
 24028  0013FC                     u18865:
 24029  0013FC  90D8               	bcf	status,0,c
 24030  0013FE  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 24031  001400  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24032  001402  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24033  001404  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24034  001406  2EE8               	decfsz	wreg,f,c
 24035  001408  D7F9               	goto	u18865
 24036  00140A  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 24037  00140E  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 24038  001412  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 24039  001416  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 24040  00141A  0E7D               	movlw	125
 24041  00141C  6F64               	movwf	___lldiv@divisor& (0+255),b
 24042  00141E  0E00               	movlw	0
 24043  001420  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 24044  001422  0E00               	movlw	0
 24045  001424  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 24046  001426  0E00               	movlw	0
 24047  001428  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 24048  00142A  EC7A  F039         	call	___lldiv	;wreg free
 24049  00142E                     L17:
 24050  00142E  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$1972
 24051  001432  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$1972+1
 24052  001436  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$1972+2
 24053  00143A  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$1972+3
 24054  00143E  C0CD  F06D         	movff	_LORAWAN_TxDone$1972,SwTimerSetTimeout@timeout
 24055  001442  C0CE  F06E         	movff	_LORAWAN_TxDone$1972+1,SwTimerSetTimeout@timeout+1
 24056  001446  C0CF  F06F         	movff	_LORAWAN_TxDone$1972+2,SwTimerSetTimeout@timeout+2
 24057  00144A  C0D0  F070         	movff	_LORAWAN_TxDone$1972+3,SwTimerSetTimeout@timeout+3
 24058  00144E  0102               	movlb	2	; () banked
 24059  001450  51E9               	movf	(_loRa+233)& (0+255),w,b
 24060  001452  ECC6  F040         	call	_SwTimerSetTimeout
 24061                           
 24062                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 24063  001456  0102               	movlb	2	; () banked
 24064  001458  51E9               	movf	(_loRa+233)& (0+255),w,b
 24065  00145A  EC01  F037         	call	_SwTimerStart
 24066  00145E                     l1089:
 24067                           
 24068                           ;lorawan_eu.c: 438: }
 24069                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 24070  00145E  0E02               	movlw	2
 24071  001460  0102               	movlb	2	; () banked
 24072  001462  1912               	xorwf	(_loRa+18)& (0+255),w,b
 24073  001464  A4D8               	btfss	status,2,c
 24074  001466  0012               	return	
 24075                           
 24076                           ; BSR set to: 2
 24077                           ;lorawan_eu.c: 440: {
 24078                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 24079  001468  5102               	movf	(_loRa+2)& (0+255),w,b
 24080  00146A  0BF0               	andlw	-16
 24081  00146C  0908               	iorlw	8
 24082  00146E  6F02               	movwf	(_loRa+2)& (0+255),b
 24083                           
 24084                           ; BSR set to: 2
 24085                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 24086  001470  EC3C  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 24087                           
 24088                           ;lorawan_eu.c: 443: }
 24089                           ;lorawan_eu.c: 444: }
 24090  001474  0012               	return	
 24091  001476                     l1073:
 24092                           
 24093                           ;lorawan_eu.c: 445: else
 24094                           ;lorawan_eu.c: 446: {
 24095                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 24096  001476  EC48  F046         	call	_RADIO_GetStatus	;wreg free
 24097  00147A  0100               	movlb	0	; () banked
 24098  00147C  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 24099  00147E  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 24100  001480  D014               	goto	l1096
 24101                           
 24102                           ; BSR set to: 0
 24103                           ;lorawan_eu.c: 448: {
 24104                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 24105  001482  0E00               	movlw	0
 24106  001484  6F60               	movwf	RxData@pData& (0+255),b
 24107  001486  0E00               	movlw	0
 24108  001488  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24109  00148A  0E00               	movlw	0
 24110  00148C  6F62               	movwf	RxData@dataLength& (0+255),b
 24111  00148E  0E02               	movlw	2
 24112  001490  6F63               	movwf	RxData@status& (0+255),b
 24113  001492  D801               	call	u18898
 24114  001494  0012               	return	
 24115  001496                     u18898:
 24116  001496  0005               	push	
 24117  001498  6EFA               	movwf	pclath,c
 24118  00149A  0101               	movlb	1	; () banked
 24119  00149C  5169               	movf	_rxPayload& (0+255),w,b
 24120  00149E  6EFD               	movwf	tosl,c
 24121  0014A0  516A               	movf	(_rxPayload+1)& (0+255),w,b
 24122  0014A2  6EFE               	movwf	tosh,c
 24123  0014A4  6AFF               	clrf	tosu,c
 24124  0014A6  50FA               	movf	pclath,w,c
 24125  0014A8  0012               	return		;indir
 24126  0014AA                     l1096:
 24127                           
 24128                           ;lorawan_eu.c: 452: else
 24129                           ;lorawan_eu.c: 453: {
 24130                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 24131  0014AA  0101               	movlb	1	; () banked
 24132  0014AC  5169               	movf	_rxPayload& (0+255),w,b
 24133  0014AE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 24134  0014B0  B4D8               	btfsc	status,2,c
 24135  0014B2  0012               	return	
 24136                           
 24137                           ; BSR set to: 1
 24138                           ;lorawan_eu.c: 456: {
 24139                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 24140  0014B4  0E00               	movlw	0
 24141  0014B6  0100               	movlb	0	; () banked
 24142  0014B8  6F60               	movwf	RxData@pData& (0+255),b
 24143  0014BA  0E00               	movlw	0
 24144  0014BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24145  0014BE  0E00               	movlw	0
 24146  0014C0  6F62               	movwf	RxData@dataLength& (0+255),b
 24147  0014C2  0E03               	movlw	3
 24148  0014C4  6F63               	movwf	RxData@status& (0+255),b
 24149  0014C6  D801               	call	u18918
 24150  0014C8  0012               	return	
 24151  0014CA                     u18918:
 24152  0014CA  0005               	push	
 24153  0014CC  6EFA               	movwf	pclath,c
 24154  0014CE  0101               	movlb	1	; () banked
 24155  0014D0  5169               	movf	_rxPayload& (0+255),w,b
 24156  0014D2  6EFD               	movwf	tosl,c
 24157  0014D4  516A               	movf	(_rxPayload+1)& (0+255),w,b
 24158  0014D6  6EFE               	movwf	tosh,c
 24159  0014D8  6AFF               	clrf	tosu,c
 24160  0014DA  50FA               	movf	pclath,w,c
 24161  0014DC  0012               	return		;indir
 24162  0014DE                     __end_of_LORAWAN_TxDone:
 24163                           	opt stack 0
 24164                           tosu	equ	0xFFF
 24165                           tosh	equ	0xFFE
 24166                           tosl	equ	0xFFD
 24167                           pclath	equ	0xFFA
 24168                           tblptru	equ	0xFF8
 24169                           tblptrh	equ	0xFF7
 24170                           tblptrl	equ	0xFF6
 24171                           tablat	equ	0xFF5
 24172                           prodh	equ	0xFF4
 24173                           prodl	equ	0xFF3
 24174                           intcon	equ	0xFF2
 24175                           intcon2	equ	0xFF1
 24176                           intcon3	equ	0xFF0
 24177                           indf0	equ	0xFEF
 24178                           postinc0	equ	0xFEE
 24179                           fsr0h	equ	0xFEA
 24180                           fsr0l	equ	0xFE9
 24181                           wreg	equ	0xFE8
 24182                           postinc1	equ	0xFE6
 24183                           postdec1	equ	0xFE5
 24184                           plusw1	equ	0xFE3
 24185                           fsr1h	equ	0xFE2
 24186                           fsr1l	equ	0xFE1
 24187                           indf2	equ	0xFDF
 24188                           postinc2	equ	0xFDE
 24189                           postdec2	equ	0xFDD
 24190                           plusw2	equ	0xFDB
 24191                           fsr2h	equ	0xFDA
 24192                           fsr2l	equ	0xFD9
 24193                           status	equ	0xFD8
 24194                           
 24195 ;; *************** function _SwTimerReadValue *****************
 24196 ;; Defined at:
 24197 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 24198 ;; Parameters:    Size  Location     Type
 24199 ;;  timerId         1    wreg     unsigned char 
 24200 ;; Auto vars:     Size  Location     Type
 24201 ;;  timerId         1   57[BANK0 ] unsigned char 
 24202 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  4   49[BANK0 ] unsigned long 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24213 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24215 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24216 ;;Total ram usage:        9 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:   10
 24219 ;; This function calls:
 24220 ;;		_SwTimersInterrupt
 24221 ;; This function is called by:
 24222 ;;		_RADIO_TxDone
 24223 ;;		_RADIO_FSKPacketSent
 24224 ;;		_LORAWAN_TxDone
 24225 ;;		_LORAWAN_Pause
 24226 ;; This function uses a non-reentrant model
 24227 ;;
 24228                           
 24229                           	psect	text107
 24230  008296                     __ptext107:
 24231                           	opt stack 0
 24232  008296                     _SwTimerReadValue:
 24233                           	opt stack 16
 24234                           
 24235                           ;incstack = 0
 24236                           ;SwTimerReadValue@timerId stored from wreg
 24237  008296  0100               	movlb	0	; () banked
 24238  008298  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 24239                           
 24240                           ;sw_timer.c: 195: uint32_t ticksCount;
 24241                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 24242  00829A  9EF2               	bcf	intcon,7,c	;volatile
 24243                           
 24244                           ;sw_timer.c: 200: SwTimersInterrupt();
 24245  00829C  ECE6  F02D         	call	_SwTimersInterrupt	;wreg free
 24246                           
 24247                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 24248  0082A0  0100               	movlb	0	; () banked
 24249  0082A2  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 24250  0082A4  0D08               	mullw	8
 24251  0082A6  0E00               	movlw	low _swTimers
 24252  0082A8  24F3               	addwf	prodl,w,c
 24253  0082AA  6ED9               	movwf	fsr2l,c
 24254  0082AC  0E03               	movlw	high _swTimers
 24255  0082AE  20F4               	addwfc	prodh,w,c
 24256  0082B0  6EDA               	movwf	fsr2h,c
 24257  0082B2  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 24258  0082B6  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 24259  0082BA  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 24260  0082BE  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 24264  0082C2  8EF2               	bsf	intcon,7,c	;volatile
 24265                           
 24266                           ; BSR set to: 0
 24267                           ;sw_timer.c: 204: return ticksCount;
 24268  0082C4  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 24269  0082C8  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 24270  0082CC  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 24271  0082D0  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 24272  0082D4  0012               	return	
 24273  0082D6                     __end_of_SwTimerReadValue:
 24274                           	opt stack 0
 24275                           tosu	equ	0xFFF
 24276                           tosh	equ	0xFFE
 24277                           tosl	equ	0xFFD
 24278                           pclath	equ	0xFFA
 24279                           tblptru	equ	0xFF8
 24280                           tblptrh	equ	0xFF7
 24281                           tblptrl	equ	0xFF6
 24282                           tablat	equ	0xFF5
 24283                           prodh	equ	0xFF4
 24284                           prodl	equ	0xFF3
 24285                           intcon	equ	0xFF2
 24286                           intcon2	equ	0xFF1
 24287                           intcon3	equ	0xFF0
 24288                           indf0	equ	0xFEF
 24289                           postinc0	equ	0xFEE
 24290                           fsr0h	equ	0xFEA
 24291                           fsr0l	equ	0xFE9
 24292                           wreg	equ	0xFE8
 24293                           postinc1	equ	0xFE6
 24294                           postdec1	equ	0xFE5
 24295                           plusw1	equ	0xFE3
 24296                           fsr1h	equ	0xFE2
 24297                           fsr1l	equ	0xFE1
 24298                           indf2	equ	0xFDF
 24299                           postinc2	equ	0xFDE
 24300                           postdec2	equ	0xFDD
 24301                           plusw2	equ	0xFDB
 24302                           fsr2h	equ	0xFDA
 24303                           fsr2l	equ	0xFD9
 24304                           status	equ	0xFD8
 24305                           
 24306 ;; *************** function _SwTimerIsRunning *****************
 24307 ;; Defined at:
 24308 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 24309 ;; Parameters:    Size  Location     Type
 24310 ;;  timerId         1    wreg     unsigned char 
 24311 ;; Auto vars:     Size  Location     Type
 24312 ;;  timerId         1    0[BANK0 ] unsigned char 
 24313 ;;  isRunning       1    1[BANK0 ] unsigned char 
 24314 ;; Return value:  Size  Location     Type
 24315 ;;                  1    wreg      unsigned char 
 24316 ;; Registers used:
 24317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24318 ;; Tracked objects:
 24319 ;;		On entry : 0/0
 24320 ;;		On exit  : 0/0
 24321 ;;		Unchanged: 0/0
 24322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24327 ;;Total ram usage:        2 bytes
 24328 ;; Hardware stack levels used:    1
 24329 ;; Hardware stack levels required when called:    7
 24330 ;; This function calls:
 24331 ;;		Nothing
 24332 ;; This function is called by:
 24333 ;;		_LORAWAN_TxDone
 24334 ;; This function uses a non-reentrant model
 24335 ;;
 24336                           
 24337                           	psect	text108
 24338  0086A0                     __ptext108:
 24339                           	opt stack 0
 24340  0086A0                     _SwTimerIsRunning:
 24341                           	opt stack 19
 24342                           
 24343                           ; BSR set to: 0
 24344                           ;incstack = 0
 24345                           ;SwTimerIsRunning@timerId stored from wreg
 24346  0086A0  0100               	movlb	0	; () banked
 24347  0086A2  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 24348                           
 24349                           ;sw_timer.c: 209: uint8_t isRunning;
 24350                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 24351  0086A4  9EF2               	bcf	intcon,7,c	;volatile
 24352                           
 24353                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 24354  0086A6  0100               	movlb	0	; () banked
 24355  0086A8  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 24356  0086AA  0D08               	mullw	8
 24357  0086AC  0E04               	movlw	4
 24358  0086AE  26F3               	addwf	prodl,f,c
 24359  0086B0  0E00               	movlw	0
 24360  0086B2  22F4               	addwfc	prodh,f,c
 24361  0086B4  0E00               	movlw	low _swTimers
 24362  0086B6  24F3               	addwf	prodl,w,c
 24363  0086B8  6ED9               	movwf	fsr2l,c
 24364  0086BA  0E03               	movlw	high _swTimers
 24365  0086BC  20F4               	addwfc	prodh,w,c
 24366  0086BE  6EDA               	movwf	fsr2h,c
 24367  0086C0  50DF               	movf	indf2,w,c
 24368  0086C2  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 24369                           
 24370                           ; BSR set to: 0
 24371                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 24372  0086C4  8EF2               	bsf	intcon,7,c	;volatile
 24373                           
 24374                           ; BSR set to: 0
 24375                           ;sw_timer.c: 215: return isRunning;
 24376  0086C6  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 24377  0086C8  0012               	return	
 24378  0086CA                     __end_of_SwTimerIsRunning:
 24379                           	opt stack 0
 24380                           tosu	equ	0xFFF
 24381                           tosh	equ	0xFFE
 24382                           tosl	equ	0xFFD
 24383                           pclath	equ	0xFFA
 24384                           tblptru	equ	0xFF8
 24385                           tblptrh	equ	0xFF7
 24386                           tblptrl	equ	0xFF6
 24387                           tablat	equ	0xFF5
 24388                           prodh	equ	0xFF4
 24389                           prodl	equ	0xFF3
 24390                           intcon	equ	0xFF2
 24391                           intcon2	equ	0xFF1
 24392                           intcon3	equ	0xFF0
 24393                           indf0	equ	0xFEF
 24394                           postinc0	equ	0xFEE
 24395                           fsr0h	equ	0xFEA
 24396                           fsr0l	equ	0xFE9
 24397                           wreg	equ	0xFE8
 24398                           postinc1	equ	0xFE6
 24399                           postdec1	equ	0xFE5
 24400                           plusw1	equ	0xFE3
 24401                           fsr1h	equ	0xFE2
 24402                           fsr1l	equ	0xFE1
 24403                           indf2	equ	0xFDF
 24404                           postinc2	equ	0xFDE
 24405                           postdec2	equ	0xFDD
 24406                           plusw2	equ	0xFDB
 24407                           fsr2h	equ	0xFDA
 24408                           fsr2l	equ	0xFD9
 24409                           status	equ	0xFD8
 24410                           
 24411 ;; *************** function _RADIO_GetStatus *****************
 24412 ;; Defined at:
 24413 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24414 ;; Parameters:    Size  Location     Type
 24415 ;;		None
 24416 ;; Auto vars:     Size  Location     Type
 24417 ;;		None
 24418 ;; Return value:  Size  Location     Type
 24419 ;;                  1    wreg      unsigned char 
 24420 ;; Registers used:
 24421 ;;		wreg, status,2
 24422 ;; Tracked objects:
 24423 ;;		On entry : 0/0
 24424 ;;		On exit  : 0/0
 24425 ;;		Unchanged: 0/0
 24426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24431 ;;Total ram usage:        0 bytes
 24432 ;; Hardware stack levels used:    1
 24433 ;; Hardware stack levels required when called:    7
 24434 ;; This function calls:
 24435 ;;		Nothing
 24436 ;; This function is called by:
 24437 ;;		_LORAWAN_TxDone
 24438 ;;		_LORAWAN_ReceiveWindow2Callback
 24439 ;;		_LORAWAN_RxDone
 24440 ;; This function uses a non-reentrant model
 24441 ;;
 24442                           
 24443                           	psect	text109
 24444  008C90                     __ptext109:
 24445                           	opt stack 0
 24446  008C90                     _RADIO_GetStatus:
 24447                           	opt stack 19
 24448                           
 24449                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;incstack = 0
 24453  008C90  0101               	movlb	1	; () banked
 24454  008C92  519E               	movf	(_RadioConfiguration+35)& (0+255),w,b
 24455  008C94  0012               	return	
 24456  008C96                     __end_of_RADIO_GetStatus:
 24457                           	opt stack 0
 24458                           tosu	equ	0xFFF
 24459                           tosh	equ	0xFFE
 24460                           tosl	equ	0xFFD
 24461                           pclath	equ	0xFFA
 24462                           tblptru	equ	0xFF8
 24463                           tblptrh	equ	0xFF7
 24464                           tblptrl	equ	0xFF6
 24465                           tablat	equ	0xFF5
 24466                           prodh	equ	0xFF4
 24467                           prodl	equ	0xFF3
 24468                           intcon	equ	0xFF2
 24469                           intcon2	equ	0xFF1
 24470                           intcon3	equ	0xFF0
 24471                           indf0	equ	0xFEF
 24472                           postinc0	equ	0xFEE
 24473                           fsr0h	equ	0xFEA
 24474                           fsr0l	equ	0xFE9
 24475                           wreg	equ	0xFE8
 24476                           postinc1	equ	0xFE6
 24477                           postdec1	equ	0xFE5
 24478                           plusw1	equ	0xFE3
 24479                           fsr1h	equ	0xFE2
 24480                           fsr1l	equ	0xFE1
 24481                           indf2	equ	0xFDF
 24482                           postinc2	equ	0xFDE
 24483                           postdec2	equ	0xFDD
 24484                           plusw2	equ	0xFDB
 24485                           fsr2h	equ	0xFDA
 24486                           fsr2l	equ	0xFD9
 24487                           status	equ	0xFD8
 24488                           
 24489 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 24490 ;; Defined at:
 24491 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24492 ;; Parameters:    Size  Location     Type
 24493 ;;		None
 24494 ;; Auto vars:     Size  Location     Type
 24495 ;;		None
 24496 ;; Return value:  Size  Location     Type
 24497 ;;                  1    wreg      void 
 24498 ;; Registers used:
 24499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24500 ;; Tracked objects:
 24501 ;;		On entry : 0/0
 24502 ;;		On exit  : 0/0
 24503 ;;		Unchanged: 0/0
 24504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24509 ;;Total ram usage:        0 bytes
 24510 ;; Hardware stack levels used:    1
 24511 ;; Hardware stack levels required when called:   13
 24512 ;; This function calls:
 24513 ;;		_ConfigureRadioRx
 24514 ;;		_RADIO_ReceiveStart
 24515 ;;		_RADIO_ReceiveStop
 24516 ;;		_RADIO_ReleaseData
 24517 ;;		_ResetParametersForConfirmedTransmission
 24518 ;;		_ResetParametersForUnconfirmedTransmission
 24519 ;;		_RxData
 24520 ;; This function is called by:
 24521 ;;		_LORAWAN_TxDone
 24522 ;;		_LORAWAN_ReceiveWindow2Callback
 24523 ;;		_LORAWAN_RxDone
 24524 ;;		_SetReceptionNotOkState
 24525 ;; This function uses a non-reentrant model
 24526 ;;
 24527                           
 24528                           	psect	text110
 24529  007478                     __ptext110:
 24530                           	opt stack 0
 24531  007478                     _LORAWAN_EnterContinuousReceive:
 24532                           	opt stack 13
 24533                           
 24534                           ;lorawan.c: 917: RADIO_ReceiveStop();
 24535                           
 24536                           ; BSR set to: 1
 24537                           ;incstack = 0
 24538  007478  EC6B  F044         	call	_RADIO_ReceiveStop	;wreg free
 24539                           
 24540                           ;lorawan.c: 918: RADIO_ReleaseData();
 24541  00747C  EC4B  F046         	call	_RADIO_ReleaseData	;wreg free
 24542                           
 24543                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 24544  007480  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 24545  007484  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 24546  007488  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 24547  00748C  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 24548  007490  0102               	movlb	2	; () banked
 24549  007492  511C               	movf	(_loRa+28)& (0+255),w,b
 24550  007494  EC65  F043         	call	_ConfigureRadioRx
 24551                           
 24552                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 24553  007498  0E00               	movlw	0
 24554  00749A  0100               	movlb	0	; () banked
 24555  00749C  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 24556  00749E  0E00               	movlw	0
 24557  0074A0  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 24558  0074A2  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
 24559  0074A6  0100               	movlb	0	; () banked
 24560  0074A8  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 24561  0074AA  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 24562  0074AC  B4D8               	btfsc	status,2,c
 24563  0074AE  0012               	return	
 24564                           
 24565                           ; BSR set to: 0
 24566                           ;lorawan.c: 923: {
 24567                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 24568  0074B0  EC94  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
 24569                           
 24570                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 24571  0074B4  EC6D  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 24572                           
 24573                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 24574  0074B8  0102               	movlb	2	; () banked
 24575  0074BA  9102               	bcf	(_loRa+2)& (0+255),0,b
 24576  0074BC  9302               	bcf	(_loRa+2)& (0+255),1,b
 24577  0074BE  9502               	bcf	(_loRa+2)& (0+255),2,b
 24578  0074C0  9702               	bcf	(_loRa+2)& (0+255),3,b
 24579                           
 24580                           ; BSR set to: 2
 24581                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 24582  0074C2  0101               	movlb	1	; () banked
 24583  0074C4  5169               	movf	_rxPayload& (0+255),w,b
 24584  0074C6  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 24585  0074C8  B4D8               	btfsc	status,2,c
 24586  0074CA  0012               	return	
 24587                           
 24588                           ; BSR set to: 1
 24589                           ;lorawan.c: 928: {
 24590                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 24591  0074CC  0E00               	movlw	0
 24592  0074CE  0100               	movlb	0	; () banked
 24593  0074D0  6F60               	movwf	RxData@pData& (0+255),b
 24594  0074D2  0E00               	movlw	0
 24595  0074D4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24596  0074D6  0E00               	movlw	0
 24597  0074D8  6F62               	movwf	RxData@dataLength& (0+255),b
 24598  0074DA  0E00               	movlw	0
 24599  0074DC  6F63               	movwf	RxData@status& (0+255),b
 24600  0074DE  D801               	call	u16548
 24601  0074E0  0012               	return	
 24602  0074E2                     u16548:
 24603  0074E2  0005               	push	
 24604  0074E4  6EFA               	movwf	pclath,c
 24605  0074E6  0101               	movlb	1	; () banked
 24606  0074E8  5169               	movf	_rxPayload& (0+255),w,b
 24607  0074EA  6EFD               	movwf	tosl,c
 24608  0074EC  516A               	movf	(_rxPayload+1)& (0+255),w,b
 24609  0074EE  6EFE               	movwf	tosh,c
 24610  0074F0  6AFF               	clrf	tosu,c
 24611  0074F2  50FA               	movf	pclath,w,c
 24612  0074F4  0012               	return		;indir
 24613  0074F6                     __end_of_LORAWAN_EnterContinuousReceive:
 24614                           	opt stack 0
 24615                           tosu	equ	0xFFF
 24616                           tosh	equ	0xFFE
 24617                           tosl	equ	0xFFD
 24618                           pclath	equ	0xFFA
 24619                           tblptru	equ	0xFF8
 24620                           tblptrh	equ	0xFF7
 24621                           tblptrl	equ	0xFF6
 24622                           tablat	equ	0xFF5
 24623                           prodh	equ	0xFF4
 24624                           prodl	equ	0xFF3
 24625                           intcon	equ	0xFF2
 24626                           intcon2	equ	0xFF1
 24627                           intcon3	equ	0xFF0
 24628                           indf0	equ	0xFEF
 24629                           postinc0	equ	0xFEE
 24630                           fsr0h	equ	0xFEA
 24631                           fsr0l	equ	0xFE9
 24632                           wreg	equ	0xFE8
 24633                           postinc1	equ	0xFE6
 24634                           postdec1	equ	0xFE5
 24635                           plusw1	equ	0xFE3
 24636                           fsr1h	equ	0xFE2
 24637                           fsr1l	equ	0xFE1
 24638                           indf2	equ	0xFDF
 24639                           postinc2	equ	0xFDE
 24640                           postdec2	equ	0xFDD
 24641                           plusw2	equ	0xFDB
 24642                           fsr2h	equ	0xFDA
 24643                           fsr2l	equ	0xFD9
 24644                           status	equ	0xFD8
 24645                           
 24646 ;; *************** function _RxData *****************
 24647 ;; Defined at:
 24648 ;;		line 62 in file "main.c"
 24649 ;; Parameters:    Size  Location     Type
 24650 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 24651 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 24652 ;;  dataLength      1    2[BANK0 ] unsigned char 
 24653 ;;  status          1    3[BANK0 ] enum E7303
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;		None
 24656 ;; Return value:  Size  Location     Type
 24657 ;;                  1    wreg      void 
 24658 ;; Registers used:
 24659 ;;		None
 24660 ;; Tracked objects:
 24661 ;;		On entry : 0/0
 24662 ;;		On exit  : 0/0
 24663 ;;		Unchanged: 0/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24668 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24669 ;;Total ram usage:        4 bytes
 24670 ;; Hardware stack levels used:    1
 24671 ;; Hardware stack levels required when called:    7
 24672 ;; This function calls:
 24673 ;;		Nothing
 24674 ;; This function is called by:
 24675 ;;		_main
 24676 ;;		_LORAWAN_EnterContinuousReceive
 24677 ;;		_LORAWAN_ReceiveWindow2Callback
 24678 ;;		_SetReceptionNotOkState
 24679 ;;		_LORAWAN_RxDone
 24680 ;;		_LORAWAN_RxTimeout
 24681 ;;		_LORAWAN_TxDone
 24682 ;;		_AckRetransmissionCallback
 24683 ;;		_UnconfirmedTransmissionCallback
 24684 ;; This function uses a non-reentrant model
 24685 ;;
 24686                           
 24687                           	psect	text111
 24688  008CCE                     __ptext111:
 24689                           	opt stack 0
 24690  008CCE                     _RxData:
 24691                           	opt stack 20
 24692                           
 24693                           ;incstack = 0
 24694  008CCE  0012               	return		;funcret
 24695  008CD0                     __end_of_RxData:
 24696                           	opt stack 0
 24697                           tosu	equ	0xFFF
 24698                           tosh	equ	0xFFE
 24699                           tosl	equ	0xFFD
 24700                           pclath	equ	0xFFA
 24701                           tblptru	equ	0xFF8
 24702                           tblptrh	equ	0xFF7
 24703                           tblptrl	equ	0xFF6
 24704                           tablat	equ	0xFF5
 24705                           prodh	equ	0xFF4
 24706                           prodl	equ	0xFF3
 24707                           intcon	equ	0xFF2
 24708                           intcon2	equ	0xFF1
 24709                           intcon3	equ	0xFF0
 24710                           indf0	equ	0xFEF
 24711                           postinc0	equ	0xFEE
 24712                           fsr0h	equ	0xFEA
 24713                           fsr0l	equ	0xFE9
 24714                           wreg	equ	0xFE8
 24715                           postinc1	equ	0xFE6
 24716                           postdec1	equ	0xFE5
 24717                           plusw1	equ	0xFE3
 24718                           fsr1h	equ	0xFE2
 24719                           fsr1l	equ	0xFE1
 24720                           indf2	equ	0xFDF
 24721                           postinc2	equ	0xFDE
 24722                           postdec2	equ	0xFDD
 24723                           plusw2	equ	0xFDB
 24724                           fsr2h	equ	0xFDA
 24725                           fsr2l	equ	0xFD9
 24726                           status	equ	0xFD8
 24727                           
 24728 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 24729 ;; Defined at:
 24730 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24731 ;; Parameters:    Size  Location     Type
 24732 ;;		None
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;		None
 24735 ;; Return value:  Size  Location     Type
 24736 ;;                  1    wreg      void 
 24737 ;; Registers used:
 24738 ;;		wreg, status,2
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/0
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24748 ;;Total ram usage:        0 bytes
 24749 ;; Hardware stack levels used:    1
 24750 ;; Hardware stack levels required when called:    7
 24751 ;; This function calls:
 24752 ;;		Nothing
 24753 ;; This function is called by:
 24754 ;;		_LORAWAN_RxTimeout
 24755 ;;		_LORAWAN_ReceiveWindow2Callback
 24756 ;;		_LORAWAN_EnterContinuousReceive
 24757 ;;		_UnconfirmedTransmissionCallback
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text112
 24762  008ADA                     __ptext112:
 24763                           	opt stack 0
 24764  008ADA                     _ResetParametersForUnconfirmedTransmission:
 24765                           	opt stack 20
 24766                           
 24767                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 24768                           
 24769                           ;incstack = 0
 24770  008ADA  0102               	movlb	2	; () banked
 24771  008ADC  9102               	bcf	(_loRa+2)& (0+255),0,b
 24772  008ADE  9302               	bcf	(_loRa+2)& (0+255),1,b
 24773  008AE0  9502               	bcf	(_loRa+2)& (0+255),2,b
 24774  008AE2  9702               	bcf	(_loRa+2)& (0+255),3,b
 24775                           
 24776                           ; BSR set to: 2
 24777                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 24778  008AE4  0E01               	movlw	1
 24779  008AE6  6FD8               	movwf	(_loRa+216)& (0+255),b
 24780                           
 24781                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 24782  008AE8  0E00               	movlw	0
 24783  008AEA  6FA7               	movwf	(_loRa+167)& (0+255),b
 24784                           
 24785                           ; BSR set to: 2
 24786  008AEC  0012               	return		;funcret
 24787  008AEE                     __end_of_ResetParametersForUnconfirmedTransmission:
 24788                           	opt stack 0
 24789                           tosu	equ	0xFFF
 24790                           tosh	equ	0xFFE
 24791                           tosl	equ	0xFFD
 24792                           pclath	equ	0xFFA
 24793                           tblptru	equ	0xFF8
 24794                           tblptrh	equ	0xFF7
 24795                           tblptrl	equ	0xFF6
 24796                           tablat	equ	0xFF5
 24797                           prodh	equ	0xFF4
 24798                           prodl	equ	0xFF3
 24799                           intcon	equ	0xFF2
 24800                           intcon2	equ	0xFF1
 24801                           intcon3	equ	0xFF0
 24802                           indf0	equ	0xFEF
 24803                           postinc0	equ	0xFEE
 24804                           fsr0h	equ	0xFEA
 24805                           fsr0l	equ	0xFE9
 24806                           wreg	equ	0xFE8
 24807                           postinc1	equ	0xFE6
 24808                           postdec1	equ	0xFE5
 24809                           plusw1	equ	0xFE3
 24810                           fsr1h	equ	0xFE2
 24811                           fsr1l	equ	0xFE1
 24812                           indf2	equ	0xFDF
 24813                           postinc2	equ	0xFDE
 24814                           postdec2	equ	0xFDD
 24815                           plusw2	equ	0xFDB
 24816                           fsr2h	equ	0xFDA
 24817                           fsr2l	equ	0xFD9
 24818                           status	equ	0xFD8
 24819                           
 24820 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 24821 ;; Defined at:
 24822 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24823 ;; Parameters:    Size  Location     Type
 24824 ;;		None
 24825 ;; Auto vars:     Size  Location     Type
 24826 ;;		None
 24827 ;; Return value:  Size  Location     Type
 24828 ;;                  1    wreg      void 
 24829 ;; Registers used:
 24830 ;;		wreg, status,2
 24831 ;; Tracked objects:
 24832 ;;		On entry : 0/0
 24833 ;;		On exit  : 0/0
 24834 ;;		Unchanged: 0/0
 24835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24840 ;;Total ram usage:        0 bytes
 24841 ;; Hardware stack levels used:    1
 24842 ;; Hardware stack levels required when called:    7
 24843 ;; This function calls:
 24844 ;;		Nothing
 24845 ;; This function is called by:
 24846 ;;		_LORAWAN_RxTimeout
 24847 ;;		_LORAWAN_ReceiveWindow2Callback
 24848 ;;		_LORAWAN_EnterContinuousReceive
 24849 ;;		_AckRetransmissionCallback
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853                           	psect	text113
 24854  008B28                     __ptext113:
 24855                           	opt stack 0
 24856  008B28                     _ResetParametersForConfirmedTransmission:
 24857                           	opt stack 18
 24858                           
 24859                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 24860                           
 24861                           ; BSR set to: 2
 24862                           ;incstack = 0
 24863  008B28  0102               	movlb	2	; () banked
 24864  008B2A  9102               	bcf	(_loRa+2)& (0+255),0,b
 24865  008B2C  9302               	bcf	(_loRa+2)& (0+255),1,b
 24866  008B2E  9502               	bcf	(_loRa+2)& (0+255),2,b
 24867  008B30  9702               	bcf	(_loRa+2)& (0+255),3,b
 24868                           
 24869                           ; BSR set to: 2
 24870                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 24871  008B32  0E01               	movlw	1
 24872  008B34  6FD9               	movwf	(_loRa+217)& (0+255),b
 24873                           
 24874                           ; BSR set to: 2
 24875                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 24876  008B36  9100               	bcf	_loRa& (0+255),0,b
 24877                           
 24878                           ; BSR set to: 2
 24879  008B38  0012               	return		;funcret
 24880  008B3A                     __end_of_ResetParametersForConfirmedTransmission:
 24881                           	opt stack 0
 24882                           tosu	equ	0xFFF
 24883                           tosh	equ	0xFFE
 24884                           tosl	equ	0xFFD
 24885                           pclath	equ	0xFFA
 24886                           tblptru	equ	0xFF8
 24887                           tblptrh	equ	0xFF7
 24888                           tblptrl	equ	0xFF6
 24889                           tablat	equ	0xFF5
 24890                           prodh	equ	0xFF4
 24891                           prodl	equ	0xFF3
 24892                           intcon	equ	0xFF2
 24893                           intcon2	equ	0xFF1
 24894                           intcon3	equ	0xFF0
 24895                           indf0	equ	0xFEF
 24896                           postinc0	equ	0xFEE
 24897                           fsr0h	equ	0xFEA
 24898                           fsr0l	equ	0xFE9
 24899                           wreg	equ	0xFE8
 24900                           postinc1	equ	0xFE6
 24901                           postdec1	equ	0xFE5
 24902                           plusw1	equ	0xFE3
 24903                           fsr1h	equ	0xFE2
 24904                           fsr1l	equ	0xFE1
 24905                           indf2	equ	0xFDF
 24906                           postinc2	equ	0xFDE
 24907                           postdec2	equ	0xFDD
 24908                           plusw2	equ	0xFDB
 24909                           fsr2h	equ	0xFDA
 24910                           fsr2l	equ	0xFD9
 24911                           status	equ	0xFD8
 24912                           
 24913 ;; *************** function _RADIO_ReleaseData *****************
 24914 ;; Defined at:
 24915 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;		None
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;		None
 24920 ;; Return value:  Size  Location     Type
 24921 ;;                  1    wreg      void 
 24922 ;; Registers used:
 24923 ;;		status,2, status,0
 24924 ;; Tracked objects:
 24925 ;;		On entry : 0/0
 24926 ;;		On exit  : 0/0
 24927 ;;		Unchanged: 0/0
 24928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24933 ;;Total ram usage:        0 bytes
 24934 ;; Hardware stack levels used:    1
 24935 ;; Hardware stack levels required when called:    7
 24936 ;; This function calls:
 24937 ;;		Nothing
 24938 ;; This function is called by:
 24939 ;;		_LORAWAN_ReceiveWindow1Callback
 24940 ;;		_LORAWAN_ReceiveWindow2Callback
 24941 ;;		_LORAWAN_EnterContinuousReceive
 24942 ;;		_LORAWAN_RxDone
 24943 ;; This function uses a non-reentrant model
 24944 ;;
 24945                           
 24946                           	psect	text114
 24947  008C96                     __ptext114:
 24948                           	opt stack 0
 24949  008C96                     _RADIO_ReleaseData:
 24950                           	opt stack 18
 24951                           
 24952                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 24953                           
 24954                           ; BSR set to: 2
 24955                           ;incstack = 0
 24956  008C96  0101               	movlb	1	; () banked
 24957  008C98  959E               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 24958                           
 24959                           ; BSR set to: 1
 24960  008C9A  0012               	return		;funcret
 24961  008C9C                     __end_of_RADIO_ReleaseData:
 24962                           	opt stack 0
 24963                           tosu	equ	0xFFF
 24964                           tosh	equ	0xFFE
 24965                           tosl	equ	0xFFD
 24966                           pclath	equ	0xFFA
 24967                           tblptru	equ	0xFF8
 24968                           tblptrh	equ	0xFF7
 24969                           tblptrl	equ	0xFF6
 24970                           tablat	equ	0xFF5
 24971                           prodh	equ	0xFF4
 24972                           prodl	equ	0xFF3
 24973                           intcon	equ	0xFF2
 24974                           intcon2	equ	0xFF1
 24975                           intcon3	equ	0xFF0
 24976                           indf0	equ	0xFEF
 24977                           postinc0	equ	0xFEE
 24978                           fsr0h	equ	0xFEA
 24979                           fsr0l	equ	0xFE9
 24980                           wreg	equ	0xFE8
 24981                           postinc1	equ	0xFE6
 24982                           postdec1	equ	0xFE5
 24983                           plusw1	equ	0xFE3
 24984                           fsr1h	equ	0xFE2
 24985                           fsr1l	equ	0xFE1
 24986                           indf2	equ	0xFDF
 24987                           postinc2	equ	0xFDE
 24988                           postdec2	equ	0xFDD
 24989                           plusw2	equ	0xFDB
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function _RADIO_ReceiveStop *****************
 24995 ;; Defined at:
 24996 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;		None
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, status,2, status,0, cstack
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25014 ;;Total ram usage:        0 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:   11
 25017 ;; This function calls:
 25018 ;;		_RADIO_WriteMode
 25019 ;; This function is called by:
 25020 ;;		_LORAWAN_Send
 25021 ;;		_LORAWAN_ReceiveWindow1Callback
 25022 ;;		_LORAWAN_ReceiveWindow2Callback
 25023 ;;		_LORAWAN_EnterContinuousReceive
 25024 ;;		_LORAWAN_SetClass
 25025 ;; This function uses a non-reentrant model
 25026 ;;
 25027                           
 25028                           	psect	text115
 25029  0088D6                     __ptext115:
 25030                           	opt stack 0
 25031  0088D6                     _RADIO_ReceiveStop:
 25032                           	opt stack 18
 25033                           
 25034                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;incstack = 0
 25038  0088D6  0E02               	movlw	2
 25039  0088D8  0101               	movlb	1	; () banked
 25040  0088DA  199E               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 25041  0088DC  A4D8               	btfss	status,2,c
 25042  0088DE  0012               	return	
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;radio_driver_SX1276.c: 954: {
 25046                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 25047  0088E0  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25048  0088E4  0E00               	movlw	0
 25049  0088E6  0100               	movlb	0	; () banked
 25050  0088E8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25051  0088EA  0E00               	movlw	0
 25052  0088EC  ECE7  F02E         	call	_RADIO_WriteMode
 25053                           
 25054                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 25055  0088F0  0101               	movlb	1	; () banked
 25056  0088F2  939E               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 25057  0088F4  0012               	return	
 25058  0088F6                     __end_of_RADIO_ReceiveStop:
 25059                           	opt stack 0
 25060                           tosu	equ	0xFFF
 25061                           tosh	equ	0xFFE
 25062                           tosl	equ	0xFFD
 25063                           pclath	equ	0xFFA
 25064                           tblptru	equ	0xFF8
 25065                           tblptrh	equ	0xFF7
 25066                           tblptrl	equ	0xFF6
 25067                           tablat	equ	0xFF5
 25068                           prodh	equ	0xFF4
 25069                           prodl	equ	0xFF3
 25070                           intcon	equ	0xFF2
 25071                           intcon2	equ	0xFF1
 25072                           intcon3	equ	0xFF0
 25073                           indf0	equ	0xFEF
 25074                           postinc0	equ	0xFEE
 25075                           fsr0h	equ	0xFEA
 25076                           fsr0l	equ	0xFE9
 25077                           wreg	equ	0xFE8
 25078                           postinc1	equ	0xFE6
 25079                           postdec1	equ	0xFE5
 25080                           plusw1	equ	0xFE3
 25081                           fsr1h	equ	0xFE2
 25082                           fsr1l	equ	0xFE1
 25083                           indf2	equ	0xFDF
 25084                           postinc2	equ	0xFDE
 25085                           postdec2	equ	0xFDD
 25086                           plusw2	equ	0xFDB
 25087                           fsr2h	equ	0xFDA
 25088                           fsr2l	equ	0xFD9
 25089                           status	equ	0xFD8
 25090                           
 25091 ;; *************** function _RADIO_ReceiveStart *****************
 25092 ;; Defined at:
 25093 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25094 ;; Parameters:    Size  Location     Type
 25095 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 25096 ;; Auto vars:     Size  Location     Type
 25097 ;;		None
 25098 ;; Return value:  Size  Location     Type
 25099 ;;                  2   81[BANK0 ] enum E7038
 25100 ;; Registers used:
 25101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25102 ;; Tracked objects:
 25103 ;;		On entry : 0/0
 25104 ;;		On exit  : 0/0
 25105 ;;		Unchanged: 0/0
 25106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25110 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25111 ;;Total ram usage:       10 bytes
 25112 ;; Hardware stack levels used:    1
 25113 ;; Hardware stack levels required when called:   12
 25114 ;; This function calls:
 25115 ;;		_RADIO_RegisterWrite
 25116 ;;		_RADIO_WriteConfiguration
 25117 ;;		_RADIO_WriteMode
 25118 ;;		_SwTimerSetTimeout
 25119 ;;		_SwTimerStart
 25120 ;;		___lldiv
 25121 ;; This function is called by:
 25122 ;;		_LORAWAN_ReceiveWindow1Callback
 25123 ;;		_LORAWAN_ReceiveWindow2Callback
 25124 ;;		_LORAWAN_EnterContinuousReceive
 25125 ;; This function uses a non-reentrant model
 25126 ;;
 25127                           
 25128                           	psect	text116
 25129  003C58                     __ptext116:
 25130                           	opt stack 0
 25131  003C58                     _RADIO_ReceiveStart:
 25132                           	opt stack 13
 25133                           
 25134                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;incstack = 0
 25138  003C58  0101               	movlb	1	; () banked
 25139  003C5A  A59E               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25140  003C5C  D006               	goto	l565
 25141                           
 25142                           ; BSR set to: 1
 25143                           ;radio_driver_SX1276.c: 878: {
 25144                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 25145  003C5E  0E80               	movlw	128
 25146  003C60  0100               	movlb	0	; () banked
 25147  003C62  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25148  003C64  0E03               	movlw	3
 25149  003C66  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25150                           
 25151                           ; BSR set to: 0
 25152  003C68  0012               	return	
 25153  003C6A                     l565:
 25154                           
 25155                           ;radio_driver_SX1276.c: 880: }
 25156                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25157                           
 25158                           ; BSR set to: 0
 25159  003C6A  C19E  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 25160  003C6E  0E03               	movlw	3
 25161  003C70  0100               	movlb	0	; () banked
 25162  003C72  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 25163  003C74  B4D8               	btfsc	status,2,c
 25164  003C76  D005               	goto	l567
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;radio_driver_SX1276.c: 883: {
 25168                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 25169  003C78  0E80               	movlw	128
 25170  003C7A  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25171  003C7C  0E04               	movlw	4
 25172  003C7E  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25173                           
 25174                           ; BSR set to: 0
 25175  003C80  0012               	return	
 25176  003C82                     l567:
 25177                           
 25178                           ; BSR set to: 0
 25179                           ;radio_driver_SX1276.c: 885: }
 25180                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 25181                           
 25182                           ; BSR set to: 0
 25183  003C82  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25184  003C84  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25185  003C86  A4D8               	btfss	status,2,c
 25186  003C88  D007               	goto	l568
 25187                           
 25188                           ; BSR set to: 0
 25189                           ;radio_driver_SX1276.c: 888: {
 25190                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 25191  003C8A  0E00               	movlw	0
 25192  003C8C  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25193  003C8E  0E04               	movlw	4
 25194  003C90  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25195  003C92  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 25196                           
 25197                           ;radio_driver_SX1276.c: 890: }
 25198  003C96  D006               	goto	l569
 25199  003C98                     l568:
 25200                           
 25201                           ;radio_driver_SX1276.c: 891: else
 25202                           ;radio_driver_SX1276.c: 892: {
 25203                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 25204  003C98  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 25205  003C9C  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 25206  003CA0  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 25207  003CA4                     l569:
 25208                           
 25209                           ;radio_driver_SX1276.c: 894: }
 25210                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 25211  003CA4  0101               	movlb	1	; () banked
 25212  003CA6  0593               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25213  003CA8  A4D8               	btfss	status,2,c
 25214  003CAA  D013               	goto	l570
 25215                           
 25216                           ; BSR set to: 1
 25217                           ;radio_driver_SX1276.c: 897: {
 25218                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 25219  003CAC  0E01               	movlw	1
 25220  003CAE  0100               	movlb	0	; () banked
 25221  003CB0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25222  003CB2  0E22               	movlw	34
 25223  003CB4  EC7B  F044         	call	_RADIO_RegisterWrite
 25224                           
 25225                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 25226  003CB8  0E00               	movlw	0
 25227  003CBA  0100               	movlb	0	; () banked
 25228  003CBC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25229  003CBE  0E40               	movlw	64
 25230  003CC0  EC7B  F044         	call	_RADIO_RegisterWrite
 25231                           
 25232                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 25233  003CC4  0E00               	movlw	0
 25234  003CC6  0100               	movlb	0	; () banked
 25235  003CC8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25236  003CCA  0E41               	movlw	65
 25237  003CCC  EC7B  F044         	call	_RADIO_RegisterWrite
 25238                           
 25239                           ;radio_driver_SX1276.c: 908: }
 25240  003CD0  D016               	goto	l571
 25241  003CD2                     l570:
 25242                           
 25243                           ;radio_driver_SX1276.c: 909: else
 25244                           ;radio_driver_SX1276.c: 910: {
 25245                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 25246  003CD2  C1AF  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 25247  003CD6  0E12               	movlw	18
 25248  003CD8  EC7B  F044         	call	_RADIO_RegisterWrite
 25249                           
 25250                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 25251  003CDC  C1B0  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 25252  003CE0  0E13               	movlw	19
 25253  003CE2  EC7B  F044         	call	_RADIO_RegisterWrite
 25254                           
 25255                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 25256  003CE6  0E00               	movlw	0
 25257  003CE8  0100               	movlb	0	; () banked
 25258  003CEA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25259  003CEC  0E40               	movlw	64
 25260  003CEE  EC7B  F044         	call	_RADIO_RegisterWrite
 25261                           
 25262                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 25263  003CF2  0E00               	movlw	0
 25264  003CF4  0100               	movlb	0	; () banked
 25265  003CF6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25266  003CF8  0E41               	movlw	65
 25267  003CFA  EC7B  F044         	call	_RADIO_RegisterWrite
 25268  003CFE                     l571:
 25269                           
 25270                           ;radio_driver_SX1276.c: 917: }
 25271                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 25272  003CFE  0101               	movlb	1	; () banked
 25273  003D00  839E               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 25274                           
 25275                           ; BSR set to: 1
 25276                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 25277  003D02  0EE7               	movlw	231
 25278  003D04  179E               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 25279                           
 25280                           ; BSR set to: 1
 25281                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 25282  003D06  0100               	movlb	0	; () banked
 25283  003D08  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25284  003D0A  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25285  003D0C  A4D8               	btfss	status,2,c
 25286  003D0E  D008               	goto	l572
 25287                           
 25288                           ; BSR set to: 0
 25289                           ;radio_driver_SX1276.c: 925: {
 25290                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 25291  003D10  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25292  003D14  0E00               	movlw	0
 25293  003D16  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25294  003D18  0E05               	movlw	5
 25295  003D1A  ECE7  F02E         	call	_RADIO_WriteMode
 25296                           
 25297                           ;radio_driver_SX1276.c: 927: }
 25298  003D1E  D046               	goto	l575
 25299  003D20                     l572:
 25300                           
 25301                           ;radio_driver_SX1276.c: 928: else
 25302                           ;radio_driver_SX1276.c: 929: {
 25303                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 25304  003D20  0101               	movlb	1	; () banked
 25305  003D22  0593               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25306  003D24  A4D8               	btfss	status,2,c
 25307  003D26  D009               	goto	l574
 25308                           
 25309                           ; BSR set to: 1
 25310                           ;radio_driver_SX1276.c: 931: {
 25311                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 25312  003D28  0E01               	movlw	1
 25313  003D2A  0100               	movlb	0	; () banked
 25314  003D2C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 25315  003D2E  0E00               	movlw	0
 25316  003D30  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25317  003D32  0E06               	movlw	6
 25318  003D34  ECE7  F02E         	call	_RADIO_WriteMode
 25319                           
 25320                           ;radio_driver_SX1276.c: 933: }
 25321  003D38  D039               	goto	l575
 25322  003D3A                     l574:
 25323                           
 25324                           ;radio_driver_SX1276.c: 934: else
 25325                           ;radio_driver_SX1276.c: 935: {
 25326                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 25327  003D3A  0E00               	movlw	0
 25328  003D3C  0100               	movlb	0	; () banked
 25329  003D3E  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 25330  003D40  0E00               	movlw	0
 25331  003D42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25332  003D44  0E05               	movlw	5
 25333  003D46  ECE7  F02E         	call	_RADIO_WriteMode
 25334                           
 25335                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 25336  003D4A  0100               	movlb	0	; () banked
 25337  003D4C  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25338  003D4E  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 25339  003D50  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25340  003D52  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 25341  003D54  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 25342  003D56  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 25343  003D58  0E0C               	movlw	12
 25344  003D5A                     u15625:
 25345  003D5A  90D8               	bcf	status,0,c
 25346  003D5C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25347  003D5E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25348  003D60  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25349  003D62  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25350  003D64  2EE8               	decfsz	wreg,f,c
 25351  003D66  D7F9               	goto	u15625
 25352  003D68  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25353  003D6C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25354  003D70  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25355  003D74  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25356  003D78  0E7D               	movlw	125
 25357  003D7A  6F64               	movwf	___lldiv@divisor& (0+255),b
 25358  003D7C  0E00               	movlw	0
 25359  003D7E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25360  003D80  0E00               	movlw	0
 25361  003D82  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25362  003D84  0E00               	movlw	0
 25363  003D86  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25364  003D88  EC7A  F039         	call	___lldiv	;wreg free
 25365  003D8C  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25366  003D90  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25367  003D94  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25368  003D98  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25369  003D9C  0101               	movlb	1	; () banked
 25370  003D9E  51A3               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25371  003DA0  ECC6  F040         	call	_SwTimerSetTimeout
 25372                           
 25373                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 25374  003DA4  0101               	movlb	1	; () banked
 25375  003DA6  51A3               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25376  003DA8  EC01  F037         	call	_SwTimerStart
 25377  003DAC                     l575:
 25378                           
 25379                           ;radio_driver_SX1276.c: 939: }
 25380                           ;radio_driver_SX1276.c: 940: }
 25381                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 25382  003DAC  0101               	movlb	1	; () banked
 25383  003DAE  51A5               	movf	(_RadioConfiguration+42)& (0+255),w,b
 25384  003DB0  11A6               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 25385  003DB2  11A7               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 25386  003DB4  11A8               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 25387  003DB6  B4D8               	btfsc	status,2,c
 25388  003DB8  D061               	goto	l576
 25389                           
 25390                           ; BSR set to: 1
 25391                           ;radio_driver_SX1276.c: 943: {
 25392                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 25393  003DBA  51A8               	movf	(_RadioConfiguration+45)& (0+255),w,b
 25394  003DBC  E107               	bnz	u15640
 25395  003DBE  29A5               	incf	(_RadioConfiguration+42)& (0+255),w,b
 25396  003DC0  0EFF               	movlw	255
 25397  003DC2  59A6               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 25398  003DC4  0E0F               	movlw	15
 25399  003DC6  59A7               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 25400  003DC8  A0D8               	btfss	status,0,c
 25401  003DCA  D01D               	goto	l578
 25402  003DCC                     u15640:
 25403                           
 25404                           ; BSR set to: 1
 25405  003DCC  C1A5  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 25406  003DD0  C1A6  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 25407  003DD4  C1A7  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 25408  003DD8  C1A8  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 25409  003DDC  0E7D               	movlw	125
 25410  003DDE  0100               	movlb	0	; () banked
 25411  003DE0  6F64               	movwf	___lldiv@divisor& (0+255),b
 25412  003DE2  0E00               	movlw	0
 25413  003DE4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25414  003DE6  0E00               	movlw	0
 25415  003DE8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25416  003DEA  0E00               	movlw	0
 25417  003DEC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25418  003DEE  EC7A  F039         	call	___lldiv	;wreg free
 25419  003DF2  0E0C               	movlw	12
 25420  003DF4                     u15655:
 25421  003DF4  90D8               	bcf	status,0,c
 25422  003DF6  0100               	movlb	0	; () banked
 25423  003DF8  3760               	rlcf	?___lldiv& (0+255),f,b
 25424  003DFA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 25425  003DFC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 25426  003DFE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 25427  003E00  2EE8               	decfsz	wreg,f,c
 25428  003E02  D7F8               	goto	u15655
 25429  003E04  D023               	goto	L18
 25430  003E06                     l578:
 25431                           
 25432                           ; BSR set to: 0
 25433  003E06  C1A5  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 25434  003E0A  C1A6  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 25435  003E0E  C1A7  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 25436  003E12  C1A8  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 25437  003E16  0E0C               	movlw	12
 25438  003E18                     u15665:
 25439  003E18  90D8               	bcf	status,0,c
 25440  003E1A  0100               	movlb	0	; () banked
 25441  003E1C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25442  003E1E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25443  003E20  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25444  003E22  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25445  003E24  2EE8               	decfsz	wreg,f,c
 25446  003E26  D7F8               	goto	u15665
 25447  003E28  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25448  003E2C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25449  003E30  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25450  003E34  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25451  003E38  0E7D               	movlw	125
 25452  003E3A  6F64               	movwf	___lldiv@divisor& (0+255),b
 25453  003E3C  0E00               	movlw	0
 25454  003E3E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25455  003E40  0E00               	movlw	0
 25456  003E42  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25457  003E44  0E00               	movlw	0
 25458  003E46  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25459  003E48  EC7A  F039         	call	___lldiv	;wreg free
 25460  003E4C                     L18:
 25461  003E4C  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$1082
 25462  003E50  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$1082+1
 25463  003E54  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$1082+2
 25464  003E58  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$1082+3
 25465  003E5C  C0B7  F06D         	movff	_RADIO_ReceiveStart$1082,SwTimerSetTimeout@timeout
 25466  003E60  C0B8  F06E         	movff	_RADIO_ReceiveStart$1082+1,SwTimerSetTimeout@timeout+1
 25467  003E64  C0B9  F06F         	movff	_RADIO_ReceiveStart$1082+2,SwTimerSetTimeout@timeout+2
 25468  003E68  C0BA  F070         	movff	_RADIO_ReceiveStart$1082+3,SwTimerSetTimeout@timeout+3
 25469  003E6C  0101               	movlb	1	; () banked
 25470  003E6E  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25471  003E70  ECC6  F040         	call	_SwTimerSetTimeout
 25472                           
 25473                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 25474  003E74  0101               	movlb	1	; () banked
 25475  003E76  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25476  003E78  EC01  F037         	call	_SwTimerStart
 25477  003E7C                     l576:
 25478                           
 25479                           ;radio_driver_SX1276.c: 946: }
 25480                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 25481  003E7C  0E00               	movlw	0
 25482  003E7E  0100               	movlb	0	; () banked
 25483  003E80  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25484  003E82  0E00               	movlw	0
 25485  003E84  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25486  003E86  0012               	return	
 25487  003E88                     __end_of_RADIO_ReceiveStart:
 25488                           	opt stack 0
 25489                           tosu	equ	0xFFF
 25490                           tosh	equ	0xFFE
 25491                           tosl	equ	0xFFD
 25492                           pclath	equ	0xFFA
 25493                           tblptru	equ	0xFF8
 25494                           tblptrh	equ	0xFF7
 25495                           tblptrl	equ	0xFF6
 25496                           tablat	equ	0xFF5
 25497                           prodh	equ	0xFF4
 25498                           prodl	equ	0xFF3
 25499                           intcon	equ	0xFF2
 25500                           intcon2	equ	0xFF1
 25501                           intcon3	equ	0xFF0
 25502                           indf0	equ	0xFEF
 25503                           postinc0	equ	0xFEE
 25504                           fsr0h	equ	0xFEA
 25505                           fsr0l	equ	0xFE9
 25506                           wreg	equ	0xFE8
 25507                           postinc1	equ	0xFE6
 25508                           postdec1	equ	0xFE5
 25509                           plusw1	equ	0xFE3
 25510                           fsr1h	equ	0xFE2
 25511                           fsr1l	equ	0xFE1
 25512                           indf2	equ	0xFDF
 25513                           postinc2	equ	0xFDE
 25514                           postdec2	equ	0xFDD
 25515                           plusw2	equ	0xFDB
 25516                           fsr2h	equ	0xFDA
 25517                           fsr2l	equ	0xFD9
 25518                           status	equ	0xFD8
 25519                           
 25520 ;; *************** function _ConfigureRadioRx *****************
 25521 ;; Defined at:
 25522 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25523 ;; Parameters:    Size  Location     Type
 25524 ;;  dataRate        1    wreg     unsigned char 
 25525 ;;  freq            4   19[BANK0 ] unsigned long 
 25526 ;; Auto vars:     Size  Location     Type
 25527 ;;  dataRate        1   23[BANK0 ] unsigned char 
 25528 ;; Return value:  Size  Location     Type
 25529 ;;                  1    wreg      void 
 25530 ;; Registers used:
 25531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25532 ;; Tracked objects:
 25533 ;;		On entry : 0/0
 25534 ;;		On exit  : 0/0
 25535 ;;		Unchanged: 0/0
 25536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25541 ;;Total ram usage:        5 bytes
 25542 ;; Hardware stack levels used:    1
 25543 ;; Hardware stack levels required when called:   10
 25544 ;; This function calls:
 25545 ;;		_ConfigureRadio
 25546 ;;		_RADIO_SetCRC
 25547 ;;		_RADIO_SetIQInverted
 25548 ;; This function is called by:
 25549 ;;		_LORAWAN_ReceiveWindow1Callback
 25550 ;;		_LORAWAN_ReceiveWindow2Callback
 25551 ;;		_LORAWAN_EnterContinuousReceive
 25552 ;; This function uses a non-reentrant model
 25553 ;;
 25554                           
 25555                           	psect	text117
 25556  0086CA                     __ptext117:
 25557                           	opt stack 0
 25558  0086CA                     _ConfigureRadioRx:
 25559                           	opt stack 15
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;incstack = 0
 25563                           ;ConfigureRadioRx@dataRate stored from wreg
 25564  0086CA  0100               	movlb	0	; () banked
 25565  0086CC  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 25566                           
 25567                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 25568  0086CE  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 25569  0086D2  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 25570  0086D6  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 25571  0086DA  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 25572  0086DE  0100               	movlb	0	; () banked
 25573  0086E0  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 25574  0086E2  EC09  F036         	call	_ConfigureRadio
 25575                           
 25576                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 25577  0086E6  0E00               	movlw	0
 25578  0086E8  EC16  F046         	call	_RADIO_SetCRC
 25579                           
 25580                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 25581  0086EC  0E01               	movlw	1
 25582  0086EE  EC11  F046         	call	_RADIO_SetIQInverted
 25583  0086F2  0012               	return		;funcret
 25584  0086F4                     __end_of_ConfigureRadioRx:
 25585                           	opt stack 0
 25586                           tosu	equ	0xFFF
 25587                           tosh	equ	0xFFE
 25588                           tosl	equ	0xFFD
 25589                           pclath	equ	0xFFA
 25590                           tblptru	equ	0xFF8
 25591                           tblptrh	equ	0xFF7
 25592                           tblptrl	equ	0xFF6
 25593                           tablat	equ	0xFF5
 25594                           prodh	equ	0xFF4
 25595                           prodl	equ	0xFF3
 25596                           intcon	equ	0xFF2
 25597                           intcon2	equ	0xFF1
 25598                           intcon3	equ	0xFF0
 25599                           indf0	equ	0xFEF
 25600                           postinc0	equ	0xFEE
 25601                           fsr0h	equ	0xFEA
 25602                           fsr0l	equ	0xFE9
 25603                           wreg	equ	0xFE8
 25604                           postinc1	equ	0xFE6
 25605                           postdec1	equ	0xFE5
 25606                           plusw1	equ	0xFE3
 25607                           fsr1h	equ	0xFE2
 25608                           fsr1l	equ	0xFE1
 25609                           indf2	equ	0xFDF
 25610                           postinc2	equ	0xFDE
 25611                           postdec2	equ	0xFDD
 25612                           plusw2	equ	0xFDB
 25613                           fsr2h	equ	0xFDA
 25614                           fsr2l	equ	0xFD9
 25615                           status	equ	0xFD8
 25616                           
 25617 ;; *************** function _INTERRUPT_GetDioStatus *****************
 25618 ;; Defined at:
 25619 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;		None
 25622 ;; Auto vars:     Size  Location     Type
 25623 ;;  a               1    0[BANK0 ] unsigned char 
 25624 ;; Return value:  Size  Location     Type
 25625 ;;                  1    wreg      unsigned char 
 25626 ;; Registers used:
 25627 ;;		wreg, status,2
 25628 ;; Tracked objects:
 25629 ;;		On entry : 0/0
 25630 ;;		On exit  : 0/0
 25631 ;;		Unchanged: 0/0
 25632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25637 ;;Total ram usage:        1 bytes
 25638 ;; Hardware stack levels used:    1
 25639 ;; Hardware stack levels required when called:    7
 25640 ;; This function calls:
 25641 ;;		Nothing
 25642 ;; This function is called by:
 25643 ;;		_LORAWAN_Mainloop
 25644 ;; This function uses a non-reentrant model
 25645 ;;
 25646                           
 25647                           	psect	text118
 25648  008AEE                     __ptext118:
 25649                           	opt stack 0
 25650  008AEE                     _INTERRUPT_GetDioStatus:
 25651                           	opt stack 22
 25652                           
 25653                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 25654                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 25655                           
 25656                           ;incstack = 0
 25657  008AEE  9EF2               	bcf	intcon,7,c	;volatile
 25658                           
 25659                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 25660  008AF0  C17A  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 25661                           
 25662                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 25663  008AF4  0E00               	movlw	0
 25664  008AF6  0101               	movlb	1	; () banked
 25665  008AF8  6F7A               	movwf	_dioStatus& (0+255),b	;volatile
 25666                           
 25667                           ; BSR set to: 1
 25668                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 25669  008AFA  8EF2               	bsf	intcon,7,c	;volatile
 25670                           
 25671                           ;interrupt_manager_lora_addons.c: 55: return a;
 25672  008AFC  0100               	movlb	0	; () banked
 25673  008AFE  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 25674  008B00  0012               	return	
 25675  008B02                     __end_of_INTERRUPT_GetDioStatus:
 25676                           	opt stack 0
 25677                           tosu	equ	0xFFF
 25678                           tosh	equ	0xFFE
 25679                           tosl	equ	0xFFD
 25680                           pclath	equ	0xFFA
 25681                           tblptru	equ	0xFF8
 25682                           tblptrh	equ	0xFF7
 25683                           tblptrl	equ	0xFF6
 25684                           tablat	equ	0xFF5
 25685                           prodh	equ	0xFF4
 25686                           prodl	equ	0xFF3
 25687                           intcon	equ	0xFF2
 25688                           intcon2	equ	0xFF1
 25689                           intcon3	equ	0xFF0
 25690                           indf0	equ	0xFEF
 25691                           postinc0	equ	0xFEE
 25692                           fsr0h	equ	0xFEA
 25693                           fsr0l	equ	0xFE9
 25694                           wreg	equ	0xFE8
 25695                           postinc1	equ	0xFE6
 25696                           postdec1	equ	0xFE5
 25697                           plusw1	equ	0xFE3
 25698                           fsr1h	equ	0xFE2
 25699                           fsr1l	equ	0xFE1
 25700                           indf2	equ	0xFDF
 25701                           postinc2	equ	0xFDE
 25702                           postdec2	equ	0xFDD
 25703                           plusw2	equ	0xFDB
 25704                           fsr2h	equ	0xFDA
 25705                           fsr2l	equ	0xFD9
 25706                           status	equ	0xFD8
 25707                           
 25708 ;; *************** function _LORAWAN_Join *****************
 25709 ;; Defined at:
 25710 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25711 ;; Parameters:    Size  Location     Type
 25712 ;;  activationTy    1    wreg     enum E7213
 25713 ;; Auto vars:     Size  Location     Type
 25714 ;;  activationTy    1  125[BANK0 ] enum E7213
 25715 ;;  result          1  124[BANK0 ] enum E7190
 25716 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 25717 ;; Return value:  Size  Location     Type
 25718 ;;                  1    wreg      enum E7190
 25719 ;; Registers used:
 25720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25721 ;; Tracked objects:
 25722 ;;		On entry : 0/0
 25723 ;;		On exit  : 0/0
 25724 ;;		Unchanged: 0/0
 25725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25727 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25730 ;;Total ram usage:        3 bytes
 25731 ;; Hardware stack levels used:    1
 25732 ;; Hardware stack levels required when called:   14
 25733 ;; This function calls:
 25734 ;;		_PrepareJoinRequestFrame
 25735 ;;		_RADIO_Transmit
 25736 ;;		_SelectChannelForTransmission
 25737 ;;		_SwTimerSetTimeout
 25738 ;;		_SwTimerStart
 25739 ;;		_UpdateJoinInProgress
 25740 ;; This function is called by:
 25741 ;;		_main
 25742 ;; This function uses a non-reentrant model
 25743 ;;
 25744                           
 25745                           	psect	text119
 25746  006CBA                     __ptext119:
 25747                           	opt stack 0
 25748  006CBA                     _LORAWAN_Join:
 25749                           	opt stack 16
 25750                           
 25751                           ; BSR set to: 0
 25752                           ;incstack = 0
 25753                           ;LORAWAN_Join@activationTypeNew stored from wreg
 25754  006CBA  0100               	movlb	0	; () banked
 25755  006CBC  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 25756                           
 25757                           ;lorawan.c: 117: uint8_t bufferIndex;
 25758                           ;lorawan.c: 118: LorawanError_t result;
 25759                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 25760  006CBE  0102               	movlb	2	; () banked
 25761  006CC0  B103               	btfsc	(_loRa+3)& (0+255),0,b
 25762  006CC2  0012               	return	
 25763                           
 25764                           ; BSR set to: 2
 25765                           ;lorawan.c: 123: }
 25766                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 25767                           
 25768                           ; BSR set to: 2
 25769                           ;lorawan.c: 121: {
 25770                           ;lorawan.c: 122: return MAC_PAUSED;
 25771                           ;	Return value of _LORAWAN_Join is never used
 25772  006CC4  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 25773  006CC6  0012               	return	
 25774                           
 25775                           ; BSR set to: 2
 25776                           ;lorawan.c: 128: }
 25777                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 25778                           
 25779                           ; BSR set to: 2
 25780                           
 25781                           ; BSR set to: 2
 25782                           ;lorawan.c: 126: {
 25783                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 25784                           ;	Return value of _LORAWAN_Join is never used
 25785  006CC8  5102               	movf	(_loRa+2)& (0+255),w,b
 25786  006CCA  0B0F               	andlw	15
 25787  006CCC  0900               	iorlw	0
 25788  006CCE  A4D8               	btfss	status,2,c
 25789  006CD0  0012               	return	
 25790                           
 25791                           ; BSR set to: 2
 25792                           ;lorawan.c: 133: }
 25793                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 25794                           
 25795                           ; BSR set to: 2
 25796                           ;lorawan.c: 131: {
 25797                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25798                           ;	Return value of _LORAWAN_Join is never used
 25799  006CD2  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 25800                           
 25801                           ; BSR set to: 2
 25802                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 25803  006CD6  0100               	movlb	0	; () banked
 25804  006CD8  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 25805  006CDA  A4D8               	btfss	status,2,c
 25806  006CDC  D024               	goto	l1784
 25807                           
 25808                           ; BSR set to: 0
 25809                           ;lorawan.c: 138: {
 25810                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 25811  006CDE  0102               	movlb	2	; () banked
 25812  006CE0  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 25813  006CE2  0012               	return	
 25814                           
 25815                           ; BSR set to: 2
 25816  006CE4  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 25817  006CE6  0012               	return	
 25818                           
 25819                           ; BSR set to: 2
 25820  006CE8  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 25821  006CEA  0012               	return	
 25822                           
 25823                           ; BSR set to: 2
 25824                           ;lorawan.c: 144: else
 25825                           ;lorawan.c: 145: {
 25826                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 25827                           
 25828                           ; BSR set to: 2
 25829                           
 25830                           ; BSR set to: 2
 25831                           ;lorawan.c: 143: }
 25832                           
 25833                           ; BSR set to: 2
 25834                           ;lorawan.c: 141: {
 25835                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 25836                           ;	Return value of _LORAWAN_Join is never used
 25837  006CEC  ECDD  F023         	call	_PrepareJoinRequestFrame	;wreg free
 25838  006CF0  0100               	movlb	0	; () banked
 25839  006CF2  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 25840                           
 25841                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 25842  006CF4  0E00               	movlw	0
 25843  006CF6  EC26  F03B         	call	_SelectChannelForTransmission
 25844  006CFA  0100               	movlb	0	; () banked
 25845  006CFC  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 25846                           
 25847                           ; BSR set to: 0
 25848                           ;lorawan.c: 149: if (result == OK)
 25849  006CFE  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 25850  006D00  A4D8               	btfss	status,2,c
 25851  006D02  0012               	return	
 25852                           
 25853                           ; BSR set to: 0
 25854                           ;lorawan.c: 150: {
 25855                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 25856  006D04  0EE0               	movlw	low _macBuffer
 25857  006D06  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 25858  006D08  0E04               	movlw	high _macBuffer
 25859  006D0A  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 25860  006D0C  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 25861  006D10  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 25862  006D14  0100               	movlb	0	; () banked
 25863  006D16  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 25864  006D18  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 25865  006D1A  A4D8               	btfss	status,2,c
 25866  006D1C  0012               	return	
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;lorawan.c: 152: {
 25870                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 25871  006D1E  0E01               	movlw	1
 25872  006D20  EC24  F045         	call	_UpdateJoinInProgress
 25873                           
 25874                           ;lorawan.c: 164: }
 25875                           ;lorawan.c: 165: }
 25876                           ;lorawan.c: 166: }
 25877                           
 25878                           ;lorawan.c: 161: else
 25879                           ;lorawan.c: 162: {
 25880                           ;lorawan.c: 163: return result;
 25881                           ;	Return value of _LORAWAN_Join is never used
 25882                           
 25883                           ;lorawan.c: 159: }
 25884                           ;lorawan.c: 160: }
 25885                           
 25886                           ;lorawan.c: 156: else
 25887                           ;lorawan.c: 157: {
 25888                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25889                           ;	Return value of _LORAWAN_Join is never used
 25890                           
 25891                           ;lorawan.c: 155: }
 25892                           
 25893                           ;lorawan.c: 154: return OK;
 25894                           ;	Return value of _LORAWAN_Join is never used
 25895  006D24  0012               	return	
 25896  006D26                     l1784:
 25897                           
 25898                           ; BSR set to: 0
 25899                           ;lorawan.c: 167: else
 25900                           ;lorawan.c: 168: {
 25901                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 25902  006D26  0102               	movlb	2	; () banked
 25903  006D28  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 25904  006D2A  0012               	return	
 25905                           
 25906                           ; BSR set to: 2
 25907  006D2C  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 25908  006D2E  0012               	return	
 25909                           
 25910                           ; BSR set to: 2
 25911  006D30  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 25912  006D32  0012               	return	
 25913                           
 25914                           ; BSR set to: 2
 25915                           ;lorawan.c: 174: else
 25916                           ;lorawan.c: 175: {
 25917                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 25918                           
 25919                           ; BSR set to: 2
 25920                           
 25921                           ; BSR set to: 2
 25922                           ;lorawan.c: 173: }
 25923                           
 25924                           ; BSR set to: 2
 25925                           ;lorawan.c: 171: {
 25926                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 25927                           ;	Return value of _LORAWAN_Join is never used
 25928  006D34  0E07               	movlw	7
 25929  006D36  EC24  F045         	call	_UpdateJoinInProgress
 25930                           
 25931                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 25932  006D3A  0E8F               	movlw	143
 25933  006D3C  0100               	movlb	0	; () banked
 25934  006D3E  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 25935  006D40  0E02               	movlw	2
 25936  006D42  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 25937  006D44  0E00               	movlw	0
 25938  006D46  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 25939  006D48  0E00               	movlw	0
 25940  006D4A  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 25941  006D4C  0102               	movlb	2	; () banked
 25942  006D4E  51F3               	movf	(_loRa+243)& (0+255),w,b
 25943  006D50  ECC6  F040         	call	_SwTimerSetTimeout
 25944                           
 25945                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 25946  006D54  0102               	movlb	2	; () banked
 25947  006D56  51F3               	movf	(_loRa+243)& (0+255),w,b
 25948  006D58  EC01  F037         	call	_SwTimerStart
 25949                           
 25950                           ;lorawan.c: 180: return OK;
 25951                           ;	Return value of _LORAWAN_Join is never used
 25952  006D5C  0012               	return	
 25953  006D5E                     __end_of_LORAWAN_Join:
 25954                           	opt stack 0
 25955                           tosu	equ	0xFFF
 25956                           tosh	equ	0xFFE
 25957                           tosl	equ	0xFFD
 25958                           pclath	equ	0xFFA
 25959                           tblptru	equ	0xFF8
 25960                           tblptrh	equ	0xFF7
 25961                           tblptrl	equ	0xFF6
 25962                           tablat	equ	0xFF5
 25963                           prodh	equ	0xFF4
 25964                           prodl	equ	0xFF3
 25965                           intcon	equ	0xFF2
 25966                           intcon2	equ	0xFF1
 25967                           intcon3	equ	0xFF0
 25968                           indf0	equ	0xFEF
 25969                           postinc0	equ	0xFEE
 25970                           fsr0h	equ	0xFEA
 25971                           fsr0l	equ	0xFE9
 25972                           wreg	equ	0xFE8
 25973                           postinc1	equ	0xFE6
 25974                           postdec1	equ	0xFE5
 25975                           plusw1	equ	0xFE3
 25976                           fsr1h	equ	0xFE2
 25977                           fsr1l	equ	0xFE1
 25978                           indf2	equ	0xFDF
 25979                           postinc2	equ	0xFDE
 25980                           postdec2	equ	0xFDD
 25981                           plusw2	equ	0xFDB
 25982                           fsr2h	equ	0xFDA
 25983                           fsr2l	equ	0xFD9
 25984                           status	equ	0xFD8
 25985                           
 25986 ;; *************** function _UpdateJoinInProgress *****************
 25987 ;; Defined at:
 25988 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25989 ;; Parameters:    Size  Location     Type
 25990 ;;  state           1    wreg     unsigned char 
 25991 ;; Auto vars:     Size  Location     Type
 25992 ;;  state           1    0[BANK0 ] unsigned char 
 25993 ;; Return value:  Size  Location     Type
 25994 ;;                  1    wreg      void 
 25995 ;; Registers used:
 25996 ;;		wreg, status,2, status,0
 25997 ;; Tracked objects:
 25998 ;;		On entry : 0/0
 25999 ;;		On exit  : 0/0
 26000 ;;		Unchanged: 0/0
 26001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26006 ;;Total ram usage:        1 bytes
 26007 ;; Hardware stack levels used:    1
 26008 ;; Hardware stack levels required when called:    7
 26009 ;; This function calls:
 26010 ;;		Nothing
 26011 ;; This function is called by:
 26012 ;;		_LORAWAN_Join
 26013 ;; This function uses a non-reentrant model
 26014 ;;
 26015                           
 26016                           	psect	text120
 26017  008A48                     __ptext120:
 26018                           	opt stack 0
 26019  008A48                     _UpdateJoinInProgress:
 26020                           	opt stack 22
 26021                           
 26022                           ;incstack = 0
 26023                           ;UpdateJoinInProgress@state stored from wreg
 26024  008A48  0100               	movlb	0	; () banked
 26025  008A4A  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 26026                           
 26027                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 26028  008A4C  0102               	movlb	2	; () banked
 26029  008A4E  9902               	bcf	(_loRa+2)& (0+255),4,b
 26030                           
 26031                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 26032  008A50  8500               	bsf	_loRa& (0+255),2,b
 26033                           
 26034                           ; BSR set to: 2
 26035                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 26036  008A52  5102               	movf	(_loRa+2)& (0+255),w,b
 26037  008A54  0100               	movlb	0	; () banked
 26038  008A56  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 26039  008A58  0BF0               	andlw	-16
 26040  008A5A  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 26041  008A5C  0102               	movlb	2	; () banked
 26042  008A5E  6F02               	movwf	(_loRa+2)& (0+255),b
 26043                           
 26044                           ; BSR set to: 2
 26045  008A60  0012               	return		;funcret
 26046  008A62                     __end_of_UpdateJoinInProgress:
 26047                           	opt stack 0
 26048                           tosu	equ	0xFFF
 26049                           tosh	equ	0xFFE
 26050                           tosl	equ	0xFFD
 26051                           pclath	equ	0xFFA
 26052                           tblptru	equ	0xFF8
 26053                           tblptrh	equ	0xFF7
 26054                           tblptrl	equ	0xFF6
 26055                           tablat	equ	0xFF5
 26056                           prodh	equ	0xFF4
 26057                           prodl	equ	0xFF3
 26058                           intcon	equ	0xFF2
 26059                           intcon2	equ	0xFF1
 26060                           intcon3	equ	0xFF0
 26061                           indf0	equ	0xFEF
 26062                           postinc0	equ	0xFEE
 26063                           fsr0h	equ	0xFEA
 26064                           fsr0l	equ	0xFE9
 26065                           wreg	equ	0xFE8
 26066                           postinc1	equ	0xFE6
 26067                           postdec1	equ	0xFE5
 26068                           plusw1	equ	0xFE3
 26069                           fsr1h	equ	0xFE2
 26070                           fsr1l	equ	0xFE1
 26071                           indf2	equ	0xFDF
 26072                           postinc2	equ	0xFDE
 26073                           postdec2	equ	0xFDD
 26074                           plusw2	equ	0xFDB
 26075                           fsr2h	equ	0xFDA
 26076                           fsr2l	equ	0xFD9
 26077                           status	equ	0xFD8
 26078                           
 26079 ;; *************** function _SelectChannelForTransmission *****************
 26080 ;; Defined at:
 26081 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26082 ;; Parameters:    Size  Location     Type
 26083 ;;  transmission    1    wreg     unsigned char 
 26084 ;; Auto vars:     Size  Location     Type
 26085 ;;  transmission    1   91[BANK0 ] unsigned char 
 26086 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 26087 ;;  result          1   92[BANK0 ] enum E7249
 26088 ;; Return value:  Size  Location     Type
 26089 ;;                  1    wreg      enum E7249
 26090 ;; Registers used:
 26091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26092 ;; Tracked objects:
 26093 ;;		On entry : 0/0
 26094 ;;		On exit  : 0/0
 26095 ;;		Unchanged: 0/0
 26096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26098 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26100 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26101 ;;Total ram usage:        3 bytes
 26102 ;; Hardware stack levels used:    1
 26103 ;; Hardware stack levels required when called:   11
 26104 ;; This function calls:
 26105 ;;		_ConfigureRadioTx
 26106 ;;		_SearchAvailableChannel
 26107 ;; This function is called by:
 26108 ;;		_LORAWAN_RxTimeout
 26109 ;;		_LORAWAN_Join
 26110 ;;		_LORAWAN_Send
 26111 ;;		_AckRetransmissionCallback
 26112 ;;		_UnconfirmedTransmissionCallback
 26113 ;; This function uses a non-reentrant model
 26114 ;;
 26115                           
 26116                           	psect	text121
 26117  00764C                     __ptext121:
 26118                           	opt stack 0
 26119  00764C                     _SelectChannelForTransmission:
 26120                           	opt stack 18
 26121                           
 26122                           ; BSR set to: 2
 26123                           ;incstack = 0
 26124                           ;SelectChannelForTransmission@transmissionType stored from wreg
 26125  00764C  0100               	movlb	0	; () banked
 26126  00764E  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 26127                           
 26128                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 26129  007650  0E00               	movlw	0
 26130  007652  0100               	movlb	0	; () banked
 26131  007654  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 26135                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 26136  007656  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 26137  00765A  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 26138  00765C  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 26139  00765E  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 26140  007660  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 26141  007662  0E10               	movlw	16
 26142  007664  EC2F  F02C         	call	_SearchAvailableChannel
 26143  007668  0100               	movlb	0	; () banked
 26144  00766A  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 26145                           
 26146                           ; BSR set to: 0
 26147                           ;lorawan_eu.c: 926: if (result == OK)
 26148  00766C  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 26149  00766E  A4D8               	btfss	status,2,c
 26150  007670  D020               	goto	l1233
 26151                           
 26152                           ; BSR set to: 0
 26153                           ;lorawan_eu.c: 927: {
 26154                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 26155  007672  C0BD  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 26159  007676  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 26160  007678  0D0E               	mullw	14
 26161  00767A  0E00               	movlw	low _Channels
 26162  00767C  24F3               	addwf	prodl,w,c
 26163  00767E  6ED9               	movwf	fsr2l,c
 26164  007680  0E04               	movlw	high _Channels
 26165  007682  20F4               	addwfc	prodh,w,c
 26166  007684  6EDA               	movwf	fsr2h,c
 26167  007686  CFDE F213          	movff	postinc2,_loRa+19
 26168  00768A  CFDE F214          	movff	postinc2,_loRa+20
 26169  00768E  CFDE F215          	movff	postinc2,_loRa+21
 26170  007692  CFDE F216          	movff	postinc2,_loRa+22
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 26174  007696  C2DF  F217         	movff	_loRa+223,_loRa+23
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 26178  00769A  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 26179  00769E  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 26180  0076A2  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 26181  0076A6  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 26182  0076AA  0102               	movlb	2	; () banked
 26183  0076AC  5117               	movf	(_loRa+23)& (0+255),w,b
 26184  0076AE  EC0E  F03F         	call	_ConfigureRadioTx
 26185  0076B2                     l1233:
 26186                           
 26187                           ;lorawan_eu.c: 933: }
 26188                           ;lorawan_eu.c: 934: return result;
 26189  0076B2  0100               	movlb	0	; () banked
 26190  0076B4  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 26191  0076B6  0012               	return	
 26192  0076B8                     __end_of_SelectChannelForTransmission:
 26193                           	opt stack 0
 26194                           tosu	equ	0xFFF
 26195                           tosh	equ	0xFFE
 26196                           tosl	equ	0xFFD
 26197                           pclath	equ	0xFFA
 26198                           tblptru	equ	0xFF8
 26199                           tblptrh	equ	0xFF7
 26200                           tblptrl	equ	0xFF6
 26201                           tablat	equ	0xFF5
 26202                           prodh	equ	0xFF4
 26203                           prodl	equ	0xFF3
 26204                           intcon	equ	0xFF2
 26205                           intcon2	equ	0xFF1
 26206                           intcon3	equ	0xFF0
 26207                           indf0	equ	0xFEF
 26208                           postinc0	equ	0xFEE
 26209                           fsr0h	equ	0xFEA
 26210                           fsr0l	equ	0xFE9
 26211                           wreg	equ	0xFE8
 26212                           postinc1	equ	0xFE6
 26213                           postdec1	equ	0xFE5
 26214                           plusw1	equ	0xFE3
 26215                           fsr1h	equ	0xFE2
 26216                           fsr1l	equ	0xFE1
 26217                           indf2	equ	0xFDF
 26218                           postinc2	equ	0xFDE
 26219                           postdec2	equ	0xFDD
 26220                           plusw2	equ	0xFDB
 26221                           fsr2h	equ	0xFDA
 26222                           fsr2l	equ	0xFD9
 26223                           status	equ	0xFD8
 26224                           
 26225 ;; *************** function _SearchAvailableChannel *****************
 26226 ;; Defined at:
 26227 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26228 ;; Parameters:    Size  Location     Type
 26229 ;;  maxChannels     1    wreg     unsigned char 
 26230 ;;  transmission    1   79[BANK0 ] unsigned char 
 26231 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 26232 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 26233 ;; Auto vars:     Size  Location     Type
 26234 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 26235 ;;  i               1   90[BANK0 ] unsigned char 
 26236 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 26237 ;;  result          1   87[BANK0 ] enum E7249
 26238 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 26239 ;; Return value:  Size  Location     Type
 26240 ;;                  1    wreg      enum E7249
 26241 ;; Registers used:
 26242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26243 ;; Tracked objects:
 26244 ;;		On entry : 0/0
 26245 ;;		On exit  : 0/0
 26246 ;;		Unchanged: 0/0
 26247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26248 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26249 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;Total ram usage:       12 bytes
 26253 ;; Hardware stack levels used:    1
 26254 ;; Hardware stack levels required when called:   10
 26255 ;; This function calls:
 26256 ;;		_Random
 26257 ;; This function is called by:
 26258 ;;		_SelectChannelForTransmission
 26259 ;;		_LORAWAN_RxDone
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text122
 26264  00585E                     __ptext122:
 26265                           	opt stack 0
 26266  00585E                     _SearchAvailableChannel:
 26267                           	opt stack 18
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;incstack = 0
 26271                           ;SearchAvailableChannel@maxChannels stored from wreg
 26272  00585E  0100               	movlb	0	; () banked
 26273  005860  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 26274                           
 26275                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 26276                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 26277  005862  0E00               	movlw	0
 26278  005864  0100               	movlb	0	; () banked
 26279  005866  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26280                           
 26281                           ; BSR set to: 0
 26282                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 26283  005868  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 26284  00586C  6BAE               	clrf	(Random@max+1)& (0+255),b
 26285  00586E  EC39  F044         	call	_Random	;wreg free
 26286  005872  0100               	movlb	0	; () banked
 26287  005874  29AD               	incf	?_Random& (0+255),w,b
 26288  005876  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 26289                           
 26290                           ; BSR set to: 0
 26291                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 26292  005878  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 26293                           
 26294                           ;lorawan_eu.c: 786: while (randomNumber)
 26295  00587C  D074               	goto	l1197
 26296  00587E                     
 26297                           ; BSR set to: 0
 26298                           ;lorawan_eu.c: 787: {
 26299                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 26300                           
 26301                           ; BSR set to: 0
 26302  00587E  0E00               	movlw	0
 26303  005880  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 26304  005882  D063               	goto	l1188
 26305  005884                     
 26306                           ; BSR set to: 0
 26307                           ;lorawan_eu.c: 789: {
 26308                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 26309                           
 26310                           ; BSR set to: 0
 26311  005884  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26312  005886  0D0E               	mullw	14
 26313  005888  0E04               	movlw	4
 26314  00588A  26F3               	addwf	prodl,f,c
 26315  00588C  0E00               	movlw	0
 26316  00588E  22F4               	addwfc	prodh,f,c
 26317  005890  0E00               	movlw	low _Channels
 26318  005892  24F3               	addwf	prodl,w,c
 26319  005894  6ED9               	movwf	fsr2l,c
 26320  005896  0E04               	movlw	high _Channels
 26321  005898  20F4               	addwfc	prodh,w,c
 26322  00589A  6EDA               	movwf	fsr2h,c
 26323  00589C  04DE               	decf	postinc2,w,c
 26324  00589E  A4D8               	btfss	status,2,c
 26325  0058A0  D052               	goto	l1193
 26326                           
 26327                           ; BSR set to: 0
 26328  0058A2  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26329  0058A4  0D0E               	mullw	14
 26330  0058A6  0E08               	movlw	8
 26331  0058A8  26F3               	addwf	prodl,f,c
 26332  0058AA  0E00               	movlw	0
 26333  0058AC  22F4               	addwfc	prodh,f,c
 26334  0058AE  0E00               	movlw	low _Channels
 26335  0058B0  24F3               	addwf	prodl,w,c
 26336  0058B2  6ED9               	movwf	fsr2l,c
 26337  0058B4  0E04               	movlw	high _Channels
 26338  0058B6  20F4               	addwfc	prodh,w,c
 26339  0058B8  6EDA               	movwf	fsr2h,c
 26340  0058BA  50DE               	movf	postinc2,w,c
 26341  0058BC  10DE               	iorwf	postinc2,w,c
 26342  0058BE  10DE               	iorwf	postinc2,w,c
 26343  0058C0  10DE               	iorwf	postinc2,w,c
 26344  0058C2  A4D8               	btfss	status,2,c
 26345  0058C4  D040               	goto	l1193
 26346                           
 26347                           ; BSR set to: 0
 26348  0058C6  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26349  0058C8  0D0E               	mullw	14
 26350  0058CA  0E05               	movlw	5
 26351  0058CC  26F3               	addwf	prodl,f,c
 26352  0058CE  0E00               	movlw	0
 26353  0058D0  22F4               	addwfc	prodh,f,c
 26354  0058D2  0E00               	movlw	low _Channels
 26355  0058D4  24F3               	addwf	prodl,w,c
 26356  0058D6  6ED9               	movwf	fsr2l,c
 26357  0058D8  0E04               	movlw	high _Channels
 26358  0058DA  20F4               	addwfc	prodh,w,c
 26359  0058DC  6EDA               	movwf	fsr2h,c
 26360  0058DE  0104               	movlb	4	; () banked
 26361  0058E0  50DF               	movf	223,w,c
 26362  0058E2  0B0F               	andlw	15
 26363  0058E4  0100               	movlb	0	; () banked
 26364  0058E6  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 26365  0058E8  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 26366  0058EA  0102               	movlb	2	; () banked
 26367  0058EC  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 26368  0058EE  A0D8               	btfss	status,0,c
 26369  0058F0  D02A               	goto	l1193
 26370                           
 26371                           ; BSR set to: 2
 26372  0058F2  0100               	movlb	0	; () banked
 26373  0058F4  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26374  0058F6  0D0E               	mullw	14
 26375  0058F8  0E05               	movlw	5
 26376  0058FA  26F3               	addwf	prodl,f,c
 26377  0058FC  0E00               	movlw	0
 26378  0058FE  22F4               	addwfc	prodh,f,c
 26379  005900  0E00               	movlw	low _Channels
 26380  005902  24F3               	addwf	prodl,w,c
 26381  005904  6ED9               	movwf	fsr2l,c
 26382  005906  0E04               	movlw	high _Channels
 26383  005908  20F4               	addwfc	prodh,w,c
 26384  00590A  6EDA               	movwf	fsr2h,c
 26385  00590C  0104               	movlb	4	; () banked
 26386  00590E  38DF               	swapf	223,w,c
 26387  005910  0B0F               	andlw	15
 26388  005912  0100               	movlb	0	; () banked
 26389  005914  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 26390  005916  0102               	movlb	2	; () banked
 26391  005918  51DF               	movf	(_loRa+223)& (0+255),w,b
 26392  00591A  0100               	movlb	0	; () banked
 26393  00591C  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 26394  00591E  A0D8               	btfss	status,0,c
 26395  005920  D012               	goto	l1193
 26396                           
 26397                           ; BSR set to: 0
 26398                           ;lorawan_eu.c: 791: {
 26399                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 26400  005922  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 26401  005924  A4D8               	btfss	status,2,c
 26402  005926  D00E               	goto	l1191
 26403                           
 26404                           ; BSR set to: 0
 26405                           ;lorawan_eu.c: 793: {
 26406                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 26407  005928  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26408  00592A  0D0E               	mullw	14
 26409  00592C  0E0C               	movlw	12
 26410  00592E  26F3               	addwf	prodl,f,c
 26411  005930  0E00               	movlw	0
 26412  005932  22F4               	addwfc	prodh,f,c
 26413  005934  0E00               	movlw	low _Channels
 26414  005936  24F3               	addwf	prodl,w,c
 26415  005938  6ED9               	movwf	fsr2l,c
 26416  00593A  0E04               	movlw	high _Channels
 26417  00593C  20F4               	addwfc	prodh,w,c
 26418  00593E  6EDA               	movwf	fsr2h,c
 26419  005940  04DE               	decf	postinc2,w,c
 26420  005942  B4D8               	btfsc	status,2,c
 26421  005944                     l1191:
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;lorawan_eu.c: 799: else
 26425                           ;lorawan_eu.c: 800: {
 26426                           ;lorawan_eu.c: 801: randomNumber --;
 26427                           
 26428                           ; BSR set to: 0
 26429  005944  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 26430  005946                     l1193:
 26431                           
 26432                           ; BSR set to: 0
 26433  005946  0100               	movlb	0	; () banked
 26434  005948  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 26435  00594A                     l1188:
 26436                           
 26437                           ; BSR set to: 0
 26438                           
 26439                           ; BSR set to: 0
 26440  00594A  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 26441  00594C  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 26442  00594E  B0D8               	btfsc	status,0,c
 26443  005950  D003               	goto	u16030
 26444                           
 26445                           ; BSR set to: 0
 26446  005952  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26447  005954  A4D8               	btfss	status,2,c
 26448  005956  D796               	goto	l1189
 26449  005958                     u16030:
 26450                           
 26451                           ; BSR set to: 0
 26452                           ;lorawan_eu.c: 802: }
 26453                           ;lorawan_eu.c: 803: }
 26454                           ;lorawan_eu.c: 804: }
 26455                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 26456                           
 26457                           ; BSR set to: 0
 26458                           
 26459                           ; BSR set to: 0
 26460  005958  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 26461  00595A  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26462  00595C  A4D8               	btfss	status,2,c
 26463  00595E  D003               	goto	l1197
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;lorawan_eu.c: 807: {
 26467                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 26468  005960  0E09               	movlw	9
 26469  005962  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26470                           
 26471                           ;lorawan_eu.c: 809: break;
 26472  005964  D003               	goto	u16050
 26473  005966                     l1197:
 26474                           
 26475                           ; BSR set to: 0
 26476                           
 26477                           ; BSR set to: 0
 26478                           
 26479                           ; BSR set to: 0
 26480  005966  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26481  005968  A4D8               	btfss	status,2,c
 26482  00596A  D789               	goto	l1187
 26483  00596C                     u16050:
 26484                           
 26485                           ; BSR set to: 0
 26486                           ;lorawan_eu.c: 810: }
 26487                           ;lorawan_eu.c: 811: }
 26488                           ;lorawan_eu.c: 813: if ( i != 0)
 26489                           
 26490                           ; BSR set to: 0
 26491  00596C  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26492  00596E  B4D8               	btfsc	status,2,c
 26493  005970  D007               	goto	l1199
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;lorawan_eu.c: 814: {
 26497                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 26498  005972  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 26499  005974  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 26500  005978  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 26501  00597C  6EDF               	movwf	indf2,c
 26502                           
 26503                           ;lorawan_eu.c: 816: }
 26504  00597E  D002               	goto	l1200
 26505  005980                     l1199:
 26506                           
 26507                           ; BSR set to: 0
 26508                           ;lorawan_eu.c: 817: else
 26509                           ;lorawan_eu.c: 818: {
 26510                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 26511                           
 26512                           ; BSR set to: 0
 26513  005980  0E09               	movlw	9
 26514  005982  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26515  005984                     l1200:
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;lorawan_eu.c: 820: }
 26519                           ;lorawan_eu.c: 821: return result;
 26520  005984  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 26521  005986  0012               	return	
 26522  005988                     __end_of_SearchAvailableChannel:
 26523                           	opt stack 0
 26524                           tosu	equ	0xFFF
 26525                           tosh	equ	0xFFE
 26526                           tosl	equ	0xFFD
 26527                           pclath	equ	0xFFA
 26528                           tblptru	equ	0xFF8
 26529                           tblptrh	equ	0xFF7
 26530                           tblptrl	equ	0xFF6
 26531                           tablat	equ	0xFF5
 26532                           prodh	equ	0xFF4
 26533                           prodl	equ	0xFF3
 26534                           intcon	equ	0xFF2
 26535                           intcon2	equ	0xFF1
 26536                           intcon3	equ	0xFF0
 26537                           indf0	equ	0xFEF
 26538                           postinc0	equ	0xFEE
 26539                           fsr0h	equ	0xFEA
 26540                           fsr0l	equ	0xFE9
 26541                           wreg	equ	0xFE8
 26542                           postinc1	equ	0xFE6
 26543                           postdec1	equ	0xFE5
 26544                           plusw1	equ	0xFE3
 26545                           fsr1h	equ	0xFE2
 26546                           fsr1l	equ	0xFE1
 26547                           indf2	equ	0xFDF
 26548                           postinc2	equ	0xFDE
 26549                           postdec2	equ	0xFDD
 26550                           plusw2	equ	0xFDB
 26551                           fsr2h	equ	0xFDA
 26552                           fsr2l	equ	0xFD9
 26553                           status	equ	0xFD8
 26554                           
 26555 ;; *************** function _ConfigureRadioTx *****************
 26556 ;; Defined at:
 26557 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26558 ;; Parameters:    Size  Location     Type
 26559 ;;  dataRate        1    wreg     unsigned char 
 26560 ;;  freq            4   19[BANK0 ] unsigned long 
 26561 ;; Auto vars:     Size  Location     Type
 26562 ;;  dataRate        1   23[BANK0 ] unsigned char 
 26563 ;;  txPower         1   24[BANK0 ] char 
 26564 ;; Return value:  Size  Location     Type
 26565 ;;                  1    wreg      void 
 26566 ;; Registers used:
 26567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26568 ;; Tracked objects:
 26569 ;;		On entry : 0/0
 26570 ;;		On exit  : 0/0
 26571 ;;		Unchanged: 0/0
 26572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26576 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26577 ;;Total ram usage:        6 bytes
 26578 ;; Hardware stack levels used:    1
 26579 ;; Hardware stack levels required when called:   10
 26580 ;; This function calls:
 26581 ;;		_ConfigureRadio
 26582 ;;		_RADIO_SetCRC
 26583 ;;		_RADIO_SetIQInverted
 26584 ;;		_RADIO_SetOutputPower
 26585 ;; This function is called by:
 26586 ;;		_SelectChannelForTransmission
 26587 ;; This function uses a non-reentrant model
 26588 ;;
 26589                           
 26590                           	psect	text123
 26591  007E1C                     __ptext123:
 26592                           	opt stack 0
 26593  007E1C                     _ConfigureRadioTx:
 26594                           	opt stack 18
 26595                           
 26596                           ; BSR set to: 0
 26597                           ;incstack = 0
 26598                           ;ConfigureRadioTx@dataRate stored from wreg
 26599  007E1C  0100               	movlb	0	; () banked
 26600  007E1E  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 26601                           
 26602                           ;lorawan_eu.c: 1257: int8_t txPower;
 26603                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 26604  007E20  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 26605  007E24  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 26606  007E28  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 26607  007E2C  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 26608  007E30  0100               	movlb	0	; () banked
 26609  007E32  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 26610  007E34  EC09  F036         	call	_ConfigureRadio
 26611                           
 26612                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 26613  007E38  0102               	movlb	2	; () banked
 26614  007E3A  51A4               	movf	(_loRa+164)& (0+255),w,b
 26615                           
 26616                           ; BSR set to: 2
 26617                           ;lorawan_eu.c: 1265: else
 26618                           ;lorawan_eu.c: 1266: {
 26619                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 26620                           
 26621                           ; BSR set to: 2
 26622                           
 26623                           ;lorawan_eu.c: 1264: }
 26624                           
 26625                           ; BSR set to: 2
 26626                           ;lorawan_eu.c: 1262: {
 26627                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 26628  007E3C  51E1               	movf	(_loRa+225)& (0+255),w,b
 26629  007E3E  0D01               	mullw	1
 26630  007E40  0EA2               	movlw	low _txPower868
 26631  007E42  24F3               	addwf	prodl,w,c
 26632  007E44  6EF6               	movwf	tblptrl,c
 26633  007E46  0EFF               	movlw	high _txPower868
 26634  007E48  20F4               	addwfc	prodh,w,c
 26635  007E4A  6EF7               	movwf	tblptrh,c
 26636  007E4C                     	if	1	;There are 3 active tblptr bytes
 26637  007E4C  6AF8               	clrf	tblptru,c
 26638  007E4E  0E00               	movlw	low (__mediumconst shr (0+16))
 26639  007E50  22F8               	addwfc	tblptru,f,c
 26640  007E52                     	endif
 26641  007E52  0008               	tblrd		*
 26642  007E54  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 26643                           
 26644                           ; BSR set to: 2
 26645                           ;lorawan_eu.c: 1268: }
 26646                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 26647                           
 26648                           ; BSR set to: 2
 26649  007E58  0100               	movlb	0	; () banked
 26650  007E5A  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 26651  007E5C  EC0C  F046         	call	_RADIO_SetOutputPower
 26652                           
 26653                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 26654  007E60  0E01               	movlw	1
 26655  007E62  EC16  F046         	call	_RADIO_SetCRC
 26656                           
 26657                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 26658  007E66  0E00               	movlw	0
 26659  007E68  EC11  F046         	call	_RADIO_SetIQInverted
 26660  007E6C  0012               	return		;funcret
 26661  007E6E                     __end_of_ConfigureRadioTx:
 26662                           	opt stack 0
 26663                           tosu	equ	0xFFF
 26664                           tosh	equ	0xFFE
 26665                           tosl	equ	0xFFD
 26666                           pclath	equ	0xFFA
 26667                           tblptru	equ	0xFF8
 26668                           tblptrh	equ	0xFF7
 26669                           tblptrl	equ	0xFF6
 26670                           tablat	equ	0xFF5
 26671                           prodh	equ	0xFF4
 26672                           prodl	equ	0xFF3
 26673                           intcon	equ	0xFF2
 26674                           intcon2	equ	0xFF1
 26675                           intcon3	equ	0xFF0
 26676                           indf0	equ	0xFEF
 26677                           postinc0	equ	0xFEE
 26678                           fsr0h	equ	0xFEA
 26679                           fsr0l	equ	0xFE9
 26680                           wreg	equ	0xFE8
 26681                           postinc1	equ	0xFE6
 26682                           postdec1	equ	0xFE5
 26683                           plusw1	equ	0xFE3
 26684                           fsr1h	equ	0xFE2
 26685                           fsr1l	equ	0xFE1
 26686                           indf2	equ	0xFDF
 26687                           postinc2	equ	0xFDE
 26688                           postdec2	equ	0xFDD
 26689                           plusw2	equ	0xFDB
 26690                           fsr2h	equ	0xFDA
 26691                           fsr2l	equ	0xFD9
 26692                           status	equ	0xFD8
 26693                           
 26694 ;; *************** function _RADIO_SetOutputPower *****************
 26695 ;; Defined at:
 26696 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26697 ;; Parameters:    Size  Location     Type
 26698 ;;  power           1    wreg     char 
 26699 ;; Auto vars:     Size  Location     Type
 26700 ;;  power           1    0[BANK0 ] char 
 26701 ;; Return value:  Size  Location     Type
 26702 ;;                  1    wreg      void 
 26703 ;; Registers used:
 26704 ;;		wreg
 26705 ;; Tracked objects:
 26706 ;;		On entry : 0/0
 26707 ;;		On exit  : 0/0
 26708 ;;		Unchanged: 0/0
 26709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26713 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26714 ;;Total ram usage:        1 bytes
 26715 ;; Hardware stack levels used:    1
 26716 ;; Hardware stack levels required when called:    7
 26717 ;; This function calls:
 26718 ;;		Nothing
 26719 ;; This function is called by:
 26720 ;;		_ConfigureRadioTx
 26721 ;; This function uses a non-reentrant model
 26722 ;;
 26723                           
 26724                           	psect	text124
 26725  008C18                     __ptext124:
 26726                           	opt stack 0
 26727  008C18                     _RADIO_SetOutputPower:
 26728                           	opt stack 20
 26729                           
 26730                           ;incstack = 0
 26731                           ;RADIO_SetOutputPower@power stored from wreg
 26732  008C18  0100               	movlb	0	; () banked
 26733  008C1A  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 26734                           
 26735                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 26736  008C1C  C060  F196         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 26737  008C20  0012               	return		;funcret
 26738  008C22                     __end_of_RADIO_SetOutputPower:
 26739                           	opt stack 0
 26740                           tosu	equ	0xFFF
 26741                           tosh	equ	0xFFE
 26742                           tosl	equ	0xFFD
 26743                           pclath	equ	0xFFA
 26744                           tblptru	equ	0xFF8
 26745                           tblptrh	equ	0xFF7
 26746                           tblptrl	equ	0xFF6
 26747                           tablat	equ	0xFF5
 26748                           prodh	equ	0xFF4
 26749                           prodl	equ	0xFF3
 26750                           intcon	equ	0xFF2
 26751                           intcon2	equ	0xFF1
 26752                           intcon3	equ	0xFF0
 26753                           indf0	equ	0xFEF
 26754                           postinc0	equ	0xFEE
 26755                           fsr0h	equ	0xFEA
 26756                           fsr0l	equ	0xFE9
 26757                           wreg	equ	0xFE8
 26758                           postinc1	equ	0xFE6
 26759                           postdec1	equ	0xFE5
 26760                           plusw1	equ	0xFE3
 26761                           fsr1h	equ	0xFE2
 26762                           fsr1l	equ	0xFE1
 26763                           indf2	equ	0xFDF
 26764                           postinc2	equ	0xFDE
 26765                           postdec2	equ	0xFDD
 26766                           plusw2	equ	0xFDB
 26767                           fsr2h	equ	0xFDA
 26768                           fsr2l	equ	0xFD9
 26769                           status	equ	0xFD8
 26770                           
 26771 ;; *************** function _RADIO_SetIQInverted *****************
 26772 ;; Defined at:
 26773 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26774 ;; Parameters:    Size  Location     Type
 26775 ;;  iqInverted      1    wreg     unsigned char 
 26776 ;; Auto vars:     Size  Location     Type
 26777 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 26778 ;; Return value:  Size  Location     Type
 26779 ;;                  1    wreg      void 
 26780 ;; Registers used:
 26781 ;;		wreg
 26782 ;; Tracked objects:
 26783 ;;		On entry : 0/0
 26784 ;;		On exit  : 0/0
 26785 ;;		Unchanged: 0/0
 26786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26790 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26791 ;;Total ram usage:        1 bytes
 26792 ;; Hardware stack levels used:    1
 26793 ;; Hardware stack levels required when called:    7
 26794 ;; This function calls:
 26795 ;;		Nothing
 26796 ;; This function is called by:
 26797 ;;		_ConfigureRadioTx
 26798 ;;		_ConfigureRadioRx
 26799 ;; This function uses a non-reentrant model
 26800 ;;
 26801                           
 26802                           	psect	text125
 26803  008C22                     __ptext125:
 26804                           	opt stack 0
 26805  008C22                     _RADIO_SetIQInverted:
 26806                           	opt stack 20
 26807                           
 26808                           ;incstack = 0
 26809                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 26810  008C22  0100               	movlb	0	; () banked
 26811  008C24  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 26812                           
 26813                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 26814  008C26  C060  F19B         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 26815  008C2A  0012               	return		;funcret
 26816  008C2C                     __end_of_RADIO_SetIQInverted:
 26817                           	opt stack 0
 26818                           tosu	equ	0xFFF
 26819                           tosh	equ	0xFFE
 26820                           tosl	equ	0xFFD
 26821                           pclath	equ	0xFFA
 26822                           tblptru	equ	0xFF8
 26823                           tblptrh	equ	0xFF7
 26824                           tblptrl	equ	0xFF6
 26825                           tablat	equ	0xFF5
 26826                           prodh	equ	0xFF4
 26827                           prodl	equ	0xFF3
 26828                           intcon	equ	0xFF2
 26829                           intcon2	equ	0xFF1
 26830                           intcon3	equ	0xFF0
 26831                           indf0	equ	0xFEF
 26832                           postinc0	equ	0xFEE
 26833                           fsr0h	equ	0xFEA
 26834                           fsr0l	equ	0xFE9
 26835                           wreg	equ	0xFE8
 26836                           postinc1	equ	0xFE6
 26837                           postdec1	equ	0xFE5
 26838                           plusw1	equ	0xFE3
 26839                           fsr1h	equ	0xFE2
 26840                           fsr1l	equ	0xFE1
 26841                           indf2	equ	0xFDF
 26842                           postinc2	equ	0xFDE
 26843                           postdec2	equ	0xFDD
 26844                           plusw2	equ	0xFDB
 26845                           fsr2h	equ	0xFDA
 26846                           fsr2l	equ	0xFD9
 26847                           status	equ	0xFD8
 26848                           
 26849 ;; *************** function _RADIO_SetCRC *****************
 26850 ;; Defined at:
 26851 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26852 ;; Parameters:    Size  Location     Type
 26853 ;;  crc             1    wreg     unsigned char 
 26854 ;; Auto vars:     Size  Location     Type
 26855 ;;  crc             1    0[BANK0 ] unsigned char 
 26856 ;; Return value:  Size  Location     Type
 26857 ;;                  1    wreg      void 
 26858 ;; Registers used:
 26859 ;;		wreg
 26860 ;; Tracked objects:
 26861 ;;		On entry : 0/0
 26862 ;;		On exit  : 0/0
 26863 ;;		Unchanged: 0/0
 26864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26868 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26869 ;;Total ram usage:        1 bytes
 26870 ;; Hardware stack levels used:    1
 26871 ;; Hardware stack levels required when called:    7
 26872 ;; This function calls:
 26873 ;;		Nothing
 26874 ;; This function is called by:
 26875 ;;		_ConfigureRadioTx
 26876 ;;		_ConfigureRadioRx
 26877 ;; This function uses a non-reentrant model
 26878 ;;
 26879                           
 26880                           	psect	text126
 26881  008C2C                     __ptext126:
 26882                           	opt stack 0
 26883  008C2C                     _RADIO_SetCRC:
 26884                           	opt stack 20
 26885                           
 26886                           ;incstack = 0
 26887                           ;RADIO_SetCRC@crc stored from wreg
 26888  008C2C  0100               	movlb	0	; () banked
 26889  008C2E  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 26890                           
 26891                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 26892  008C30  C060  F197         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 26893  008C34  0012               	return		;funcret
 26894  008C36                     __end_of_RADIO_SetCRC:
 26895                           	opt stack 0
 26896                           tosu	equ	0xFFF
 26897                           tosh	equ	0xFFE
 26898                           tosl	equ	0xFFD
 26899                           pclath	equ	0xFFA
 26900                           tblptru	equ	0xFF8
 26901                           tblptrh	equ	0xFF7
 26902                           tblptrl	equ	0xFF6
 26903                           tablat	equ	0xFF5
 26904                           prodh	equ	0xFF4
 26905                           prodl	equ	0xFF3
 26906                           intcon	equ	0xFF2
 26907                           intcon2	equ	0xFF1
 26908                           intcon3	equ	0xFF0
 26909                           indf0	equ	0xFEF
 26910                           postinc0	equ	0xFEE
 26911                           fsr0h	equ	0xFEA
 26912                           fsr0l	equ	0xFE9
 26913                           wreg	equ	0xFE8
 26914                           postinc1	equ	0xFE6
 26915                           postdec1	equ	0xFE5
 26916                           plusw1	equ	0xFE3
 26917                           fsr1h	equ	0xFE2
 26918                           fsr1l	equ	0xFE1
 26919                           indf2	equ	0xFDF
 26920                           postinc2	equ	0xFDE
 26921                           postdec2	equ	0xFDD
 26922                           plusw2	equ	0xFDB
 26923                           fsr2h	equ	0xFDA
 26924                           fsr2l	equ	0xFD9
 26925                           status	equ	0xFD8
 26926                           
 26927 ;; *************** function _ConfigureRadio *****************
 26928 ;; Defined at:
 26929 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26930 ;; Parameters:    Size  Location     Type
 26931 ;;  dataRate        1    wreg     unsigned char 
 26932 ;;  freq            4   14[BANK0 ] unsigned long 
 26933 ;; Auto vars:     Size  Location     Type
 26934 ;;  dataRate        1   18[BANK0 ] unsigned char 
 26935 ;; Return value:  Size  Location     Type
 26936 ;;                  1    wreg      void 
 26937 ;; Registers used:
 26938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26939 ;; Tracked objects:
 26940 ;;		On entry : 0/0
 26941 ;;		On exit  : 0/0
 26942 ;;		Unchanged: 0/0
 26943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26947 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26948 ;;Total ram usage:        5 bytes
 26949 ;; Hardware stack levels used:    1
 26950 ;; Hardware stack levels required when called:    9
 26951 ;; This function calls:
 26952 ;;		_RADIO_SetBandwidth
 26953 ;;		_RADIO_SetChannelFrequency
 26954 ;;		_RADIO_SetFSKSyncWord
 26955 ;;		_RADIO_SetFrequencyHopPeriod
 26956 ;;		_RADIO_SetLoRaSyncWord
 26957 ;;		_RADIO_SetModulation
 26958 ;;		_RADIO_SetSpreadingFactor
 26959 ;; This function is called by:
 26960 ;;		_ConfigureRadioTx
 26961 ;;		_ConfigureRadioRx
 26962 ;; This function uses a non-reentrant model
 26963 ;;
 26964                           
 26965                           	psect	text127
 26966  006C12                     __ptext127:
 26967                           	opt stack 0
 26968  006C12                     _ConfigureRadio:
 26969                           	opt stack 18
 26970                           
 26971                           ;incstack = 0
 26972                           ;ConfigureRadio@dataRate stored from wreg
 26973  006C12  0100               	movlb	0	; () banked
 26974  006C14  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 26975                           
 26976                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 26977  006C16  0100               	movlb	0	; () banked
 26978  006C18  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 26979  006C1A  0D01               	mullw	1
 26980  006C1C  0E67               	movlw	low _modulation
 26981  006C1E  24F3               	addwf	prodl,w,c
 26982  006C20  6EF6               	movwf	tblptrl,c
 26983  006C22  0EFF               	movlw	high _modulation
 26984  006C24  20F4               	addwfc	prodh,w,c
 26985  006C26  6EF7               	movwf	tblptrh,c
 26986  006C28                     	if	1	;There are 3 active tblptr bytes
 26987  006C28  6AF8               	clrf	tblptru,c
 26988  006C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 26989  006C2C  22F8               	addwfc	tblptru,f,c
 26990  006C2E                     	endif
 26991  006C2E  0008               	tblrd		*
 26992  006C30  50F5               	movf	tablat,w,c
 26993  006C32  EC20  F046         	call	_RADIO_SetModulation
 26994                           
 26995                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 26996  006C36  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 26997  006C3A  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 26998  006C3E  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 26999  006C42  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 27000  006C46  EC25  F038         	call	_RADIO_SetChannelFrequency	;wreg free
 27001                           
 27002                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 27003  006C4A  0E00               	movlw	0
 27004  006C4C  0100               	movlb	0	; () banked
 27005  006C4E  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 27006  006C50  0E00               	movlw	0
 27007  006C52  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 27008  006C54  EC25  F046         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 27009                           
 27010                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 27011  006C58  0E07               	movlw	7
 27012  006C5A  0100               	movlb	0	; () banked
 27013  006C5C  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 27014  006C5E  D024               	goto	l1213
 27015                           
 27016                           ; BSR set to: 0
 27017                           ;lorawan_eu.c: 870: {
 27018                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 27019  006C60  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 27020  006C62  0D01               	mullw	1
 27021  006C64  0E95               	movlw	low _spreadingFactor
 27022  006C66  24F3               	addwf	prodl,w,c
 27023  006C68  6EF6               	movwf	tblptrl,c
 27024  006C6A  0EFF               	movlw	high _spreadingFactor
 27025  006C6C  20F4               	addwfc	prodh,w,c
 27026  006C6E  6EF7               	movwf	tblptrh,c
 27027  006C70                     	if	1	;There are 3 active tblptr bytes
 27028  006C70  6AF8               	clrf	tblptru,c
 27029  006C72  0E00               	movlw	low (__mediumconst shr (0+16))
 27030  006C74  22F8               	addwfc	tblptru,f,c
 27031  006C76                     	endif
 27032  006C76  0008               	tblrd		*
 27033  006C78  50F5               	movf	tablat,w,c
 27034  006C7A  EC1B  F046         	call	_RADIO_SetSpreadingFactor
 27035                           
 27036                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 27037  006C7E  0100               	movlb	0	; () banked
 27038  006C80  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 27039  006C82  0D01               	mullw	1
 27040  006C84  0E8E               	movlw	low _bandwidth
 27041  006C86  24F3               	addwf	prodl,w,c
 27042  006C88  6EF6               	movwf	tblptrl,c
 27043  006C8A  0EFF               	movlw	high _bandwidth
 27044  006C8C  20F4               	addwfc	prodh,w,c
 27045  006C8E  6EF7               	movwf	tblptrh,c
 27046  006C90                     	if	1	;There are 3 active tblptr bytes
 27047  006C90  6AF8               	clrf	tblptru,c
 27048  006C92  0E00               	movlw	low (__mediumconst shr (0+16))
 27049  006C94  22F8               	addwfc	tblptru,f,c
 27050  006C96                     	endif
 27051  006C96  0008               	tblrd		*
 27052  006C98  50F5               	movf	tablat,w,c
 27053  006C9A  EC2A  F046         	call	_RADIO_SetBandwidth
 27054                           
 27055                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 27056  006C9E  0102               	movlb	2	; () banked
 27057  006CA0  51F4               	movf	(_loRa+244)& (0+255),w,b
 27058  006CA2  EC2F  F046         	call	_RADIO_SetLoRaSyncWord
 27059                           
 27060                           ;lorawan_eu.c: 875: }
 27061  006CA6  0012               	return	
 27062  006CA8                     l1213:
 27063                           
 27064                           ;lorawan_eu.c: 876: else
 27065                           ;lorawan_eu.c: 877: {
 27066                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 27067  006CA8  0EFC               	movlw	low _FskSyncWordBuff
 27068  006CAA  0100               	movlb	0	; () banked
 27069  006CAC  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 27070  006CAE  0EFF               	movlw	high _FskSyncWordBuff
 27071  006CB0  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 27072  006CB2  0E03               	movlw	3
 27073  006CB4  EC3E  F042         	call	_RADIO_SetFSKSyncWord
 27074  006CB8  0012               	return	
 27075  006CBA                     __end_of_ConfigureRadio:
 27076                           	opt stack 0
 27077                           tosu	equ	0xFFF
 27078                           tosh	equ	0xFFE
 27079                           tosl	equ	0xFFD
 27080                           pclath	equ	0xFFA
 27081                           tblptru	equ	0xFF8
 27082                           tblptrh	equ	0xFF7
 27083                           tblptrl	equ	0xFF6
 27084                           tablat	equ	0xFF5
 27085                           prodh	equ	0xFF4
 27086                           prodl	equ	0xFF3
 27087                           intcon	equ	0xFF2
 27088                           intcon2	equ	0xFF1
 27089                           intcon3	equ	0xFF0
 27090                           indf0	equ	0xFEF
 27091                           postinc0	equ	0xFEE
 27092                           fsr0h	equ	0xFEA
 27093                           fsr0l	equ	0xFE9
 27094                           wreg	equ	0xFE8
 27095                           postinc1	equ	0xFE6
 27096                           postdec1	equ	0xFE5
 27097                           plusw1	equ	0xFE3
 27098                           fsr1h	equ	0xFE2
 27099                           fsr1l	equ	0xFE1
 27100                           indf2	equ	0xFDF
 27101                           postinc2	equ	0xFDE
 27102                           postdec2	equ	0xFDD
 27103                           plusw2	equ	0xFDB
 27104                           fsr2h	equ	0xFDA
 27105                           fsr2l	equ	0xFD9
 27106                           status	equ	0xFD8
 27107                           
 27108 ;; *************** function _RADIO_SetSpreadingFactor *****************
 27109 ;; Defined at:
 27110 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27111 ;; Parameters:    Size  Location     Type
 27112 ;;  spreadingFac    1    wreg     enum E6994
 27113 ;; Auto vars:     Size  Location     Type
 27114 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 27115 ;; Return value:  Size  Location     Type
 27116 ;;                  1    wreg      void 
 27117 ;; Registers used:
 27118 ;;		wreg
 27119 ;; Tracked objects:
 27120 ;;		On entry : 0/0
 27121 ;;		On exit  : 0/0
 27122 ;;		Unchanged: 0/0
 27123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27128 ;;Total ram usage:        1 bytes
 27129 ;; Hardware stack levels used:    1
 27130 ;; Hardware stack levels required when called:    7
 27131 ;; This function calls:
 27132 ;;		Nothing
 27133 ;; This function is called by:
 27134 ;;		_ConfigureRadio
 27135 ;; This function uses a non-reentrant model
 27136 ;;
 27137                           
 27138                           	psect	text128
 27139  008C36                     __ptext128:
 27140                           	opt stack 0
 27141  008C36                     _RADIO_SetSpreadingFactor:
 27142                           	opt stack 19
 27143                           
 27144                           ;incstack = 0
 27145                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 27146  008C36  0100               	movlb	0	; () banked
 27147  008C38  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 27148                           
 27149                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 27150  008C3A  C060  F194         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 27151  008C3E  0012               	return		;funcret
 27152  008C40                     __end_of_RADIO_SetSpreadingFactor:
 27153                           	opt stack 0
 27154                           tosu	equ	0xFFF
 27155                           tosh	equ	0xFFE
 27156                           tosl	equ	0xFFD
 27157                           pclath	equ	0xFFA
 27158                           tblptru	equ	0xFF8
 27159                           tblptrh	equ	0xFF7
 27160                           tblptrl	equ	0xFF6
 27161                           tablat	equ	0xFF5
 27162                           prodh	equ	0xFF4
 27163                           prodl	equ	0xFF3
 27164                           intcon	equ	0xFF2
 27165                           intcon2	equ	0xFF1
 27166                           intcon3	equ	0xFF0
 27167                           indf0	equ	0xFEF
 27168                           postinc0	equ	0xFEE
 27169                           fsr0h	equ	0xFEA
 27170                           fsr0l	equ	0xFE9
 27171                           wreg	equ	0xFE8
 27172                           postinc1	equ	0xFE6
 27173                           postdec1	equ	0xFE5
 27174                           plusw1	equ	0xFE3
 27175                           fsr1h	equ	0xFE2
 27176                           fsr1l	equ	0xFE1
 27177                           indf2	equ	0xFDF
 27178                           postinc2	equ	0xFDE
 27179                           postdec2	equ	0xFDD
 27180                           plusw2	equ	0xFDB
 27181                           fsr2h	equ	0xFDA
 27182                           fsr2l	equ	0xFD9
 27183                           status	equ	0xFD8
 27184                           
 27185 ;; *************** function _RADIO_SetModulation *****************
 27186 ;; Defined at:
 27187 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27188 ;; Parameters:    Size  Location     Type
 27189 ;;  modulation      1    wreg     enum E6984
 27190 ;; Auto vars:     Size  Location     Type
 27191 ;;  modulation      1    0[BANK0 ] enum E6984
 27192 ;; Return value:  Size  Location     Type
 27193 ;;                  1    wreg      void 
 27194 ;; Registers used:
 27195 ;;		wreg
 27196 ;; Tracked objects:
 27197 ;;		On entry : 0/0
 27198 ;;		On exit  : 0/0
 27199 ;;		Unchanged: 0/0
 27200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27205 ;;Total ram usage:        1 bytes
 27206 ;; Hardware stack levels used:    1
 27207 ;; Hardware stack levels required when called:    7
 27208 ;; This function calls:
 27209 ;;		Nothing
 27210 ;; This function is called by:
 27211 ;;		_ConfigureRadio
 27212 ;; This function uses a non-reentrant model
 27213 ;;
 27214                           
 27215                           	psect	text129
 27216  008C40                     __ptext129:
 27217                           	opt stack 0
 27218  008C40                     _RADIO_SetModulation:
 27219                           	opt stack 19
 27220                           
 27221                           ;incstack = 0
 27222                           ;RADIO_SetModulation@modulation stored from wreg
 27223  008C40  0100               	movlb	0	; () banked
 27224  008C42  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 27225                           
 27226                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 27227  008C44  C060  F193         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 27228  008C48  0012               	return		;funcret
 27229  008C4A                     __end_of_RADIO_SetModulation:
 27230                           	opt stack 0
 27231                           tosu	equ	0xFFF
 27232                           tosh	equ	0xFFE
 27233                           tosl	equ	0xFFD
 27234                           pclath	equ	0xFFA
 27235                           tblptru	equ	0xFF8
 27236                           tblptrh	equ	0xFF7
 27237                           tblptrl	equ	0xFF6
 27238                           tablat	equ	0xFF5
 27239                           prodh	equ	0xFF4
 27240                           prodl	equ	0xFF3
 27241                           intcon	equ	0xFF2
 27242                           intcon2	equ	0xFF1
 27243                           intcon3	equ	0xFF0
 27244                           indf0	equ	0xFEF
 27245                           postinc0	equ	0xFEE
 27246                           fsr0h	equ	0xFEA
 27247                           fsr0l	equ	0xFE9
 27248                           wreg	equ	0xFE8
 27249                           postinc1	equ	0xFE6
 27250                           postdec1	equ	0xFE5
 27251                           plusw1	equ	0xFE3
 27252                           fsr1h	equ	0xFE2
 27253                           fsr1l	equ	0xFE1
 27254                           indf2	equ	0xFDF
 27255                           postinc2	equ	0xFDE
 27256                           postdec2	equ	0xFDD
 27257                           plusw2	equ	0xFDB
 27258                           fsr2h	equ	0xFDA
 27259                           fsr2l	equ	0xFD9
 27260                           status	equ	0xFD8
 27261                           
 27262 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 27263 ;; Defined at:
 27264 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27265 ;; Parameters:    Size  Location     Type
 27266 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 27267 ;; Auto vars:     Size  Location     Type
 27268 ;;		None
 27269 ;; Return value:  Size  Location     Type
 27270 ;;                  1    wreg      void 
 27271 ;; Registers used:
 27272 ;;		None
 27273 ;; Tracked objects:
 27274 ;;		On entry : 0/0
 27275 ;;		On exit  : 0/0
 27276 ;;		Unchanged: 0/0
 27277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27281 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27282 ;;Total ram usage:        2 bytes
 27283 ;; Hardware stack levels used:    1
 27284 ;; Hardware stack levels required when called:    7
 27285 ;; This function calls:
 27286 ;;		Nothing
 27287 ;; This function is called by:
 27288 ;;		_ConfigureRadio
 27289 ;; This function uses a non-reentrant model
 27290 ;;
 27291                           
 27292                           	psect	text130
 27293  008C4A                     __ptext130:
 27294                           	opt stack 0
 27295  008C4A                     _RADIO_SetFrequencyHopPeriod:
 27296                           	opt stack 19
 27297                           
 27298                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 27299                           
 27300                           ;incstack = 0
 27301  008C4A  C060  F199         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 27302  008C4E  C061  F19A         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 27303  008C52  0012               	return		;funcret
 27304  008C54                     __end_of_RADIO_SetFrequencyHopPeriod:
 27305                           	opt stack 0
 27306                           tosu	equ	0xFFF
 27307                           tosh	equ	0xFFE
 27308                           tosl	equ	0xFFD
 27309                           pclath	equ	0xFFA
 27310                           tblptru	equ	0xFF8
 27311                           tblptrh	equ	0xFF7
 27312                           tblptrl	equ	0xFF6
 27313                           tablat	equ	0xFF5
 27314                           prodh	equ	0xFF4
 27315                           prodl	equ	0xFF3
 27316                           intcon	equ	0xFF2
 27317                           intcon2	equ	0xFF1
 27318                           intcon3	equ	0xFF0
 27319                           indf0	equ	0xFEF
 27320                           postinc0	equ	0xFEE
 27321                           fsr0h	equ	0xFEA
 27322                           fsr0l	equ	0xFE9
 27323                           wreg	equ	0xFE8
 27324                           postinc1	equ	0xFE6
 27325                           postdec1	equ	0xFE5
 27326                           plusw1	equ	0xFE3
 27327                           fsr1h	equ	0xFE2
 27328                           fsr1l	equ	0xFE1
 27329                           indf2	equ	0xFDF
 27330                           postinc2	equ	0xFDE
 27331                           postdec2	equ	0xFDD
 27332                           plusw2	equ	0xFDB
 27333                           fsr2h	equ	0xFDA
 27334                           fsr2l	equ	0xFD9
 27335                           status	equ	0xFD8
 27336                           
 27337 ;; *************** function _RADIO_SetFSKSyncWord *****************
 27338 ;; Defined at:
 27339 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27340 ;; Parameters:    Size  Location     Type
 27341 ;;  syncWordLen     1    wreg     unsigned char 
 27342 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 27343 ;;		 -> FskSyncWordBuff(3), 
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 27346 ;; Return value:  Size  Location     Type
 27347 ;;                  1    wreg      void 
 27348 ;; Registers used:
 27349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27350 ;; Tracked objects:
 27351 ;;		On entry : 0/0
 27352 ;;		On exit  : 0/0
 27353 ;;		Unchanged: 0/0
 27354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27359 ;;Total ram usage:        3 bytes
 27360 ;; Hardware stack levels used:    1
 27361 ;; Hardware stack levels required when called:    8
 27362 ;; This function calls:
 27363 ;;		_memcpy
 27364 ;; This function is called by:
 27365 ;;		_ConfigureRadio
 27366 ;; This function uses a non-reentrant model
 27367 ;;
 27368                           
 27369                           	psect	text131
 27370  00847C                     __ptext131:
 27371                           	opt stack 0
 27372  00847C                     _RADIO_SetFSKSyncWord:
 27373                           	opt stack 18
 27374                           
 27375                           ;incstack = 0
 27376                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 27377  00847C  0100               	movlb	0	; () banked
 27378  00847E  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27379                           
 27380                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 27381  008480  0E08               	movlw	8
 27382  008482  0100               	movlb	0	; () banked
 27383  008484  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27384  008486  D002               	goto	l849
 27385                           
 27386                           ; BSR set to: 0
 27387                           ;radio_driver_SX1276.c: 1627: {
 27388                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 27389  008488  0E08               	movlw	8
 27390  00848A  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27391  00848C                     l849:
 27392                           
 27393                           ; BSR set to: 0
 27394                           ;radio_driver_SX1276.c: 1629: }
 27395                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 27396                           
 27397                           ; BSR set to: 0
 27398  00848C  0E8A               	movlw	low (_RadioConfiguration+15)
 27399  00848E  6F60               	movwf	memcpy@d1& (0+255),b
 27400  008490  0E01               	movlw	high (_RadioConfiguration+15)
 27401  008492  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27402  008494  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 27403  008498  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 27404  00849C  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 27405  0084A0  6B65               	clrf	(memcpy@n+1)& (0+255),b
 27406  0084A2  EC22  F03D         	call	_memcpy	;wreg free
 27407                           
 27408                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 27409  0084A6  C06D  F192         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 27410  0084AA  0012               	return		;funcret
 27411  0084AC                     __end_of_RADIO_SetFSKSyncWord:
 27412                           	opt stack 0
 27413                           tosu	equ	0xFFF
 27414                           tosh	equ	0xFFE
 27415                           tosl	equ	0xFFD
 27416                           pclath	equ	0xFFA
 27417                           tblptru	equ	0xFF8
 27418                           tblptrh	equ	0xFF7
 27419                           tblptrl	equ	0xFF6
 27420                           tablat	equ	0xFF5
 27421                           prodh	equ	0xFF4
 27422                           prodl	equ	0xFF3
 27423                           intcon	equ	0xFF2
 27424                           intcon2	equ	0xFF1
 27425                           intcon3	equ	0xFF0
 27426                           indf0	equ	0xFEF
 27427                           postinc0	equ	0xFEE
 27428                           fsr0h	equ	0xFEA
 27429                           fsr0l	equ	0xFE9
 27430                           wreg	equ	0xFE8
 27431                           postinc1	equ	0xFE6
 27432                           postdec1	equ	0xFE5
 27433                           plusw1	equ	0xFE3
 27434                           fsr1h	equ	0xFE2
 27435                           fsr1l	equ	0xFE1
 27436                           indf2	equ	0xFDF
 27437                           postinc2	equ	0xFDE
 27438                           postdec2	equ	0xFDD
 27439                           plusw2	equ	0xFDB
 27440                           fsr2h	equ	0xFDA
 27441                           fsr2l	equ	0xFD9
 27442                           status	equ	0xFD8
 27443                           
 27444 ;; *************** function _RADIO_SetChannelFrequency *****************
 27445 ;; Defined at:
 27446 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27447 ;; Parameters:    Size  Location     Type
 27448 ;;  frequency       4    0[BANK0 ] unsigned long 
 27449 ;; Auto vars:     Size  Location     Type
 27450 ;;		None
 27451 ;; Return value:  Size  Location     Type
 27452 ;;                  2    0[BANK0 ] enum E7038
 27453 ;; Registers used:
 27454 ;;		wreg, status,2, status,0
 27455 ;; Tracked objects:
 27456 ;;		On entry : 0/0
 27457 ;;		On exit  : 0/0
 27458 ;;		Unchanged: 0/0
 27459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27463 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27464 ;;Total ram usage:        4 bytes
 27465 ;; Hardware stack levels used:    1
 27466 ;; Hardware stack levels required when called:    7
 27467 ;; This function calls:
 27468 ;;		Nothing
 27469 ;; This function is called by:
 27470 ;;		_ConfigureRadio
 27471 ;; This function uses a non-reentrant model
 27472 ;;
 27473                           
 27474                           	psect	text132
 27475  00704A                     __ptext132:
 27476                           	opt stack 0
 27477  00704A                     _RADIO_SetChannelFrequency:
 27478                           	opt stack 19
 27479                           
 27480                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 27481                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 27482                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 27483                           
 27484                           ;incstack = 0
 27485  00704A  0E40               	movlw	64
 27486  00704C  0100               	movlb	0	; () banked
 27487  00704E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27488  007050  0E74               	movlw	116
 27489  007052  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27490  007054  0E2A               	movlw	42
 27491  007056  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27492  007058  0E08               	movlw	8
 27493  00705A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27494  00705C  A0D8               	btfss	status,0,c
 27495  00705E  D00A               	goto	u14720
 27496                           
 27497                           ; BSR set to: 0
 27498  007060  0EC1               	movlw	193
 27499  007062  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27500  007064  0E49               	movlw	73
 27501  007066  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27502  007068  0E6E               	movlw	110
 27503  00706A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27504  00706C  0E0A               	movlw	10
 27505  00706E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27506  007070  A0D8               	btfss	status,0,c
 27507  007072  D027               	goto	u14760
 27508  007074                     u14720:
 27509                           
 27510                           ; BSR set to: 0
 27511                           
 27512                           ; BSR set to: 0
 27513  007074  0E80               	movlw	128
 27514  007076  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27515  007078  0E1A               	movlw	26
 27516  00707A  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27517  00707C  0E70               	movlw	112
 27518  00707E  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27519  007080  0E18               	movlw	24
 27520  007082  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27521  007084  A0D8               	btfss	status,0,c
 27522  007086  D00A               	goto	u14740
 27523                           
 27524                           ; BSR set to: 0
 27525  007088  0E41               	movlw	65
 27526  00708A  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27527  00708C  0EDD               	movlw	221
 27528  00708E  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27529  007090  0E4A               	movlw	74
 27530  007092  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27531  007094  0E1F               	movlw	31
 27532  007096  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27533  007098  A0D8               	btfss	status,0,c
 27534  00709A  D013               	goto	u14760
 27535  00709C                     u14740:
 27536                           
 27537                           ; BSR set to: 0
 27538                           
 27539                           ; BSR set to: 0
 27540  00709C  0E80               	movlw	128
 27541  00709E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27542  0070A0  0E13               	movlw	19
 27543  0070A2  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27544  0070A4  0E61               	movlw	97
 27545  0070A6  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27546  0070A8  0E33               	movlw	51
 27547  0070AA  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27548  0070AC  A0D8               	btfss	status,0,c
 27549  0070AE  0012               	return	
 27550                           
 27551                           ; BSR set to: 0
 27552  0070B0  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27553  0070B2  0EF7               	movlw	247
 27554  0070B4  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27555  0070B6  0ECB               	movlw	203
 27556  0070B8  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27557  0070BA  0E3C               	movlw	60
 27558  0070BC  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27559  0070BE  B0D8               	btfsc	status,0,c
 27560  0070C0  0012               	return	
 27561  0070C2                     u14760:
 27562                           
 27563                           ; BSR set to: 0
 27564                           ;radio_driver_SX1276.c: 1449: {
 27565                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 27566  0070C2  C060  F17B         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 27567  0070C6  C061  F17C         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 27568  0070CA  C062  F17D         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 27569  0070CE  C063  F17E         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 27570                           
 27571                           ; BSR set to: 0
 27572                           ;radio_driver_SX1276.c: 1453: else
 27573                           ;radio_driver_SX1276.c: 1454: {
 27574                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 27575                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27576                           
 27577                           ; BSR set to: 0
 27578                           ;radio_driver_SX1276.c: 1452: }
 27579                           
 27580                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 27581                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27582  0070D2  0012               	return	
 27583  0070D4                     __end_of_RADIO_SetChannelFrequency:
 27584                           	opt stack 0
 27585                           tosu	equ	0xFFF
 27586                           tosh	equ	0xFFE
 27587                           tosl	equ	0xFFD
 27588                           pclath	equ	0xFFA
 27589                           tblptru	equ	0xFF8
 27590                           tblptrh	equ	0xFF7
 27591                           tblptrl	equ	0xFF6
 27592                           tablat	equ	0xFF5
 27593                           prodh	equ	0xFF4
 27594                           prodl	equ	0xFF3
 27595                           intcon	equ	0xFF2
 27596                           intcon2	equ	0xFF1
 27597                           intcon3	equ	0xFF0
 27598                           indf0	equ	0xFEF
 27599                           postinc0	equ	0xFEE
 27600                           fsr0h	equ	0xFEA
 27601                           fsr0l	equ	0xFE9
 27602                           wreg	equ	0xFE8
 27603                           postinc1	equ	0xFE6
 27604                           postdec1	equ	0xFE5
 27605                           plusw1	equ	0xFE3
 27606                           fsr1h	equ	0xFE2
 27607                           fsr1l	equ	0xFE1
 27608                           indf2	equ	0xFDF
 27609                           postinc2	equ	0xFDE
 27610                           postdec2	equ	0xFDD
 27611                           plusw2	equ	0xFDB
 27612                           fsr2h	equ	0xFDA
 27613                           fsr2l	equ	0xFD9
 27614                           status	equ	0xFD8
 27615                           
 27616 ;; *************** function _RADIO_SetBandwidth *****************
 27617 ;; Defined at:
 27618 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27619 ;; Parameters:    Size  Location     Type
 27620 ;;  bandwidth       1    wreg     enum E7002
 27621 ;; Auto vars:     Size  Location     Type
 27622 ;;  bandwidth       1    0[BANK0 ] enum E7002
 27623 ;; Return value:  Size  Location     Type
 27624 ;;                  1    wreg      void 
 27625 ;; Registers used:
 27626 ;;		wreg
 27627 ;; Tracked objects:
 27628 ;;		On entry : 0/0
 27629 ;;		On exit  : 0/0
 27630 ;;		Unchanged: 0/0
 27631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27636 ;;Total ram usage:        1 bytes
 27637 ;; Hardware stack levels used:    1
 27638 ;; Hardware stack levels required when called:    7
 27639 ;; This function calls:
 27640 ;;		Nothing
 27641 ;; This function is called by:
 27642 ;;		_ConfigureRadio
 27643 ;; This function uses a non-reentrant model
 27644 ;;
 27645                           
 27646                           	psect	text133
 27647  008C54                     __ptext133:
 27648                           	opt stack 0
 27649  008C54                     _RADIO_SetBandwidth:
 27650                           	opt stack 19
 27651                           
 27652                           ; BSR set to: 0
 27653                           ;incstack = 0
 27654                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 27655  008C54  0100               	movlb	0	; () banked
 27656  008C56  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 27657                           
 27658                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 27659  008C58  C060  F195         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 27660  008C5C  0012               	return		;funcret
 27661  008C5E                     __end_of_RADIO_SetBandwidth:
 27662                           	opt stack 0
 27663                           tosu	equ	0xFFF
 27664                           tosh	equ	0xFFE
 27665                           tosl	equ	0xFFD
 27666                           pclath	equ	0xFFA
 27667                           tblptru	equ	0xFF8
 27668                           tblptrh	equ	0xFF7
 27669                           tblptrl	equ	0xFF6
 27670                           tablat	equ	0xFF5
 27671                           prodh	equ	0xFF4
 27672                           prodl	equ	0xFF3
 27673                           intcon	equ	0xFF2
 27674                           intcon2	equ	0xFF1
 27675                           intcon3	equ	0xFF0
 27676                           indf0	equ	0xFEF
 27677                           postinc0	equ	0xFEE
 27678                           fsr0h	equ	0xFEA
 27679                           fsr0l	equ	0xFE9
 27680                           wreg	equ	0xFE8
 27681                           postinc1	equ	0xFE6
 27682                           postdec1	equ	0xFE5
 27683                           plusw1	equ	0xFE3
 27684                           fsr1h	equ	0xFE2
 27685                           fsr1l	equ	0xFE1
 27686                           indf2	equ	0xFDF
 27687                           postinc2	equ	0xFDE
 27688                           postdec2	equ	0xFDD
 27689                           plusw2	equ	0xFDB
 27690                           fsr2h	equ	0xFDA
 27691                           fsr2l	equ	0xFD9
 27692                           status	equ	0xFD8
 27693                           
 27694 ;; *************** function _RADIO_Transmit *****************
 27695 ;; Defined at:
 27696 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27697 ;; Parameters:    Size  Location     Type
 27698 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 27699 ;;		 -> macBuffer(271), 
 27700 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 27701 ;; Auto vars:     Size  Location     Type
 27702 ;;  i               1   97[BANK0 ] unsigned char 
 27703 ;;  regValue        1   96[BANK0 ] unsigned char 
 27704 ;; Return value:  Size  Location     Type
 27705 ;;                  2   81[BANK0 ] enum E7038
 27706 ;; Registers used:
 27707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27708 ;; Tracked objects:
 27709 ;;		On entry : 0/0
 27710 ;;		On exit  : 0/0
 27711 ;;		Unchanged: 0/0
 27712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27716 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27717 ;;Total ram usage:       17 bytes
 27718 ;; Hardware stack levels used:    1
 27719 ;; Hardware stack levels required when called:   12
 27720 ;; This function calls:
 27721 ;;		_HALSPICSAssert
 27722 ;;		_HALSPICSDeassert
 27723 ;;		_HALSPISend
 27724 ;;		_RADIO_RegisterRead
 27725 ;;		_RADIO_RegisterWrite
 27726 ;;		_RADIO_WriteConfiguration
 27727 ;;		_RADIO_WriteMode
 27728 ;;		_SwTimerSetTimeout
 27729 ;;		_SwTimerStart
 27730 ;;		_SwTimerStop
 27731 ;;		___lldiv
 27732 ;; This function is called by:
 27733 ;;		_LORAWAN_RxTimeout
 27734 ;;		_LORAWAN_Join
 27735 ;;		_LORAWAN_Send
 27736 ;;		_AckRetransmissionCallback
 27737 ;;		_UnconfirmedTransmissionCallback
 27738 ;; This function uses a non-reentrant model
 27739 ;;
 27740                           
 27741                           	psect	text134
 27742  003A20                     __ptext134:
 27743                           	opt stack 0
 27744  003A20                     _RADIO_Transmit:
 27745                           	opt stack 17
 27746                           
 27747                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 27748                           ;radio_driver_SX1276.c: 789: uint8_t i;
 27749                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27750                           
 27751                           ;incstack = 0
 27752  003A20  0101               	movlb	1	; () banked
 27753  003A22  A59E               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27754  003A24  D006               	goto	l544
 27755                           
 27756                           ; BSR set to: 1
 27757                           ;radio_driver_SX1276.c: 792: {
 27758                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 27759  003A26  0E80               	movlw	128
 27760  003A28  0100               	movlb	0	; () banked
 27761  003A2A  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27762  003A2C  0E03               	movlw	3
 27763  003A2E  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27764                           
 27765                           ; BSR set to: 0
 27766  003A30  0012               	return	
 27767  003A32                     l544:
 27768                           
 27769                           ;radio_driver_SX1276.c: 794: }
 27770                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27771                           
 27772                           ; BSR set to: 0
 27773  003A32  C19E  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 27774  003A36  0E03               	movlw	3
 27775  003A38  0100               	movlb	0	; () banked
 27776  003A3A  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 27777  003A3C  B4D8               	btfsc	status,2,c
 27778  003A3E  D005               	goto	l546
 27779                           
 27780                           ; BSR set to: 0
 27781                           ;radio_driver_SX1276.c: 797: {
 27782                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 27783  003A40  0E80               	movlw	128
 27784  003A42  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27785  003A44  0E04               	movlw	4
 27786  003A46  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27787                           
 27788                           ; BSR set to: 0
 27789  003A48  0012               	return	
 27790  003A4A                     l546:
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;radio_driver_SX1276.c: 799: }
 27794                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 27795                           
 27796                           ; BSR set to: 0
 27797  003A4A  0101               	movlb	1	; () banked
 27798  003A4C  5193               	movf	(_RadioConfiguration+24)& (0+255),w,b
 27799  003A4E  A4D8               	btfss	status,2,c
 27800  003A50  D009               	goto	l547
 27801                           
 27802                           ; BSR set to: 1
 27803  003A52  0E40               	movlw	64
 27804  003A54  0100               	movlb	0	; () banked
 27805  003A56  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 27806  003A58  D005               	goto	l547
 27807                           
 27808                           ; BSR set to: 0
 27809                           ;radio_driver_SX1276.c: 802: {
 27810                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 27811  003A5A  0E80               	movlw	128
 27812  003A5C  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27813  003A5E  0E02               	movlw	2
 27814  003A60  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27815                           
 27816                           ; BSR set to: 0
 27817  003A62  0012               	return	
 27818  003A64                     l547:
 27819                           
 27820                           ;radio_driver_SX1276.c: 804: }
 27821                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 27822                           
 27823                           ; BSR set to: 0
 27824  003A64  0101               	movlb	1	; () banked
 27825  003A66  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27826  003A68  ECDE  F043         	call	_SwTimerStop
 27827                           
 27828                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 27829  003A6C  0E00               	movlw	0
 27830  003A6E  0100               	movlb	0	; () banked
 27831  003A70  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27832  003A72  0E04               	movlw	4
 27833  003A74  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27834  003A76  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 27835                           
 27836                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 27837  003A7A  0101               	movlb	1	; () banked
 27838  003A7C  0593               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27839  003A7E  A4D8               	btfss	status,2,c
 27840  003A80  D027               	goto	l548
 27841                           
 27842                           ; BSR set to: 1
 27843                           ;radio_driver_SX1276.c: 813: {
 27844                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 27845  003A82  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27846  003A86  0E22               	movlw	34
 27847  003A88  EC7B  F044         	call	_RADIO_RegisterWrite
 27848                           
 27849                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 27850  003A8C  0E0A               	movlw	10
 27851  003A8E  ECCA  F043         	call	_RADIO_RegisterRead
 27852  003A92  0100               	movlb	0	; () banked
 27853  003A94  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 27854                           
 27855                           ; BSR set to: 0
 27856                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 27857  003A96  0EF0               	movlw	240
 27858  003A98  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 27862  003A9A  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 27863                           
 27864                           ; BSR set to: 0
 27865                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 27866  003A9C  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 27867  003AA0  0E0A               	movlw	10
 27868  003AA2  EC7B  F044         	call	_RADIO_RegisterWrite
 27869                           
 27870                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 27871  003AA6  0E40               	movlw	64
 27872  003AA8  0100               	movlb	0	; () banked
 27873  003AAA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27874  003AAC  0E40               	movlw	64
 27875  003AAE  EC7B  F044         	call	_RADIO_RegisterWrite
 27876                           
 27877                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 27878  003AB2  0E00               	movlw	0
 27879  003AB4  0100               	movlb	0	; () banked
 27880  003AB6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27881  003AB8  0E41               	movlw	65
 27882  003ABA  EC7B  F044         	call	_RADIO_RegisterWrite
 27883                           
 27884                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 27885  003ABE  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27886  003AC2  0E01               	movlw	1
 27887  003AC4  0100               	movlb	0	; () banked
 27888  003AC6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27889  003AC8  0E01               	movlw	1
 27890  003ACA  ECE7  F02E         	call	_RADIO_WriteMode
 27891                           
 27892                           ;radio_driver_SX1276.c: 828: }
 27893  003ACE  D00C               	goto	l549
 27894  003AD0                     l548:
 27895                           
 27896                           ;radio_driver_SX1276.c: 829: else
 27897                           ;radio_driver_SX1276.c: 830: {
 27898                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 27899  003AD0  0E00               	movlw	0
 27900  003AD2  0100               	movlb	0	; () banked
 27901  003AD4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27902  003AD6  0E40               	movlw	64
 27903  003AD8  EC7B  F044         	call	_RADIO_RegisterWrite
 27904                           
 27905                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 27906  003ADC  0E00               	movlw	0
 27907  003ADE  0100               	movlb	0	; () banked
 27908  003AE0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27909  003AE2  0E41               	movlw	65
 27910  003AE4  EC7B  F044         	call	_RADIO_RegisterWrite
 27911  003AE8                     l549:
 27912                           
 27913                           ;radio_driver_SX1276.c: 834: }
 27914                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 27915  003AE8  0101               	movlb	1	; () banked
 27916  003AEA  5193               	movf	(_RadioConfiguration+24)& (0+255),w,b
 27917  003AEC  A4D8               	btfss	status,2,c
 27918  003AEE  D005               	goto	l550
 27919                           
 27920                           ; BSR set to: 1
 27921                           ;radio_driver_SX1276.c: 837: {
 27922                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 27923  003AF0  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27924  003AF4  0E00               	movlw	0
 27925  003AF6  EC7B  F044         	call	_RADIO_RegisterWrite
 27926  003AFA                     l550:
 27927                           
 27928                           ;radio_driver_SX1276.c: 840: }
 27929                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 27930  003AFA  EC5D  F046         	call	_HALSPICSAssert	;wreg free
 27931                           
 27932                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 27933  003AFE  0E80               	movlw	128
 27934  003B00  ECDC  F045         	call	_HALSPISend
 27935                           
 27936                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 27937  003B04  0E00               	movlw	0
 27938  003B06  0100               	movlb	0	; () banked
 27939  003B08  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 27940  003B0A  D00D               	goto	l551
 27941  003B0C                     
 27942                           ; BSR set to: 0
 27943                           ;radio_driver_SX1276.c: 846: {
 27944                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 27945                           
 27946                           ; BSR set to: 0
 27947  003B0C  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 27948  003B0E  0D01               	mullw	1
 27949  003B10  50F3               	movf	prodl,w,c
 27950  003B12  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 27951  003B14  6ED9               	movwf	fsr2l,c
 27952  003B16  50F4               	movf	prodh,w,c
 27953  003B18  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 27954  003B1A  6EDA               	movwf	fsr2h,c
 27955  003B1C  50DF               	movf	indf2,w,c
 27956  003B1E  ECDC  F045         	call	_HALSPISend
 27957  003B22  0100               	movlb	0	; () banked
 27958  003B24  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 27959  003B26                     l551:
 27960                           
 27961                           ; BSR set to: 0
 27962                           
 27963                           ; BSR set to: 0
 27964  003B26  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 27965  003B28  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 27966  003B2A  A0D8               	btfss	status,0,c
 27967  003B2C  D7EF               	goto	l552
 27968                           
 27969                           ; BSR set to: 0
 27970                           ;radio_driver_SX1276.c: 848: }
 27971                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 27972                           
 27973                           ; BSR set to: 0
 27974  003B2E  EC5B  F046         	call	_HALSPICSDeassert	;wreg free
 27975                           
 27976                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 27977  003B32  0101               	movlb	1	; () banked
 27978  003B34  819E               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 27979                           
 27980                           ; BSR set to: 1
 27981                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27982  003B36  0EE7               	movlw	231
 27983  003B38  179E               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27984                           
 27985                           ; BSR set to: 1
 27986                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 27987  003B3A  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27988  003B3E  0E00               	movlw	0
 27989  003B40  0100               	movlb	0	; () banked
 27990  003B42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27991  003B44  0E03               	movlw	3
 27992  003B46  ECE7  F02E         	call	_RADIO_WriteMode
 27993                           
 27994                           ; BSR set to: 0
 27995                           
 27996                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 27997  003B4A  0E00               	movlw	0
 27998  003B4C  0100               	movlb	0	; () banked
 27999  003B4E  6FB8               	movwf	_RADIO_Transmit$1077& (0+255),b
 28000  003B50  0E00               	movlw	0
 28001  003B52  6FB9               	movwf	(_RADIO_Transmit$1077+1)& (0+255),b
 28002  003B54  0E0A               	movlw	10
 28003  003B56  6FBA               	movwf	(_RADIO_Transmit$1077+2)& (0+255),b
 28004  003B58  0E00               	movlw	0
 28005  003B5A  6FBB               	movwf	(_RADIO_Transmit$1077+3)& (0+255),b
 28006                           
 28007                           ; BSR set to: 0
 28008                           
 28009                           ; BSR set to: 0
 28010  003B5C  C0B8  F06D         	movff	_RADIO_Transmit$1077,SwTimerSetTimeout@timeout
 28011  003B60  C0B9  F06E         	movff	_RADIO_Transmit$1077+1,SwTimerSetTimeout@timeout+1
 28012  003B64  C0BA  F06F         	movff	_RADIO_Transmit$1077+2,SwTimerSetTimeout@timeout+2
 28013  003B68  C0BB  F070         	movff	_RADIO_Transmit$1077+3,SwTimerSetTimeout@timeout+3
 28014  003B6C  0101               	movlb	1	; () banked
 28015  003B6E  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 28016  003B70  ECC6  F040         	call	_SwTimerSetTimeout
 28017                           
 28018                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 28019  003B74  0101               	movlb	1	; () banked
 28020  003B76  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 28021  003B78  EC01  F037         	call	_SwTimerStart
 28022                           
 28023                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 28024  003B7C  0101               	movlb	1	; () banked
 28025  003B7E  51A5               	movf	(_RadioConfiguration+42)& (0+255),w,b
 28026  003B80  11A6               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 28027  003B82  11A7               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 28028  003B84  11A8               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 28029  003B86  B4D8               	btfsc	status,2,c
 28030  003B88  D061               	goto	l558
 28031                           
 28032                           ; BSR set to: 1
 28033                           ;radio_driver_SX1276.c: 866: {
 28034                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 28035  003B8A  51A8               	movf	(_RadioConfiguration+45)& (0+255),w,b
 28036  003B8C  E107               	bnz	u16490
 28037  003B8E  29A5               	incf	(_RadioConfiguration+42)& (0+255),w,b
 28038  003B90  0EFF               	movlw	255
 28039  003B92  59A6               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 28040  003B94  0E0F               	movlw	15
 28041  003B96  59A7               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 28042  003B98  A0D8               	btfss	status,0,c
 28043  003B9A  D01D               	goto	l560
 28044  003B9C                     u16490:
 28045                           
 28046                           ; BSR set to: 1
 28047  003B9C  C1A5  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 28048  003BA0  C1A6  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 28049  003BA4  C1A7  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 28050  003BA8  C1A8  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 28051  003BAC  0E7D               	movlw	125
 28052  003BAE  0100               	movlb	0	; () banked
 28053  003BB0  6F64               	movwf	___lldiv@divisor& (0+255),b
 28054  003BB2  0E00               	movlw	0
 28055  003BB4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 28056  003BB6  0E00               	movlw	0
 28057  003BB8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 28058  003BBA  0E00               	movlw	0
 28059  003BBC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 28060  003BBE  EC7A  F039         	call	___lldiv	;wreg free
 28061  003BC2  0E0C               	movlw	12
 28062  003BC4                     u16505:
 28063  003BC4  90D8               	bcf	status,0,c
 28064  003BC6  0100               	movlb	0	; () banked
 28065  003BC8  3760               	rlcf	?___lldiv& (0+255),f,b
 28066  003BCA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 28067  003BCC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 28068  003BCE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 28069  003BD0  2EE8               	decfsz	wreg,f,c
 28070  003BD2  D7F8               	goto	u16505
 28071  003BD4  D023               	goto	L19
 28072  003BD6                     l560:
 28073                           
 28074                           ; BSR set to: 0
 28075  003BD6  C1A5  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 28076  003BDA  C1A6  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 28077  003BDE  C1A7  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 28078  003BE2  C1A8  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 28079  003BE6  0E0C               	movlw	12
 28080  003BE8                     u16515:
 28081  003BE8  90D8               	bcf	status,0,c
 28082  003BEA  0100               	movlb	0	; () banked
 28083  003BEC  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 28084  003BEE  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 28085  003BF0  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 28086  003BF2  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 28087  003BF4  2EE8               	decfsz	wreg,f,c
 28088  003BF6  D7F8               	goto	u16515
 28089  003BF8  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 28090  003BFC  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 28091  003C00  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 28092  003C04  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 28093  003C08  0E7D               	movlw	125
 28094  003C0A  6F64               	movwf	___lldiv@divisor& (0+255),b
 28095  003C0C  0E00               	movlw	0
 28096  003C0E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 28097  003C10  0E00               	movlw	0
 28098  003C12  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 28099  003C14  0E00               	movlw	0
 28100  003C16  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 28101  003C18  EC7A  F039         	call	___lldiv	;wreg free
 28102  003C1C                     L19:
 28103  003C1C  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$1079
 28104  003C20  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$1079+1
 28105  003C24  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$1079+2
 28106  003C28  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$1079+3
 28107  003C2C  C0BC  F06D         	movff	_RADIO_Transmit$1079,SwTimerSetTimeout@timeout
 28108  003C30  C0BD  F06E         	movff	_RADIO_Transmit$1079+1,SwTimerSetTimeout@timeout+1
 28109  003C34  C0BE  F06F         	movff	_RADIO_Transmit$1079+2,SwTimerSetTimeout@timeout+2
 28110  003C38  C0BF  F070         	movff	_RADIO_Transmit$1079+3,SwTimerSetTimeout@timeout+3
 28111  003C3C  0101               	movlb	1	; () banked
 28112  003C3E  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 28113  003C40  ECC6  F040         	call	_SwTimerSetTimeout
 28114                           
 28115                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 28116  003C44  0101               	movlb	1	; () banked
 28117  003C46  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 28118  003C48  EC01  F037         	call	_SwTimerStart
 28119  003C4C                     l558:
 28120                           
 28121                           ;radio_driver_SX1276.c: 869: }
 28122                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 28123  003C4C  0E00               	movlw	0
 28124  003C4E  0100               	movlb	0	; () banked
 28125  003C50  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 28126  003C52  0E00               	movlw	0
 28127  003C54  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 28128  003C56  0012               	return	
 28129  003C58                     __end_of_RADIO_Transmit:
 28130                           	opt stack 0
 28131                           tosu	equ	0xFFF
 28132                           tosh	equ	0xFFE
 28133                           tosl	equ	0xFFD
 28134                           pclath	equ	0xFFA
 28135                           tblptru	equ	0xFF8
 28136                           tblptrh	equ	0xFF7
 28137                           tblptrl	equ	0xFF6
 28138                           tablat	equ	0xFF5
 28139                           prodh	equ	0xFF4
 28140                           prodl	equ	0xFF3
 28141                           intcon	equ	0xFF2
 28142                           intcon2	equ	0xFF1
 28143                           intcon3	equ	0xFF0
 28144                           indf0	equ	0xFEF
 28145                           postinc0	equ	0xFEE
 28146                           fsr0h	equ	0xFEA
 28147                           fsr0l	equ	0xFE9
 28148                           wreg	equ	0xFE8
 28149                           postinc1	equ	0xFE6
 28150                           postdec1	equ	0xFE5
 28151                           plusw1	equ	0xFE3
 28152                           fsr1h	equ	0xFE2
 28153                           fsr1l	equ	0xFE1
 28154                           indf2	equ	0xFDF
 28155                           postinc2	equ	0xFDE
 28156                           postdec2	equ	0xFDD
 28157                           plusw2	equ	0xFDB
 28158                           fsr2h	equ	0xFDA
 28159                           fsr2l	equ	0xFD9
 28160                           status	equ	0xFD8
 28161                           
 28162 ;; *************** function _RADIO_WriteConfiguration *****************
 28163 ;; Defined at:
 28164 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28165 ;; Parameters:    Size  Location     Type
 28166 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 28167 ;; Auto vars:     Size  Location     Type
 28168 ;;  tempValue       4   76[BANK0 ] unsigned long 
 28169 ;;  regValue        1   80[BANK0 ] unsigned char 
 28170 ;;  i               1   75[BANK0 ] unsigned char 
 28171 ;; Return value:  Size  Location     Type
 28172 ;;                  1    wreg      void 
 28173 ;; Registers used:
 28174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28175 ;; Tracked objects:
 28176 ;;		On entry : 0/0
 28177 ;;		On exit  : 0/0
 28178 ;;		Unchanged: 0/0
 28179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28183 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28184 ;;Total ram usage:       11 bytes
 28185 ;; Hardware stack levels used:    1
 28186 ;; Hardware stack levels required when called:   11
 28187 ;; This function calls:
 28188 ;;		_RADIO_RegisterRead
 28189 ;;		_RADIO_RegisterWrite
 28190 ;;		_RADIO_WriteFSKBitRate
 28191 ;;		_RADIO_WriteFSKFrequencyDeviation
 28192 ;;		_RADIO_WriteFrequency
 28193 ;;		_RADIO_WriteMode
 28194 ;;		_RADIO_WritePower
 28195 ;;		___lmul
 28196 ;; This function is called by:
 28197 ;;		_RADIO_Transmit
 28198 ;;		_RADIO_ReceiveStart
 28199 ;;		_RADIO_TransmitCW
 28200 ;; This function uses a non-reentrant model
 28201 ;;
 28202                           
 28203                           	psect	text135
 28204  0014DE                     __ptext135:
 28205                           	opt stack 0
 28206  0014DE                     _RADIO_WriteConfiguration:
 28207                           	opt stack 17
 28208                           
 28209                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 28210                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 28211                           ;radio_driver_SX1276.c: 537: uint8_t i;
 28212                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;incstack = 0
 28216  0014DE  C193  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 28217  0014E2  0E00               	movlw	0
 28218  0014E4  0100               	movlb	0	; () banked
 28219  0014E6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 28220  0014E8  0E00               	movlw	0
 28221  0014EA  ECE7  F02E         	call	_RADIO_WriteMode
 28222                           
 28223                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 28224  0014EE  C17B  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 28225  0014F2  C17C  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 28226  0014F6  C17D  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 28227  0014FA  C17E  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 28228  0014FE  ECD5  F030         	call	_RADIO_WriteFrequency	;wreg free
 28229                           
 28230                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 28231  001502  0101               	movlb	1	; () banked
 28232  001504  5196               	movf	(_RadioConfiguration+27)& (0+255),w,b
 28233  001506  EC5D  F030         	call	_RADIO_WritePower
 28234                           
 28235                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 28236  00150A  0101               	movlb	1	; () banked
 28237  00150C  0593               	decf	(_RadioConfiguration+24)& (0+255),w,b
 28238  00150E  A4D8               	btfss	status,2,c
 28239  001510  D1ED               	goto	l500
 28240                           
 28241                           ; BSR set to: 1
 28242                           ;radio_driver_SX1276.c: 545: {
 28243                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 28244  001512  C189  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 28245  001516  0E39               	movlw	57
 28246  001518  EC7B  F044         	call	_RADIO_RegisterWrite
 28247                           
 28248                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 28249                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 28250                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 28251                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 28252  00151C  C19D  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 28253  001520  0E01               	movlw	1
 28254  001522  0100               	movlb	0	; () banked
 28255  001524  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28256  001526  0101               	movlb	1	; () banked
 28257  001528  90D8               	bcf	status,0,c
 28258  00152A  359C               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 28259  00152C  0100               	movlb	0	; () banked
 28260  00152E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28261  001530  0101               	movlb	1	; () banked
 28262  001532  3995               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 28263  001534  0BF0               	andlw	240
 28264  001536  0100               	movlb	0	; () banked
 28265  001538  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 28266  00153A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 28267  00153C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28268  00153E  0E1D               	movlw	29
 28269  001540  EC7B  F044         	call	_RADIO_RegisterWrite
 28270                           
 28271                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 28272                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 28273                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 28274                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 28275  001544  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 28276  001548  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 28277  00154C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 28278  001550  0100               	movlb	0	; () banked
 28279  001552  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28280  001554  0E03               	movlw	3
 28281  001556  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28282  001558  C197  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 28283  00155C  0E01               	movlw	1
 28284  00155E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28285  001560  90D8               	bcf	status,0,c
 28286  001562  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28287  001564  90D8               	bcf	status,0,c
 28288  001566  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 28289  001568  0101               	movlb	1	; () banked
 28290  00156A  3994               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 28291  00156C  0BF0               	andlw	240
 28292  00156E  0100               	movlb	0	; () banked
 28293  001570  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 28294  001572  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 28295  001574  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28296  001576  0E1E               	movlw	30
 28297  001578  EC7B  F044         	call	_RADIO_RegisterWrite
 28298                           
 28299                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 28300  00157C  0101               	movlb	1	; () banked
 28301  00157E  5199               	movf	(_RadioConfiguration+30)& (0+255),w,b
 28302  001580  119A               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 28303  001582  B4D8               	btfsc	status,2,c
 28304  001584  D06F               	goto	l501
 28305                           
 28306                           ; BSR set to: 1
 28307                           ;radio_driver_SX1276.c: 561: {
 28308                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 28309  001586  C199  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 28310  00158A  C19A  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 28311  00158E  0100               	movlb	0	; () banked
 28312  001590  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28313  001592  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28314                           
 28315                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 28316  001594  D04E               	goto	l502
 28317  001596                     
 28318                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 28319                           
 28320                           ; BSR set to: 0
 28321  001596  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28322  00159A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28323  00159E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28324  0015A2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28325  0015A6  0E7D               	movlw	125
 28326  0015A8  0100               	movlb	0	; () banked
 28327  0015AA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28328  0015AC  0E00               	movlw	0
 28329  0015AE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28330  0015B0  0E00               	movlw	0
 28331  0015B2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28332  0015B4  0E00               	movlw	0
 28333  0015B6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28334  0015B8  EC38  F03E         	call	___lmul	;wreg free
 28335  0015BC  D027               	goto	L21
 28336  0015BE                     
 28337                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 28338  0015BE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28339  0015C2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28340  0015C6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28341  0015CA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28342  0015CE  0EFA               	movlw	250
 28343  0015D0  0100               	movlb	0	; () banked
 28344  0015D2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28345  0015D4  0E00               	movlw	0
 28346  0015D6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28347  0015D8  0E00               	movlw	0
 28348  0015DA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28349  0015DC  0E00               	movlw	0
 28350  0015DE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28351  0015E0  EC38  F03E         	call	___lmul	;wreg free
 28352  0015E4  D013               	goto	L21
 28353  0015E6                     
 28354                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 28355  0015E6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28356  0015EA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28357  0015EE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28358  0015F2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28359  0015F6  0EF4               	movlw	244
 28360  0015F8  0100               	movlb	0	; () banked
 28361  0015FA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28362  0015FC  0E01               	movlw	1
 28363  0015FE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28364  001600  0E00               	movlw	0
 28365  001602  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28366  001604  0E00               	movlw	0
 28367  001606  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28368  001608  EC38  F03E         	call	___lmul	;wreg free
 28369  00160C                     L21:
 28370  00160C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 28371  001610  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 28372  001614  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 28373  001618  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 28374                           
 28375                           ;radio_driver_SX1276.c: 574: break;
 28376  00161C  D016               	goto	l504
 28377  00161E                     
 28378                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 28379  00161E  0E00               	movlw	0
 28380  001620  0100               	movlb	0	; () banked
 28381  001622  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28382  001624  0E00               	movlw	0
 28383  001626  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28384  001628  0E00               	movlw	0
 28385  00162A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28386  00162C  0E00               	movlw	0
 28387  00162E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28388                           
 28389                           ; BSR set to: 0
 28390                           ;radio_driver_SX1276.c: 579: }
 28391                           
 28392                           ;radio_driver_SX1276.c: 578: break;
 28393  001630  D00C               	goto	l504
 28394  001632                     l502:
 28395                           
 28396                           ; BSR set to: 0
 28397                           
 28398                           ; BSR set to: 0
 28399  001632  0101               	movlb	1	; () banked
 28400  001634  5195               	movf	(_RadioConfiguration+26)& (0+255),w,b
 28401                           
 28402                           ; Switch size 1, requested type "space"
 28403                           ; Number of cases is 3, Range of values is 7 to 9
 28404                           ; switch strategies available:
 28405                           ; Name         Instructions Cycles
 28406                           ; simple_byte           10     6 (average)
 28407                           ;	Chosen strategy is simple_byte
 28408  001636  0A07               	xorlw	7	; case 7
 28409  001638  B4D8               	btfsc	status,2,c
 28410  00163A  D7AD               	goto	l503
 28411  00163C  0A0F               	xorlw	15	; case 8
 28412  00163E  B4D8               	btfsc	status,2,c
 28413  001640  D7BE               	goto	l505
 28414  001642  0A01               	xorlw	1	; case 9
 28415  001644  B4D8               	btfsc	status,2,c
 28416  001646  D7CF               	goto	l506
 28417  001648  D7EA               	goto	l507
 28418  00164A                     l504:
 28419                           
 28420                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 28421                           
 28422                           ; BSR set to: 1
 28423  00164A  0101               	movlb	1	; () banked
 28424  00164C  2994               	incf	(_RadioConfiguration+25)& (0+255),w,b
 28425  00164E  0100               	movlb	0	; () banked
 28426  001650  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 28427  001652  D005               	goto	u14990
 28428  001654                     u14995:
 28429  001654  90D8               	bcf	status,0,c
 28430  001656  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 28431  001658  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 28432  00165A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 28433  00165C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 28434  00165E                     u14990:
 28435  00165E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 28436  001660  D7F9               	goto	u14995
 28437                           
 28438                           ;radio_driver_SX1276.c: 582: }
 28439  001662  D009               	goto	l508
 28440  001664                     l501:
 28441                           
 28442                           ;radio_driver_SX1276.c: 583: else
 28443                           ;radio_driver_SX1276.c: 584: {
 28444                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 28445  001664  0E00               	movlw	0
 28446  001666  0100               	movlb	0	; () banked
 28447  001668  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28448  00166A  0E00               	movlw	0
 28449  00166C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28450  00166E  0E00               	movlw	0
 28451  001670  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28452  001672  0E00               	movlw	0
 28453  001674  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28454  001676                     l508:
 28455                           
 28456                           ;radio_driver_SX1276.c: 586: }
 28457                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 28458                           
 28459                           ; BSR set to: 0
 28460  001676  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 28461  00167A  0E24               	movlw	36
 28462  00167C  EC7B  F044         	call	_RADIO_RegisterWrite
 28463                           
 28464                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 28465  001680  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 28466  001684  0E1F               	movlw	31
 28467  001686  EC7B  F044         	call	_RADIO_RegisterWrite
 28468                           
 28469                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 28470  00168A  0E26               	movlw	38
 28471  00168C  ECCA  F043         	call	_RADIO_RegisterRead
 28472  001690  0100               	movlb	0	; () banked
 28473  001692  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28474                           
 28475                           ; BSR set to: 0
 28476                           ;radio_driver_SX1276.c: 596: if (
 28477                           ;radio_driver_SX1276.c: 597: (
 28478                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 28479                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 28480                           ;radio_driver_SX1276.c: 600: ) ||
 28481                           ;radio_driver_SX1276.c: 601: (
 28482                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 28483                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 28484                           ;radio_driver_SX1276.c: 604: )
 28485                           ;radio_driver_SX1276.c: 605: )
 28486  001694  0E0C               	movlw	12
 28487  001696  0101               	movlb	1	; () banked
 28488  001698  1994               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28489  00169A  A4D8               	btfss	status,2,c
 28490  00169C  D008               	goto	u15020
 28491                           
 28492                           ; BSR set to: 1
 28493  00169E  0E07               	movlw	7
 28494  0016A0  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28495  0016A2  B4D8               	btfsc	status,2,c
 28496  0016A4  D00C               	goto	u15040
 28497                           
 28498                           ; BSR set to: 1
 28499  0016A6  0E08               	movlw	8
 28500  0016A8  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28501  0016AA  B4D8               	btfsc	status,2,c
 28502  0016AC  D008               	goto	u15040
 28503  0016AE                     u15020:
 28504                           
 28505                           ; BSR set to: 1
 28506                           
 28507                           ; BSR set to: 1
 28508  0016AE  0E0B               	movlw	11
 28509  0016B0  1994               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28510  0016B2  A4D8               	btfss	status,2,c
 28511  0016B4  D007               	goto	l509
 28512                           
 28513                           ; BSR set to: 1
 28514  0016B6  0E07               	movlw	7
 28515  0016B8  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28516  0016BA  A4D8               	btfss	status,2,c
 28517  0016BC  D003               	goto	l509
 28518  0016BE                     u15040:
 28519                           
 28520                           ; BSR set to: 1
 28521                           ;radio_driver_SX1276.c: 606: {
 28522                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 28523                           
 28524                           ; BSR set to: 1
 28525  0016BE  0100               	movlb	0	; () banked
 28526  0016C0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28527                           
 28528                           ;radio_driver_SX1276.c: 608: }
 28529  0016C2  D002               	goto	l514
 28530  0016C4                     l509:
 28531                           
 28532                           ;radio_driver_SX1276.c: 609: else
 28533                           ;radio_driver_SX1276.c: 610: {
 28534                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 28535                           
 28536                           ; BSR set to: 0
 28537  0016C4  0100               	movlb	0	; () banked
 28538  0016C6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28539  0016C8                     l514:
 28540                           
 28541                           ; BSR set to: 0
 28542                           ;radio_driver_SX1276.c: 612: }
 28543                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 28544  0016C8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 28545                           
 28546                           ; BSR set to: 0
 28547                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 28548  0016CA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28549  0016CE  0E26               	movlw	38
 28550  0016D0  EC7B  F044         	call	_RADIO_RegisterWrite
 28551                           
 28552                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 28553  0016D4  0E31               	movlw	49
 28554  0016D6  ECCA  F043         	call	_RADIO_RegisterRead
 28555  0016DA  0100               	movlb	0	; () banked
 28556  0016DC  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28557                           
 28558                           ; BSR set to: 0
 28559                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 28560  0016DE  0EF8               	movlw	248
 28561  0016E0  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 28565  0016E2  0E03               	movlw	3
 28566  0016E4  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28567                           
 28568                           ; BSR set to: 0
 28569                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 28570  0016E6  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28571  0016EA  0E31               	movlw	49
 28572  0016EC  EC7B  F044         	call	_RADIO_RegisterWrite
 28573                           
 28574                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 28575  0016F0  0E0A               	movlw	10
 28576  0016F2  0100               	movlb	0	; () banked
 28577  0016F4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28578  0016F6  0E37               	movlw	55
 28579  0016F8  EC7B  F044         	call	_RADIO_RegisterWrite
 28580                           
 28581                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 28582  0016FC  0E12               	movlw	18
 28583  0016FE  0101               	movlb	1	; () banked
 28584  001700  19AC               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28585  001702  A4D8               	btfss	status,2,c
 28586  001704  D02F               	goto	l519
 28587                           
 28588                           ; BSR set to: 1
 28589                           ;radio_driver_SX1276.c: 626: {
 28590                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 28591                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 28592  001706  0E07               	movlw	7
 28593  001708  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28594  00170A  B4D8               	btfsc	status,2,c
 28595  00170C  D004               	goto	u15070
 28596                           
 28597                           ; BSR set to: 1
 28598  00170E  0E08               	movlw	8
 28599  001710  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28600  001712  A4D8               	btfss	status,2,c
 28601  001714  D017               	goto	l516
 28602  001716                     u15070:
 28603                           
 28604                           ; BSR set to: 1
 28605                           ;radio_driver_SX1276.c: 631: {
 28606                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 28607                           
 28608                           ; BSR set to: 1
 28609  001716  0E31               	movlw	49
 28610  001718  ECCA  F043         	call	_RADIO_RegisterRead
 28611  00171C  0100               	movlb	0	; () banked
 28612  00171E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28613                           
 28614                           ; BSR set to: 0
 28615                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 28616  001720  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 28620  001722  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28621  001726  0E31               	movlw	49
 28622  001728  EC7B  F044         	call	_RADIO_RegisterWrite
 28623                           
 28624                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 28625  00172C  0E40               	movlw	64
 28626  00172E  0100               	movlb	0	; () banked
 28627  001730  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28628  001732  0E2F               	movlw	47
 28629  001734  EC7B  F044         	call	_RADIO_RegisterWrite
 28630                           
 28631                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 28632  001738  0E00               	movlw	0
 28633  00173A  0100               	movlb	0	; () banked
 28634  00173C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28635  00173E  0E30               	movlw	48
 28636  001740  EC7B  F044         	call	_RADIO_RegisterWrite
 28637  001744                     l516:
 28638                           
 28639                           ;radio_driver_SX1276.c: 637: }
 28640                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 28641  001744  0E09               	movlw	9
 28642  001746  0101               	movlb	1	; () banked
 28643  001748  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28644  00174A  A4D8               	btfss	status,2,c
 28645  00174C  D00B               	goto	l519
 28646                           
 28647                           ; BSR set to: 1
 28648                           ;radio_driver_SX1276.c: 640: {
 28649                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 28650  00174E  0E31               	movlw	49
 28651  001750  ECCA  F043         	call	_RADIO_RegisterRead
 28652  001754  0100               	movlb	0	; () banked
 28653  001756  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 28657  001758  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28658                           
 28659                           ; BSR set to: 0
 28660                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 28661  00175A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28662  00175E  0E31               	movlw	49
 28663  001760  EC7B  F044         	call	_RADIO_RegisterWrite
 28664  001764                     l519:
 28665                           
 28666                           ;radio_driver_SX1276.c: 644: }
 28667                           ;radio_driver_SX1276.c: 645: }
 28668                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 28669  001764  0E33               	movlw	51
 28670  001766  ECCA  F043         	call	_RADIO_RegisterRead
 28671  00176A  0100               	movlb	0	; () banked
 28672  00176C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 28676  00176E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 28677                           
 28678                           ; BSR set to: 0
 28679                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 28680  001770  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 28681                           
 28682                           ; BSR set to: 0
 28683                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 28684  001772  C19B  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28685  001776  0E01               	movlw	1
 28686  001778  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28687  00177A  0E06               	movlw	6
 28688  00177C  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28689  00177E                     u15095:
 28690  00177E  90D8               	bcf	status,0,c
 28691  001780  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28692  001782  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 28693  001784  D7FC               	goto	u15095
 28694  001786  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 28695  001788  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28696                           
 28697                           ; BSR set to: 0
 28698                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 28699  00178A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28700  00178E  0E33               	movlw	51
 28701  001790  EC7B  F044         	call	_RADIO_RegisterWrite
 28702                           
 28703                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 28704  001794  C19B  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28705  001798  0E01               	movlw	1
 28706  00179A  0100               	movlb	0	; () banked
 28707  00179C  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28708  00179E  90D8               	bcf	status,0,c
 28709  0017A0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28710  0017A2  90D8               	bcf	status,0,c
 28711  0017A4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 28712  0017A6  0AFF               	xorlw	255
 28713  0017A8  0B1D               	andlw	29
 28714  0017AA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28715                           
 28716                           ; BSR set to: 0
 28717                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 28718  0017AC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28719  0017B0  0E3B               	movlw	59
 28720  0017B2  EC7B  F044         	call	_RADIO_RegisterWrite
 28721                           
 28722                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 28723  0017B6  0101               	movlb	1	; () banked
 28724  0017B8  5188               	movf	(_RadioConfiguration+13)& (0+255),w,b
 28725  0017BA  0100               	movlb	0	; () banked
 28726  0017BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28727  0017BE  0E20               	movlw	32
 28728  0017C0  EC7B  F044         	call	_RADIO_RegisterWrite
 28729                           
 28730                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28731  0017C4  C187  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28732  0017C8  0E21               	movlw	33
 28733  0017CA  EC7B  F044         	call	_RADIO_RegisterWrite
 28734                           
 28735                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 28736  0017CE  0E00               	movlw	0
 28737  0017D0  0100               	movlb	0	; () banked
 28738  0017D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28739  0017D4  0E0D               	movlw	13
 28740  0017D6  EC7B  F044         	call	_RADIO_RegisterWrite
 28741                           
 28742                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 28743  0017DA  0E00               	movlw	0
 28744  0017DC  0100               	movlb	0	; () banked
 28745  0017DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28746  0017E0  0E0E               	movlw	14
 28747  0017E2  EC7B  F044         	call	_RADIO_RegisterWrite
 28748                           
 28749                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 28750  0017E6  0E00               	movlw	0
 28751  0017E8  0100               	movlb	0	; () banked
 28752  0017EA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28753  0017EC  0E0F               	movlw	15
 28754  0017EE  EC7B  F044         	call	_RADIO_RegisterWrite
 28755                           
 28756                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 28757  0017F2  0E12               	movlw	18
 28758  0017F4  0101               	movlb	1	; () banked
 28759  0017F6  19AC               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28760  0017F8  A4D8               	btfss	status,2,c
 28761  0017FA  D071               	goto	l526
 28762                           
 28763                           ; BSR set to: 1
 28764                           ;radio_driver_SX1276.c: 665: {
 28765                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28766                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 28767                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 28768                           ;radio_driver_SX1276.c: 669: )
 28769  0017FC  0E09               	movlw	9
 28770  0017FE  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28771  001800  A4D8               	btfss	status,2,c
 28772  001802  D020               	goto	l521
 28773                           
 28774                           ; BSR set to: 1
 28775  001804  0E80               	movlw	128
 28776  001806  5D7B               	subwf	_RadioConfiguration& (0+255),w,b
 28777  001808  0E13               	movlw	19
 28778  00180A  597C               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28779  00180C  0E61               	movlw	97
 28780  00180E  597D               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28781  001810  0E33               	movlw	51
 28782  001812  597E               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28783  001814  A0D8               	btfss	status,0,c
 28784  001816  D016               	goto	l521
 28785                           
 28786                           ; BSR set to: 1
 28787  001818  057B               	decf	_RadioConfiguration& (0+255),w,b
 28788  00181A  0EF7               	movlw	247
 28789  00181C  597C               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28790  00181E  0ECB               	movlw	203
 28791  001820  597D               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28792  001822  0E3C               	movlw	60
 28793  001824  597E               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28794  001826  B0D8               	btfsc	status,0,c
 28795  001828  D00D               	goto	l521
 28796                           
 28797                           ; BSR set to: 1
 28798                           ;radio_driver_SX1276.c: 670: {
 28799                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 28800  00182A  0E02               	movlw	2
 28801  00182C  0100               	movlb	0	; () banked
 28802  00182E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28803  001830  0E36               	movlw	54
 28804  001832  EC7B  F044         	call	_RADIO_RegisterWrite
 28805                           
 28806                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 28807  001836  0E64               	movlw	100
 28808  001838  0100               	movlb	0	; () banked
 28809  00183A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28810  00183C  0E3A               	movlw	58
 28811  00183E  EC7B  F044         	call	_RADIO_RegisterWrite
 28812                           
 28813                           ;radio_driver_SX1276.c: 673: }
 28814  001842  D02C               	goto	l524
 28815  001844                     l521:
 28816                           
 28817                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28818                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 28819                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 28820                           ;radio_driver_SX1276.c: 677: )
 28821  001844  0E09               	movlw	9
 28822  001846  0101               	movlb	1	; () banked
 28823  001848  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28824  00184A  A4D8               	btfss	status,2,c
 28825  00184C  D021               	goto	l523
 28826                           
 28827                           ; BSR set to: 1
 28828  00184E  0E80               	movlw	128
 28829  001850  5D7B               	subwf	_RadioConfiguration& (0+255),w,b
 28830  001852  0E1A               	movlw	26
 28831  001854  597C               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28832  001856  0E70               	movlw	112
 28833  001858  597D               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28834  00185A  0E18               	movlw	24
 28835  00185C  597E               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28836  00185E  A0D8               	btfss	status,0,c
 28837  001860  D017               	goto	l523
 28838                           
 28839                           ; BSR set to: 1
 28840  001862  0E41               	movlw	65
 28841  001864  5D7B               	subwf	_RadioConfiguration& (0+255),w,b
 28842  001866  0EDD               	movlw	221
 28843  001868  597C               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28844  00186A  0E4A               	movlw	74
 28845  00186C  597D               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28846  00186E  0E1F               	movlw	31
 28847  001870  597E               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28848  001872  B0D8               	btfsc	status,0,c
 28849  001874  D00D               	goto	l523
 28850                           
 28851                           ; BSR set to: 1
 28852                           ;radio_driver_SX1276.c: 678: {
 28853                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 28854  001876  0E02               	movlw	2
 28855  001878  0100               	movlb	0	; () banked
 28856  00187A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28857  00187C  0E36               	movlw	54
 28858  00187E  EC7B  F044         	call	_RADIO_RegisterWrite
 28859                           
 28860                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 28861  001882  0E7F               	movlw	127
 28862  001884  0100               	movlb	0	; () banked
 28863  001886  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28864  001888  0E3A               	movlw	58
 28865  00188A  EC7B  F044         	call	_RADIO_RegisterWrite
 28866                           
 28867                           ;radio_driver_SX1276.c: 681: }
 28868  00188E  D006               	goto	l524
 28869  001890                     l523:
 28870                           
 28871                           ;radio_driver_SX1276.c: 682: else
 28872                           ;radio_driver_SX1276.c: 683: {
 28873                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 28874  001890  0E03               	movlw	3
 28875  001892  0100               	movlb	0	; () banked
 28876  001894  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28877  001896  0E36               	movlw	54
 28878  001898  EC7B  F044         	call	_RADIO_RegisterWrite
 28879  00189C                     l524:
 28880                           
 28881                           ;radio_driver_SX1276.c: 685: }
 28882                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 28883  00189C  0E09               	movlw	9
 28884  00189E  0101               	movlb	1	; () banked
 28885  0018A0  1995               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28886  0018A2  A4D8               	btfss	status,2,c
 28887  0018A4  D010               	goto	l525
 28888                           
 28889                           ; BSR set to: 1
 28890  0018A6  059B               	decf	(_RadioConfiguration+32)& (0+255),w,b
 28891  0018A8  A4D8               	btfss	status,2,c
 28892  0018AA  D00D               	goto	l525
 28893                           
 28894                           ; BSR set to: 1
 28895                           ;radio_driver_SX1276.c: 689: {
 28896                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 28897  0018AC  0E65               	movlw	101
 28898  0018AE  0100               	movlb	0	; () banked
 28899  0018B0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28900  0018B2  0E3A               	movlw	58
 28901  0018B4  EC7B  F044         	call	_RADIO_RegisterWrite
 28902                           
 28903                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 28904  0018B8  0E19               	movlw	25
 28905  0018BA  0100               	movlb	0	; () banked
 28906  0018BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28907  0018BE  0E3B               	movlw	59
 28908  0018C0  EC7B  F044         	call	_RADIO_RegisterWrite
 28909                           
 28910                           ;radio_driver_SX1276.c: 692: }
 28911  0018C4  D00C               	goto	l526
 28912  0018C6                     l525:
 28913                           
 28914                           ;radio_driver_SX1276.c: 693: else
 28915                           ;radio_driver_SX1276.c: 694: {
 28916                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 28917  0018C6  0E65               	movlw	101
 28918  0018C8  0100               	movlb	0	; () banked
 28919  0018CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28920  0018CC  0E3A               	movlw	58
 28921  0018CE  EC7B  F044         	call	_RADIO_RegisterWrite
 28922                           
 28923                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 28924  0018D2  0E1D               	movlw	29
 28925  0018D4  0100               	movlb	0	; () banked
 28926  0018D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28927  0018D8  0E3B               	movlw	59
 28928  0018DA  EC7B  F044         	call	_RADIO_RegisterWrite
 28929  0018DE                     l526:
 28930                           
 28931                           ;radio_driver_SX1276.c: 697: }
 28932                           ;radio_driver_SX1276.c: 698: }
 28933                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 28934  0018DE  0EFF               	movlw	255
 28935  0018E0  0100               	movlb	0	; () banked
 28936  0018E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28937  0018E4  0E12               	movlw	18
 28938  0018E6  EC7B  F044         	call	_RADIO_RegisterWrite
 28939                           
 28940                           ;radio_driver_SX1276.c: 702: }
 28941  0018EA  0012               	return	
 28942  0018EC                     l500:
 28943                           
 28944                           ;radio_driver_SX1276.c: 703: else
 28945                           ;radio_driver_SX1276.c: 704: {
 28946                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 28947  0018EC  C17F  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 28948  0018F0  C180  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 28949  0018F4  C181  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 28950  0018F8  C182  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 28951  0018FC  EC5C  F03B         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 28952                           
 28953                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 28954  001900  C183  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 28955  001904  C184  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 28956  001908  C185  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 28957  00190C  C186  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 28958  001910  EC91  F03B         	call	_RADIO_WriteFSKBitRate	;wreg free
 28959                           
 28960                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 28961  001914  0101               	movlb	1	; () banked
 28962  001916  5188               	movf	(_RadioConfiguration+13)& (0+255),w,b
 28963  001918  0100               	movlb	0	; () banked
 28964  00191A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28965  00191C  0E25               	movlw	37
 28966  00191E  EC7B  F044         	call	_RADIO_RegisterWrite
 28967                           
 28968                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28969  001922  C187  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28970  001926  0E26               	movlw	38
 28971  001928  EC7B  F044         	call	_RADIO_RegisterWrite
 28972                           
 28973                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 28974  00192C  0E0A               	movlw	10
 28975  00192E  ECCA  F043         	call	_RADIO_RegisterRead
 28976  001932  0100               	movlb	0	; () banked
 28977  001934  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28978                           
 28979                           ; BSR set to: 0
 28980                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 28981  001936  0E9F               	movlw	159
 28982  001938  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28983                           
 28984                           ; BSR set to: 0
 28985                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 28986  00193A  0101               	movlb	1	; () banked
 28987  00193C  39AE               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 28988  00193E  46E8               	rlncf	wreg,f,c
 28989  001940  0BE0               	andlw	224
 28990  001942  0100               	movlb	0	; () banked
 28991  001944  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28992                           
 28993                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 28994  001946  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28995  00194A  0E0A               	movlw	10
 28996  00194C  EC7B  F044         	call	_RADIO_RegisterWrite
 28997                           
 28998                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 28999  001950  0EC8               	movlw	200
 29000  001952  0100               	movlb	0	; () banked
 29001  001954  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 29002                           
 29003                           ; BSR set to: 0
 29004                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 29005  001956  0101               	movlb	1	; () banked
 29006  001958  5197               	movf	(_RadioConfiguration+28)& (0+255),w,b
 29007  00195A  B4D8               	btfsc	status,2,c
 29008  00195C  D002               	goto	l528
 29009                           
 29010                           ; BSR set to: 1
 29011                           ;radio_driver_SX1276.c: 722: {
 29012                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 29013  00195E  0100               	movlb	0	; () banked
 29014  001960  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 29015  001962                     l528:
 29016                           
 29017                           ;radio_driver_SX1276.c: 724: }
 29018                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 29019                           
 29020                           ; BSR set to: 0
 29021  001962  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 29022  001966  0E30               	movlw	48
 29023  001968  EC7B  F044         	call	_RADIO_RegisterWrite
 29024                           
 29025                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 29026  00196C  0E00               	movlw	0
 29027  00196E  0100               	movlb	0	; () banked
 29028  001970  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 29029  001972  D010               	goto	l529
 29030  001974                     
 29031                           ; BSR set to: 0
 29032                           ;radio_driver_SX1276.c: 729: {
 29033                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 29034                           
 29035                           ; BSR set to: 0
 29036  001974  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 29037  001976  0D01               	mullw	1
 29038  001978  0E8A               	movlw	low (_RadioConfiguration+15)
 29039  00197A  24F3               	addwf	prodl,w,c
 29040  00197C  6ED9               	movwf	fsr2l,c
 29041  00197E  0E01               	movlw	high (_RadioConfiguration+15)
 29042  001980  20F4               	addwfc	prodh,w,c
 29043  001982  6EDA               	movwf	fsr2h,c
 29044  001984  50DF               	movf	indf2,w,c
 29045  001986  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29046  001988  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 29047  00198A  0F28               	addlw	40
 29048  00198C  EC7B  F044         	call	_RADIO_RegisterWrite
 29049  001990  0100               	movlb	0	; () banked
 29050  001992  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 29051  001994                     l529:
 29052                           
 29053                           ; BSR set to: 0
 29054                           
 29055                           ; BSR set to: 0
 29056  001994  0101               	movlb	1	; () banked
 29057  001996  5192               	movf	(_RadioConfiguration+23)& (0+255),w,b
 29058  001998  0100               	movlb	0	; () banked
 29059  00199A  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 29060  00199C  A0D8               	btfss	status,0,c
 29061  00199E  D7EA               	goto	l530
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;radio_driver_SX1276.c: 733: }
 29065                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 29066                           
 29067                           ; BSR set to: 0
 29068  0019A0  0101               	movlb	1	; () banked
 29069  0019A2  5192               	movf	(_RadioConfiguration+23)& (0+255),w,b
 29070  0019A4  B4D8               	btfsc	status,2,c
 29071  0019A6  D008               	goto	l532
 29072                           
 29073                           ; BSR set to: 1
 29074                           ;radio_driver_SX1276.c: 737: {
 29075                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 29076  0019A8  0592               	decf	(_RadioConfiguration+23)& (0+255),w,b
 29077  0019AA  0910               	iorlw	16
 29078  0019AC  0100               	movlb	0	; () banked
 29079  0019AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29080  0019B0  0E27               	movlw	39
 29081  0019B2  EC7B  F044         	call	_RADIO_RegisterWrite
 29082                           
 29083                           ;radio_driver_SX1276.c: 739: }
 29084  0019B6  D006               	goto	l533
 29085  0019B8                     l532:
 29086                           
 29087                           ;radio_driver_SX1276.c: 740: else
 29088                           ;radio_driver_SX1276.c: 741: {
 29089                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 29090  0019B8  0E00               	movlw	0
 29091  0019BA  0100               	movlb	0	; () banked
 29092  0019BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29093  0019BE  0E27               	movlw	39
 29094  0019C0  EC7B  F044         	call	_RADIO_RegisterWrite
 29095  0019C4                     l533:
 29096                           
 29097                           ;radio_driver_SX1276.c: 743: }
 29098                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 29099  0019C4  0EFF               	movlw	255
 29100  0019C6  0100               	movlb	0	; () banked
 29101  0019C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29102  0019CA  0E3E               	movlw	62
 29103  0019CC  EC7B  F044         	call	_RADIO_RegisterWrite
 29104                           
 29105                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 29106  0019D0  0EFF               	movlw	255
 29107  0019D2  0100               	movlb	0	; () banked
 29108  0019D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29109  0019D6  0E3F               	movlw	63
 29110  0019D8  EC7B  F044         	call	_RADIO_RegisterWrite
 29111  0019DC  0012               	return	
 29112  0019DE                     __end_of_RADIO_WriteConfiguration:
 29113                           	opt stack 0
 29114                           tosu	equ	0xFFF
 29115                           tosh	equ	0xFFE
 29116                           tosl	equ	0xFFD
 29117                           pclath	equ	0xFFA
 29118                           tblptru	equ	0xFF8
 29119                           tblptrh	equ	0xFF7
 29120                           tblptrl	equ	0xFF6
 29121                           tablat	equ	0xFF5
 29122                           prodh	equ	0xFF4
 29123                           prodl	equ	0xFF3
 29124                           intcon	equ	0xFF2
 29125                           intcon2	equ	0xFF1
 29126                           intcon3	equ	0xFF0
 29127                           indf0	equ	0xFEF
 29128                           postinc0	equ	0xFEE
 29129                           fsr0h	equ	0xFEA
 29130                           fsr0l	equ	0xFE9
 29131                           wreg	equ	0xFE8
 29132                           postinc1	equ	0xFE6
 29133                           postdec1	equ	0xFE5
 29134                           plusw1	equ	0xFE3
 29135                           fsr1h	equ	0xFE2
 29136                           fsr1l	equ	0xFE1
 29137                           indf2	equ	0xFDF
 29138                           postinc2	equ	0xFDE
 29139                           postdec2	equ	0xFDD
 29140                           plusw2	equ	0xFDB
 29141                           fsr2h	equ	0xFDA
 29142                           fsr2l	equ	0xFD9
 29143                           status	equ	0xFD8
 29144                           
 29145 ;; *************** function _RADIO_WritePower *****************
 29146 ;; Defined at:
 29147 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29148 ;; Parameters:    Size  Location     Type
 29149 ;;  power           1    wreg     char 
 29150 ;; Auto vars:     Size  Location     Type
 29151 ;;  power           1    6[BANK0 ] char 
 29152 ;;  paDac           1    5[BANK0 ] unsigned char 
 29153 ;;  ocp             1    4[BANK0 ] unsigned char 
 29154 ;; Return value:  Size  Location     Type
 29155 ;;                  1    wreg      void 
 29156 ;; Registers used:
 29157 ;;		wreg, status,2, status,0, cstack
 29158 ;; Tracked objects:
 29159 ;;		On entry : 0/0
 29160 ;;		On exit  : 0/0
 29161 ;;		Unchanged: 0/0
 29162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29167 ;;Total ram usage:        3 bytes
 29168 ;; Hardware stack levels used:    1
 29169 ;; Hardware stack levels required when called:   10
 29170 ;; This function calls:
 29171 ;;		_RADIO_RegisterRead
 29172 ;;		_RADIO_RegisterWrite
 29173 ;; This function is called by:
 29174 ;;		_RADIO_WriteConfiguration
 29175 ;; This function uses a non-reentrant model
 29176 ;;
 29177                           
 29178                           	psect	text136
 29179  0060BA                     __ptext136:
 29180                           	opt stack 0
 29181  0060BA                     _RADIO_WritePower:
 29182                           	opt stack 17
 29183                           
 29184                           ;incstack = 0
 29185                           ;RADIO_WritePower@power stored from wreg
 29186  0060BA  0100               	movlb	0	; () banked
 29187  0060BC  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29188                           
 29189                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 29190                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 29191                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 29192  0060BE  0101               	movlb	1	; () banked
 29193  0060C0  5198               	movf	(_RadioConfiguration+29)& (0+255),w,b
 29194  0060C2  A4D8               	btfss	status,2,c
 29195  0060C4  D030               	goto	l471
 29196                           
 29197                           ; BSR set to: 1
 29198                           ;radio_driver_SX1276.c: 348: {
 29199                           ;radio_driver_SX1276.c: 350: if (power < -3)
 29200  0060C6  0100               	movlb	0	; () banked
 29201  0060C8  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29202  0060CA  0A80               	xorlw	128
 29203  0060CC  0F83               	addlw	131
 29204  0060CE  B0D8               	btfsc	status,0,c
 29205  0060D0  D002               	goto	l472
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;radio_driver_SX1276.c: 351: {
 29209                           ;radio_driver_SX1276.c: 352: power = -3;
 29210  0060D2  0EFD               	movlw	253
 29211  0060D4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29212  0060D6                     l472:
 29213                           
 29214                           ; BSR set to: 0
 29215                           ;radio_driver_SX1276.c: 353: }
 29216                           ;radio_driver_SX1276.c: 354: if (power > 15)
 29217                           
 29218                           ; BSR set to: 0
 29219  0060D6  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29220  0060D8  0A80               	xorlw	128
 29221  0060DA  0F70               	addlw	-144
 29222  0060DC  A0D8               	btfss	status,0,c
 29223  0060DE  D002               	goto	l473
 29224                           
 29225                           ; BSR set to: 0
 29226                           ;radio_driver_SX1276.c: 355: {
 29227                           ;radio_driver_SX1276.c: 356: power = 15;
 29228  0060E0  0E0F               	movlw	15
 29229  0060E2  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29230  0060E4                     l473:
 29231                           
 29232                           ; BSR set to: 0
 29233                           ;radio_driver_SX1276.c: 357: }
 29234                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 29235                           
 29236                           ; BSR set to: 0
 29237  0060E4  0E4D               	movlw	77
 29238  0060E6  ECCA  F043         	call	_RADIO_RegisterRead
 29239  0060EA  0100               	movlb	0	; () banked
 29240  0060EC  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 29241                           
 29242                           ; BSR set to: 0
 29243                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 29244  0060EE  0EF8               	movlw	248
 29245  0060F0  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29246                           
 29247                           ; BSR set to: 0
 29248                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 29249  0060F2  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29250                           
 29251                           ; BSR set to: 0
 29252                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 29253  0060F4  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29254  0060F8  0E4D               	movlw	77
 29255  0060FA  EC7B  F044         	call	_RADIO_RegisterWrite
 29256                           
 29257                           ;radio_driver_SX1276.c: 364: if (power < 0)
 29258  0060FE  0100               	movlb	0	; () banked
 29259  006100  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 29260  006102  D009               	goto	l474
 29261                           
 29262                           ; BSR set to: 0
 29263                           ;radio_driver_SX1276.c: 365: {
 29264                           ;radio_driver_SX1276.c: 369: power += 3;
 29265  006104  0E03               	movlw	3
 29266  006106  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 29270  006108  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29271  00610A  0920               	iorlw	32
 29272  00610C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29273  00610E  0E09               	movlw	9
 29274  006110  EC7B  F044         	call	_RADIO_RegisterWrite
 29275                           
 29276                           ;radio_driver_SX1276.c: 371: }
 29277  006114  0012               	return	
 29278  006116                     l474:
 29279                           
 29280                           ;radio_driver_SX1276.c: 372: else
 29281                           ;radio_driver_SX1276.c: 373: {
 29282                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 29283  006116  0100               	movlb	0	; () banked
 29284  006118  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29285  00611A  0970               	iorlw	112
 29286  00611C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29287  00611E  0E09               	movlw	9
 29288  006120  EC7B  F044         	call	_RADIO_RegisterWrite
 29289                           
 29290                           ;radio_driver_SX1276.c: 378: }
 29291                           ;radio_driver_SX1276.c: 379: }
 29292  006124  0012               	return	
 29293  006126                     l471:
 29294                           
 29295                           ;radio_driver_SX1276.c: 380: else
 29296                           ;radio_driver_SX1276.c: 381: {
 29297                           ;radio_driver_SX1276.c: 385: if (power < 2)
 29298  006126  0100               	movlb	0	; () banked
 29299  006128  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29300  00612A  0A80               	xorlw	128
 29301  00612C  0F7E               	addlw	-130
 29302  00612E  B0D8               	btfsc	status,0,c
 29303  006130  D002               	goto	l477
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;radio_driver_SX1276.c: 386: {
 29307                           ;radio_driver_SX1276.c: 387: power = 2;
 29308  006132  0E02               	movlw	2
 29309  006134  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29310  006136                     l477:
 29311                           
 29312                           ; BSR set to: 0
 29313                           ;radio_driver_SX1276.c: 388: }
 29314                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 29315                           
 29316                           ; BSR set to: 0
 29317  006136  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29318  006138  0A80               	xorlw	128
 29319  00613A  0F6C               	addlw	-148
 29320  00613C  A0D8               	btfss	status,0,c
 29321  00613E  D002               	goto	l478
 29322                           
 29323                           ; BSR set to: 0
 29324                           ;radio_driver_SX1276.c: 392: {
 29325                           ;radio_driver_SX1276.c: 393: power = 20;
 29326  006140  0E14               	movlw	20
 29327  006142  D006               	goto	L22
 29328  006144                     l478:
 29329                           
 29330                           ; BSR set to: 0
 29331                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 29332                           
 29333                           ; BSR set to: 0
 29334  006144  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29335  006146  0A80               	xorlw	128
 29336  006148  0F6E               	addlw	-146
 29337  00614A  A0D8               	btfss	status,0,c
 29338  00614C  D002               	goto	l480
 29339                           
 29340                           ; BSR set to: 0
 29341                           ;radio_driver_SX1276.c: 396: {
 29342                           ;radio_driver_SX1276.c: 397: power = 17;
 29343  00614E  0E11               	movlw	17
 29344  006150                     L22:
 29345  006150  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29346  006152                     l480:
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;radio_driver_SX1276.c: 398: }
 29350                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 29351                           
 29352                           ; BSR set to: 0
 29353                           
 29354                           ; BSR set to: 0
 29355  006152  0E0B               	movlw	11
 29356  006154  ECCA  F043         	call	_RADIO_RegisterRead
 29357  006158  0100               	movlb	0	; () banked
 29358  00615A  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 29359                           
 29360                           ; BSR set to: 0
 29361                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 29362  00615C  0E4D               	movlw	77
 29363  00615E  ECCA  F043         	call	_RADIO_RegisterRead
 29364  006162  0100               	movlb	0	; () banked
 29365  006164  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 29369  006166  0EF8               	movlw	248
 29370  006168  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29371                           
 29372                           ; BSR set to: 0
 29373                           ;radio_driver_SX1276.c: 403: if (power == 20)
 29374  00616A  0E14               	movlw	20
 29375  00616C  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 29376  00616E  A4D8               	btfss	status,2,c
 29377  006170  D006               	goto	l481
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;radio_driver_SX1276.c: 404: {
 29381                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 29382  006172  0E07               	movlw	7
 29383  006174  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 29384                           
 29385                           ; BSR set to: 0
 29386                           ;radio_driver_SX1276.c: 406: power = 15;
 29387  006176  0E0F               	movlw	15
 29388  006178  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29389                           
 29390                           ; BSR set to: 0
 29391                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 29392  00617A  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 29393                           
 29394                           ;radio_driver_SX1276.c: 408: }
 29395  00617C  D004               	goto	l482
 29396  00617E                     l481:
 29397                           
 29398                           ; BSR set to: 0
 29399                           ;radio_driver_SX1276.c: 409: else
 29400                           ;radio_driver_SX1276.c: 410: {
 29401                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 29402                           
 29403                           ; BSR set to: 0
 29404  00617E  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;radio_driver_SX1276.c: 412: power -= 2;
 29408  006180  0EFE               	movlw	254
 29409  006182  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 29410                           
 29411                           ; BSR set to: 0
 29412                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 29413  006184  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 29414  006186                     l482:
 29415                           
 29416                           ; BSR set to: 0
 29417                           ;radio_driver_SX1276.c: 414: }
 29418                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 29419                           
 29420                           ; BSR set to: 0
 29421  006186  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29422  00618A  0E4D               	movlw	77
 29423  00618C  EC7B  F044         	call	_RADIO_RegisterWrite
 29424                           
 29425                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 29426  006190  0100               	movlb	0	; () banked
 29427  006192  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29428  006194  0980               	iorlw	128
 29429  006196  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29430  006198  0E09               	movlw	9
 29431  00619A  EC7B  F044         	call	_RADIO_RegisterWrite
 29432                           
 29433                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 29434  00619E  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 29435  0061A2  0E0B               	movlw	11
 29436  0061A4  EC7B  F044         	call	_RADIO_RegisterWrite
 29437  0061A8  0012               	return	
 29438  0061AA                     __end_of_RADIO_WritePower:
 29439                           	opt stack 0
 29440                           tosu	equ	0xFFF
 29441                           tosh	equ	0xFFE
 29442                           tosl	equ	0xFFD
 29443                           pclath	equ	0xFFA
 29444                           tblptru	equ	0xFF8
 29445                           tblptrh	equ	0xFF7
 29446                           tblptrl	equ	0xFF6
 29447                           tablat	equ	0xFF5
 29448                           prodh	equ	0xFF4
 29449                           prodl	equ	0xFF3
 29450                           intcon	equ	0xFF2
 29451                           intcon2	equ	0xFF1
 29452                           intcon3	equ	0xFF0
 29453                           indf0	equ	0xFEF
 29454                           postinc0	equ	0xFEE
 29455                           fsr0h	equ	0xFEA
 29456                           fsr0l	equ	0xFE9
 29457                           wreg	equ	0xFE8
 29458                           postinc1	equ	0xFE6
 29459                           postdec1	equ	0xFE5
 29460                           plusw1	equ	0xFE3
 29461                           fsr1h	equ	0xFE2
 29462                           fsr1l	equ	0xFE1
 29463                           indf2	equ	0xFDF
 29464                           postinc2	equ	0xFDE
 29465                           postdec2	equ	0xFDD
 29466                           plusw2	equ	0xFDB
 29467                           fsr2h	equ	0xFDA
 29468                           fsr2l	equ	0xFD9
 29469                           status	equ	0xFD8
 29470                           
 29471 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 29472 ;; Defined at:
 29473 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29474 ;; Parameters:    Size  Location     Type
 29475 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 29476 ;; Auto vars:     Size  Location     Type
 29477 ;;  num             4   17[BANK0 ] unsigned long 
 29478 ;; Return value:  Size  Location     Type
 29479 ;;                  1    wreg      void 
 29480 ;; Registers used:
 29481 ;;		wreg, status,2, status,0, cstack
 29482 ;; Tracked objects:
 29483 ;;		On entry : 0/0
 29484 ;;		On exit  : 0/0
 29485 ;;		Unchanged: 0/0
 29486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29491 ;;Total ram usage:        8 bytes
 29492 ;; Hardware stack levels used:    1
 29493 ;; Hardware stack levels required when called:   10
 29494 ;; This function calls:
 29495 ;;		_RADIO_RegisterWrite
 29496 ;;		___lldiv
 29497 ;; This function is called by:
 29498 ;;		_RADIO_WriteConfiguration
 29499 ;; This function uses a non-reentrant model
 29500 ;;
 29501                           
 29502                           	psect	text137
 29503  0076B8                     __ptext137:
 29504                           	opt stack 0
 29505  0076B8                     _RADIO_WriteFSKFrequencyDeviation:
 29506                           	opt stack 17
 29507                           
 29508                           ;radio_driver_SX1276.c: 296: uint32_t num;
 29509                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 29510                           
 29511                           ;incstack = 0
 29512  0076B8  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 29513  0076BC  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 29514  0076C0  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 29515  0076C4  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 29516                           
 29517                           ;radio_driver_SX1276.c: 304: num <<= (8);
 29518  0076C8  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 29519  0076CC  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 29520  0076D0  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 29521  0076D4  0100               	movlb	0	; () banked
 29522  0076D6  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 29523                           
 29524                           ; BSR set to: 0
 29525                           ;radio_driver_SX1276.c: 305: num /= 15625;
 29526  0076D8  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 29527  0076DC  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 29528  0076E0  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 29529  0076E4  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 29530  0076E8  0E09               	movlw	9
 29531  0076EA  6F64               	movwf	___lldiv@divisor& (0+255),b
 29532  0076EC  0E3D               	movlw	61
 29533  0076EE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 29534  0076F0  0E00               	movlw	0
 29535  0076F2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 29536  0076F4  0E00               	movlw	0
 29537  0076F6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 29538  0076F8  EC7A  F039         	call	___lldiv	;wreg free
 29539  0076FC  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 29540  007700  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 29541  007704  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 29542  007708  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 29543                           
 29544                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 29545  00770C  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 29546  007710  0E04               	movlw	4
 29547  007712  EC7B  F044         	call	_RADIO_RegisterWrite
 29548                           
 29549                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 29550  007716  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 29551  00771A  0E05               	movlw	5
 29552  00771C  EC7B  F044         	call	_RADIO_RegisterWrite
 29553  007720  0012               	return		;funcret
 29554  007722                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 29555                           	opt stack 0
 29556                           tosu	equ	0xFFF
 29557                           tosh	equ	0xFFE
 29558                           tosl	equ	0xFFD
 29559                           pclath	equ	0xFFA
 29560                           tblptru	equ	0xFF8
 29561                           tblptrh	equ	0xFF7
 29562                           tblptrl	equ	0xFF6
 29563                           tablat	equ	0xFF5
 29564                           prodh	equ	0xFF4
 29565                           prodl	equ	0xFF3
 29566                           intcon	equ	0xFF2
 29567                           intcon2	equ	0xFF1
 29568                           intcon3	equ	0xFF0
 29569                           indf0	equ	0xFEF
 29570                           postinc0	equ	0xFEE
 29571                           fsr0h	equ	0xFEA
 29572                           fsr0l	equ	0xFE9
 29573                           wreg	equ	0xFE8
 29574                           postinc1	equ	0xFE6
 29575                           postdec1	equ	0xFE5
 29576                           plusw1	equ	0xFE3
 29577                           fsr1h	equ	0xFE2
 29578                           fsr1l	equ	0xFE1
 29579                           indf2	equ	0xFDF
 29580                           postinc2	equ	0xFDE
 29581                           postdec2	equ	0xFDD
 29582                           plusw2	equ	0xFDB
 29583                           fsr2h	equ	0xFDA
 29584                           fsr2l	equ	0xFD9
 29585                           status	equ	0xFD8
 29586                           
 29587 ;; *************** function _RADIO_WriteFSKBitRate *****************
 29588 ;; Defined at:
 29589 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29590 ;; Parameters:    Size  Location     Type
 29591 ;;  bitRate         4   13[BANK0 ] unsigned long 
 29592 ;; Auto vars:     Size  Location     Type
 29593 ;;  num             4   17[BANK0 ] unsigned long 
 29594 ;; Return value:  Size  Location     Type
 29595 ;;                  1    wreg      void 
 29596 ;; Registers used:
 29597 ;;		wreg, status,2, status,0, cstack
 29598 ;; Tracked objects:
 29599 ;;		On entry : 0/0
 29600 ;;		On exit  : 0/0
 29601 ;;		Unchanged: 0/0
 29602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29604 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29606 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29607 ;;Total ram usage:        8 bytes
 29608 ;; Hardware stack levels used:    1
 29609 ;; Hardware stack levels required when called:   10
 29610 ;; This function calls:
 29611 ;;		_RADIO_RegisterWrite
 29612 ;;		___lldiv
 29613 ;; This function is called by:
 29614 ;;		_RADIO_WriteConfiguration
 29615 ;; This function uses a non-reentrant model
 29616 ;;
 29617                           
 29618                           	psect	text138
 29619  007722                     __ptext138:
 29620                           	opt stack 0
 29621  007722                     _RADIO_WriteFSKBitRate:
 29622                           	opt stack 17
 29623                           
 29624                           ;radio_driver_SX1276.c: 318: uint32_t num;
 29625                           ;radio_driver_SX1276.c: 320: num = 32000000;
 29626                           
 29627                           ;incstack = 0
 29628  007722  0E00               	movlw	0
 29629  007724  0100               	movlb	0	; () banked
 29630  007726  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 29631  007728  0E48               	movlw	72
 29632  00772A  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 29633  00772C  0EE8               	movlw	232
 29634  00772E  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 29635  007730  0E01               	movlw	1
 29636  007732  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 29637                           
 29638                           ; BSR set to: 0
 29639                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 29640  007734  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 29641  007738  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 29642  00773C  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 29643  007740  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 29644  007744  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 29645  007748  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 29646  00774C  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 29647  007750  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 29648  007754  EC7A  F039         	call	___lldiv	;wreg free
 29649  007758  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 29650  00775C  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 29651  007760  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 29652  007764  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 29653                           
 29654                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 29655  007768  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 29656  00776C  0E02               	movlw	2
 29657  00776E  EC7B  F044         	call	_RADIO_RegisterWrite
 29658                           
 29659                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 29660  007772  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 29661  007776  0E03               	movlw	3
 29662  007778  EC7B  F044         	call	_RADIO_RegisterWrite
 29663                           
 29664                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 29665  00777C  0E00               	movlw	0
 29666  00777E  0100               	movlb	0	; () banked
 29667  007780  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29668  007782  0E5D               	movlw	93
 29669  007784  EC7B  F044         	call	_RADIO_RegisterWrite
 29670  007788  0012               	return		;funcret
 29671  00778A                     __end_of_RADIO_WriteFSKBitRate:
 29672                           	opt stack 0
 29673                           tosu	equ	0xFFF
 29674                           tosh	equ	0xFFE
 29675                           tosl	equ	0xFFD
 29676                           pclath	equ	0xFFA
 29677                           tblptru	equ	0xFF8
 29678                           tblptrh	equ	0xFF7
 29679                           tblptrl	equ	0xFF6
 29680                           tablat	equ	0xFF5
 29681                           prodh	equ	0xFF4
 29682                           prodl	equ	0xFF3
 29683                           intcon	equ	0xFF2
 29684                           intcon2	equ	0xFF1
 29685                           intcon3	equ	0xFF0
 29686                           indf0	equ	0xFEF
 29687                           postinc0	equ	0xFEE
 29688                           fsr0h	equ	0xFEA
 29689                           fsr0l	equ	0xFE9
 29690                           wreg	equ	0xFE8
 29691                           postinc1	equ	0xFE6
 29692                           postdec1	equ	0xFE5
 29693                           plusw1	equ	0xFE3
 29694                           fsr1h	equ	0xFE2
 29695                           fsr1l	equ	0xFE1
 29696                           indf2	equ	0xFDF
 29697                           postinc2	equ	0xFDE
 29698                           postdec2	equ	0xFDD
 29699                           plusw2	equ	0xFDB
 29700                           fsr2h	equ	0xFDA
 29701                           fsr2l	equ	0xFD9
 29702                           status	equ	0xFD8
 29703                           
 29704 ;; *************** function _PrepareJoinRequestFrame *****************
 29705 ;; Defined at:
 29706 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29707 ;; Parameters:    Size  Location     Type
 29708 ;;		None
 29709 ;; Auto vars:     Size  Location     Type
 29710 ;;  mic             4  116[BANK0 ] unsigned long 
 29711 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 29712 ;;  iCtr            1  121[BANK0 ] unsigned char 
 29713 ;;  mhdr            1  120[BANK0 ] struct .
 29714 ;; Return value:  Size  Location     Type
 29715 ;;                  1    wreg      unsigned char 
 29716 ;; Registers used:
 29717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29718 ;; Tracked objects:
 29719 ;;		On entry : 0/0
 29720 ;;		On exit  : 0/0
 29721 ;;		Unchanged: 0/0
 29722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29724 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29725 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29726 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29727 ;;Total ram usage:       11 bytes
 29728 ;; Hardware stack levels used:    1
 29729 ;; Hardware stack levels required when called:   13
 29730 ;; This function calls:
 29731 ;;		_ComputeMic
 29732 ;;		_Random
 29733 ;;		_memcpy
 29734 ;;		_memset
 29735 ;; This function is called by:
 29736 ;;		_LORAWAN_Join
 29737 ;; This function uses a non-reentrant model
 29738 ;;
 29739                           
 29740                           	psect	text139
 29741  0047BA                     __ptext139:
 29742                           	opt stack 0
 29743  0047BA                     _PrepareJoinRequestFrame:
 29744                           	opt stack 16
 29745                           
 29746                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 29747                           
 29748                           ;incstack = 0
 29749  0047BA  0E00               	movlw	0
 29750  0047BC  0100               	movlb	0	; () banked
 29751  0047BE  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29752                           
 29753                           ; BSR set to: 0
 29754                           ;lorawan.c: 1809: Mhdr_t mhdr;
 29755                           ;lorawan.c: 1810: uint32_t mic;
 29756                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 29757  0047C0  0EE0               	movlw	low _macBuffer
 29758  0047C2  6F60               	movwf	memset@p1& (0+255),b
 29759  0047C4  0E04               	movlw	high _macBuffer
 29760  0047C6  6F61               	movwf	(memset@p1+1)& (0+255),b
 29761  0047C8  0E00               	movlw	0
 29762  0047CA  6F63               	movwf	(memset@c+1)& (0+255),b
 29763  0047CC  0E00               	movlw	0
 29764  0047CE  6F62               	movwf	memset@c& (0+255),b
 29765  0047D0  0E01               	movlw	1
 29766  0047D2  6F65               	movwf	(memset@n+1)& (0+255),b
 29767  0047D4  0E0F               	movlw	15
 29768  0047D6  6F64               	movwf	memset@n& (0+255),b
 29769  0047D8  EC6E  F042         	call	_memset	;wreg free
 29770                           
 29771                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 29772  0047DC  0100               	movlb	0	; () banked
 29773  0047DE  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 29774  0047E0  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 29775  0047E2  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 29776                           
 29777                           ; BSR set to: 0
 29778                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 29779  0047E4  0EFC               	movlw	-4
 29780  0047E6  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 29781                           
 29782                           ; BSR set to: 0
 29783                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 29784  0047E8  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 29785  0047EA  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 29786  0047EC  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 29790  0047EE  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29791  0047F0  0D01               	mullw	1
 29792  0047F2  0EE0               	movlw	low _macBuffer
 29793  0047F4  24F3               	addwf	prodl,w,c
 29794  0047F6  6ED9               	movwf	fsr2l,c
 29795  0047F8  0E04               	movlw	high _macBuffer
 29796  0047FA  20F4               	addwfc	prodh,w,c
 29797  0047FC  6EDA               	movwf	fsr2h,c
 29798  0047FE  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 29799                           
 29800                           ; BSR set to: 0
 29801  004802  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 29802                           
 29803                           ; BSR set to: 0
 29804                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 29805  004804  0E00               	movlw	0
 29806  004806  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29807  004808                     l16237:
 29808                           
 29809                           ; BSR set to: 0
 29810  004808  0E07               	movlw	7
 29811  00480A  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29812  00480C  D001               	goto	l2319
 29813  00480E  D022               	goto	u20050
 29814  004810                     l2319:
 29815                           
 29816                           ; BSR set to: 0
 29817                           ;lorawan.c: 1821: {
 29818                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 29819                           
 29820                           ; BSR set to: 0
 29821  004810  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29822  004812  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29823  004814  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29824  004816  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29825  004818  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29826  00481A  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29827  00481C  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29828  00481E  0E07               	movlw	7
 29829  004820  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29830  004822  0E00               	movlw	0
 29831  004824  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29832  004826  0E52               	movlw	low (_loRa+82)
 29833  004828  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29834  00482A  6ED9               	movwf	fsr2l,c
 29835  00482C  0E02               	movlw	high (_loRa+82)
 29836  00482E  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29837  004830  6EDA               	movwf	fsr2h,c
 29838  004832  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29839  004834  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29840  004838  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29841  00483A  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29842  00483C  0E00               	movlw	0
 29843  00483E  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29844  004840  0EE0               	movlw	low _macBuffer
 29845  004842  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29846  004844  6EE9               	movwf	fsr0l,c
 29847  004846  0E04               	movlw	high _macBuffer
 29848  004848  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29849  00484A  6EEA               	movwf	fsr0h,c
 29850  00484C  CFDF FFEF          	movff	indf2,indf0
 29851                           
 29852                           ; BSR set to: 0
 29853  004850  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29854  004852  D7DA               	goto	l16237
 29855  004854                     u20050:
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;lorawan.c: 1823: }
 29859                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 29860                           
 29861                           ; BSR set to: 0
 29862  004854  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29863  004856  0F08               	addlw	8
 29864  004858  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 29868  00485A  0E00               	movlw	0
 29869  00485C  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29870  00485E                     l16251:
 29871                           
 29872                           ; BSR set to: 0
 29873  00485E  0E07               	movlw	7
 29874  004860  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29875  004862  D001               	goto	l2321
 29876  004864  D022               	goto	u20070
 29877  004866                     l2321:
 29878                           
 29879                           ; BSR set to: 0
 29880                           ;lorawan.c: 1828: {
 29881                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 29882                           
 29883                           ; BSR set to: 0
 29884  004866  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29885  004868  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29886  00486A  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29887  00486C  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29888  00486E  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29889  004870  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29890  004872  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29891  004874  0E07               	movlw	7
 29892  004876  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29893  004878  0E00               	movlw	0
 29894  00487A  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29895  00487C  0E5A               	movlw	low (_loRa+90)
 29896  00487E  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29897  004880  6ED9               	movwf	fsr2l,c
 29898  004882  0E02               	movlw	high (_loRa+90)
 29899  004884  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29900  004886  6EDA               	movwf	fsr2h,c
 29901  004888  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29902  00488A  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29903  00488E  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29904  004890  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29905  004892  0E00               	movlw	0
 29906  004894  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29907  004896  0EE0               	movlw	low _macBuffer
 29908  004898  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29909  00489A  6EE9               	movwf	fsr0l,c
 29910  00489C  0E04               	movlw	high _macBuffer
 29911  00489E  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29912  0048A0  6EEA               	movwf	fsr0h,c
 29913  0048A2  CFDF FFEF          	movff	indf2,indf0
 29914                           
 29915                           ; BSR set to: 0
 29916  0048A6  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29917  0048A8  D7DA               	goto	l16251
 29918  0048AA                     u20070:
 29919                           
 29920                           ; BSR set to: 0
 29921                           ;lorawan.c: 1830: }
 29922                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 29923                           
 29924                           ; BSR set to: 0
 29925  0048AA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29926  0048AC  0F08               	addlw	8
 29927  0048AE  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29928                           
 29929                           ; BSR set to: 0
 29930                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 29931  0048B0  0EFF               	movlw	255
 29932  0048B2  6FAE               	movwf	(Random@max+1)& (0+255),b
 29933  0048B4  69AD               	setf	Random@max& (0+255),b
 29934  0048B6  EC39  F044         	call	_Random	;wreg free
 29935  0048BA  C0AD  F2D2         	movff	?_Random,_loRa+210
 29936  0048BE  C0AE  F2D3         	movff	?_Random+1,_loRa+211
 29937                           
 29938                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 29939  0048C2  0100               	movlb	0	; () banked
 29940  0048C4  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29941  0048C6  0D01               	mullw	1
 29942  0048C8  0EE0               	movlw	low _macBuffer
 29943  0048CA  24F3               	addwf	prodl,w,c
 29944  0048CC  6F60               	movwf	memcpy@d1& (0+255),b
 29945  0048CE  0E04               	movlw	high _macBuffer
 29946  0048D0  20F4               	addwfc	prodh,w,c
 29947  0048D2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29948  0048D4  0ED2               	movlw	low (_loRa+210)
 29949  0048D6  6F62               	movwf	memcpy@s1& (0+255),b
 29950  0048D8  0E02               	movlw	high (_loRa+210)
 29951  0048DA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29952  0048DC  0E00               	movlw	0
 29953  0048DE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29954  0048E0  0E02               	movlw	2
 29955  0048E2  6F64               	movwf	memcpy@n& (0+255),b
 29956  0048E4  EC22  F03D         	call	_memcpy	;wreg free
 29957                           
 29958                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 29959  0048E8  0100               	movlb	0	; () banked
 29960  0048EA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29961  0048EC  0F02               	addlw	2
 29962  0048EE  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29963                           
 29964                           ; BSR set to: 0
 29965                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 29966  0048F0  0E42               	movlw	low (_loRa+66)
 29967  0048F2  6FC7               	movwf	ComputeMic@key& (0+255),b
 29968  0048F4  0E02               	movlw	high (_loRa+66)
 29969  0048F6  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 29970  0048F8  0EE0               	movlw	low _macBuffer
 29971  0048FA  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 29972  0048FC  0E04               	movlw	high _macBuffer
 29973  0048FE  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 29974  004900  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 29975  004904  EC5F  F03C         	call	_ComputeMic	;wreg free
 29976  004908  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 29977  00490C  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 29978  004910  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 29979  004914  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 29980                           
 29981                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 29982  004918  0100               	movlb	0	; () banked
 29983  00491A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29984  00491C  0D01               	mullw	1
 29985  00491E  0EE0               	movlw	low _macBuffer
 29986  004920  24F3               	addwf	prodl,w,c
 29987  004922  6F60               	movwf	memcpy@d1& (0+255),b
 29988  004924  0E04               	movlw	high _macBuffer
 29989  004926  20F4               	addwfc	prodh,w,c
 29990  004928  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29991  00492A  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 29992  00492C  6F62               	movwf	memcpy@s1& (0+255),b
 29993  00492E  0E00               	movlw	high PrepareJoinRequestFrame@mic
 29994  004930  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29995  004932  0E00               	movlw	0
 29996  004934  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29997  004936  0E04               	movlw	4
 29998  004938  6F64               	movwf	memcpy@n& (0+255),b
 29999  00493A  EC22  F03D         	call	_memcpy	;wreg free
 30000                           
 30001                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 30002  00493E  0100               	movlb	0	; () banked
 30003  004940  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30004  004942  0F04               	addlw	4
 30005  004944  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 30006                           
 30007                           ; BSR set to: 0
 30008                           ;lorawan.c: 1842: return bufferIndex;
 30009  004946  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 30010  004948  0012               	return	
 30011  00494A                     __end_of_PrepareJoinRequestFrame:
 30012                           	opt stack 0
 30013                           tosu	equ	0xFFF
 30014                           tosh	equ	0xFFE
 30015                           tosl	equ	0xFFD
 30016                           pclath	equ	0xFFA
 30017                           tblptru	equ	0xFF8
 30018                           tblptrh	equ	0xFF7
 30019                           tblptrl	equ	0xFF6
 30020                           tablat	equ	0xFF5
 30021                           prodh	equ	0xFF4
 30022                           prodl	equ	0xFF3
 30023                           intcon	equ	0xFF2
 30024                           intcon2	equ	0xFF1
 30025                           intcon3	equ	0xFF0
 30026                           indf0	equ	0xFEF
 30027                           postinc0	equ	0xFEE
 30028                           fsr0h	equ	0xFEA
 30029                           fsr0l	equ	0xFE9
 30030                           wreg	equ	0xFE8
 30031                           postinc1	equ	0xFE6
 30032                           postdec1	equ	0xFE5
 30033                           plusw1	equ	0xFE3
 30034                           fsr1h	equ	0xFE2
 30035                           fsr1l	equ	0xFE1
 30036                           indf2	equ	0xFDF
 30037                           postinc2	equ	0xFDE
 30038                           postdec2	equ	0xFDD
 30039                           plusw2	equ	0xFDB
 30040                           fsr2h	equ	0xFDA
 30041                           fsr2l	equ	0xFD9
 30042                           status	equ	0xFD8
 30043                           
 30044 ;; *************** function _Random *****************
 30045 ;; Defined at:
 30046 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30047 ;; Parameters:    Size  Location     Type
 30048 ;;  max             2   77[BANK0 ] unsigned int 
 30049 ;; Auto vars:     Size  Location     Type
 30050 ;;		None
 30051 ;; Return value:  Size  Location     Type
 30052 ;;                  2   77[BANK0 ] unsigned int 
 30053 ;; Registers used:
 30054 ;;		wreg, status,2, status,0, cstack
 30055 ;; Tracked objects:
 30056 ;;		On entry : 0/0
 30057 ;;		On exit  : 0/0
 30058 ;;		Unchanged: 0/0
 30059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30064 ;;Total ram usage:        2 bytes
 30065 ;; Hardware stack levels used:    1
 30066 ;; Hardware stack levels required when called:    9
 30067 ;; This function calls:
 30068 ;;		___lwmod
 30069 ;;		_rand
 30070 ;; This function is called by:
 30071 ;;		_SearchAvailableChannel
 30072 ;;		_PrepareJoinRequestFrame
 30073 ;; This function uses a non-reentrant model
 30074 ;;
 30075                           
 30076                           	psect	text140
 30077  008872                     __ptext140:
 30078                           	opt stack 0
 30079  008872                     _Random:
 30080                           	opt stack 18
 30081                           
 30082                           ;lorawan.c: 1118: return (rand () % max);
 30083                           
 30084                           ; BSR set to: 0
 30085                           ;incstack = 0
 30086  008872  ECB0  F03D         	call	_rand	;wreg free
 30087  008876  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 30088  00887A  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 30089  00887E  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 30090  008882  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 30091  008886  EC82  F040         	call	___lwmod	;wreg free
 30092  00888A  C0A8  F0AD         	movff	?___lwmod,?_Random
 30093  00888E  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 30094  008892  0012               	return	
 30095  008894                     __end_of_Random:
 30096                           	opt stack 0
 30097                           tosu	equ	0xFFF
 30098                           tosh	equ	0xFFE
 30099                           tosl	equ	0xFFD
 30100                           pclath	equ	0xFFA
 30101                           tblptru	equ	0xFF8
 30102                           tblptrh	equ	0xFF7
 30103                           tblptrl	equ	0xFF6
 30104                           tablat	equ	0xFF5
 30105                           prodh	equ	0xFF4
 30106                           prodl	equ	0xFF3
 30107                           intcon	equ	0xFF2
 30108                           intcon2	equ	0xFF1
 30109                           intcon3	equ	0xFF0
 30110                           indf0	equ	0xFEF
 30111                           postinc0	equ	0xFEE
 30112                           fsr0h	equ	0xFEA
 30113                           fsr0l	equ	0xFE9
 30114                           wreg	equ	0xFE8
 30115                           postinc1	equ	0xFE6
 30116                           postdec1	equ	0xFE5
 30117                           plusw1	equ	0xFE3
 30118                           fsr1h	equ	0xFE2
 30119                           fsr1l	equ	0xFE1
 30120                           indf2	equ	0xFDF
 30121                           postinc2	equ	0xFDE
 30122                           postdec2	equ	0xFDD
 30123                           plusw2	equ	0xFDB
 30124                           fsr2h	equ	0xFDA
 30125                           fsr2l	equ	0xFD9
 30126                           status	equ	0xFD8
 30127                           
 30128 ;; *************** function _rand *****************
 30129 ;; Defined at:
 30130 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;		None
 30133 ;; Auto vars:     Size  Location     Type
 30134 ;;		None
 30135 ;; Return value:  Size  Location     Type
 30136 ;;                  2   70[BANK0 ] int 
 30137 ;; Registers used:
 30138 ;;		wreg, status,2, status,0, cstack
 30139 ;; Tracked objects:
 30140 ;;		On entry : 0/0
 30141 ;;		On exit  : 0/0
 30142 ;;		Unchanged: 0/0
 30143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30148 ;;Total ram usage:        2 bytes
 30149 ;; Hardware stack levels used:    1
 30150 ;; Hardware stack levels required when called:    8
 30151 ;; This function calls:
 30152 ;;		___lmul
 30153 ;; This function is called by:
 30154 ;;		_Random
 30155 ;; This function uses a non-reentrant model
 30156 ;;
 30157                           
 30158                           	psect	text141
 30159  007B60                     __ptext141:
 30160                           	opt stack 0
 30161  007B60                     _rand:
 30162                           	opt stack 18
 30163                           
 30164                           ;incstack = 0
 30165  007B60  C1D9  F09A         	movff	_randx,___lmul@multiplier
 30166  007B64  C1DA  F09B         	movff	_randx+1,___lmul@multiplier+1
 30167  007B68  C1DB  F09C         	movff	_randx+2,___lmul@multiplier+2
 30168  007B6C  C1DC  F09D         	movff	_randx+3,___lmul@multiplier+3
 30169  007B70  0E6D               	movlw	109
 30170  007B72  0100               	movlb	0	; () banked
 30171  007B74  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 30172  007B76  0E4E               	movlw	78
 30173  007B78  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30174  007B7A  0EC6               	movlw	198
 30175  007B7C  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30176  007B7E  0E41               	movlw	65
 30177  007B80  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30178  007B82  EC38  F03E         	call	___lmul	;wreg free
 30179  007B86  C09A  F1D9         	movff	?___lmul,_randx
 30180  007B8A  C09B  F1DA         	movff	?___lmul+1,_randx+1
 30181  007B8E  C09C  F1DB         	movff	?___lmul+2,_randx+2
 30182  007B92  C09D  F1DC         	movff	?___lmul+3,_randx+3
 30183  007B96  0E39               	movlw	57
 30184  007B98  0101               	movlb	1	; () banked
 30185  007B9A  27D9               	addwf	_randx& (0+255),f,b
 30186  007B9C  0E30               	movlw	48
 30187  007B9E  23DA               	addwfc	(_randx+1)& (0+255),f,b
 30188  007BA0  0E00               	movlw	0
 30189  007BA2  23DB               	addwfc	(_randx+2)& (0+255),f,b
 30190  007BA4  0E00               	movlw	0
 30191  007BA6  23DC               	addwfc	(_randx+3)& (0+255),f,b
 30192                           
 30193                           ; BSR set to: 1
 30194  007BA8  0EFF               	movlw	255
 30195  007BAA  15DB               	andwf	(_randx+2)& (0+255),w,b
 30196  007BAC  0100               	movlb	0	; () banked
 30197  007BAE  6FA6               	movwf	?_rand& (0+255),b
 30198  007BB0  0E7F               	movlw	127
 30199  007BB2  0101               	movlb	1	; () banked
 30200  007BB4  15DC               	andwf	(_randx+3)& (0+255),w,b
 30201  007BB6  0100               	movlb	0	; () banked
 30202  007BB8  6FA7               	movwf	(?_rand+1)& (0+255),b
 30203  007BBA  0012               	return	
 30204  007BBC                     __end_of_rand:
 30205                           	opt stack 0
 30206                           tosu	equ	0xFFF
 30207                           tosh	equ	0xFFE
 30208                           tosl	equ	0xFFD
 30209                           pclath	equ	0xFFA
 30210                           tblptru	equ	0xFF8
 30211                           tblptrh	equ	0xFF7
 30212                           tblptrl	equ	0xFF6
 30213                           tablat	equ	0xFF5
 30214                           prodh	equ	0xFF4
 30215                           prodl	equ	0xFF3
 30216                           intcon	equ	0xFF2
 30217                           intcon2	equ	0xFF1
 30218                           intcon3	equ	0xFF0
 30219                           indf0	equ	0xFEF
 30220                           postinc0	equ	0xFEE
 30221                           fsr0h	equ	0xFEA
 30222                           fsr0l	equ	0xFE9
 30223                           wreg	equ	0xFE8
 30224                           postinc1	equ	0xFE6
 30225                           postdec1	equ	0xFE5
 30226                           plusw1	equ	0xFE3
 30227                           fsr1h	equ	0xFE2
 30228                           fsr1l	equ	0xFE1
 30229                           indf2	equ	0xFDF
 30230                           postinc2	equ	0xFDE
 30231                           postdec2	equ	0xFDD
 30232                           plusw2	equ	0xFDB
 30233                           fsr2h	equ	0xFDA
 30234                           fsr2l	equ	0xFD9
 30235                           status	equ	0xFD8
 30236                           
 30237 ;; *************** function ___lwmod *****************
 30238 ;; Defined at:
 30239 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 30240 ;; Parameters:    Size  Location     Type
 30241 ;;  dividend        2   72[BANK0 ] unsigned int 
 30242 ;;  divisor         2   74[BANK0 ] unsigned int 
 30243 ;; Auto vars:     Size  Location     Type
 30244 ;;  counter         1   76[BANK0 ] unsigned char 
 30245 ;; Return value:  Size  Location     Type
 30246 ;;                  2   72[BANK0 ] unsigned int 
 30247 ;; Registers used:
 30248 ;;		wreg, status,2, status,0
 30249 ;; Tracked objects:
 30250 ;;		On entry : 0/0
 30251 ;;		On exit  : 0/0
 30252 ;;		Unchanged: 0/0
 30253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30257 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30258 ;;Total ram usage:        5 bytes
 30259 ;; Hardware stack levels used:    1
 30260 ;; Hardware stack levels required when called:    7
 30261 ;; This function calls:
 30262 ;;		Nothing
 30263 ;; This function is called by:
 30264 ;;		_Random
 30265 ;; This function uses a non-reentrant model
 30266 ;;
 30267                           
 30268                           	psect	text142
 30269  008104                     __ptext142:
 30270                           	opt stack 0
 30271  008104                     ___lwmod:
 30272                           	opt stack 19
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;incstack = 0
 30276  008104  0100               	movlb	0	; () banked
 30277  008106  51AA               	movf	___lwmod@divisor& (0+255),w,b
 30278  008108  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30279  00810A  B4D8               	btfsc	status,2,c
 30280  00810C  D018               	goto	l2930
 30281                           
 30282                           ; BSR set to: 0
 30283  00810E  0E01               	movlw	1
 30284  008110  6FAC               	movwf	___lwmod@counter& (0+255),b
 30285  008112  D004               	goto	l2925
 30286  008114                     
 30287                           ; BSR set to: 0
 30288                           
 30289                           ; BSR set to: 0
 30290  008114  90D8               	bcf	status,0,c
 30291  008116  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 30292  008118  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30293  00811A  2BAC               	incf	___lwmod@counter& (0+255),f,b
 30294  00811C                     l2925:
 30295                           
 30296                           ; BSR set to: 0
 30297                           
 30298                           ; BSR set to: 0
 30299  00811C  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30300  00811E  D7FA               	goto	l2926
 30301  008120                     u14870:
 30302                           
 30303                           ; BSR set to: 0
 30304                           
 30305                           ; BSR set to: 0
 30306                           
 30307                           ; BSR set to: 0
 30308  008120  51AA               	movf	___lwmod@divisor& (0+255),w,b
 30309  008122  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 30310  008124  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30311  008126  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30312  008128  A0D8               	btfss	status,0,c
 30313  00812A  D004               	goto	l2929
 30314                           
 30315                           ; BSR set to: 0
 30316  00812C  51AA               	movf	___lwmod@divisor& (0+255),w,b
 30317  00812E  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 30318  008130  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30319  008132  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30320  008134                     l2929:
 30321                           
 30322                           ; BSR set to: 0
 30323                           
 30324                           ; BSR set to: 0
 30325  008134  90D8               	bcf	status,0,c
 30326  008136  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30327  008138  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 30328                           
 30329                           ; BSR set to: 0
 30330  00813A  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 30331  00813C  D7F1               	goto	u14870
 30332  00813E                     l2930:
 30333                           
 30334                           ; BSR set to: 0
 30335                           
 30336                           ; BSR set to: 0
 30337  00813E  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 30338  008142  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 30339                           
 30340                           ; BSR set to: 0
 30341  008146  0012               	return		;funcret
 30342  008148                     __end_of___lwmod:
 30343                           	opt stack 0
 30344                           tosu	equ	0xFFF
 30345                           tosh	equ	0xFFE
 30346                           tosl	equ	0xFFD
 30347                           pclath	equ	0xFFA
 30348                           tblptru	equ	0xFF8
 30349                           tblptrh	equ	0xFF7
 30350                           tblptrl	equ	0xFF6
 30351                           tablat	equ	0xFF5
 30352                           prodh	equ	0xFF4
 30353                           prodl	equ	0xFF3
 30354                           intcon	equ	0xFF2
 30355                           intcon2	equ	0xFF1
 30356                           intcon3	equ	0xFF0
 30357                           indf0	equ	0xFEF
 30358                           postinc0	equ	0xFEE
 30359                           fsr0h	equ	0xFEA
 30360                           fsr0l	equ	0xFE9
 30361                           wreg	equ	0xFE8
 30362                           postinc1	equ	0xFE6
 30363                           postdec1	equ	0xFE5
 30364                           plusw1	equ	0xFE3
 30365                           fsr1h	equ	0xFE2
 30366                           fsr1l	equ	0xFE1
 30367                           indf2	equ	0xFDF
 30368                           postinc2	equ	0xFDE
 30369                           postdec2	equ	0xFDD
 30370                           plusw2	equ	0xFDB
 30371                           fsr2h	equ	0xFDA
 30372                           fsr2l	equ	0xFD9
 30373                           status	equ	0xFD8
 30374                           
 30375 ;; *************** function _ComputeMic *****************
 30376 ;; Defined at:
 30377 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30378 ;; Parameters:    Size  Location     Type
 30379 ;;  key             2  103[BANK0 ] PTR unsigned char 
 30380 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30381 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 30382 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30383 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 30384 ;; Auto vars:     Size  Location     Type
 30385 ;;  mic             4  108[BANK0 ] unsigned long 
 30386 ;; Return value:  Size  Location     Type
 30387 ;;                  4  103[BANK0 ] unsigned long 
 30388 ;; Registers used:
 30389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30390 ;; Tracked objects:
 30391 ;;		On entry : 0/0
 30392 ;;		On exit  : 0/0
 30393 ;;		Unchanged: 0/0
 30394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30395 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30396 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30398 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30399 ;;Total ram usage:        9 bytes
 30400 ;; Hardware stack levels used:    1
 30401 ;; Hardware stack levels required when called:   12
 30402 ;; This function calls:
 30403 ;;		_AESCmac
 30404 ;;		_memcpy
 30405 ;; This function is called by:
 30406 ;;		_LORAWAN_RxDone
 30407 ;;		_PrepareJoinRequestFrame
 30408 ;; This function uses a non-reentrant model
 30409 ;;
 30410                           
 30411                           	psect	text143
 30412  0078BE                     __ptext143:
 30413                           	opt stack 0
 30414  0078BE                     _ComputeMic:
 30415                           	opt stack 14
 30416                           
 30417                           ;lorawan.c: 2196: uint32_t mic = 0;
 30418                           
 30419                           ; BSR set to: 0
 30420                           ;incstack = 0
 30421  0078BE  0E00               	movlw	0
 30422  0078C0  0100               	movlb	0	; () banked
 30423  0078C2  6FCC               	movwf	ComputeMic@mic& (0+255),b
 30424  0078C4  0E00               	movlw	0
 30425  0078C6  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 30426  0078C8  0E00               	movlw	0
 30427  0078CA  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 30428  0078CC  0E00               	movlw	0
 30429  0078CE  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 30430                           
 30431                           ; BSR set to: 0
 30432                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 30433  0078D0  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 30434  0078D4  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 30435  0078D8  0EB1               	movlw	low _aesBuffer
 30436  0078DA  6FBB               	movwf	AESCmac@output& (0+255),b
 30437  0078DC  0E01               	movlw	high _aesBuffer
 30438  0078DE  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 30439  0078E0  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 30440  0078E4  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 30441  0078E8  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 30442  0078EC  ECF8  F010         	call	_AESCmac	;wreg free
 30443                           
 30444                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 30445  0078F0  0ECC               	movlw	low ComputeMic@mic
 30446  0078F2  0100               	movlb	0	; () banked
 30447  0078F4  6F60               	movwf	memcpy@d1& (0+255),b
 30448  0078F6  0E00               	movlw	high ComputeMic@mic
 30449  0078F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30450  0078FA  0EB1               	movlw	low _aesBuffer
 30451  0078FC  6F62               	movwf	memcpy@s1& (0+255),b
 30452  0078FE  0E01               	movlw	high _aesBuffer
 30453  007900  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30454  007902  0E00               	movlw	0
 30455  007904  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30456  007906  0E04               	movlw	4
 30457  007908  6F64               	movwf	memcpy@n& (0+255),b
 30458  00790A  EC22  F03D         	call	_memcpy	;wreg free
 30459                           
 30460                           ;lorawan.c: 2202: return mic;
 30461  00790E  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 30462  007912  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 30463  007916  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 30464  00791A  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 30465  00791E  0012               	return	
 30466  007920                     __end_of_ComputeMic:
 30467                           	opt stack 0
 30468                           tosu	equ	0xFFF
 30469                           tosh	equ	0xFFE
 30470                           tosl	equ	0xFFD
 30471                           pclath	equ	0xFFA
 30472                           tblptru	equ	0xFF8
 30473                           tblptrh	equ	0xFF7
 30474                           tblptrl	equ	0xFF6
 30475                           tablat	equ	0xFF5
 30476                           prodh	equ	0xFF4
 30477                           prodl	equ	0xFF3
 30478                           intcon	equ	0xFF2
 30479                           intcon2	equ	0xFF1
 30480                           intcon3	equ	0xFF0
 30481                           indf0	equ	0xFEF
 30482                           postinc0	equ	0xFEE
 30483                           fsr0h	equ	0xFEA
 30484                           fsr0l	equ	0xFE9
 30485                           wreg	equ	0xFE8
 30486                           postinc1	equ	0xFE6
 30487                           postdec1	equ	0xFE5
 30488                           plusw1	equ	0xFE3
 30489                           fsr1h	equ	0xFE2
 30490                           fsr1l	equ	0xFE1
 30491                           indf2	equ	0xFDF
 30492                           postinc2	equ	0xFDE
 30493                           postdec2	equ	0xFDD
 30494                           plusw2	equ	0xFDB
 30495                           fsr2h	equ	0xFDA
 30496                           fsr2l	equ	0xFD9
 30497                           status	equ	0xFD8
 30498                           
 30499 ;; *************** function _AESCmac *****************
 30500 ;; Defined at:
 30501 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30502 ;; Parameters:    Size  Location     Type
 30503 ;;  key             2   89[BANK0 ] PTR unsigned char 
 30504 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30505 ;;  output          2   91[BANK0 ] PTR unsigned char 
 30506 ;;		 -> aesBuffer(16), 
 30507 ;;  input           2   93[BANK0 ] PTR unsigned char 
 30508 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30509 ;;  size            1   95[BANK0 ] unsigned char 
 30510 ;; Auto vars:     Size  Location     Type
 30511 ;;  x              16   80[BANK1 ] unsigned char [16]
 30512 ;;  y              16   64[BANK1 ] unsigned char [16]
 30513 ;;  padded         16   48[BANK1 ] unsigned char [16]
 30514 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 30515 ;;  k1             16   16[BANK1 ] unsigned char [16]
 30516 ;;  k2             16    0[BANK1 ] unsigned char [16]
 30517 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 30518 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 30519 ;;  i               1  101[BANK1 ] unsigned char 
 30520 ;;  j               1  100[BANK1 ] unsigned char 
 30521 ;;  n               1   99[BANK1 ] unsigned char 
 30522 ;;  flag            1   98[BANK1 ] unsigned char 
 30523 ;; Return value:  Size  Location     Type
 30524 ;;                  1    wreg      void 
 30525 ;; Registers used:
 30526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30527 ;; Tracked objects:
 30528 ;;		On entry : 0/0
 30529 ;;		On exit  : 0/0
 30530 ;;		Unchanged: 0/0
 30531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30532 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30533 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30534 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30535 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30536 ;;Total ram usage:      116 bytes
 30537 ;; Hardware stack levels used:    1
 30538 ;; Hardware stack levels required when called:   11
 30539 ;; This function calls:
 30540 ;;		_AESEncodeLoRa
 30541 ;;		_GenerateSubkey
 30542 ;;		_memcpy
 30543 ;;		_memset
 30544 ;; This function is called by:
 30545 ;;		_LORAWAN_RxDone
 30546 ;;		_AssemblePacket
 30547 ;;		_ComputeMic
 30548 ;; This function uses a non-reentrant model
 30549 ;;
 30550                           
 30551                           	psect	text144
 30552  0021F0                     __ptext144:
 30553                           	opt stack 0
 30554  0021F0                     _AESCmac:
 30555                           	opt stack 17
 30556                           
 30557                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 30558                           
 30559                           ;incstack = 0
 30560  0021F0  0E00               	movlw	0
 30561  0021F2  0101               	movlb	1	; () banked
 30562  0021F4  6F63               	movwf	AESCmac@n& (0+255),b
 30563  0021F6  0E00               	movlw	0
 30564  0021F8  6F65               	movwf	AESCmac@i& (0+255),b
 30565  0021FA  0E00               	movlw	0
 30566  0021FC  6F64               	movwf	AESCmac@j& (0+255),b
 30567                           
 30568                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 30569  0021FE  0E00               	movlw	0
 30570  002200  6F62               	movwf	AESCmac@flag& (0+255),b
 30571                           
 30572                           ; BSR set to: 1
 30573                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 30574                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 30575                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 30576  002202  0E00               	movlw	0
 30577  002204  6F60               	movwf	AESCmac@ptr& (0+255),b
 30578  002206  0E00               	movlw	0
 30579  002208  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 30580                           
 30581                           ; BSR set to: 1
 30582                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 30583  00220A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 30584  00220E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 30585  002212  0E10               	movlw	low AESCmac@k1
 30586  002214  0100               	movlb	0	; () banked
 30587  002216  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 30588  002218  0E01               	movlw	high AESCmac@k1
 30589  00221A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 30590  00221C  0E00               	movlw	low AESCmac@k2
 30591  00221E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 30592  002220  0E01               	movlw	high AESCmac@k2
 30593  002222  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 30594  002224  EC53  F02A         	call	_GenerateSubkey	;wreg free
 30595                           
 30596                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 30597  002228  0100               	movlb	0	; () banked
 30598  00222A  51BF               	movf	AESCmac@size& (0+255),w,b
 30599  00222C  6FC0               	movwf	??_AESCmac& (0+255),b
 30600  00222E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30601  002230  0E0F               	movlw	15
 30602  002232  27C0               	addwf	??_AESCmac& (0+255),f,b
 30603  002234  0E00               	movlw	0
 30604  002236  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 30605  002238  0E04               	movlw	4
 30606  00223A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30607  00223C                     u15395:
 30608  00223C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 30609  00223E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 30610  002240  33C0               	rrcf	??_AESCmac& (0+255),f,b
 30611  002242  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 30612  002244  D7FB               	goto	u15395
 30613  002246  51C0               	movf	??_AESCmac& (0+255),w,b
 30614  002248  0101               	movlb	1	; () banked
 30615  00224A  6F63               	movwf	AESCmac@n& (0+255),b
 30616                           
 30617                           ; BSR set to: 1
 30618                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 30619  00224C  5163               	movf	AESCmac@n& (0+255),w,b
 30620  00224E  A4D8               	btfss	status,2,c
 30621  002250  D004               	goto	l86
 30622                           
 30623                           ; BSR set to: 1
 30624                           ;lorawan_aes_cmac.c: 53: {
 30625                           ;lorawan_aes_cmac.c: 54: n = 1;
 30626  002252  0E01               	movlw	1
 30627  002254  6F63               	movwf	AESCmac@n& (0+255),b
 30628                           
 30629                           ;lorawan_aes_cmac.c: 55: flag = 0;
 30630  002256  0E00               	movlw	0
 30631  002258  D00B               	goto	L23
 30632  00225A                     l86:
 30633                           
 30634                           ; BSR set to: 1
 30635                           ;lorawan_aes_cmac.c: 57: else
 30636                           ;lorawan_aes_cmac.c: 58: {
 30637                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 30638                           
 30639                           ; BSR set to: 1
 30640  00225A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 30641  00225E  0E0F               	movlw	15
 30642  002260  0100               	movlb	0	; () banked
 30643  002262  17C0               	andwf	??_AESCmac& (0+255),f,b
 30644  002264  A4D8               	btfss	status,2,c
 30645  002266  D002               	goto	u15410
 30646  002268  0E01               	movlw	1
 30647  00226A  D001               	goto	u15420
 30648  00226C                     u15410:
 30649  00226C  0E00               	movlw	0
 30650  00226E                     u15420:
 30651  00226E  0101               	movlb	1	; () banked
 30652  002270                     L23:
 30653  002270  6F62               	movwf	AESCmac@flag& (0+255),b
 30654                           
 30655                           ; BSR set to: 1
 30656                           ;lorawan_aes_cmac.c: 60: }
 30657                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 30658  002272  0562               	decf	AESCmac@flag& (0+255),w,b
 30659  002274  A4D8               	btfss	status,2,c
 30660  002276  D048               	goto	l88
 30661                           
 30662                           ; BSR set to: 1
 30663                           ;lorawan_aes_cmac.c: 63: {
 30664                           ;lorawan_aes_cmac.c: 64: j = 0;
 30665  002278  0E00               	movlw	0
 30666  00227A  6F64               	movwf	AESCmac@j& (0+255),b
 30667                           
 30668                           ; BSR set to: 1
 30669                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 30670  00227C  3963               	swapf	AESCmac@n& (0+255),w,b
 30671  00227E  0BF0               	andlw	240
 30672  002280  0FF0               	addlw	240
 30673  002282  6F65               	movwf	AESCmac@i& (0+255),b
 30674  002284  D024               	goto	l89
 30675  002286                     
 30676                           ;lorawan_aes_cmac.c: 66: {
 30677                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 30678                           
 30679                           ; BSR set to: 1
 30680  002286  0101               	movlb	1	; () banked
 30681  002288  5164               	movf	AESCmac@j& (0+255),w,b
 30682  00228A  0D01               	mullw	1
 30683  00228C  0E20               	movlw	low AESCmac@mLast
 30684  00228E  24F3               	addwf	prodl,w,c
 30685  002290  6ED9               	movwf	fsr2l,c
 30686  002292  0E01               	movlw	high AESCmac@mLast
 30687  002294  20F4               	addwfc	prodh,w,c
 30688  002296  6EDA               	movwf	fsr2h,c
 30689  002298  5164               	movf	AESCmac@j& (0+255),w,b
 30690  00229A  0D01               	mullw	1
 30691  00229C  0E10               	movlw	low AESCmac@k1
 30692  00229E  24F3               	addwf	prodl,w,c
 30693  0022A0  6EE9               	movwf	fsr0l,c
 30694  0022A2  0E01               	movlw	high AESCmac@k1
 30695  0022A4  20F4               	addwfc	prodh,w,c
 30696  0022A6  6EEA               	movwf	fsr0h,c
 30697  0022A8  50EF               	movf	indf0,w,c
 30698  0022AA  0100               	movlb	0	; () banked
 30699  0022AC  6FC0               	movwf	??_AESCmac& (0+255),b
 30700  0022AE  0101               	movlb	1	; () banked
 30701  0022B0  5165               	movf	AESCmac@i& (0+255),w,b
 30702  0022B2  0D01               	mullw	1
 30703  0022B4  50F3               	movf	prodl,w,c
 30704  0022B6  0100               	movlb	0	; () banked
 30705  0022B8  25BD               	addwf	AESCmac@input& (0+255),w,b
 30706  0022BA  6EE9               	movwf	fsr0l,c
 30707  0022BC  50F4               	movf	prodh,w,c
 30708  0022BE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 30709  0022C0  6EEA               	movwf	fsr0h,c
 30710  0022C2  50EF               	movf	indf0,w,c
 30711  0022C4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 30712  0022C6  6EDF               	movwf	indf2,c
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;lorawan_aes_cmac.c: 68: j++;
 30716  0022C8  0101               	movlb	1	; () banked
 30717  0022CA  2B64               	incf	AESCmac@j& (0+255),f,b
 30718                           
 30719                           ; BSR set to: 1
 30720  0022CC  2B65               	incf	AESCmac@i& (0+255),f,b
 30721  0022CE                     l89:
 30722                           
 30723                           ; BSR set to: 1
 30724                           
 30725                           ; BSR set to: 1
 30726  0022CE  5163               	movf	AESCmac@n& (0+255),w,b
 30727  0022D0  0100               	movlb	0	; () banked
 30728  0022D2  6FC0               	movwf	??_AESCmac& (0+255),b
 30729  0022D4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30730  0022D6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 30731  0022D8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 30732  0022DA  0EF0               	movlw	240
 30733  0022DC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 30734  0022DE  51C0               	movf	??_AESCmac& (0+255),w,b
 30735  0022E0  0B0F               	andlw	15
 30736  0022E2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 30737  0022E4  0EF0               	movlw	240
 30738  0022E6  17C0               	andwf	??_AESCmac& (0+255),f,b
 30739  0022E8  0101               	movlb	1	; () banked
 30740  0022EA  5165               	movf	AESCmac@i& (0+255),w,b
 30741  0022EC  0100               	movlb	0	; () banked
 30742  0022EE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30743  0022F0  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 30744  0022F2  51C0               	movf	??_AESCmac& (0+255),w,b
 30745  0022F4  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 30746  0022F6  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 30747  0022F8  0A80               	xorlw	128
 30748  0022FA  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 30749  0022FC  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30750  0022FE  0A80               	xorlw	128
 30751  002300  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 30752  002302  B0D8               	btfsc	status,0,c
 30753  002304  D07F               	goto	u15500
 30754  002306  D7BF               	goto	l90
 30755  002308                     l88:
 30756                           
 30757                           ;lorawan_aes_cmac.c: 71: else
 30758                           ;lorawan_aes_cmac.c: 72: {
 30759                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 30760                           
 30761                           ; BSR set to: 0
 30762  002308  0100               	movlb	0	; () banked
 30763  00230A  51BF               	movf	AESCmac@size& (0+255),w,b
 30764  00230C  0B0F               	andlw	15
 30765  00230E  6FC0               	movwf	??_AESCmac& (0+255),b
 30766  002310  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30767  002312  1FC0               	comf	??_AESCmac& (0+255),f,b
 30768  002314  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 30769  002316  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 30770  002318  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 30771  00231A  51BF               	movf	AESCmac@size& (0+255),w,b
 30772  00231C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30773  00231E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 30774  002320  51C0               	movf	??_AESCmac& (0+255),w,b
 30775  002322  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 30776  002324  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30777  002326  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 30778  002328  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 30779  00232A  25BD               	addwf	AESCmac@input& (0+255),w,b
 30780  00232C  0101               	movlb	1	; () banked
 30781  00232E  6F60               	movwf	AESCmac@ptr& (0+255),b
 30782  002330  0100               	movlb	0	; () banked
 30783  002332  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 30784  002334  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 30785  002336  0101               	movlb	1	; () banked
 30786  002338  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 30787                           
 30788                           ; BSR set to: 1
 30789                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 30790  00233A  0E00               	movlw	0
 30791  00233C  6F65               	movwf	AESCmac@i& (0+255),b
 30792  00233E                     l13505:
 30793                           
 30794                           ; BSR set to: 1
 30795  00233E  0E0F               	movlw	15
 30796  002340  6565               	cpfsgt	AESCmac@i& (0+255),b
 30797  002342  D001               	goto	l93
 30798  002344  D036               	goto	u15480
 30799  002346                     l93:
 30800                           
 30801                           ; BSR set to: 1
 30802                           ;lorawan_aes_cmac.c: 76: {
 30803                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 30804                           
 30805                           ; BSR set to: 1
 30806  002346  0100               	movlb	0	; () banked
 30807  002348  51BF               	movf	AESCmac@size& (0+255),w,b
 30808  00234A  0B0F               	andlw	15
 30809  00234C  0101               	movlb	1	; () banked
 30810  00234E  6165               	cpfslt	AESCmac@i& (0+255),b
 30811  002350  D013               	goto	l95
 30812                           
 30813                           ; BSR set to: 1
 30814                           ;lorawan_aes_cmac.c: 78: {
 30815                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 30816  002352  5165               	movf	AESCmac@i& (0+255),w,b
 30817  002354  0D01               	mullw	1
 30818  002356  50F3               	movf	prodl,w,c
 30819  002358  2560               	addwf	AESCmac@ptr& (0+255),w,b
 30820  00235A  6ED9               	movwf	fsr2l,c
 30821  00235C  50F4               	movf	prodh,w,c
 30822  00235E  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 30823  002360  6EDA               	movwf	fsr2h,c
 30824  002362  5165               	movf	AESCmac@i& (0+255),w,b
 30825  002364  0D01               	mullw	1
 30826  002366  0E30               	movlw	low AESCmac@padded
 30827  002368  24F3               	addwf	prodl,w,c
 30828  00236A  6EE9               	movwf	fsr0l,c
 30829  00236C  0E01               	movlw	high AESCmac@padded
 30830  00236E  20F4               	addwfc	prodh,w,c
 30831  002370  6EEA               	movwf	fsr0h,c
 30832  002372  CFDF FFEF          	movff	indf2,indf0
 30833                           
 30834                           ;lorawan_aes_cmac.c: 80: }
 30835  002376  D01B               	goto	l98
 30836  002378                     l95:
 30837                           
 30838                           ; BSR set to: 1
 30839                           ;lorawan_aes_cmac.c: 81: else
 30840                           ;lorawan_aes_cmac.c: 82: {
 30841                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 30842                           
 30843                           ; BSR set to: 1
 30844  002378  0100               	movlb	0	; () banked
 30845  00237A  51BF               	movf	AESCmac@size& (0+255),w,b
 30846  00237C  0B0F               	andlw	15
 30847  00237E  0101               	movlb	1	; () banked
 30848  002380  1965               	xorwf	AESCmac@i& (0+255),w,b
 30849  002382  A4D8               	btfss	status,2,c
 30850  002384  D00A               	goto	l97
 30851                           
 30852                           ; BSR set to: 1
 30853                           ;lorawan_aes_cmac.c: 84: {
 30854                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 30855  002386  5165               	movf	AESCmac@i& (0+255),w,b
 30856  002388  0D01               	mullw	1
 30857  00238A  0E30               	movlw	low AESCmac@padded
 30858  00238C  24F3               	addwf	prodl,w,c
 30859  00238E  6ED9               	movwf	fsr2l,c
 30860  002390  0E01               	movlw	high AESCmac@padded
 30861  002392  20F4               	addwfc	prodh,w,c
 30862  002394  6EDA               	movwf	fsr2h,c
 30863  002396  0E80               	movlw	128
 30864  002398  D009               	goto	L24
 30865  00239A                     l97:
 30866                           
 30867                           ; BSR set to: 1
 30868                           ;lorawan_aes_cmac.c: 87: else
 30869                           ;lorawan_aes_cmac.c: 88: {
 30870                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 30871                           
 30872                           ; BSR set to: 1
 30873  00239A  5165               	movf	AESCmac@i& (0+255),w,b
 30874  00239C  0D01               	mullw	1
 30875  00239E  0E30               	movlw	low AESCmac@padded
 30876  0023A0  24F3               	addwf	prodl,w,c
 30877  0023A2  6ED9               	movwf	fsr2l,c
 30878  0023A4  0E01               	movlw	high AESCmac@padded
 30879  0023A6  20F4               	addwfc	prodh,w,c
 30880  0023A8  6EDA               	movwf	fsr2h,c
 30881  0023AA  0E00               	movlw	0
 30882  0023AC                     L24:
 30883  0023AC  6EDF               	movwf	indf2,c
 30884  0023AE                     l98:
 30885                           
 30886                           ; BSR set to: 1
 30887                           
 30888                           ; BSR set to: 1
 30889                           
 30890                           ; BSR set to: 1
 30891  0023AE  2B65               	incf	AESCmac@i& (0+255),f,b
 30892  0023B0  D7C6               	goto	l13505
 30893  0023B2                     u15480:
 30894                           
 30895                           ; BSR set to: 1
 30896                           ;lorawan_aes_cmac.c: 90: }
 30897                           ;lorawan_aes_cmac.c: 91: }
 30898                           ;lorawan_aes_cmac.c: 92: }
 30899                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 30900                           
 30901                           ; BSR set to: 1
 30902  0023B2  0E00               	movlw	0
 30903  0023B4  6F65               	movwf	AESCmac@i& (0+255),b
 30904  0023B6                     l13525:
 30905                           
 30906                           ; BSR set to: 1
 30907  0023B6  0E0F               	movlw	15
 30908  0023B8  6565               	cpfsgt	AESCmac@i& (0+255),b
 30909  0023BA  D001               	goto	l99
 30910  0023BC  D023               	goto	u15500
 30911  0023BE                     l99:
 30912                           
 30913                           ; BSR set to: 1
 30914                           ;lorawan_aes_cmac.c: 96: {
 30915                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 30916                           
 30917                           ; BSR set to: 1
 30918  0023BE  5165               	movf	AESCmac@i& (0+255),w,b
 30919  0023C0  0D01               	mullw	1
 30920  0023C2  0E20               	movlw	low AESCmac@mLast
 30921  0023C4  24F3               	addwf	prodl,w,c
 30922  0023C6  6ED9               	movwf	fsr2l,c
 30923  0023C8  0E01               	movlw	high AESCmac@mLast
 30924  0023CA  20F4               	addwfc	prodh,w,c
 30925  0023CC  6EDA               	movwf	fsr2h,c
 30926  0023CE  5165               	movf	AESCmac@i& (0+255),w,b
 30927  0023D0  0D01               	mullw	1
 30928  0023D2  0E00               	movlw	low AESCmac@k2
 30929  0023D4  24F3               	addwf	prodl,w,c
 30930  0023D6  6EE9               	movwf	fsr0l,c
 30931  0023D8  0E01               	movlw	high AESCmac@k2
 30932  0023DA  20F4               	addwfc	prodh,w,c
 30933  0023DC  6EEA               	movwf	fsr0h,c
 30934  0023DE  50EF               	movf	indf0,w,c
 30935  0023E0  0100               	movlb	0	; () banked
 30936  0023E2  6FC0               	movwf	??_AESCmac& (0+255),b
 30937  0023E4  0101               	movlb	1	; () banked
 30938  0023E6  5165               	movf	AESCmac@i& (0+255),w,b
 30939  0023E8  0D01               	mullw	1
 30940  0023EA  0E30               	movlw	low AESCmac@padded
 30941  0023EC  24F3               	addwf	prodl,w,c
 30942  0023EE  6EE9               	movwf	fsr0l,c
 30943  0023F0  0E01               	movlw	high AESCmac@padded
 30944  0023F2  20F4               	addwfc	prodh,w,c
 30945  0023F4  6EEA               	movwf	fsr0h,c
 30946  0023F6  50EF               	movf	indf0,w,c
 30947  0023F8  0100               	movlb	0	; () banked
 30948  0023FA  19C0               	xorwf	??_AESCmac& (0+255),w,b
 30949  0023FC  6EDF               	movwf	indf2,c
 30950                           
 30951                           ; BSR set to: 0
 30952  0023FE  0101               	movlb	1	; () banked
 30953  002400  2B65               	incf	AESCmac@i& (0+255),f,b
 30954  002402  D7D9               	goto	l13525
 30955  002404                     u15500:
 30956                           
 30957                           ;lorawan_aes_cmac.c: 98: }
 30958                           ;lorawan_aes_cmac.c: 99: }
 30959                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 30960                           
 30961                           ; BSR set to: 1
 30962                           
 30963                           ; BSR set to: 1
 30964  002404  0E50               	movlw	low AESCmac@x
 30965  002406  0100               	movlb	0	; () banked
 30966  002408  6F60               	movwf	memset@p1& (0+255),b
 30967  00240A  0E01               	movlw	high AESCmac@x
 30968  00240C  6F61               	movwf	(memset@p1+1)& (0+255),b
 30969  00240E  0E00               	movlw	0
 30970  002410  6F63               	movwf	(memset@c+1)& (0+255),b
 30971  002412  0E00               	movlw	0
 30972  002414  6F62               	movwf	memset@c& (0+255),b
 30973  002416  0E00               	movlw	0
 30974  002418  6F65               	movwf	(memset@n+1)& (0+255),b
 30975  00241A  0E10               	movlw	16
 30976  00241C  6F64               	movwf	memset@n& (0+255),b
 30977  00241E  EC6E  F042         	call	_memset	;wreg free
 30978                           
 30979                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 30980  002422  0E00               	movlw	0
 30981  002424  0101               	movlb	1	; () banked
 30982  002426  6F65               	movwf	AESCmac@i& (0+255),b
 30983  002428  D056               	goto	l101
 30984  00242A                     
 30985                           ;lorawan_aes_cmac.c: 104: {
 30986                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 30987                           
 30988                           ; BSR set to: 1
 30989  00242A  0E00               	movlw	0
 30990  00242C  0101               	movlb	1	; () banked
 30991  00242E  6F64               	movwf	AESCmac@j& (0+255),b
 30992  002430                     l13541:
 30993                           
 30994                           ; BSR set to: 1
 30995  002430  0E0F               	movlw	15
 30996  002432  6564               	cpfsgt	AESCmac@j& (0+255),b
 30997  002434  D001               	goto	l103
 30998  002436  D033               	goto	u15520
 30999  002438                     l103:
 31000                           
 31001                           ; BSR set to: 1
 31002                           ;lorawan_aes_cmac.c: 106: {
 31003                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 31004                           
 31005                           ; BSR set to: 1
 31006  002438  5164               	movf	AESCmac@j& (0+255),w,b
 31007  00243A  0D01               	mullw	1
 31008  00243C  0E40               	movlw	low AESCmac@y
 31009  00243E  24F3               	addwf	prodl,w,c
 31010  002440  6ED9               	movwf	fsr2l,c
 31011  002442  0E01               	movlw	high AESCmac@y
 31012  002444  20F4               	addwfc	prodh,w,c
 31013  002446  6EDA               	movwf	fsr2h,c
 31014  002448  5165               	movf	AESCmac@i& (0+255),w,b
 31015  00244A  0100               	movlb	0	; () banked
 31016  00244C  6FC0               	movwf	??_AESCmac& (0+255),b
 31017  00244E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 31018  002450  3BC0               	swapf	??_AESCmac& (0+255),f,b
 31019  002452  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 31020  002454  0EF0               	movlw	240
 31021  002456  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 31022  002458  51C0               	movf	??_AESCmac& (0+255),w,b
 31023  00245A  0B0F               	andlw	15
 31024  00245C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 31025  00245E  0EF0               	movlw	240
 31026  002460  17C0               	andwf	??_AESCmac& (0+255),f,b
 31027  002462  0101               	movlb	1	; () banked
 31028  002464  5164               	movf	AESCmac@j& (0+255),w,b
 31029  002466  0100               	movlb	0	; () banked
 31030  002468  27C0               	addwf	??_AESCmac& (0+255),f,b
 31031  00246A  0E00               	movlw	0
 31032  00246C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 31033  00246E  51C0               	movf	??_AESCmac& (0+255),w,b
 31034  002470  25BD               	addwf	AESCmac@input& (0+255),w,b
 31035  002472  6EE9               	movwf	fsr0l,c
 31036  002474  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31037  002476  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 31038  002478  6EEA               	movwf	fsr0h,c
 31039  00247A  50EF               	movf	indf0,w,c
 31040  00247C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31041  00247E  0101               	movlb	1	; () banked
 31042  002480  5164               	movf	AESCmac@j& (0+255),w,b
 31043  002482  0D01               	mullw	1
 31044  002484  0E50               	movlw	low AESCmac@x
 31045  002486  24F3               	addwf	prodl,w,c
 31046  002488  6EE9               	movwf	fsr0l,c
 31047  00248A  0E01               	movlw	high AESCmac@x
 31048  00248C  20F4               	addwfc	prodh,w,c
 31049  00248E  6EEA               	movwf	fsr0h,c
 31050  002490  50EF               	movf	indf0,w,c
 31051  002492  0100               	movlb	0	; () banked
 31052  002494  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 31053  002496  6EDF               	movwf	indf2,c
 31054                           
 31055                           ; BSR set to: 0
 31056  002498  0101               	movlb	1	; () banked
 31057  00249A  2B64               	incf	AESCmac@j& (0+255),f,b
 31058  00249C  D7C9               	goto	l13541
 31059  00249E                     u15520:
 31060                           
 31061                           ; BSR set to: 1
 31062                           ;lorawan_aes_cmac.c: 108: }
 31063                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 31064                           
 31065                           ; BSR set to: 1
 31066  00249E  0E50               	movlw	low AESCmac@x
 31067  0024A0  0100               	movlb	0	; () banked
 31068  0024A2  6F60               	movwf	memcpy@d1& (0+255),b
 31069  0024A4  0E01               	movlw	high AESCmac@x
 31070  0024A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31071  0024A8  0E40               	movlw	low AESCmac@y
 31072  0024AA  6F62               	movwf	memcpy@s1& (0+255),b
 31073  0024AC  0E01               	movlw	high AESCmac@y
 31074  0024AE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31075  0024B0  0E00               	movlw	0
 31076  0024B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31077  0024B4  0E10               	movlw	16
 31078  0024B6  6F64               	movwf	memcpy@n& (0+255),b
 31079  0024B8  EC22  F03D         	call	_memcpy	;wreg free
 31080                           
 31081                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 31082  0024BC  0E50               	movlw	low AESCmac@x
 31083  0024BE  0100               	movlb	0	; () banked
 31084  0024C0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31085  0024C2  0E01               	movlw	high AESCmac@x
 31086  0024C4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31087  0024C6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 31088  0024CA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 31089  0024CE  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 31090  0024D2  0101               	movlb	1	; () banked
 31091  0024D4  2B65               	incf	AESCmac@i& (0+255),f,b
 31092  0024D6                     l101:
 31093                           
 31094                           ; BSR set to: 1
 31095                           
 31096                           ; BSR set to: 1
 31097  0024D6  0EFF               	movlw	255
 31098  0024D8  0100               	movlb	0	; () banked
 31099  0024DA  6FC0               	movwf	??_AESCmac& (0+255),b
 31100  0024DC  0EFF               	movlw	255
 31101  0024DE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 31102  0024E0  0101               	movlb	1	; () banked
 31103  0024E2  5163               	movf	AESCmac@n& (0+255),w,b
 31104  0024E4  0100               	movlb	0	; () banked
 31105  0024E6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 31106  0024E8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 31107  0024EA  51C0               	movf	??_AESCmac& (0+255),w,b
 31108  0024EC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 31109  0024EE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 31110  0024F0  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 31111  0024F2  0101               	movlb	1	; () banked
 31112  0024F4  5165               	movf	AESCmac@i& (0+255),w,b
 31113  0024F6  0100               	movlb	0	; () banked
 31114  0024F8  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 31115  0024FA  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 31116  0024FC  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 31117  0024FE  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 31118  002500  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 31119  002502  0A80               	xorlw	128
 31120  002504  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 31121  002506  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 31122  002508  0A80               	xorlw	128
 31123  00250A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 31124  00250C  A0D8               	btfss	status,0,c
 31125  00250E  D78D               	goto	l102
 31126                           
 31127                           ; BSR set to: 0
 31128                           ;lorawan_aes_cmac.c: 111: }
 31129                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 31130                           
 31131                           ; BSR set to: 0
 31132  002510  0E00               	movlw	0
 31133  002512  0101               	movlb	1	; () banked
 31134  002514  6F65               	movwf	AESCmac@i& (0+255),b
 31135  002516                     l13561:
 31136                           
 31137                           ; BSR set to: 1
 31138  002516  0E0F               	movlw	15
 31139  002518  6565               	cpfsgt	AESCmac@i& (0+255),b
 31140  00251A  D001               	goto	l106
 31141  00251C  D023               	goto	u15550
 31142  00251E                     l106:
 31143                           
 31144                           ; BSR set to: 1
 31145                           ;lorawan_aes_cmac.c: 114: {
 31146                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 31147                           
 31148                           ; BSR set to: 1
 31149  00251E  5165               	movf	AESCmac@i& (0+255),w,b
 31150  002520  0D01               	mullw	1
 31151  002522  0E40               	movlw	low AESCmac@y
 31152  002524  24F3               	addwf	prodl,w,c
 31153  002526  6ED9               	movwf	fsr2l,c
 31154  002528  0E01               	movlw	high AESCmac@y
 31155  00252A  20F4               	addwfc	prodh,w,c
 31156  00252C  6EDA               	movwf	fsr2h,c
 31157  00252E  5165               	movf	AESCmac@i& (0+255),w,b
 31158  002530  0D01               	mullw	1
 31159  002532  0E20               	movlw	low AESCmac@mLast
 31160  002534  24F3               	addwf	prodl,w,c
 31161  002536  6EE9               	movwf	fsr0l,c
 31162  002538  0E01               	movlw	high AESCmac@mLast
 31163  00253A  20F4               	addwfc	prodh,w,c
 31164  00253C  6EEA               	movwf	fsr0h,c
 31165  00253E  50EF               	movf	indf0,w,c
 31166  002540  0100               	movlb	0	; () banked
 31167  002542  6FC0               	movwf	??_AESCmac& (0+255),b
 31168  002544  0101               	movlb	1	; () banked
 31169  002546  5165               	movf	AESCmac@i& (0+255),w,b
 31170  002548  0D01               	mullw	1
 31171  00254A  0E50               	movlw	low AESCmac@x
 31172  00254C  24F3               	addwf	prodl,w,c
 31173  00254E  6EE9               	movwf	fsr0l,c
 31174  002550  0E01               	movlw	high AESCmac@x
 31175  002552  20F4               	addwfc	prodh,w,c
 31176  002554  6EEA               	movwf	fsr0h,c
 31177  002556  50EF               	movf	indf0,w,c
 31178  002558  0100               	movlb	0	; () banked
 31179  00255A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 31180  00255C  6EDF               	movwf	indf2,c
 31181                           
 31182                           ; BSR set to: 0
 31183  00255E  0101               	movlb	1	; () banked
 31184  002560  2B65               	incf	AESCmac@i& (0+255),f,b
 31185  002562  D7D9               	goto	l13561
 31186  002564                     u15550:
 31187                           
 31188                           ; BSR set to: 1
 31189                           ;lorawan_aes_cmac.c: 116: }
 31190                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 31191                           
 31192                           ; BSR set to: 1
 31193  002564  0E40               	movlw	low AESCmac@y
 31194  002566  0100               	movlb	0	; () banked
 31195  002568  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31196  00256A  0E01               	movlw	high AESCmac@y
 31197  00256C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31198  00256E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 31199  002572  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 31200  002576  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 31201                           
 31202                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 31203  00257A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 31204  00257E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 31205  002582  0E40               	movlw	low AESCmac@y
 31206  002584  0100               	movlb	0	; () banked
 31207  002586  6F62               	movwf	memcpy@s1& (0+255),b
 31208  002588  0E01               	movlw	high AESCmac@y
 31209  00258A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31210  00258C  0E00               	movlw	0
 31211  00258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31212  002590  0E10               	movlw	16
 31213  002592  6F64               	movwf	memcpy@n& (0+255),b
 31214  002594  EC22  F03D         	call	_memcpy	;wreg free
 31215  002598  0012               	return		;funcret
 31216  00259A                     __end_of_AESCmac:
 31217                           	opt stack 0
 31218                           tosu	equ	0xFFF
 31219                           tosh	equ	0xFFE
 31220                           tosl	equ	0xFFD
 31221                           pclath	equ	0xFFA
 31222                           tblptru	equ	0xFF8
 31223                           tblptrh	equ	0xFF7
 31224                           tblptrl	equ	0xFF6
 31225                           tablat	equ	0xFF5
 31226                           prodh	equ	0xFF4
 31227                           prodl	equ	0xFF3
 31228                           intcon	equ	0xFF2
 31229                           intcon2	equ	0xFF1
 31230                           intcon3	equ	0xFF0
 31231                           indf0	equ	0xFEF
 31232                           postinc0	equ	0xFEE
 31233                           fsr0h	equ	0xFEA
 31234                           fsr0l	equ	0xFE9
 31235                           wreg	equ	0xFE8
 31236                           postinc1	equ	0xFE6
 31237                           postdec1	equ	0xFE5
 31238                           plusw1	equ	0xFE3
 31239                           fsr1h	equ	0xFE2
 31240                           fsr1l	equ	0xFE1
 31241                           indf2	equ	0xFDF
 31242                           postinc2	equ	0xFDE
 31243                           postdec2	equ	0xFDD
 31244                           plusw2	equ	0xFDB
 31245                           fsr2h	equ	0xFDA
 31246                           fsr2l	equ	0xFD9
 31247                           status	equ	0xFD8
 31248                           
 31249 ;; *************** function _GenerateSubkey *****************
 31250 ;; Defined at:
 31251 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31252 ;; Parameters:    Size  Location     Type
 31253 ;;  key             2   49[BANK0 ] PTR unsigned char 
 31254 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31255 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 31256 ;;		 -> AESCmac@k1(16), 
 31257 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 31258 ;;		 -> AESCmac@k2(16), 
 31259 ;; Auto vars:     Size  Location     Type
 31260 ;;  l              16   72[BANK0 ] unsigned char [16]
 31261 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 31262 ;;  i               1   88[BANK0 ] unsigned char 
 31263 ;; Return value:  Size  Location     Type
 31264 ;;                  1    wreg      void 
 31265 ;; Registers used:
 31266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31267 ;; Tracked objects:
 31268 ;;		On entry : 0/0
 31269 ;;		On exit  : 0/0
 31270 ;;		Unchanged: 0/0
 31271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31273 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31275 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31276 ;;Total ram usage:       40 bytes
 31277 ;; Hardware stack levels used:    1
 31278 ;; Hardware stack levels required when called:   10
 31279 ;; This function calls:
 31280 ;;		_AESEncodeLoRa
 31281 ;;		_FillSubKey
 31282 ;;		_memset
 31283 ;; This function is called by:
 31284 ;;		_AESCmac
 31285 ;; This function uses a non-reentrant model
 31286 ;;
 31287                           
 31288                           	psect	text145
 31289  0054A6                     __ptext145:
 31290                           	opt stack 0
 31291  0054A6                     _GenerateSubkey:
 31292                           	opt stack 17
 31293                           
 31294                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 31295                           
 31296                           ;incstack = 0
 31297  0054A6  0E00               	movlw	0
 31298  0054A8  0100               	movlb	0	; () banked
 31299  0054AA  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 31300                           
 31301                           ; BSR set to: 0
 31302                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 31303                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 31304                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 31305  0054AC  EE21  F0C9         	lfsr	2,GenerateSubkey@F7103
 31306  0054B0  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 31307  0054B4  0E0F               	movlw	15
 31308  0054B6                     u14891:
 31309  0054B6  CFDB FFEB          	movff	plusw2,plusw0
 31310  0054BA  06E8               	decf	wreg,f,c
 31311  0054BC  E2FC               	bc	u14891
 31312                           
 31313                           ; BSR set to: 0
 31314                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 31315  0054BE  0EA8               	movlw	low GenerateSubkey@l
 31316  0054C0  6F60               	movwf	memset@p1& (0+255),b
 31317  0054C2  0E00               	movlw	high GenerateSubkey@l
 31318  0054C4  6F61               	movwf	(memset@p1+1)& (0+255),b
 31319  0054C6  0E00               	movlw	0
 31320  0054C8  6F63               	movwf	(memset@c+1)& (0+255),b
 31321  0054CA  0E00               	movlw	0
 31322  0054CC  6F62               	movwf	memset@c& (0+255),b
 31323  0054CE  0E00               	movlw	0
 31324  0054D0  6F65               	movwf	(memset@n+1)& (0+255),b
 31325  0054D2  0E10               	movlw	16
 31326  0054D4  6F64               	movwf	memset@n& (0+255),b
 31327  0054D6  EC6E  F042         	call	_memset	;wreg free
 31328                           
 31329                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 31330  0054DA  0EA8               	movlw	low GenerateSubkey@l
 31331  0054DC  0100               	movlb	0	; () banked
 31332  0054DE  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31333  0054E0  0E00               	movlw	high GenerateSubkey@l
 31334  0054E2  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31335  0054E4  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 31336  0054E8  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 31337  0054EC  ECA8  F041         	call	_AESEncodeLoRa	;wreg free
 31338                           
 31339                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 31340  0054F0  0100               	movlb	0	; () banked
 31341  0054F2  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 31342  0054F4  D00D               	goto	l113
 31343                           
 31344                           ; BSR set to: 0
 31345                           ;lorawan_aes_cmac.c: 138: {
 31346                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 31347  0054F6  0EA8               	movlw	low GenerateSubkey@l
 31348  0054F8  6F60               	movwf	FillSubKey@source& (0+255),b
 31349  0054FA  0E00               	movlw	high GenerateSubkey@l
 31350  0054FC  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 31351  0054FE  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 31352  005502  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31353  005506  0E10               	movlw	16
 31354  005508  6F64               	movwf	FillSubKey@size& (0+255),b
 31355  00550A  EC90  F03C         	call	_FillSubKey	;wreg free
 31356                           
 31357                           ;lorawan_aes_cmac.c: 140: }
 31358  00550E  D02A               	goto	u14920
 31359  005510                     l113:
 31360                           
 31361                           ;lorawan_aes_cmac.c: 141: else
 31362                           ;lorawan_aes_cmac.c: 142: {
 31363                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 31364  005510  0EA8               	movlw	low GenerateSubkey@l
 31365  005512  0100               	movlb	0	; () banked
 31366  005514  6F60               	movwf	FillSubKey@source& (0+255),b
 31367  005516  0E00               	movlw	high GenerateSubkey@l
 31368  005518  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 31369  00551A  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 31370  00551E  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31371  005522  0E10               	movlw	16
 31372  005524  6F64               	movwf	FillSubKey@size& (0+255),b
 31373  005526  EC90  F03C         	call	_FillSubKey	;wreg free
 31374                           
 31375                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 31376  00552A  0E00               	movlw	0
 31377  00552C  0100               	movlb	0	; () banked
 31378  00552E  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 31379  005530                     l13115:
 31380                           
 31381                           ; BSR set to: 0
 31382  005530  0E0F               	movlw	15
 31383  005532  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 31384  005534  D001               	goto	l115
 31385  005536  D016               	goto	u14920
 31386  005538                     l115:
 31387                           
 31388                           ; BSR set to: 0
 31389                           ;lorawan_aes_cmac.c: 146: {
 31390                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 31391                           
 31392                           ; BSR set to: 0
 31393  005538  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31394  00553A  0D01               	mullw	1
 31395  00553C  0E98               	movlw	low GenerateSubkey@const_Rb
 31396  00553E  24F3               	addwf	prodl,w,c
 31397  005540  6ED9               	movwf	fsr2l,c
 31398  005542  0E00               	movlw	high GenerateSubkey@const_Rb
 31399  005544  20F4               	addwfc	prodh,w,c
 31400  005546  6EDA               	movwf	fsr2h,c
 31401  005548  50DF               	movf	indf2,w,c
 31402  00554A  6F97               	movwf	??_GenerateSubkey& (0+255),b
 31403  00554C  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31404  00554E  0D01               	mullw	1
 31405  005550  50F3               	movf	prodl,w,c
 31406  005552  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 31407  005554  6ED9               	movwf	fsr2l,c
 31408  005556  50F4               	movf	prodh,w,c
 31409  005558  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 31410  00555A  6EDA               	movwf	fsr2h,c
 31411  00555C  5197               	movf	??_GenerateSubkey& (0+255),w,b
 31412  00555E  1ADF               	xorwf	indf2,f,c
 31413                           
 31414                           ; BSR set to: 0
 31415  005560  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 31416  005562  D7E6               	goto	l13115
 31417  005564                     u14920:
 31418                           
 31419                           ;lorawan_aes_cmac.c: 148: }
 31420                           ;lorawan_aes_cmac.c: 149: }
 31421                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 31422                           
 31423                           ; BSR set to: 0
 31424                           
 31425                           ; BSR set to: 0
 31426  005564  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 31427  005568  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 31428  00556C  0100               	movlb	0	; () banked
 31429  00556E  BEDF               	btfsc	indf2,7,c
 31430  005570  D00D               	goto	l117
 31431                           
 31432                           ; BSR set to: 0
 31433                           ;lorawan_aes_cmac.c: 153: {
 31434                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 31435  005572  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 31436  005576  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31437  00557A  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 31438  00557E  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31439  005582  0E10               	movlw	16
 31440  005584  6F64               	movwf	FillSubKey@size& (0+255),b
 31441  005586  EC90  F03C         	call	_FillSubKey	;wreg free
 31442                           
 31443                           ;lorawan_aes_cmac.c: 155: }
 31444  00558A  0012               	return	
 31445  00558C                     l117:
 31446                           
 31447                           ;lorawan_aes_cmac.c: 156: else
 31448                           ;lorawan_aes_cmac.c: 157: {
 31449                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 31450  00558C  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 31451  005590  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31452  005594  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 31453  005598  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31454  00559C  0E10               	movlw	16
 31455  00559E  0100               	movlb	0	; () banked
 31456  0055A0  6F64               	movwf	FillSubKey@size& (0+255),b
 31457  0055A2  EC90  F03C         	call	_FillSubKey	;wreg free
 31458                           
 31459                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 31460  0055A6  0E00               	movlw	0
 31461  0055A8  0100               	movlb	0	; () banked
 31462  0055AA  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 31463  0055AC                     l13133:
 31464                           
 31465                           ; BSR set to: 0
 31466  0055AC  0E0F               	movlw	15
 31467  0055AE  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 31468  0055B0  D001               	goto	l119
 31469  0055B2  0012               	return	
 31470  0055B4                     l119:
 31471                           
 31472                           ; BSR set to: 0
 31473                           ;lorawan_aes_cmac.c: 161: {
 31474                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 31475                           
 31476                           ; BSR set to: 0
 31477  0055B4  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31478  0055B6  0D01               	mullw	1
 31479  0055B8  50F3               	movf	prodl,w,c
 31480  0055BA  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 31481  0055BC  6ED9               	movwf	fsr2l,c
 31482  0055BE  50F4               	movf	prodh,w,c
 31483  0055C0  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31484  0055C2  6EDA               	movwf	fsr2h,c
 31485  0055C4  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31486  0055C6  0D01               	mullw	1
 31487  0055C8  0E98               	movlw	low GenerateSubkey@const_Rb
 31488  0055CA  24F3               	addwf	prodl,w,c
 31489  0055CC  6EE9               	movwf	fsr0l,c
 31490  0055CE  0E00               	movlw	high GenerateSubkey@const_Rb
 31491  0055D0  20F4               	addwfc	prodh,w,c
 31492  0055D2  6EEA               	movwf	fsr0h,c
 31493  0055D4  50EF               	movf	indf0,w,c
 31494  0055D6  6F97               	movwf	??_GenerateSubkey& (0+255),b
 31495  0055D8  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31496  0055DA  0D01               	mullw	1
 31497  0055DC  50F3               	movf	prodl,w,c
 31498  0055DE  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 31499  0055E0  6EE9               	movwf	fsr0l,c
 31500  0055E2  50F4               	movf	prodh,w,c
 31501  0055E4  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31502  0055E6  6EEA               	movwf	fsr0h,c
 31503  0055E8  50EF               	movf	indf0,w,c
 31504  0055EA  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 31505  0055EC  6EDF               	movwf	indf2,c
 31506                           
 31507                           ; BSR set to: 0
 31508  0055EE  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 31509  0055F0  D7DD               	goto	l13133
 31510  0055F2                     __end_of_GenerateSubkey:
 31511                           	opt stack 0
 31512                           tosu	equ	0xFFF
 31513                           tosh	equ	0xFFE
 31514                           tosl	equ	0xFFD
 31515                           pclath	equ	0xFFA
 31516                           tblptru	equ	0xFF8
 31517                           tblptrh	equ	0xFF7
 31518                           tblptrl	equ	0xFF6
 31519                           tablat	equ	0xFF5
 31520                           prodh	equ	0xFF4
 31521                           prodl	equ	0xFF3
 31522                           intcon	equ	0xFF2
 31523                           intcon2	equ	0xFF1
 31524                           intcon3	equ	0xFF0
 31525                           indf0	equ	0xFEF
 31526                           postinc0	equ	0xFEE
 31527                           plusw0	equ	0xFEB
 31528                           fsr0h	equ	0xFEA
 31529                           fsr0l	equ	0xFE9
 31530                           wreg	equ	0xFE8
 31531                           postinc1	equ	0xFE6
 31532                           postdec1	equ	0xFE5
 31533                           plusw1	equ	0xFE3
 31534                           fsr1h	equ	0xFE2
 31535                           fsr1l	equ	0xFE1
 31536                           indf2	equ	0xFDF
 31537                           postinc2	equ	0xFDE
 31538                           postdec2	equ	0xFDD
 31539                           plusw2	equ	0xFDB
 31540                           fsr2h	equ	0xFDA
 31541                           fsr2l	equ	0xFD9
 31542                           status	equ	0xFD8
 31543                           
 31544 ;; *************** function _FillSubKey *****************
 31545 ;; Defined at:
 31546 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31547 ;; Parameters:    Size  Location     Type
 31548 ;;  source          2    0[BANK0 ] PTR unsigned char 
 31549 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 31550 ;;  key             2    2[BANK0 ] PTR unsigned char 
 31551 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 31552 ;;  size            1    4[BANK0 ] unsigned char 
 31553 ;; Auto vars:     Size  Location     Type
 31554 ;;  i               1    7[BANK0 ] unsigned char 
 31555 ;;  carry           1    6[BANK0 ] unsigned char 
 31556 ;; Return value:  Size  Location     Type
 31557 ;;                  1    wreg      void 
 31558 ;; Registers used:
 31559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31560 ;; Tracked objects:
 31561 ;;		On entry : 0/0
 31562 ;;		On exit  : 0/0
 31563 ;;		Unchanged: 0/0
 31564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31565 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31568 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31569 ;;Total ram usage:        8 bytes
 31570 ;; Hardware stack levels used:    1
 31571 ;; Hardware stack levels required when called:    7
 31572 ;; This function calls:
 31573 ;;		Nothing
 31574 ;; This function is called by:
 31575 ;;		_GenerateSubkey
 31576 ;; This function uses a non-reentrant model
 31577 ;;
 31578                           
 31579                           	psect	text146
 31580  007920                     __ptext146:
 31581                           	opt stack 0
 31582  007920                     _FillSubKey:
 31583                           	opt stack 19
 31584                           
 31585                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 31586                           
 31587                           ;incstack = 0
 31588  007920  0E00               	movlw	0
 31589  007922  0100               	movlb	0	; () banked
 31590  007924  6F67               	movwf	FillSubKey@i& (0+255),b
 31591                           
 31592                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 31593  007926  0E00               	movlw	0
 31594  007928  6F66               	movwf	FillSubKey@carry& (0+255),b
 31595                           
 31596                           ; BSR set to: 0
 31597                           ;lorawan_aes_cmac.c: 172: i=size;
 31598  00792A  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 31599                           
 31600                           ;lorawan_aes_cmac.c: 174: while(i--)
 31601  00792E  D024               	goto	l124
 31602  007930                     
 31603                           ; BSR set to: 0
 31604                           ;lorawan_aes_cmac.c: 175: {
 31605                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 31606                           
 31607                           ; BSR set to: 0
 31608  007930  5167               	movf	FillSubKey@i& (0+255),w,b
 31609  007932  0D01               	mullw	1
 31610  007934  50F3               	movf	prodl,w,c
 31611  007936  2562               	addwf	FillSubKey@key& (0+255),w,b
 31612  007938  6ED9               	movwf	fsr2l,c
 31613  00793A  50F4               	movf	prodh,w,c
 31614  00793C  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 31615  00793E  6EDA               	movwf	fsr2h,c
 31616  007940  5167               	movf	FillSubKey@i& (0+255),w,b
 31617  007942  0D01               	mullw	1
 31618  007944  50F3               	movf	prodl,w,c
 31619  007946  2560               	addwf	FillSubKey@source& (0+255),w,b
 31620  007948  6EE9               	movwf	fsr0l,c
 31621  00794A  50F4               	movf	prodh,w,c
 31622  00794C  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31623  00794E  6EEA               	movwf	fsr0h,c
 31624  007950  50EF               	movf	indf0,w,c
 31625  007952  6F65               	movwf	??_FillSubKey& (0+255),b
 31626  007954  90D8               	bcf	status,0,c
 31627  007956  3565               	rlcf	??_FillSubKey& (0+255),w,b
 31628  007958  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 31629  00795A  6EDF               	movwf	indf2,c
 31630                           
 31631                           ; BSR set to: 0
 31632                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 31633  00795C  5167               	movf	FillSubKey@i& (0+255),w,b
 31634  00795E  0D01               	mullw	1
 31635  007960  50F3               	movf	prodl,w,c
 31636  007962  2560               	addwf	FillSubKey@source& (0+255),w,b
 31637  007964  6ED9               	movwf	fsr2l,c
 31638  007966  50F4               	movf	prodh,w,c
 31639  007968  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31640  00796A  6EDA               	movwf	fsr2h,c
 31641  00796C  AEDF               	btfss	indf2,7,c
 31642  00796E  D002               	goto	u14400
 31643  007970  0E01               	movlw	1
 31644  007972  D001               	goto	u14410
 31645  007974                     u14400:
 31646  007974  0E00               	movlw	0
 31647  007976                     u14410:
 31648  007976  6F66               	movwf	FillSubKey@carry& (0+255),b
 31649  007978                     l124:
 31650                           
 31651                           ; BSR set to: 0
 31652                           
 31653                           ; BSR set to: 0
 31654  007978  0767               	decf	FillSubKey@i& (0+255),f,b
 31655  00797A  2967               	incf	FillSubKey@i& (0+255),w,b
 31656  00797C  B4D8               	btfsc	status,2,c
 31657  00797E  0012               	return	
 31658  007980  D7D7               	goto	l125
 31659  007982                     __end_of_FillSubKey:
 31660                           	opt stack 0
 31661                           tosu	equ	0xFFF
 31662                           tosh	equ	0xFFE
 31663                           tosl	equ	0xFFD
 31664                           pclath	equ	0xFFA
 31665                           tblptru	equ	0xFF8
 31666                           tblptrh	equ	0xFF7
 31667                           tblptrl	equ	0xFF6
 31668                           tablat	equ	0xFF5
 31669                           prodh	equ	0xFF4
 31670                           prodl	equ	0xFF3
 31671                           intcon	equ	0xFF2
 31672                           intcon2	equ	0xFF1
 31673                           intcon3	equ	0xFF0
 31674                           indf0	equ	0xFEF
 31675                           postinc0	equ	0xFEE
 31676                           plusw0	equ	0xFEB
 31677                           fsr0h	equ	0xFEA
 31678                           fsr0l	equ	0xFE9
 31679                           wreg	equ	0xFE8
 31680                           postinc1	equ	0xFE6
 31681                           postdec1	equ	0xFE5
 31682                           plusw1	equ	0xFE3
 31683                           fsr1h	equ	0xFE2
 31684                           fsr1l	equ	0xFE1
 31685                           indf2	equ	0xFDF
 31686                           postinc2	equ	0xFDE
 31687                           postdec2	equ	0xFDD
 31688                           plusw2	equ	0xFDB
 31689                           fsr2h	equ	0xFDA
 31690                           fsr2l	equ	0xFD9
 31691                           status	equ	0xFD8
 31692                           
 31693 ;; *************** function _AESEncodeLoRa *****************
 31694 ;; Defined at:
 31695 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 31696 ;; Parameters:    Size  Location     Type
 31697 ;;  block           2   29[BANK0 ] PTR unsigned char 
 31698 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31699 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31700 ;;  key             2   31[BANK0 ] PTR unsigned char 
 31701 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31702 ;; Auto vars:     Size  Location     Type
 31703 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 31704 ;; Return value:  Size  Location     Type
 31705 ;;                  1    wreg      void 
 31706 ;; Registers used:
 31707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31708 ;; Tracked objects:
 31709 ;;		On entry : 0/0
 31710 ;;		On exit  : 0/0
 31711 ;;		Unchanged: 0/0
 31712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31714 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31716 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31717 ;;Total ram usage:       20 bytes
 31718 ;; Hardware stack levels used:    1
 31719 ;; Hardware stack levels required when called:    9
 31720 ;; This function calls:
 31721 ;;		_AESEncode
 31722 ;;		_memcpy
 31723 ;; This function is called by:
 31724 ;;		_AESCmac
 31725 ;;		_GenerateSubkey
 31726 ;;		_LORAWAN_RxDone
 31727 ;;		_ComputeSessionKeys
 31728 ;;		_EncryptFRMPayload
 31729 ;; This function uses a non-reentrant model
 31730 ;;
 31731                           
 31732                           	psect	text147
 31733  008350                     __ptext147:
 31734                           	opt stack 0
 31735  008350                     _AESEncodeLoRa:
 31736                           	opt stack 18
 31737                           
 31738                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 31739                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 31740                           
 31741                           ; BSR set to: 0
 31742                           ;incstack = 0
 31743  008350  0E81               	movlw	low AESEncodeLoRa@useKey
 31744  008352  0100               	movlb	0	; () banked
 31745  008354  6F60               	movwf	memcpy@d1& (0+255),b
 31746  008356  0E00               	movlw	high AESEncodeLoRa@useKey
 31747  008358  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31748  00835A  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 31749  00835E  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 31750  008362  0E00               	movlw	0
 31751  008364  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31752  008366  0E10               	movlw	16
 31753  008368  6F64               	movwf	memcpy@n& (0+255),b
 31754  00836A  EC22  F03D         	call	_memcpy	;wreg free
 31755                           
 31756                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 31757  00836E  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 31758  008372  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 31759  008376  0E81               	movlw	low AESEncodeLoRa@useKey
 31760  008378  0100               	movlb	0	; () banked
 31761  00837A  6F68               	movwf	AESEncode@key& (0+255),b
 31762  00837C  0E00               	movlw	high AESEncodeLoRa@useKey
 31763  00837E  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 31764  008380  EC7F  F014         	call	_AESEncode	;wreg free
 31765  008384  0012               	return		;funcret
 31766  008386                     __end_of_AESEncodeLoRa:
 31767                           	opt stack 0
 31768                           tosu	equ	0xFFF
 31769                           tosh	equ	0xFFE
 31770                           tosl	equ	0xFFD
 31771                           pclath	equ	0xFFA
 31772                           tblptru	equ	0xFF8
 31773                           tblptrh	equ	0xFF7
 31774                           tblptrl	equ	0xFF6
 31775                           tablat	equ	0xFF5
 31776                           prodh	equ	0xFF4
 31777                           prodl	equ	0xFF3
 31778                           intcon	equ	0xFF2
 31779                           intcon2	equ	0xFF1
 31780                           intcon3	equ	0xFF0
 31781                           indf0	equ	0xFEF
 31782                           postinc0	equ	0xFEE
 31783                           plusw0	equ	0xFEB
 31784                           fsr0h	equ	0xFEA
 31785                           fsr0l	equ	0xFE9
 31786                           wreg	equ	0xFE8
 31787                           postinc1	equ	0xFE6
 31788                           postdec1	equ	0xFE5
 31789                           plusw1	equ	0xFE3
 31790                           fsr1h	equ	0xFE2
 31791                           fsr1l	equ	0xFE1
 31792                           indf2	equ	0xFDF
 31793                           postinc2	equ	0xFDE
 31794                           postdec2	equ	0xFDD
 31795                           plusw2	equ	0xFDB
 31796                           fsr2h	equ	0xFDA
 31797                           fsr2l	equ	0xFD9
 31798                           status	equ	0xFD8
 31799                           
 31800 ;; *************** function _AESEncode *****************
 31801 ;; Defined at:
 31802 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 31803 ;; Parameters:    Size  Location     Type
 31804 ;;  block           2    6[BANK0 ] PTR unsigned char 
 31805 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31806 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31807 ;;  key             2    8[BANK0 ] PTR unsigned char 
 31808 ;;		 -> AESEncodeLoRa@useKey(16), 
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;  aux3            1   27[BANK0 ] unsigned char 
 31811 ;;  aux1            1   26[BANK0 ] unsigned char 
 31812 ;;  aux2            1   25[BANK0 ] unsigned char 
 31813 ;;  aux             1   24[BANK0 ] unsigned char 
 31814 ;;  i               1   28[BANK0 ] unsigned char 
 31815 ;;  temp            1    0        unsigned char 
 31816 ;; Return value:  Size  Location     Type
 31817 ;;                  1    wreg      void 
 31818 ;; Registers used:
 31819 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31820 ;; Tracked objects:
 31821 ;;		On entry : 0/0
 31822 ;;		On exit  : 0/0
 31823 ;;		Unchanged: 0/0
 31824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31826 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31827 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31828 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31829 ;;Total ram usage:       23 bytes
 31830 ;; Hardware stack levels used:    1
 31831 ;; Hardware stack levels required when called:    8
 31832 ;; This function calls:
 31833 ;;		_EncKeySchedule
 31834 ;;		_EncodeShiftRow
 31835 ;; This function is called by:
 31836 ;;		_AESEncodeLoRa
 31837 ;; This function uses a non-reentrant model
 31838 ;;
 31839                           
 31840                           	psect	text148
 31841  0028FE                     __ptext148:
 31842                           	opt stack 0
 31843  0028FE                     _AESEncode:
 31844                           	opt stack 18
 31845                           
 31846                           ;AES.c: 250: unsigned char i;
 31847                           ;AES.c: 251: unsigned char temp;
 31848                           ;AES.c: 254: _roundCounter = 10;
 31849                           
 31850                           ;incstack = 0
 31851  0028FE  0E0A               	movlw	10
 31852  002900  0101               	movlb	1	; () banked
 31853  002902  6F79               	movwf	__roundCounter& (0+255),b
 31854                           
 31855                           ;AES.c: 256: _rcon = 0x01;
 31856  002904  0E01               	movlw	1
 31857  002906  6E46               	movwf	__rcon,c
 31858                           
 31859                           ;AES.c: 259: for(i=0;i<16;i++)
 31860  002908  0E00               	movlw	0
 31861  00290A  0100               	movlb	0	; () banked
 31862  00290C  6F7C               	movwf	AESEncode@i& (0+255),b
 31863  00290E                     l12649:
 31864                           
 31865                           ; BSR set to: 0
 31866  00290E  0E0F               	movlw	15
 31867  002910  657C               	cpfsgt	AESEncode@i& (0+255),b
 31868  002912  D001               	goto	l348
 31869  002914  D016               	goto	u14190
 31870  002916                     l348:
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;AES.c: 260: {
 31874                           ;AES.c: 261: block[i] ^= key[i];
 31875                           
 31876                           ; BSR set to: 0
 31877  002916  517C               	movf	AESEncode@i& (0+255),w,b
 31878  002918  0D01               	mullw	1
 31879  00291A  50F3               	movf	prodl,w,c
 31880  00291C  2568               	addwf	AESEncode@key& (0+255),w,b
 31881  00291E  6ED9               	movwf	fsr2l,c
 31882  002920  50F4               	movf	prodh,w,c
 31883  002922  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 31884  002924  6EDA               	movwf	fsr2h,c
 31885  002926  50DF               	movf	indf2,w,c
 31886  002928  6F6A               	movwf	??_AESEncode& (0+255),b
 31887  00292A  517C               	movf	AESEncode@i& (0+255),w,b
 31888  00292C  0D01               	mullw	1
 31889  00292E  50F3               	movf	prodl,w,c
 31890  002930  2566               	addwf	AESEncode@block& (0+255),w,b
 31891  002932  6ED9               	movwf	fsr2l,c
 31892  002934  50F4               	movf	prodh,w,c
 31893  002936  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31894  002938  6EDA               	movwf	fsr2h,c
 31895  00293A  516A               	movf	??_AESEncode& (0+255),w,b
 31896  00293C  1ADF               	xorwf	indf2,f,c
 31897                           
 31898                           ; BSR set to: 0
 31899  00293E  2B7C               	incf	AESEncode@i& (0+255),f,b
 31900  002940  D7E6               	goto	l12649
 31901  002942                     u14190:
 31902                           
 31903                           ;AES.c: 265: {
 31904                           ;AES.c: 268: for(i=0;i<16;i++)
 31905                           
 31906                           ; BSR set to: 0
 31907                           
 31908                           ;AES.c: 262: }
 31909                           ;AES.c: 264: do
 31910                           
 31911                           ; BSR set to: 0
 31912  002942  0E00               	movlw	0
 31913  002944  0100               	movlb	0	; () banked
 31914  002946  6F7C               	movwf	AESEncode@i& (0+255),b
 31915  002948                     l12661:
 31916                           
 31917                           ; BSR set to: 0
 31918  002948  0E0F               	movlw	15
 31919  00294A  657C               	cpfsgt	AESEncode@i& (0+255),b
 31920  00294C  D001               	goto	l351
 31921  00294E  D022               	goto	u14210
 31922  002950                     l351:
 31923                           
 31924                           ; BSR set to: 0
 31925                           ;AES.c: 269: {
 31926                           ;AES.c: 270: block[i]=STable[block[i]];
 31927                           
 31928                           ; BSR set to: 0
 31929  002950  517C               	movf	AESEncode@i& (0+255),w,b
 31930  002952  0D01               	mullw	1
 31931  002954  50F3               	movf	prodl,w,c
 31932  002956  2566               	addwf	AESEncode@block& (0+255),w,b
 31933  002958  6ED9               	movwf	fsr2l,c
 31934  00295A  50F4               	movf	prodh,w,c
 31935  00295C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31936  00295E  6EDA               	movwf	fsr2h,c
 31937  002960  50DF               	movf	indf2,w,c
 31938  002962  6F6A               	movwf	??_AESEncode& (0+255),b
 31939  002964  516A               	movf	??_AESEncode& (0+255),w,b
 31940  002966  0D01               	mullw	1
 31941  002968  0E67               	movlw	low _STable
 31942  00296A  24F3               	addwf	prodl,w,c
 31943  00296C  6EF6               	movwf	tblptrl,c
 31944  00296E  0EFE               	movlw	high _STable
 31945  002970  20F4               	addwfc	prodh,w,c
 31946  002972  6EF7               	movwf	tblptrh,c
 31947  002974                     	if	1	;There are 3 active tblptr bytes
 31948  002974  6AF8               	clrf	tblptru,c
 31949  002976  0E00               	movlw	low (__mediumconst shr (0+16))
 31950  002978  22F8               	addwfc	tblptru,f,c
 31951  00297A                     	endif
 31952  00297A  517C               	movf	AESEncode@i& (0+255),w,b
 31953  00297C  0D01               	mullw	1
 31954  00297E  50F3               	movf	prodl,w,c
 31955  002980  2566               	addwf	AESEncode@block& (0+255),w,b
 31956  002982  6ED9               	movwf	fsr2l,c
 31957  002984  50F4               	movf	prodh,w,c
 31958  002986  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31959  002988  6EDA               	movwf	fsr2h,c
 31960  00298A  0008               	tblrd		*
 31961  00298C  CFF5 FFDF          	movff	tablat,indf2
 31962                           
 31963                           ; BSR set to: 0
 31964  002990  2B7C               	incf	AESEncode@i& (0+255),f,b
 31965  002992  D7DA               	goto	l12661
 31966  002994                     u14210:
 31967                           
 31968                           ; BSR set to: 0
 31969                           ;AES.c: 271: }
 31970                           ;AES.c: 274: EncodeShiftRow(block);
 31971                           
 31972                           ; BSR set to: 0
 31973  002994  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 31974  002998  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 31975  00299C  EC4B  F028         	call	_EncodeShiftRow	;wreg free
 31976                           
 31977                           ;AES.c: 277: if(_roundCounter != 1)
 31978  0029A0  0101               	movlb	1	; () banked
 31979  0029A2  0579               	decf	__roundCounter& (0+255),w,b
 31980  0029A4  B4D8               	btfsc	status,2,c
 31981  0029A6  D127               	goto	u14270
 31982                           
 31983                           ; BSR set to: 1
 31984                           ;AES.c: 278: {
 31985                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 31986                           ;AES.c: 281: for(i=0;i<16;i+=4)
 31987  0029A8  0E00               	movlw	0
 31988  0029AA  0100               	movlb	0	; () banked
 31989  0029AC  6F7C               	movwf	AESEncode@i& (0+255),b
 31990  0029AE                     l12677:
 31991                           
 31992                           ; BSR set to: 0
 31993  0029AE  0E0F               	movlw	15
 31994  0029B0  657C               	cpfsgt	AESEncode@i& (0+255),b
 31995  0029B2  D001               	goto	l354
 31996  0029B4  D120               	goto	u14270
 31997  0029B6                     l354:
 31998                           
 31999                           ; BSR set to: 0
 32000                           ;AES.c: 282: {
 32001                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 32002                           
 32003                           ; BSR set to: 0
 32004  0029B6  517C               	movf	AESEncode@i& (0+255),w,b
 32005  0029B8  6F6A               	movwf	??_AESEncode& (0+255),b
 32006  0029BA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32007  0029BC  0E01               	movlw	1
 32008  0029BE  276A               	addwf	??_AESEncode& (0+255),f,b
 32009  0029C0  0E00               	movlw	0
 32010  0029C2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32011  0029C4  516A               	movf	??_AESEncode& (0+255),w,b
 32012  0029C6  2566               	addwf	AESEncode@block& (0+255),w,b
 32013  0029C8  6ED9               	movwf	fsr2l,c
 32014  0029CA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32015  0029CC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32016  0029CE  6EDA               	movwf	fsr2h,c
 32017  0029D0  50DF               	movf	indf2,w,c
 32018  0029D2  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32019  0029D4  517C               	movf	AESEncode@i& (0+255),w,b
 32020  0029D6  2566               	addwf	AESEncode@block& (0+255),w,b
 32021  0029D8  6ED9               	movwf	fsr2l,c
 32022  0029DA  0E00               	movlw	0
 32023  0029DC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32024  0029DE  6EDA               	movwf	fsr2h,c
 32025  0029E0  50DF               	movf	indf2,w,c
 32026  0029E2  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32027  0029E4  6F7A               	movwf	AESEncode@aux1& (0+255),b
 32028                           
 32029                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 32030  0029E6  517C               	movf	AESEncode@i& (0+255),w,b
 32031  0029E8  6F6A               	movwf	??_AESEncode& (0+255),b
 32032  0029EA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32033  0029EC  0E03               	movlw	3
 32034  0029EE  276A               	addwf	??_AESEncode& (0+255),f,b
 32035  0029F0  0E00               	movlw	0
 32036  0029F2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32037  0029F4  516A               	movf	??_AESEncode& (0+255),w,b
 32038  0029F6  2566               	addwf	AESEncode@block& (0+255),w,b
 32039  0029F8  6ED9               	movwf	fsr2l,c
 32040  0029FA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32041  0029FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32042  0029FE  6EDA               	movwf	fsr2h,c
 32043  002A00  50DF               	movf	indf2,w,c
 32044  002A02  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32045  002A04  517C               	movf	AESEncode@i& (0+255),w,b
 32046  002A06  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 32047  002A08  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 32048  002A0A  0E02               	movlw	2
 32049  002A0C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 32050  002A0E  0E00               	movlw	0
 32051  002A10  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 32052  002A12  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32053  002A14  2566               	addwf	AESEncode@block& (0+255),w,b
 32054  002A16  6ED9               	movwf	fsr2l,c
 32055  002A18  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 32056  002A1A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32057  002A1C  6EDA               	movwf	fsr2h,c
 32058  002A1E  50DF               	movf	indf2,w,c
 32059  002A20  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32060  002A22  6F7B               	movwf	AESEncode@aux3& (0+255),b
 32061                           
 32062                           ; BSR set to: 0
 32063                           ;AES.c: 285: aux = aux1 ^ aux3;
 32064  002A24  517A               	movf	AESEncode@aux1& (0+255),w,b
 32065  002A26  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 32066  002A28  6F78               	movwf	AESEncode@aux& (0+255),b
 32067                           
 32068                           ; BSR set to: 0
 32069                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 32070  002A2A  517C               	movf	AESEncode@i& (0+255),w,b
 32071  002A2C  6F6A               	movwf	??_AESEncode& (0+255),b
 32072  002A2E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32073  002A30  0E01               	movlw	1
 32074  002A32  276A               	addwf	??_AESEncode& (0+255),f,b
 32075  002A34  0E00               	movlw	0
 32076  002A36  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32077  002A38  516A               	movf	??_AESEncode& (0+255),w,b
 32078  002A3A  2566               	addwf	AESEncode@block& (0+255),w,b
 32079  002A3C  6ED9               	movwf	fsr2l,c
 32080  002A3E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32081  002A40  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32082  002A42  6EDA               	movwf	fsr2h,c
 32083  002A44  50DF               	movf	indf2,w,c
 32084  002A46  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32085  002A48  517C               	movf	AESEncode@i& (0+255),w,b
 32086  002A4A  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 32087  002A4C  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 32088  002A4E  0E02               	movlw	2
 32089  002A50  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 32090  002A52  0E00               	movlw	0
 32091  002A54  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 32092  002A56  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32093  002A58  2566               	addwf	AESEncode@block& (0+255),w,b
 32094  002A5A  6ED9               	movwf	fsr2l,c
 32095  002A5C  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 32096  002A5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32097  002A60  6EDA               	movwf	fsr2h,c
 32098  002A62  50DF               	movf	indf2,w,c
 32099  002A64  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 32100  002A66  6F79               	movwf	AESEncode@aux2& (0+255),b
 32101                           
 32102                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 32103  002A68  0E7F               	movlw	127
 32104  002A6A  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 32105  002A6C  D00C               	goto	l357
 32106                           
 32107                           ; BSR set to: 0
 32108  002A6E  0E1B               	movlw	27
 32109  002A70  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 32110  002A74  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32111  002A76  90D8               	bcf	status,0,c
 32112  002A78  376A               	rlcf	??_AESEncode& (0+255),f,b
 32113  002A7A  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32114  002A7C  196A               	xorwf	??_AESEncode& (0+255),w,b
 32115  002A7E  6F72               	movwf	_AESEncode$814& (0+255),b
 32116  002A80  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32117  002A82  6F73               	movwf	(_AESEncode$814+1)& (0+255),b
 32118  002A84  D005               	goto	l359
 32119  002A86                     l357:
 32120                           
 32121                           ; BSR set to: 0
 32122                           
 32123                           ; BSR set to: 0
 32124  002A86  90D8               	bcf	status,0,c
 32125  002A88  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 32126  002A8A  6F72               	movwf	_AESEncode$814& (0+255),b
 32127  002A8C  6B73               	clrf	(_AESEncode$814+1)& (0+255),b
 32128  002A8E  3773               	rlcf	(_AESEncode$814+1)& (0+255),f,b
 32129  002A90                     l359:
 32130                           
 32131                           ; BSR set to: 0
 32132                           
 32133                           ; BSR set to: 0
 32134  002A90  C072  F07A         	movff	_AESEncode$814,AESEncode@aux1
 32135                           
 32136                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 32137  002A94  0E7F               	movlw	127
 32138  002A96  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 32139  002A98  D00C               	goto	l361
 32140                           
 32141                           ; BSR set to: 0
 32142  002A9A  0E1B               	movlw	27
 32143  002A9C  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 32144  002AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32145  002AA2  90D8               	bcf	status,0,c
 32146  002AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
 32147  002AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32148  002AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
 32149  002AAA  6F74               	movwf	_AESEncode$815& (0+255),b
 32150  002AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32151  002AAE  6F75               	movwf	(_AESEncode$815+1)& (0+255),b
 32152  002AB0  D005               	goto	l363
 32153  002AB2                     l361:
 32154                           
 32155                           ; BSR set to: 0
 32156                           
 32157                           ; BSR set to: 0
 32158  002AB2  90D8               	bcf	status,0,c
 32159  002AB4  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 32160  002AB6  6F74               	movwf	_AESEncode$815& (0+255),b
 32161  002AB8  6B75               	clrf	(_AESEncode$815+1)& (0+255),b
 32162  002ABA  3775               	rlcf	(_AESEncode$815+1)& (0+255),f,b
 32163  002ABC                     l363:
 32164                           
 32165                           ; BSR set to: 0
 32166                           
 32167                           ; BSR set to: 0
 32168  002ABC  C074  F079         	movff	_AESEncode$815,AESEncode@aux2
 32169                           
 32170                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 32171  002AC0  0E7F               	movlw	127
 32172  002AC2  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 32173  002AC4  D00C               	goto	l365
 32174                           
 32175                           ; BSR set to: 0
 32176  002AC6  0E1B               	movlw	27
 32177  002AC8  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 32178  002ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32179  002ACE  90D8               	bcf	status,0,c
 32180  002AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
 32181  002AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 32182  002AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
 32183  002AD6  6F76               	movwf	_AESEncode$816& (0+255),b
 32184  002AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32185  002ADA  6F77               	movwf	(_AESEncode$816+1)& (0+255),b
 32186  002ADC  D005               	goto	l367
 32187  002ADE                     l365:
 32188                           
 32189                           ; BSR set to: 0
 32190                           
 32191                           ; BSR set to: 0
 32192  002ADE  90D8               	bcf	status,0,c
 32193  002AE0  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 32194  002AE2  6F76               	movwf	_AESEncode$816& (0+255),b
 32195  002AE4  6B77               	clrf	(_AESEncode$816+1)& (0+255),b
 32196  002AE6  3777               	rlcf	(_AESEncode$816+1)& (0+255),f,b
 32197  002AE8                     l367:
 32198                           
 32199                           ; BSR set to: 0
 32200                           
 32201                           ; BSR set to: 0
 32202  002AE8  C076  F07B         	movff	_AESEncode$816,AESEncode@aux3
 32203                           
 32204                           ; BSR set to: 0
 32205                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 32206  002AEC  517C               	movf	AESEncode@i& (0+255),w,b
 32207  002AEE  2566               	addwf	AESEncode@block& (0+255),w,b
 32208  002AF0  6ED9               	movwf	fsr2l,c
 32209  002AF2  0E00               	movlw	0
 32210  002AF4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32211  002AF6  6EDA               	movwf	fsr2h,c
 32212  002AF8  517C               	movf	AESEncode@i& (0+255),w,b
 32213  002AFA  2566               	addwf	AESEncode@block& (0+255),w,b
 32214  002AFC  6EE9               	movwf	fsr0l,c
 32215  002AFE  0E00               	movlw	0
 32216  002B00  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32217  002B02  6EEA               	movwf	fsr0h,c
 32218  002B04  50EF               	movf	indf0,w,c
 32219  002B06  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32220  002B08  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 32221  002B0A  6EDF               	movwf	indf2,c
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 32225  002B0C  517C               	movf	AESEncode@i& (0+255),w,b
 32226  002B0E  6F6A               	movwf	??_AESEncode& (0+255),b
 32227  002B10  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32228  002B12  0E01               	movlw	1
 32229  002B14  276A               	addwf	??_AESEncode& (0+255),f,b
 32230  002B16  0E00               	movlw	0
 32231  002B18  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32232  002B1A  516A               	movf	??_AESEncode& (0+255),w,b
 32233  002B1C  2566               	addwf	AESEncode@block& (0+255),w,b
 32234  002B1E  6ED9               	movwf	fsr2l,c
 32235  002B20  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32236  002B22  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32237  002B24  6EDA               	movwf	fsr2h,c
 32238  002B26  517C               	movf	AESEncode@i& (0+255),w,b
 32239  002B28  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32240  002B2A  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 32241  002B2C  0E01               	movlw	1
 32242  002B2E  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 32243  002B30  0E00               	movlw	0
 32244  002B32  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 32245  002B34  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 32246  002B36  2566               	addwf	AESEncode@block& (0+255),w,b
 32247  002B38  6EE9               	movwf	fsr0l,c
 32248  002B3A  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32249  002B3C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32250  002B3E  6EEA               	movwf	fsr0h,c
 32251  002B40  50EF               	movf	indf0,w,c
 32252  002B42  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32253  002B44  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 32254  002B46  6EDF               	movwf	indf2,c
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 32258  002B48  517C               	movf	AESEncode@i& (0+255),w,b
 32259  002B4A  6F6A               	movwf	??_AESEncode& (0+255),b
 32260  002B4C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32261  002B4E  0E02               	movlw	2
 32262  002B50  276A               	addwf	??_AESEncode& (0+255),f,b
 32263  002B52  0E00               	movlw	0
 32264  002B54  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32265  002B56  516A               	movf	??_AESEncode& (0+255),w,b
 32266  002B58  2566               	addwf	AESEncode@block& (0+255),w,b
 32267  002B5A  6ED9               	movwf	fsr2l,c
 32268  002B5C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32269  002B5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32270  002B60  6EDA               	movwf	fsr2h,c
 32271  002B62  517C               	movf	AESEncode@i& (0+255),w,b
 32272  002B64  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32273  002B66  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 32274  002B68  0E02               	movlw	2
 32275  002B6A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 32276  002B6C  0E00               	movlw	0
 32277  002B6E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 32278  002B70  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 32279  002B72  2566               	addwf	AESEncode@block& (0+255),w,b
 32280  002B74  6EE9               	movwf	fsr0l,c
 32281  002B76  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32282  002B78  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32283  002B7A  6EEA               	movwf	fsr0h,c
 32284  002B7C  50EF               	movf	indf0,w,c
 32285  002B7E  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32286  002B80  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 32287  002B82  6EDF               	movwf	indf2,c
 32288                           
 32289                           ; BSR set to: 0
 32290                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 32291  002B84  517C               	movf	AESEncode@i& (0+255),w,b
 32292  002B86  6F6A               	movwf	??_AESEncode& (0+255),b
 32293  002B88  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 32294  002B8A  0E03               	movlw	3
 32295  002B8C  276A               	addwf	??_AESEncode& (0+255),f,b
 32296  002B8E  0E00               	movlw	0
 32297  002B90  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 32298  002B92  516A               	movf	??_AESEncode& (0+255),w,b
 32299  002B94  2566               	addwf	AESEncode@block& (0+255),w,b
 32300  002B96  6ED9               	movwf	fsr2l,c
 32301  002B98  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 32302  002B9A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32303  002B9C  6EDA               	movwf	fsr2h,c
 32304  002B9E  517C               	movf	AESEncode@i& (0+255),w,b
 32305  002BA0  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 32306  002BA2  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 32307  002BA4  0E02               	movlw	2
 32308  002BA6  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 32309  002BA8  0E00               	movlw	0
 32310  002BAA  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 32311  002BAC  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 32312  002BAE  2566               	addwf	AESEncode@block& (0+255),w,b
 32313  002BB0  6EE9               	movwf	fsr0l,c
 32314  002BB2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 32315  002BB4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32316  002BB6  6EEA               	movwf	fsr0h,c
 32317  002BB8  50EF               	movf	indf0,w,c
 32318  002BBA  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 32319  002BBC  517C               	movf	AESEncode@i& (0+255),w,b
 32320  002BBE  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 32321  002BC0  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 32322  002BC2  0E01               	movlw	1
 32323  002BC4  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 32324  002BC6  0E00               	movlw	0
 32325  002BC8  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 32326  002BCA  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 32327  002BCC  2566               	addwf	AESEncode@block& (0+255),w,b
 32328  002BCE  6EE9               	movwf	fsr0l,c
 32329  002BD0  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 32330  002BD2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32331  002BD4  6EEA               	movwf	fsr0h,c
 32332  002BD6  50EF               	movf	indf0,w,c
 32333  002BD8  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 32334  002BDA  517C               	movf	AESEncode@i& (0+255),w,b
 32335  002BDC  2566               	addwf	AESEncode@block& (0+255),w,b
 32336  002BDE  6EE9               	movwf	fsr0l,c
 32337  002BE0  0E00               	movlw	0
 32338  002BE2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32339  002BE4  6EEA               	movwf	fsr0h,c
 32340  002BE6  50EF               	movf	indf0,w,c
 32341  002BE8  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 32342  002BEA  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 32343  002BEC  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32344  002BEE  6EDF               	movwf	indf2,c
 32345  002BF0  0E04               	movlw	4
 32346  002BF2  277C               	addwf	AESEncode@i& (0+255),f,b
 32347  002BF4  D6DC               	goto	l12677
 32348  002BF6                     u14270:
 32349                           
 32350                           ;AES.c: 296: }
 32351                           ;AES.c: 297: }
 32352                           ;AES.c: 299: EncKeySchedule(key);
 32353                           
 32354                           ; BSR set to: 0
 32355                           
 32356                           ; BSR set to: 0
 32357  002BF6  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 32358  002BFA  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 32359  002BFE  EC86  F01A         	call	_EncKeySchedule	;wreg free
 32360                           
 32361                           ;AES.c: 302: for(i=0;i<16;i++)
 32362  002C02  0E00               	movlw	0
 32363  002C04  0100               	movlb	0	; () banked
 32364  002C06  6F7C               	movwf	AESEncode@i& (0+255),b
 32365  002C08                     l12717:
 32366                           
 32367                           ; BSR set to: 0
 32368  002C08  0E0F               	movlw	15
 32369  002C0A  657C               	cpfsgt	AESEncode@i& (0+255),b
 32370  002C0C  D001               	goto	l368
 32371  002C0E  D016               	goto	u14290
 32372  002C10                     l368:
 32373                           
 32374                           ; BSR set to: 0
 32375                           ;AES.c: 303: {
 32376                           ;AES.c: 304: block[i] ^= key[i];
 32377                           
 32378                           ; BSR set to: 0
 32379  002C10  517C               	movf	AESEncode@i& (0+255),w,b
 32380  002C12  0D01               	mullw	1
 32381  002C14  50F3               	movf	prodl,w,c
 32382  002C16  2568               	addwf	AESEncode@key& (0+255),w,b
 32383  002C18  6ED9               	movwf	fsr2l,c
 32384  002C1A  50F4               	movf	prodh,w,c
 32385  002C1C  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 32386  002C1E  6EDA               	movwf	fsr2h,c
 32387  002C20  50DF               	movf	indf2,w,c
 32388  002C22  6F6A               	movwf	??_AESEncode& (0+255),b
 32389  002C24  517C               	movf	AESEncode@i& (0+255),w,b
 32390  002C26  0D01               	mullw	1
 32391  002C28  50F3               	movf	prodl,w,c
 32392  002C2A  2566               	addwf	AESEncode@block& (0+255),w,b
 32393  002C2C  6ED9               	movwf	fsr2l,c
 32394  002C2E  50F4               	movf	prodh,w,c
 32395  002C30  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32396  002C32  6EDA               	movwf	fsr2h,c
 32397  002C34  516A               	movf	??_AESEncode& (0+255),w,b
 32398  002C36  1ADF               	xorwf	indf2,f,c
 32399                           
 32400                           ; BSR set to: 0
 32401  002C38  2B7C               	incf	AESEncode@i& (0+255),f,b
 32402  002C3A  D7E6               	goto	l12717
 32403  002C3C                     u14290:
 32404                           
 32405                           ; BSR set to: 0
 32406                           ;AES.c: 305: }
 32407                           ;AES.c: 307: _roundCounter--;
 32408                           
 32409                           ; BSR set to: 0
 32410  002C3C  0101               	movlb	1	; () banked
 32411  002C3E  0779               	decf	__roundCounter& (0+255),f,b
 32412                           
 32413                           ; BSR set to: 1
 32414                           ;AES.c: 308: }
 32415                           ;AES.c: 309: while(_roundCounter !=0);
 32416  002C40  5179               	movf	__roundCounter& (0+255),w,b
 32417  002C42  B4D8               	btfsc	status,2,c
 32418  002C44  0012               	return	
 32419  002C46  D67D               	goto	u14190
 32420  002C48                     __end_of_AESEncode:
 32421                           	opt stack 0
 32422                           tosu	equ	0xFFF
 32423                           tosh	equ	0xFFE
 32424                           tosl	equ	0xFFD
 32425                           pclath	equ	0xFFA
 32426                           tblptru	equ	0xFF8
 32427                           tblptrh	equ	0xFF7
 32428                           tblptrl	equ	0xFF6
 32429                           tablat	equ	0xFF5
 32430                           prodh	equ	0xFF4
 32431                           prodl	equ	0xFF3
 32432                           intcon	equ	0xFF2
 32433                           intcon2	equ	0xFF1
 32434                           intcon3	equ	0xFF0
 32435                           indf0	equ	0xFEF
 32436                           postinc0	equ	0xFEE
 32437                           plusw0	equ	0xFEB
 32438                           fsr0h	equ	0xFEA
 32439                           fsr0l	equ	0xFE9
 32440                           wreg	equ	0xFE8
 32441                           postinc1	equ	0xFE6
 32442                           postdec1	equ	0xFE5
 32443                           plusw1	equ	0xFE3
 32444                           fsr1h	equ	0xFE2
 32445                           fsr1l	equ	0xFE1
 32446                           indf2	equ	0xFDF
 32447                           postinc2	equ	0xFDE
 32448                           postdec2	equ	0xFDD
 32449                           plusw2	equ	0xFDB
 32450                           fsr2h	equ	0xFDA
 32451                           fsr2l	equ	0xFD9
 32452                           status	equ	0xFD8
 32453                           
 32454 ;; *************** function _EncodeShiftRow *****************
 32455 ;; Defined at:
 32456 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 32457 ;; Parameters:    Size  Location     Type
 32458 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 32459 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32460 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32461 ;; Auto vars:     Size  Location     Type
 32462 ;;  temp            1    2[BANK0 ] unsigned char 
 32463 ;; Return value:  Size  Location     Type
 32464 ;;                  1    wreg      void 
 32465 ;; Registers used:
 32466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32467 ;; Tracked objects:
 32468 ;;		On entry : 0/0
 32469 ;;		On exit  : 0/0
 32470 ;;		Unchanged: 0/0
 32471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32475 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32476 ;;Total ram usage:        3 bytes
 32477 ;; Hardware stack levels used:    1
 32478 ;; Hardware stack levels required when called:    7
 32479 ;; This function calls:
 32480 ;;		Nothing
 32481 ;; This function is called by:
 32482 ;;		_AESEncode
 32483 ;; This function uses a non-reentrant model
 32484 ;;
 32485                           
 32486                           	psect	text149
 32487  005096                     __ptext149:
 32488                           	opt stack 0
 32489  005096                     _EncodeShiftRow:
 32490                           	opt stack 18
 32491                           
 32492                           ;AES.c: 387: unsigned char temp;
 32493                           ;AES.c: 392: temp=stateTable[1];
 32494                           
 32495                           ; BSR set to: 1
 32496                           ;incstack = 0
 32497  005096  0100               	movlb	0	; () banked
 32498  005098  EE20 F001          	lfsr	2,1
 32499  00509C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32500  00509E  26D9               	addwf	fsr2l,f,c
 32501  0050A0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32502  0050A2  22DA               	addwfc	fsr2h,f,c
 32503  0050A4  50DF               	movf	indf2,w,c
 32504  0050A6  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32505                           
 32506                           ; BSR set to: 0
 32507                           ;AES.c: 393: stateTable[1]=stateTable[5];
 32508  0050A8  EE20 F005          	lfsr	2,5
 32509  0050AC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32510  0050AE  26D9               	addwf	fsr2l,f,c
 32511  0050B0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32512  0050B2  22DA               	addwfc	fsr2h,f,c
 32513  0050B4  EE00 F001          	lfsr	0,1
 32514  0050B8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32515  0050BA  26E9               	addwf	fsr0l,f,c
 32516  0050BC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32517  0050BE  22EA               	addwfc	fsr0h,f,c
 32518  0050C0  CFDF FFEF          	movff	indf2,indf0
 32519                           
 32520                           ; BSR set to: 0
 32521                           ;AES.c: 394: stateTable[5]=stateTable[9];
 32522  0050C4  EE20 F009          	lfsr	2,9
 32523  0050C8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32524  0050CA  26D9               	addwf	fsr2l,f,c
 32525  0050CC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32526  0050CE  22DA               	addwfc	fsr2h,f,c
 32527  0050D0  EE00 F005          	lfsr	0,5
 32528  0050D4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32529  0050D6  26E9               	addwf	fsr0l,f,c
 32530  0050D8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32531  0050DA  22EA               	addwfc	fsr0h,f,c
 32532  0050DC  CFDF FFEF          	movff	indf2,indf0
 32533                           
 32534                           ; BSR set to: 0
 32535                           ;AES.c: 395: stateTable[9]=stateTable[13];
 32536  0050E0  EE20 F00D          	lfsr	2,13
 32537  0050E4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32538  0050E6  26D9               	addwf	fsr2l,f,c
 32539  0050E8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32540  0050EA  22DA               	addwfc	fsr2h,f,c
 32541  0050EC  EE00 F009          	lfsr	0,9
 32542  0050F0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32543  0050F2  26E9               	addwf	fsr0l,f,c
 32544  0050F4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32545  0050F6  22EA               	addwfc	fsr0h,f,c
 32546  0050F8  CFDF FFEF          	movff	indf2,indf0
 32547                           
 32548                           ; BSR set to: 0
 32549                           ;AES.c: 396: stateTable[13]=temp;
 32550  0050FC  EE20 F00D          	lfsr	2,13
 32551  005100  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32552  005102  26D9               	addwf	fsr2l,f,c
 32553  005104  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32554  005106  22DA               	addwfc	fsr2h,f,c
 32555  005108  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32556                           
 32557                           ; BSR set to: 0
 32558                           ;AES.c: 399: temp=stateTable[2];
 32559  00510C  EE20 F002          	lfsr	2,2
 32560  005110  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32561  005112  26D9               	addwf	fsr2l,f,c
 32562  005114  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32563  005116  22DA               	addwfc	fsr2h,f,c
 32564  005118  50DF               	movf	indf2,w,c
 32565  00511A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32566                           
 32567                           ; BSR set to: 0
 32568                           ;AES.c: 400: stateTable[2]=stateTable[10];
 32569  00511C  EE20 F00A          	lfsr	2,10
 32570  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32571  005122  26D9               	addwf	fsr2l,f,c
 32572  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32573  005126  22DA               	addwfc	fsr2h,f,c
 32574  005128  EE00 F002          	lfsr	0,2
 32575  00512C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32576  00512E  26E9               	addwf	fsr0l,f,c
 32577  005130  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32578  005132  22EA               	addwfc	fsr0h,f,c
 32579  005134  CFDF FFEF          	movff	indf2,indf0
 32580                           
 32581                           ;AES.c: 401: stateTable[10]=temp;
 32582  005138  EE20 F00A          	lfsr	2,10
 32583  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32584  00513E  26D9               	addwf	fsr2l,f,c
 32585  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32586  005142  22DA               	addwfc	fsr2h,f,c
 32587  005144  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32588                           
 32589                           ;AES.c: 402: temp=stateTable[14];
 32590  005148  EE20 F00E          	lfsr	2,14
 32591  00514C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32592  00514E  26D9               	addwf	fsr2l,f,c
 32593  005150  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32594  005152  22DA               	addwfc	fsr2h,f,c
 32595  005154  50DF               	movf	indf2,w,c
 32596  005156  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32597                           
 32598                           ; BSR set to: 0
 32599                           ;AES.c: 403: stateTable[14]=stateTable[6];
 32600  005158  EE20 F006          	lfsr	2,6
 32601  00515C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32602  00515E  26D9               	addwf	fsr2l,f,c
 32603  005160  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32604  005162  22DA               	addwfc	fsr2h,f,c
 32605  005164  EE00 F00E          	lfsr	0,14
 32606  005168  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32607  00516A  26E9               	addwf	fsr0l,f,c
 32608  00516C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32609  00516E  22EA               	addwfc	fsr0h,f,c
 32610  005170  CFDF FFEF          	movff	indf2,indf0
 32611                           
 32612                           ; BSR set to: 0
 32613                           ;AES.c: 404: stateTable[6]=temp;
 32614  005174  EE20 F006          	lfsr	2,6
 32615  005178  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32616  00517A  26D9               	addwf	fsr2l,f,c
 32617  00517C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32618  00517E  22DA               	addwfc	fsr2h,f,c
 32619  005180  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32620                           
 32621                           ; BSR set to: 0
 32622                           ;AES.c: 407: temp=stateTable[3];
 32623  005184  EE20 F003          	lfsr	2,3
 32624  005188  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32625  00518A  26D9               	addwf	fsr2l,f,c
 32626  00518C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32627  00518E  22DA               	addwfc	fsr2h,f,c
 32628  005190  50DF               	movf	indf2,w,c
 32629  005192  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32630                           
 32631                           ; BSR set to: 0
 32632                           ;AES.c: 408: stateTable[3]=stateTable[15];
 32633  005194  EE20 F00F          	lfsr	2,15
 32634  005198  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32635  00519A  26D9               	addwf	fsr2l,f,c
 32636  00519C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32637  00519E  22DA               	addwfc	fsr2h,f,c
 32638  0051A0  EE00 F003          	lfsr	0,3
 32639  0051A4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32640  0051A6  26E9               	addwf	fsr0l,f,c
 32641  0051A8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32642  0051AA  22EA               	addwfc	fsr0h,f,c
 32643  0051AC  CFDF FFEF          	movff	indf2,indf0
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;AES.c: 409: stateTable[15]=stateTable[11];
 32647  0051B0  EE20 F00B          	lfsr	2,11
 32648  0051B4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32649  0051B6  26D9               	addwf	fsr2l,f,c
 32650  0051B8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32651  0051BA  22DA               	addwfc	fsr2h,f,c
 32652  0051BC  EE00 F00F          	lfsr	0,15
 32653  0051C0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32654  0051C2  26E9               	addwf	fsr0l,f,c
 32655  0051C4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32656  0051C6  22EA               	addwfc	fsr0h,f,c
 32657  0051C8  CFDF FFEF          	movff	indf2,indf0
 32658                           
 32659                           ; BSR set to: 0
 32660                           ;AES.c: 410: stateTable[11]=stateTable[7];
 32661  0051CC  EE20 F007          	lfsr	2,7
 32662  0051D0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32663  0051D2  26D9               	addwf	fsr2l,f,c
 32664  0051D4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32665  0051D6  22DA               	addwfc	fsr2h,f,c
 32666  0051D8  EE00 F00B          	lfsr	0,11
 32667  0051DC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32668  0051DE  26E9               	addwf	fsr0l,f,c
 32669  0051E0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32670  0051E2  22EA               	addwfc	fsr0h,f,c
 32671  0051E4  CFDF FFEF          	movff	indf2,indf0
 32672                           
 32673                           ;AES.c: 411: stateTable[7]=temp;
 32674  0051E8  EE20 F007          	lfsr	2,7
 32675  0051EC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32676  0051EE  26D9               	addwf	fsr2l,f,c
 32677  0051F0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32678  0051F2  22DA               	addwfc	fsr2h,f,c
 32679  0051F4  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32680                           
 32681                           ; BSR set to: 0
 32682  0051F8  0012               	return		;funcret
 32683  0051FA                     __end_of_EncodeShiftRow:
 32684                           	opt stack 0
 32685                           tosu	equ	0xFFF
 32686                           tosh	equ	0xFFE
 32687                           tosl	equ	0xFFD
 32688                           pclath	equ	0xFFA
 32689                           tblptru	equ	0xFF8
 32690                           tblptrh	equ	0xFF7
 32691                           tblptrl	equ	0xFF6
 32692                           tablat	equ	0xFF5
 32693                           prodh	equ	0xFF4
 32694                           prodl	equ	0xFF3
 32695                           intcon	equ	0xFF2
 32696                           intcon2	equ	0xFF1
 32697                           intcon3	equ	0xFF0
 32698                           indf0	equ	0xFEF
 32699                           postinc0	equ	0xFEE
 32700                           plusw0	equ	0xFEB
 32701                           fsr0h	equ	0xFEA
 32702                           fsr0l	equ	0xFE9
 32703                           wreg	equ	0xFE8
 32704                           postinc1	equ	0xFE6
 32705                           postdec1	equ	0xFE5
 32706                           plusw1	equ	0xFE3
 32707                           fsr1h	equ	0xFE2
 32708                           fsr1l	equ	0xFE1
 32709                           indf2	equ	0xFDF
 32710                           postinc2	equ	0xFDE
 32711                           postdec2	equ	0xFDD
 32712                           plusw2	equ	0xFDB
 32713                           fsr2h	equ	0xFDA
 32714                           fsr2l	equ	0xFD9
 32715                           status	equ	0xFD8
 32716                           
 32717 ;; *************** function _EncKeySchedule *****************
 32718 ;; Defined at:
 32719 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 32720 ;; Parameters:    Size  Location     Type
 32721 ;;  key             2    0[BANK0 ] PTR unsigned char 
 32722 ;;		 -> AESEncodeLoRa@useKey(16), 
 32723 ;; Auto vars:     Size  Location     Type
 32724 ;;		None
 32725 ;; Return value:  Size  Location     Type
 32726 ;;                  1    wreg      void 
 32727 ;; Registers used:
 32728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32729 ;; Tracked objects:
 32730 ;;		On entry : 0/0
 32731 ;;		On exit  : 0/0
 32732 ;;		Unchanged: 0/0
 32733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32737 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32738 ;;Total ram usage:        6 bytes
 32739 ;; Hardware stack levels used:    1
 32740 ;; Hardware stack levels required when called:    7
 32741 ;; This function calls:
 32742 ;;		Nothing
 32743 ;; This function is called by:
 32744 ;;		_AESEncode
 32745 ;; This function uses a non-reentrant model
 32746 ;;
 32747                           
 32748                           	psect	text150
 32749  00350C                     __ptext150:
 32750                           	opt stack 0
 32751  00350C                     _EncKeySchedule:
 32752                           	opt stack 18
 32753                           
 32754                           ;AES.c: 340: key[0]^=STable[key[13]];
 32755                           
 32756                           ; BSR set to: 0
 32757                           ;incstack = 0
 32758  00350C  0100               	movlb	0	; () banked
 32759  00350E  EE20 F00D          	lfsr	2,13
 32760  003512  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32761  003514  26D9               	addwf	fsr2l,f,c
 32762  003516  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32763  003518  22DA               	addwfc	fsr2h,f,c
 32764  00351A  50DF               	movf	indf2,w,c
 32765  00351C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32766  00351E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32767  003520  0D01               	mullw	1
 32768  003522  0E67               	movlw	low _STable
 32769  003524  24F3               	addwf	prodl,w,c
 32770  003526  6EF6               	movwf	tblptrl,c
 32771  003528  0EFE               	movlw	high _STable
 32772  00352A  20F4               	addwfc	prodh,w,c
 32773  00352C  6EF7               	movwf	tblptrh,c
 32774  00352E                     	if	1	;There are 3 active tblptr bytes
 32775  00352E  6AF8               	clrf	tblptru,c
 32776  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 32777  003532  22F8               	addwfc	tblptru,f,c
 32778  003534                     	endif
 32779  003534  0008               	tblrd		*
 32780  003536  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32781  00353A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32782  00353E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32783  003542  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32784  003544  1ADF               	xorwf	indf2,f,c
 32785                           
 32786                           ;AES.c: 341: key[1]^=STable[key[14]];
 32787  003546  EE20 F00E          	lfsr	2,14
 32788  00354A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32789  00354C  26D9               	addwf	fsr2l,f,c
 32790  00354E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32791  003550  22DA               	addwfc	fsr2h,f,c
 32792  003552  50DF               	movf	indf2,w,c
 32793  003554  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32794  003556  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32795  003558  0D01               	mullw	1
 32796  00355A  0E67               	movlw	low _STable
 32797  00355C  24F3               	addwf	prodl,w,c
 32798  00355E  6EF6               	movwf	tblptrl,c
 32799  003560  0EFE               	movlw	high _STable
 32800  003562  20F4               	addwfc	prodh,w,c
 32801  003564  6EF7               	movwf	tblptrh,c
 32802  003566                     	if	1	;There are 3 active tblptr bytes
 32803  003566  6AF8               	clrf	tblptru,c
 32804  003568  0E00               	movlw	low (__mediumconst shr (0+16))
 32805  00356A  22F8               	addwfc	tblptru,f,c
 32806  00356C                     	endif
 32807  00356C  0008               	tblrd		*
 32808  00356E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32809  003572  EE20 F001          	lfsr	2,1
 32810  003576  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32811  003578  26D9               	addwf	fsr2l,f,c
 32812  00357A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32813  00357C  22DA               	addwfc	fsr2h,f,c
 32814  00357E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32815  003580  1ADF               	xorwf	indf2,f,c
 32816                           
 32817                           ;AES.c: 342: key[2]^=STable[key[15]];
 32818  003582  EE20 F00F          	lfsr	2,15
 32819  003586  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32820  003588  26D9               	addwf	fsr2l,f,c
 32821  00358A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32822  00358C  22DA               	addwfc	fsr2h,f,c
 32823  00358E  50DF               	movf	indf2,w,c
 32824  003590  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32825  003592  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32826  003594  0D01               	mullw	1
 32827  003596  0E67               	movlw	low _STable
 32828  003598  24F3               	addwf	prodl,w,c
 32829  00359A  6EF6               	movwf	tblptrl,c
 32830  00359C  0EFE               	movlw	high _STable
 32831  00359E  20F4               	addwfc	prodh,w,c
 32832  0035A0  6EF7               	movwf	tblptrh,c
 32833  0035A2                     	if	1	;There are 3 active tblptr bytes
 32834  0035A2  6AF8               	clrf	tblptru,c
 32835  0035A4  0E00               	movlw	low (__mediumconst shr (0+16))
 32836  0035A6  22F8               	addwfc	tblptru,f,c
 32837  0035A8                     	endif
 32838  0035A8  0008               	tblrd		*
 32839  0035AA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32840  0035AE  EE20 F002          	lfsr	2,2
 32841  0035B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32842  0035B4  26D9               	addwf	fsr2l,f,c
 32843  0035B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32844  0035B8  22DA               	addwfc	fsr2h,f,c
 32845  0035BA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32846  0035BC  1ADF               	xorwf	indf2,f,c
 32847                           
 32848                           ;AES.c: 343: key[3]^=STable[key[12]];
 32849  0035BE  EE20 F00C          	lfsr	2,12
 32850  0035C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32851  0035C4  26D9               	addwf	fsr2l,f,c
 32852  0035C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32853  0035C8  22DA               	addwfc	fsr2h,f,c
 32854  0035CA  50DF               	movf	indf2,w,c
 32855  0035CC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32856  0035CE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32857  0035D0  0D01               	mullw	1
 32858  0035D2  0E67               	movlw	low _STable
 32859  0035D4  24F3               	addwf	prodl,w,c
 32860  0035D6  6EF6               	movwf	tblptrl,c
 32861  0035D8  0EFE               	movlw	high _STable
 32862  0035DA  20F4               	addwfc	prodh,w,c
 32863  0035DC  6EF7               	movwf	tblptrh,c
 32864  0035DE                     	if	1	;There are 3 active tblptr bytes
 32865  0035DE  6AF8               	clrf	tblptru,c
 32866  0035E0  0E00               	movlw	low (__mediumconst shr (0+16))
 32867  0035E2  22F8               	addwfc	tblptru,f,c
 32868  0035E4                     	endif
 32869  0035E4  0008               	tblrd		*
 32870  0035E6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32871  0035EA  EE20 F003          	lfsr	2,3
 32872  0035EE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32873  0035F0  26D9               	addwf	fsr2l,f,c
 32874  0035F2  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32875  0035F4  22DA               	addwfc	fsr2h,f,c
 32876  0035F6  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32877  0035F8  1ADF               	xorwf	indf2,f,c
 32878                           
 32879                           ; BSR set to: 0
 32880                           ;AES.c: 345: key[0]^=_rcon;
 32881  0035FA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32882  0035FE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32883  003602  5046               	movf	__rcon,w,c
 32884  003604  1ADF               	xorwf	indf2,f,c
 32885                           
 32886                           ; BSR set to: 0
 32887                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 32888  003606  0E7F               	movlw	127
 32889  003608  6446               	cpfsgt	__rcon,c
 32890  00360A  D00C               	goto	l375
 32891                           
 32892                           ; BSR set to: 0
 32893  00360C  0E1B               	movlw	27
 32894  00360E  C046  F062         	movff	__rcon,??_EncKeySchedule
 32895  003612  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 32896  003614  90D8               	bcf	status,0,c
 32897  003616  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 32898  003618  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 32899  00361A  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 32900  00361C  6F64               	movwf	_EncKeySchedule$819& (0+255),b
 32901  00361E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32902  003620  6F65               	movwf	(_EncKeySchedule$819+1)& (0+255),b
 32903  003622  D005               	goto	l377
 32904  003624                     l375:
 32905                           
 32906                           ; BSR set to: 0
 32907                           
 32908                           ; BSR set to: 0
 32909  003624  90D8               	bcf	status,0,c
 32910  003626  3446               	rlcf	__rcon,w,c
 32911  003628  6F64               	movwf	_EncKeySchedule$819& (0+255),b
 32912  00362A  6B65               	clrf	(_EncKeySchedule$819+1)& (0+255),b
 32913  00362C  3765               	rlcf	(_EncKeySchedule$819+1)& (0+255),f,b
 32914  00362E                     l377:
 32915                           
 32916                           ; BSR set to: 0
 32917                           
 32918                           ; BSR set to: 0
 32919  00362E  C064  F046         	movff	_EncKeySchedule$819,__rcon
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;AES.c: 349: key[4]^=key[0];
 32923  003632  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32924  003636  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32925  00363A  50DF               	movf	indf2,w,c
 32926  00363C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32927  00363E  EE20 F004          	lfsr	2,4
 32928  003642  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32929  003644  26D9               	addwf	fsr2l,f,c
 32930  003646  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32931  003648  22DA               	addwfc	fsr2h,f,c
 32932  00364A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32933  00364C  1ADF               	xorwf	indf2,f,c
 32934                           
 32935                           ; BSR set to: 0
 32936                           ;AES.c: 350: key[5]^=key[1];
 32937  00364E  EE20 F001          	lfsr	2,1
 32938  003652  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32939  003654  26D9               	addwf	fsr2l,f,c
 32940  003656  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32941  003658  22DA               	addwfc	fsr2h,f,c
 32942  00365A  50DF               	movf	indf2,w,c
 32943  00365C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32944  00365E  EE20 F005          	lfsr	2,5
 32945  003662  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32946  003664  26D9               	addwf	fsr2l,f,c
 32947  003666  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32948  003668  22DA               	addwfc	fsr2h,f,c
 32949  00366A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32950  00366C  1ADF               	xorwf	indf2,f,c
 32951                           
 32952                           ; BSR set to: 0
 32953                           ;AES.c: 351: key[6]^=key[2];
 32954  00366E  EE20 F002          	lfsr	2,2
 32955  003672  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32956  003674  26D9               	addwf	fsr2l,f,c
 32957  003676  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32958  003678  22DA               	addwfc	fsr2h,f,c
 32959  00367A  50DF               	movf	indf2,w,c
 32960  00367C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32961  00367E  EE20 F006          	lfsr	2,6
 32962  003682  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32963  003684  26D9               	addwf	fsr2l,f,c
 32964  003686  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32965  003688  22DA               	addwfc	fsr2h,f,c
 32966  00368A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32967  00368C  1ADF               	xorwf	indf2,f,c
 32968                           
 32969                           ; BSR set to: 0
 32970                           ;AES.c: 352: key[7]^=key[3];
 32971  00368E  EE20 F003          	lfsr	2,3
 32972  003692  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32973  003694  26D9               	addwf	fsr2l,f,c
 32974  003696  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32975  003698  22DA               	addwfc	fsr2h,f,c
 32976  00369A  50DF               	movf	indf2,w,c
 32977  00369C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32978  00369E  EE20 F007          	lfsr	2,7
 32979  0036A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32980  0036A4  26D9               	addwf	fsr2l,f,c
 32981  0036A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32982  0036A8  22DA               	addwfc	fsr2h,f,c
 32983  0036AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32984  0036AC  1ADF               	xorwf	indf2,f,c
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;AES.c: 355: key[8]^=key[4];
 32988  0036AE  EE20 F004          	lfsr	2,4
 32989  0036B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32990  0036B4  26D9               	addwf	fsr2l,f,c
 32991  0036B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32992  0036B8  22DA               	addwfc	fsr2h,f,c
 32993  0036BA  50DF               	movf	indf2,w,c
 32994  0036BC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32995  0036BE  EE20 F008          	lfsr	2,8
 32996  0036C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32997  0036C4  26D9               	addwf	fsr2l,f,c
 32998  0036C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32999  0036C8  22DA               	addwfc	fsr2h,f,c
 33000  0036CA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33001  0036CC  1ADF               	xorwf	indf2,f,c
 33002                           
 33003                           ; BSR set to: 0
 33004                           ;AES.c: 356: key[9]^=key[5];
 33005  0036CE  EE20 F005          	lfsr	2,5
 33006  0036D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33007  0036D4  26D9               	addwf	fsr2l,f,c
 33008  0036D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33009  0036D8  22DA               	addwfc	fsr2h,f,c
 33010  0036DA  50DF               	movf	indf2,w,c
 33011  0036DC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33012  0036DE  EE20 F009          	lfsr	2,9
 33013  0036E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33014  0036E4  26D9               	addwf	fsr2l,f,c
 33015  0036E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33016  0036E8  22DA               	addwfc	fsr2h,f,c
 33017  0036EA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33018  0036EC  1ADF               	xorwf	indf2,f,c
 33019                           
 33020                           ; BSR set to: 0
 33021                           ;AES.c: 357: key[10]^=key[6];
 33022  0036EE  EE20 F006          	lfsr	2,6
 33023  0036F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33024  0036F4  26D9               	addwf	fsr2l,f,c
 33025  0036F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33026  0036F8  22DA               	addwfc	fsr2h,f,c
 33027  0036FA  50DF               	movf	indf2,w,c
 33028  0036FC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33029  0036FE  EE20 F00A          	lfsr	2,10
 33030  003702  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33031  003704  26D9               	addwf	fsr2l,f,c
 33032  003706  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33033  003708  22DA               	addwfc	fsr2h,f,c
 33034  00370A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33035  00370C  1ADF               	xorwf	indf2,f,c
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;AES.c: 358: key[11]^=key[7];
 33039  00370E  EE20 F007          	lfsr	2,7
 33040  003712  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33041  003714  26D9               	addwf	fsr2l,f,c
 33042  003716  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33043  003718  22DA               	addwfc	fsr2h,f,c
 33044  00371A  50DF               	movf	indf2,w,c
 33045  00371C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33046  00371E  EE20 F00B          	lfsr	2,11
 33047  003722  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33048  003724  26D9               	addwf	fsr2l,f,c
 33049  003726  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33050  003728  22DA               	addwfc	fsr2h,f,c
 33051  00372A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33052  00372C  1ADF               	xorwf	indf2,f,c
 33053                           
 33054                           ; BSR set to: 0
 33055                           ;AES.c: 361: key[12]^=key[8];
 33056  00372E  EE20 F008          	lfsr	2,8
 33057  003732  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33058  003734  26D9               	addwf	fsr2l,f,c
 33059  003736  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33060  003738  22DA               	addwfc	fsr2h,f,c
 33061  00373A  50DF               	movf	indf2,w,c
 33062  00373C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33063  00373E  EE20 F00C          	lfsr	2,12
 33064  003742  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33065  003744  26D9               	addwf	fsr2l,f,c
 33066  003746  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33067  003748  22DA               	addwfc	fsr2h,f,c
 33068  00374A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33069  00374C  1ADF               	xorwf	indf2,f,c
 33070                           
 33071                           ; BSR set to: 0
 33072                           ;AES.c: 362: key[13]^=key[9];
 33073  00374E  EE20 F009          	lfsr	2,9
 33074  003752  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33075  003754  26D9               	addwf	fsr2l,f,c
 33076  003756  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33077  003758  22DA               	addwfc	fsr2h,f,c
 33078  00375A  50DF               	movf	indf2,w,c
 33079  00375C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33080  00375E  EE20 F00D          	lfsr	2,13
 33081  003762  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33082  003764  26D9               	addwf	fsr2l,f,c
 33083  003766  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33084  003768  22DA               	addwfc	fsr2h,f,c
 33085  00376A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33086  00376C  1ADF               	xorwf	indf2,f,c
 33087                           
 33088                           ; BSR set to: 0
 33089                           ;AES.c: 363: key[14]^=key[10];
 33090  00376E  EE20 F00A          	lfsr	2,10
 33091  003772  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33092  003774  26D9               	addwf	fsr2l,f,c
 33093  003776  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33094  003778  22DA               	addwfc	fsr2h,f,c
 33095  00377A  50DF               	movf	indf2,w,c
 33096  00377C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33097  00377E  EE20 F00E          	lfsr	2,14
 33098  003782  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33099  003784  26D9               	addwf	fsr2l,f,c
 33100  003786  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33101  003788  22DA               	addwfc	fsr2h,f,c
 33102  00378A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33103  00378C  1ADF               	xorwf	indf2,f,c
 33104                           
 33105                           ; BSR set to: 0
 33106                           ;AES.c: 364: key[15]^=key[11];
 33107  00378E  EE20 F00B          	lfsr	2,11
 33108  003792  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33109  003794  26D9               	addwf	fsr2l,f,c
 33110  003796  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33111  003798  22DA               	addwfc	fsr2h,f,c
 33112  00379A  50DF               	movf	indf2,w,c
 33113  00379C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33114  00379E  EE20 F00F          	lfsr	2,15
 33115  0037A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33116  0037A4  26D9               	addwf	fsr2l,f,c
 33117  0037A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33118  0037A8  22DA               	addwfc	fsr2h,f,c
 33119  0037AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33120  0037AC  1ADF               	xorwf	indf2,f,c
 33121                           
 33122                           ; BSR set to: 0
 33123  0037AE  0012               	return		;funcret
 33124  0037B0                     __end_of_EncKeySchedule:
 33125                           	opt stack 0
 33126                           tosu	equ	0xFFF
 33127                           tosh	equ	0xFFE
 33128                           tosl	equ	0xFFD
 33129                           pclath	equ	0xFFA
 33130                           tblptru	equ	0xFF8
 33131                           tblptrh	equ	0xFF7
 33132                           tblptrl	equ	0xFF6
 33133                           tablat	equ	0xFF5
 33134                           prodh	equ	0xFF4
 33135                           prodl	equ	0xFF3
 33136                           intcon	equ	0xFF2
 33137                           intcon2	equ	0xFF1
 33138                           intcon3	equ	0xFF0
 33139                           indf0	equ	0xFEF
 33140                           postinc0	equ	0xFEE
 33141                           plusw0	equ	0xFEB
 33142                           fsr0h	equ	0xFEA
 33143                           fsr0l	equ	0xFE9
 33144                           wreg	equ	0xFE8
 33145                           postinc1	equ	0xFE6
 33146                           postdec1	equ	0xFE5
 33147                           plusw1	equ	0xFE3
 33148                           fsr1h	equ	0xFE2
 33149                           fsr1l	equ	0xFE1
 33150                           indf2	equ	0xFDF
 33151                           postinc2	equ	0xFDE
 33152                           postdec2	equ	0xFDD
 33153                           plusw2	equ	0xFDB
 33154                           fsr2h	equ	0xFDA
 33155                           fsr2l	equ	0xFD9
 33156                           status	equ	0xFD8
 33157                           
 33158 ;; *************** function _LORAWAN_Init *****************
 33159 ;; Defined at:
 33160 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33161 ;; Parameters:    Size  Location     Type
 33162 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 33163 ;;		 -> RxData(1), 
 33164 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 33165 ;;		 -> RxJoinResponse(1), 
 33166 ;; Auto vars:     Size  Location     Type
 33167 ;;		None
 33168 ;; Return value:  Size  Location     Type
 33169 ;;                  1    wreg      void 
 33170 ;; Registers used:
 33171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33172 ;; Tracked objects:
 33173 ;;		On entry : 0/0
 33174 ;;		On exit  : 0/0
 33175 ;;		Unchanged: 0/0
 33176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33181 ;;Total ram usage:        4 bytes
 33182 ;; Hardware stack levels used:    1
 33183 ;; Hardware stack levels required when called:   13
 33184 ;; This function calls:
 33185 ;;		_CreateAllSoftwareTimers
 33186 ;;		_LORAWAN_Reset
 33187 ;;		_RADIO_Init
 33188 ;;		_RADIO_ReadRandom
 33189 ;;		_SetCallbackSoftwareTimers
 33190 ;;		_StopAllSoftwareTimers
 33191 ;;		_srand
 33192 ;; This function is called by:
 33193 ;;		_main
 33194 ;; This function uses a non-reentrant model
 33195 ;;
 33196                           
 33197                           	psect	text151
 33198  007982                     __ptext151:
 33199                           	opt stack 0
 33200  007982                     _LORAWAN_Init:
 33201                           	opt stack 17
 33202                           
 33203                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;incstack = 0
 33207  007982  0102               	movlb	2	; () banked
 33208  007984  51F0               	movf	(_loRa+240)& (0+255),w,b
 33209  007986  A4D8               	btfss	status,2,c
 33210  007988  D008               	goto	l1014
 33211                           
 33212                           ; BSR set to: 2
 33213                           ;lorawan_eu.c: 127: {
 33214                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 33215  00798A  EC60  F03F         	call	_CreateAllSoftwareTimers	;wreg free
 33216                           
 33217                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 33218  00798E  ECA1  F032         	call	_SetCallbackSoftwareTimers	;wreg free
 33219                           
 33220                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 33221  007992  0E01               	movlw	1
 33222  007994  0102               	movlb	2	; () banked
 33223  007996  6FF0               	movwf	(_loRa+240)& (0+255),b
 33224                           
 33225                           ;lorawan_eu.c: 131: }
 33226  007998  D002               	goto	l1015
 33227  00799A                     l1014:
 33228                           
 33229                           ; BSR set to: 2
 33230                           ;lorawan_eu.c: 132: else
 33231                           ;lorawan_eu.c: 133: {
 33232                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 33233                           
 33234                           ; BSR set to: 2
 33235  00799A  EC37  F03F         	call	_StopAllSoftwareTimers	;wreg free
 33236  00799E                     l1015:
 33237                           
 33238                           ;lorawan_eu.c: 135: }
 33239                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 33240  00799E  C0B2  F169         	movff	LORAWAN_Init@RxPayload,_rxPayload
 33241  0079A2  C0B3  F16A         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 33242                           
 33243                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 33244  0079A6  C0B4  F16B         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 33245  0079AA  C0B5  F16C         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 33246                           
 33247                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 33248  0079AE  0EFF               	movlw	low (_radioBuffer+16)
 33249  0079B0  0100               	movlb	0	; () banked
 33250  0079B2  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 33251  0079B4  0E05               	movlw	high (_radioBuffer+16)
 33252  0079B6  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33253  0079B8  0EA0               	movlw	160
 33254  0079BA  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 33255  0079BC  0E27               	movlw	39
 33256  0079BE  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33257  0079C0  0EBE               	movlw	190
 33258  0079C2  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33259  0079C4  0E33               	movlw	51
 33260  0079C6  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33261  0079C8  EC2C  F022         	call	_RADIO_Init	;wreg free
 33262                           
 33263                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 33264  0079CC  ECAF  F036         	call	_RADIO_ReadRandom	;wreg free
 33265  0079D0  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 33266  0079D4  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 33267  0079D8  ECC6  F045         	call	_srand	;wreg free
 33268                           
 33269                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 33270  0079DC  0E00               	movlw	0
 33271  0079DE  EC45  F021         	call	_LORAWAN_Reset
 33272  0079E2  0012               	return		;funcret
 33273  0079E4                     __end_of_LORAWAN_Init:
 33274                           	opt stack 0
 33275                           tosu	equ	0xFFF
 33276                           tosh	equ	0xFFE
 33277                           tosl	equ	0xFFD
 33278                           pclath	equ	0xFFA
 33279                           tblptru	equ	0xFF8
 33280                           tblptrh	equ	0xFF7
 33281                           tblptrl	equ	0xFF6
 33282                           tablat	equ	0xFF5
 33283                           prodh	equ	0xFF4
 33284                           prodl	equ	0xFF3
 33285                           intcon	equ	0xFF2
 33286                           intcon2	equ	0xFF1
 33287                           intcon3	equ	0xFF0
 33288                           indf0	equ	0xFEF
 33289                           postinc0	equ	0xFEE
 33290                           plusw0	equ	0xFEB
 33291                           fsr0h	equ	0xFEA
 33292                           fsr0l	equ	0xFE9
 33293                           wreg	equ	0xFE8
 33294                           postinc1	equ	0xFE6
 33295                           postdec1	equ	0xFE5
 33296                           plusw1	equ	0xFE3
 33297                           fsr1h	equ	0xFE2
 33298                           fsr1l	equ	0xFE1
 33299                           indf2	equ	0xFDF
 33300                           postinc2	equ	0xFDE
 33301                           postdec2	equ	0xFDD
 33302                           plusw2	equ	0xFDB
 33303                           fsr2h	equ	0xFDA
 33304                           fsr2l	equ	0xFD9
 33305                           status	equ	0xFD8
 33306                           
 33307 ;; *************** function _srand *****************
 33308 ;; Defined at:
 33309 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 33310 ;; Parameters:    Size  Location     Type
 33311 ;;  x               2   18[BANK0 ] unsigned int 
 33312 ;; Auto vars:     Size  Location     Type
 33313 ;;		None
 33314 ;; Return value:  Size  Location     Type
 33315 ;;                  1    wreg      void 
 33316 ;; Registers used:
 33317 ;;		status,2
 33318 ;; Tracked objects:
 33319 ;;		On entry : 0/0
 33320 ;;		On exit  : 0/0
 33321 ;;		Unchanged: 0/0
 33322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33327 ;;Total ram usage:        2 bytes
 33328 ;; Hardware stack levels used:    1
 33329 ;; Hardware stack levels required when called:    7
 33330 ;; This function calls:
 33331 ;;		Nothing
 33332 ;; This function is called by:
 33333 ;;		_LORAWAN_Init
 33334 ;; This function uses a non-reentrant model
 33335 ;;
 33336                           
 33337                           	psect	text152
 33338  008B8C                     __ptext152:
 33339                           	opt stack 0
 33340  008B8C                     _srand:
 33341                           	opt stack 22
 33342                           
 33343                           ;incstack = 0
 33344  008B8C  C072  F1D9         	movff	srand@x,_randx
 33345  008B90  C073  F1DA         	movff	srand@x+1,_randx+1
 33346  008B94  0101               	movlb	1	; () banked
 33347  008B96  6BDB               	clrf	(_randx+2)& (0+255),b
 33348  008B98  6BDC               	clrf	(_randx+3)& (0+255),b
 33349                           
 33350                           ; BSR set to: 1
 33351  008B9A  0012               	return		;funcret
 33352  008B9C                     __end_of_srand:
 33353                           	opt stack 0
 33354                           tosu	equ	0xFFF
 33355                           tosh	equ	0xFFE
 33356                           tosl	equ	0xFFD
 33357                           pclath	equ	0xFFA
 33358                           tblptru	equ	0xFF8
 33359                           tblptrh	equ	0xFF7
 33360                           tblptrl	equ	0xFF6
 33361                           tablat	equ	0xFF5
 33362                           prodh	equ	0xFF4
 33363                           prodl	equ	0xFF3
 33364                           intcon	equ	0xFF2
 33365                           intcon2	equ	0xFF1
 33366                           intcon3	equ	0xFF0
 33367                           indf0	equ	0xFEF
 33368                           postinc0	equ	0xFEE
 33369                           plusw0	equ	0xFEB
 33370                           fsr0h	equ	0xFEA
 33371                           fsr0l	equ	0xFE9
 33372                           wreg	equ	0xFE8
 33373                           postinc1	equ	0xFE6
 33374                           postdec1	equ	0xFE5
 33375                           plusw1	equ	0xFE3
 33376                           fsr1h	equ	0xFE2
 33377                           fsr1l	equ	0xFE1
 33378                           indf2	equ	0xFDF
 33379                           postinc2	equ	0xFDE
 33380                           postdec2	equ	0xFDD
 33381                           plusw2	equ	0xFDB
 33382                           fsr2h	equ	0xFDA
 33383                           fsr2l	equ	0xFD9
 33384                           status	equ	0xFD8
 33385                           
 33386 ;; *************** function _SetCallbackSoftwareTimers *****************
 33387 ;; Defined at:
 33388 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33389 ;; Parameters:    Size  Location     Type
 33390 ;;		None
 33391 ;; Auto vars:     Size  Location     Type
 33392 ;;		None
 33393 ;; Return value:  Size  Location     Type
 33394 ;;                  1    wreg      void 
 33395 ;; Registers used:
 33396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33397 ;; Tracked objects:
 33398 ;;		On entry : 0/0
 33399 ;;		On exit  : 0/0
 33400 ;;		Unchanged: 0/0
 33401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33406 ;;Total ram usage:        0 bytes
 33407 ;; Hardware stack levels used:    1
 33408 ;; Hardware stack levels required when called:    8
 33409 ;; This function calls:
 33410 ;;		_SwTimerSetCallback
 33411 ;; This function is called by:
 33412 ;;		_LORAWAN_Init
 33413 ;; This function uses a non-reentrant model
 33414 ;;
 33415                           
 33416                           	psect	text153
 33417  006542                     __ptext153:
 33418                           	opt stack 0
 33419  006542                     _SetCallbackSoftwareTimers:
 33420                           	opt stack 21
 33421                           
 33422                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 33423                           
 33424                           ; BSR set to: 1
 33425                           ;incstack = 0
 33426  006542  0E4E               	movlw	low _LORAWAN_ReceiveWindow1Callback
 33427  006544  0100               	movlb	0	; () banked
 33428  006546  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33429  006548  0E69               	movlw	high _LORAWAN_ReceiveWindow1Callback
 33430  00654A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33431  00654C  0E00               	movlw	0
 33432  00654E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33433  006550  0102               	movlb	2	; () banked
 33434  006552  51E2               	movf	(_loRa+226)& (0+255),w,b
 33435  006554  ECA4  F040         	call	_SwTimerSetCallback
 33436                           
 33437                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 33438  006558  0E20               	movlw	low _LORAWAN_ReceiveWindow2Callback
 33439  00655A  0100               	movlb	0	; () banked
 33440  00655C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33441  00655E  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 33442  006560  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33443  006562  0E00               	movlw	0
 33444  006564  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33445  006566  0102               	movlb	2	; () banked
 33446  006568  51E3               	movf	(_loRa+227)& (0+255),w,b
 33447  00656A  ECA4  F040         	call	_SwTimerSetCallback
 33448                           
 33449                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 33450  00656E  0E58               	movlw	low _LORAWAN_LinkCheckCallback
 33451  006570  0100               	movlb	0	; () banked
 33452  006572  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33453  006574  0E4C               	movlw	high _LORAWAN_LinkCheckCallback
 33454  006576  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33455  006578  0E00               	movlw	0
 33456  00657A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33457  00657C  0102               	movlb	2	; () banked
 33458  00657E  51E7               	movf	(_loRa+231)& (0+255),w,b
 33459  006580  ECA4  F040         	call	_SwTimerSetCallback
 33460                           
 33461                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 33462  006584  0E4E               	movlw	low _LORAWAN_ReceiveWindow1Callback
 33463  006586  0100               	movlb	0	; () banked
 33464  006588  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33465  00658A  0E69               	movlw	high _LORAWAN_ReceiveWindow1Callback
 33466  00658C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33467  00658E  0E00               	movlw	0
 33468  006590  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33469  006592  0102               	movlb	2	; () banked
 33470  006594  51E4               	movf	(_loRa+228)& (0+255),w,b
 33471  006596  ECA4  F040         	call	_SwTimerSetCallback
 33472                           
 33473                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 33474  00659A  0E20               	movlw	low _LORAWAN_ReceiveWindow2Callback
 33475  00659C  0100               	movlb	0	; () banked
 33476  00659E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33477  0065A0  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 33478  0065A2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33479  0065A4  0E00               	movlw	0
 33480  0065A6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33481  0065A8  0102               	movlb	2	; () banked
 33482  0065AA  51E5               	movf	(_loRa+229)& (0+255),w,b
 33483  0065AC  ECA4  F040         	call	_SwTimerSetCallback
 33484                           
 33485                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 33486  0065B0  0EAE               	movlw	low _AckRetransmissionCallback
 33487  0065B2  0100               	movlb	0	; () banked
 33488  0065B4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33489  0065B6  0E5A               	movlw	high _AckRetransmissionCallback
 33490  0065B8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33491  0065BA  0E00               	movlw	0
 33492  0065BC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33493  0065BE  0102               	movlb	2	; () banked
 33494  0065C0  51E8               	movf	(_loRa+232)& (0+255),w,b
 33495  0065C2  ECA4  F040         	call	_SwTimerSetCallback
 33496                           
 33497                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 33498  0065C6  0EE4               	movlw	low _AutomaticReplyCallback
 33499  0065C8  0100               	movlb	0	; () banked
 33500  0065CA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33501  0065CC  0E87               	movlw	high _AutomaticReplyCallback
 33502  0065CE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33503  0065D0  0E00               	movlw	0
 33504  0065D2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33505  0065D4  0102               	movlb	2	; () banked
 33506  0065D6  51E6               	movf	(_loRa+230)& (0+255),w,b
 33507  0065D8  ECA4  F040         	call	_SwTimerSetCallback
 33508                           
 33509                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 33510  0065DC  0EF6               	movlw	low _UnconfirmedTransmissionCallback
 33511  0065DE  0100               	movlb	0	; () banked
 33512  0065E0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33513  0065E2  0E74               	movlw	high _UnconfirmedTransmissionCallback
 33514  0065E4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33515  0065E6  0E00               	movlw	0
 33516  0065E8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33517  0065EA  0102               	movlb	2	; () banked
 33518  0065EC  51EA               	movf	(_loRa+234)& (0+255),w,b
 33519  0065EE  ECA4  F040         	call	_SwTimerSetCallback
 33520                           
 33521                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 33522  0065F2  0EF2               	movlw	low _UpdateJoinSuccessState
 33523  0065F4  0100               	movlb	0	; () banked
 33524  0065F6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33525  0065F8  0E55               	movlw	high _UpdateJoinSuccessState
 33526  0065FA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33527  0065FC  0E00               	movlw	0
 33528  0065FE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33529  006600  0102               	movlb	2	; () banked
 33530  006602  51F3               	movf	(_loRa+243)& (0+255),w,b
 33531  006604  ECA4  F040         	call	_SwTimerSetCallback
 33532                           
 33533                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 33534  006608  0E48               	movlw	low _DutyCycleCallback
 33535  00660A  0100               	movlb	0	; () banked
 33536  00660C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33537  00660E  0E2C               	movlw	high _DutyCycleCallback
 33538  006610  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33539  006612  0E00               	movlw	0
 33540  006614  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33541  006616  0102               	movlb	2	; () banked
 33542  006618  51E9               	movf	(_loRa+233)& (0+255),w,b
 33543  00661A  ECA4  F040         	call	_SwTimerSetCallback
 33544  00661E  0012               	return		;funcret
 33545  006620                     __end_of_SetCallbackSoftwareTimers:
 33546                           	opt stack 0
 33547                           tosu	equ	0xFFF
 33548                           tosh	equ	0xFFE
 33549                           tosl	equ	0xFFD
 33550                           pclath	equ	0xFFA
 33551                           tblptru	equ	0xFF8
 33552                           tblptrh	equ	0xFF7
 33553                           tblptrl	equ	0xFF6
 33554                           tablat	equ	0xFF5
 33555                           prodh	equ	0xFF4
 33556                           prodl	equ	0xFF3
 33557                           intcon	equ	0xFF2
 33558                           intcon2	equ	0xFF1
 33559                           intcon3	equ	0xFF0
 33560                           indf0	equ	0xFEF
 33561                           postinc0	equ	0xFEE
 33562                           plusw0	equ	0xFEB
 33563                           fsr0h	equ	0xFEA
 33564                           fsr0l	equ	0xFE9
 33565                           wreg	equ	0xFE8
 33566                           postinc1	equ	0xFE6
 33567                           postdec1	equ	0xFE5
 33568                           plusw1	equ	0xFE3
 33569                           fsr1h	equ	0xFE2
 33570                           fsr1l	equ	0xFE1
 33571                           indf2	equ	0xFDF
 33572                           postinc2	equ	0xFDE
 33573                           postdec2	equ	0xFDD
 33574                           plusw2	equ	0xFDB
 33575                           fsr2h	equ	0xFDA
 33576                           fsr2l	equ	0xFD9
 33577                           status	equ	0xFD8
 33578                           
 33579 ;; *************** function _RADIO_ReadRandom *****************
 33580 ;; Defined at:
 33581 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33582 ;; Parameters:    Size  Location     Type
 33583 ;;		None
 33584 ;; Auto vars:     Size  Location     Type
 33585 ;;  retVal          2   15[BANK0 ] unsigned int 
 33586 ;;  i               1   17[BANK0 ] unsigned char 
 33587 ;; Return value:  Size  Location     Type
 33588 ;;                  2   12[BANK0 ] unsigned int 
 33589 ;; Registers used:
 33590 ;;		wreg, status,2, status,0, cstack
 33591 ;; Tracked objects:
 33592 ;;		On entry : 0/0
 33593 ;;		On exit  : 0/0
 33594 ;;		Unchanged: 0/0
 33595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33597 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33599 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33600 ;;Total ram usage:        6 bytes
 33601 ;; Hardware stack levels used:    1
 33602 ;; Hardware stack levels required when called:   11
 33603 ;; This function calls:
 33604 ;;		_RADIO_RegisterRead
 33605 ;;		_RADIO_RegisterWrite
 33606 ;;		_RADIO_WriteMode
 33607 ;;		_SystemBlockingWaitMs
 33608 ;; This function is called by:
 33609 ;;		_LORAWAN_Init
 33610 ;; This function uses a non-reentrant model
 33611 ;;
 33612                           
 33613                           	psect	text154
 33614  006D5E                     __ptext154:
 33615                           	opt stack 0
 33616  006D5E                     _RADIO_ReadRandom:
 33617                           	opt stack 18
 33618                           
 33619                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 33620                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 33621                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 33622                           
 33623                           ;incstack = 0
 33624  006D5E  0E00               	movlw	0
 33625  006D60  0100               	movlb	0	; () banked
 33626  006D62  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 33627  006D64  0E00               	movlw	0
 33628  006D66  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33632  006D68  0E01               	movlw	1
 33633  006D6A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33634  006D6C  0E01               	movlw	1
 33635  006D6E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33636  006D70  0E00               	movlw	0
 33637  006D72  ECE7  F02E         	call	_RADIO_WriteMode
 33638                           
 33639                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 33640  006D76  0EFF               	movlw	255
 33641  006D78  0100               	movlb	0	; () banked
 33642  006D7A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33643  006D7C  0E11               	movlw	17
 33644  006D7E  EC7B  F044         	call	_RADIO_RegisterWrite
 33645                           
 33646                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 33647  006D82  0E01               	movlw	1
 33648  006D84  0100               	movlb	0	; () banked
 33649  006D86  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33650  006D88  0E01               	movlw	1
 33651  006D8A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33652  006D8C  0E05               	movlw	5
 33653  006D8E  ECE7  F02E         	call	_RADIO_WriteMode
 33654                           
 33655                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 33656  006D92  0E00               	movlw	0
 33657  006D94  0100               	movlb	0	; () banked
 33658  006D96  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 33659  006D98                     l16081:
 33660                           
 33661                           ; BSR set to: 0
 33662  006D98  0E0F               	movlw	15
 33663  006D9A  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 33664  006D9C  D001               	goto	l718
 33665  006D9E  D019               	goto	u19930
 33666  006DA0                     l718:
 33667                           
 33668                           ; BSR set to: 0
 33669                           ;radio_driver_SX1276.c: 1377: {
 33670                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 33671                           
 33672                           ; BSR set to: 0
 33673  006DA0  0E01               	movlw	1
 33674  006DA2  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33675  006DA4  0E00               	movlw	0
 33676  006DA6  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33677  006DA8  0E00               	movlw	0
 33678  006DAA  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33679  006DAC  0E00               	movlw	0
 33680  006DAE  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33681  006DB0  EC56  F042         	call	_SystemBlockingWaitMs	;wreg free
 33682                           
 33683                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 33684  006DB4  0100               	movlb	0	; () banked
 33685  006DB6  90D8               	bcf	status,0,c
 33686  006DB8  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 33687  006DBA  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 33688                           
 33689                           ; BSR set to: 0
 33690                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 33691  006DBC  0E2C               	movlw	44
 33692  006DBE  ECCA  F043         	call	_RADIO_RegisterRead
 33693  006DC2  0100               	movlb	0	; () banked
 33694  006DC4  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 33695  006DC6  0E01               	movlw	1
 33696  006DC8  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 33697  006DCA  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 33698  006DCC  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 33699  006DCE  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 33700  006DD0  D7E3               	goto	l16081
 33701  006DD2                     u19930:
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;radio_driver_SX1276.c: 1381: }
 33705                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33706                           
 33707                           ; BSR set to: 0
 33708  006DD2  0E01               	movlw	1
 33709  006DD4  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33710  006DD6  0E01               	movlw	1
 33711  006DD8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33712  006DDA  0E00               	movlw	0
 33713  006DDC  ECE7  F02E         	call	_RADIO_WriteMode
 33714                           
 33715                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 33716  006DE0  0EFF               	movlw	255
 33717  006DE2  0100               	movlb	0	; () banked
 33718  006DE4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33719  006DE6  0E12               	movlw	18
 33720  006DE8  EC7B  F044         	call	_RADIO_RegisterWrite
 33721                           
 33722                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 33723  006DEC  0E00               	movlw	0
 33724  006DEE  0100               	movlb	0	; () banked
 33725  006DF0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33726  006DF2  0E11               	movlw	17
 33727  006DF4  EC7B  F044         	call	_RADIO_RegisterWrite
 33728                           
 33729                           ;radio_driver_SX1276.c: 1389: return retVal;
 33730  006DF8  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 33731  006DFC  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 33732  006E00  0012               	return	
 33733  006E02                     __end_of_RADIO_ReadRandom:
 33734                           	opt stack 0
 33735                           tosu	equ	0xFFF
 33736                           tosh	equ	0xFFE
 33737                           tosl	equ	0xFFD
 33738                           pclath	equ	0xFFA
 33739                           tblptru	equ	0xFF8
 33740                           tblptrh	equ	0xFF7
 33741                           tblptrl	equ	0xFF6
 33742                           tablat	equ	0xFF5
 33743                           prodh	equ	0xFF4
 33744                           prodl	equ	0xFF3
 33745                           intcon	equ	0xFF2
 33746                           intcon2	equ	0xFF1
 33747                           intcon3	equ	0xFF0
 33748                           indf0	equ	0xFEF
 33749                           postinc0	equ	0xFEE
 33750                           plusw0	equ	0xFEB
 33751                           fsr0h	equ	0xFEA
 33752                           fsr0l	equ	0xFE9
 33753                           wreg	equ	0xFE8
 33754                           postinc1	equ	0xFE6
 33755                           postdec1	equ	0xFE5
 33756                           plusw1	equ	0xFE3
 33757                           fsr1h	equ	0xFE2
 33758                           fsr1l	equ	0xFE1
 33759                           indf2	equ	0xFDF
 33760                           postinc2	equ	0xFDE
 33761                           postdec2	equ	0xFDD
 33762                           plusw2	equ	0xFDB
 33763                           fsr2h	equ	0xFDA
 33764                           fsr2l	equ	0xFD9
 33765                           status	equ	0xFD8
 33766                           
 33767 ;; *************** function _LORAWAN_Reset *****************
 33768 ;; Defined at:
 33769 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33770 ;; Parameters:    Size  Location     Type
 33771 ;;  ismBandNew      1    wreg     enum E7280
 33772 ;; Auto vars:     Size  Location     Type
 33773 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 33774 ;; Return value:  Size  Location     Type
 33775 ;;                  1    wreg      void 
 33776 ;; Registers used:
 33777 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33778 ;; Tracked objects:
 33779 ;;		On entry : 0/0
 33780 ;;		On exit  : 0/0
 33781 ;;		Unchanged: 0/0
 33782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33787 ;;Total ram usage:        1 bytes
 33788 ;; Hardware stack levels used:    1
 33789 ;; Hardware stack levels required when called:   12
 33790 ;; This function calls:
 33791 ;;		_InitDefault433Channels
 33792 ;;		_InitDefault868Channels
 33793 ;;		_LORAWAN_LinkCheckConfigure
 33794 ;;		_RADIO_Init
 33795 ;;		_RADIO_SetLoRaSyncWord
 33796 ;;		_StopAllSoftwareTimers
 33797 ;;		_UpdateMinMaxChDataRate
 33798 ;;		_memset
 33799 ;; This function is called by:
 33800 ;;		_LORAWAN_Init
 33801 ;; This function uses a non-reentrant model
 33802 ;;
 33803                           
 33804                           	psect	text155
 33805  00428A                     __ptext155:
 33806                           	opt stack 0
 33807  00428A                     _LORAWAN_Reset:
 33808                           	opt stack 17
 33809                           
 33810                           ;incstack = 0
 33811                           ;LORAWAN_Reset@ismBandNew stored from wreg
 33812  00428A  0100               	movlb	0	; () banked
 33813  00428C  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 33814                           
 33815                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 33816  00428E  0102               	movlb	2	; () banked
 33817  004290  05F0               	decf	(_loRa+240)& (0+255),w,b
 33818  004292  B4D8               	btfsc	status,2,c
 33819                           
 33820                           ; BSR set to: 2
 33821                           ;lorawan_eu.c: 151: {
 33822                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 33823  004294  EC37  F03F         	call	_StopAllSoftwareTimers	;wreg free
 33824                           
 33825                           ;lorawan_eu.c: 153: }
 33826                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 33827  004298  0E34               	movlw	52
 33828  00429A  0102               	movlb	2	; () banked
 33829  00429C  6FF4               	movwf	(_loRa+244)& (0+255),b
 33830                           
 33831                           ; BSR set to: 2
 33832                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 33833  00429E  51F4               	movf	(_loRa+244)& (0+255),w,b
 33834  0042A0  EC2F  F046         	call	_RADIO_SetLoRaSyncWord
 33835                           
 33836                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 33837  0042A4  0E00               	movlw	0
 33838  0042A6  0102               	movlb	2	; () banked
 33839  0042A8  6F02               	movwf	(_loRa+2)& (0+255),b
 33840  0042AA  0E00               	movlw	0
 33841  0042AC  6F03               	movwf	(_loRa+3)& (0+255),b
 33842  0042AE  0E00               	movlw	0
 33843  0042B0  6F04               	movwf	(_loRa+4)& (0+255),b
 33844  0042B2  0E00               	movlw	0
 33845  0042B4  6F05               	movwf	(_loRa+5)& (0+255),b
 33846                           
 33847                           ; BSR set to: 2
 33848                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 33849  0042B6  69DD               	setf	(_loRa+221)& (0+255),b
 33850                           
 33851                           ; BSR set to: 2
 33852                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 33853  0042B8  0E00               	movlw	0
 33854  0042BA  6FDE               	movwf	(_loRa+222)& (0+255),b
 33855                           
 33856                           ; BSR set to: 2
 33857                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 33858  0042BC  0E00               	movlw	0
 33859  0042BE  6FC8               	movwf	(_loRa+200)& (0+255),b
 33860  0042C0  0E00               	movlw	0
 33861  0042C2  6FC9               	movwf	(_loRa+201)& (0+255),b
 33862  0042C4  0E00               	movlw	0
 33863  0042C6  6FCA               	movwf	(_loRa+202)& (0+255),b
 33864  0042C8  0E00               	movlw	0
 33865  0042CA  6FCB               	movwf	(_loRa+203)& (0+255),b
 33866                           
 33867                           ; BSR set to: 2
 33868                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 33869  0042CC  0E00               	movlw	0
 33870  0042CE  6FD5               	movwf	(_loRa+213)& (0+255),b
 33871  0042D0  0E00               	movlw	0
 33872  0042D2  6FD4               	movwf	(_loRa+212)& (0+255),b
 33873                           
 33874                           ; BSR set to: 2
 33875                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 33876  0042D4  0E00               	movlw	0
 33877  0042D6  6F0A               	movwf	(_loRa+10)& (0+255),b
 33878  0042D8  0E00               	movlw	0
 33879  0042DA  6F0B               	movwf	(_loRa+11)& (0+255),b
 33880  0042DC  0E00               	movlw	0
 33881  0042DE  6F0C               	movwf	(_loRa+12)& (0+255),b
 33882  0042E0  0E00               	movlw	0
 33883  0042E2  6F0D               	movwf	(_loRa+13)& (0+255),b
 33884                           
 33885                           ; BSR set to: 2
 33886                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 33887  0042E4  0E00               	movlw	0
 33888  0042E6  6F06               	movwf	(_loRa+6)& (0+255),b
 33889  0042E8  0E00               	movlw	0
 33890  0042EA  6F07               	movwf	(_loRa+7)& (0+255),b
 33891  0042EC  0E00               	movlw	0
 33892  0042EE  6F08               	movwf	(_loRa+8)& (0+255),b
 33893  0042F0  0E00               	movlw	0
 33894  0042F2  6F09               	movwf	(_loRa+9)& (0+255),b
 33895                           
 33896                           ; BSR set to: 2
 33897                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 33898  0042F4  0E00               	movlw	0
 33899  0042F6  6FD3               	movwf	(_loRa+211)& (0+255),b
 33900  0042F8  0E00               	movlw	0
 33901  0042FA  6FD2               	movwf	(_loRa+210)& (0+255),b
 33902                           
 33903                           ; BSR set to: 2
 33904                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 33905  0042FC  0E00               	movlw	0
 33906  0042FE  6FDC               	movwf	(_loRa+220)& (0+255),b
 33907  004300  0E01               	movlw	1
 33908  004302  6FDB               	movwf	(_loRa+219)& (0+255),b
 33909                           
 33910                           ; BSR set to: 2
 33911                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 33912  004304  0E00               	movlw	0
 33913  004306  6FD1               	movwf	(_loRa+209)& (0+255),b
 33914  004308  0E00               	movlw	0
 33915  00430A  6FD0               	movwf	(_loRa+208)& (0+255),b
 33916                           
 33917                           ; BSR set to: 2
 33918                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 33919  00430C  0E00               	movlw	0
 33920  00430E  6FEE               	movwf	(_loRa+238)& (0+255),b
 33921                           
 33922                           ; BSR set to: 2
 33923                           ;lorawan_eu.c: 169: loRa.offset = 0;
 33924  004310  0E00               	movlw	0
 33925  004312  6FEF               	movwf	(_loRa+239)& (0+255),b
 33926                           
 33927                           ; BSR set to: 2
 33928                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 33929  004314  0E00               	movlw	0
 33930  004316  6FC8               	movwf	(_loRa+200)& (0+255),b
 33931  004318  0E00               	movlw	0
 33932  00431A  6FC9               	movwf	(_loRa+201)& (0+255),b
 33933  00431C  0E00               	movlw	0
 33934  00431E  6FCA               	movwf	(_loRa+202)& (0+255),b
 33935  004320  0E00               	movlw	0
 33936  004322  6FCB               	movwf	(_loRa+203)& (0+255),b
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 33940  004324  9503               	bcf	(_loRa+3)& (0+255),2,b
 33941                           
 33942                           ; BSR set to: 2
 33943                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 33944  004326  0E00               	movlw	0
 33945  004328  6F02               	movwf	(_loRa+2)& (0+255),b
 33946  00432A  0E00               	movlw	0
 33947  00432C  6F03               	movwf	(_loRa+3)& (0+255),b
 33948  00432E  0E00               	movlw	0
 33949  004330  6F04               	movwf	(_loRa+4)& (0+255),b
 33950  004332  0E00               	movlw	0
 33951  004334  6F05               	movwf	(_loRa+5)& (0+255),b
 33952                           
 33953                           ; BSR set to: 2
 33954                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 33955  004336  0E00               	movlw	0
 33956  004338  6F01               	movwf	(_loRa+1)& (0+255),b
 33957  00433A  0E00               	movlw	0
 33958  00433C  6F00               	movwf	_loRa& (0+255),b
 33959                           
 33960                           ; BSR set to: 2
 33961                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 33962  00433E  0E07               	movlw	7
 33963  004340  6FD7               	movwf	(_loRa+215)& (0+255),b
 33964                           
 33965                           ; BSR set to: 2
 33966                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 33967  004342  0E00               	movlw	0
 33968  004344  6FD6               	movwf	(_loRa+214)& (0+255),b
 33969                           
 33970                           ; BSR set to: 2
 33971                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 33972  004346  0E01               	movlw	1
 33973  004348  6FD9               	movwf	(_loRa+217)& (0+255),b
 33974                           
 33975                           ; BSR set to: 2
 33976                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 33977  00434A  0E01               	movlw	1
 33978  00434C  6FD8               	movwf	(_loRa+216)& (0+255),b
 33979                           
 33980                           ; BSR set to: 2
 33981                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 33982  00434E  69E0               	setf	(_loRa+224)& (0+255),b
 33983                           
 33984                           ; BSR set to: 2
 33985                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 33986  004350  C0B1  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 33987                           
 33988                           ; BSR set to: 2
 33989                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 33990  004354  0E00               	movlw	0
 33991  004356  6F12               	movwf	(_loRa+18)& (0+255),b
 33992                           
 33993                           ; BSR set to: 2
 33994                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 33995  004358  0E10               	movlw	16
 33996  00435A  6FED               	movwf	(_loRa+237)& (0+255),b
 33997                           
 33998                           ; BSR set to: 2
 33999                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 34000  00435C  0100               	movlb	0	; () banked
 34001  00435E  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 34002  004360  A4D8               	btfss	status,2,c
 34003  004362  D01B               	goto	l1020
 34004                           
 34005                           ; BSR set to: 0
 34006                           ;lorawan_eu.c: 193: {
 34007                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 34008  004364  0EFF               	movlw	low (_radioBuffer+16)
 34009  004366  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34010  004368  0E05               	movlw	high (_radioBuffer+16)
 34011  00436A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34012  00436C  0EA0               	movlw	160
 34013  00436E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34014  004370  0E27               	movlw	39
 34015  004372  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34016  004374  0EBE               	movlw	190
 34017  004376  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34018  004378  0E33               	movlw	51
 34019  00437A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34020  00437C  EC2C  F022         	call	_RADIO_Init	;wreg free
 34021                           
 34022                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 34023  004380  EC6A  F038         	call	_InitDefault868Channels	;wreg free
 34024                           
 34025                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 34026  004384  0E00               	movlw	0
 34027  004386  0102               	movlb	2	; () banked
 34028  004388  6F1C               	movwf	(_loRa+28)& (0+255),b
 34029                           
 34030                           ; BSR set to: 2
 34031                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 34032  00438A  0E08               	movlw	8
 34033  00438C  6F18               	movwf	(_loRa+24)& (0+255),b
 34034  00438E  0EE6               	movlw	230
 34035  004390  6F19               	movwf	(_loRa+25)& (0+255),b
 34036  004392  0ED3               	movlw	211
 34037  004394  6F1A               	movwf	(_loRa+26)& (0+255),b
 34038  004396  0E33               	movlw	51
 34039  004398  D01B               	goto	L25
 34040  00439A                     l1020:
 34041                           
 34042                           ;lorawan_eu.c: 201: else
 34043                           ;lorawan_eu.c: 202: {
 34044                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 34045                           
 34046                           ; BSR set to: 2
 34047  00439A  0EFF               	movlw	low (_radioBuffer+16)
 34048  00439C  0100               	movlb	0	; () banked
 34049  00439E  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34050  0043A0  0E05               	movlw	high (_radioBuffer+16)
 34051  0043A2  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34052  0043A4  0E20               	movlw	32
 34053  0043A6  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34054  0043A8  0EA2               	movlw	162
 34055  0043AA  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34056  0043AC  0ED3               	movlw	211
 34057  0043AE  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34058  0043B0  0E19               	movlw	25
 34059  0043B2  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34060  0043B4  EC2C  F022         	call	_RADIO_Init	;wreg free
 34061                           
 34062                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 34063  0043B8  ECAF  F038         	call	_InitDefault433Channels	;wreg free
 34064                           
 34065                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 34066  0043BC  0E00               	movlw	0
 34067  0043BE  0102               	movlb	2	; () banked
 34068  0043C0  6F1C               	movwf	(_loRa+28)& (0+255),b
 34069                           
 34070                           ; BSR set to: 2
 34071                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 34072  0043C2  0E28               	movlw	40
 34073  0043C4  6F18               	movwf	(_loRa+24)& (0+255),b
 34074  0043C6  0E76               	movlw	118
 34075  0043C8  6F19               	movwf	(_loRa+25)& (0+255),b
 34076  0043CA  0EE8               	movlw	232
 34077  0043CC  6F1A               	movwf	(_loRa+26)& (0+255),b
 34078  0043CE  0E19               	movlw	25
 34079  0043D0                     L25:
 34080  0043D0  6F1B               	movwf	(_loRa+27)& (0+255),b
 34081                           
 34082                           ; BSR set to: 2
 34083                           ;lorawan_eu.c: 209: }
 34084                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 34085                           
 34086                           ; BSR set to: 2
 34087  0043D2  0E01               	movlw	1
 34088  0043D4  6FE1               	movwf	(_loRa+225)& (0+255),b
 34089                           
 34090                           ; BSR set to: 2
 34091                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 34092  0043D6  0E00               	movlw	0
 34093  0043D8  6FDF               	movwf	(_loRa+223)& (0+255),b
 34094                           
 34095                           ; BSR set to: 2
 34096                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 34097  0043DA  EC66  F02F         	call	_UpdateMinMaxChDataRate	;wreg free
 34098                           
 34099                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 34100  0043DE  0E00               	movlw	0
 34101  0043E0  0102               	movlb	2	; () banked
 34102  0043E2  6FA6               	movwf	(_loRa+166)& (0+255),b
 34103  0043E4  0E00               	movlw	0
 34104  0043E6  6FA5               	movwf	(_loRa+165)& (0+255),b
 34105                           
 34106                           ; BSR set to: 2
 34107                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 34108  0043E8  0E1D               	movlw	low (_loRa+29)
 34109  0043EA  0100               	movlb	0	; () banked
 34110  0043EC  6F60               	movwf	memset@p1& (0+255),b
 34111  0043EE  0E02               	movlw	high (_loRa+29)
 34112  0043F0  6F61               	movwf	(memset@p1+1)& (0+255),b
 34113  0043F2  0E00               	movlw	0
 34114  0043F4  6F63               	movwf	(memset@c+1)& (0+255),b
 34115  0043F6  0E00               	movlw	0
 34116  0043F8  6F62               	movwf	memset@c& (0+255),b
 34117  0043FA  0E00               	movlw	0
 34118  0043FC  6F65               	movwf	(memset@n+1)& (0+255),b
 34119  0043FE  0E69               	movlw	105
 34120  004400  6F64               	movwf	memset@n& (0+255),b
 34121  004402  EC6E  F042         	call	_memset	;wreg free
 34122                           
 34123                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 34124  004406  0E03               	movlw	3
 34125  004408  0102               	movlb	2	; () banked
 34126  00440A  6F95               	movwf	(_loRa+149)& (0+255),b
 34127  00440C  0EE8               	movlw	232
 34128  00440E  6F94               	movwf	(_loRa+148)& (0+255),b
 34129                           
 34130                           ; BSR set to: 2
 34131                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 34132  004410  0E07               	movlw	7
 34133  004412  6F97               	movwf	(_loRa+151)& (0+255),b
 34134  004414  0ED0               	movlw	208
 34135  004416  6F96               	movwf	(_loRa+150)& (0+255),b
 34136                           
 34137                           ; BSR set to: 2
 34138                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 34139  004418  0E13               	movlw	19
 34140  00441A  6F99               	movwf	(_loRa+153)& (0+255),b
 34141  00441C  0E88               	movlw	136
 34142  00441E  6F98               	movwf	(_loRa+152)& (0+255),b
 34143                           
 34144                           ; BSR set to: 2
 34145                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 34146  004420  0E17               	movlw	23
 34147  004422  6F9B               	movwf	(_loRa+155)& (0+255),b
 34148  004424  0E70               	movlw	112
 34149  004426  6F9A               	movwf	(_loRa+154)& (0+255),b
 34150                           
 34151                           ; BSR set to: 2
 34152                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 34153  004428  0E07               	movlw	7
 34154  00442A  6FA1               	movwf	(_loRa+161)& (0+255),b
 34155  00442C  0ED0               	movlw	208
 34156  00442E  6FA0               	movwf	(_loRa+160)& (0+255),b
 34157                           
 34158                           ; BSR set to: 2
 34159                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 34160  004430  0E20               	movlw	32
 34161  004432  6FA3               	movwf	(_loRa+163)& (0+255),b
 34162                           
 34163                           ; BSR set to: 2
 34164                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 34165  004434  0E40               	movlw	64
 34166  004436  6FA2               	movwf	(_loRa+162)& (0+255),b
 34167                           
 34168                           ; BSR set to: 2
 34169                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 34170  004438  0E40               	movlw	64
 34171  00443A  6F9D               	movwf	(_loRa+157)& (0+255),b
 34172  00443C  0E00               	movlw	0
 34173  00443E  6F9C               	movwf	(_loRa+156)& (0+255),b
 34174                           
 34175                           ; BSR set to: 2
 34176                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 34177  004440  0E40               	movlw	64
 34178  004442  6F9F               	movwf	(_loRa+159)& (0+255),b
 34179  004444  0E00               	movlw	0
 34180  004446  6F9E               	movwf	(_loRa+158)& (0+255),b
 34181                           
 34182                           ; BSR set to: 2
 34183                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 34184  004448  0E00               	movlw	0
 34185  00444A  0100               	movlb	0	; () banked
 34186  00444C  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 34187  00444E  0E00               	movlw	0
 34188  004450  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 34189  004452  ECFD  F028         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 34190  004456  0012               	return		;funcret
 34191  004458                     __end_of_LORAWAN_Reset:
 34192                           	opt stack 0
 34193                           tosu	equ	0xFFF
 34194                           tosh	equ	0xFFE
 34195                           tosl	equ	0xFFD
 34196                           pclath	equ	0xFFA
 34197                           tblptru	equ	0xFF8
 34198                           tblptrh	equ	0xFF7
 34199                           tblptrl	equ	0xFF6
 34200                           tablat	equ	0xFF5
 34201                           prodh	equ	0xFF4
 34202                           prodl	equ	0xFF3
 34203                           intcon	equ	0xFF2
 34204                           intcon2	equ	0xFF1
 34205                           intcon3	equ	0xFF0
 34206                           indf0	equ	0xFEF
 34207                           postinc0	equ	0xFEE
 34208                           plusw0	equ	0xFEB
 34209                           fsr0h	equ	0xFEA
 34210                           fsr0l	equ	0xFE9
 34211                           wreg	equ	0xFE8
 34212                           postinc1	equ	0xFE6
 34213                           postdec1	equ	0xFE5
 34214                           plusw1	equ	0xFE3
 34215                           fsr1h	equ	0xFE2
 34216                           fsr1l	equ	0xFE1
 34217                           indf2	equ	0xFDF
 34218                           postinc2	equ	0xFDE
 34219                           postdec2	equ	0xFDD
 34220                           plusw2	equ	0xFDB
 34221                           fsr2h	equ	0xFDA
 34222                           fsr2l	equ	0xFD9
 34223                           status	equ	0xFD8
 34224                           
 34225 ;; *************** function _UpdateMinMaxChDataRate *****************
 34226 ;; Defined at:
 34227 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34228 ;; Parameters:    Size  Location     Type
 34229 ;;		None
 34230 ;; Auto vars:     Size  Location     Type
 34231 ;;  i               1    1[BANK0 ] unsigned char 
 34232 ;; Return value:  Size  Location     Type
 34233 ;;                  1    wreg      void 
 34234 ;; Registers used:
 34235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34236 ;; Tracked objects:
 34237 ;;		On entry : 0/0
 34238 ;;		On exit  : 0/0
 34239 ;;		Unchanged: 0/0
 34240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34245 ;;Total ram usage:        2 bytes
 34246 ;; Hardware stack levels used:    1
 34247 ;; Hardware stack levels required when called:    7
 34248 ;; This function calls:
 34249 ;;		Nothing
 34250 ;; This function is called by:
 34251 ;;		_LORAWAN_Reset
 34252 ;; This function uses a non-reentrant model
 34253 ;;
 34254                           
 34255                           	psect	text156
 34256  005ECC                     __ptext156:
 34257                           	opt stack 0
 34258  005ECC                     _UpdateMinMaxChDataRate:
 34259                           	opt stack 21
 34260                           
 34261                           ;lorawan.c: 1065: uint8_t i;
 34262                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 34263                           
 34264                           ;incstack = 0
 34265  005ECC  0E07               	movlw	7
 34266  005ECE  0102               	movlb	2	; () banked
 34267  005ED0  6FEB               	movwf	(_loRa+235)& (0+255),b
 34268                           
 34269                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 34270  005ED2  0E00               	movlw	0
 34271  005ED4  6FEC               	movwf	(_loRa+236)& (0+255),b
 34272                           
 34273                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 34274  005ED6  0E00               	movlw	0
 34275  005ED8  0100               	movlb	0	; () banked
 34276  005EDA  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 34277  005EDC  D06D               	goto	l2159
 34278  005EDE                     
 34279                           ; BSR set to: 0
 34280                           ;lorawan.c: 1072: {
 34281                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 34282                           
 34283                           ; BSR set to: 0
 34284  005EDE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34285  005EE0  0D0E               	mullw	14
 34286  005EE2  0E05               	movlw	5
 34287  005EE4  26F3               	addwf	prodl,f,c
 34288  005EE6  0E00               	movlw	0
 34289  005EE8  22F4               	addwfc	prodh,f,c
 34290  005EEA  0E00               	movlw	low _Channels
 34291  005EEC  24F3               	addwf	prodl,w,c
 34292  005EEE  6ED9               	movwf	fsr2l,c
 34293  005EF0  0E04               	movlw	high _Channels
 34294  005EF2  20F4               	addwfc	prodh,w,c
 34295  005EF4  6EDA               	movwf	fsr2h,c
 34296  005EF6  0104               	movlb	4	; () banked
 34297  005EF8  50DF               	movf	223,w,c
 34298  005EFA  0B0F               	andlw	15
 34299  005EFC  0100               	movlb	0	; () banked
 34300  005EFE  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 34301  005F00  0102               	movlb	2	; () banked
 34302  005F02  51EB               	movf	(_loRa+235)& (0+255),w,b
 34303  005F04  0100               	movlb	0	; () banked
 34304  005F06  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 34305  005F08  B0D8               	btfsc	status,0,c
 34306  005F0A  D020               	goto	l2161
 34307                           
 34308                           ; BSR set to: 0
 34309  005F0C  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34310  005F0E  0D0E               	mullw	14
 34311  005F10  0E04               	movlw	4
 34312  005F12  26F3               	addwf	prodl,f,c
 34313  005F14  0E00               	movlw	0
 34314  005F16  22F4               	addwfc	prodh,f,c
 34315  005F18  0E00               	movlw	low _Channels
 34316  005F1A  24F3               	addwf	prodl,w,c
 34317  005F1C  6ED9               	movwf	fsr2l,c
 34318  005F1E  0E04               	movlw	high _Channels
 34319  005F20  20F4               	addwfc	prodh,w,c
 34320  005F22  6EDA               	movwf	fsr2h,c
 34321  005F24  04DE               	decf	postinc2,w,c
 34322  005F26  A4D8               	btfss	status,2,c
 34323  005F28  D011               	goto	l2161
 34324                           
 34325                           ; BSR set to: 0
 34326                           ;lorawan.c: 1074: {
 34327                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 34328  005F2A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34329  005F2C  0D0E               	mullw	14
 34330  005F2E  0E05               	movlw	5
 34331  005F30  26F3               	addwf	prodl,f,c
 34332  005F32  0E00               	movlw	0
 34333  005F34  22F4               	addwfc	prodh,f,c
 34334  005F36  0E00               	movlw	low _Channels
 34335  005F38  24F3               	addwf	prodl,w,c
 34336  005F3A  6ED9               	movwf	fsr2l,c
 34337  005F3C  0E04               	movlw	high _Channels
 34338  005F3E  20F4               	addwfc	prodh,w,c
 34339  005F40  6EDA               	movwf	fsr2h,c
 34340  005F42  0104               	movlb	4	; () banked
 34341  005F44  50DF               	movf	223,w,c
 34342  005F46  0B0F               	andlw	15
 34343  005F48  0102               	movlb	2	; () banked
 34344  005F4A  6FEB               	movwf	(_loRa+235)& (0+255),b
 34345  005F4C                     l2161:
 34346                           
 34347                           ;lorawan.c: 1076: }
 34348                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 34349  005F4C  0100               	movlb	0	; () banked
 34350  005F4E  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34351  005F50  0D0E               	mullw	14
 34352  005F52  0E05               	movlw	5
 34353  005F54  26F3               	addwf	prodl,f,c
 34354  005F56  0E00               	movlw	0
 34355  005F58  22F4               	addwfc	prodh,f,c
 34356  005F5A  0E00               	movlw	low _Channels
 34357  005F5C  24F3               	addwf	prodl,w,c
 34358  005F5E  6ED9               	movwf	fsr2l,c
 34359  005F60  0E04               	movlw	high _Channels
 34360  005F62  20F4               	addwfc	prodh,w,c
 34361  005F64  6EDA               	movwf	fsr2h,c
 34362  005F66  0104               	movlb	4	; () banked
 34363  005F68  38DF               	swapf	223,w,c
 34364  005F6A  0B0F               	andlw	15
 34365  005F6C  0102               	movlb	2	; () banked
 34366  005F6E  61EC               	cpfslt	(_loRa+236)& (0+255),b
 34367  005F70  D021               	goto	l2162
 34368                           
 34369                           ; BSR set to: 2
 34370  005F72  0100               	movlb	0	; () banked
 34371  005F74  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34372  005F76  0D0E               	mullw	14
 34373  005F78  0E04               	movlw	4
 34374  005F7A  26F3               	addwf	prodl,f,c
 34375  005F7C  0E00               	movlw	0
 34376  005F7E  22F4               	addwfc	prodh,f,c
 34377  005F80  0E00               	movlw	low _Channels
 34378  005F82  24F3               	addwf	prodl,w,c
 34379  005F84  6ED9               	movwf	fsr2l,c
 34380  005F86  0E04               	movlw	high _Channels
 34381  005F88  20F4               	addwfc	prodh,w,c
 34382  005F8A  6EDA               	movwf	fsr2h,c
 34383  005F8C  04DE               	decf	postinc2,w,c
 34384  005F8E  A4D8               	btfss	status,2,c
 34385  005F90  D011               	goto	l2162
 34386                           
 34387                           ; BSR set to: 0
 34388                           ;lorawan.c: 1078: {
 34389                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 34390  005F92  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34391  005F94  0D0E               	mullw	14
 34392  005F96  0E05               	movlw	5
 34393  005F98  26F3               	addwf	prodl,f,c
 34394  005F9A  0E00               	movlw	0
 34395  005F9C  22F4               	addwfc	prodh,f,c
 34396  005F9E  0E00               	movlw	low _Channels
 34397  005FA0  24F3               	addwf	prodl,w,c
 34398  005FA2  6ED9               	movwf	fsr2l,c
 34399  005FA4  0E04               	movlw	high _Channels
 34400  005FA6  20F4               	addwfc	prodh,w,c
 34401  005FA8  6EDA               	movwf	fsr2h,c
 34402  005FAA  0104               	movlb	4	; () banked
 34403  005FAC  38DF               	swapf	223,w,c
 34404  005FAE  0B0F               	andlw	15
 34405  005FB0  0102               	movlb	2	; () banked
 34406  005FB2  6FEC               	movwf	(_loRa+236)& (0+255),b
 34407  005FB4                     l2162:
 34408                           
 34409                           ; BSR set to: 2
 34410  005FB4  0100               	movlb	0	; () banked
 34411  005FB6  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 34412  005FB8                     l2159:
 34413                           
 34414                           ; BSR set to: 0
 34415                           
 34416                           ; BSR set to: 0
 34417  005FB8  0102               	movlb	2	; () banked
 34418  005FBA  51ED               	movf	(_loRa+237)& (0+255),w,b
 34419  005FBC  0100               	movlb	0	; () banked
 34420  005FBE  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34421  005FC0  B0D8               	btfsc	status,0,c
 34422  005FC2  0012               	return	
 34423  005FC4  D78C               	goto	l2160
 34424  005FC6                     __end_of_UpdateMinMaxChDataRate:
 34425                           	opt stack 0
 34426                           tosu	equ	0xFFF
 34427                           tosh	equ	0xFFE
 34428                           tosl	equ	0xFFD
 34429                           pclath	equ	0xFFA
 34430                           tblptru	equ	0xFF8
 34431                           tblptrh	equ	0xFF7
 34432                           tblptrl	equ	0xFF6
 34433                           tablat	equ	0xFF5
 34434                           prodh	equ	0xFF4
 34435                           prodl	equ	0xFF3
 34436                           intcon	equ	0xFF2
 34437                           intcon2	equ	0xFF1
 34438                           intcon3	equ	0xFF0
 34439                           indf0	equ	0xFEF
 34440                           postinc0	equ	0xFEE
 34441                           plusw0	equ	0xFEB
 34442                           fsr0h	equ	0xFEA
 34443                           fsr0l	equ	0xFE9
 34444                           wreg	equ	0xFE8
 34445                           postinc1	equ	0xFE6
 34446                           postdec1	equ	0xFE5
 34447                           plusw1	equ	0xFE3
 34448                           fsr1h	equ	0xFE2
 34449                           fsr1l	equ	0xFE1
 34450                           indf2	equ	0xFDF
 34451                           postinc2	equ	0xFDE
 34452                           postdec2	equ	0xFDD
 34453                           plusw2	equ	0xFDB
 34454                           fsr2h	equ	0xFDA
 34455                           fsr2l	equ	0xFD9
 34456                           status	equ	0xFD8
 34457                           
 34458 ;; *************** function _StopAllSoftwareTimers *****************
 34459 ;; Defined at:
 34460 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34461 ;; Parameters:    Size  Location     Type
 34462 ;;		None
 34463 ;; Auto vars:     Size  Location     Type
 34464 ;;		None
 34465 ;; Return value:  Size  Location     Type
 34466 ;;                  1    wreg      void 
 34467 ;; Registers used:
 34468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34469 ;; Tracked objects:
 34470 ;;		On entry : 0/0
 34471 ;;		On exit  : 0/0
 34472 ;;		Unchanged: 0/0
 34473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34478 ;;Total ram usage:        0 bytes
 34479 ;; Hardware stack levels used:    1
 34480 ;; Hardware stack levels required when called:    8
 34481 ;; This function calls:
 34482 ;;		_SwTimerStop
 34483 ;; This function is called by:
 34484 ;;		_LORAWAN_Init
 34485 ;;		_LORAWAN_Reset
 34486 ;; This function uses a non-reentrant model
 34487 ;;
 34488                           
 34489                           	psect	text157
 34490  007E6E                     __ptext157:
 34491                           	opt stack 0
 34492  007E6E                     _StopAllSoftwareTimers:
 34493                           	opt stack 21
 34494                           
 34495                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 34496                           
 34497                           ; BSR set to: 0
 34498                           ;incstack = 0
 34499  007E6E  0102               	movlb	2	; () banked
 34500  007E70  51E2               	movf	(_loRa+226)& (0+255),w,b
 34501  007E72  ECDE  F043         	call	_SwTimerStop
 34502                           
 34503                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 34504  007E76  0102               	movlb	2	; () banked
 34505  007E78  51E3               	movf	(_loRa+227)& (0+255),w,b
 34506  007E7A  ECDE  F043         	call	_SwTimerStop
 34507                           
 34508                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 34509  007E7E  0102               	movlb	2	; () banked
 34510  007E80  51E7               	movf	(_loRa+231)& (0+255),w,b
 34511  007E82  ECDE  F043         	call	_SwTimerStop
 34512                           
 34513                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 34514  007E86  0102               	movlb	2	; () banked
 34515  007E88  51E4               	movf	(_loRa+228)& (0+255),w,b
 34516  007E8A  ECDE  F043         	call	_SwTimerStop
 34517                           
 34518                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 34519  007E8E  0102               	movlb	2	; () banked
 34520  007E90  51E5               	movf	(_loRa+229)& (0+255),w,b
 34521  007E92  ECDE  F043         	call	_SwTimerStop
 34522                           
 34523                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 34524  007E96  0102               	movlb	2	; () banked
 34525  007E98  51E8               	movf	(_loRa+232)& (0+255),w,b
 34526  007E9A  ECDE  F043         	call	_SwTimerStop
 34527                           
 34528                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 34529  007E9E  0102               	movlb	2	; () banked
 34530  007EA0  51E6               	movf	(_loRa+230)& (0+255),w,b
 34531  007EA2  ECDE  F043         	call	_SwTimerStop
 34532                           
 34533                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 34534  007EA6  0102               	movlb	2	; () banked
 34535  007EA8  51EA               	movf	(_loRa+234)& (0+255),w,b
 34536  007EAA  ECDE  F043         	call	_SwTimerStop
 34537                           
 34538                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 34539  007EAE  0102               	movlb	2	; () banked
 34540  007EB0  51F3               	movf	(_loRa+243)& (0+255),w,b
 34541  007EB2  ECDE  F043         	call	_SwTimerStop
 34542                           
 34543                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 34544  007EB6  0102               	movlb	2	; () banked
 34545  007EB8  51E9               	movf	(_loRa+233)& (0+255),w,b
 34546  007EBA  ECDE  F043         	call	_SwTimerStop
 34547  007EBE  0012               	return		;funcret
 34548  007EC0                     __end_of_StopAllSoftwareTimers:
 34549                           	opt stack 0
 34550                           tosu	equ	0xFFF
 34551                           tosh	equ	0xFFE
 34552                           tosl	equ	0xFFD
 34553                           pclath	equ	0xFFA
 34554                           tblptru	equ	0xFF8
 34555                           tblptrh	equ	0xFF7
 34556                           tblptrl	equ	0xFF6
 34557                           tablat	equ	0xFF5
 34558                           prodh	equ	0xFF4
 34559                           prodl	equ	0xFF3
 34560                           intcon	equ	0xFF2
 34561                           intcon2	equ	0xFF1
 34562                           intcon3	equ	0xFF0
 34563                           indf0	equ	0xFEF
 34564                           postinc0	equ	0xFEE
 34565                           plusw0	equ	0xFEB
 34566                           fsr0h	equ	0xFEA
 34567                           fsr0l	equ	0xFE9
 34568                           wreg	equ	0xFE8
 34569                           postinc1	equ	0xFE6
 34570                           postdec1	equ	0xFE5
 34571                           plusw1	equ	0xFE3
 34572                           fsr1h	equ	0xFE2
 34573                           fsr1l	equ	0xFE1
 34574                           indf2	equ	0xFDF
 34575                           postinc2	equ	0xFDE
 34576                           postdec2	equ	0xFDD
 34577                           plusw2	equ	0xFDB
 34578                           fsr2h	equ	0xFDA
 34579                           fsr2l	equ	0xFD9
 34580                           status	equ	0xFD8
 34581                           
 34582 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 34583 ;; Defined at:
 34584 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34585 ;; Parameters:    Size  Location     Type
 34586 ;;  syncWord        1    wreg     unsigned char 
 34587 ;; Auto vars:     Size  Location     Type
 34588 ;;  syncWord        1    0[BANK0 ] unsigned char 
 34589 ;; Return value:  Size  Location     Type
 34590 ;;                  1    wreg      void 
 34591 ;; Registers used:
 34592 ;;		wreg
 34593 ;; Tracked objects:
 34594 ;;		On entry : 0/0
 34595 ;;		On exit  : 0/0
 34596 ;;		Unchanged: 0/0
 34597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34602 ;;Total ram usage:        1 bytes
 34603 ;; Hardware stack levels used:    1
 34604 ;; Hardware stack levels required when called:    7
 34605 ;; This function calls:
 34606 ;;		Nothing
 34607 ;; This function is called by:
 34608 ;;		_LORAWAN_Reset
 34609 ;;		_ConfigureRadio
 34610 ;; This function uses a non-reentrant model
 34611 ;;
 34612                           
 34613                           	psect	text158
 34614  008C5E                     __ptext158:
 34615                           	opt stack 0
 34616  008C5E                     _RADIO_SetLoRaSyncWord:
 34617                           	opt stack 19
 34618                           
 34619                           ;incstack = 0
 34620                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 34621  008C5E  0100               	movlb	0	; () banked
 34622  008C60  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 34623                           
 34624                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 34625  008C62  C060  F189         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 34626  008C66  0012               	return		;funcret
 34627  008C68                     __end_of_RADIO_SetLoRaSyncWord:
 34628                           	opt stack 0
 34629                           tosu	equ	0xFFF
 34630                           tosh	equ	0xFFE
 34631                           tosl	equ	0xFFD
 34632                           pclath	equ	0xFFA
 34633                           tblptru	equ	0xFF8
 34634                           tblptrh	equ	0xFF7
 34635                           tblptrl	equ	0xFF6
 34636                           tablat	equ	0xFF5
 34637                           prodh	equ	0xFF4
 34638                           prodl	equ	0xFF3
 34639                           intcon	equ	0xFF2
 34640                           intcon2	equ	0xFF1
 34641                           intcon3	equ	0xFF0
 34642                           indf0	equ	0xFEF
 34643                           postinc0	equ	0xFEE
 34644                           plusw0	equ	0xFEB
 34645                           fsr0h	equ	0xFEA
 34646                           fsr0l	equ	0xFE9
 34647                           wreg	equ	0xFE8
 34648                           postinc1	equ	0xFE6
 34649                           postdec1	equ	0xFE5
 34650                           plusw1	equ	0xFE3
 34651                           fsr1h	equ	0xFE2
 34652                           fsr1l	equ	0xFE1
 34653                           indf2	equ	0xFDF
 34654                           postinc2	equ	0xFDE
 34655                           postdec2	equ	0xFDD
 34656                           plusw2	equ	0xFDB
 34657                           fsr2h	equ	0xFDA
 34658                           fsr2l	equ	0xFD9
 34659                           status	equ	0xFD8
 34660                           
 34661 ;; *************** function _RADIO_Init *****************
 34662 ;; Defined at:
 34663 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34664 ;; Parameters:    Size  Location     Type
 34665 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 34666 ;;		 -> radioBuffer(271), 
 34667 ;;  frequency       4   27[BANK0 ] unsigned long 
 34668 ;; Auto vars:     Size  Location     Type
 34669 ;;		None
 34670 ;; Return value:  Size  Location     Type
 34671 ;;                  1    wreg      void 
 34672 ;; Registers used:
 34673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34674 ;; Tracked objects:
 34675 ;;		On entry : 0/0
 34676 ;;		On exit  : 0/0
 34677 ;;		Unchanged: 0/0
 34678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34679 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34682 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34683 ;;Total ram usage:        7 bytes
 34684 ;; Hardware stack levels used:    1
 34685 ;; Hardware stack levels required when called:   11
 34686 ;; This function calls:
 34687 ;;		_RADIO_RegisterRead
 34688 ;;		_RADIO_RegisterWrite
 34689 ;;		_RADIO_Reset
 34690 ;;		_RADIO_WriteFrequency
 34691 ;;		_RADIO_WriteMode
 34692 ;;		_SwTimerCreate
 34693 ;;		_SwTimerSetCallback
 34694 ;;		_SwTimerStop
 34695 ;; This function is called by:
 34696 ;;		_LORAWAN_Init
 34697 ;;		_LORAWAN_Reset
 34698 ;; This function uses a non-reentrant model
 34699 ;;
 34700                           
 34701                           	psect	text159
 34702  004458                     __ptext159:
 34703                           	opt stack 0
 34704  004458                     _RADIO_Init:
 34705                           	opt stack 18
 34706                           
 34707                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 34708                           
 34709                           ;incstack = 0
 34710  004458  C07B  F17B         	movff	RADIO_Init@frequency,_RadioConfiguration
 34711  00445C  C07C  F17C         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 34712  004460  C07D  F17D         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 34713  004464  C07E  F17E         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 34714                           
 34715                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 34716  004468  0EA8               	movlw	168
 34717  00446A  0101               	movlb	1	; () banked
 34718  00446C  6F7F               	movwf	(_RadioConfiguration+4)& (0+255),b
 34719  00446E  0E61               	movlw	97
 34720  004470  6F80               	movwf	(_RadioConfiguration+5)& (0+255),b
 34721  004472  0E00               	movlw	0
 34722  004474  6F81               	movwf	(_RadioConfiguration+6)& (0+255),b
 34723  004476  0E00               	movlw	0
 34724  004478  6F82               	movwf	(_RadioConfiguration+7)& (0+255),b
 34725                           
 34726                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 34727  00447A  0E50               	movlw	80
 34728  00447C  6F83               	movwf	(_RadioConfiguration+8)& (0+255),b
 34729  00447E  0EC3               	movlw	195
 34730  004480  6F84               	movwf	(_RadioConfiguration+9)& (0+255),b
 34731  004482  0E00               	movlw	0
 34732  004484  6F85               	movwf	(_RadioConfiguration+10)& (0+255),b
 34733  004486  0E00               	movlw	0
 34734  004488  6F86               	movwf	(_RadioConfiguration+11)& (0+255),b
 34735                           
 34736                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 34737  00448A  0E01               	movlw	1
 34738  00448C  6F93               	movwf	(_RadioConfiguration+24)& (0+255),b
 34739                           
 34740                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 34741  00448E  0E07               	movlw	7
 34742  004490  6F95               	movwf	(_RadioConfiguration+26)& (0+255),b
 34743                           
 34744                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 34745  004492  0E01               	movlw	1
 34746  004494  6F96               	movwf	(_RadioConfiguration+27)& (0+255),b
 34747                           
 34748                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 34749  004496  0E01               	movlw	1
 34750  004498  6F9C               	movwf	(_RadioConfiguration+33)& (0+255),b
 34751                           
 34752                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 34753  00449A  0E00               	movlw	0
 34754  00449C  6F9D               	movwf	(_RadioConfiguration+34)& (0+255),b
 34755                           
 34756                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 34757  00449E  0E00               	movlw	0
 34758  0044A0  6F88               	movwf	(_RadioConfiguration+13)& (0+255),b
 34759  0044A2  0E08               	movlw	8
 34760  0044A4  6F87               	movwf	(_RadioConfiguration+12)& (0+255),b
 34761                           
 34762                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 34763  0044A6  0E0C               	movlw	12
 34764  0044A8  6F94               	movwf	(_RadioConfiguration+25)& (0+255),b
 34765                           
 34766                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 34767  0044AA  0E01               	movlw	1
 34768  0044AC  6F97               	movwf	(_RadioConfiguration+28)& (0+255),b
 34769                           
 34770                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 34771  0044AE  0E00               	movlw	0
 34772  0044B0  6F98               	movwf	(_RadioConfiguration+29)& (0+255),b
 34773                           
 34774                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 34775  0044B2  0E00               	movlw	0
 34776  0044B4  6F9B               	movwf	(_RadioConfiguration+32)& (0+255),b
 34777                           
 34778                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 34779  0044B6  0EC1               	movlw	193
 34780  0044B8  6F8A               	movwf	(_RadioConfiguration+15)& (0+255),b
 34781                           
 34782                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 34783  0044BA  0E94               	movlw	148
 34784  0044BC  6F8B               	movwf	(_RadioConfiguration+16)& (0+255),b
 34785                           
 34786                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 34787  0044BE  0EC1               	movlw	193
 34788  0044C0  6F8C               	movwf	(_RadioConfiguration+17)& (0+255),b
 34789                           
 34790                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 34791  0044C2  0E03               	movlw	3
 34792  0044C4  6F92               	movwf	(_RadioConfiguration+23)& (0+255),b
 34793                           
 34794                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 34795  0044C6  0E34               	movlw	52
 34796  0044C8  6F89               	movwf	(_RadioConfiguration+14)& (0+255),b
 34797                           
 34798                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 34799  0044CA  0E00               	movlw	0
 34800  0044CC  6F9E               	movwf	(_RadioConfiguration+35)& (0+255),b
 34801                           
 34802                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 34803  0044CE  0E00               	movlw	0
 34804  0044D0  6F9F               	movwf	(_RadioConfiguration+36)& (0+255),b
 34805                           
 34806                           ; BSR set to: 1
 34807                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 34808  0044D2  C079  F1A0         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 34809  0044D6  C07A  F1A1         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 34810                           
 34811                           ; BSR set to: 1
 34812                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 34813  0044DA  0E00               	movlw	0
 34814  0044DC  6F9A               	movwf	(_RadioConfiguration+31)& (0+255),b
 34815  0044DE  0E00               	movlw	0
 34816  0044E0  6F99               	movwf	(_RadioConfiguration+30)& (0+255),b
 34817                           
 34818                           ; BSR set to: 1
 34819                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 34820  0044E2  0E80               	movlw	128
 34821  0044E4  6FAD               	movwf	(_RadioConfiguration+50)& (0+255),b
 34822                           
 34823                           ; BSR set to: 1
 34824                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 34825  0044E6  0E98               	movlw	152
 34826  0044E8  6FA5               	movwf	(_RadioConfiguration+42)& (0+255),b
 34827  0044EA  0E3A               	movlw	58
 34828  0044EC  6FA6               	movwf	(_RadioConfiguration+43)& (0+255),b
 34829  0044EE  0E00               	movlw	0
 34830  0044F0  6FA7               	movwf	(_RadioConfiguration+44)& (0+255),b
 34831  0044F2  0E00               	movlw	0
 34832  0044F4  6FA8               	movwf	(_RadioConfiguration+45)& (0+255),b
 34833                           
 34834                           ; BSR set to: 1
 34835                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 34836  0044F6  0E02               	movlw	2
 34837  0044F8  6FAE               	movwf	(_RadioConfiguration+51)& (0+255),b
 34838                           
 34839                           ; BSR set to: 1
 34840                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 34841  0044FA  0E0B               	movlw	11
 34842  0044FC  6FAF               	movwf	(_RadioConfiguration+52)& (0+255),b
 34843                           
 34844                           ; BSR set to: 1
 34845                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 34846  0044FE  0E12               	movlw	18
 34847  004500  6FB0               	movwf	(_RadioConfiguration+53)& (0+255),b
 34848                           
 34849                           ; BSR set to: 1
 34850                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 34851  004502  0E00               	movlw	0
 34852  004504  6FAA               	movwf	(_RadioConfiguration+47)& (0+255),b
 34853  004506  0E00               	movlw	0
 34854  004508  6FAB               	movwf	(_RadioConfiguration+48)& (0+255),b
 34855                           
 34856                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 34857  00450A  51A9               	movf	(_RadioConfiguration+46)& (0+255),w,b
 34858  00450C  A4D8               	btfss	status,2,c
 34859  00450E  D026               	goto	l486
 34860                           
 34861                           ; BSR set to: 1
 34862                           ;radio_driver_SX1276.c: 457: {
 34863                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 34864  004510  ECDF  F037         	call	_SwTimerCreate	;wreg free
 34865  004514  0101               	movlb	1	; () banked
 34866  004516  6FA2               	movwf	(_RadioConfiguration+39)& (0+255),b
 34867                           
 34868                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 34869  004518  ECDF  F037         	call	_SwTimerCreate	;wreg free
 34870  00451C  0101               	movlb	1	; () banked
 34871  00451E  6FA3               	movwf	(_RadioConfiguration+40)& (0+255),b
 34872                           
 34873                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 34874  004520  ECDF  F037         	call	_SwTimerCreate	;wreg free
 34875  004524  0101               	movlb	1	; () banked
 34876  004526  6FA4               	movwf	(_RadioConfiguration+41)& (0+255),b
 34877                           
 34878                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 34879  004528  0E14               	movlw	low _RADIO_RxFSKTimeout
 34880  00452A  0100               	movlb	0	; () banked
 34881  00452C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34882  00452E  0E83               	movlw	high _RADIO_RxFSKTimeout
 34883  004530  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34884  004532  0E00               	movlw	0
 34885  004534  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34886  004536  0101               	movlb	1	; () banked
 34887  004538  51A3               	movf	(_RadioConfiguration+40)& (0+255),w,b
 34888  00453A  ECA4  F040         	call	_SwTimerSetCallback
 34889                           
 34890                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 34891  00453E  0EAA               	movlw	low _RADIO_WatchdogTimeout
 34892  004540  0100               	movlb	0	; () banked
 34893  004542  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34894  004544  0E7F               	movlw	high _RADIO_WatchdogTimeout
 34895  004546  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34896  004548  0E00               	movlw	0
 34897  00454A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34898  00454C  0101               	movlb	1	; () banked
 34899  00454E  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 34900  004550  ECA4  F040         	call	_SwTimerSetCallback
 34901                           
 34902                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 34903  004554  0E01               	movlw	1
 34904  004556  0101               	movlb	1	; () banked
 34905  004558  6FA9               	movwf	(_RadioConfiguration+46)& (0+255),b
 34906                           
 34907                           ;radio_driver_SX1276.c: 466: }
 34908  00455A  D00B               	goto	l487
 34909  00455C                     l486:
 34910                           
 34911                           ; BSR set to: 1
 34912                           ;radio_driver_SX1276.c: 467: else
 34913                           ;radio_driver_SX1276.c: 468: {
 34914                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 34915                           
 34916                           ; BSR set to: 1
 34917  00455C  51A2               	movf	(_RadioConfiguration+39)& (0+255),w,b
 34918  00455E  ECDE  F043         	call	_SwTimerStop
 34919                           
 34920                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 34921  004562  0101               	movlb	1	; () banked
 34922  004564  51A3               	movf	(_RadioConfiguration+40)& (0+255),w,b
 34923  004566  ECDE  F043         	call	_SwTimerStop
 34924                           
 34925                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 34926  00456A  0101               	movlb	1	; () banked
 34927  00456C  51A4               	movf	(_RadioConfiguration+41)& (0+255),w,b
 34928  00456E  ECDE  F043         	call	_SwTimerStop
 34929  004572                     l487:
 34930                           
 34931                           ;radio_driver_SX1276.c: 472: }
 34932                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 34933  004572  EC1B  F040         	call	_RADIO_Reset	;wreg free
 34934                           
 34935                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 34936  004576  0E00               	movlw	0
 34937  004578  0100               	movlb	0	; () banked
 34938  00457A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34939  00457C  0E01               	movlw	1
 34940  00457E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34941  004580  0E01               	movlw	1
 34942  004582  ECE7  F02E         	call	_RADIO_WriteMode
 34943                           
 34944                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 34945  004586  C17B  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 34946  00458A  C17C  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 34947  00458E  C17D  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 34948  004592  C17E  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 34949  004596  ECD5  F030         	call	_RADIO_WriteFrequency	;wreg free
 34950                           
 34951                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 34952  00459A  0E42               	movlw	66
 34953  00459C  0100               	movlb	0	; () banked
 34954  00459E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34955  0045A0  0E3B               	movlw	59
 34956  0045A2  EC7B  F044         	call	_RADIO_RegisterWrite
 34957  0045A6                     
 34958                           ;radio_driver_SX1276.c: 490: ;
 34959  0045A6  0E3B               	movlw	59
 34960  0045A8  ECCA  F043         	call	_RADIO_RegisterRead
 34961  0045AC  0100               	movlb	0	; () banked
 34962  0045AE  6F7F               	movwf	??_RADIO_Init& (0+255),b
 34963  0045B0  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 34964  0045B2  D7F9               	goto	l489
 34965                           
 34966                           ; BSR set to: 0
 34967                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 34968                           
 34969                           ; BSR set to: 0
 34970  0045B4  0E23               	movlw	35
 34971  0045B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34972  0045B8  0E0C               	movlw	12
 34973  0045BA  EC7B  F044         	call	_RADIO_RegisterWrite
 34974                           
 34975                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 34976  0045BE  0E1E               	movlw	30
 34977  0045C0  0100               	movlb	0	; () banked
 34978  0045C2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34979  0045C4  0E0D               	movlw	13
 34980  0045C6  EC7B  F044         	call	_RADIO_RegisterWrite
 34981                           
 34982                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 34983  0045CA  0EAA               	movlw	170
 34984  0045CC  0100               	movlb	0	; () banked
 34985  0045CE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34986  0045D0  0E1F               	movlw	31
 34987  0045D2  EC7B  F044         	call	_RADIO_RegisterWrite
 34988                           
 34989                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 34990  0045D6  0E8F               	movlw	143
 34991  0045D8  0100               	movlb	0	; () banked
 34992  0045DA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34993  0045DC  0E35               	movlw	53
 34994  0045DE  EC7B  F044         	call	_RADIO_RegisterWrite
 34995                           
 34996                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 34997  0045E2  0EFF               	movlw	255
 34998  0045E4  0100               	movlb	0	; () banked
 34999  0045E6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35000  0045E8  0E32               	movlw	50
 35001  0045EA  EC7B  F044         	call	_RADIO_RegisterWrite
 35002                           
 35003                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 35004  0045EE  0E40               	movlw	64
 35005  0045F0  0100               	movlb	0	; () banked
 35006  0045F2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35007  0045F4  0E31               	movlw	49
 35008  0045F6  EC7B  F044         	call	_RADIO_RegisterWrite
 35009                           
 35010                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35011  0045FA  0E01               	movlw	1
 35012  0045FC  0100               	movlb	0	; () banked
 35013  0045FE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35014  004600  0E01               	movlw	1
 35015  004602  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35016  004604  0E00               	movlw	0
 35017  004606  ECE7  F02E         	call	_RADIO_WriteMode
 35018                           
 35019                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 35020  00460A  0EFF               	movlw	255
 35021  00460C  0100               	movlb	0	; () banked
 35022  00460E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35023  004610  0E23               	movlw	35
 35024  004612  EC7B  F044         	call	_RADIO_RegisterWrite
 35025                           
 35026                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 35027  004616  0E42               	movlw	66
 35028  004618  ECCA  F043         	call	_RADIO_RegisterRead
 35029  00461C  0101               	movlb	1	; () banked
 35030  00461E  6FAC               	movwf	(_RadioConfiguration+49)& (0+255),b
 35031                           
 35032                           ; BSR set to: 1
 35033  004620  0012               	return		;funcret
 35034  004622                     __end_of_RADIO_Init:
 35035                           	opt stack 0
 35036                           tosu	equ	0xFFF
 35037                           tosh	equ	0xFFE
 35038                           tosl	equ	0xFFD
 35039                           pclath	equ	0xFFA
 35040                           tblptru	equ	0xFF8
 35041                           tblptrh	equ	0xFF7
 35042                           tblptrl	equ	0xFF6
 35043                           tablat	equ	0xFF5
 35044                           prodh	equ	0xFF4
 35045                           prodl	equ	0xFF3
 35046                           intcon	equ	0xFF2
 35047                           intcon2	equ	0xFF1
 35048                           intcon3	equ	0xFF0
 35049                           indf0	equ	0xFEF
 35050                           postinc0	equ	0xFEE
 35051                           plusw0	equ	0xFEB
 35052                           fsr0h	equ	0xFEA
 35053                           fsr0l	equ	0xFE9
 35054                           wreg	equ	0xFE8
 35055                           postinc1	equ	0xFE6
 35056                           postdec1	equ	0xFE5
 35057                           plusw1	equ	0xFE3
 35058                           fsr1h	equ	0xFE2
 35059                           fsr1l	equ	0xFE1
 35060                           indf2	equ	0xFDF
 35061                           postinc2	equ	0xFDE
 35062                           postdec2	equ	0xFDD
 35063                           plusw2	equ	0xFDB
 35064                           fsr2h	equ	0xFDA
 35065                           fsr2l	equ	0xFD9
 35066                           status	equ	0xFD8
 35067                           
 35068 ;; *************** function _SwTimerSetCallback *****************
 35069 ;; Defined at:
 35070 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35071 ;; Parameters:    Size  Location     Type
 35072 ;;  timerId         1    wreg     unsigned char 
 35073 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 35074 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 35075 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 35076 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 35077 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 35078 ;; Auto vars:     Size  Location     Type
 35079 ;;  timerId         1    3[BANK0 ] unsigned char 
 35080 ;; Return value:  Size  Location     Type
 35081 ;;                  1    wreg      void 
 35082 ;; Registers used:
 35083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35084 ;; Tracked objects:
 35085 ;;		On entry : 0/0
 35086 ;;		On exit  : 0/0
 35087 ;;		Unchanged: 0/0
 35088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35089 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35092 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35093 ;;Total ram usage:        4 bytes
 35094 ;; Hardware stack levels used:    1
 35095 ;; Hardware stack levels required when called:    7
 35096 ;; This function calls:
 35097 ;;		Nothing
 35098 ;; This function is called by:
 35099 ;;		_RADIO_Init
 35100 ;;		_SetCallbackSoftwareTimers
 35101 ;; This function uses a non-reentrant model
 35102 ;;
 35103                           
 35104                           	psect	text160
 35105  008148                     __ptext160:
 35106                           	opt stack 0
 35107  008148                     _SwTimerSetCallback:
 35108                           	opt stack 21
 35109                           
 35110                           ; BSR set to: 1
 35111                           ;incstack = 0
 35112                           ;SwTimerSetCallback@timerId stored from wreg
 35113  008148  0100               	movlb	0	; () banked
 35114  00814A  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 35115                           
 35116                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 35117  00814C  0100               	movlb	0	; () banked
 35118  00814E  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35119  008150  0D08               	mullw	8
 35120  008152  0E06               	movlw	6
 35121  008154  26F3               	addwf	prodl,f,c
 35122  008156  0E00               	movlw	0
 35123  008158  22F4               	addwfc	prodh,f,c
 35124  00815A  0E00               	movlw	low _swTimers
 35125  00815C  24F3               	addwf	prodl,w,c
 35126  00815E  6ED9               	movwf	fsr2l,c
 35127  008160  0E03               	movlw	high _swTimers
 35128  008162  20F4               	addwfc	prodh,w,c
 35129  008164  6EDA               	movwf	fsr2h,c
 35130  008166  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 35131  00816A  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 35132                           
 35133                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 35134  00816E  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35135  008170  0D08               	mullw	8
 35136  008172  0E05               	movlw	5
 35137  008174  26F3               	addwf	prodl,f,c
 35138  008176  0E00               	movlw	0
 35139  008178  22F4               	addwfc	prodh,f,c
 35140  00817A  0E00               	movlw	low _swTimers
 35141  00817C  24F3               	addwf	prodl,w,c
 35142  00817E  6ED9               	movwf	fsr2l,c
 35143  008180  0E03               	movlw	high _swTimers
 35144  008182  20F4               	addwfc	prodh,w,c
 35145  008184  6EDA               	movwf	fsr2h,c
 35146  008186  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 35147                           
 35148                           ; BSR set to: 0
 35149  00818A  0012               	return		;funcret
 35150  00818C                     __end_of_SwTimerSetCallback:
 35151                           	opt stack 0
 35152                           tosu	equ	0xFFF
 35153                           tosh	equ	0xFFE
 35154                           tosl	equ	0xFFD
 35155                           pclath	equ	0xFFA
 35156                           tblptru	equ	0xFF8
 35157                           tblptrh	equ	0xFF7
 35158                           tblptrl	equ	0xFF6
 35159                           tablat	equ	0xFF5
 35160                           prodh	equ	0xFF4
 35161                           prodl	equ	0xFF3
 35162                           intcon	equ	0xFF2
 35163                           intcon2	equ	0xFF1
 35164                           intcon3	equ	0xFF0
 35165                           indf0	equ	0xFEF
 35166                           postinc0	equ	0xFEE
 35167                           plusw0	equ	0xFEB
 35168                           fsr0h	equ	0xFEA
 35169                           fsr0l	equ	0xFE9
 35170                           wreg	equ	0xFE8
 35171                           postinc1	equ	0xFE6
 35172                           postdec1	equ	0xFE5
 35173                           plusw1	equ	0xFE3
 35174                           fsr1h	equ	0xFE2
 35175                           fsr1l	equ	0xFE1
 35176                           indf2	equ	0xFDF
 35177                           postinc2	equ	0xFDE
 35178                           postdec2	equ	0xFDD
 35179                           plusw2	equ	0xFDB
 35180                           fsr2h	equ	0xFDA
 35181                           fsr2l	equ	0xFD9
 35182                           status	equ	0xFD8
 35183                           
 35184 ;; *************** function _RADIO_WriteMode *****************
 35185 ;; Defined at:
 35186 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35187 ;; Parameters:    Size  Location     Type
 35188 ;;  newMode         1    wreg     enum E7718
 35189 ;;  newModulatio    1    5[BANK0 ] enum E6984
 35190 ;;  blocking        1    6[BANK0 ] unsigned char 
 35191 ;; Auto vars:     Size  Location     Type
 35192 ;;  newMode         1   10[BANK0 ] enum E7718
 35193 ;;  opMode          1   11[BANK0 ] unsigned char 
 35194 ;;  currentMode     1    9[BANK0 ] enum E7718
 35195 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 35196 ;;  currentModul    1    7[BANK0 ] enum E6984
 35197 ;; Return value:  Size  Location     Type
 35198 ;;                  1    wreg      void 
 35199 ;; Registers used:
 35200 ;;		wreg, status,2, status,0, cstack
 35201 ;; Tracked objects:
 35202 ;;		On entry : 0/0
 35203 ;;		On exit  : 0/0
 35204 ;;		Unchanged: 0/0
 35205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35207 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35210 ;;Total ram usage:        7 bytes
 35211 ;; Hardware stack levels used:    1
 35212 ;; Hardware stack levels required when called:   10
 35213 ;; This function calls:
 35214 ;;		_HALDIO5PinValue
 35215 ;;		_RADIO_RegisterRead
 35216 ;;		_RADIO_RegisterWrite
 35217 ;;		_SystemBlockingWaitMs
 35218 ;; This function is called by:
 35219 ;;		_RADIO_Init
 35220 ;;		_RADIO_WriteConfiguration
 35221 ;;		_RADIO_Transmit
 35222 ;;		_RADIO_ReceiveStart
 35223 ;;		_RADIO_ReceiveStop
 35224 ;;		_RADIO_RxDone
 35225 ;;		_RADIO_FSKPayloadReady
 35226 ;;		_RADIO_RxTimeout
 35227 ;;		_RADIO_TxDone
 35228 ;;		_RADIO_FSKPacketSent
 35229 ;;		_RADIO_ReadRandom
 35230 ;;		_RADIO_RxFSKTimeout
 35231 ;;		_RADIO_WatchdogTimeout
 35232 ;;		_RADIO_StopCW
 35233 ;; This function uses a non-reentrant model
 35234 ;;
 35235                           
 35236                           	psect	text161
 35237  005DCE                     __ptext161:
 35238                           	opt stack 0
 35239  005DCE                     _RADIO_WriteMode:
 35240                           	opt stack 18
 35241                           
 35242                           ; BSR set to: 0
 35243                           ;incstack = 0
 35244                           ;RADIO_WriteMode@newMode stored from wreg
 35245  005DCE  0100               	movlb	0	; () banked
 35246  005DD0  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 35247                           
 35248                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 35249                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 35250                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 35251                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 35252                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 35253                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 35254  005DD2  0100               	movlb	0	; () banked
 35255  005DD4  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35256  005DD6  A4D8               	btfss	status,2,c
 35257  005DD8  D008               	goto	l432
 35258                           
 35259                           ; BSR set to: 0
 35260  005DDA  0E06               	movlw	6
 35261  005DDC  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35262  005DDE  B4D8               	btfsc	status,2,c
 35263  005DE0  0012               	return	
 35264                           
 35265                           ; BSR set to: 0
 35266  005DE2  0E07               	movlw	7
 35267  005DE4  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35268  005DE6  B4D8               	btfsc	status,2,c
 35269  005DE8  0012               	return	
 35270  005DEA                     l432:
 35271                           
 35272                           ; BSR set to: 0
 35273                           ;radio_driver_SX1276.c: 159: }
 35274                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 35275                           
 35276                           ; BSR set to: 0
 35277  005DEA  0E07               	movlw	7
 35278  005DEC  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 35279                           
 35280                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 35281  005DEE  0E01               	movlw	1
 35282  005DF0  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 35283                           
 35284                           ; BSR set to: 0
 35285                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 35286  005DF2  0E01               	movlw	1
 35287  005DF4  ECCA  F043         	call	_RADIO_RegisterRead
 35288  005DF8  0100               	movlb	0	; () banked
 35289  005DFA  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35290                           
 35291                           ; BSR set to: 0
 35292                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 35293  005DFC  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 35294  005DFE  D002               	goto	l436
 35295                           
 35296                           ; BSR set to: 0
 35297                           ;radio_driver_SX1276.c: 168: {
 35298                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 35299  005E00  0E01               	movlw	1
 35300  005E02  D001               	goto	L26
 35301  005E04                     l436:
 35302                           
 35303                           ; BSR set to: 0
 35304                           ;radio_driver_SX1276.c: 171: else
 35305                           ;radio_driver_SX1276.c: 172: {
 35306                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 35307                           
 35308                           ; BSR set to: 0
 35309  005E04  0E00               	movlw	0
 35310  005E06                     L26:
 35311  005E06  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 35312                           
 35313                           ; BSR set to: 0
 35314                           ;radio_driver_SX1276.c: 174: }
 35315                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 35316                           
 35317                           ; BSR set to: 0
 35318  005E08  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35319  005E0A  0B07               	andlw	7
 35320  005E0C  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35321                           
 35322                           ; BSR set to: 0
 35323                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 35324  005E0E  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 35325  005E10  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 35326  005E12  B4D8               	btfsc	status,2,c
 35327  005E14  D01B               	goto	l438
 35328                           
 35329                           ; BSR set to: 0
 35330                           ;radio_driver_SX1276.c: 181: {
 35331                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 35332  005E16  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35333  005E18  B4D8               	btfsc	status,2,c
 35334  005E1A  D009               	goto	l439
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;radio_driver_SX1276.c: 184: {
 35338                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 35339  005E1C  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35340  005E1E  0BF8               	andlw	248
 35341  005E20  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35342  005E22  0E01               	movlw	1
 35343  005E24  EC7B  F044         	call	_RADIO_RegisterWrite
 35344                           
 35345                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 35346  005E28  0E00               	movlw	0
 35347  005E2A  0100               	movlb	0	; () banked
 35348  005E2C  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35349  005E2E                     l439:
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;radio_driver_SX1276.c: 188: }
 35353                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 35354                           
 35355                           ; BSR set to: 0
 35356  005E2E  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35357  005E30  A4D8               	btfss	status,2,c
 35358  005E32  D003               	goto	l440
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;radio_driver_SX1276.c: 191: {
 35362                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 35363  005E34  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35364  005E36  0B78               	andlw	120
 35365  005E38  D003               	goto	L27
 35366  005E3A                     l440:
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;radio_driver_SX1276.c: 195: else
 35370                           ;radio_driver_SX1276.c: 196: {
 35371                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 35372                           
 35373                           ; BSR set to: 0
 35374  005E3A  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35375  005E3C  0B78               	andlw	120
 35376  005E3E  0980               	iorlw	128
 35377  005E40                     L27:
 35378  005E40  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35379                           
 35380                           ; BSR set to: 0
 35381                           ;radio_driver_SX1276.c: 199: }
 35382                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 35383                           
 35384                           ; BSR set to: 0
 35385  005E42  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35386  005E46  0E01               	movlw	1
 35387  005E48  EC7B  F044         	call	_RADIO_RegisterWrite
 35388  005E4C                     l438:
 35389                           
 35390                           ;radio_driver_SX1276.c: 201: }
 35391                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 35392  005E4C  0100               	movlb	0	; () banked
 35393  005E4E  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35394  005E50  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35395  005E52  B4D8               	btfsc	status,2,c
 35396  005E54  0012               	return	
 35397                           
 35398                           ; BSR set to: 0
 35399                           ;radio_driver_SX1276.c: 208: {
 35400                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 35401  005E56  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35402  005E58  B4D8               	btfsc	status,2,c
 35403  005E5A  D015               	goto	l443
 35404                           
 35405                           ; BSR set to: 0
 35406  005E5C  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35407  005E5E  A4D8               	btfss	status,2,c
 35408  005E60  D012               	goto	l443
 35409                           
 35410                           ; BSR set to: 0
 35411                           ;radio_driver_SX1276.c: 212: {
 35412                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 35413  005E62  0E41               	movlw	65
 35414  005E64  ECCA  F043         	call	_RADIO_RegisterRead
 35415  005E68  0100               	movlb	0	; () banked
 35416  005E6A  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 35417                           
 35418                           ; BSR set to: 0
 35419                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 35420  005E6C  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35421  005E6E  A4D8               	btfss	status,2,c
 35422  005E70  D003               	goto	l444
 35423                           
 35424                           ; BSR set to: 0
 35425                           ;radio_driver_SX1276.c: 215: {
 35426                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 35427  005E72  0E30               	movlw	48
 35428  005E74  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35429                           
 35430                           ;radio_driver_SX1276.c: 218: }
 35431  005E76  D002               	goto	l445
 35432  005E78                     l444:
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;radio_driver_SX1276.c: 219: else
 35436                           ;radio_driver_SX1276.c: 220: {
 35437                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 35438                           
 35439                           ; BSR set to: 0
 35440  005E78  0ECF               	movlw	207
 35441  005E7A  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35442  005E7C                     l445:
 35443                           
 35444                           ; BSR set to: 0
 35445                           ;radio_driver_SX1276.c: 223: }
 35446                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 35447                           
 35448                           ; BSR set to: 0
 35449  005E7C  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 35450  005E80  0E41               	movlw	65
 35451  005E82  EC7B  F044         	call	_RADIO_RegisterWrite
 35452  005E86                     l443:
 35453                           
 35454                           ;radio_driver_SX1276.c: 225: }
 35455                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 35456  005E86  0EF8               	movlw	248
 35457  005E88  0100               	movlb	0	; () banked
 35458  005E8A  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 35459                           
 35460                           ; BSR set to: 0
 35461                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 35462  005E8C  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35463  005E8E  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 35464                           
 35465                           ; BSR set to: 0
 35466                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 35467  005E90  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35468  005E94  0E01               	movlw	1
 35469  005E96  EC7B  F044         	call	_RADIO_RegisterWrite
 35470                           
 35471                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 35472  005E9A  0100               	movlb	0	; () banked
 35473  005E9C  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35474  005E9E  A4D8               	btfss	status,2,c
 35475  005EA0  0012               	return	
 35476                           
 35477                           ; BSR set to: 0
 35478                           ;radio_driver_SX1276.c: 234: {
 35479                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 35480  005EA2  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35481  005EA4  B4D8               	btfsc	status,2,c
 35482  005EA6  D006               	goto	l447
 35483  005EA8                     u14610:
 35484                           
 35485                           ; BSR set to: 0
 35486                           
 35487                           ;radio_driver_SX1276.c: 238: ;
 35488                           
 35489                           ; BSR set to: 0
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;radio_driver_SX1276.c: 236: {
 35493                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 35494  005EA8  ECE3  F045         	call	_HALDIO5PinValue	;wreg free
 35495  005EAC  0900               	iorlw	0
 35496  005EAE  A4D8               	btfss	status,2,c
 35497  005EB0  0012               	return	
 35498  005EB2  D7FA               	goto	u14610
 35499  005EB4                     l447:
 35500                           
 35501                           ;radio_driver_SX1276.c: 240: else
 35502                           ;radio_driver_SX1276.c: 241: {
 35503                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 35504  005EB4  0E01               	movlw	1
 35505  005EB6  0100               	movlb	0	; () banked
 35506  005EB8  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35507  005EBA  0E00               	movlw	0
 35508  005EBC  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35509  005EBE  0E00               	movlw	0
 35510  005EC0  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35511  005EC2  0E00               	movlw	0
 35512  005EC4  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35513  005EC6  EC56  F042         	call	_SystemBlockingWaitMs	;wreg free
 35514  005ECA  0012               	return	
 35515  005ECC                     __end_of_RADIO_WriteMode:
 35516                           	opt stack 0
 35517                           tosu	equ	0xFFF
 35518                           tosh	equ	0xFFE
 35519                           tosl	equ	0xFFD
 35520                           pclath	equ	0xFFA
 35521                           tblptru	equ	0xFF8
 35522                           tblptrh	equ	0xFF7
 35523                           tblptrl	equ	0xFF6
 35524                           tablat	equ	0xFF5
 35525                           prodh	equ	0xFF4
 35526                           prodl	equ	0xFF3
 35527                           intcon	equ	0xFF2
 35528                           intcon2	equ	0xFF1
 35529                           intcon3	equ	0xFF0
 35530                           indf0	equ	0xFEF
 35531                           postinc0	equ	0xFEE
 35532                           plusw0	equ	0xFEB
 35533                           fsr0h	equ	0xFEA
 35534                           fsr0l	equ	0xFE9
 35535                           wreg	equ	0xFE8
 35536                           postinc1	equ	0xFE6
 35537                           postdec1	equ	0xFE5
 35538                           plusw1	equ	0xFE3
 35539                           fsr1h	equ	0xFE2
 35540                           fsr1l	equ	0xFE1
 35541                           indf2	equ	0xFDF
 35542                           postinc2	equ	0xFDE
 35543                           postdec2	equ	0xFDD
 35544                           plusw2	equ	0xFDB
 35545                           fsr2h	equ	0xFDA
 35546                           fsr2l	equ	0xFD9
 35547                           status	equ	0xFD8
 35548                           
 35549 ;; *************** function _RADIO_RegisterRead *****************
 35550 ;; Defined at:
 35551 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35552 ;; Parameters:    Size  Location     Type
 35553 ;;  reg             1    wreg     unsigned char 
 35554 ;; Auto vars:     Size  Location     Type
 35555 ;;  reg             1    2[BANK0 ] unsigned char 
 35556 ;;  readValue       1    3[BANK0 ] unsigned char 
 35557 ;; Return value:  Size  Location     Type
 35558 ;;                  1    wreg      unsigned char 
 35559 ;; Registers used:
 35560 ;;		wreg, status,2, status,0, cstack
 35561 ;; Tracked objects:
 35562 ;;		On entry : 0/0
 35563 ;;		On exit  : 0/0
 35564 ;;		Unchanged: 0/0
 35565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35570 ;;Total ram usage:        2 bytes
 35571 ;; Hardware stack levels used:    1
 35572 ;; Hardware stack levels required when called:    9
 35573 ;; This function calls:
 35574 ;;		_HALSPICSAssert
 35575 ;;		_HALSPICSDeassert
 35576 ;;		_HALSPISend
 35577 ;; This function is called by:
 35578 ;;		_RADIO_WriteMode
 35579 ;;		_RADIO_WritePower
 35580 ;;		_RADIO_Init
 35581 ;;		_RADIO_WriteConfiguration
 35582 ;;		_RADIO_Transmit
 35583 ;;		_RADIO_RxDone
 35584 ;;		_RADIO_FSKPayloadReady
 35585 ;;		_RADIO_FSKPacketSent
 35586 ;;		_RADIO_FHSSChangeChannel
 35587 ;;		_RADIO_DIO0
 35588 ;;		_RADIO_DIO1
 35589 ;;		_RADIO_DIO2
 35590 ;;		_RADIO_DIO3
 35591 ;;		_RADIO_DIO4
 35592 ;;		_RADIO_DIO5
 35593 ;;		_RADIO_ReadRandom
 35594 ;;		_RADIO_RxFSKTimeout
 35595 ;; This function uses a non-reentrant model
 35596 ;;
 35597                           
 35598                           	psect	text162
 35599  008794                     __ptext162:
 35600                           	opt stack 0
 35601  008794                     _RADIO_RegisterRead:
 35602                           	opt stack 18
 35603                           
 35604                           ;incstack = 0
 35605                           ;RADIO_RegisterRead@reg stored from wreg
 35606  008794  0100               	movlb	0	; () banked
 35607  008796  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 35608                           
 35609                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 35610                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 35611  008798  0100               	movlb	0	; () banked
 35612  00879A  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 35613                           
 35614                           ; BSR set to: 0
 35615                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 35616  00879C  EC5D  F046         	call	_HALSPICSAssert	;wreg free
 35617                           
 35618                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 35619  0087A0  0100               	movlb	0	; () banked
 35620  0087A2  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 35621  0087A4  ECDC  F045         	call	_HALSPISend
 35622                           
 35623                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 35624  0087A8  0EFF               	movlw	255
 35625  0087AA  ECDC  F045         	call	_HALSPISend
 35626  0087AE  0100               	movlb	0	; () banked
 35627  0087B0  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 35628                           
 35629                           ; BSR set to: 0
 35630                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 35631  0087B2  EC5B  F046         	call	_HALSPICSDeassert	;wreg free
 35632                           
 35633                           ;radio_driver_SX1276.c: 142: return readValue;
 35634  0087B6  0100               	movlb	0	; () banked
 35635  0087B8  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 35636  0087BA  0012               	return	
 35637  0087BC                     __end_of_RADIO_RegisterRead:
 35638                           	opt stack 0
 35639                           tosu	equ	0xFFF
 35640                           tosh	equ	0xFFE
 35641                           tosl	equ	0xFFD
 35642                           pclath	equ	0xFFA
 35643                           tblptru	equ	0xFF8
 35644                           tblptrh	equ	0xFF7
 35645                           tblptrl	equ	0xFF6
 35646                           tablat	equ	0xFF5
 35647                           prodh	equ	0xFF4
 35648                           prodl	equ	0xFF3
 35649                           intcon	equ	0xFF2
 35650                           intcon2	equ	0xFF1
 35651                           intcon3	equ	0xFF0
 35652                           indf0	equ	0xFEF
 35653                           postinc0	equ	0xFEE
 35654                           plusw0	equ	0xFEB
 35655                           fsr0h	equ	0xFEA
 35656                           fsr0l	equ	0xFE9
 35657                           wreg	equ	0xFE8
 35658                           postinc1	equ	0xFE6
 35659                           postdec1	equ	0xFE5
 35660                           plusw1	equ	0xFE3
 35661                           fsr1h	equ	0xFE2
 35662                           fsr1l	equ	0xFE1
 35663                           indf2	equ	0xFDF
 35664                           postinc2	equ	0xFDE
 35665                           postdec2	equ	0xFDD
 35666                           plusw2	equ	0xFDB
 35667                           fsr2h	equ	0xFDA
 35668                           fsr2l	equ	0xFD9
 35669                           status	equ	0xFD8
 35670                           
 35671 ;; *************** function _HALDIO5PinValue *****************
 35672 ;; Defined at:
 35673 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35674 ;; Parameters:    Size  Location     Type
 35675 ;;		None
 35676 ;; Auto vars:     Size  Location     Type
 35677 ;;		None
 35678 ;; Return value:  Size  Location     Type
 35679 ;;                  1    wreg      unsigned char 
 35680 ;; Registers used:
 35681 ;;		wreg
 35682 ;; Tracked objects:
 35683 ;;		On entry : 0/0
 35684 ;;		On exit  : 0/0
 35685 ;;		Unchanged: 0/0
 35686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35691 ;;Total ram usage:        0 bytes
 35692 ;; Hardware stack levels used:    1
 35693 ;; Hardware stack levels required when called:    7
 35694 ;; This function calls:
 35695 ;;		Nothing
 35696 ;; This function is called by:
 35697 ;;		_RADIO_WriteMode
 35698 ;; This function uses a non-reentrant model
 35699 ;;
 35700                           
 35701                           	psect	text163
 35702  008BC6                     __ptext163:
 35703                           	opt stack 0
 35704  008BC6                     _HALDIO5PinValue:
 35705                           	opt stack 20
 35706                           
 35707                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 35708                           
 35709                           ; BSR set to: 0
 35710                           ;incstack = 0
 35711  008BC6  A081               	btfss	3969,0,c	;volatile
 35712  008BC8  D002               	goto	u14140
 35713  008BCA  0E01               	movlw	1
 35714  008BCC  0012               	return	
 35715  008BCE                     u14140:
 35716  008BCE  0E00               	movlw	0
 35717  008BD0  0012               	return	
 35718  008BD2                     __end_of_HALDIO5PinValue:
 35719                           	opt stack 0
 35720                           tosu	equ	0xFFF
 35721                           tosh	equ	0xFFE
 35722                           tosl	equ	0xFFD
 35723                           pclath	equ	0xFFA
 35724                           tblptru	equ	0xFF8
 35725                           tblptrh	equ	0xFF7
 35726                           tblptrl	equ	0xFF6
 35727                           tablat	equ	0xFF5
 35728                           prodh	equ	0xFF4
 35729                           prodl	equ	0xFF3
 35730                           intcon	equ	0xFF2
 35731                           intcon2	equ	0xFF1
 35732                           intcon3	equ	0xFF0
 35733                           indf0	equ	0xFEF
 35734                           postinc0	equ	0xFEE
 35735                           plusw0	equ	0xFEB
 35736                           fsr0h	equ	0xFEA
 35737                           fsr0l	equ	0xFE9
 35738                           wreg	equ	0xFE8
 35739                           postinc1	equ	0xFE6
 35740                           postdec1	equ	0xFE5
 35741                           plusw1	equ	0xFE3
 35742                           fsr1h	equ	0xFE2
 35743                           fsr1l	equ	0xFE1
 35744                           indf2	equ	0xFDF
 35745                           postinc2	equ	0xFDE
 35746                           postdec2	equ	0xFDD
 35747                           plusw2	equ	0xFDB
 35748                           fsr2h	equ	0xFDA
 35749                           fsr2l	equ	0xFD9
 35750                           status	equ	0xFD8
 35751                           
 35752 ;; *************** function _RADIO_WriteFrequency *****************
 35753 ;; Defined at:
 35754 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35755 ;; Parameters:    Size  Location     Type
 35756 ;;  frequency       4   13[BANK0 ] unsigned long 
 35757 ;; Auto vars:     Size  Location     Type
 35758 ;;  num             4   21[BANK0 ] unsigned long 
 35759 ;;  num_mod         4   17[BANK0 ] unsigned long 
 35760 ;; Return value:  Size  Location     Type
 35761 ;;                  1    wreg      void 
 35762 ;; Registers used:
 35763 ;;		wreg, status,2, status,0, cstack
 35764 ;; Tracked objects:
 35765 ;;		On entry : 0/0
 35766 ;;		On exit  : 0/0
 35767 ;;		Unchanged: 0/0
 35768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35770 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35772 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35773 ;;Total ram usage:       12 bytes
 35774 ;; Hardware stack levels used:    1
 35775 ;; Hardware stack levels required when called:   10
 35776 ;; This function calls:
 35777 ;;		_RADIO_RegisterWrite
 35778 ;;		___lldiv
 35779 ;;		___llmod
 35780 ;; This function is called by:
 35781 ;;		_RADIO_Init
 35782 ;;		_RADIO_WriteConfiguration
 35783 ;;		_RADIO_FHSSChangeChannel
 35784 ;; This function uses a non-reentrant model
 35785 ;;
 35786                           
 35787                           	psect	text164
 35788  0061AA                     __ptext164:
 35789                           	opt stack 0
 35790  0061AA                     _RADIO_WriteFrequency:
 35791                           	opt stack 17
 35792                           
 35793                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 35794                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 35795                           
 35796                           ;incstack = 0
 35797  0061AA  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 35798  0061AE  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 35799  0061B2  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 35800  0061B6  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 35801  0061BA  0E09               	movlw	9
 35802  0061BC  0100               	movlb	0	; () banked
 35803  0061BE  6F64               	movwf	___lldiv@divisor& (0+255),b
 35804  0061C0  0E3D               	movlw	61
 35805  0061C2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35806  0061C4  0E00               	movlw	0
 35807  0061C6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35808  0061C8  0E00               	movlw	0
 35809  0061CA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35810  0061CC  EC7A  F039         	call	___lldiv	;wreg free
 35811  0061D0  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 35812  0061D4  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 35813  0061D8  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 35814  0061DC  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 35815                           
 35816                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 35817  0061E0  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 35818  0061E4  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 35819  0061E8  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 35820  0061EC  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 35821  0061F0  0E09               	movlw	9
 35822  0061F2  0100               	movlb	0	; () banked
 35823  0061F4  6F64               	movwf	___llmod@divisor& (0+255),b
 35824  0061F6  0E3D               	movlw	61
 35825  0061F8  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 35826  0061FA  0E00               	movlw	0
 35827  0061FC  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 35828  0061FE  0E00               	movlw	0
 35829  006200  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 35830  006202  ECC5  F03B         	call	___llmod	;wreg free
 35831  006206  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 35832  00620A  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 35833  00620E  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 35834  006212  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 35835                           
 35836                           ;radio_driver_SX1276.c: 277: num <<= (8);
 35837  006216  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 35838  00621A  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 35839  00621E  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 35840  006222  0100               	movlb	0	; () banked
 35841  006224  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 35842                           
 35843                           ; BSR set to: 0
 35844                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 35845  006226  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 35846  00622A  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 35847  00622E  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 35848  006232  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 35849                           
 35850                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 35851  006234  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 35852  006238  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 35853  00623C  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 35854  006240  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 35855  006244  0E09               	movlw	9
 35856  006246  6F64               	movwf	___lldiv@divisor& (0+255),b
 35857  006248  0E3D               	movlw	61
 35858  00624A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35859  00624C  0E00               	movlw	0
 35860  00624E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35861  006250  0E00               	movlw	0
 35862  006252  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35863  006254  EC7A  F039         	call	___lldiv	;wreg free
 35864  006258  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 35865  00625C  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 35866  006260  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 35867  006264  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 35868                           
 35869                           ;radio_driver_SX1276.c: 283: num += num_mod;
 35870  006268  0100               	movlb	0	; () banked
 35871  00626A  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 35872  00626C  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 35873  00626E  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 35874  006270  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 35875  006272  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 35876  006274  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 35877  006276  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 35878  006278  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 35879                           
 35880                           ; BSR set to: 0
 35881                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 35882  00627A  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 35883  00627E  0E06               	movlw	6
 35884  006280  EC7B  F044         	call	_RADIO_RegisterWrite
 35885                           
 35886                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 35887  006284  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 35888  006288  0E07               	movlw	7
 35889  00628A  EC7B  F044         	call	_RADIO_RegisterWrite
 35890                           
 35891                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 35892  00628E  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 35893  006292  0E08               	movlw	8
 35894  006294  EC7B  F044         	call	_RADIO_RegisterWrite
 35895  006298  0012               	return		;funcret
 35896  00629A                     __end_of_RADIO_WriteFrequency:
 35897                           	opt stack 0
 35898                           tosu	equ	0xFFF
 35899                           tosh	equ	0xFFE
 35900                           tosl	equ	0xFFD
 35901                           pclath	equ	0xFFA
 35902                           tblptru	equ	0xFF8
 35903                           tblptrh	equ	0xFF7
 35904                           tblptrl	equ	0xFF6
 35905                           tablat	equ	0xFF5
 35906                           prodh	equ	0xFF4
 35907                           prodl	equ	0xFF3
 35908                           intcon	equ	0xFF2
 35909                           intcon2	equ	0xFF1
 35910                           intcon3	equ	0xFF0
 35911                           indf0	equ	0xFEF
 35912                           postinc0	equ	0xFEE
 35913                           plusw0	equ	0xFEB
 35914                           fsr0h	equ	0xFEA
 35915                           fsr0l	equ	0xFE9
 35916                           wreg	equ	0xFE8
 35917                           postinc1	equ	0xFE6
 35918                           postdec1	equ	0xFE5
 35919                           plusw1	equ	0xFE3
 35920                           fsr1h	equ	0xFE2
 35921                           fsr1l	equ	0xFE1
 35922                           indf2	equ	0xFDF
 35923                           postinc2	equ	0xFDE
 35924                           postdec2	equ	0xFDD
 35925                           plusw2	equ	0xFDB
 35926                           fsr2h	equ	0xFDA
 35927                           fsr2l	equ	0xFD9
 35928                           status	equ	0xFD8
 35929                           
 35930 ;; *************** function ___llmod *****************
 35931 ;; Defined at:
 35932 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 35933 ;; Parameters:    Size  Location     Type
 35934 ;;  dividend        4    0[BANK0 ] unsigned long 
 35935 ;;  divisor         4    4[BANK0 ] unsigned long 
 35936 ;; Auto vars:     Size  Location     Type
 35937 ;;  counter         1    8[BANK0 ] unsigned char 
 35938 ;; Return value:  Size  Location     Type
 35939 ;;                  4    0[BANK0 ] unsigned long 
 35940 ;; Registers used:
 35941 ;;		wreg, status,2, status,0
 35942 ;; Tracked objects:
 35943 ;;		On entry : 0/0
 35944 ;;		On exit  : 0/0
 35945 ;;		Unchanged: 0/0
 35946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35950 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35951 ;;Total ram usage:        9 bytes
 35952 ;; Hardware stack levels used:    1
 35953 ;; Hardware stack levels required when called:    7
 35954 ;; This function calls:
 35955 ;;		Nothing
 35956 ;; This function is called by:
 35957 ;;		_RADIO_WriteFrequency
 35958 ;; This function uses a non-reentrant model
 35959 ;;
 35960                           
 35961                           	psect	text165
 35962  00778A                     __ptext165:
 35963                           	opt stack 0
 35964  00778A                     ___llmod:
 35965                           	opt stack 19
 35966                           
 35967                           ;incstack = 0
 35968  00778A  0100               	movlb	0	; () banked
 35969  00778C  5164               	movf	___llmod@divisor& (0+255),w,b
 35970  00778E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 35971  007790  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 35972  007792  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 35973  007794  B4D8               	btfsc	status,2,c
 35974  007796  D024               	goto	l2877
 35975                           
 35976                           ; BSR set to: 0
 35977  007798  0E01               	movlw	1
 35978  00779A  6F68               	movwf	___llmod@counter& (0+255),b
 35979  00779C  D006               	goto	l2872
 35980  00779E                     
 35981                           ; BSR set to: 0
 35982                           
 35983                           ; BSR set to: 0
 35984  00779E  90D8               	bcf	status,0,c
 35985  0077A0  3764               	rlcf	___llmod@divisor& (0+255),f,b
 35986  0077A2  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 35987  0077A4  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 35988  0077A6  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 35989  0077A8  2B68               	incf	___llmod@counter& (0+255),f,b
 35990  0077AA                     l2872:
 35991                           
 35992                           ; BSR set to: 0
 35993                           
 35994                           ; BSR set to: 0
 35995  0077AA  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 35996  0077AC  D7F8               	goto	l2873
 35997  0077AE                     u14370:
 35998                           
 35999                           ; BSR set to: 0
 36000                           
 36001                           ; BSR set to: 0
 36002                           
 36003                           ; BSR set to: 0
 36004  0077AE  5164               	movf	___llmod@divisor& (0+255),w,b
 36005  0077B0  5D60               	subwf	___llmod@dividend& (0+255),w,b
 36006  0077B2  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36007  0077B4  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 36008  0077B6  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36009  0077B8  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 36010  0077BA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36011  0077BC  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 36012  0077BE  A0D8               	btfss	status,0,c
 36013  0077C0  D008               	goto	l2876
 36014                           
 36015                           ; BSR set to: 0
 36016  0077C2  5164               	movf	___llmod@divisor& (0+255),w,b
 36017  0077C4  5F60               	subwf	___llmod@dividend& (0+255),f,b
 36018  0077C6  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36019  0077C8  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 36020  0077CA  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36021  0077CC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 36022  0077CE  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36023  0077D0  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 36024  0077D2                     l2876:
 36025                           
 36026                           ; BSR set to: 0
 36027                           
 36028                           ; BSR set to: 0
 36029  0077D2  90D8               	bcf	status,0,c
 36030  0077D4  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 36031  0077D6  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 36032  0077D8  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 36033  0077DA  3364               	rrcf	___llmod@divisor& (0+255),f,b
 36034                           
 36035                           ; BSR set to: 0
 36036  0077DC  2F68               	decfsz	___llmod@counter& (0+255),f,b
 36037  0077DE  D7E7               	goto	u14370
 36038  0077E0                     l2877:
 36039                           
 36040                           ; BSR set to: 0
 36041                           
 36042                           ; BSR set to: 0
 36043  0077E0  C060  F060         	movff	___llmod@dividend,?___llmod
 36044  0077E4  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 36045  0077E8  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 36046  0077EC  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 36047                           
 36048                           ; BSR set to: 0
 36049  0077F0  0012               	return		;funcret
 36050  0077F2                     __end_of___llmod:
 36051                           	opt stack 0
 36052                           tosu	equ	0xFFF
 36053                           tosh	equ	0xFFE
 36054                           tosl	equ	0xFFD
 36055                           pclath	equ	0xFFA
 36056                           tblptru	equ	0xFF8
 36057                           tblptrh	equ	0xFF7
 36058                           tblptrl	equ	0xFF6
 36059                           tablat	equ	0xFF5
 36060                           prodh	equ	0xFF4
 36061                           prodl	equ	0xFF3
 36062                           intcon	equ	0xFF2
 36063                           intcon2	equ	0xFF1
 36064                           intcon3	equ	0xFF0
 36065                           indf0	equ	0xFEF
 36066                           postinc0	equ	0xFEE
 36067                           plusw0	equ	0xFEB
 36068                           fsr0h	equ	0xFEA
 36069                           fsr0l	equ	0xFE9
 36070                           wreg	equ	0xFE8
 36071                           postinc1	equ	0xFE6
 36072                           postdec1	equ	0xFE5
 36073                           plusw1	equ	0xFE3
 36074                           fsr1h	equ	0xFE2
 36075                           fsr1l	equ	0xFE1
 36076                           indf2	equ	0xFDF
 36077                           postinc2	equ	0xFDE
 36078                           postdec2	equ	0xFDD
 36079                           plusw2	equ	0xFDB
 36080                           fsr2h	equ	0xFDA
 36081                           fsr2l	equ	0xFD9
 36082                           status	equ	0xFD8
 36083                           
 36084 ;; *************** function _RADIO_RegisterWrite *****************
 36085 ;; Defined at:
 36086 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36087 ;; Parameters:    Size  Location     Type
 36088 ;;  reg             1    wreg     unsigned char 
 36089 ;;  value           1    2[BANK0 ] unsigned char 
 36090 ;; Auto vars:     Size  Location     Type
 36091 ;;  reg             1    3[BANK0 ] unsigned char 
 36092 ;; Return value:  Size  Location     Type
 36093 ;;                  1    wreg      void 
 36094 ;; Registers used:
 36095 ;;		wreg, status,2, status,0, cstack
 36096 ;; Tracked objects:
 36097 ;;		On entry : 0/0
 36098 ;;		On exit  : 0/0
 36099 ;;		Unchanged: 0/0
 36100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36101 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36104 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36105 ;;Total ram usage:        2 bytes
 36106 ;; Hardware stack levels used:    1
 36107 ;; Hardware stack levels required when called:    9
 36108 ;; This function calls:
 36109 ;;		_HALSPICSAssert
 36110 ;;		_HALSPICSDeassert
 36111 ;;		_HALSPISend
 36112 ;; This function is called by:
 36113 ;;		_RADIO_WriteMode
 36114 ;;		_RADIO_WriteFrequency
 36115 ;;		_RADIO_WriteFSKFrequencyDeviation
 36116 ;;		_RADIO_WriteFSKBitRate
 36117 ;;		_RADIO_WritePower
 36118 ;;		_RADIO_Init
 36119 ;;		_RADIO_WriteConfiguration
 36120 ;;		_RADIO_Transmit
 36121 ;;		_RADIO_ReceiveStart
 36122 ;;		_RADIO_RxDone
 36123 ;;		_RADIO_RxTimeout
 36124 ;;		_RADIO_TxDone
 36125 ;;		_RADIO_UnhandledInterrupt
 36126 ;;		_RADIO_FHSSChangeChannel
 36127 ;;		_RADIO_ReadRandom
 36128 ;;		_RADIO_TransmitCW
 36129 ;; This function uses a non-reentrant model
 36130 ;;
 36131                           
 36132                           	psect	text166
 36133  0088F6                     __ptext166:
 36134                           	opt stack 0
 36135  0088F6                     _RADIO_RegisterWrite:
 36136                           	opt stack 18
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;incstack = 0
 36140                           ;RADIO_RegisterWrite@reg stored from wreg
 36141  0088F6  0100               	movlb	0	; () banked
 36142  0088F8  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 36143                           
 36144                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 36145  0088FA  EC5D  F046         	call	_HALSPICSAssert	;wreg free
 36146                           
 36147                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 36148  0088FE  0100               	movlb	0	; () banked
 36149  008900  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 36150  008902  0980               	iorlw	128
 36151  008904  ECDC  F045         	call	_HALSPISend
 36152                           
 36153                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 36154  008908  0100               	movlb	0	; () banked
 36155  00890A  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 36156  00890C  ECDC  F045         	call	_HALSPISend
 36157                           
 36158                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 36159  008910  EC5B  F046         	call	_HALSPICSDeassert	;wreg free
 36160  008914  0012               	return		;funcret
 36161  008916                     __end_of_RADIO_RegisterWrite:
 36162                           	opt stack 0
 36163                           tosu	equ	0xFFF
 36164                           tosh	equ	0xFFE
 36165                           tosl	equ	0xFFD
 36166                           pclath	equ	0xFFA
 36167                           tblptru	equ	0xFF8
 36168                           tblptrh	equ	0xFF7
 36169                           tblptrl	equ	0xFF6
 36170                           tablat	equ	0xFF5
 36171                           prodh	equ	0xFF4
 36172                           prodl	equ	0xFF3
 36173                           intcon	equ	0xFF2
 36174                           intcon2	equ	0xFF1
 36175                           intcon3	equ	0xFF0
 36176                           indf0	equ	0xFEF
 36177                           postinc0	equ	0xFEE
 36178                           plusw0	equ	0xFEB
 36179                           fsr0h	equ	0xFEA
 36180                           fsr0l	equ	0xFE9
 36181                           wreg	equ	0xFE8
 36182                           postinc1	equ	0xFE6
 36183                           postdec1	equ	0xFE5
 36184                           plusw1	equ	0xFE3
 36185                           fsr1h	equ	0xFE2
 36186                           fsr1l	equ	0xFE1
 36187                           indf2	equ	0xFDF
 36188                           postinc2	equ	0xFDE
 36189                           postdec2	equ	0xFDD
 36190                           plusw2	equ	0xFDB
 36191                           fsr2h	equ	0xFDA
 36192                           fsr2l	equ	0xFD9
 36193                           status	equ	0xFD8
 36194                           
 36195 ;; *************** function _HALSPISend *****************
 36196 ;; Defined at:
 36197 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36198 ;; Parameters:    Size  Location     Type
 36199 ;;  data            1    wreg     unsigned char 
 36200 ;; Auto vars:     Size  Location     Type
 36201 ;;  data            1    1[BANK0 ] unsigned char 
 36202 ;; Return value:  Size  Location     Type
 36203 ;;                  1    wreg      unsigned char 
 36204 ;; Registers used:
 36205 ;;		wreg, status,2, cstack
 36206 ;; Tracked objects:
 36207 ;;		On entry : 0/0
 36208 ;;		On exit  : 0/0
 36209 ;;		Unchanged: 0/0
 36210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36215 ;;Total ram usage:        1 bytes
 36216 ;; Hardware stack levels used:    1
 36217 ;; Hardware stack levels required when called:    8
 36218 ;; This function calls:
 36219 ;;		_SPI2_Exchange8bit
 36220 ;; This function is called by:
 36221 ;;		_RADIO_RegisterWrite
 36222 ;;		_RADIO_RegisterRead
 36223 ;;		_RADIO_Transmit
 36224 ;;		_RADIO_RxDone
 36225 ;;		_RADIO_FSKPayloadReady
 36226 ;; This function uses a non-reentrant model
 36227 ;;
 36228                           
 36229                           	psect	text167
 36230  008BB8                     __ptext167:
 36231                           	opt stack 0
 36232  008BB8                     _HALSPISend:
 36233                           	opt stack 18
 36234                           
 36235                           ;incstack = 0
 36236                           ;HALSPISend@data stored from wreg
 36237  008BB8  0100               	movlb	0	; () banked
 36238  008BBA  6F61               	movwf	HALSPISend@data& (0+255),b
 36239                           
 36240                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36241  008BBC  0100               	movlb	0	; () banked
 36242  008BBE  5161               	movf	HALSPISend@data& (0+255),w,b
 36243  008BC0  EC9D  F045         	call	_SPI2_Exchange8bit
 36244  008BC4  0012               	return	
 36245  008BC6                     __end_of_HALSPISend:
 36246                           	opt stack 0
 36247                           tosu	equ	0xFFF
 36248                           tosh	equ	0xFFE
 36249                           tosl	equ	0xFFD
 36250                           pclath	equ	0xFFA
 36251                           tblptru	equ	0xFF8
 36252                           tblptrh	equ	0xFF7
 36253                           tblptrl	equ	0xFF6
 36254                           tablat	equ	0xFF5
 36255                           prodh	equ	0xFF4
 36256                           prodl	equ	0xFF3
 36257                           intcon	equ	0xFF2
 36258                           intcon2	equ	0xFF1
 36259                           intcon3	equ	0xFF0
 36260                           indf0	equ	0xFEF
 36261                           postinc0	equ	0xFEE
 36262                           plusw0	equ	0xFEB
 36263                           fsr0h	equ	0xFEA
 36264                           fsr0l	equ	0xFE9
 36265                           wreg	equ	0xFE8
 36266                           postinc1	equ	0xFE6
 36267                           postdec1	equ	0xFE5
 36268                           plusw1	equ	0xFE3
 36269                           fsr1h	equ	0xFE2
 36270                           fsr1l	equ	0xFE1
 36271                           indf2	equ	0xFDF
 36272                           postinc2	equ	0xFDE
 36273                           postdec2	equ	0xFDD
 36274                           plusw2	equ	0xFDB
 36275                           fsr2h	equ	0xFDA
 36276                           fsr2l	equ	0xFD9
 36277                           status	equ	0xFD8
 36278                           
 36279 ;; *************** function _SPI2_Exchange8bit *****************
 36280 ;; Defined at:
 36281 ;;		line 79 in file "mcc_generated_files/spi2.c"
 36282 ;; Parameters:    Size  Location     Type
 36283 ;;  data            1    wreg     unsigned char 
 36284 ;; Auto vars:     Size  Location     Type
 36285 ;;  data            1    0[BANK0 ] unsigned char 
 36286 ;; Return value:  Size  Location     Type
 36287 ;;                  1    wreg      unsigned char 
 36288 ;; Registers used:
 36289 ;;		wreg, status,2
 36290 ;; Tracked objects:
 36291 ;;		On entry : 0/0
 36292 ;;		On exit  : 0/0
 36293 ;;		Unchanged: 0/0
 36294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36299 ;;Total ram usage:        1 bytes
 36300 ;; Hardware stack levels used:    1
 36301 ;; Hardware stack levels required when called:    7
 36302 ;; This function calls:
 36303 ;;		Nothing
 36304 ;; This function is called by:
 36305 ;;		_HALSPISend
 36306 ;;		_SPI2_Exchange8bitBuffer
 36307 ;; This function uses a non-reentrant model
 36308 ;;
 36309                           
 36310                           	psect	text168
 36311  008B3A                     __ptext168:
 36312                           	opt stack 0
 36313  008B3A                     _SPI2_Exchange8bit:
 36314                           	opt stack 18
 36315                           
 36316                           ;incstack = 0
 36317                           ;SPI2_Exchange8bit@data stored from wreg
 36318  008B3A  0100               	movlb	0	; () banked
 36319  008B3C  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 36320                           
 36321                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 36322  008B3E  9E6C               	bcf	3948,7,c	;volatile
 36323                           
 36324                           ;spi2.c: 84: SSP2BUF = data;
 36325  008B40  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 36326  008B44                     
 36327                           ;spi2.c: 87: {
 36328  008B44  A06D               	btfss	3949,0,c	;volatile
 36329  008B46  D7FE               	goto	l47
 36330                           
 36331                           ;spi2.c: 88: }
 36332                           ;spi2.c: 90: return (SSP2BUF);
 36333  008B48  506F               	movf	3951,w,c	;volatile
 36334  008B4A  0012               	return		;funcret
 36335  008B4C                     __end_of_SPI2_Exchange8bit:
 36336                           	opt stack 0
 36337                           tosu	equ	0xFFF
 36338                           tosh	equ	0xFFE
 36339                           tosl	equ	0xFFD
 36340                           pclath	equ	0xFFA
 36341                           tblptru	equ	0xFF8
 36342                           tblptrh	equ	0xFF7
 36343                           tblptrl	equ	0xFF6
 36344                           tablat	equ	0xFF5
 36345                           prodh	equ	0xFF4
 36346                           prodl	equ	0xFF3
 36347                           intcon	equ	0xFF2
 36348                           intcon2	equ	0xFF1
 36349                           intcon3	equ	0xFF0
 36350                           indf0	equ	0xFEF
 36351                           postinc0	equ	0xFEE
 36352                           plusw0	equ	0xFEB
 36353                           fsr0h	equ	0xFEA
 36354                           fsr0l	equ	0xFE9
 36355                           wreg	equ	0xFE8
 36356                           postinc1	equ	0xFE6
 36357                           postdec1	equ	0xFE5
 36358                           plusw1	equ	0xFE3
 36359                           fsr1h	equ	0xFE2
 36360                           fsr1l	equ	0xFE1
 36361                           indf2	equ	0xFDF
 36362                           postinc2	equ	0xFDE
 36363                           postdec2	equ	0xFDD
 36364                           plusw2	equ	0xFDB
 36365                           fsr2h	equ	0xFDA
 36366                           fsr2l	equ	0xFD9
 36367                           status	equ	0xFD8
 36368                           
 36369 ;; *************** function _HALSPICSDeassert *****************
 36370 ;; Defined at:
 36371 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36372 ;; Parameters:    Size  Location     Type
 36373 ;;		None
 36374 ;; Auto vars:     Size  Location     Type
 36375 ;;		None
 36376 ;; Return value:  Size  Location     Type
 36377 ;;                  1    wreg      void 
 36378 ;; Registers used:
 36379 ;;		None
 36380 ;; Tracked objects:
 36381 ;;		On entry : 0/0
 36382 ;;		On exit  : 0/0
 36383 ;;		Unchanged: 0/0
 36384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36389 ;;Total ram usage:        0 bytes
 36390 ;; Hardware stack levels used:    1
 36391 ;; Hardware stack levels required when called:    7
 36392 ;; This function calls:
 36393 ;;		Nothing
 36394 ;; This function is called by:
 36395 ;;		_RADIO_RegisterWrite
 36396 ;;		_RADIO_RegisterRead
 36397 ;;		_RADIO_Transmit
 36398 ;;		_RADIO_RxDone
 36399 ;;		_RADIO_FSKPayloadReady
 36400 ;; This function uses a non-reentrant model
 36401 ;;
 36402                           
 36403                           	psect	text169
 36404  008CB6                     __ptext169:
 36405                           	opt stack 0
 36406  008CB6                     _HALSPICSDeassert:
 36407                           	opt stack 19
 36408                           
 36409                           ;incstack = 0
 36410                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36411  008CB6  868C               	bsf	3980,3,c	;volatile
 36412  008CB8  0012               	return	
 36413  008CBA                     __end_of_HALSPICSDeassert:
 36414                           	opt stack 0
 36415                           tosu	equ	0xFFF
 36416                           tosh	equ	0xFFE
 36417                           tosl	equ	0xFFD
 36418                           pclath	equ	0xFFA
 36419                           tblptru	equ	0xFF8
 36420                           tblptrh	equ	0xFF7
 36421                           tblptrl	equ	0xFF6
 36422                           tablat	equ	0xFF5
 36423                           prodh	equ	0xFF4
 36424                           prodl	equ	0xFF3
 36425                           intcon	equ	0xFF2
 36426                           intcon2	equ	0xFF1
 36427                           intcon3	equ	0xFF0
 36428                           indf0	equ	0xFEF
 36429                           postinc0	equ	0xFEE
 36430                           plusw0	equ	0xFEB
 36431                           fsr0h	equ	0xFEA
 36432                           fsr0l	equ	0xFE9
 36433                           wreg	equ	0xFE8
 36434                           postinc1	equ	0xFE6
 36435                           postdec1	equ	0xFE5
 36436                           plusw1	equ	0xFE3
 36437                           fsr1h	equ	0xFE2
 36438                           fsr1l	equ	0xFE1
 36439                           indf2	equ	0xFDF
 36440                           postinc2	equ	0xFDE
 36441                           postdec2	equ	0xFDD
 36442                           plusw2	equ	0xFDB
 36443                           fsr2h	equ	0xFDA
 36444                           fsr2l	equ	0xFD9
 36445                           status	equ	0xFD8
 36446                           
 36447 ;; *************** function _HALSPICSAssert *****************
 36448 ;; Defined at:
 36449 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36450 ;; Parameters:    Size  Location     Type
 36451 ;;		None
 36452 ;; Auto vars:     Size  Location     Type
 36453 ;;		None
 36454 ;; Return value:  Size  Location     Type
 36455 ;;                  1    wreg      void 
 36456 ;; Registers used:
 36457 ;;		None
 36458 ;; Tracked objects:
 36459 ;;		On entry : 0/0
 36460 ;;		On exit  : 0/0
 36461 ;;		Unchanged: 0/0
 36462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36467 ;;Total ram usage:        0 bytes
 36468 ;; Hardware stack levels used:    1
 36469 ;; Hardware stack levels required when called:    7
 36470 ;; This function calls:
 36471 ;;		Nothing
 36472 ;; This function is called by:
 36473 ;;		_RADIO_RegisterWrite
 36474 ;;		_RADIO_RegisterRead
 36475 ;;		_RADIO_Transmit
 36476 ;;		_RADIO_RxDone
 36477 ;;		_RADIO_FSKPayloadReady
 36478 ;; This function uses a non-reentrant model
 36479 ;;
 36480                           
 36481                           	psect	text170
 36482  008CBA                     __ptext170:
 36483                           	opt stack 0
 36484  008CBA                     _HALSPICSAssert:
 36485                           	opt stack 19
 36486                           
 36487                           ;incstack = 0
 36488                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36489  008CBA  968C               	bcf	3980,3,c	;volatile
 36490  008CBC  0012               	return	
 36491  008CBE                     __end_of_HALSPICSAssert:
 36492                           	opt stack 0
 36493                           tosu	equ	0xFFF
 36494                           tosh	equ	0xFFE
 36495                           tosl	equ	0xFFD
 36496                           pclath	equ	0xFFA
 36497                           tblptru	equ	0xFF8
 36498                           tblptrh	equ	0xFF7
 36499                           tblptrl	equ	0xFF6
 36500                           tablat	equ	0xFF5
 36501                           prodh	equ	0xFF4
 36502                           prodl	equ	0xFF3
 36503                           intcon	equ	0xFF2
 36504                           intcon2	equ	0xFF1
 36505                           intcon3	equ	0xFF0
 36506                           indf0	equ	0xFEF
 36507                           postinc0	equ	0xFEE
 36508                           plusw0	equ	0xFEB
 36509                           fsr0h	equ	0xFEA
 36510                           fsr0l	equ	0xFE9
 36511                           wreg	equ	0xFE8
 36512                           postinc1	equ	0xFE6
 36513                           postdec1	equ	0xFE5
 36514                           plusw1	equ	0xFE3
 36515                           fsr1h	equ	0xFE2
 36516                           fsr1l	equ	0xFE1
 36517                           indf2	equ	0xFDF
 36518                           postinc2	equ	0xFDE
 36519                           postdec2	equ	0xFDD
 36520                           plusw2	equ	0xFDB
 36521                           fsr2h	equ	0xFDA
 36522                           fsr2l	equ	0xFD9
 36523                           status	equ	0xFD8
 36524                           
 36525 ;; *************** function _RADIO_Reset *****************
 36526 ;; Defined at:
 36527 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36528 ;; Parameters:    Size  Location     Type
 36529 ;;		None
 36530 ;; Auto vars:     Size  Location     Type
 36531 ;;		None
 36532 ;; Return value:  Size  Location     Type
 36533 ;;                  1    wreg      void 
 36534 ;; Registers used:
 36535 ;;		wreg, status,2, status,0, cstack
 36536 ;; Tracked objects:
 36537 ;;		On entry : 0/0
 36538 ;;		On exit  : 0/0
 36539 ;;		Unchanged: 0/0
 36540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36545 ;;Total ram usage:        0 bytes
 36546 ;; Hardware stack levels used:    1
 36547 ;; Hardware stack levels required when called:    8
 36548 ;; This function calls:
 36549 ;;		_HALResetPinMakeInput
 36550 ;;		_HALResetPinMakeOutput
 36551 ;;		_HALResetPinOutputValue
 36552 ;;		_SystemBlockingWaitMs
 36553 ;; This function is called by:
 36554 ;;		_RADIO_Init
 36555 ;; This function uses a non-reentrant model
 36556 ;;
 36557                           
 36558                           	psect	text171
 36559  008036                     __ptext171:
 36560                           	opt stack 0
 36561  008036                     _RADIO_Reset:
 36562                           	opt stack 20
 36563                           
 36564                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36565                           
 36566                           ;incstack = 0
 36567  008036  EC5F  F046         	call	_HALResetPinMakeOutput	;wreg free
 36568                           
 36569                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36570  00803A  0E00               	movlw	0
 36571  00803C  EC31  F045         	call	_HALResetPinOutputValue
 36572                           
 36573                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36574  008040  0E01               	movlw	1
 36575  008042  0100               	movlb	0	; () banked
 36576  008044  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36577  008046  0E00               	movlw	0
 36578  008048  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36579  00804A  0E00               	movlw	0
 36580  00804C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36581  00804E  0E00               	movlw	0
 36582  008050  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36583  008052  EC56  F042         	call	_SystemBlockingWaitMs	;wreg free
 36584                           
 36585                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36586  008056  EC61  F046         	call	_HALResetPinMakeInput	;wreg free
 36587                           
 36588                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36589  00805A  0E0A               	movlw	10
 36590  00805C  0100               	movlb	0	; () banked
 36591  00805E  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36592  008060  0E00               	movlw	0
 36593  008062  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36594  008064  0E00               	movlw	0
 36595  008066  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36596  008068  0E00               	movlw	0
 36597  00806A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36598  00806C  EC56  F042         	call	_SystemBlockingWaitMs	;wreg free
 36599                           
 36600                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36601  008070  0E01               	movlw	1
 36602  008072  EC31  F045         	call	_HALResetPinOutputValue
 36603                           
 36604                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36605  008076  EC5F  F046         	call	_HALResetPinMakeOutput	;wreg free
 36606  00807A  0012               	return		;funcret
 36607  00807C                     __end_of_RADIO_Reset:
 36608                           	opt stack 0
 36609                           tosu	equ	0xFFF
 36610                           tosh	equ	0xFFE
 36611                           tosl	equ	0xFFD
 36612                           pclath	equ	0xFFA
 36613                           tblptru	equ	0xFF8
 36614                           tblptrh	equ	0xFF7
 36615                           tblptrl	equ	0xFF6
 36616                           tablat	equ	0xFF5
 36617                           prodh	equ	0xFF4
 36618                           prodl	equ	0xFF3
 36619                           intcon	equ	0xFF2
 36620                           intcon2	equ	0xFF1
 36621                           intcon3	equ	0xFF0
 36622                           indf0	equ	0xFEF
 36623                           postinc0	equ	0xFEE
 36624                           plusw0	equ	0xFEB
 36625                           fsr0h	equ	0xFEA
 36626                           fsr0l	equ	0xFE9
 36627                           wreg	equ	0xFE8
 36628                           postinc1	equ	0xFE6
 36629                           postdec1	equ	0xFE5
 36630                           plusw1	equ	0xFE3
 36631                           fsr1h	equ	0xFE2
 36632                           fsr1l	equ	0xFE1
 36633                           indf2	equ	0xFDF
 36634                           postinc2	equ	0xFDE
 36635                           postdec2	equ	0xFDD
 36636                           plusw2	equ	0xFDB
 36637                           fsr2h	equ	0xFDA
 36638                           fsr2l	equ	0xFD9
 36639                           status	equ	0xFD8
 36640                           
 36641 ;; *************** function _SystemBlockingWaitMs *****************
 36642 ;; Defined at:
 36643 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36644 ;; Parameters:    Size  Location     Type
 36645 ;;  ms              4    0[BANK0 ] unsigned long 
 36646 ;; Auto vars:     Size  Location     Type
 36647 ;;		None
 36648 ;; Return value:  Size  Location     Type
 36649 ;;                  1    wreg      void 
 36650 ;; Registers used:
 36651 ;;		wreg, status,2, status,0
 36652 ;; Tracked objects:
 36653 ;;		On entry : 0/0
 36654 ;;		On exit  : 0/0
 36655 ;;		Unchanged: 0/0
 36656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36660 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36661 ;;Total ram usage:        5 bytes
 36662 ;; Hardware stack levels used:    1
 36663 ;; Hardware stack levels required when called:    7
 36664 ;; This function calls:
 36665 ;;		Nothing
 36666 ;; This function is called by:
 36667 ;;		_RADIO_WriteMode
 36668 ;;		_RADIO_Reset
 36669 ;;		_RADIO_ReadRandom
 36670 ;;		_RADIO_StopCW
 36671 ;; This function uses a non-reentrant model
 36672 ;;
 36673                           
 36674                           	psect	text172
 36675  0084AC                     __ptext172:
 36676                           	opt stack 0
 36677  0084AC                     _SystemBlockingWaitMs:
 36678                           	opt stack 20
 36679                           
 36680                           ;sw_timer.c: 147: while (ms > 0)
 36681                           
 36682                           ;incstack = 0
 36683  0084AC  D00F               	goto	l279
 36684  0084AE                     
 36685                           ;sw_timer.c: 148: {
 36686                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 36687  0084AE  0E06               	movlw	6
 36688  0084B0  0100               	movlb	0	; () banked
 36689  0084B2  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 36690  0084B4  0E30               	movlw	48
 36691  0084B6                     u21797:
 36692  0084B6  2EE8               	decfsz	wreg,f,c
 36693  0084B8  D7FE               	bra	u21797
 36694  0084BA  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 36695  0084BC  D7FC               	bra	u21797
 36696  0084BE  F000               	nop	
 36697                           
 36698                           ;sw_timer.c: 150: ms--;
 36699  0084C0  0100               	movlb	0	; () banked
 36700  0084C2  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 36701  0084C4  0E00               	movlw	0
 36702  0084C6  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 36703  0084C8  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 36704  0084CA  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 36705  0084CC                     l279:
 36706                           
 36707                           ; BSR set to: 0
 36708  0084CC  0100               	movlb	0	; () banked
 36709  0084CE  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 36710  0084D0  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 36711  0084D2  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 36712  0084D4  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 36713  0084D6  B4D8               	btfsc	status,2,c
 36714  0084D8  0012               	return	
 36715  0084DA  D7E9               	goto	l280
 36716  0084DC                     __end_of_SystemBlockingWaitMs:
 36717                           	opt stack 0
 36718                           tosu	equ	0xFFF
 36719                           tosh	equ	0xFFE
 36720                           tosl	equ	0xFFD
 36721                           pclath	equ	0xFFA
 36722                           tblptru	equ	0xFF8
 36723                           tblptrh	equ	0xFF7
 36724                           tblptrl	equ	0xFF6
 36725                           tablat	equ	0xFF5
 36726                           prodh	equ	0xFF4
 36727                           prodl	equ	0xFF3
 36728                           intcon	equ	0xFF2
 36729                           intcon2	equ	0xFF1
 36730                           intcon3	equ	0xFF0
 36731                           indf0	equ	0xFEF
 36732                           postinc0	equ	0xFEE
 36733                           plusw0	equ	0xFEB
 36734                           fsr0h	equ	0xFEA
 36735                           fsr0l	equ	0xFE9
 36736                           wreg	equ	0xFE8
 36737                           postinc1	equ	0xFE6
 36738                           postdec1	equ	0xFE5
 36739                           plusw1	equ	0xFE3
 36740                           fsr1h	equ	0xFE2
 36741                           fsr1l	equ	0xFE1
 36742                           indf2	equ	0xFDF
 36743                           postinc2	equ	0xFDE
 36744                           postdec2	equ	0xFDD
 36745                           plusw2	equ	0xFDB
 36746                           fsr2h	equ	0xFDA
 36747                           fsr2l	equ	0xFD9
 36748                           status	equ	0xFD8
 36749                           
 36750 ;; *************** function _HALResetPinOutputValue *****************
 36751 ;; Defined at:
 36752 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36753 ;; Parameters:    Size  Location     Type
 36754 ;;  value           1    wreg     unsigned char 
 36755 ;; Auto vars:     Size  Location     Type
 36756 ;;  value           1    0[BANK0 ] unsigned char 
 36757 ;; Return value:  Size  Location     Type
 36758 ;;                  1    wreg      void 
 36759 ;; Registers used:
 36760 ;;		wreg, status,2, status,0
 36761 ;; Tracked objects:
 36762 ;;		On entry : 0/0
 36763 ;;		On exit  : 0/0
 36764 ;;		Unchanged: 0/0
 36765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36770 ;;Total ram usage:        1 bytes
 36771 ;; Hardware stack levels used:    1
 36772 ;; Hardware stack levels required when called:    7
 36773 ;; This function calls:
 36774 ;;		Nothing
 36775 ;; This function is called by:
 36776 ;;		_RADIO_Reset
 36777 ;; This function uses a non-reentrant model
 36778 ;;
 36779                           
 36780                           	psect	text173
 36781  008A62                     __ptext173:
 36782                           	opt stack 0
 36783  008A62                     _HALResetPinOutputValue:
 36784                           	opt stack 20
 36785                           
 36786                           ; BSR set to: 0
 36787                           ;incstack = 0
 36788                           ;HALResetPinOutputValue@value stored from wreg
 36789  008A62  0100               	movlb	0	; () banked
 36790  008A64  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 36791                           
 36792                           ;radio_driver_hal.c: 57: if (value == 0)
 36793  008A66  0100               	movlb	0	; () banked
 36794  008A68  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 36795  008A6A  A4D8               	btfss	status,2,c
 36796  008A6C  D002               	goto	l189
 36797                           
 36798                           ; BSR set to: 0
 36799                           
 36800                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 36801  008A6E  948B               	bcf	3979,2,c	;volatile
 36802                           
 36803                           ; BSR set to: 0
 36804  008A70  0012               	return	
 36805  008A72                     l189:
 36806                           
 36807                           ; BSR set to: 0
 36808                           ;radio_driver_hal.c: 59: else if (value == 1)
 36809                           
 36810                           ; BSR set to: 0
 36811  008A72  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 36812  008A74  A4D8               	btfss	status,2,c
 36813  008A76  0012               	return	
 36814                           
 36815                           ; BSR set to: 0
 36816                           
 36817                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 36818  008A78  848B               	bsf	3979,2,c	;volatile
 36819                           
 36820                           ; BSR set to: 0
 36821                           
 36822                           ; BSR set to: 0
 36823  008A7A  0012               	return	
 36824  008A7C                     __end_of_HALResetPinOutputValue:
 36825                           	opt stack 0
 36826                           tosu	equ	0xFFF
 36827                           tosh	equ	0xFFE
 36828                           tosl	equ	0xFFD
 36829                           pclath	equ	0xFFA
 36830                           tblptru	equ	0xFF8
 36831                           tblptrh	equ	0xFF7
 36832                           tblptrl	equ	0xFF6
 36833                           tablat	equ	0xFF5
 36834                           prodh	equ	0xFF4
 36835                           prodl	equ	0xFF3
 36836                           intcon	equ	0xFF2
 36837                           intcon2	equ	0xFF1
 36838                           intcon3	equ	0xFF0
 36839                           indf0	equ	0xFEF
 36840                           postinc0	equ	0xFEE
 36841                           plusw0	equ	0xFEB
 36842                           fsr0h	equ	0xFEA
 36843                           fsr0l	equ	0xFE9
 36844                           wreg	equ	0xFE8
 36845                           postinc1	equ	0xFE6
 36846                           postdec1	equ	0xFE5
 36847                           plusw1	equ	0xFE3
 36848                           fsr1h	equ	0xFE2
 36849                           fsr1l	equ	0xFE1
 36850                           indf2	equ	0xFDF
 36851                           postinc2	equ	0xFDE
 36852                           postdec2	equ	0xFDD
 36853                           plusw2	equ	0xFDB
 36854                           fsr2h	equ	0xFDA
 36855                           fsr2l	equ	0xFD9
 36856                           status	equ	0xFD8
 36857                           
 36858 ;; *************** function _HALResetPinMakeOutput *****************
 36859 ;; Defined at:
 36860 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36861 ;; Parameters:    Size  Location     Type
 36862 ;;		None
 36863 ;; Auto vars:     Size  Location     Type
 36864 ;;		None
 36865 ;; Return value:  Size  Location     Type
 36866 ;;                  1    wreg      void 
 36867 ;; Registers used:
 36868 ;;		None
 36869 ;; Tracked objects:
 36870 ;;		On entry : 0/0
 36871 ;;		On exit  : 0/0
 36872 ;;		Unchanged: 0/0
 36873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36878 ;;Total ram usage:        0 bytes
 36879 ;; Hardware stack levels used:    1
 36880 ;; Hardware stack levels required when called:    7
 36881 ;; This function calls:
 36882 ;;		Nothing
 36883 ;; This function is called by:
 36884 ;;		_RADIO_Reset
 36885 ;; This function uses a non-reentrant model
 36886 ;;
 36887                           
 36888                           	psect	text174
 36889  008CBE                     __ptext174:
 36890                           	opt stack 0
 36891  008CBE                     _HALResetPinMakeOutput:
 36892                           	opt stack 20
 36893                           
 36894                           ; BSR set to: 0
 36895                           ;incstack = 0
 36896                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 36897  008CBE  9494               	bcf	3988,2,c	;volatile
 36898  008CC0  0012               	return	
 36899  008CC2                     __end_of_HALResetPinMakeOutput:
 36900                           	opt stack 0
 36901                           tosu	equ	0xFFF
 36902                           tosh	equ	0xFFE
 36903                           tosl	equ	0xFFD
 36904                           pclath	equ	0xFFA
 36905                           tblptru	equ	0xFF8
 36906                           tblptrh	equ	0xFF7
 36907                           tblptrl	equ	0xFF6
 36908                           tablat	equ	0xFF5
 36909                           prodh	equ	0xFF4
 36910                           prodl	equ	0xFF3
 36911                           intcon	equ	0xFF2
 36912                           intcon2	equ	0xFF1
 36913                           intcon3	equ	0xFF0
 36914                           indf0	equ	0xFEF
 36915                           postinc0	equ	0xFEE
 36916                           plusw0	equ	0xFEB
 36917                           fsr0h	equ	0xFEA
 36918                           fsr0l	equ	0xFE9
 36919                           wreg	equ	0xFE8
 36920                           postinc1	equ	0xFE6
 36921                           postdec1	equ	0xFE5
 36922                           plusw1	equ	0xFE3
 36923                           fsr1h	equ	0xFE2
 36924                           fsr1l	equ	0xFE1
 36925                           indf2	equ	0xFDF
 36926                           postinc2	equ	0xFDE
 36927                           postdec2	equ	0xFDD
 36928                           plusw2	equ	0xFDB
 36929                           fsr2h	equ	0xFDA
 36930                           fsr2l	equ	0xFD9
 36931                           status	equ	0xFD8
 36932                           
 36933 ;; *************** function _HALResetPinMakeInput *****************
 36934 ;; Defined at:
 36935 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36936 ;; Parameters:    Size  Location     Type
 36937 ;;		None
 36938 ;; Auto vars:     Size  Location     Type
 36939 ;;		None
 36940 ;; Return value:  Size  Location     Type
 36941 ;;                  1    wreg      void 
 36942 ;; Registers used:
 36943 ;;		None
 36944 ;; Tracked objects:
 36945 ;;		On entry : 0/0
 36946 ;;		On exit  : 0/0
 36947 ;;		Unchanged: 0/0
 36948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36953 ;;Total ram usage:        0 bytes
 36954 ;; Hardware stack levels used:    1
 36955 ;; Hardware stack levels required when called:    7
 36956 ;; This function calls:
 36957 ;;		Nothing
 36958 ;; This function is called by:
 36959 ;;		_RADIO_Reset
 36960 ;; This function uses a non-reentrant model
 36961 ;;
 36962                           
 36963                           	psect	text175
 36964  008CC2                     __ptext175:
 36965                           	opt stack 0
 36966  008CC2                     _HALResetPinMakeInput:
 36967                           	opt stack 20
 36968                           
 36969                           ;incstack = 0
 36970                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 36971  008CC2  8494               	bsf	3988,2,c	;volatile
 36972  008CC4  0012               	return	
 36973  008CC6                     __end_of_HALResetPinMakeInput:
 36974                           	opt stack 0
 36975                           tosu	equ	0xFFF
 36976                           tosh	equ	0xFFE
 36977                           tosl	equ	0xFFD
 36978                           pclath	equ	0xFFA
 36979                           tblptru	equ	0xFF8
 36980                           tblptrh	equ	0xFF7
 36981                           tblptrl	equ	0xFF6
 36982                           tablat	equ	0xFF5
 36983                           prodh	equ	0xFF4
 36984                           prodl	equ	0xFF3
 36985                           intcon	equ	0xFF2
 36986                           intcon2	equ	0xFF1
 36987                           intcon3	equ	0xFF0
 36988                           indf0	equ	0xFEF
 36989                           postinc0	equ	0xFEE
 36990                           plusw0	equ	0xFEB
 36991                           fsr0h	equ	0xFEA
 36992                           fsr0l	equ	0xFE9
 36993                           wreg	equ	0xFE8
 36994                           postinc1	equ	0xFE6
 36995                           postdec1	equ	0xFE5
 36996                           plusw1	equ	0xFE3
 36997                           fsr1h	equ	0xFE2
 36998                           fsr1l	equ	0xFE1
 36999                           indf2	equ	0xFDF
 37000                           postinc2	equ	0xFDE
 37001                           postdec2	equ	0xFDD
 37002                           plusw2	equ	0xFDB
 37003                           fsr2h	equ	0xFDA
 37004                           fsr2l	equ	0xFD9
 37005                           status	equ	0xFD8
 37006                           
 37007 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 37008 ;; Defined at:
 37009 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37010 ;; Parameters:    Size  Location     Type
 37011 ;;  period          2   70[BANK0 ] unsigned int 
 37012 ;; Auto vars:     Size  Location     Type
 37013 ;;  iCtr            1   80[BANK0 ] unsigned char 
 37014 ;; Return value:  Size  Location     Type
 37015 ;;                  1    wreg      void 
 37016 ;; Registers used:
 37017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37018 ;; Tracked objects:
 37019 ;;		On entry : 0/0
 37020 ;;		On exit  : 0/0
 37021 ;;		Unchanged: 0/0
 37022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37024 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37026 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37027 ;;Total ram usage:       11 bytes
 37028 ;; Hardware stack levels used:    1
 37029 ;; Hardware stack levels required when called:   11
 37030 ;; This function calls:
 37031 ;;		_SwTimerSetTimeout
 37032 ;;		_SwTimerStart
 37033 ;;		_SwTimerStop
 37034 ;;		___lldiv
 37035 ;;		___lmul
 37036 ;; This function is called by:
 37037 ;;		_LORAWAN_Reset
 37038 ;; This function uses a non-reentrant model
 37039 ;;
 37040                           
 37041                           	psect	text176
 37042  0051FA                     __ptext176:
 37043                           	opt stack 0
 37044  0051FA                     _LORAWAN_LinkCheckConfigure:
 37045                           	opt stack 17
 37046                           
 37047                           ;lorawan.c: 757: uint8_t iCtr;
 37048                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 37049                           
 37050                           ;incstack = 0
 37051  0051FA  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 37052  0051FE  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 37053  005202  0100               	movlb	0	; () banked
 37054  005204  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 37055  005206  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 37056  005208  0EE8               	movlw	232
 37057  00520A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 37058  00520C  0E03               	movlw	3
 37059  00520E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 37060  005210  0E00               	movlw	0
 37061  005212  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 37062  005214  0E00               	movlw	0
 37063  005216  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 37064  005218  EC38  F03E         	call	___lmul	;wreg free
 37065  00521C  C09A  F2CC         	movff	?___lmul,_loRa+204
 37066  005220  C09B  F2CD         	movff	?___lmul+1,_loRa+205
 37067  005224  C09C  F2CE         	movff	?___lmul+2,_loRa+206
 37068  005228  C09D  F2CF         	movff	?___lmul+3,_loRa+207
 37069                           
 37070                           ;lorawan.c: 761: if (period == 0)
 37071  00522C  0100               	movlb	0	; () banked
 37072  00522E  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 37073  005230  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 37074  005232  A4D8               	btfss	status,2,c
 37075  005234  D02B               	goto	l2059
 37076                           
 37077                           ; BSR set to: 0
 37078                           ;lorawan.c: 762: {
 37079                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 37080  005236  0102               	movlb	2	; () banked
 37081  005238  51E7               	movf	(_loRa+231)& (0+255),w,b
 37082  00523A  ECDE  F043         	call	_SwTimerStop
 37083                           
 37084                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 37085  00523E  0102               	movlb	2	; () banked
 37086  005240  9503               	bcf	(_loRa+3)& (0+255),2,b
 37087                           
 37088                           ; BSR set to: 2
 37089                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 37090  005242  0E00               	movlw	0
 37091  005244  0100               	movlb	0	; () banked
 37092  005246  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 37093  005248  D01A               	goto	l2060
 37094  00524A                     
 37095                           ; BSR set to: 0
 37096                           ;lorawan.c: 766: {
 37097                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 37098                           
 37099                           ; BSR set to: 0
 37100  00524A  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37101  00524C  0D02               	mullw	2
 37102  00524E  0EA8               	movlw	low (_loRa+168)
 37103  005250  24F3               	addwf	prodl,w,c
 37104  005252  6ED9               	movwf	fsr2l,c
 37105  005254  0E02               	movlw	high (_loRa+168)
 37106  005256  20F4               	addwfc	prodh,w,c
 37107  005258  6EDA               	movwf	fsr2h,c
 37108  00525A  0E02               	movlw	2
 37109  00525C  18DE               	xorwf	postinc2,w,c
 37110  00525E  A4D8               	btfss	status,2,c
 37111  005260  D00C               	goto	l2062
 37112                           
 37113                           ; BSR set to: 0
 37114                           ;lorawan.c: 768: {
 37115                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 37116  005262  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37117  005264  0D02               	mullw	2
 37118  005266  0EA8               	movlw	low (_loRa+168)
 37119  005268  24F3               	addwf	prodl,w,c
 37120  00526A  6ED9               	movwf	fsr2l,c
 37121  00526C  0E02               	movlw	high (_loRa+168)
 37122  00526E  20F4               	addwfc	prodh,w,c
 37123  005270  6EDA               	movwf	fsr2h,c
 37124  005272  0EFF               	movlw	255
 37125  005274  6EDF               	movwf	indf2,c
 37126                           
 37127                           ; BSR set to: 0
 37128                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 37129  005276  0102               	movlb	2	; () banked
 37130  005278  07A7               	decf	(_loRa+167)& (0+255),f,b
 37131  00527A                     l2062:
 37132                           
 37133                           ; BSR set to: 2
 37134  00527A  0100               	movlb	0	; () banked
 37135  00527C  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 37136  00527E                     l2060:
 37137                           
 37138                           ; BSR set to: 0
 37139                           
 37140                           ; BSR set to: 0
 37141  00527E  0102               	movlb	2	; () banked
 37142  005280  51A7               	movf	(_loRa+167)& (0+255),w,b
 37143  005282  0100               	movlb	0	; () banked
 37144  005284  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37145  005286  B0D8               	btfsc	status,0,c
 37146  005288  0012               	return	
 37147  00528A  D7DF               	goto	l2061
 37148  00528C                     l2059:
 37149                           
 37150                           ; BSR set to: 0
 37151                           ;lorawan.c: 776: else
 37152                           ;lorawan.c: 777: {
 37153                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 37154  00528C  0102               	movlb	2	; () banked
 37155  00528E  8503               	bsf	(_loRa+3)& (0+255),2,b
 37156                           
 37157                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 37158  005290  A902               	btfss	(_loRa+2)& (0+255),4,b
 37159  005292  0012               	return	
 37160                           
 37161                           ; BSR set to: 2
 37162                           ;lorawan.c: 782: {
 37163                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 37164  005294  51CF               	movf	(_loRa+207)& (0+255),w,b
 37165  005296  E107               	bnz	u19330
 37166  005298  29CC               	incf	(_loRa+204)& (0+255),w,b
 37167  00529A  0EFF               	movlw	255
 37168  00529C  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 37169  00529E  0E0F               	movlw	15
 37170  0052A0  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 37171  0052A2  A0D8               	btfss	status,0,c
 37172  0052A4  D01D               	goto	l2067
 37173  0052A6                     u19330:
 37174                           
 37175                           ; BSR set to: 2
 37176  0052A6  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 37177  0052AA  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 37178  0052AE  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 37179  0052B2  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 37180  0052B6  0E7D               	movlw	125
 37181  0052B8  0100               	movlb	0	; () banked
 37182  0052BA  6F64               	movwf	___lldiv@divisor& (0+255),b
 37183  0052BC  0E00               	movlw	0
 37184  0052BE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37185  0052C0  0E00               	movlw	0
 37186  0052C2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37187  0052C4  0E00               	movlw	0
 37188  0052C6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37189  0052C8  EC7A  F039         	call	___lldiv	;wreg free
 37190  0052CC  0E0C               	movlw	12
 37191  0052CE                     u19345:
 37192  0052CE  90D8               	bcf	status,0,c
 37193  0052D0  0100               	movlb	0	; () banked
 37194  0052D2  3760               	rlcf	?___lldiv& (0+255),f,b
 37195  0052D4  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 37196  0052D6  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 37197  0052D8  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 37198  0052DA  2EE8               	decfsz	wreg,f,c
 37199  0052DC  D7F8               	goto	u19345
 37200  0052DE  D023               	goto	L28
 37201  0052E0                     l2067:
 37202                           
 37203                           ; BSR set to: 0
 37204  0052E0  C2CC  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 37205  0052E4  C2CD  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 37206  0052E8  C2CE  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 37207  0052EC  C2CF  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 37208  0052F0  0E0C               	movlw	12
 37209  0052F2                     u19355:
 37210  0052F2  90D8               	bcf	status,0,c
 37211  0052F4  0100               	movlb	0	; () banked
 37212  0052F6  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 37213  0052F8  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 37214  0052FA  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 37215  0052FC  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 37216  0052FE  2EE8               	decfsz	wreg,f,c
 37217  005300  D7F8               	goto	u19355
 37218  005302  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 37219  005306  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 37220  00530A  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 37221  00530E  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 37222  005312  0E7D               	movlw	125
 37223  005314  6F64               	movwf	___lldiv@divisor& (0+255),b
 37224  005316  0E00               	movlw	0
 37225  005318  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37226  00531A  0E00               	movlw	0
 37227  00531C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37228  00531E  0E00               	movlw	0
 37229  005320  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37230  005322  EC7A  F039         	call	___lldiv	;wreg free
 37231  005326                     L28:
 37232  005326  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3459
 37233  00532A  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3459+1
 37234  00532E  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3459+2
 37235  005332  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3459+3
 37236  005336  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$3459,SwTimerSetTimeout@timeout
 37237  00533A  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$3459+1,SwTimerSetTimeout@timeout+1
 37238  00533E  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$3459+2,SwTimerSetTimeout@timeout+2
 37239  005342  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$3459+3,SwTimerSetTimeout@timeout+3
 37240  005346  0102               	movlb	2	; () banked
 37241  005348  51E7               	movf	(_loRa+231)& (0+255),w,b
 37242  00534A  ECC6  F040         	call	_SwTimerSetTimeout
 37243                           
 37244                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 37245  00534E  0102               	movlb	2	; () banked
 37246  005350  51E7               	movf	(_loRa+231)& (0+255),w,b
 37247  005352  EC01  F037         	call	_SwTimerStart
 37248  005356  0012               	return	
 37249  005358                     __end_of_LORAWAN_LinkCheckConfigure:
 37250                           	opt stack 0
 37251                           tosu	equ	0xFFF
 37252                           tosh	equ	0xFFE
 37253                           tosl	equ	0xFFD
 37254                           pclath	equ	0xFFA
 37255                           tblptru	equ	0xFF8
 37256                           tblptrh	equ	0xFF7
 37257                           tblptrl	equ	0xFF6
 37258                           tablat	equ	0xFF5
 37259                           prodh	equ	0xFF4
 37260                           prodl	equ	0xFF3
 37261                           intcon	equ	0xFF2
 37262                           intcon2	equ	0xFF1
 37263                           intcon3	equ	0xFF0
 37264                           indf0	equ	0xFEF
 37265                           postinc0	equ	0xFEE
 37266                           plusw0	equ	0xFEB
 37267                           fsr0h	equ	0xFEA
 37268                           fsr0l	equ	0xFE9
 37269                           wreg	equ	0xFE8
 37270                           postinc1	equ	0xFE6
 37271                           postdec1	equ	0xFE5
 37272                           plusw1	equ	0xFE3
 37273                           fsr1h	equ	0xFE2
 37274                           fsr1l	equ	0xFE1
 37275                           indf2	equ	0xFDF
 37276                           postinc2	equ	0xFDE
 37277                           postdec2	equ	0xFDD
 37278                           plusw2	equ	0xFDB
 37279                           fsr2h	equ	0xFDA
 37280                           fsr2l	equ	0xFD9
 37281                           status	equ	0xFD8
 37282                           
 37283 ;; *************** function ___lmul *****************
 37284 ;; Defined at:
 37285 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 37286 ;; Parameters:    Size  Location     Type
 37287 ;;  multiplier      4   58[BANK0 ] unsigned long 
 37288 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 37289 ;; Auto vars:     Size  Location     Type
 37290 ;;  product         4   66[BANK0 ] unsigned long 
 37291 ;; Return value:  Size  Location     Type
 37292 ;;                  4   58[BANK0 ] unsigned long 
 37293 ;; Registers used:
 37294 ;;		wreg, status,2, status,0
 37295 ;; Tracked objects:
 37296 ;;		On entry : 0/0
 37297 ;;		On exit  : 0/0
 37298 ;;		Unchanged: 0/0
 37299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37300 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37301 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37303 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37304 ;;Total ram usage:       12 bytes
 37305 ;; Hardware stack levels used:    1
 37306 ;; Hardware stack levels required when called:    7
 37307 ;; This function calls:
 37308 ;;		Nothing
 37309 ;; This function is called by:
 37310 ;;		_RADIO_WriteConfiguration
 37311 ;;		_RADIO_TxDone
 37312 ;;		_RADIO_FSKPacketSent
 37313 ;;		_LORAWAN_TxDone
 37314 ;;		_ExecuteNewChannel
 37315 ;;		_ExecuteRxParamSetupReq
 37316 ;;		_UpdateCfList
 37317 ;;		_LORAWAN_LinkCheckConfigure
 37318 ;;		_rand
 37319 ;;		_LORAWAN_Pause
 37320 ;; This function uses a non-reentrant model
 37321 ;;
 37322                           
 37323                           	psect	text177
 37324  007C70                     __ptext177:
 37325                           	opt stack 0
 37326  007C70                     ___lmul:
 37327                           	opt stack 18
 37328                           
 37329                           ;incstack = 0
 37330  007C70  0E00               	movlw	0
 37331  007C72  0100               	movlb	0	; () banked
 37332  007C74  6FA2               	movwf	___lmul@product& (0+255),b
 37333  007C76  0E00               	movlw	0
 37334  007C78  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 37335  007C7A  0E00               	movlw	0
 37336  007C7C  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 37337  007C7E  0E00               	movlw	0
 37338  007C80  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 37339  007C82                     
 37340                           ; BSR set to: 0
 37341                           
 37342                           ; BSR set to: 0
 37343  007C82  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 37344  007C84  D008               	goto	l2524
 37345                           
 37346                           ; BSR set to: 0
 37347  007C86  519E               	movf	___lmul@multiplicand& (0+255),w,b
 37348  007C88  27A2               	addwf	___lmul@product& (0+255),f,b
 37349  007C8A  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37350  007C8C  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 37351  007C8E  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37352  007C90  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 37353  007C92  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37354  007C94  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 37355  007C96                     l2524:
 37356                           
 37357                           ; BSR set to: 0
 37358                           
 37359                           ; BSR set to: 0
 37360  007C96  90D8               	bcf	status,0,c
 37361  007C98  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 37362  007C9A  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37363  007C9C  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37364  007C9E  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37365                           
 37366                           ; BSR set to: 0
 37367  007CA0  90D8               	bcf	status,0,c
 37368  007CA2  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37369  007CA4  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37370  007CA6  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37371  007CA8  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 37372  007CAA  519A               	movf	___lmul@multiplier& (0+255),w,b
 37373  007CAC  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37374  007CAE  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37375  007CB0  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37376  007CB2  A4D8               	btfss	status,2,c
 37377  007CB4  D7E6               	goto	l2523
 37378                           
 37379                           ; BSR set to: 0
 37380  007CB6  C0A2  F09A         	movff	___lmul@product,?___lmul
 37381  007CBA  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 37382  007CBE  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 37383  007CC2  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 37384                           
 37385                           ; BSR set to: 0
 37386  007CC6  0012               	return		;funcret
 37387  007CC8                     __end_of___lmul:
 37388                           	opt stack 0
 37389                           tosu	equ	0xFFF
 37390                           tosh	equ	0xFFE
 37391                           tosl	equ	0xFFD
 37392                           pclath	equ	0xFFA
 37393                           tblptru	equ	0xFF8
 37394                           tblptrh	equ	0xFF7
 37395                           tblptrl	equ	0xFF6
 37396                           tablat	equ	0xFF5
 37397                           prodh	equ	0xFF4
 37398                           prodl	equ	0xFF3
 37399                           intcon	equ	0xFF2
 37400                           intcon2	equ	0xFF1
 37401                           intcon3	equ	0xFF0
 37402                           indf0	equ	0xFEF
 37403                           postinc0	equ	0xFEE
 37404                           plusw0	equ	0xFEB
 37405                           fsr0h	equ	0xFEA
 37406                           fsr0l	equ	0xFE9
 37407                           wreg	equ	0xFE8
 37408                           postinc1	equ	0xFE6
 37409                           postdec1	equ	0xFE5
 37410                           plusw1	equ	0xFE3
 37411                           fsr1h	equ	0xFE2
 37412                           fsr1l	equ	0xFE1
 37413                           indf2	equ	0xFDF
 37414                           postinc2	equ	0xFDE
 37415                           postdec2	equ	0xFDD
 37416                           plusw2	equ	0xFDB
 37417                           fsr2h	equ	0xFDA
 37418                           fsr2l	equ	0xFD9
 37419                           status	equ	0xFD8
 37420                           
 37421 ;; *************** function ___lldiv *****************
 37422 ;; Defined at:
 37423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 37424 ;; Parameters:    Size  Location     Type
 37425 ;;  dividend        4    0[BANK0 ] unsigned long 
 37426 ;;  divisor         4    4[BANK0 ] unsigned long 
 37427 ;; Auto vars:     Size  Location     Type
 37428 ;;  quotient        4    8[BANK0 ] unsigned long 
 37429 ;;  counter         1   12[BANK0 ] unsigned char 
 37430 ;; Return value:  Size  Location     Type
 37431 ;;                  4    0[BANK0 ] unsigned long 
 37432 ;; Registers used:
 37433 ;;		wreg, status,2, status,0
 37434 ;; Tracked objects:
 37435 ;;		On entry : 0/0
 37436 ;;		On exit  : 0/0
 37437 ;;		Unchanged: 0/0
 37438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37440 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37442 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37443 ;;Total ram usage:       13 bytes
 37444 ;; Hardware stack levels used:    1
 37445 ;; Hardware stack levels required when called:    7
 37446 ;; This function calls:
 37447 ;;		Nothing
 37448 ;; This function is called by:
 37449 ;;		_RADIO_WriteFrequency
 37450 ;;		_RADIO_WriteFSKFrequencyDeviation
 37451 ;;		_RADIO_WriteFSKBitRate
 37452 ;;		_RADIO_Transmit
 37453 ;;		_RADIO_ReceiveStart
 37454 ;;		_LORAWAN_TxDone
 37455 ;;		_LORAWAN_RxTimeout
 37456 ;;		_StartReTxTimer
 37457 ;;		_DutyCycleCallback
 37458 ;;		_LORAWAN_LinkCheckConfigure
 37459 ;;		_LORAWAN_LinkCheckCallback
 37460 ;;		_UpdateRetransmissionAckTimeoutState
 37461 ;;		_UpdateJoinSuccessState
 37462 ;; This function uses a non-reentrant model
 37463 ;;
 37464                           
 37465                           	psect	text178
 37466  0072F4                     __ptext178:
 37467                           	opt stack 0
 37468  0072F4                     ___lldiv:
 37469                           	opt stack 21
 37470                           
 37471                           ; BSR set to: 0
 37472                           ;incstack = 0
 37473  0072F4  0E00               	movlw	0
 37474  0072F6  0100               	movlb	0	; () banked
 37475  0072F8  6F68               	movwf	___lldiv@quotient& (0+255),b
 37476  0072FA  0E00               	movlw	0
 37477  0072FC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37478  0072FE  0E00               	movlw	0
 37479  007300  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37480  007302  0E00               	movlw	0
 37481  007304  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37482                           
 37483                           ; BSR set to: 0
 37484  007306  5164               	movf	___lldiv@divisor& (0+255),w,b
 37485  007308  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37486  00730A  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37487  00730C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37488  00730E  B4D8               	btfsc	status,2,c
 37489  007310  D02A               	goto	l2867
 37490                           
 37491                           ; BSR set to: 0
 37492  007312  0E01               	movlw	1
 37493  007314  6F6C               	movwf	___lldiv@counter& (0+255),b
 37494  007316  D006               	goto	l2862
 37495  007318                     
 37496                           ; BSR set to: 0
 37497                           
 37498                           ; BSR set to: 0
 37499  007318  90D8               	bcf	status,0,c
 37500  00731A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37501  00731C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37502  00731E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37503  007320  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37504  007322  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37505  007324                     l2862:
 37506                           
 37507                           ; BSR set to: 0
 37508                           
 37509                           ; BSR set to: 0
 37510  007324  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37511  007326  D7F8               	goto	l2863
 37512  007328                     u14340:
 37513                           
 37514                           ; BSR set to: 0
 37515                           
 37516                           ; BSR set to: 0
 37517                           
 37518                           ; BSR set to: 0
 37519  007328  90D8               	bcf	status,0,c
 37520  00732A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37521  00732C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37522  00732E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37523  007330  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37524                           
 37525                           ; BSR set to: 0
 37526  007332  5164               	movf	___lldiv@divisor& (0+255),w,b
 37527  007334  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37528  007336  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37529  007338  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37530  00733A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37531  00733C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37532  00733E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37533  007340  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37534  007342  A0D8               	btfss	status,0,c
 37535  007344  D009               	goto	l2866
 37536                           
 37537                           ; BSR set to: 0
 37538  007346  5164               	movf	___lldiv@divisor& (0+255),w,b
 37539  007348  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37540  00734A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37541  00734C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37542  00734E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37543  007350  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37544  007352  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37545  007354  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37546                           
 37547                           ; BSR set to: 0
 37548  007356  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37549  007358                     l2866:
 37550                           
 37551                           ; BSR set to: 0
 37552                           
 37553                           ; BSR set to: 0
 37554  007358  90D8               	bcf	status,0,c
 37555  00735A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37556  00735C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37557  00735E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37558  007360  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37559                           
 37560                           ; BSR set to: 0
 37561  007362  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37562  007364  D7E1               	goto	u14340
 37563  007366                     l2867:
 37564                           
 37565                           ; BSR set to: 0
 37566                           
 37567                           ; BSR set to: 0
 37568  007366  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37569  00736A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37570  00736E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37571  007372  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37572                           
 37573                           ; BSR set to: 0
 37574  007376  0012               	return		;funcret
 37575  007378                     __end_of___lldiv:
 37576                           	opt stack 0
 37577                           tosu	equ	0xFFF
 37578                           tosh	equ	0xFFE
 37579                           tosl	equ	0xFFD
 37580                           pclath	equ	0xFFA
 37581                           tblptru	equ	0xFF8
 37582                           tblptrh	equ	0xFF7
 37583                           tblptrl	equ	0xFF6
 37584                           tablat	equ	0xFF5
 37585                           prodh	equ	0xFF4
 37586                           prodl	equ	0xFF3
 37587                           intcon	equ	0xFF2
 37588                           intcon2	equ	0xFF1
 37589                           intcon3	equ	0xFF0
 37590                           indf0	equ	0xFEF
 37591                           postinc0	equ	0xFEE
 37592                           plusw0	equ	0xFEB
 37593                           fsr0h	equ	0xFEA
 37594                           fsr0l	equ	0xFE9
 37595                           wreg	equ	0xFE8
 37596                           postinc1	equ	0xFE6
 37597                           postdec1	equ	0xFE5
 37598                           plusw1	equ	0xFE3
 37599                           fsr1h	equ	0xFE2
 37600                           fsr1l	equ	0xFE1
 37601                           indf2	equ	0xFDF
 37602                           postinc2	equ	0xFDE
 37603                           postdec2	equ	0xFDD
 37604                           plusw2	equ	0xFDB
 37605                           fsr2h	equ	0xFDA
 37606                           fsr2l	equ	0xFD9
 37607                           status	equ	0xFD8
 37608                           
 37609 ;; *************** function _SwTimerStop *****************
 37610 ;; Defined at:
 37611 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37612 ;; Parameters:    Size  Location     Type
 37613 ;;  timerId         1    wreg     unsigned char 
 37614 ;; Auto vars:     Size  Location     Type
 37615 ;;  timerId         1    0[BANK0 ] unsigned char 
 37616 ;; Return value:  Size  Location     Type
 37617 ;;                  1    wreg      void 
 37618 ;; Registers used:
 37619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37620 ;; Tracked objects:
 37621 ;;		On entry : 0/0
 37622 ;;		On exit  : 0/0
 37623 ;;		Unchanged: 0/0
 37624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37628 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37629 ;;Total ram usage:        1 bytes
 37630 ;; Hardware stack levels used:    1
 37631 ;; Hardware stack levels required when called:    7
 37632 ;; This function calls:
 37633 ;;		Nothing
 37634 ;; This function is called by:
 37635 ;;		_RADIO_Init
 37636 ;;		_RADIO_Transmit
 37637 ;;		_RADIO_RxDone
 37638 ;;		_RADIO_FSKPayloadReady
 37639 ;;		_RADIO_RxTimeout
 37640 ;;		_RADIO_TxDone
 37641 ;;		_RADIO_FSKPacketSent
 37642 ;;		_RADIO_RxFSKTimeout
 37643 ;;		_LORAWAN_TxDone
 37644 ;;		_StopAllSoftwareTimers
 37645 ;;		_LORAWAN_LinkCheckConfigure
 37646 ;;		_LORAWAN_RxDone
 37647 ;; This function uses a non-reentrant model
 37648 ;;
 37649                           
 37650                           	psect	text179
 37651  0087BC                     __ptext179:
 37652                           	opt stack 0
 37653  0087BC                     _SwTimerStop:
 37654                           	opt stack 21
 37655                           
 37656                           ; BSR set to: 0
 37657                           ;incstack = 0
 37658                           ;SwTimerStop@timerId stored from wreg
 37659  0087BC  0100               	movlb	0	; () banked
 37660  0087BE  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 37661                           
 37662                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37663  0087C0  9EF2               	bcf	intcon,7,c	;volatile
 37664                           
 37665                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37666  0087C2  0100               	movlb	0	; () banked
 37667  0087C4  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 37668  0087C6  0D08               	mullw	8
 37669  0087C8  0E04               	movlw	4
 37670  0087CA  26F3               	addwf	prodl,f,c
 37671  0087CC  0E00               	movlw	0
 37672  0087CE  22F4               	addwfc	prodh,f,c
 37673  0087D0  0E00               	movlw	low _swTimers
 37674  0087D2  24F3               	addwf	prodl,w,c
 37675  0087D4  6ED9               	movwf	fsr2l,c
 37676  0087D6  0E03               	movlw	high _swTimers
 37677  0087D8  20F4               	addwfc	prodh,w,c
 37678  0087DA  6EDA               	movwf	fsr2h,c
 37679  0087DC  0E00               	movlw	0
 37680  0087DE  6EDF               	movwf	indf2,c
 37681                           
 37682                           ; BSR set to: 0
 37683                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37684  0087E0  8EF2               	bsf	intcon,7,c	;volatile
 37685                           
 37686                           ; BSR set to: 0
 37687  0087E2  0012               	return		;funcret
 37688  0087E4                     __end_of_SwTimerStop:
 37689                           	opt stack 0
 37690                           tosu	equ	0xFFF
 37691                           tosh	equ	0xFFE
 37692                           tosl	equ	0xFFD
 37693                           pclath	equ	0xFFA
 37694                           tblptru	equ	0xFF8
 37695                           tblptrh	equ	0xFF7
 37696                           tblptrl	equ	0xFF6
 37697                           tablat	equ	0xFF5
 37698                           prodh	equ	0xFF4
 37699                           prodl	equ	0xFF3
 37700                           intcon	equ	0xFF2
 37701                           intcon2	equ	0xFF1
 37702                           intcon3	equ	0xFF0
 37703                           indf0	equ	0xFEF
 37704                           postinc0	equ	0xFEE
 37705                           plusw0	equ	0xFEB
 37706                           fsr0h	equ	0xFEA
 37707                           fsr0l	equ	0xFE9
 37708                           wreg	equ	0xFE8
 37709                           postinc1	equ	0xFE6
 37710                           postdec1	equ	0xFE5
 37711                           plusw1	equ	0xFE3
 37712                           fsr1h	equ	0xFE2
 37713                           fsr1l	equ	0xFE1
 37714                           indf2	equ	0xFDF
 37715                           postinc2	equ	0xFDE
 37716                           postdec2	equ	0xFDD
 37717                           plusw2	equ	0xFDB
 37718                           fsr2h	equ	0xFDA
 37719                           fsr2l	equ	0xFD9
 37720                           status	equ	0xFD8
 37721                           
 37722 ;; *************** function _SwTimerStart *****************
 37723 ;; Defined at:
 37724 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37725 ;; Parameters:    Size  Location     Type
 37726 ;;  timerId         1    wreg     unsigned char 
 37727 ;; Auto vars:     Size  Location     Type
 37728 ;;  timerId         1   57[BANK0 ] unsigned char 
 37729 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 37730 ;; Return value:  Size  Location     Type
 37731 ;;                  1    wreg      void 
 37732 ;; Registers used:
 37733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37734 ;; Tracked objects:
 37735 ;;		On entry : 0/0
 37736 ;;		On exit  : 0/0
 37737 ;;		Unchanged: 0/0
 37738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37740 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37742 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37743 ;;Total ram usage:        9 bytes
 37744 ;; Hardware stack levels used:    1
 37745 ;; Hardware stack levels required when called:   10
 37746 ;; This function calls:
 37747 ;;		_SwTimersInterrupt
 37748 ;;		_TMR_OverrideRemaining
 37749 ;; This function is called by:
 37750 ;;		_RADIO_Transmit
 37751 ;;		_RADIO_ReceiveStart
 37752 ;;		_LORAWAN_TxDone
 37753 ;;		_LORAWAN_RxTimeout
 37754 ;;		_StartReTxTimer
 37755 ;;		_DutyCycleCallback
 37756 ;;		_LORAWAN_Join
 37757 ;;		_LORAWAN_LinkCheckConfigure
 37758 ;;		_LORAWAN_LinkCheckCallback
 37759 ;;		_UpdateRetransmissionAckTimeoutState
 37760 ;;		_UpdateJoinSuccessState
 37761 ;; This function uses a non-reentrant model
 37762 ;;
 37763                           
 37764                           	psect	text180
 37765  006E02                     __ptext180:
 37766                           	opt stack 0
 37767  006E02                     _SwTimerStart:
 37768                           	opt stack 18
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;incstack = 0
 37772                           ;SwTimerStart@timerId stored from wreg
 37773  006E02  0100               	movlb	0	; () banked
 37774  006E04  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 37775                           
 37776                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 37777                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37778  006E06  9EF2               	bcf	intcon,7,c	;volatile
 37779                           
 37780                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37781  006E08  ECE6  F02D         	call	_SwTimersInterrupt	;wreg free
 37782  006E0C  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37783  006E10  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37784  006E14  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37785  006E18  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37786                           
 37787                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37788  006E1C  0100               	movlb	0	; () banked
 37789  006E1E  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37790  006E20  0D08               	mullw	8
 37791  006E22  0E00               	movlw	low _swTimers
 37792  006E24  24F3               	addwf	prodl,w,c
 37793  006E26  6ED9               	movwf	fsr2l,c
 37794  006E28  0E03               	movlw	high _swTimers
 37795  006E2A  20F4               	addwfc	prodh,w,c
 37796  006E2C  6EDA               	movwf	fsr2h,c
 37797  006E2E  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37798  006E30  5CDE               	subwf	postinc2,w,c
 37799  006E32  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37800  006E34  58DE               	subwfb	postinc2,w,c
 37801  006E36  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37802  006E38  58DE               	subwfb	postinc2,w,c
 37803  006E3A  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37804  006E3C  58DE               	subwfb	postinc2,w,c
 37805  006E3E  B0D8               	btfsc	status,0,c
 37806  006E40  D010               	goto	l305
 37807                           
 37808                           ; BSR set to: 0
 37809                           ;sw_timer.c: 225: {
 37810                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37811  006E42  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37812  006E44  0D08               	mullw	8
 37813  006E46  0E00               	movlw	low _swTimers
 37814  006E48  24F3               	addwf	prodl,w,c
 37815  006E4A  6ED9               	movwf	fsr2l,c
 37816  006E4C  0E03               	movlw	high _swTimers
 37817  006E4E  20F4               	addwfc	prodh,w,c
 37818  006E50  6EDA               	movwf	fsr2h,c
 37819  006E52  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 37820  006E56  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 37821  006E5A  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 37822  006E5E  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 37823  006E62                     l305:
 37824                           
 37825                           ; BSR set to: 0
 37826                           ;sw_timer.c: 227: }
 37827                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37828                           
 37829                           ; BSR set to: 0
 37830  006E62  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37831  006E66  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37832  006E6A  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37833  006E6E  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37834  006E72  EC4C  F037         	call	_TMR_OverrideRemaining	;wreg free
 37835                           
 37836                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37837  006E76  0100               	movlb	0	; () banked
 37838  006E78  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37839  006E7A  0D08               	mullw	8
 37840  006E7C  0E04               	movlw	4
 37841  006E7E  26F3               	addwf	prodl,f,c
 37842  006E80  0E00               	movlw	0
 37843  006E82  22F4               	addwfc	prodh,f,c
 37844  006E84  0E00               	movlw	low _swTimers
 37845  006E86  24F3               	addwf	prodl,w,c
 37846  006E88  6ED9               	movwf	fsr2l,c
 37847  006E8A  0E03               	movlw	high _swTimers
 37848  006E8C  20F4               	addwfc	prodh,w,c
 37849  006E8E  6EDA               	movwf	fsr2h,c
 37850  006E90  0E01               	movlw	1
 37851  006E92  6EDF               	movwf	indf2,c
 37852                           
 37853                           ; BSR set to: 0
 37854                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37855  006E94  8EF2               	bsf	intcon,7,c	;volatile
 37856                           
 37857                           ; BSR set to: 0
 37858  006E96  0012               	return		;funcret
 37859  006E98                     __end_of_SwTimerStart:
 37860                           	opt stack 0
 37861                           tosu	equ	0xFFF
 37862                           tosh	equ	0xFFE
 37863                           tosl	equ	0xFFD
 37864                           pclath	equ	0xFFA
 37865                           tblptru	equ	0xFF8
 37866                           tblptrh	equ	0xFF7
 37867                           tblptrl	equ	0xFF6
 37868                           tablat	equ	0xFF5
 37869                           prodh	equ	0xFF4
 37870                           prodl	equ	0xFF3
 37871                           intcon	equ	0xFF2
 37872                           intcon2	equ	0xFF1
 37873                           intcon3	equ	0xFF0
 37874                           indf0	equ	0xFEF
 37875                           postinc0	equ	0xFEE
 37876                           plusw0	equ	0xFEB
 37877                           fsr0h	equ	0xFEA
 37878                           fsr0l	equ	0xFE9
 37879                           wreg	equ	0xFE8
 37880                           postinc1	equ	0xFE6
 37881                           postdec1	equ	0xFE5
 37882                           plusw1	equ	0xFE3
 37883                           fsr1h	equ	0xFE2
 37884                           fsr1l	equ	0xFE1
 37885                           indf2	equ	0xFDF
 37886                           postinc2	equ	0xFDE
 37887                           postdec2	equ	0xFDD
 37888                           plusw2	equ	0xFDB
 37889                           fsr2h	equ	0xFDA
 37890                           fsr2l	equ	0xFD9
 37891                           status	equ	0xFD8
 37892                           
 37893 ;; *************** function _TMR_OverrideRemaining *****************
 37894 ;; Defined at:
 37895 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37896 ;; Parameters:    Size  Location     Type
 37897 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37898 ;; Auto vars:     Size  Location     Type
 37899 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37900 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37901 ;; Return value:  Size  Location     Type
 37902 ;;                  1    wreg      void 
 37903 ;; Registers used:
 37904 ;;		wreg, status,2, status,0, cstack
 37905 ;; Tracked objects:
 37906 ;;		On entry : 0/0
 37907 ;;		On exit  : 0/0
 37908 ;;		Unchanged: 0/0
 37909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37913 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37914 ;;Total ram usage:       10 bytes
 37915 ;; Hardware stack levels used:    1
 37916 ;; Hardware stack levels required when called:    9
 37917 ;; This function calls:
 37918 ;;		_TMR_SwapTimer
 37919 ;; This function is called by:
 37920 ;;		_SwTimerStart
 37921 ;; This function uses a non-reentrant model
 37922 ;;
 37923                           
 37924                           	psect	text181
 37925  006E98                     __ptext181:
 37926                           	opt stack 0
 37927  006E98                     _TMR_OverrideRemaining:
 37928                           	opt stack 18
 37929                           
 37930                           ;sw_timer.c: 67: uint16_t tmrVal;
 37931                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 37932                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 37933                           
 37934                           ; BSR set to: 0
 37935                           ;incstack = 0
 37936  006E98  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37937  006E9A  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37938  006E9C  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37939  006E9E  E104               	bnz	u14430
 37940  006EA0  0E0B               	movlw	11
 37941  006EA2  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37942  006EA4  A0D8               	btfss	status,0,c
 37943  006EA6  0012               	return	
 37944  006EA8                     u14430:
 37945                           
 37946                           ;sw_timer.c: 72: {
 37947                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37948  006EA8  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37949  006EAA  0100               	movlb	0	; () banked
 37950  006EAC  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37951  006EAE  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37952  006EB0  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37953  006EB2  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37954  006EB4  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37955  006EB6  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37956  006EB8  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37957  006EBA  B0D8               	btfsc	status,0,c
 37958  006EBC  0012               	return	
 37959                           
 37960                           ; BSR set to: 0
 37961                           ;sw_timer.c: 74: {
 37962                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37963  006EBE  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37964  006EC2  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37965  006EC6  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37966  006ECA  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 37967                           
 37968                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 37969  006ECE  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 37970  006ED2  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 37971                           
 37972                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 37973  006ED6  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 37974  006EDA  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 37975  006EDE  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37976  006EE0  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37977  006EE2  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37978  006EE4  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37979  006EE6  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 37980  006EEA  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 37981                           
 37982                           ; BSR set to: 0
 37983                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 37984  006EEE  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 37985  006EF2  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 37986  006EF6  ECB0  F03F         	call	_TMR_SwapTimer	;wreg free
 37987  006EFA  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 37988  006EFE  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 37989                           
 37990                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 37991  006F02  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 37992  006F06  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 37993  006F0A  0100               	movlb	0	; () banked
 37994  006F0C  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37995  006F0E  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37996  006F10  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37997  006F12  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37998  006F14  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 37999  006F16  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 38000  006F18  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 38001  006F1A  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 38002  006F1C  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 38003  006F1E  2640               	addwf	_ticksAdded,f,c	;volatile
 38004  006F20  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 38005  006F22  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 38006  006F24  0E00               	movlw	0
 38007  006F26  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 38008  006F28  0E00               	movlw	0
 38009  006F2A  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 38010                           
 38011                           ; BSR set to: 0
 38012  006F2C  0012               	return	
 38013  006F2E                     __end_of_TMR_OverrideRemaining:
 38014                           	opt stack 0
 38015                           tosu	equ	0xFFF
 38016                           tosh	equ	0xFFE
 38017                           tosl	equ	0xFFD
 38018                           pclath	equ	0xFFA
 38019                           tblptru	equ	0xFF8
 38020                           tblptrh	equ	0xFF7
 38021                           tblptrl	equ	0xFF6
 38022                           tablat	equ	0xFF5
 38023                           prodh	equ	0xFF4
 38024                           prodl	equ	0xFF3
 38025                           intcon	equ	0xFF2
 38026                           intcon2	equ	0xFF1
 38027                           intcon3	equ	0xFF0
 38028                           indf0	equ	0xFEF
 38029                           postinc0	equ	0xFEE
 38030                           plusw0	equ	0xFEB
 38031                           fsr0h	equ	0xFEA
 38032                           fsr0l	equ	0xFE9
 38033                           wreg	equ	0xFE8
 38034                           postinc1	equ	0xFE6
 38035                           postdec1	equ	0xFE5
 38036                           plusw1	equ	0xFE3
 38037                           fsr1h	equ	0xFE2
 38038                           fsr1l	equ	0xFE1
 38039                           indf2	equ	0xFDF
 38040                           postinc2	equ	0xFDE
 38041                           postdec2	equ	0xFDD
 38042                           plusw2	equ	0xFDB
 38043                           fsr2h	equ	0xFDA
 38044                           fsr2l	equ	0xFD9
 38045                           status	equ	0xFD8
 38046                           
 38047 ;; *************** function _TMR_SwapTimer *****************
 38048 ;; Defined at:
 38049 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38050 ;; Parameters:    Size  Location     Type
 38051 ;;  timerVal        2    8[BANK0 ] unsigned int 
 38052 ;; Auto vars:     Size  Location     Type
 38053 ;;		None
 38054 ;; Return value:  Size  Location     Type
 38055 ;;                  2    8[BANK0 ] unsigned int 
 38056 ;; Registers used:
 38057 ;;		wreg, status,2, status,0, cstack
 38058 ;; Tracked objects:
 38059 ;;		On entry : 0/0
 38060 ;;		On exit  : 0/0
 38061 ;;		Unchanged: 0/0
 38062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38067 ;;Total ram usage:        2 bytes
 38068 ;; Hardware stack levels used:    1
 38069 ;; Hardware stack levels required when called:    8
 38070 ;; This function calls:
 38071 ;;		_TMR1_ReadTimer
 38072 ;;		_TMR1_WriteTimer
 38073 ;; This function is called by:
 38074 ;;		_TMR_OverrideRemaining
 38075 ;; This function uses a non-reentrant model
 38076 ;;
 38077                           
 38078                           	psect	text182
 38079  007F60                     __ptext182:
 38080                           	opt stack 0
 38081  007F60                     _TMR_SwapTimer:
 38082                           	opt stack 18
 38083                           
 38084                           ;sw_timer.c: 114: static uint16_t oldVal;
 38085                           ;sw_timer.c: 115: static uint16_t retVal;
 38086                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38087                           
 38088                           ;incstack = 0
 38089  007F60  EC4A  F044         	call	_TMR1_ReadTimer	;wreg free
 38090  007F64  C060  F173         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38091  007F68  C061  F174         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38092  007F6C                     
 38093                           ;sw_timer.c: 123: ;
 38094  007F6C  EC4A  F044         	call	_TMR1_ReadTimer	;wreg free
 38095  007F70  0101               	movlb	1	; () banked
 38096  007F72  5173               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 38097  007F74  0100               	movlb	0	; () banked
 38098  007F76  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 38099  007F78  E106               	bnz	l12609
 38100  007F7A  0101               	movlb	1	; () banked
 38101  007F7C  5174               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 38102  007F7E  0100               	movlb	0	; () banked
 38103  007F80  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 38104  007F82  B4D8               	btfsc	status,2,c
 38105  007F84  D7F3               	goto	l271
 38106  007F86                     l12609:
 38107                           
 38108                           ; BSR set to: 0
 38109                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38110  007F86  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 38111  007F8A  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 38112  007F8E  EC8B  F044         	call	_TMR1_WriteTimer	;wreg free
 38113                           
 38114                           ;sw_timer.c: 128: oldVal++;
 38115  007F92  0101               	movlb	1	; () banked
 38116  007F94  4B73               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 38117  007F96  2B74               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 38118                           
 38119                           ; BSR set to: 1
 38120                           ;sw_timer.c: 130: retVal = oldVal;
 38121  007F98  C173  F171         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38122  007F9C  C174  F172         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38123                           
 38124                           ; BSR set to: 1
 38125                           ;sw_timer.c: 132: return retVal;
 38126  007FA0  C171  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 38127  007FA4  C172  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 38128  007FA8  0012               	return	
 38129  007FAA                     __end_of_TMR_SwapTimer:
 38130                           	opt stack 0
 38131                           tosu	equ	0xFFF
 38132                           tosh	equ	0xFFE
 38133                           tosl	equ	0xFFD
 38134                           pclath	equ	0xFFA
 38135                           tblptru	equ	0xFF8
 38136                           tblptrh	equ	0xFF7
 38137                           tblptrl	equ	0xFF6
 38138                           tablat	equ	0xFF5
 38139                           prodh	equ	0xFF4
 38140                           prodl	equ	0xFF3
 38141                           intcon	equ	0xFF2
 38142                           intcon2	equ	0xFF1
 38143                           intcon3	equ	0xFF0
 38144                           indf0	equ	0xFEF
 38145                           postinc0	equ	0xFEE
 38146                           plusw0	equ	0xFEB
 38147                           fsr0h	equ	0xFEA
 38148                           fsr0l	equ	0xFE9
 38149                           wreg	equ	0xFE8
 38150                           postinc1	equ	0xFE6
 38151                           postdec1	equ	0xFE5
 38152                           plusw1	equ	0xFE3
 38153                           fsr1h	equ	0xFE2
 38154                           fsr1l	equ	0xFE1
 38155                           indf2	equ	0xFDF
 38156                           postinc2	equ	0xFDE
 38157                           postdec2	equ	0xFDD
 38158                           plusw2	equ	0xFDB
 38159                           fsr2h	equ	0xFDA
 38160                           fsr2l	equ	0xFD9
 38161                           status	equ	0xFD8
 38162                           
 38163 ;; *************** function _TMR1_WriteTimer *****************
 38164 ;; Defined at:
 38165 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 38166 ;; Parameters:    Size  Location     Type
 38167 ;;  timerVal        2    0[BANK0 ] unsigned int 
 38168 ;; Auto vars:     Size  Location     Type
 38169 ;;		None
 38170 ;; Return value:  Size  Location     Type
 38171 ;;                  1    wreg      void 
 38172 ;; Registers used:
 38173 ;;		wreg, status,2
 38174 ;; Tracked objects:
 38175 ;;		On entry : 0/0
 38176 ;;		On exit  : 0/0
 38177 ;;		Unchanged: 0/0
 38178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;Total ram usage:        2 bytes
 38184 ;; Hardware stack levels used:    1
 38185 ;; Hardware stack levels required when called:    7
 38186 ;; This function calls:
 38187 ;;		Nothing
 38188 ;; This function is called by:
 38189 ;;		_TMR_SwapTimer
 38190 ;;		_TMR1_Reload
 38191 ;; This function uses a non-reentrant model
 38192 ;;
 38193                           
 38194                           	psect	text183
 38195  008916                     __ptext183:
 38196                           	opt stack 0
 38197  008916                     _TMR1_WriteTimer:
 38198                           	opt stack 18
 38199                           
 38200                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 38201                           
 38202                           ; BSR set to: 1
 38203                           ;incstack = 0
 38204  008916  A4CD               	btfss	4045,2,c	;volatile
 38205  008918  D008               	goto	l1599
 38206                           
 38207                           ;tmr1.c: 124: {
 38208                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 38209  00891A  90CD               	bcf	4045,0,c	;volatile
 38210                           
 38211                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 38212  00891C  0100               	movlb	0	; () banked
 38213  00891E  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38214  008920  6ECF               	movwf	4047,c	;volatile
 38215                           
 38216                           ; BSR set to: 0
 38217                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 38218  008922  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38219                           
 38220                           ; BSR set to: 0
 38221                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 38222  008926  80CD               	bsf	4045,0,c	;volatile
 38223                           
 38224                           ;tmr1.c: 134: }
 38225  008928  0012               	return	
 38226  00892A                     l1599:
 38227                           
 38228                           ;tmr1.c: 135: else
 38229                           ;tmr1.c: 136: {
 38230                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 38231                           
 38232                           ; BSR set to: 0
 38233  00892A  0100               	movlb	0	; () banked
 38234  00892C  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38235  00892E  6ECF               	movwf	4047,c	;volatile
 38236                           
 38237                           ; BSR set to: 0
 38238                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 38239  008930  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38240  008934  0012               	return	
 38241  008936                     __end_of_TMR1_WriteTimer:
 38242                           	opt stack 0
 38243                           tosu	equ	0xFFF
 38244                           tosh	equ	0xFFE
 38245                           tosl	equ	0xFFD
 38246                           pclath	equ	0xFFA
 38247                           tblptru	equ	0xFF8
 38248                           tblptrh	equ	0xFF7
 38249                           tblptrl	equ	0xFF6
 38250                           tablat	equ	0xFF5
 38251                           prodh	equ	0xFF4
 38252                           prodl	equ	0xFF3
 38253                           intcon	equ	0xFF2
 38254                           intcon2	equ	0xFF1
 38255                           intcon3	equ	0xFF0
 38256                           indf0	equ	0xFEF
 38257                           postinc0	equ	0xFEE
 38258                           plusw0	equ	0xFEB
 38259                           fsr0h	equ	0xFEA
 38260                           fsr0l	equ	0xFE9
 38261                           wreg	equ	0xFE8
 38262                           postinc1	equ	0xFE6
 38263                           postdec1	equ	0xFE5
 38264                           plusw1	equ	0xFE3
 38265                           fsr1h	equ	0xFE2
 38266                           fsr1l	equ	0xFE1
 38267                           indf2	equ	0xFDF
 38268                           postinc2	equ	0xFDE
 38269                           postdec2	equ	0xFDD
 38270                           plusw2	equ	0xFDB
 38271                           fsr2h	equ	0xFDA
 38272                           fsr2l	equ	0xFD9
 38273                           status	equ	0xFD8
 38274                           
 38275 ;; *************** function _SwTimersInterrupt *****************
 38276 ;; Defined at:
 38277 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38278 ;; Parameters:    Size  Location     Type
 38279 ;;		None
 38280 ;; Auto vars:     Size  Location     Type
 38281 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 38282 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 38283 ;;  i               1   48[BANK0 ] unsigned char 
 38284 ;; Return value:  Size  Location     Type
 38285 ;;                  4   32[BANK0 ] unsigned long 
 38286 ;; Registers used:
 38287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38288 ;; Tracked objects:
 38289 ;;		On entry : 0/0
 38290 ;;		On exit  : 0/0
 38291 ;;		Unchanged: 0/0
 38292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38294 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38296 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38297 ;;Total ram usage:       17 bytes
 38298 ;; Hardware stack levels used:    1
 38299 ;; Hardware stack levels required when called:    9
 38300 ;; This function calls:
 38301 ;;		_TMR_GetDeltaTime
 38302 ;; This function is called by:
 38303 ;;		_SwTimerReadValue
 38304 ;;		_SwTimerStart
 38305 ;;		_SwTimersCanSleep
 38306 ;; This function uses a non-reentrant model
 38307 ;;
 38308                           
 38309                           	psect	text184
 38310  005BCC                     __ptext184:
 38311                           	opt stack 0
 38312  005BCC                     _SwTimersInterrupt:
 38313                           	opt stack 18
 38314                           
 38315                           ;sw_timer.c: 289: uint8_t i;
 38316                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38317                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38318                           
 38319                           ; BSR set to: 0
 38320                           ;incstack = 0
 38321  005BCC  0100               	movlb	0	; () banked
 38322  005BCE  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 38323  005BD0  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 38324  005BD2  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 38325  005BD4  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 38326                           
 38327                           ; BSR set to: 0
 38328                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38329  005BD6  EC11  F023         	call	_TMR_GetDeltaTime	;wreg free
 38330  005BDA  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 38331  005BDE  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38332  005BE2  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38333  005BE6  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38334                           
 38335                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38336  005BEA  0E00               	movlw	0
 38337  005BEC  0100               	movlb	0	; () banked
 38338  005BEE  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 38339  005BF0  D061               	goto	l328
 38340  005BF2                     
 38341                           ; BSR set to: 0
 38342                           ;sw_timer.c: 298: {
 38343                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38344                           
 38345                           ; BSR set to: 0
 38346  005BF2  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38347  005BF4  0D08               	mullw	8
 38348  005BF6  0E04               	movlw	4
 38349  005BF8  26F3               	addwf	prodl,f,c
 38350  005BFA  0E00               	movlw	0
 38351  005BFC  22F4               	addwfc	prodh,f,c
 38352  005BFE  0E00               	movlw	low _swTimers
 38353  005C00  24F3               	addwf	prodl,w,c
 38354  005C02  6ED9               	movwf	fsr2l,c
 38355  005C04  0E03               	movlw	high _swTimers
 38356  005C06  20F4               	addwfc	prodh,w,c
 38357  005C08  6EDA               	movwf	fsr2h,c
 38358  005C0A  04DE               	decf	postinc2,w,c
 38359  005C0C  A4D8               	btfss	status,2,c
 38360  005C0E  D051               	goto	l333
 38361                           
 38362                           ; BSR set to: 0
 38363                           ;sw_timer.c: 302: {
 38364                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38365  005C10  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38366  005C12  0D08               	mullw	8
 38367  005C14  0E00               	movlw	low _swTimers
 38368  005C16  24F3               	addwf	prodl,w,c
 38369  005C18  6ED9               	movwf	fsr2l,c
 38370  005C1A  0E03               	movlw	high _swTimers
 38371  005C1C  20F4               	addwfc	prodh,w,c
 38372  005C1E  6EDA               	movwf	fsr2h,c
 38373  005C20  50DE               	movf	postinc2,w,c
 38374  005C22  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38375  005C24  50DE               	movf	postinc2,w,c
 38376  005C26  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38377  005C28  50DE               	movf	postinc2,w,c
 38378  005C2A  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38379  005C2C  50DE               	movf	postinc2,w,c
 38380  005C2E  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38381  005C30  A0D8               	btfss	status,0,c
 38382  005C32  D00D               	goto	l331
 38383                           
 38384                           ; BSR set to: 0
 38385                           ;sw_timer.c: 304: {
 38386                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38387  005C34  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38388  005C36  0D08               	mullw	8
 38389  005C38  0E00               	movlw	low _swTimers
 38390  005C3A  24F3               	addwf	prodl,w,c
 38391  005C3C  6ED9               	movwf	fsr2l,c
 38392  005C3E  0E03               	movlw	high _swTimers
 38393  005C40  20F4               	addwfc	prodh,w,c
 38394  005C42  6EDA               	movwf	fsr2h,c
 38395  005C44  6ADE               	clrf	postinc2,c
 38396  005C46  6ADE               	clrf	postinc2,c
 38397  005C48  6ADE               	clrf	postinc2,c
 38398  005C4A  6ADD               	clrf	postdec2,c
 38399                           
 38400                           ;sw_timer.c: 306: }
 38401  005C4C  D032               	goto	l333
 38402  005C4E                     l331:
 38403                           
 38404                           ; BSR set to: 0
 38405                           ;sw_timer.c: 307: else
 38406                           ;sw_timer.c: 308: {
 38407                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38408                           
 38409                           ; BSR set to: 0
 38410  005C4E  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38411  005C50  0D08               	mullw	8
 38412  005C52  0E00               	movlw	low _swTimers
 38413  005C54  24F3               	addwf	prodl,w,c
 38414  005C56  6ED9               	movwf	fsr2l,c
 38415  005C58  0E03               	movlw	high _swTimers
 38416  005C5A  20F4               	addwfc	prodh,w,c
 38417  005C5C  6EDA               	movwf	fsr2h,c
 38418  005C5E  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38419  005C60  5EDE               	subwf	postinc2,f,c
 38420  005C62  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38421  005C64  5ADE               	subwfb	postinc2,f,c
 38422  005C66  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38423  005C68  5ADE               	subwfb	postinc2,f,c
 38424  005C6A  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38425  005C6C  5ADE               	subwfb	postinc2,f,c
 38426                           
 38427                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38428  005C6E  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38429  005C70  0D08               	mullw	8
 38430  005C72  0E00               	movlw	low _swTimers
 38431  005C74  24F3               	addwf	prodl,w,c
 38432  005C76  6ED9               	movwf	fsr2l,c
 38433  005C78  0E03               	movlw	high _swTimers
 38434  005C7A  20F4               	addwfc	prodh,w,c
 38435  005C7C  6EDA               	movwf	fsr2h,c
 38436  005C7E  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38437  005C80  5CDE               	subwf	postinc2,w,c
 38438  005C82  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38439  005C84  58DE               	subwfb	postinc2,w,c
 38440  005C86  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38441  005C88  58DE               	subwfb	postinc2,w,c
 38442  005C8A  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38443  005C8C  58DE               	subwfb	postinc2,w,c
 38444  005C8E  B0D8               	btfsc	status,0,c
 38445  005C90  D010               	goto	l333
 38446                           
 38447                           ; BSR set to: 0
 38448                           ;sw_timer.c: 313: {
 38449                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38450  005C92  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38451  005C94  0D08               	mullw	8
 38452  005C96  0E00               	movlw	low _swTimers
 38453  005C98  24F3               	addwf	prodl,w,c
 38454  005C9A  6ED9               	movwf	fsr2l,c
 38455  005C9C  0E03               	movlw	high _swTimers
 38456  005C9E  20F4               	addwfc	prodh,w,c
 38457  005CA0  6EDA               	movwf	fsr2h,c
 38458  005CA2  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38459  005CA6  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38460  005CAA  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38461  005CAE  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38462  005CB2                     l333:
 38463                           
 38464                           ; BSR set to: 0
 38465                           
 38466                           ; BSR set to: 0
 38467                           
 38468                           ; BSR set to: 0
 38469                           
 38470                           ; BSR set to: 0
 38471  005CB2  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 38472  005CB4                     l328:
 38473                           
 38474                           ; BSR set to: 0
 38475                           
 38476                           ; BSR set to: 0
 38477  005CB4  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38478  005CB6  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 38479  005CB8  A0D8               	btfss	status,0,c
 38480  005CBA  D79B               	goto	l329
 38481                           
 38482                           ; BSR set to: 0
 38483                           ;sw_timer.c: 315: }
 38484                           ;sw_timer.c: 316: }
 38485                           ;sw_timer.c: 317: }
 38486                           ;sw_timer.c: 318: }
 38487                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38488  005CBC  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38489  005CC0  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38490  005CC4  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38491  005CC8  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38492                           
 38493                           ; BSR set to: 0
 38494  005CCC  0012               	return		;funcret
 38495  005CCE                     __end_of_SwTimersInterrupt:
 38496                           	opt stack 0
 38497                           tosu	equ	0xFFF
 38498                           tosh	equ	0xFFE
 38499                           tosl	equ	0xFFD
 38500                           pclath	equ	0xFFA
 38501                           tblptru	equ	0xFF8
 38502                           tblptrh	equ	0xFF7
 38503                           tblptrl	equ	0xFF6
 38504                           tablat	equ	0xFF5
 38505                           prodh	equ	0xFF4
 38506                           prodl	equ	0xFF3
 38507                           intcon	equ	0xFF2
 38508                           intcon2	equ	0xFF1
 38509                           intcon3	equ	0xFF0
 38510                           indf0	equ	0xFEF
 38511                           postinc0	equ	0xFEE
 38512                           plusw0	equ	0xFEB
 38513                           fsr0h	equ	0xFEA
 38514                           fsr0l	equ	0xFE9
 38515                           wreg	equ	0xFE8
 38516                           postinc1	equ	0xFE6
 38517                           postdec1	equ	0xFE5
 38518                           plusw1	equ	0xFE3
 38519                           fsr1h	equ	0xFE2
 38520                           fsr1l	equ	0xFE1
 38521                           indf2	equ	0xFDF
 38522                           postinc2	equ	0xFDE
 38523                           postdec2	equ	0xFDD
 38524                           plusw2	equ	0xFDB
 38525                           fsr2h	equ	0xFDA
 38526                           fsr2l	equ	0xFD9
 38527                           status	equ	0xFD8
 38528                           
 38529 ;; *************** function _TMR_GetDeltaTime *****************
 38530 ;; Defined at:
 38531 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38532 ;; Parameters:    Size  Location     Type
 38533 ;;		None
 38534 ;; Auto vars:     Size  Location     Type
 38535 ;;		None
 38536 ;; Return value:  Size  Location     Type
 38537 ;;                  4    8[BANK0 ] unsigned long 
 38538 ;; Registers used:
 38539 ;;		wreg, status,2, status,0, cstack
 38540 ;; Tracked objects:
 38541 ;;		On entry : 0/0
 38542 ;;		On exit  : 0/0
 38543 ;;		Unchanged: 0/0
 38544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38547 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38548 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38549 ;;Total ram usage:       24 bytes
 38550 ;; Hardware stack levels used:    1
 38551 ;; Hardware stack levels required when called:    8
 38552 ;; This function calls:
 38553 ;;		_TMR1_ReadTimer
 38554 ;; This function is called by:
 38555 ;;		_SwTimersInterrupt
 38556 ;; This function uses a non-reentrant model
 38557 ;;
 38558                           
 38559                           	psect	text185
 38560  004622                     __ptext185:
 38561                           	opt stack 0
 38562  004622                     _TMR_GetDeltaTime:
 38563                           	opt stack 18
 38564                           
 38565                           ;sw_timer.c: 90: static uint32_t retVal;
 38566                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38567                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38568                           
 38569                           ; BSR set to: 0
 38570                           ;incstack = 0
 38571  004622  EC4A  F044         	call	_TMR1_ReadTimer	;wreg free
 38572  004626  C060  F175         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38573  00462A  C061  F176         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38574                           
 38575                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38576  00462E  0447               	decf	_timerOverflow,w,c	;volatile
 38577  004630  A4D8               	btfss	status,2,c
 38578  004632  D071               	goto	l261
 38579                           
 38580                           ;sw_timer.c: 96: {
 38581                           ;sw_timer.c: 97: timerOverflow = 0;
 38582  004634  0E00               	movlw	0
 38583  004636  6E47               	movwf	_timerOverflow,c	;volatile
 38584                           
 38585                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38586  004638  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38587  00463C  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38588  004640  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38589  004644  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38590  004648  0100               	movlb	0	; () banked
 38591  00464A  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38592  00464C  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38593  00464E  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38594  004650  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38595  004652  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38596  004654  0E00               	movlw	0
 38597  004656  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38598  004658  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38599  00465A  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38600  00465C  5044               	movf	_reloadVal,w,c	;volatile
 38601  00465E  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38602  004660  5045               	movf	_reloadVal+1,w,c	;volatile
 38603  004662  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38604  004664  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38605  004666  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38606  004668  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38607  00466A  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38608  00466C  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38609  00466E  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38610  004670  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38611  004672  0E00               	movlw	0
 38612  004674  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38613  004676  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38614  004678  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38615  00467A  0101               	movlb	1	; () banked
 38616  00467C  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38617  00467E  0100               	movlb	0	; () banked
 38618  004680  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38619  004682  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38620  004684  0101               	movlb	1	; () banked
 38621  004686  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38622  004688  0100               	movlb	0	; () banked
 38623  00468A  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38624  00468C  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38625  00468E  0E00               	movlw	0
 38626  004690  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38627  004692  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38628  004694  0E00               	movlw	0
 38629  004696  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38630  004698  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38631  00469A  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 38632  00469C  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38633  00469E  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 38634  0046A0  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38635  0046A2  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38636  0046A4  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 38637  0046A6  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38638  0046A8  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38639  0046AA  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 38640  0046AC  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38641  0046AE  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38642  0046B0  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 38643  0046B2  5040               	movf	_ticksAdded,w,c	;volatile
 38644  0046B4  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 38645  0046B6  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 38646  0046B8  5041               	movf	_ticksAdded+1,w,c	;volatile
 38647  0046BA  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 38648  0046BC  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 38649  0046BE  5042               	movf	_ticksAdded+2,w,c	;volatile
 38650  0046C0  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 38651  0046C2  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 38652  0046C4  5043               	movf	_ticksAdded+3,w,c	;volatile
 38653  0046C6  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 38654  0046C8  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 38655  0046CA  0E00               	movlw	0
 38656  0046CC  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 38657  0046CE  0101               	movlb	1	; () banked
 38658  0046D0  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38659  0046D2  0E00               	movlw	0
 38660  0046D4  0100               	movlb	0	; () banked
 38661  0046D6  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 38662  0046D8  0101               	movlb	1	; () banked
 38663  0046DA  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38664  0046DC  0E01               	movlw	1
 38665  0046DE  0100               	movlb	0	; () banked
 38666  0046E0  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 38667  0046E2  0101               	movlb	1	; () banked
 38668  0046E4  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38669  0046E6  0E00               	movlw	0
 38670  0046E8  0100               	movlb	0	; () banked
 38671  0046EA  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 38672  0046EC  0101               	movlb	1	; () banked
 38673  0046EE  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38674                           
 38675                           ; BSR set to: 1
 38676                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38677  0046F0  C175  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38678  0046F4  C176  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38679  0046F8  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 38680  0046FA  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 38681                           
 38682                           ; BSR set to: 1
 38683                           ;sw_timer.c: 100: ticksAdded = 0;
 38684  0046FC  0E00               	movlw	0
 38685  0046FE  6E40               	movwf	_ticksAdded,c	;volatile
 38686  004700  0E00               	movlw	0
 38687  004702  6E41               	movwf	_ticksAdded+1,c	;volatile
 38688  004704  0E00               	movlw	0
 38689  004706  6E42               	movwf	_ticksAdded+2,c	;volatile
 38690  004708  0E00               	movlw	0
 38691  00470A  6E43               	movwf	_ticksAdded+3,c	;volatile
 38692                           
 38693                           ; BSR set to: 1
 38694                           ;sw_timer.c: 101: reloadVal = 0;
 38695  00470C  0E00               	movlw	0
 38696  00470E  6E45               	movwf	_reloadVal+1,c	;volatile
 38697  004710  0E00               	movlw	0
 38698  004712  6E44               	movwf	_reloadVal,c	;volatile
 38699                           
 38700                           ;sw_timer.c: 102: }
 38701  004714  D049               	goto	l262
 38702  004716                     l261:
 38703                           
 38704                           ;sw_timer.c: 103: else
 38705                           ;sw_timer.c: 104: {
 38706                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38707                           
 38708                           ; BSR set to: 1
 38709  004716  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38710  00471A  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38711  00471E  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38712  004722  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38713  004726  0100               	movlb	0	; () banked
 38714  004728  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38715  00472A  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38716  00472C  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38717  00472E  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38718  004730  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38719  004732  0E00               	movlw	0
 38720  004734  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38721  004736  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38722  004738  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38723  00473A  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 38724  00473E  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 38725  004742  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38726  004744  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38727  004746  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38728  004748  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38729  00474A  0101               	movlb	1	; () banked
 38730  00474C  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38731  00474E  0100               	movlb	0	; () banked
 38732  004750  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38733  004752  0101               	movlb	1	; () banked
 38734  004754  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38735  004756  0100               	movlb	0	; () banked
 38736  004758  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38737  00475A  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38738  00475C  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 38739  00475E  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38740  004760  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38741  004762  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38742  004764  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38743  004766  0E00               	movlw	0
 38744  004768  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38745  00476A  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38746  00476C  0E00               	movlw	0
 38747  00476E  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38748  004770  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38749  004772  5040               	movf	_ticksAdded,w,c	;volatile
 38750  004774  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38751  004776  0101               	movlb	1	; () banked
 38752  004778  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38753  00477A  5041               	movf	_ticksAdded+1,w,c	;volatile
 38754  00477C  0100               	movlb	0	; () banked
 38755  00477E  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38756  004780  0101               	movlb	1	; () banked
 38757  004782  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38758  004784  5042               	movf	_ticksAdded+2,w,c	;volatile
 38759  004786  0100               	movlb	0	; () banked
 38760  004788  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38761  00478A  0101               	movlb	1	; () banked
 38762  00478C  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38763  00478E  5043               	movf	_ticksAdded+3,w,c	;volatile
 38764  004790  0100               	movlb	0	; () banked
 38765  004792  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38766  004794  0101               	movlb	1	; () banked
 38767  004796  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38768                           
 38769                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38770  004798  516D               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38771  00479A  263C               	addwf	_ticksAccounted,f,c	;volatile
 38772  00479C  516E               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38773  00479E  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 38774  0047A0  516F               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38775  0047A2  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 38776  0047A4  5170               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38777  0047A6  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 38778  0047A8                     l262:
 38779                           
 38780                           ; BSR set to: 1
 38781                           ;sw_timer.c: 107: }
 38782                           ;sw_timer.c: 109: return retVal;
 38783                           
 38784                           ; BSR set to: 1
 38785  0047A8  C16D  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38786  0047AC  C16E  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38787  0047B0  C16F  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38788  0047B4  C170  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38789  0047B8  0012               	return	
 38790  0047BA                     __end_of_TMR_GetDeltaTime:
 38791                           	opt stack 0
 38792                           tosu	equ	0xFFF
 38793                           tosh	equ	0xFFE
 38794                           tosl	equ	0xFFD
 38795                           pclath	equ	0xFFA
 38796                           tblptru	equ	0xFF8
 38797                           tblptrh	equ	0xFF7
 38798                           tblptrl	equ	0xFF6
 38799                           tablat	equ	0xFF5
 38800                           prodh	equ	0xFF4
 38801                           prodl	equ	0xFF3
 38802                           intcon	equ	0xFF2
 38803                           intcon2	equ	0xFF1
 38804                           intcon3	equ	0xFF0
 38805                           indf0	equ	0xFEF
 38806                           postinc0	equ	0xFEE
 38807                           plusw0	equ	0xFEB
 38808                           fsr0h	equ	0xFEA
 38809                           fsr0l	equ	0xFE9
 38810                           wreg	equ	0xFE8
 38811                           postinc1	equ	0xFE6
 38812                           postdec1	equ	0xFE5
 38813                           plusw1	equ	0xFE3
 38814                           fsr1h	equ	0xFE2
 38815                           fsr1l	equ	0xFE1
 38816                           indf2	equ	0xFDF
 38817                           postinc2	equ	0xFDE
 38818                           postdec2	equ	0xFDD
 38819                           plusw2	equ	0xFDB
 38820                           fsr2h	equ	0xFDA
 38821                           fsr2l	equ	0xFD9
 38822                           status	equ	0xFD8
 38823                           
 38824 ;; *************** function _TMR1_ReadTimer *****************
 38825 ;; Defined at:
 38826 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38827 ;; Parameters:    Size  Location     Type
 38828 ;;		None
 38829 ;; Auto vars:     Size  Location     Type
 38830 ;;  readVal         2    4[BANK0 ] unsigned int 
 38831 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38832 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38833 ;; Return value:  Size  Location     Type
 38834 ;;                  2    0[BANK0 ] unsigned int 
 38835 ;; Registers used:
 38836 ;;		wreg, status,2
 38837 ;; Tracked objects:
 38838 ;;		On entry : 0/0
 38839 ;;		On exit  : 0/0
 38840 ;;		Unchanged: 0/0
 38841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38845 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38846 ;;Total ram usage:        8 bytes
 38847 ;; Hardware stack levels used:    1
 38848 ;; Hardware stack levels required when called:    7
 38849 ;; This function calls:
 38850 ;;		Nothing
 38851 ;; This function is called by:
 38852 ;;		_TMR_GetDeltaTime
 38853 ;;		_TMR_SwapTimer
 38854 ;; This function uses a non-reentrant model
 38855 ;;
 38856                           
 38857                           	psect	text186
 38858  008894                     __ptext186:
 38859                           	opt stack 0
 38860  008894                     _TMR1_ReadTimer:
 38861                           	opt stack 18
 38862                           
 38863                           ;tmr1.c: 107: uint16_t readVal;
 38864                           ;tmr1.c: 108: uint8_t readValHigh;
 38865                           ;tmr1.c: 109: uint8_t readValLow;
 38866                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 38867                           
 38868                           ; BSR set to: 1
 38869                           ;incstack = 0
 38870  008894  82CD               	bsf	4045,1,c	;volatile
 38871                           
 38872                           ;tmr1.c: 113: readValLow = TMR1L;
 38873  008896  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38874                           
 38875                           ;tmr1.c: 114: readValHigh = TMR1H;
 38876  00889A  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38877                           
 38878                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38879  00889E  0100               	movlb	0	; () banked
 38880  0088A0  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38881  0088A2  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 38882  0088A4  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38883  0088A6  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38884  0088A8  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38885                           
 38886                           ; BSR set to: 0
 38887                           ;tmr1.c: 118: return readVal;
 38888  0088AC  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38889  0088B0  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38890  0088B4  0012               	return	
 38891  0088B6                     __end_of_TMR1_ReadTimer:
 38892                           	opt stack 0
 38893                           tosu	equ	0xFFF
 38894                           tosh	equ	0xFFE
 38895                           tosl	equ	0xFFD
 38896                           pclath	equ	0xFFA
 38897                           tblptru	equ	0xFF8
 38898                           tblptrh	equ	0xFF7
 38899                           tblptrl	equ	0xFF6
 38900                           tablat	equ	0xFF5
 38901                           prodh	equ	0xFF4
 38902                           prodl	equ	0xFF3
 38903                           intcon	equ	0xFF2
 38904                           intcon2	equ	0xFF1
 38905                           intcon3	equ	0xFF0
 38906                           indf0	equ	0xFEF
 38907                           postinc0	equ	0xFEE
 38908                           plusw0	equ	0xFEB
 38909                           fsr0h	equ	0xFEA
 38910                           fsr0l	equ	0xFE9
 38911                           wreg	equ	0xFE8
 38912                           postinc1	equ	0xFE6
 38913                           postdec1	equ	0xFE5
 38914                           plusw1	equ	0xFE3
 38915                           fsr1h	equ	0xFE2
 38916                           fsr1l	equ	0xFE1
 38917                           indf2	equ	0xFDF
 38918                           postinc2	equ	0xFDE
 38919                           postdec2	equ	0xFDD
 38920                           plusw2	equ	0xFDB
 38921                           fsr2h	equ	0xFDA
 38922                           fsr2l	equ	0xFD9
 38923                           status	equ	0xFD8
 38924                           
 38925 ;; *************** function _SwTimerSetTimeout *****************
 38926 ;; Defined at:
 38927 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38928 ;; Parameters:    Size  Location     Type
 38929 ;;  timerId         1    wreg     unsigned char 
 38930 ;;  timeout         4   13[BANK0 ] unsigned long 
 38931 ;; Auto vars:     Size  Location     Type
 38932 ;;  timerId         1   21[BANK0 ] unsigned char 
 38933 ;; Return value:  Size  Location     Type
 38934 ;;                  1    wreg      void 
 38935 ;; Registers used:
 38936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38937 ;; Tracked objects:
 38938 ;;		On entry : 0/0
 38939 ;;		On exit  : 0/0
 38940 ;;		Unchanged: 0/0
 38941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38945 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38946 ;;Total ram usage:        9 bytes
 38947 ;; Hardware stack levels used:    1
 38948 ;; Hardware stack levels required when called:    7
 38949 ;; This function calls:
 38950 ;;		Nothing
 38951 ;; This function is called by:
 38952 ;;		_RADIO_Transmit
 38953 ;;		_RADIO_ReceiveStart
 38954 ;;		_LORAWAN_TxDone
 38955 ;;		_LORAWAN_RxTimeout
 38956 ;;		_StartReTxTimer
 38957 ;;		_DutyCycleCallback
 38958 ;;		_LORAWAN_Join
 38959 ;;		_LORAWAN_LinkCheckConfigure
 38960 ;;		_LORAWAN_LinkCheckCallback
 38961 ;;		_UpdateRetransmissionAckTimeoutState
 38962 ;;		_UpdateJoinSuccessState
 38963 ;; This function uses a non-reentrant model
 38964 ;;
 38965                           
 38966                           	psect	text187
 38967  00818C                     __ptext187:
 38968                           	opt stack 0
 38969  00818C                     _SwTimerSetTimeout:
 38970                           	opt stack 21
 38971                           
 38972                           ; BSR set to: 0
 38973                           ;incstack = 0
 38974                           ;SwTimerSetTimeout@timerId stored from wreg
 38975  00818C  0100               	movlb	0	; () banked
 38976  00818E  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38977                           
 38978                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38979  008190  9EF2               	bcf	intcon,7,c	;volatile
 38980                           
 38981                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38982  008192  0EE0               	movlw	224
 38983  008194  0100               	movlb	0	; () banked
 38984  008196  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38985  008198  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 38986  00819A  0EFF               	movlw	255
 38987  00819C  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38988  00819E  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38989  0081A0  0EFF               	movlw	255
 38990  0081A2  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38991  0081A4  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38992  0081A6  0EFF               	movlw	255
 38993  0081A8  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38994  0081AA  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38995  0081AC  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38996  0081AE  0D08               	mullw	8
 38997  0081B0  0E00               	movlw	low _swTimers
 38998  0081B2  24F3               	addwf	prodl,w,c
 38999  0081B4  6ED9               	movwf	fsr2l,c
 39000  0081B6  0E03               	movlw	high _swTimers
 39001  0081B8  20F4               	addwfc	prodh,w,c
 39002  0081BA  6EDA               	movwf	fsr2h,c
 39003  0081BC  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 39004  0081C0  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 39005  0081C4  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 39006  0081C8  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 39007                           
 39008                           ; BSR set to: 0
 39009                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 39010  0081CC  8EF2               	bsf	intcon,7,c	;volatile
 39011                           
 39012                           ; BSR set to: 0
 39013  0081CE  0012               	return		;funcret
 39014  0081D0                     __end_of_SwTimerSetTimeout:
 39015                           	opt stack 0
 39016                           tosu	equ	0xFFF
 39017                           tosh	equ	0xFFE
 39018                           tosl	equ	0xFFD
 39019                           pclath	equ	0xFFA
 39020                           tblptru	equ	0xFF8
 39021                           tblptrh	equ	0xFF7
 39022                           tblptrl	equ	0xFF6
 39023                           tablat	equ	0xFF5
 39024                           prodh	equ	0xFF4
 39025                           prodl	equ	0xFF3
 39026                           intcon	equ	0xFF2
 39027                           intcon2	equ	0xFF1
 39028                           intcon3	equ	0xFF0
 39029                           indf0	equ	0xFEF
 39030                           postinc0	equ	0xFEE
 39031                           plusw0	equ	0xFEB
 39032                           fsr0h	equ	0xFEA
 39033                           fsr0l	equ	0xFE9
 39034                           wreg	equ	0xFE8
 39035                           postinc1	equ	0xFE6
 39036                           postdec1	equ	0xFE5
 39037                           plusw1	equ	0xFE3
 39038                           fsr1h	equ	0xFE2
 39039                           fsr1l	equ	0xFE1
 39040                           indf2	equ	0xFDF
 39041                           postinc2	equ	0xFDE
 39042                           postdec2	equ	0xFDD
 39043                           plusw2	equ	0xFDB
 39044                           fsr2h	equ	0xFDA
 39045                           fsr2l	equ	0xFD9
 39046                           status	equ	0xFD8
 39047                           
 39048 ;; *************** function _InitDefault868Channels *****************
 39049 ;; Defined at:
 39050 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39051 ;; Parameters:    Size  Location     Type
 39052 ;;		None
 39053 ;; Auto vars:     Size  Location     Type
 39054 ;;  i               1   11[BANK0 ] unsigned char 
 39055 ;; Return value:  Size  Location     Type
 39056 ;;                  1    wreg      void 
 39057 ;; Registers used:
 39058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39059 ;; Tracked objects:
 39060 ;;		On entry : 0/0
 39061 ;;		On exit  : 0/0
 39062 ;;		Unchanged: 0/0
 39063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39068 ;;Total ram usage:        1 bytes
 39069 ;; Hardware stack levels used:    1
 39070 ;; Hardware stack levels required when called:    8
 39071 ;; This function calls:
 39072 ;;		_memcpy
 39073 ;;		_memset
 39074 ;; This function is called by:
 39075 ;;		_LORAWAN_Reset
 39076 ;; This function uses a non-reentrant model
 39077 ;;
 39078                           
 39079                           	psect	text188
 39080  0070D4                     __ptext188:
 39081                           	opt stack 0
 39082  0070D4                     _InitDefault868Channels:
 39083                           	opt stack 20
 39084                           
 39085                           ;lorawan_eu.c: 981: uint8_t i;
 39086                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 39087                           
 39088                           ; BSR set to: 0
 39089                           ;incstack = 0
 39090  0070D4  0E00               	movlw	low _Channels
 39091  0070D6  0100               	movlb	0	; () banked
 39092  0070D8  6F60               	movwf	memset@p1& (0+255),b
 39093  0070DA  0E04               	movlw	high _Channels
 39094  0070DC  6F61               	movwf	(memset@p1+1)& (0+255),b
 39095  0070DE  0E00               	movlw	0
 39096  0070E0  6F63               	movwf	(memset@c+1)& (0+255),b
 39097  0070E2  0E00               	movlw	0
 39098  0070E4  6F62               	movwf	memset@c& (0+255),b
 39099  0070E6  0E00               	movlw	0
 39100  0070E8  6F65               	movwf	(memset@n+1)& (0+255),b
 39101  0070EA  0EE0               	movlw	224
 39102  0070EC  6F64               	movwf	memset@n& (0+255),b
 39103  0070EE  EC6E  F042         	call	_memset	;wreg free
 39104                           
 39105                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 39106  0070F2  0E00               	movlw	low _Channels
 39107  0070F4  0100               	movlb	0	; () banked
 39108  0070F6  6F60               	movwf	memcpy@d1& (0+255),b
 39109  0070F8  0E04               	movlw	high _Channels
 39110  0070FA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39111  0070FC  0ED2               	movlw	low _DefaultChannels868
 39112  0070FE  6F62               	movwf	memcpy@s1& (0+255),b
 39113  007100  0EFF               	movlw	high _DefaultChannels868
 39114  007102  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39115  007104  0E00               	movlw	0
 39116  007106  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39117  007108  0E2A               	movlw	42
 39118  00710A  6F64               	movwf	memcpy@n& (0+255),b
 39119  00710C  EC22  F03D         	call	_memcpy	;wreg free
 39120                           
 39121                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 39122  007110  0E03               	movlw	3
 39123  007112  0100               	movlb	0	; () banked
 39124  007114  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 39125  007116                     l15741:
 39126                           
 39127                           ; BSR set to: 0
 39128  007116  0E0F               	movlw	15
 39129  007118  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 39130  00711A  D001               	goto	l1246
 39131  00711C  0012               	return	
 39132  00711E                     l1246:
 39133                           
 39134                           ; BSR set to: 0
 39135                           ;lorawan_eu.c: 986: {
 39136                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 39137                           
 39138                           ; BSR set to: 0
 39139  00711E  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 39140  007120  0D0E               	mullw	14
 39141  007122  0E06               	movlw	6
 39142  007124  26F3               	addwf	prodl,f,c
 39143  007126  0E00               	movlw	0
 39144  007128  22F4               	addwfc	prodh,f,c
 39145  00712A  0E00               	movlw	low _Channels
 39146  00712C  24F3               	addwf	prodl,w,c
 39147  00712E  6ED9               	movwf	fsr2l,c
 39148  007130  0E04               	movlw	high _Channels
 39149  007132  20F4               	addwfc	prodh,w,c
 39150  007134  6EDA               	movwf	fsr2h,c
 39151  007136  0EFF               	movlw	255
 39152  007138  6EDE               	movwf	postinc2,c
 39153  00713A  0EFF               	movlw	255
 39154  00713C  6EDD               	movwf	postdec2,c
 39155                           
 39156                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 39157  00713E  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 39158  007140  0D0E               	mullw	14
 39159  007142  0E05               	movlw	5
 39160  007144  26F3               	addwf	prodl,f,c
 39161  007146  0E00               	movlw	0
 39162  007148  22F4               	addwfc	prodh,f,c
 39163  00714A  0E00               	movlw	low _Channels
 39164  00714C  24F3               	addwf	prodl,w,c
 39165  00714E  6ED9               	movwf	fsr2l,c
 39166  007150  0E04               	movlw	high _Channels
 39167  007152  20F4               	addwfc	prodh,w,c
 39168  007154  6EDA               	movwf	fsr2h,c
 39169  007156  0EFF               	movlw	255
 39170  007158  6EDF               	movwf	indf2,c
 39171                           
 39172                           ; BSR set to: 0
 39173  00715A  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 39174  00715C  D7DC               	goto	l15741
 39175  00715E                     __end_of_InitDefault868Channels:
 39176                           	opt stack 0
 39177                           tosu	equ	0xFFF
 39178                           tosh	equ	0xFFE
 39179                           tosl	equ	0xFFD
 39180                           pclath	equ	0xFFA
 39181                           tblptru	equ	0xFF8
 39182                           tblptrh	equ	0xFF7
 39183                           tblptrl	equ	0xFF6
 39184                           tablat	equ	0xFF5
 39185                           prodh	equ	0xFF4
 39186                           prodl	equ	0xFF3
 39187                           intcon	equ	0xFF2
 39188                           intcon2	equ	0xFF1
 39189                           intcon3	equ	0xFF0
 39190                           indf0	equ	0xFEF
 39191                           postinc0	equ	0xFEE
 39192                           plusw0	equ	0xFEB
 39193                           fsr0h	equ	0xFEA
 39194                           fsr0l	equ	0xFE9
 39195                           wreg	equ	0xFE8
 39196                           postinc1	equ	0xFE6
 39197                           postdec1	equ	0xFE5
 39198                           plusw1	equ	0xFE3
 39199                           fsr1h	equ	0xFE2
 39200                           fsr1l	equ	0xFE1
 39201                           indf2	equ	0xFDF
 39202                           postinc2	equ	0xFDE
 39203                           postdec2	equ	0xFDD
 39204                           plusw2	equ	0xFDB
 39205                           fsr2h	equ	0xFDA
 39206                           fsr2l	equ	0xFD9
 39207                           status	equ	0xFD8
 39208                           
 39209 ;; *************** function _InitDefault433Channels *****************
 39210 ;; Defined at:
 39211 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39212 ;; Parameters:    Size  Location     Type
 39213 ;;		None
 39214 ;; Auto vars:     Size  Location     Type
 39215 ;;  i               1   11[BANK0 ] unsigned char 
 39216 ;; Return value:  Size  Location     Type
 39217 ;;                  1    wreg      void 
 39218 ;; Registers used:
 39219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39220 ;; Tracked objects:
 39221 ;;		On entry : 0/0
 39222 ;;		On exit  : 0/0
 39223 ;;		Unchanged: 0/0
 39224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39229 ;;Total ram usage:        1 bytes
 39230 ;; Hardware stack levels used:    1
 39231 ;; Hardware stack levels required when called:    8
 39232 ;; This function calls:
 39233 ;;		_memcpy
 39234 ;;		_memset
 39235 ;; This function is called by:
 39236 ;;		_LORAWAN_Reset
 39237 ;; This function uses a non-reentrant model
 39238 ;;
 39239                           
 39240                           	psect	text189
 39241  00715E                     __ptext189:
 39242                           	opt stack 0
 39243  00715E                     _InitDefault433Channels:
 39244                           	opt stack 20
 39245                           
 39246                           ;lorawan_eu.c: 996: uint8_t i;
 39247                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 39248                           
 39249                           ; BSR set to: 0
 39250                           ;incstack = 0
 39251  00715E  0E00               	movlw	low _Channels
 39252  007160  0100               	movlb	0	; () banked
 39253  007162  6F60               	movwf	memset@p1& (0+255),b
 39254  007164  0E04               	movlw	high _Channels
 39255  007166  6F61               	movwf	(memset@p1+1)& (0+255),b
 39256  007168  0E00               	movlw	0
 39257  00716A  6F63               	movwf	(memset@c+1)& (0+255),b
 39258  00716C  0E00               	movlw	0
 39259  00716E  6F62               	movwf	memset@c& (0+255),b
 39260  007170  0E00               	movlw	0
 39261  007172  6F65               	movwf	(memset@n+1)& (0+255),b
 39262  007174  0EE0               	movlw	224
 39263  007176  6F64               	movwf	memset@n& (0+255),b
 39264  007178  EC6E  F042         	call	_memset	;wreg free
 39265                           
 39266                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 39267  00717C  0E00               	movlw	low _Channels
 39268  00717E  0100               	movlb	0	; () banked
 39269  007180  6F60               	movwf	memcpy@d1& (0+255),b
 39270  007182  0E04               	movlw	high _Channels
 39271  007184  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39272  007186  0EA8               	movlw	low _DefaultChannels433
 39273  007188  6F62               	movwf	memcpy@s1& (0+255),b
 39274  00718A  0EFF               	movlw	high _DefaultChannels433
 39275  00718C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39276  00718E  0E00               	movlw	0
 39277  007190  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39278  007192  0E2A               	movlw	42
 39279  007194  6F64               	movwf	memcpy@n& (0+255),b
 39280  007196  EC22  F03D         	call	_memcpy	;wreg free
 39281                           
 39282                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 39283  00719A  0E03               	movlw	3
 39284  00719C  0100               	movlb	0	; () banked
 39285  00719E  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 39286  0071A0                     l15757:
 39287                           
 39288                           ; BSR set to: 0
 39289  0071A0  0E0F               	movlw	15
 39290  0071A2  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 39291  0071A4  D001               	goto	l1251
 39292  0071A6  0012               	return	
 39293  0071A8                     l1251:
 39294                           
 39295                           ; BSR set to: 0
 39296                           ;lorawan_eu.c: 1001: {
 39297                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 39298                           
 39299                           ; BSR set to: 0
 39300  0071A8  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 39301  0071AA  0D0E               	mullw	14
 39302  0071AC  0E06               	movlw	6
 39303  0071AE  26F3               	addwf	prodl,f,c
 39304  0071B0  0E00               	movlw	0
 39305  0071B2  22F4               	addwfc	prodh,f,c
 39306  0071B4  0E00               	movlw	low _Channels
 39307  0071B6  24F3               	addwf	prodl,w,c
 39308  0071B8  6ED9               	movwf	fsr2l,c
 39309  0071BA  0E04               	movlw	high _Channels
 39310  0071BC  20F4               	addwfc	prodh,w,c
 39311  0071BE  6EDA               	movwf	fsr2h,c
 39312  0071C0  0EFF               	movlw	255
 39313  0071C2  6EDE               	movwf	postinc2,c
 39314  0071C4  0EFF               	movlw	255
 39315  0071C6  6EDD               	movwf	postdec2,c
 39316                           
 39317                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 39318  0071C8  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 39319  0071CA  0D0E               	mullw	14
 39320  0071CC  0E05               	movlw	5
 39321  0071CE  26F3               	addwf	prodl,f,c
 39322  0071D0  0E00               	movlw	0
 39323  0071D2  22F4               	addwfc	prodh,f,c
 39324  0071D4  0E00               	movlw	low _Channels
 39325  0071D6  24F3               	addwf	prodl,w,c
 39326  0071D8  6ED9               	movwf	fsr2l,c
 39327  0071DA  0E04               	movlw	high _Channels
 39328  0071DC  20F4               	addwfc	prodh,w,c
 39329  0071DE  6EDA               	movwf	fsr2h,c
 39330  0071E0  0EFF               	movlw	255
 39331  0071E2  6EDF               	movwf	indf2,c
 39332                           
 39333                           ; BSR set to: 0
 39334  0071E4  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 39335  0071E6  D7DC               	goto	l15757
 39336  0071E8                     __end_of_InitDefault433Channels:
 39337                           	opt stack 0
 39338                           tosu	equ	0xFFF
 39339                           tosh	equ	0xFFE
 39340                           tosl	equ	0xFFD
 39341                           pclath	equ	0xFFA
 39342                           tblptru	equ	0xFF8
 39343                           tblptrh	equ	0xFF7
 39344                           tblptrl	equ	0xFF6
 39345                           tablat	equ	0xFF5
 39346                           prodh	equ	0xFF4
 39347                           prodl	equ	0xFF3
 39348                           intcon	equ	0xFF2
 39349                           intcon2	equ	0xFF1
 39350                           intcon3	equ	0xFF0
 39351                           indf0	equ	0xFEF
 39352                           postinc0	equ	0xFEE
 39353                           plusw0	equ	0xFEB
 39354                           fsr0h	equ	0xFEA
 39355                           fsr0l	equ	0xFE9
 39356                           wreg	equ	0xFE8
 39357                           postinc1	equ	0xFE6
 39358                           postdec1	equ	0xFE5
 39359                           plusw1	equ	0xFE3
 39360                           fsr1h	equ	0xFE2
 39361                           fsr1l	equ	0xFE1
 39362                           indf2	equ	0xFDF
 39363                           postinc2	equ	0xFDE
 39364                           postdec2	equ	0xFDD
 39365                           plusw2	equ	0xFDB
 39366                           fsr2h	equ	0xFDA
 39367                           fsr2l	equ	0xFD9
 39368                           status	equ	0xFD8
 39369                           
 39370 ;; *************** function _memset *****************
 39371 ;; Defined at:
 39372 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 39373 ;; Parameters:    Size  Location     Type
 39374 ;;  p1              2    0[BANK0 ] PTR void 
 39375 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39376 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39377 ;;  c               2    2[BANK0 ] int 
 39378 ;;  n               2    4[BANK0 ] unsigned int 
 39379 ;; Auto vars:     Size  Location     Type
 39380 ;;  p               2    6[BANK0 ] PTR unsigned char 
 39381 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39382 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39383 ;; Return value:  Size  Location     Type
 39384 ;;                  2    0[BANK0 ] PTR void 
 39385 ;; Registers used:
 39386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39387 ;; Tracked objects:
 39388 ;;		On entry : 0/0
 39389 ;;		On exit  : 0/0
 39390 ;;		Unchanged: 0/0
 39391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39395 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39396 ;;Total ram usage:        8 bytes
 39397 ;; Hardware stack levels used:    1
 39398 ;; Hardware stack levels required when called:    7
 39399 ;; This function calls:
 39400 ;;		Nothing
 39401 ;; This function is called by:
 39402 ;;		_AESCmac
 39403 ;;		_GenerateSubkey
 39404 ;;		_LORAWAN_Reset
 39405 ;;		_InitDefault868Channels
 39406 ;;		_InitDefault433Channels
 39407 ;;		_AssemblePacket
 39408 ;;		_PrepareJoinRequestFrame
 39409 ;;		_PrepareSessionKeys
 39410 ;;		_AssembleEncryptionBlock
 39411 ;; This function uses a non-reentrant model
 39412 ;;
 39413                           
 39414                           	psect	text190
 39415  0084DC                     __ptext190:
 39416                           	opt stack 0
 39417  0084DC                     _memset:
 39418                           	opt stack 21
 39419                           
 39420                           ; BSR set to: 0
 39421                           ;incstack = 0
 39422  0084DC  C060  F066         	movff	memset@p1,memset@p
 39423  0084E0  C061  F067         	movff	memset@p1+1,memset@p+1
 39424  0084E4  D009               	goto	l2945
 39425  0084E6                     l12803:
 39426  0084E6  C066  FFD9         	movff	memset@p,fsr2l
 39427  0084EA  C067  FFDA         	movff	memset@p+1,fsr2h
 39428  0084EE  C062  FFDF         	movff	memset@c,indf2
 39429  0084F2  0100               	movlb	0	; () banked
 39430  0084F4  4B66               	infsnz	memset@p& (0+255),f,b
 39431  0084F6  2B67               	incf	(memset@p+1)& (0+255),f,b
 39432  0084F8                     l2945:
 39433                           
 39434                           ; BSR set to: 0
 39435  0084F8  0100               	movlb	0	; () banked
 39436  0084FA  0764               	decf	memset@n& (0+255),f,b
 39437  0084FC  A0D8               	btfss	status,0,c
 39438  0084FE  0765               	decf	(memset@n+1)& (0+255),f,b
 39439  008500  2964               	incf	memset@n& (0+255),w,b
 39440  008502  E1F1               	bnz	l12803
 39441  008504  2965               	incf	(memset@n+1)& (0+255),w,b
 39442  008506  B4D8               	btfsc	status,2,c
 39443  008508  0012               	return	
 39444  00850A  D7ED               	goto	l2946
 39445  00850C                     __end_of_memset:
 39446                           	opt stack 0
 39447                           tosu	equ	0xFFF
 39448                           tosh	equ	0xFFE
 39449                           tosl	equ	0xFFD
 39450                           pclath	equ	0xFFA
 39451                           tblptru	equ	0xFF8
 39452                           tblptrh	equ	0xFF7
 39453                           tblptrl	equ	0xFF6
 39454                           tablat	equ	0xFF5
 39455                           prodh	equ	0xFF4
 39456                           prodl	equ	0xFF3
 39457                           intcon	equ	0xFF2
 39458                           intcon2	equ	0xFF1
 39459                           intcon3	equ	0xFF0
 39460                           indf0	equ	0xFEF
 39461                           postinc0	equ	0xFEE
 39462                           plusw0	equ	0xFEB
 39463                           fsr0h	equ	0xFEA
 39464                           fsr0l	equ	0xFE9
 39465                           wreg	equ	0xFE8
 39466                           postinc1	equ	0xFE6
 39467                           postdec1	equ	0xFE5
 39468                           plusw1	equ	0xFE3
 39469                           fsr1h	equ	0xFE2
 39470                           fsr1l	equ	0xFE1
 39471                           indf2	equ	0xFDF
 39472                           postinc2	equ	0xFDE
 39473                           postdec2	equ	0xFDD
 39474                           plusw2	equ	0xFDB
 39475                           fsr2h	equ	0xFDA
 39476                           fsr2l	equ	0xFD9
 39477                           status	equ	0xFD8
 39478                           
 39479 ;; *************** function _memcpy *****************
 39480 ;; Defined at:
 39481 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 39482 ;; Parameters:    Size  Location     Type
 39483 ;;  d1              2    0[BANK0 ] PTR void 
 39484 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39485 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39486 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39487 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39488 ;;  s1              2    2[BANK0 ] PTR const void 
 39489 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), data(8), appSKey(16), 
 39490 ;;		 -> nwkSKey(16), applicationKey(16), deviceEUI(8), applicationEUI(8), 
 39491 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 39492 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 39493 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 39494 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 39495 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 39496 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 39497 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39498 ;;  n               2    4[BANK0 ] unsigned int 
 39499 ;; Auto vars:     Size  Location     Type
 39500 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 39501 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), data(8), appSKey(16), 
 39502 ;;		 -> nwkSKey(16), applicationKey(16), deviceEUI(8), applicationEUI(8), 
 39503 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 39504 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 39505 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 39506 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 39507 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 39508 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 39509 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39510 ;;  d               2    7[BANK0 ] PTR unsigned char 
 39511 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39512 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39513 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39514 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39515 ;;  tmp             1    6[BANK0 ] unsigned char 
 39516 ;; Return value:  Size  Location     Type
 39517 ;;                  2    0[BANK0 ] PTR void 
 39518 ;; Registers used:
 39519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39520 ;; Tracked objects:
 39521 ;;		On entry : 0/0
 39522 ;;		On exit  : 0/0
 39523 ;;		Unchanged: 0/0
 39524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39525 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39526 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39528 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39529 ;;Total ram usage:       11 bytes
 39530 ;; Hardware stack levels used:    1
 39531 ;; Hardware stack levels required when called:    7
 39532 ;; This function calls:
 39533 ;;		Nothing
 39534 ;; This function is called by:
 39535 ;;		_AESCmac
 39536 ;;		_RADIO_SetFSKSyncWord
 39537 ;;		_UpdateCfList
 39538 ;;		_InitDefault868Channels
 39539 ;;		_InitDefault433Channels
 39540 ;;		_AESEncodeLoRa
 39541 ;;		_LORAWAN_SetDeviceEui
 39542 ;;		_LORAWAN_SetApplicationEui
 39543 ;;		_LORAWAN_SetNetworkSessionKey
 39544 ;;		_LORAWAN_SetApplicationSessionKey
 39545 ;;		_LORAWAN_SetApplicationKey
 39546 ;;		_LORAWAN_RxDone
 39547 ;;		_AssemblePacket
 39548 ;;		_PrepareJoinRequestFrame
 39549 ;;		_PrepareSessionKeys
 39550 ;;		_AssembleEncryptionBlock
 39551 ;;		_ExtractMic
 39552 ;;		_ComputeMic
 39553 ;;		_RADIO_GetData
 39554 ;;		_RADIO_GetFSKSyncWord
 39555 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39556 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39557 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39558 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39559 ;;		_LORAWAN_GetDeviceEui
 39560 ;;		_LORAWAN_GetApplicationEui
 39561 ;;		_LORAWAN_GetNetworkSessionKey
 39562 ;;		_LORAWAN_GetApplicationSessionKey
 39563 ;;		_LORAWAN_GetApplicationKey
 39564 ;; This function uses a non-reentrant model
 39565 ;;
 39566                           
 39567                           	psect	text191
 39568  007A44                     __ptext191:
 39569                           	opt stack 0
 39570  007A44                     _memcpy:
 39571                           	opt stack 22
 39572                           
 39573                           ; BSR set to: 0
 39574                           ;incstack = 0
 39575  007A44  C062  F069         	movff	memcpy@s1,memcpy@s
 39576  007A48  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 39577  007A4C  C060  F067         	movff	memcpy@d1,memcpy@d
 39578  007A50  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 39579  007A54  D01D               	goto	l2939
 39580  007A56                     l12591:
 39581  007A56  C069  FFF6         	movff	memcpy@s,tblptrl
 39582  007A5A  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 39583  007A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 39584  007A60  6EF8               	movwf	tblptru,c
 39585  007A62  0E0F               	movlw	(high __ramtop+-1)
 39586  007A64  64F7               	cpfsgt	tblptrh,c
 39587  007A66  D003               	bra	u14127
 39588  007A68  0008               	tblrd		*
 39589  007A6A  50F5               	movf	tablat,w,c
 39590  007A6C  D005               	bra	u14120
 39591  007A6E                     u14127:
 39592  007A6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 39593  007A72  CFF7 FFEA          	movff	tblptrh,fsr0h
 39594  007A76  50EF               	movf	indf0,w,c
 39595  007A78                     u14120:
 39596  007A78  0100               	movlb	0	; () banked
 39597  007A7A  6F66               	movwf	memcpy@tmp& (0+255),b
 39598                           
 39599                           ; BSR set to: 0
 39600  007A7C  4B69               	infsnz	memcpy@s& (0+255),f,b
 39601  007A7E  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 39602                           
 39603                           ; BSR set to: 0
 39604  007A80  C067  FFD9         	movff	memcpy@d,fsr2l
 39605  007A84  C068  FFDA         	movff	memcpy@d+1,fsr2h
 39606  007A88  C066  FFDF         	movff	memcpy@tmp,indf2
 39607                           
 39608                           ; BSR set to: 0
 39609  007A8C  4B67               	infsnz	memcpy@d& (0+255),f,b
 39610  007A8E  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 39611  007A90                     l2939:
 39612                           
 39613                           ; BSR set to: 0
 39614  007A90  0100               	movlb	0	; () banked
 39615  007A92  0764               	decf	memcpy@n& (0+255),f,b
 39616  007A94  A0D8               	btfss	status,0,c
 39617  007A96  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39618  007A98  2964               	incf	memcpy@n& (0+255),w,b
 39619  007A9A  E1DD               	bnz	l12591
 39620  007A9C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39621  007A9E  B4D8               	btfsc	status,2,c
 39622  007AA0  0012               	return	
 39623  007AA2  D7D9               	goto	l2940
 39624  007AA4                     __end_of_memcpy:
 39625                           	opt stack 0
 39626                           tosu	equ	0xFFF
 39627                           tosh	equ	0xFFE
 39628                           tosl	equ	0xFFD
 39629                           pclath	equ	0xFFA
 39630                           tblptru	equ	0xFF8
 39631                           tblptrh	equ	0xFF7
 39632                           tblptrl	equ	0xFF6
 39633                           tablat	equ	0xFF5
 39634                           prodh	equ	0xFF4
 39635                           prodl	equ	0xFF3
 39636                           intcon	equ	0xFF2
 39637                           intcon2	equ	0xFF1
 39638                           intcon3	equ	0xFF0
 39639                           indf0	equ	0xFEF
 39640                           postinc0	equ	0xFEE
 39641                           plusw0	equ	0xFEB
 39642                           fsr0h	equ	0xFEA
 39643                           fsr0l	equ	0xFE9
 39644                           wreg	equ	0xFE8
 39645                           postinc1	equ	0xFE6
 39646                           postdec1	equ	0xFE5
 39647                           plusw1	equ	0xFE3
 39648                           fsr1h	equ	0xFE2
 39649                           fsr1l	equ	0xFE1
 39650                           indf2	equ	0xFDF
 39651                           postinc2	equ	0xFDE
 39652                           postdec2	equ	0xFDD
 39653                           plusw2	equ	0xFDB
 39654                           fsr2h	equ	0xFDA
 39655                           fsr2l	equ	0xFD9
 39656                           status	equ	0xFD8
 39657                           
 39658 ;; *************** function _CreateAllSoftwareTimers *****************
 39659 ;; Defined at:
 39660 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39661 ;; Parameters:    Size  Location     Type
 39662 ;;		None
 39663 ;; Auto vars:     Size  Location     Type
 39664 ;;		None
 39665 ;; Return value:  Size  Location     Type
 39666 ;;                  1    wreg      void 
 39667 ;; Registers used:
 39668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39669 ;; Tracked objects:
 39670 ;;		On entry : 0/0
 39671 ;;		On exit  : 0/0
 39672 ;;		Unchanged: 0/0
 39673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39678 ;;Total ram usage:        0 bytes
 39679 ;; Hardware stack levels used:    1
 39680 ;; Hardware stack levels required when called:    8
 39681 ;; This function calls:
 39682 ;;		_SwTimerCreate
 39683 ;; This function is called by:
 39684 ;;		_LORAWAN_Init
 39685 ;; This function uses a non-reentrant model
 39686 ;;
 39687                           
 39688                           	psect	text192
 39689  007EC0                     __ptext192:
 39690                           	opt stack 0
 39691  007EC0                     _CreateAllSoftwareTimers:
 39692                           	opt stack 21
 39693                           
 39694                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 39695                           
 39696                           ; BSR set to: 0
 39697                           ;incstack = 0
 39698  007EC0  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39699  007EC4  0102               	movlb	2	; () banked
 39700  007EC6  6FE2               	movwf	(_loRa+226)& (0+255),b
 39701                           
 39702                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 39703  007EC8  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39704  007ECC  0102               	movlb	2	; () banked
 39705  007ECE  6FE3               	movwf	(_loRa+227)& (0+255),b
 39706                           
 39707                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 39708  007ED0  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39709  007ED4  0102               	movlb	2	; () banked
 39710  007ED6  6FE4               	movwf	(_loRa+228)& (0+255),b
 39711                           
 39712                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 39713  007ED8  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39714  007EDC  0102               	movlb	2	; () banked
 39715  007EDE  6FE5               	movwf	(_loRa+229)& (0+255),b
 39716                           
 39717                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 39718  007EE0  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39719  007EE4  0102               	movlb	2	; () banked
 39720  007EE6  6FE7               	movwf	(_loRa+231)& (0+255),b
 39721                           
 39722                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 39723  007EE8  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39724  007EEC  0102               	movlb	2	; () banked
 39725  007EEE  6FE8               	movwf	(_loRa+232)& (0+255),b
 39726                           
 39727                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 39728  007EF0  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39729  007EF4  0102               	movlb	2	; () banked
 39730  007EF6  6FE6               	movwf	(_loRa+230)& (0+255),b
 39731                           
 39732                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39733  007EF8  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39734  007EFC  0102               	movlb	2	; () banked
 39735  007EFE  6FEA               	movwf	(_loRa+234)& (0+255),b
 39736                           
 39737                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 39738  007F00  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39739  007F04  0102               	movlb	2	; () banked
 39740  007F06  6FF3               	movwf	(_loRa+243)& (0+255),b
 39741                           
 39742                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 39743  007F08  ECDF  F037         	call	_SwTimerCreate	;wreg free
 39744  007F0C  0102               	movlb	2	; () banked
 39745  007F0E  6FE9               	movwf	(_loRa+233)& (0+255),b
 39746                           
 39747                           ; BSR set to: 2
 39748  007F10  0012               	return		;funcret
 39749  007F12                     __end_of_CreateAllSoftwareTimers:
 39750                           	opt stack 0
 39751                           tosu	equ	0xFFF
 39752                           tosh	equ	0xFFE
 39753                           tosl	equ	0xFFD
 39754                           pclath	equ	0xFFA
 39755                           tblptru	equ	0xFF8
 39756                           tblptrh	equ	0xFF7
 39757                           tblptrl	equ	0xFF6
 39758                           tablat	equ	0xFF5
 39759                           prodh	equ	0xFF4
 39760                           prodl	equ	0xFF3
 39761                           intcon	equ	0xFF2
 39762                           intcon2	equ	0xFF1
 39763                           intcon3	equ	0xFF0
 39764                           indf0	equ	0xFEF
 39765                           postinc0	equ	0xFEE
 39766                           plusw0	equ	0xFEB
 39767                           fsr0h	equ	0xFEA
 39768                           fsr0l	equ	0xFE9
 39769                           wreg	equ	0xFE8
 39770                           postinc1	equ	0xFE6
 39771                           postdec1	equ	0xFE5
 39772                           plusw1	equ	0xFE3
 39773                           fsr1h	equ	0xFE2
 39774                           fsr1l	equ	0xFE1
 39775                           indf2	equ	0xFDF
 39776                           postinc2	equ	0xFDE
 39777                           postdec2	equ	0xFDD
 39778                           plusw2	equ	0xFDB
 39779                           fsr2h	equ	0xFDA
 39780                           fsr2l	equ	0xFD9
 39781                           status	equ	0xFD8
 39782                           
 39783 ;; *************** function _SwTimerCreate *****************
 39784 ;; Defined at:
 39785 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39786 ;; Parameters:    Size  Location     Type
 39787 ;;		None
 39788 ;; Auto vars:     Size  Location     Type
 39789 ;;  retVal          1    0[BANK0 ] unsigned char 
 39790 ;; Return value:  Size  Location     Type
 39791 ;;                  1    wreg      unsigned char 
 39792 ;; Registers used:
 39793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39794 ;; Tracked objects:
 39795 ;;		On entry : 0/0
 39796 ;;		On exit  : 0/0
 39797 ;;		Unchanged: 0/0
 39798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39803 ;;Total ram usage:        1 bytes
 39804 ;; Hardware stack levels used:    1
 39805 ;; Hardware stack levels required when called:    7
 39806 ;; This function calls:
 39807 ;;		Nothing
 39808 ;; This function is called by:
 39809 ;;		_RADIO_Init
 39810 ;;		_CreateAllSoftwareTimers
 39811 ;; This function uses a non-reentrant model
 39812 ;;
 39813                           
 39814                           	psect	text193
 39815  006FBE                     __ptext193:
 39816                           	opt stack 0
 39817  006FBE                     _SwTimerCreate:
 39818                           	opt stack 21
 39819                           
 39820                           ;sw_timer.c: 156: uint8_t retVal;
 39821                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 39822                           
 39823                           ; BSR set to: 2
 39824                           ;incstack = 0
 39825  006FBE  0E14               	movlw	20
 39826  006FC0  0100               	movlb	0	; () banked
 39827  006FC2  61F9               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39828  006FC4  D03E               	goto	l285
 39829                           
 39830                           ; BSR set to: 0
 39831                           ;sw_timer.c: 158: {
 39832                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39833  006FC6  9EF2               	bcf	intcon,7,c	;volatile
 39834                           
 39835                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39836  006FC8  C0F9  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39837                           
 39838                           ; BSR set to: 0
 39839                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39840  006FCC  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39841  006FCE  0D08               	mullw	8
 39842  006FD0  0E04               	movlw	4
 39843  006FD2  26F3               	addwf	prodl,f,c
 39844  006FD4  0E00               	movlw	0
 39845  006FD6  22F4               	addwfc	prodh,f,c
 39846  006FD8  0E00               	movlw	low _swTimers
 39847  006FDA  24F3               	addwf	prodl,w,c
 39848  006FDC  6ED9               	movwf	fsr2l,c
 39849  006FDE  0E03               	movlw	high _swTimers
 39850  006FE0  20F4               	addwfc	prodh,w,c
 39851  006FE2  6EDA               	movwf	fsr2h,c
 39852  006FE4  0E00               	movlw	0
 39853  006FE6  6EDF               	movwf	indf2,c
 39854                           
 39855                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39856  006FE8  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39857  006FEA  0D08               	mullw	8
 39858  006FEC  0E00               	movlw	low _swTimers
 39859  006FEE  24F3               	addwf	prodl,w,c
 39860  006FF0  6ED9               	movwf	fsr2l,c
 39861  006FF2  0E03               	movlw	high _swTimers
 39862  006FF4  20F4               	addwfc	prodh,w,c
 39863  006FF6  6EDA               	movwf	fsr2h,c
 39864  006FF8  6ADE               	clrf	postinc2,c
 39865  006FFA  6ADE               	clrf	postinc2,c
 39866  006FFC  6ADE               	clrf	postinc2,c
 39867  006FFE  6ADD               	clrf	postdec2,c
 39868                           
 39869                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39870  007000  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39871  007002  0D08               	mullw	8
 39872  007004  0E05               	movlw	5
 39873  007006  26F3               	addwf	prodl,f,c
 39874  007008  0E00               	movlw	0
 39875  00700A  22F4               	addwfc	prodh,f,c
 39876  00700C  0E00               	movlw	low _swTimers
 39877  00700E  24F3               	addwf	prodl,w,c
 39878  007010  6ED9               	movwf	fsr2l,c
 39879  007012  0E03               	movlw	high _swTimers
 39880  007014  20F4               	addwfc	prodh,w,c
 39881  007016  6EDA               	movwf	fsr2h,c
 39882  007018  0E00               	movlw	0
 39883  00701A  6EDF               	movwf	indf2,c
 39884                           
 39885                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39886  00701C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39887  00701E  0D08               	mullw	8
 39888  007020  0E06               	movlw	6
 39889  007022  26F3               	addwf	prodl,f,c
 39890  007024  0E00               	movlw	0
 39891  007026  22F4               	addwfc	prodh,f,c
 39892  007028  0E00               	movlw	low _swTimers
 39893  00702A  24F3               	addwf	prodl,w,c
 39894  00702C  6ED9               	movwf	fsr2l,c
 39895  00702E  0E03               	movlw	high _swTimers
 39896  007030  20F4               	addwfc	prodh,w,c
 39897  007032  6EDA               	movwf	fsr2h,c
 39898  007034  0E00               	movlw	0
 39899  007036  6EDE               	movwf	postinc2,c
 39900  007038  0E00               	movlw	0
 39901  00703A  6EDD               	movwf	postdec2,c
 39902                           
 39903                           ; BSR set to: 0
 39904                           ;sw_timer.c: 165: allocatedTimers++;
 39905  00703C  2BF9               	incf	_allocatedTimers& (0+255),f,b	;volatile
 39906                           
 39907                           ; BSR set to: 0
 39908                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39909  00703E  8EF2               	bsf	intcon,7,c	;volatile
 39910                           
 39911                           ;sw_timer.c: 167: }
 39912  007040  D001               	goto	l289
 39913  007042                     l285:
 39914                           
 39915                           ;sw_timer.c: 171: {
 39916                           
 39917                           ; BSR set to: 0
 39918                           ;sw_timer.c: 168: else
 39919                           ;sw_timer.c: 169: {
 39920                           ;sw_timer.c: 170: while(1)
 39921  007042  D7FF               	goto	l285
 39922  007044                     l289:
 39923                           
 39924                           ;sw_timer.c: 175: }
 39925                           ;sw_timer.c: 176: }
 39926                           ;sw_timer.c: 177: return retVal;
 39927  007044  0100               	movlb	0	; () banked
 39928  007046  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39929  007048  0012               	return	
 39930  00704A                     __end_of_SwTimerCreate:
 39931                           	opt stack 0
 39932                           tosu	equ	0xFFF
 39933                           tosh	equ	0xFFE
 39934                           tosl	equ	0xFFD
 39935                           pclath	equ	0xFFA
 39936                           tblptru	equ	0xFF8
 39937                           tblptrh	equ	0xFF7
 39938                           tblptrl	equ	0xFF6
 39939                           tablat	equ	0xFF5
 39940                           prodh	equ	0xFF4
 39941                           prodl	equ	0xFF3
 39942                           intcon	equ	0xFF2
 39943                           intcon2	equ	0xFF1
 39944                           intcon3	equ	0xFF0
 39945                           indf0	equ	0xFEF
 39946                           postinc0	equ	0xFEE
 39947                           plusw0	equ	0xFEB
 39948                           fsr0h	equ	0xFEA
 39949                           fsr0l	equ	0xFE9
 39950                           wreg	equ	0xFE8
 39951                           postinc1	equ	0xFE6
 39952                           postdec1	equ	0xFE5
 39953                           plusw1	equ	0xFE3
 39954                           fsr1h	equ	0xFE2
 39955                           fsr1l	equ	0xFE1
 39956                           indf2	equ	0xFDF
 39957                           postinc2	equ	0xFDE
 39958                           postdec2	equ	0xFDD
 39959                           plusw2	equ	0xFDB
 39960                           fsr2h	equ	0xFDA
 39961                           fsr2l	equ	0xFD9
 39962                           status	equ	0xFD8
 39963                           
 39964 ;; *************** function _INTERRUPT_InterruptManager *****************
 39965 ;; Defined at:
 39966 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 39967 ;; Parameters:    Size  Location     Type
 39968 ;;		None
 39969 ;; Auto vars:     Size  Location     Type
 39970 ;;		None
 39971 ;; Return value:  Size  Location     Type
 39972 ;;                  1    wreg      void 
 39973 ;; Registers used:
 39974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39975 ;; Tracked objects:
 39976 ;;		On entry : 0/0
 39977 ;;		On exit  : 0/0
 39978 ;;		Unchanged: 0/0
 39979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39982 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39983 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39984 ;;Total ram usage:        8 bytes
 39985 ;; Hardware stack levels used:    1
 39986 ;; Hardware stack levels required when called:    6
 39987 ;; This function calls:
 39988 ;;		_INT1_ISR
 39989 ;;		_INT2_ISR
 39990 ;;		_PIN_MANAGER_IOC
 39991 ;;		_TMR1_ISR
 39992 ;; This function is called by:
 39993 ;;		Interrupt level 2
 39994 ;; This function uses a non-reentrant model
 39995 ;;
 39996                           
 39997                           	psect	intcode
 39998  000008                     __pintcode:
 39999                           	opt stack 0
 40000  000008                     _INTERRUPT_InterruptManager:
 40001                           	opt stack 12
 40002                           
 40003                           ; BSR set to: 0
 40004                           ;incstack = 0
 40005  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 40006  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 40007  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 40008  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 40009  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 40010  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 40011  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 40012  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 40013  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 40014                           
 40015                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 40016  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 40017  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 40018  000030  D003               	goto	i2l1448
 40019                           
 40020                           ;interrupt_manager.c: 62: {
 40021                           ;interrupt_manager.c: 63: INT1_ISR();
 40022  000032  EC41  F046         	call	_INT1_ISR	;wreg free
 40023                           
 40024                           ;interrupt_manager.c: 64: }
 40025  000036  D012               	goto	i2l1455
 40026  000038                     i2l1448:
 40027                           
 40028                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 40029  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 40030  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 40031  00003C  D003               	goto	i2l1450
 40032                           
 40033                           ;interrupt_manager.c: 66: {
 40034                           ;interrupt_manager.c: 67: INT2_ISR();
 40035  00003E  EC3D  F046         	call	_INT2_ISR	;wreg free
 40036                           
 40037                           ;interrupt_manager.c: 68: }
 40038  000042  D00C               	goto	i2l1455
 40039  000044                     i2l1450:
 40040                           
 40041                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 40042  000044  B6F2               	btfsc	intcon,3,c	;volatile
 40043  000046  A0F2               	btfss	intcon,0,c	;volatile
 40044  000048  D003               	goto	i2l1452
 40045                           
 40046                           ;interrupt_manager.c: 70: {
 40047                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 40048  00004A  EC34  F046         	call	_PIN_MANAGER_IOC	;wreg free
 40049                           
 40050                           ;interrupt_manager.c: 72: }
 40051  00004E  D006               	goto	i2l1455
 40052  000050                     i2l1452:
 40053                           
 40054                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 40055  000050  BCF2               	btfsc	intcon,6,c	;volatile
 40056                           
 40057                           ;interrupt_manager.c: 74: {
 40058                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 40059  000052  A09D               	btfss	3997,0,c	;volatile
 40060  000054  D003               	goto	i2l1455
 40061  000056  B09E               	btfsc	3998,0,c	;volatile
 40062                           
 40063                           ;interrupt_manager.c: 76: {
 40064                           ;interrupt_manager.c: 77: TMR1_ISR();
 40065  000058  EC81  F045         	call	_TMR1_ISR	;wreg free
 40066  00005C                     i2l1455:
 40067                           
 40068                           ;interrupt_manager.c: 84: else
 40069                           ;interrupt_manager.c: 85: {
 40070                           
 40071                           ;interrupt_manager.c: 82: }
 40072                           ;interrupt_manager.c: 83: }
 40073                           
 40074                           ;interrupt_manager.c: 79: else
 40075                           ;interrupt_manager.c: 80: {
 40076  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 40077  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 40078  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 40079  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 40080  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 40081  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 40082  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 40083  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 40084  00007C  0011               	retfie		f
 40085  00007E                     __end_of_INTERRUPT_InterruptManager:
 40086                           	opt stack 0
 40087                           tosu	equ	0xFFF
 40088                           tosh	equ	0xFFE
 40089                           tosl	equ	0xFFD
 40090                           pclatu	equ	0xFFB
 40091                           pclath	equ	0xFFA
 40092                           tblptru	equ	0xFF8
 40093                           tblptrh	equ	0xFF7
 40094                           tblptrl	equ	0xFF6
 40095                           tablat	equ	0xFF5
 40096                           prodh	equ	0xFF4
 40097                           prodl	equ	0xFF3
 40098                           intcon	equ	0xFF2
 40099                           intcon2	equ	0xFF1
 40100                           intcon3	equ	0xFF0
 40101                           indf0	equ	0xFEF
 40102                           postinc0	equ	0xFEE
 40103                           plusw0	equ	0xFEB
 40104                           fsr0h	equ	0xFEA
 40105                           fsr0l	equ	0xFE9
 40106                           wreg	equ	0xFE8
 40107                           postinc1	equ	0xFE6
 40108                           postdec1	equ	0xFE5
 40109                           plusw1	equ	0xFE3
 40110                           fsr1h	equ	0xFE2
 40111                           fsr1l	equ	0xFE1
 40112                           indf2	equ	0xFDF
 40113                           postinc2	equ	0xFDE
 40114                           postdec2	equ	0xFDD
 40115                           plusw2	equ	0xFDB
 40116                           fsr2h	equ	0xFDA
 40117                           fsr2l	equ	0xFD9
 40118                           status	equ	0xFD8
 40119                           
 40120 ;; *************** function _TMR1_ISR *****************
 40121 ;; Defined at:
 40122 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 40123 ;; Parameters:    Size  Location     Type
 40124 ;;		None
 40125 ;; Auto vars:     Size  Location     Type
 40126 ;;		None
 40127 ;; Return value:  Size  Location     Type
 40128 ;;                  1    wreg      void 
 40129 ;; Registers used:
 40130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40131 ;; Tracked objects:
 40132 ;;		On entry : 0/0
 40133 ;;		On exit  : 0/0
 40134 ;;		Unchanged: 0/0
 40135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40140 ;;Total ram usage:        0 bytes
 40141 ;; Hardware stack levels used:    1
 40142 ;; Hardware stack levels required when called:    5
 40143 ;; This function calls:
 40144 ;;		_TMR1_CallBack
 40145 ;;		i2_TMR1_WriteTimer
 40146 ;; This function is called by:
 40147 ;;		_INTERRUPT_InterruptManager
 40148 ;; This function uses a non-reentrant model
 40149 ;;
 40150                           
 40151                           	psect	text195
 40152  008B02                     __ptext195:
 40153                           	opt stack 0
 40154  008B02                     _TMR1_ISR:
 40155                           	opt stack 12
 40156                           
 40157                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 40158                           
 40159                           ;incstack = 0
 40160  008B02  909E               	bcf	3998,0,c	;volatile
 40161                           
 40162                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 40163  008B04  C1F3  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 40164  008B08  C1F4  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 40165  008B0C  EC16  F045         	call	i2_TMR1_WriteTimer	;wreg free
 40166                           
 40167                           ;tmr1.c: 167: TMR1_CallBack();
 40168  008B10  EC9B  F044         	call	_TMR1_CallBack	;wreg free
 40169  008B14  0012               	return		;funcret
 40170  008B16                     __end_of_TMR1_ISR:
 40171                           	opt stack 0
 40172                           tosu	equ	0xFFF
 40173                           tosh	equ	0xFFE
 40174                           tosl	equ	0xFFD
 40175                           pclatu	equ	0xFFB
 40176                           pclath	equ	0xFFA
 40177                           tblptru	equ	0xFF8
 40178                           tblptrh	equ	0xFF7
 40179                           tblptrl	equ	0xFF6
 40180                           tablat	equ	0xFF5
 40181                           prodh	equ	0xFF4
 40182                           prodl	equ	0xFF3
 40183                           intcon	equ	0xFF2
 40184                           intcon2	equ	0xFF1
 40185                           intcon3	equ	0xFF0
 40186                           indf0	equ	0xFEF
 40187                           postinc0	equ	0xFEE
 40188                           plusw0	equ	0xFEB
 40189                           fsr0h	equ	0xFEA
 40190                           fsr0l	equ	0xFE9
 40191                           wreg	equ	0xFE8
 40192                           postinc1	equ	0xFE6
 40193                           postdec1	equ	0xFE5
 40194                           plusw1	equ	0xFE3
 40195                           fsr1h	equ	0xFE2
 40196                           fsr1l	equ	0xFE1
 40197                           indf2	equ	0xFDF
 40198                           postinc2	equ	0xFDE
 40199                           postdec2	equ	0xFDD
 40200                           plusw2	equ	0xFDB
 40201                           fsr2h	equ	0xFDA
 40202                           fsr2l	equ	0xFD9
 40203                           status	equ	0xFD8
 40204                           
 40205 ;; *************** function _TMR1_CallBack *****************
 40206 ;; Defined at:
 40207 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 40208 ;; Parameters:    Size  Location     Type
 40209 ;;		None
 40210 ;; Auto vars:     Size  Location     Type
 40211 ;;		None
 40212 ;; Return value:  Size  Location     Type
 40213 ;;                  1    wreg      void 
 40214 ;; Registers used:
 40215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40216 ;; Tracked objects:
 40217 ;;		On entry : 0/0
 40218 ;;		On exit  : 0/0
 40219 ;;		Unchanged: 0/0
 40220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40225 ;;Total ram usage:        0 bytes
 40226 ;; Hardware stack levels used:    1
 40227 ;; Hardware stack levels required when called:    4
 40228 ;; This function calls:
 40229 ;;		Absolute function
 40230 ;;		_TMR1_DefaultInterruptHandler
 40231 ;;		_TMR_ISR_lora
 40232 ;; This function is called by:
 40233 ;;		_TMR1_ISR
 40234 ;; This function uses a non-reentrant model
 40235 ;;
 40236                           
 40237                           	psect	text196
 40238  008936                     __ptext196:
 40239                           	opt stack 0
 40240  008936                     _TMR1_CallBack:
 40241                           	opt stack 12
 40242                           
 40243                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 40244                           
 40245                           ;incstack = 0
 40246  008936  0101               	movlb	1	; () banked
 40247  008938  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 40248  00893A  11F2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 40249  00893C  B4D8               	btfsc	status,2,c
 40250  00893E  0012               	return	
 40251                           
 40252                           ; BSR set to: 1
 40253                           ;tmr1.c: 174: {
 40254                           ;tmr1.c: 175: TMR1_InterruptHandler();
 40255  008940  D801               	call	i2u2161_48
 40256  008942  0012               	return	
 40257  008944                     i2u2161_48:
 40258  008944  0005               	push	
 40259  008946  6EFA               	movwf	pclath,c
 40260  008948  51F1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 40261  00894A  6EFD               	movwf	tosl,c
 40262  00894C  51F2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 40263  00894E  6EFE               	movwf	tosh,c
 40264  008950  6AFF               	clrf	tosu,c
 40265  008952  50FA               	movf	pclath,w,c
 40266  008954  0012               	return		;indir
 40267  008956                     __end_of_TMR1_CallBack:
 40268                           	opt stack 0
 40269                           tosu	equ	0xFFF
 40270                           tosh	equ	0xFFE
 40271                           tosl	equ	0xFFD
 40272                           pclatu	equ	0xFFB
 40273                           pclath	equ	0xFFA
 40274                           tblptru	equ	0xFF8
 40275                           tblptrh	equ	0xFF7
 40276                           tblptrl	equ	0xFF6
 40277                           tablat	equ	0xFF5
 40278                           prodh	equ	0xFF4
 40279                           prodl	equ	0xFF3
 40280                           intcon	equ	0xFF2
 40281                           intcon2	equ	0xFF1
 40282                           intcon3	equ	0xFF0
 40283                           indf0	equ	0xFEF
 40284                           postinc0	equ	0xFEE
 40285                           plusw0	equ	0xFEB
 40286                           fsr0h	equ	0xFEA
 40287                           fsr0l	equ	0xFE9
 40288                           wreg	equ	0xFE8
 40289                           postinc1	equ	0xFE6
 40290                           postdec1	equ	0xFE5
 40291                           plusw1	equ	0xFE3
 40292                           fsr1h	equ	0xFE2
 40293                           fsr1l	equ	0xFE1
 40294                           indf2	equ	0xFDF
 40295                           postinc2	equ	0xFDE
 40296                           postdec2	equ	0xFDD
 40297                           plusw2	equ	0xFDB
 40298                           fsr2h	equ	0xFDA
 40299                           fsr2l	equ	0xFD9
 40300                           status	equ	0xFD8
 40301                           
 40302 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 40303 ;; Defined at:
 40304 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 40305 ;; Parameters:    Size  Location     Type
 40306 ;;		None
 40307 ;; Auto vars:     Size  Location     Type
 40308 ;;		None
 40309 ;; Return value:  Size  Location     Type
 40310 ;;                  1    wreg      void 
 40311 ;; Registers used:
 40312 ;;		None
 40313 ;; Tracked objects:
 40314 ;;		On entry : 0/0
 40315 ;;		On exit  : 0/0
 40316 ;;		Unchanged: 0/0
 40317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40322 ;;Total ram usage:        0 bytes
 40323 ;; Hardware stack levels used:    1
 40324 ;; This function calls:
 40325 ;;		Nothing
 40326 ;; This function is called by:
 40327 ;;		_TMR1_Initialize
 40328 ;;		_TMR1_CallBack
 40329 ;; This function uses a non-reentrant model
 40330 ;;
 40331                           
 40332                           	psect	text197
 40333  008CD0                     __ptext197:
 40334                           	opt stack 0
 40335  008CD0                     _TMR1_DefaultInterruptHandler:
 40336                           	opt stack 15
 40337                           
 40338                           ;incstack = 0
 40339  008CD0  0012               	return		;funcret
 40340  008CD2                     __end_of_TMR1_DefaultInterruptHandler:
 40341                           	opt stack 0
 40342                           tosu	equ	0xFFF
 40343                           tosh	equ	0xFFE
 40344                           tosl	equ	0xFFD
 40345                           pclatu	equ	0xFFB
 40346                           pclath	equ	0xFFA
 40347                           tblptru	equ	0xFF8
 40348                           tblptrh	equ	0xFF7
 40349                           tblptrl	equ	0xFF6
 40350                           tablat	equ	0xFF5
 40351                           prodh	equ	0xFF4
 40352                           prodl	equ	0xFF3
 40353                           intcon	equ	0xFF2
 40354                           intcon2	equ	0xFF1
 40355                           intcon3	equ	0xFF0
 40356                           indf0	equ	0xFEF
 40357                           postinc0	equ	0xFEE
 40358                           plusw0	equ	0xFEB
 40359                           fsr0h	equ	0xFEA
 40360                           fsr0l	equ	0xFE9
 40361                           wreg	equ	0xFE8
 40362                           postinc1	equ	0xFE6
 40363                           postdec1	equ	0xFE5
 40364                           plusw1	equ	0xFE3
 40365                           fsr1h	equ	0xFE2
 40366                           fsr1l	equ	0xFE1
 40367                           indf2	equ	0xFDF
 40368                           postinc2	equ	0xFDE
 40369                           postdec2	equ	0xFDD
 40370                           plusw2	equ	0xFDB
 40371                           fsr2h	equ	0xFDA
 40372                           fsr2l	equ	0xFD9
 40373                           status	equ	0xFD8
 40374                           
 40375 ;; *************** function _TMR_ISR_lora *****************
 40376 ;; Defined at:
 40377 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 40378 ;; Parameters:    Size  Location     Type
 40379 ;;		None
 40380 ;; Auto vars:     Size  Location     Type
 40381 ;;		None
 40382 ;; Return value:  Size  Location     Type
 40383 ;;                  1    wreg      void 
 40384 ;; Registers used:
 40385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40386 ;; Tracked objects:
 40387 ;;		On entry : 0/0
 40388 ;;		On exit  : 0/0
 40389 ;;		Unchanged: 0/0
 40390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40395 ;;Total ram usage:        2 bytes
 40396 ;; Hardware stack levels used:    1
 40397 ;; Hardware stack levels required when called:    3
 40398 ;; This function calls:
 40399 ;;		i2_SwTimersInterrupt
 40400 ;;		i2_TMR_SwapTimer
 40401 ;; This function is called by:
 40402 ;;		_TMR_ISR_Lora_Init
 40403 ;;		_TMR1_CallBack
 40404 ;; This function uses a non-reentrant model
 40405 ;;
 40406                           
 40407                           	psect	text198
 40408  007D1E                     __ptext198:
 40409                           	opt stack 0
 40410  007D1E                     _TMR_ISR_lora:
 40411                           	opt stack 12
 40412                           
 40413                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 40414                           
 40415                           ;incstack = 0
 40416  007D1E  0E01               	movlw	1
 40417  007D20  6E47               	movwf	_timerOverflow,c	;volatile
 40418                           
 40419                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 40420  007D22  EC67  F02E         	call	i2_SwTimersInterrupt	;wreg free
 40421  007D26  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 40422  007D2A  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 40423  007D2E  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 40424  007D32  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 40425                           
 40426                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 40427  007D36  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40428  007D38  E11C               	bnz	i2l1379
 40429  007D3A  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40430  007D3C  B0D8               	btfsc	status,0,c
 40431  007D3E  0012               	return	
 40432                           
 40433                           ;tmr_lora_addons.c: 66: {
 40434                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 40435  007D40  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 40436  007D44  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 40437  007D48  1E32               	comf	??_TMR_ISR_lora,f,c
 40438  007D4A  1E33               	comf	??_TMR_ISR_lora+1,f,c
 40439  007D4C  4A32               	infsnz	??_TMR_ISR_lora,f,c
 40440  007D4E  2A33               	incf	??_TMR_ISR_lora+1,f,c
 40441  007D50  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 40442  007D54  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 40443                           
 40444                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 40445  007D58  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 40446  007D5C  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 40447  007D60  ECE8  F040         	call	i2_TMR_SwapTimer	;wreg free
 40448  007D64  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 40449  007D68  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 40450  007D6C  6A42               	clrf	_ticksAdded+2,c	;volatile
 40451  007D6E  6A43               	clrf	_ticksAdded+3,c	;volatile
 40452  007D70  0012               	return	
 40453  007D72                     i2l1379:
 40454  007D72  0012               	return		;funcret
 40455  007D74                     __end_of_TMR_ISR_lora:
 40456                           	opt stack 0
 40457                           tosu	equ	0xFFF
 40458                           tosh	equ	0xFFE
 40459                           tosl	equ	0xFFD
 40460                           pclatu	equ	0xFFB
 40461                           pclath	equ	0xFFA
 40462                           tblptru	equ	0xFF8
 40463                           tblptrh	equ	0xFF7
 40464                           tblptrl	equ	0xFF6
 40465                           tablat	equ	0xFF5
 40466                           prodh	equ	0xFF4
 40467                           prodl	equ	0xFF3
 40468                           intcon	equ	0xFF2
 40469                           intcon2	equ	0xFF1
 40470                           intcon3	equ	0xFF0
 40471                           indf0	equ	0xFEF
 40472                           postinc0	equ	0xFEE
 40473                           plusw0	equ	0xFEB
 40474                           fsr0h	equ	0xFEA
 40475                           fsr0l	equ	0xFE9
 40476                           wreg	equ	0xFE8
 40477                           postinc1	equ	0xFE6
 40478                           postdec1	equ	0xFE5
 40479                           plusw1	equ	0xFE3
 40480                           fsr1h	equ	0xFE2
 40481                           fsr1l	equ	0xFE1
 40482                           indf2	equ	0xFDF
 40483                           postinc2	equ	0xFDE
 40484                           postdec2	equ	0xFDD
 40485                           plusw2	equ	0xFDB
 40486                           fsr2h	equ	0xFDA
 40487                           fsr2l	equ	0xFD9
 40488                           status	equ	0xFD8
 40489                           
 40490 ;; *************** function i2_TMR_SwapTimer *****************
 40491 ;; Defined at:
 40492 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40493 ;; Parameters:    Size  Location     Type
 40494 ;;  timerVal        2    8[COMRAM] unsigned int 
 40495 ;; Auto vars:     Size  Location     Type
 40496 ;;		None
 40497 ;; Return value:  Size  Location     Type
 40498 ;;                  2    8[COMRAM] unsigned int 
 40499 ;; Registers used:
 40500 ;;		wreg, status,2, status,0, cstack
 40501 ;; Tracked objects:
 40502 ;;		On entry : 0/0
 40503 ;;		On exit  : 0/0
 40504 ;;		Unchanged: 0/0
 40505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40510 ;;Total ram usage:        2 bytes
 40511 ;; Hardware stack levels used:    1
 40512 ;; Hardware stack levels required when called:    1
 40513 ;; This function calls:
 40514 ;;		i2_TMR1_ReadTimer
 40515 ;;		i2_TMR1_WriteTimer
 40516 ;; This function is called by:
 40517 ;;		_TMR_ISR_lora
 40518 ;; This function uses a non-reentrant model
 40519 ;;
 40520                           
 40521                           	psect	text199
 40522  0081D0                     __ptext199:
 40523                           	opt stack 0
 40524  0081D0                     i2_TMR_SwapTimer:
 40525                           	opt stack 13
 40526                           
 40527                           ;sw_timer.c: 114: static uint16_t oldVal;
 40528                           ;sw_timer.c: 115: static uint16_t retVal;
 40529                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 40530                           
 40531                           ;incstack = 0
 40532  0081D0  ECAB  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40533  0081D4  C001  F173         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 40534  0081D8  C002  F174         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 40535  0081DC                     
 40536                           ;sw_timer.c: 123: ;
 40537  0081DC  ECAB  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40538  0081E0  0101               	movlb	1	; () banked
 40539  0081E2  5173               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 40540  0081E4  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 40541  0081E6  E104               	bnz	i2l11027
 40542  0081E8  5174               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 40543  0081EA  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 40544  0081EC  B4D8               	btfsc	status,2,c
 40545  0081EE  D7F6               	goto	i2l271
 40546  0081F0                     i2l11027:
 40547                           
 40548                           ; BSR set to: 1
 40549                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 40550  0081F0  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 40551  0081F4  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 40552  0081F8  EC16  F045         	call	i2_TMR1_WriteTimer	;wreg free
 40553                           
 40554                           ;sw_timer.c: 128: oldVal++;
 40555  0081FC  0101               	movlb	1	; () banked
 40556  0081FE  4B73               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 40557  008200  2B74               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 40558                           
 40559                           ; BSR set to: 1
 40560                           ;sw_timer.c: 130: retVal = oldVal;
 40561  008202  C173  F171         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 40562  008206  C174  F172         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 40563                           
 40564                           ; BSR set to: 1
 40565                           ;sw_timer.c: 132: return retVal;
 40566  00820A  C171  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 40567  00820E  C172  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 40568  008212  0012               	return	
 40569  008214                     __end_ofi2_TMR_SwapTimer:
 40570                           	opt stack 0
 40571                           tosu	equ	0xFFF
 40572                           tosh	equ	0xFFE
 40573                           tosl	equ	0xFFD
 40574                           pclatu	equ	0xFFB
 40575                           pclath	equ	0xFFA
 40576                           tblptru	equ	0xFF8
 40577                           tblptrh	equ	0xFF7
 40578                           tblptrl	equ	0xFF6
 40579                           tablat	equ	0xFF5
 40580                           prodh	equ	0xFF4
 40581                           prodl	equ	0xFF3
 40582                           intcon	equ	0xFF2
 40583                           intcon2	equ	0xFF1
 40584                           intcon3	equ	0xFF0
 40585                           indf0	equ	0xFEF
 40586                           postinc0	equ	0xFEE
 40587                           plusw0	equ	0xFEB
 40588                           fsr0h	equ	0xFEA
 40589                           fsr0l	equ	0xFE9
 40590                           wreg	equ	0xFE8
 40591                           postinc1	equ	0xFE6
 40592                           postdec1	equ	0xFE5
 40593                           plusw1	equ	0xFE3
 40594                           fsr1h	equ	0xFE2
 40595                           fsr1l	equ	0xFE1
 40596                           indf2	equ	0xFDF
 40597                           postinc2	equ	0xFDE
 40598                           postdec2	equ	0xFDD
 40599                           plusw2	equ	0xFDB
 40600                           fsr2h	equ	0xFDA
 40601                           fsr2l	equ	0xFD9
 40602                           status	equ	0xFD8
 40603                           
 40604 ;; *************** function i2_TMR1_WriteTimer *****************
 40605 ;; Defined at:
 40606 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 40607 ;; Parameters:    Size  Location     Type
 40608 ;;  timerVal        2    0[COMRAM] unsigned int 
 40609 ;; Auto vars:     Size  Location     Type
 40610 ;;		None
 40611 ;; Return value:  Size  Location     Type
 40612 ;;                  1    wreg      void 
 40613 ;; Registers used:
 40614 ;;		wreg, status,2
 40615 ;; Tracked objects:
 40616 ;;		On entry : 0/0
 40617 ;;		On exit  : 0/0
 40618 ;;		Unchanged: 0/0
 40619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40624 ;;Total ram usage:        2 bytes
 40625 ;; Hardware stack levels used:    1
 40626 ;; This function calls:
 40627 ;;		Nothing
 40628 ;; This function is called by:
 40629 ;;		_TMR1_ISR
 40630 ;;		i2_TMR_SwapTimer
 40631 ;; This function uses a non-reentrant model
 40632 ;;
 40633                           
 40634                           	psect	text200
 40635  008A2C                     __ptext200:
 40636                           	opt stack 0
 40637  008A2C                     i2_TMR1_WriteTimer:
 40638                           	opt stack 16
 40639                           
 40640                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 40641                           
 40642                           ; BSR set to: 1
 40643                           ;incstack = 0
 40644  008A2C  A4CD               	btfss	4045,2,c	;volatile
 40645  008A2E  D007               	goto	i2l1599
 40646                           
 40647                           ;tmr1.c: 124: {
 40648                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 40649  008A30  90CD               	bcf	4045,0,c	;volatile
 40650                           
 40651                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 40652  008A32  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40653  008A34  6ECF               	movwf	4047,c	;volatile
 40654                           
 40655                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 40656  008A36  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40657                           
 40658                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 40659  008A3A  80CD               	bsf	4045,0,c	;volatile
 40660                           
 40661                           ;tmr1.c: 134: }
 40662  008A3C  0012               	return	
 40663  008A3E                     i2l1599:
 40664                           
 40665                           ;tmr1.c: 135: else
 40666                           ;tmr1.c: 136: {
 40667                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 40668  008A3E  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40669  008A40  6ECF               	movwf	4047,c	;volatile
 40670                           
 40671                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 40672  008A42  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40673  008A46  0012               	return	
 40674  008A48                     __end_ofi2_TMR1_WriteTimer:
 40675                           	opt stack 0
 40676                           tosu	equ	0xFFF
 40677                           tosh	equ	0xFFE
 40678                           tosl	equ	0xFFD
 40679                           pclatu	equ	0xFFB
 40680                           pclath	equ	0xFFA
 40681                           tblptru	equ	0xFF8
 40682                           tblptrh	equ	0xFF7
 40683                           tblptrl	equ	0xFF6
 40684                           tablat	equ	0xFF5
 40685                           prodh	equ	0xFF4
 40686                           prodl	equ	0xFF3
 40687                           intcon	equ	0xFF2
 40688                           intcon2	equ	0xFF1
 40689                           intcon3	equ	0xFF0
 40690                           indf0	equ	0xFEF
 40691                           postinc0	equ	0xFEE
 40692                           plusw0	equ	0xFEB
 40693                           fsr0h	equ	0xFEA
 40694                           fsr0l	equ	0xFE9
 40695                           wreg	equ	0xFE8
 40696                           postinc1	equ	0xFE6
 40697                           postdec1	equ	0xFE5
 40698                           plusw1	equ	0xFE3
 40699                           fsr1h	equ	0xFE2
 40700                           fsr1l	equ	0xFE1
 40701                           indf2	equ	0xFDF
 40702                           postinc2	equ	0xFDE
 40703                           postdec2	equ	0xFDD
 40704                           plusw2	equ	0xFDB
 40705                           fsr2h	equ	0xFDA
 40706                           fsr2l	equ	0xFD9
 40707                           status	equ	0xFD8
 40708                           
 40709 ;; *************** function i2_SwTimersInterrupt *****************
 40710 ;; Defined at:
 40711 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40712 ;; Parameters:    Size  Location     Type
 40713 ;;		None
 40714 ;; Auto vars:     Size  Location     Type
 40715 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 40716 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 40717 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 40718 ;; Return value:  Size  Location     Type
 40719 ;;                  4   32[COMRAM] unsigned long 
 40720 ;; Registers used:
 40721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40722 ;; Tracked objects:
 40723 ;;		On entry : 0/0
 40724 ;;		On exit  : 0/0
 40725 ;;		Unchanged: 0/0
 40726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40730 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40731 ;;Total ram usage:       17 bytes
 40732 ;; Hardware stack levels used:    1
 40733 ;; Hardware stack levels required when called:    2
 40734 ;; This function calls:
 40735 ;;		i2_TMR_GetDeltaTime
 40736 ;; This function is called by:
 40737 ;;		_TMR_ISR_lora
 40738 ;; This function uses a non-reentrant model
 40739 ;;
 40740                           
 40741                           	psect	text201
 40742  005CCE                     __ptext201:
 40743                           	opt stack 0
 40744  005CCE                     i2_SwTimersInterrupt:
 40745                           	opt stack 12
 40746                           
 40747                           ;sw_timer.c: 289: uint8_t i;
 40748                           ;sw_timer.c: 290: uint32_t timeElapsed;
 40749                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 40750                           
 40751                           ;incstack = 0
 40752  005CCE  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 40753  005CD0  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 40754  005CD2  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 40755  005CD4  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 40756                           
 40757                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 40758  005CD6  ECE2  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 40759  005CDA  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 40760  005CDE  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 40761  005CE2  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 40762  005CE6  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 40763                           
 40764                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 40765  005CEA  0E00               	movlw	0
 40766  005CEC  6E31               	movwf	i2SwTimersInterrupt@i,c
 40767  005CEE  D061               	goto	i2l328
 40768  005CF0                     
 40769                           ;sw_timer.c: 298: {
 40770                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 40771  005CF0  5031               	movf	i2SwTimersInterrupt@i,w,c
 40772  005CF2  0D08               	mullw	8
 40773  005CF4  0E04               	movlw	4
 40774  005CF6  26F3               	addwf	prodl,f,c
 40775  005CF8  0E00               	movlw	0
 40776  005CFA  22F4               	addwfc	prodh,f,c
 40777  005CFC  0E00               	movlw	low _swTimers
 40778  005CFE  24F3               	addwf	prodl,w,c
 40779  005D00  6ED9               	movwf	fsr2l,c
 40780  005D02  0E03               	movlw	high _swTimers
 40781  005D04  20F4               	addwfc	prodh,w,c
 40782  005D06  6EDA               	movwf	fsr2h,c
 40783  005D08  04DE               	decf	postinc2,w,c
 40784  005D0A  A4D8               	btfss	status,2,c
 40785  005D0C  D051               	goto	i2l333
 40786                           
 40787                           ;sw_timer.c: 302: {
 40788                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 40789  005D0E  5031               	movf	i2SwTimersInterrupt@i,w,c
 40790  005D10  0D08               	mullw	8
 40791  005D12  0E00               	movlw	low _swTimers
 40792  005D14  24F3               	addwf	prodl,w,c
 40793  005D16  6ED9               	movwf	fsr2l,c
 40794  005D18  0E03               	movlw	high _swTimers
 40795  005D1A  20F4               	addwfc	prodh,w,c
 40796  005D1C  6EDA               	movwf	fsr2h,c
 40797  005D1E  50DE               	movf	postinc2,w,c
 40798  005D20  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 40799  005D22  50DE               	movf	postinc2,w,c
 40800  005D24  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 40801  005D26  50DE               	movf	postinc2,w,c
 40802  005D28  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 40803  005D2A  50DE               	movf	postinc2,w,c
 40804  005D2C  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 40805  005D2E  A0D8               	btfss	status,0,c
 40806  005D30  D00D               	goto	i2l331
 40807                           
 40808                           ;sw_timer.c: 304: {
 40809                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 40810  005D32  5031               	movf	i2SwTimersInterrupt@i,w,c
 40811  005D34  0D08               	mullw	8
 40812  005D36  0E00               	movlw	low _swTimers
 40813  005D38  24F3               	addwf	prodl,w,c
 40814  005D3A  6ED9               	movwf	fsr2l,c
 40815  005D3C  0E03               	movlw	high _swTimers
 40816  005D3E  20F4               	addwfc	prodh,w,c
 40817  005D40  6EDA               	movwf	fsr2h,c
 40818  005D42  6ADE               	clrf	postinc2,c
 40819  005D44  6ADE               	clrf	postinc2,c
 40820  005D46  6ADE               	clrf	postinc2,c
 40821  005D48  6ADD               	clrf	postdec2,c
 40822                           
 40823                           ;sw_timer.c: 306: }
 40824  005D4A  D032               	goto	i2l333
 40825  005D4C                     i2l331:
 40826                           
 40827                           ;sw_timer.c: 307: else
 40828                           ;sw_timer.c: 308: {
 40829                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 40830  005D4C  5031               	movf	i2SwTimersInterrupt@i,w,c
 40831  005D4E  0D08               	mullw	8
 40832  005D50  0E00               	movlw	low _swTimers
 40833  005D52  24F3               	addwf	prodl,w,c
 40834  005D54  6ED9               	movwf	fsr2l,c
 40835  005D56  0E03               	movlw	high _swTimers
 40836  005D58  20F4               	addwfc	prodh,w,c
 40837  005D5A  6EDA               	movwf	fsr2h,c
 40838  005D5C  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 40839  005D5E  5EDE               	subwf	postinc2,f,c
 40840  005D60  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 40841  005D62  5ADE               	subwfb	postinc2,f,c
 40842  005D64  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 40843  005D66  5ADE               	subwfb	postinc2,f,c
 40844  005D68  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 40845  005D6A  5ADE               	subwfb	postinc2,f,c
 40846                           
 40847                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 40848  005D6C  5031               	movf	i2SwTimersInterrupt@i,w,c
 40849  005D6E  0D08               	mullw	8
 40850  005D70  0E00               	movlw	low _swTimers
 40851  005D72  24F3               	addwf	prodl,w,c
 40852  005D74  6ED9               	movwf	fsr2l,c
 40853  005D76  0E03               	movlw	high _swTimers
 40854  005D78  20F4               	addwfc	prodh,w,c
 40855  005D7A  6EDA               	movwf	fsr2h,c
 40856  005D7C  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 40857  005D7E  5CDE               	subwf	postinc2,w,c
 40858  005D80  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 40859  005D82  58DE               	subwfb	postinc2,w,c
 40860  005D84  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 40861  005D86  58DE               	subwfb	postinc2,w,c
 40862  005D88  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 40863  005D8A  58DE               	subwfb	postinc2,w,c
 40864  005D8C  B0D8               	btfsc	status,0,c
 40865  005D8E  D010               	goto	i2l333
 40866                           
 40867                           ;sw_timer.c: 313: {
 40868                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 40869  005D90  5031               	movf	i2SwTimersInterrupt@i,w,c
 40870  005D92  0D08               	mullw	8
 40871  005D94  0E00               	movlw	low _swTimers
 40872  005D96  24F3               	addwf	prodl,w,c
 40873  005D98  6ED9               	movwf	fsr2l,c
 40874  005D9A  0E03               	movlw	high _swTimers
 40875  005D9C  20F4               	addwfc	prodh,w,c
 40876  005D9E  6EDA               	movwf	fsr2h,c
 40877  005DA0  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 40878  005DA4  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 40879  005DA8  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 40880  005DAC  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 40881  005DB0                     i2l333:
 40882  005DB0  2A31               	incf	i2SwTimersInterrupt@i,f,c
 40883  005DB2                     i2l328:
 40884  005DB2  0100               	movlb	0	; () banked
 40885  005DB4  51F9               	movf	_allocatedTimers& (0+255),w,b	;volatile
 40886  005DB6  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 40887  005DB8  A0D8               	btfss	status,0,c
 40888  005DBA  D79A               	goto	i2l329
 40889                           
 40890                           ; BSR set to: 0
 40891                           ;sw_timer.c: 315: }
 40892                           ;sw_timer.c: 316: }
 40893                           ;sw_timer.c: 317: }
 40894                           ;sw_timer.c: 318: }
 40895                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 40896  005DBC  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 40897  005DC0  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 40898  005DC4  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 40899  005DC8  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 40900                           
 40901                           ; BSR set to: 0
 40902  005DCC  0012               	return		;funcret
 40903  005DCE                     __end_ofi2_SwTimersInterrupt:
 40904                           	opt stack 0
 40905                           tosu	equ	0xFFF
 40906                           tosh	equ	0xFFE
 40907                           tosl	equ	0xFFD
 40908                           pclatu	equ	0xFFB
 40909                           pclath	equ	0xFFA
 40910                           tblptru	equ	0xFF8
 40911                           tblptrh	equ	0xFF7
 40912                           tblptrl	equ	0xFF6
 40913                           tablat	equ	0xFF5
 40914                           prodh	equ	0xFF4
 40915                           prodl	equ	0xFF3
 40916                           intcon	equ	0xFF2
 40917                           intcon2	equ	0xFF1
 40918                           intcon3	equ	0xFF0
 40919                           indf0	equ	0xFEF
 40920                           postinc0	equ	0xFEE
 40921                           plusw0	equ	0xFEB
 40922                           fsr0h	equ	0xFEA
 40923                           fsr0l	equ	0xFE9
 40924                           wreg	equ	0xFE8
 40925                           postinc1	equ	0xFE6
 40926                           postdec1	equ	0xFE5
 40927                           plusw1	equ	0xFE3
 40928                           fsr1h	equ	0xFE2
 40929                           fsr1l	equ	0xFE1
 40930                           indf2	equ	0xFDF
 40931                           postinc2	equ	0xFDE
 40932                           postdec2	equ	0xFDD
 40933                           plusw2	equ	0xFDB
 40934                           fsr2h	equ	0xFDA
 40935                           fsr2l	equ	0xFD9
 40936                           status	equ	0xFD8
 40937                           
 40938 ;; *************** function i2_TMR_GetDeltaTime *****************
 40939 ;; Defined at:
 40940 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40941 ;; Parameters:    Size  Location     Type
 40942 ;;		None
 40943 ;; Auto vars:     Size  Location     Type
 40944 ;;		None
 40945 ;; Return value:  Size  Location     Type
 40946 ;;                  4    8[COMRAM] unsigned long 
 40947 ;; Registers used:
 40948 ;;		wreg, status,2, status,0, cstack
 40949 ;; Tracked objects:
 40950 ;;		On entry : 0/0
 40951 ;;		On exit  : 0/0
 40952 ;;		Unchanged: 0/0
 40953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40956 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40957 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40958 ;;Total ram usage:       24 bytes
 40959 ;; Hardware stack levels used:    1
 40960 ;; Hardware stack levels required when called:    1
 40961 ;; This function calls:
 40962 ;;		i2_TMR1_ReadTimer
 40963 ;; This function is called by:
 40964 ;;		i2_SwTimersInterrupt
 40965 ;; This function uses a non-reentrant model
 40966 ;;
 40967                           
 40968                           	psect	text202
 40969  004DC4                     __ptext202:
 40970                           	opt stack 0
 40971  004DC4                     i2_TMR_GetDeltaTime:
 40972                           	opt stack 12
 40973                           
 40974                           ;sw_timer.c: 90: static uint32_t retVal;
 40975                           ;sw_timer.c: 91: static uint16_t tmrVal;
 40976                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 40977                           
 40978                           ; BSR set to: 0
 40979                           ;incstack = 0
 40980  004DC4  ECAB  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40981  004DC8  C001  F175         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 40982  004DCC  C002  F176         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 40983                           
 40984                           ;sw_timer.c: 95: if (timerOverflow == 1)
 40985  004DD0  0447               	decf	_timerOverflow,w,c	;volatile
 40986  004DD2  A4D8               	btfss	status,2,c
 40987  004DD4  D066               	goto	i2l261
 40988                           
 40989                           ;sw_timer.c: 96: {
 40990                           ;sw_timer.c: 97: timerOverflow = 0;
 40991  004DD6  0E00               	movlw	0
 40992  004DD8  6E47               	movwf	_timerOverflow,c	;volatile
 40993                           
 40994                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 40995  004DDA  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 40996  004DDE  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 40997  004DE2  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 40998  004DE6  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 40999  004DEA  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 41000  004DEC  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 41001  004DEE  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 41002  004DF0  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 41003  004DF2  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 41004  004DF4  0E00               	movlw	0
 41005  004DF6  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 41006  004DF8  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 41007  004DFA  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 41008  004DFC  5044               	movf	_reloadVal,w,c	;volatile
 41009  004DFE  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 41010  004E00  5045               	movf	_reloadVal+1,w,c	;volatile
 41011  004E02  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 41012  004E04  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 41013  004E06  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 41014  004E08  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 41015  004E0A  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 41016  004E0C  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 41017  004E0E  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 41018  004E10  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 41019  004E12  0E00               	movlw	0
 41020  004E14  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 41021  004E16  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 41022  004E18  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 41023  004E1A  0101               	movlb	1	; () banked
 41024  004E1C  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 41025  004E1E  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 41026  004E20  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 41027  004E22  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 41028  004E24  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 41029  004E26  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 41030  004E28  0E00               	movlw	0
 41031  004E2A  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 41032  004E2C  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 41033  004E2E  0E00               	movlw	0
 41034  004E30  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 41035  004E32  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 41036  004E34  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 41037  004E36  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 41038  004E38  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 41039  004E3A  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 41040  004E3C  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 41041  004E3E  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 41042  004E40  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 41043  004E42  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 41044  004E44  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 41045  004E46  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 41046  004E48  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 41047  004E4A  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 41048  004E4C  5040               	movf	_ticksAdded,w,c	;volatile
 41049  004E4E  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 41050  004E50  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 41051  004E52  5041               	movf	_ticksAdded+1,w,c	;volatile
 41052  004E54  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 41053  004E56  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 41054  004E58  5042               	movf	_ticksAdded+2,w,c	;volatile
 41055  004E5A  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 41056  004E5C  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 41057  004E5E  5043               	movf	_ticksAdded+3,w,c	;volatile
 41058  004E60  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 41059  004E62  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 41060  004E64  0E00               	movlw	0
 41061  004E66  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 41062  004E68  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41063  004E6A  0E00               	movlw	0
 41064  004E6C  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 41065  004E6E  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41066  004E70  0E01               	movlw	1
 41067  004E72  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 41068  004E74  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41069  004E76  0E00               	movlw	0
 41070  004E78  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 41071  004E7A  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41072                           
 41073                           ; BSR set to: 1
 41074                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 41075  004E7C  C175  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 41076  004E80  C176  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 41077  004E84  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 41078  004E86  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 41079                           
 41080                           ; BSR set to: 1
 41081                           ;sw_timer.c: 100: ticksAdded = 0;
 41082  004E88  0E00               	movlw	0
 41083  004E8A  6E40               	movwf	_ticksAdded,c	;volatile
 41084  004E8C  0E00               	movlw	0
 41085  004E8E  6E41               	movwf	_ticksAdded+1,c	;volatile
 41086  004E90  0E00               	movlw	0
 41087  004E92  6E42               	movwf	_ticksAdded+2,c	;volatile
 41088  004E94  0E00               	movlw	0
 41089  004E96  6E43               	movwf	_ticksAdded+3,c	;volatile
 41090                           
 41091                           ; BSR set to: 1
 41092                           ;sw_timer.c: 101: reloadVal = 0;
 41093  004E98  0E00               	movlw	0
 41094  004E9A  6E45               	movwf	_reloadVal+1,c	;volatile
 41095  004E9C  0E00               	movlw	0
 41096  004E9E  6E44               	movwf	_reloadVal,c	;volatile
 41097                           
 41098                           ;sw_timer.c: 102: }
 41099  004EA0  D03E               	goto	i2l262
 41100  004EA2                     i2l261:
 41101                           
 41102                           ;sw_timer.c: 103: else
 41103                           ;sw_timer.c: 104: {
 41104                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 41105                           
 41106                           ; BSR set to: 1
 41107  004EA2  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 41108  004EA6  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 41109  004EAA  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 41110  004EAE  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 41111  004EB2  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 41112  004EB4  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 41113  004EB6  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 41114  004EB8  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 41115  004EBA  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 41116  004EBC  0E00               	movlw	0
 41117  004EBE  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 41118  004EC0  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 41119  004EC2  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 41120  004EC4  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 41121  004EC8  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 41122  004ECC  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 41123  004ECE  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 41124  004ED0  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 41125  004ED2  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 41126  004ED4  0101               	movlb	1	; () banked
 41127  004ED6  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 41128  004ED8  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 41129  004EDA  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 41130  004EDC  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 41131  004EDE  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 41132  004EE0  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 41133  004EE2  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 41134  004EE4  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 41135  004EE6  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 41136  004EE8  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 41137  004EEA  0E00               	movlw	0
 41138  004EEC  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 41139  004EEE  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 41140  004EF0  0E00               	movlw	0
 41141  004EF2  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 41142  004EF4  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 41143  004EF6  5040               	movf	_ticksAdded,w,c	;volatile
 41144  004EF8  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 41145  004EFA  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41146  004EFC  5041               	movf	_ticksAdded+1,w,c	;volatile
 41147  004EFE  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 41148  004F00  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41149  004F02  5042               	movf	_ticksAdded+2,w,c	;volatile
 41150  004F04  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 41151  004F06  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41152  004F08  5043               	movf	_ticksAdded+3,w,c	;volatile
 41153  004F0A  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 41154  004F0C  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41155                           
 41156                           ;sw_timer.c: 106: ticksAccounted += retVal;
 41157  004F0E  516D               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 41158  004F10  263C               	addwf	_ticksAccounted,f,c	;volatile
 41159  004F12  516E               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 41160  004F14  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 41161  004F16  516F               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 41162  004F18  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 41163  004F1A  5170               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 41164  004F1C  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 41165  004F1E                     i2l262:
 41166                           
 41167                           ; BSR set to: 1
 41168                           ;sw_timer.c: 107: }
 41169                           ;sw_timer.c: 109: return retVal;
 41170                           
 41171                           ; BSR set to: 1
 41172  004F1E  C16D  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 41173  004F22  C16E  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 41174  004F26  C16F  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 41175  004F2A  C170  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 41176  004F2E  0012               	return	
 41177  004F30                     __end_ofi2_TMR_GetDeltaTime:
 41178                           	opt stack 0
 41179                           tosu	equ	0xFFF
 41180                           tosh	equ	0xFFE
 41181                           tosl	equ	0xFFD
 41182                           pclatu	equ	0xFFB
 41183                           pclath	equ	0xFFA
 41184                           tblptru	equ	0xFF8
 41185                           tblptrh	equ	0xFF7
 41186                           tblptrl	equ	0xFF6
 41187                           tablat	equ	0xFF5
 41188                           prodh	equ	0xFF4
 41189                           prodl	equ	0xFF3
 41190                           intcon	equ	0xFF2
 41191                           intcon2	equ	0xFF1
 41192                           intcon3	equ	0xFF0
 41193                           indf0	equ	0xFEF
 41194                           postinc0	equ	0xFEE
 41195                           plusw0	equ	0xFEB
 41196                           fsr0h	equ	0xFEA
 41197                           fsr0l	equ	0xFE9
 41198                           wreg	equ	0xFE8
 41199                           postinc1	equ	0xFE6
 41200                           postdec1	equ	0xFE5
 41201                           plusw1	equ	0xFE3
 41202                           fsr1h	equ	0xFE2
 41203                           fsr1l	equ	0xFE1
 41204                           indf2	equ	0xFDF
 41205                           postinc2	equ	0xFDE
 41206                           postdec2	equ	0xFDD
 41207                           plusw2	equ	0xFDB
 41208                           fsr2h	equ	0xFDA
 41209                           fsr2l	equ	0xFD9
 41210                           status	equ	0xFD8
 41211                           
 41212 ;; *************** function i2_TMR1_ReadTimer *****************
 41213 ;; Defined at:
 41214 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 41215 ;; Parameters:    Size  Location     Type
 41216 ;;		None
 41217 ;; Auto vars:     Size  Location     Type
 41218 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 41219 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 41220 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 41221 ;; Return value:  Size  Location     Type
 41222 ;;                  2    0[COMRAM] unsigned int 
 41223 ;; Registers used:
 41224 ;;		wreg, status,2
 41225 ;; Tracked objects:
 41226 ;;		On entry : 0/0
 41227 ;;		On exit  : 0/0
 41228 ;;		Unchanged: 0/0
 41229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41231 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41233 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41234 ;;Total ram usage:        8 bytes
 41235 ;; Hardware stack levels used:    1
 41236 ;; This function calls:
 41237 ;;		Nothing
 41238 ;; This function is called by:
 41239 ;;		i2_TMR_GetDeltaTime
 41240 ;;		i2_TMR_SwapTimer
 41241 ;; This function uses a non-reentrant model
 41242 ;;
 41243                           
 41244                           	psect	text203
 41245  008956                     __ptext203:
 41246                           	opt stack 0
 41247  008956                     i2_TMR1_ReadTimer:
 41248                           	opt stack 13
 41249                           
 41250                           ;tmr1.c: 107: uint16_t readVal;
 41251                           ;tmr1.c: 108: uint8_t readValHigh;
 41252                           ;tmr1.c: 109: uint8_t readValLow;
 41253                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 41254                           
 41255                           ; BSR set to: 1
 41256                           ;incstack = 0
 41257  008956  82CD               	bsf	4045,1,c	;volatile
 41258                           
 41259                           ;tmr1.c: 113: readValLow = TMR1L;
 41260  008958  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 41261                           
 41262                           ;tmr1.c: 114: readValHigh = TMR1H;
 41263  00895C  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 41264                           
 41265                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 41266  008960  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 41267  008962  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 41268  008964  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 41269  008966  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 41270  008968  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 41271                           
 41272                           ;tmr1.c: 118: return readVal;
 41273  00896C  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 41274  008970  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 41275  008974  0012               	return	
 41276  008976                     __end_ofi2_TMR1_ReadTimer:
 41277                           	opt stack 0
 41278                           tosu	equ	0xFFF
 41279                           tosh	equ	0xFFE
 41280                           tosl	equ	0xFFD
 41281                           pclatu	equ	0xFFB
 41282                           pclath	equ	0xFFA
 41283                           tblptru	equ	0xFF8
 41284                           tblptrh	equ	0xFF7
 41285                           tblptrl	equ	0xFF6
 41286                           tablat	equ	0xFF5
 41287                           prodh	equ	0xFF4
 41288                           prodl	equ	0xFF3
 41289                           intcon	equ	0xFF2
 41290                           intcon2	equ	0xFF1
 41291                           intcon3	equ	0xFF0
 41292                           indf0	equ	0xFEF
 41293                           postinc0	equ	0xFEE
 41294                           plusw0	equ	0xFEB
 41295                           fsr0h	equ	0xFEA
 41296                           fsr0l	equ	0xFE9
 41297                           wreg	equ	0xFE8
 41298                           postinc1	equ	0xFE6
 41299                           postdec1	equ	0xFE5
 41300                           plusw1	equ	0xFE3
 41301                           fsr1h	equ	0xFE2
 41302                           fsr1l	equ	0xFE1
 41303                           indf2	equ	0xFDF
 41304                           postinc2	equ	0xFDE
 41305                           postdec2	equ	0xFDD
 41306                           plusw2	equ	0xFDB
 41307                           fsr2h	equ	0xFDA
 41308                           fsr2l	equ	0xFD9
 41309                           status	equ	0xFD8
 41310                           
 41311 ;; *************** function _PIN_MANAGER_IOC *****************
 41312 ;; Defined at:
 41313 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 41314 ;; Parameters:    Size  Location     Type
 41315 ;;		None
 41316 ;; Auto vars:     Size  Location     Type
 41317 ;;		None
 41318 ;; Return value:  Size  Location     Type
 41319 ;;                  1    wreg      void 
 41320 ;; Registers used:
 41321 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41322 ;; Tracked objects:
 41323 ;;		On entry : 0/0
 41324 ;;		On exit  : 0/0
 41325 ;;		Unchanged: 0/0
 41326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41331 ;;Total ram usage:        0 bytes
 41332 ;; Hardware stack levels used:    1
 41333 ;; Hardware stack levels required when called:    2
 41334 ;; This function calls:
 41335 ;;		_IOCB4_ISR
 41336 ;; This function is called by:
 41337 ;;		_INTERRUPT_InterruptManager
 41338 ;; This function uses a non-reentrant model
 41339 ;;
 41340                           
 41341                           	psect	text204
 41342  008C68                     __ptext204:
 41343                           	opt stack 0
 41344  008C68                     _PIN_MANAGER_IOC:
 41345                           	opt stack 15
 41346                           
 41347                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 41348                           
 41349                           ;incstack = 0
 41350  008C68  B862               	btfsc	3938,4,c	;volatile
 41351                           
 41352                           ;pin_manager.c: 114: {
 41353                           ;pin_manager.c: 115: IOCB4_ISR();
 41354  008C6A  ECBB  F044         	call	_IOCB4_ISR	;wreg free
 41355                           
 41356                           ;pin_manager.c: 116: }
 41357                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 41358  008C6E  90F2               	bcf	intcon,0,c	;volatile
 41359  008C70  0012               	return		;funcret
 41360  008C72                     __end_of_PIN_MANAGER_IOC:
 41361                           	opt stack 0
 41362                           tosu	equ	0xFFF
 41363                           tosh	equ	0xFFE
 41364                           tosl	equ	0xFFD
 41365                           pclatu	equ	0xFFB
 41366                           pclath	equ	0xFFA
 41367                           tblptru	equ	0xFF8
 41368                           tblptrh	equ	0xFF7
 41369                           tblptrl	equ	0xFF6
 41370                           tablat	equ	0xFF5
 41371                           prodh	equ	0xFF4
 41372                           prodl	equ	0xFF3
 41373                           intcon	equ	0xFF2
 41374                           intcon2	equ	0xFF1
 41375                           intcon3	equ	0xFF0
 41376                           indf0	equ	0xFEF
 41377                           postinc0	equ	0xFEE
 41378                           plusw0	equ	0xFEB
 41379                           fsr0h	equ	0xFEA
 41380                           fsr0l	equ	0xFE9
 41381                           wreg	equ	0xFE8
 41382                           postinc1	equ	0xFE6
 41383                           postdec1	equ	0xFE5
 41384                           plusw1	equ	0xFE3
 41385                           fsr1h	equ	0xFE2
 41386                           fsr1l	equ	0xFE1
 41387                           indf2	equ	0xFDF
 41388                           postinc2	equ	0xFDE
 41389                           postdec2	equ	0xFDD
 41390                           plusw2	equ	0xFDB
 41391                           fsr2h	equ	0xFDA
 41392                           fsr2l	equ	0xFD9
 41393                           status	equ	0xFD8
 41394                           
 41395 ;; *************** function _IOCB4_ISR *****************
 41396 ;; Defined at:
 41397 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 41398 ;; Parameters:    Size  Location     Type
 41399 ;;		None
 41400 ;; Auto vars:     Size  Location     Type
 41401 ;;		None
 41402 ;; Return value:  Size  Location     Type
 41403 ;;                  1    wreg      void 
 41404 ;; Registers used:
 41405 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41406 ;; Tracked objects:
 41407 ;;		On entry : 0/0
 41408 ;;		On exit  : 0/0
 41409 ;;		Unchanged: 0/0
 41410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41415 ;;Total ram usage:        0 bytes
 41416 ;; Hardware stack levels used:    1
 41417 ;; Hardware stack levels required when called:    1
 41418 ;; This function calls:
 41419 ;;		Absolute function
 41420 ;;		_DIO2_ISR_Lora
 41421 ;;		_IOCB4_DefaultInterruptHandler
 41422 ;; This function is called by:
 41423 ;;		_PIN_MANAGER_IOC
 41424 ;; This function uses a non-reentrant model
 41425 ;;
 41426                           
 41427                           	psect	text205
 41428  008976                     __ptext205:
 41429                           	opt stack 0
 41430  008976                     _IOCB4_ISR:
 41431                           	opt stack 15
 41432                           
 41433                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 41434                           
 41435                           ;incstack = 0
 41436  008976  0101               	movlb	1	; () banked
 41437  008978  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41438  00897A  11F6               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41439  00897C  B4D8               	btfsc	status,2,c
 41440  00897E  0012               	return	
 41441                           
 41442                           ; BSR set to: 1
 41443                           ;pin_manager.c: 130: {
 41444                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 41445  008980  D801               	call	i2u2159_48
 41446  008982  0012               	return	
 41447  008984                     i2u2159_48:
 41448  008984  0005               	push	
 41449  008986  6EFA               	movwf	pclath,c
 41450  008988  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41451  00898A  6EFD               	movwf	tosl,c
 41452  00898C  51F6               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41453  00898E  6EFE               	movwf	tosh,c
 41454  008990  6AFF               	clrf	tosu,c
 41455  008992  50FA               	movf	pclath,w,c
 41456  008994  0012               	return		;indir
 41457  008996                     __end_of_IOCB4_ISR:
 41458                           	opt stack 0
 41459                           tosu	equ	0xFFF
 41460                           tosh	equ	0xFFE
 41461                           tosl	equ	0xFFD
 41462                           pclatu	equ	0xFFB
 41463                           pclath	equ	0xFFA
 41464                           tblptru	equ	0xFF8
 41465                           tblptrh	equ	0xFF7
 41466                           tblptrl	equ	0xFF6
 41467                           tablat	equ	0xFF5
 41468                           prodh	equ	0xFF4
 41469                           prodl	equ	0xFF3
 41470                           intcon	equ	0xFF2
 41471                           intcon2	equ	0xFF1
 41472                           intcon3	equ	0xFF0
 41473                           indf0	equ	0xFEF
 41474                           postinc0	equ	0xFEE
 41475                           plusw0	equ	0xFEB
 41476                           fsr0h	equ	0xFEA
 41477                           fsr0l	equ	0xFE9
 41478                           wreg	equ	0xFE8
 41479                           postinc1	equ	0xFE6
 41480                           postdec1	equ	0xFE5
 41481                           plusw1	equ	0xFE3
 41482                           fsr1h	equ	0xFE2
 41483                           fsr1l	equ	0xFE1
 41484                           indf2	equ	0xFDF
 41485                           postinc2	equ	0xFDE
 41486                           postdec2	equ	0xFDD
 41487                           plusw2	equ	0xFDB
 41488                           fsr2h	equ	0xFDA
 41489                           fsr2l	equ	0xFD9
 41490                           status	equ	0xFD8
 41491                           
 41492 ;; *************** function _DIO2_ISR_Lora *****************
 41493 ;; Defined at:
 41494 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41495 ;; Parameters:    Size  Location     Type
 41496 ;;		None
 41497 ;; Auto vars:     Size  Location     Type
 41498 ;;		None
 41499 ;; Return value:  Size  Location     Type
 41500 ;;                  1    wreg      void 
 41501 ;; Registers used:
 41502 ;;		status,2, status,0
 41503 ;; Tracked objects:
 41504 ;;		On entry : 0/0
 41505 ;;		On exit  : 0/0
 41506 ;;		Unchanged: 0/0
 41507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41512 ;;Total ram usage:        0 bytes
 41513 ;; Hardware stack levels used:    1
 41514 ;; This function calls:
 41515 ;;		Nothing
 41516 ;; This function is called by:
 41517 ;;		_DIO2_ISR_Lora_Init
 41518 ;;		_IOCB4_ISR
 41519 ;; This function uses a non-reentrant model
 41520 ;;
 41521                           
 41522                           	psect	text206
 41523  008C9C                     __ptext206:
 41524                           	opt stack 0
 41525  008C9C                     _DIO2_ISR_Lora:
 41526                           	opt stack 15
 41527                           
 41528                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 41529                           
 41530                           ;incstack = 0
 41531  008C9C  0101               	movlb	1	; () banked
 41532  008C9E  857A               	bsf	_dioStatus& (0+255),2,b	;volatile
 41533                           
 41534                           ; BSR set to: 1
 41535  008CA0  0012               	return		;funcret
 41536  008CA2                     __end_of_DIO2_ISR_Lora:
 41537                           	opt stack 0
 41538                           tosu	equ	0xFFF
 41539                           tosh	equ	0xFFE
 41540                           tosl	equ	0xFFD
 41541                           pclatu	equ	0xFFB
 41542                           pclath	equ	0xFFA
 41543                           tblptru	equ	0xFF8
 41544                           tblptrh	equ	0xFF7
 41545                           tblptrl	equ	0xFF6
 41546                           tablat	equ	0xFF5
 41547                           prodh	equ	0xFF4
 41548                           prodl	equ	0xFF3
 41549                           intcon	equ	0xFF2
 41550                           intcon2	equ	0xFF1
 41551                           intcon3	equ	0xFF0
 41552                           indf0	equ	0xFEF
 41553                           postinc0	equ	0xFEE
 41554                           plusw0	equ	0xFEB
 41555                           fsr0h	equ	0xFEA
 41556                           fsr0l	equ	0xFE9
 41557                           wreg	equ	0xFE8
 41558                           postinc1	equ	0xFE6
 41559                           postdec1	equ	0xFE5
 41560                           plusw1	equ	0xFE3
 41561                           fsr1h	equ	0xFE2
 41562                           fsr1l	equ	0xFE1
 41563                           indf2	equ	0xFDF
 41564                           postinc2	equ	0xFDE
 41565                           postdec2	equ	0xFDD
 41566                           plusw2	equ	0xFDB
 41567                           fsr2h	equ	0xFDA
 41568                           fsr2l	equ	0xFD9
 41569                           status	equ	0xFD8
 41570                           
 41571 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 41572 ;; Defined at:
 41573 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 41574 ;; Parameters:    Size  Location     Type
 41575 ;;		None
 41576 ;; Auto vars:     Size  Location     Type
 41577 ;;		None
 41578 ;; Return value:  Size  Location     Type
 41579 ;;                  1    wreg      void 
 41580 ;; Registers used:
 41581 ;;		None
 41582 ;; Tracked objects:
 41583 ;;		On entry : 0/0
 41584 ;;		On exit  : 0/0
 41585 ;;		Unchanged: 0/0
 41586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41591 ;;Total ram usage:        0 bytes
 41592 ;; Hardware stack levels used:    1
 41593 ;; This function calls:
 41594 ;;		Nothing
 41595 ;; This function is called by:
 41596 ;;		_PIN_MANAGER_Initialize
 41597 ;;		_IOCB4_ISR
 41598 ;; This function uses a non-reentrant model
 41599 ;;
 41600                           
 41601                           	psect	text207
 41602  008CD2                     __ptext207:
 41603                           	opt stack 0
 41604  008CD2                     _IOCB4_DefaultInterruptHandler:
 41605                           	opt stack 15
 41606                           
 41607                           ; BSR set to: 1
 41608                           ;incstack = 0
 41609  008CD2  0012               	return		;funcret
 41610  008CD4                     __end_of_IOCB4_DefaultInterruptHandler:
 41611                           	opt stack 0
 41612                           tosu	equ	0xFFF
 41613                           tosh	equ	0xFFE
 41614                           tosl	equ	0xFFD
 41615                           pclatu	equ	0xFFB
 41616                           pclath	equ	0xFFA
 41617                           tblptru	equ	0xFF8
 41618                           tblptrh	equ	0xFF7
 41619                           tblptrl	equ	0xFF6
 41620                           tablat	equ	0xFF5
 41621                           prodh	equ	0xFF4
 41622                           prodl	equ	0xFF3
 41623                           intcon	equ	0xFF2
 41624                           intcon2	equ	0xFF1
 41625                           intcon3	equ	0xFF0
 41626                           indf0	equ	0xFEF
 41627                           postinc0	equ	0xFEE
 41628                           plusw0	equ	0xFEB
 41629                           fsr0h	equ	0xFEA
 41630                           fsr0l	equ	0xFE9
 41631                           wreg	equ	0xFE8
 41632                           postinc1	equ	0xFE6
 41633                           postdec1	equ	0xFE5
 41634                           plusw1	equ	0xFE3
 41635                           fsr1h	equ	0xFE2
 41636                           fsr1l	equ	0xFE1
 41637                           indf2	equ	0xFDF
 41638                           postinc2	equ	0xFDE
 41639                           postdec2	equ	0xFDD
 41640                           plusw2	equ	0xFDB
 41641                           fsr2h	equ	0xFDA
 41642                           fsr2l	equ	0xFD9
 41643                           status	equ	0xFD8
 41644                           
 41645 ;; *************** function _INT2_ISR *****************
 41646 ;; Defined at:
 41647 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 41648 ;; Parameters:    Size  Location     Type
 41649 ;;		None
 41650 ;; Auto vars:     Size  Location     Type
 41651 ;;		None
 41652 ;; Return value:  Size  Location     Type
 41653 ;;                  1    wreg      void 
 41654 ;; Registers used:
 41655 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41656 ;; Tracked objects:
 41657 ;;		On entry : 0/0
 41658 ;;		On exit  : 0/0
 41659 ;;		Unchanged: 0/0
 41660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41665 ;;Total ram usage:        0 bytes
 41666 ;; Hardware stack levels used:    1
 41667 ;; Hardware stack levels required when called:    2
 41668 ;; This function calls:
 41669 ;;		_INT2_CallBack
 41670 ;; This function is called by:
 41671 ;;		_INTERRUPT_InterruptManager
 41672 ;; This function uses a non-reentrant model
 41673 ;;
 41674                           
 41675                           	psect	text208
 41676  008C7A                     __ptext208:
 41677                           	opt stack 0
 41678  008C7A                     _INT2_ISR:
 41679                           	opt stack 15
 41680                           
 41681                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 41682                           
 41683                           ;incstack = 0
 41684  008C7A  92F0               	bcf	intcon3,1,c	;volatile
 41685                           
 41686                           ;ext_int.c: 64: INT2_CallBack();
 41687  008C7C  ECCB  F044         	call	_INT2_CallBack	;wreg free
 41688  008C80  0012               	return		;funcret
 41689  008C82                     __end_of_INT2_ISR:
 41690                           	opt stack 0
 41691                           tosu	equ	0xFFF
 41692                           tosh	equ	0xFFE
 41693                           tosl	equ	0xFFD
 41694                           pclatu	equ	0xFFB
 41695                           pclath	equ	0xFFA
 41696                           tblptru	equ	0xFF8
 41697                           tblptrh	equ	0xFF7
 41698                           tblptrl	equ	0xFF6
 41699                           tablat	equ	0xFF5
 41700                           prodh	equ	0xFF4
 41701                           prodl	equ	0xFF3
 41702                           intcon	equ	0xFF2
 41703                           intcon2	equ	0xFF1
 41704                           intcon3	equ	0xFF0
 41705                           indf0	equ	0xFEF
 41706                           postinc0	equ	0xFEE
 41707                           plusw0	equ	0xFEB
 41708                           fsr0h	equ	0xFEA
 41709                           fsr0l	equ	0xFE9
 41710                           wreg	equ	0xFE8
 41711                           postinc1	equ	0xFE6
 41712                           postdec1	equ	0xFE5
 41713                           plusw1	equ	0xFE3
 41714                           fsr1h	equ	0xFE2
 41715                           fsr1l	equ	0xFE1
 41716                           indf2	equ	0xFDF
 41717                           postinc2	equ	0xFDE
 41718                           postdec2	equ	0xFDD
 41719                           plusw2	equ	0xFDB
 41720                           fsr2h	equ	0xFDA
 41721                           fsr2l	equ	0xFD9
 41722                           status	equ	0xFD8
 41723                           
 41724 ;; *************** function _INT2_CallBack *****************
 41725 ;; Defined at:
 41726 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 41727 ;; Parameters:    Size  Location     Type
 41728 ;;		None
 41729 ;; Auto vars:     Size  Location     Type
 41730 ;;		None
 41731 ;; Return value:  Size  Location     Type
 41732 ;;                  1    wreg      void 
 41733 ;; Registers used:
 41734 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41735 ;; Tracked objects:
 41736 ;;		On entry : 0/0
 41737 ;;		On exit  : 0/0
 41738 ;;		Unchanged: 0/0
 41739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41744 ;;Total ram usage:        0 bytes
 41745 ;; Hardware stack levels used:    1
 41746 ;; Hardware stack levels required when called:    1
 41747 ;; This function calls:
 41748 ;;		Absolute function
 41749 ;;		_DIO1_ISR_Lora
 41750 ;;		_INT2_DefaultInterruptHandler
 41751 ;; This function is called by:
 41752 ;;		_INT2_ISR
 41753 ;; This function uses a non-reentrant model
 41754 ;;
 41755                           
 41756                           	psect	text209
 41757  008996                     __ptext209:
 41758                           	opt stack 0
 41759  008996                     _INT2_CallBack:
 41760                           	opt stack 15
 41761                           
 41762                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 41763                           
 41764                           ;incstack = 0
 41765  008996  0101               	movlb	1	; () banked
 41766  008998  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
 41767  00899A  11F8               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41768  00899C  B4D8               	btfsc	status,2,c
 41769  00899E  0012               	return	
 41770                           
 41771                           ; BSR set to: 1
 41772                           ;ext_int.c: 72: {
 41773                           ;ext_int.c: 73: INT2_InterruptHandler();
 41774  0089A0  D801               	call	i2u2157_48
 41775  0089A2  0012               	return	
 41776  0089A4                     i2u2157_48:
 41777  0089A4  0005               	push	
 41778  0089A6  6EFA               	movwf	pclath,c
 41779  0089A8  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
 41780  0089AA  6EFD               	movwf	tosl,c
 41781  0089AC  51F8               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41782  0089AE  6EFE               	movwf	tosh,c
 41783  0089B0  6AFF               	clrf	tosu,c
 41784  0089B2  50FA               	movf	pclath,w,c
 41785  0089B4  0012               	return		;indir
 41786  0089B6                     __end_of_INT2_CallBack:
 41787                           	opt stack 0
 41788                           tosu	equ	0xFFF
 41789                           tosh	equ	0xFFE
 41790                           tosl	equ	0xFFD
 41791                           pclatu	equ	0xFFB
 41792                           pclath	equ	0xFFA
 41793                           tblptru	equ	0xFF8
 41794                           tblptrh	equ	0xFF7
 41795                           tblptrl	equ	0xFF6
 41796                           tablat	equ	0xFF5
 41797                           prodh	equ	0xFF4
 41798                           prodl	equ	0xFF3
 41799                           intcon	equ	0xFF2
 41800                           intcon2	equ	0xFF1
 41801                           intcon3	equ	0xFF0
 41802                           indf0	equ	0xFEF
 41803                           postinc0	equ	0xFEE
 41804                           plusw0	equ	0xFEB
 41805                           fsr0h	equ	0xFEA
 41806                           fsr0l	equ	0xFE9
 41807                           wreg	equ	0xFE8
 41808                           postinc1	equ	0xFE6
 41809                           postdec1	equ	0xFE5
 41810                           plusw1	equ	0xFE3
 41811                           fsr1h	equ	0xFE2
 41812                           fsr1l	equ	0xFE1
 41813                           indf2	equ	0xFDF
 41814                           postinc2	equ	0xFDE
 41815                           postdec2	equ	0xFDD
 41816                           plusw2	equ	0xFDB
 41817                           fsr2h	equ	0xFDA
 41818                           fsr2l	equ	0xFD9
 41819                           status	equ	0xFD8
 41820                           
 41821 ;; *************** function _DIO1_ISR_Lora *****************
 41822 ;; Defined at:
 41823 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41824 ;; Parameters:    Size  Location     Type
 41825 ;;		None
 41826 ;; Auto vars:     Size  Location     Type
 41827 ;;		None
 41828 ;; Return value:  Size  Location     Type
 41829 ;;                  1    wreg      void 
 41830 ;; Registers used:
 41831 ;;		status,2, status,0
 41832 ;; Tracked objects:
 41833 ;;		On entry : 0/0
 41834 ;;		On exit  : 0/0
 41835 ;;		Unchanged: 0/0
 41836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41841 ;;Total ram usage:        0 bytes
 41842 ;; Hardware stack levels used:    1
 41843 ;; This function calls:
 41844 ;;		Nothing
 41845 ;; This function is called by:
 41846 ;;		_DIO1_ISR_Lora_Init
 41847 ;;		_INT2_CallBack
 41848 ;; This function uses a non-reentrant model
 41849 ;;
 41850                           
 41851                           	psect	text210
 41852  008CA2                     __ptext210:
 41853                           	opt stack 0
 41854  008CA2                     _DIO1_ISR_Lora:
 41855                           	opt stack 15
 41856                           
 41857                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 41858                           
 41859                           ;incstack = 0
 41860  008CA2  0101               	movlb	1	; () banked
 41861  008CA4  837A               	bsf	_dioStatus& (0+255),1,b	;volatile
 41862                           
 41863                           ; BSR set to: 1
 41864  008CA6  0012               	return		;funcret
 41865  008CA8                     __end_of_DIO1_ISR_Lora:
 41866                           	opt stack 0
 41867                           tosu	equ	0xFFF
 41868                           tosh	equ	0xFFE
 41869                           tosl	equ	0xFFD
 41870                           pclatu	equ	0xFFB
 41871                           pclath	equ	0xFFA
 41872                           tblptru	equ	0xFF8
 41873                           tblptrh	equ	0xFF7
 41874                           tblptrl	equ	0xFF6
 41875                           tablat	equ	0xFF5
 41876                           prodh	equ	0xFF4
 41877                           prodl	equ	0xFF3
 41878                           intcon	equ	0xFF2
 41879                           intcon2	equ	0xFF1
 41880                           intcon3	equ	0xFF0
 41881                           indf0	equ	0xFEF
 41882                           postinc0	equ	0xFEE
 41883                           plusw0	equ	0xFEB
 41884                           fsr0h	equ	0xFEA
 41885                           fsr0l	equ	0xFE9
 41886                           wreg	equ	0xFE8
 41887                           postinc1	equ	0xFE6
 41888                           postdec1	equ	0xFE5
 41889                           plusw1	equ	0xFE3
 41890                           fsr1h	equ	0xFE2
 41891                           fsr1l	equ	0xFE1
 41892                           indf2	equ	0xFDF
 41893                           postinc2	equ	0xFDE
 41894                           postdec2	equ	0xFDD
 41895                           plusw2	equ	0xFDB
 41896                           fsr2h	equ	0xFDA
 41897                           fsr2l	equ	0xFD9
 41898                           status	equ	0xFD8
 41899                           
 41900 ;; *************** function _INT2_DefaultInterruptHandler *****************
 41901 ;; Defined at:
 41902 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 41903 ;; Parameters:    Size  Location     Type
 41904 ;;		None
 41905 ;; Auto vars:     Size  Location     Type
 41906 ;;		None
 41907 ;; Return value:  Size  Location     Type
 41908 ;;                  1    wreg      void 
 41909 ;; Registers used:
 41910 ;;		None
 41911 ;; Tracked objects:
 41912 ;;		On entry : 0/0
 41913 ;;		On exit  : 0/0
 41914 ;;		Unchanged: 0/0
 41915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41920 ;;Total ram usage:        0 bytes
 41921 ;; Hardware stack levels used:    1
 41922 ;; This function calls:
 41923 ;;		Nothing
 41924 ;; This function is called by:
 41925 ;;		_EXT_INT_Initialize
 41926 ;;		_INT2_CallBack
 41927 ;; This function uses a non-reentrant model
 41928 ;;
 41929                           
 41930                           	psect	text211
 41931  008CD4                     __ptext211:
 41932                           	opt stack 0
 41933  008CD4                     _INT2_DefaultInterruptHandler:
 41934                           	opt stack 15
 41935                           
 41936                           ; BSR set to: 1
 41937                           ;incstack = 0
 41938  008CD4  0012               	return		;funcret
 41939  008CD6                     __end_of_INT2_DefaultInterruptHandler:
 41940                           	opt stack 0
 41941                           tosu	equ	0xFFF
 41942                           tosh	equ	0xFFE
 41943                           tosl	equ	0xFFD
 41944                           pclatu	equ	0xFFB
 41945                           pclath	equ	0xFFA
 41946                           tblptru	equ	0xFF8
 41947                           tblptrh	equ	0xFF7
 41948                           tblptrl	equ	0xFF6
 41949                           tablat	equ	0xFF5
 41950                           prodh	equ	0xFF4
 41951                           prodl	equ	0xFF3
 41952                           intcon	equ	0xFF2
 41953                           intcon2	equ	0xFF1
 41954                           intcon3	equ	0xFF0
 41955                           indf0	equ	0xFEF
 41956                           postinc0	equ	0xFEE
 41957                           plusw0	equ	0xFEB
 41958                           fsr0h	equ	0xFEA
 41959                           fsr0l	equ	0xFE9
 41960                           wreg	equ	0xFE8
 41961                           postinc1	equ	0xFE6
 41962                           postdec1	equ	0xFE5
 41963                           plusw1	equ	0xFE3
 41964                           fsr1h	equ	0xFE2
 41965                           fsr1l	equ	0xFE1
 41966                           indf2	equ	0xFDF
 41967                           postinc2	equ	0xFDE
 41968                           postdec2	equ	0xFDD
 41969                           plusw2	equ	0xFDB
 41970                           fsr2h	equ	0xFDA
 41971                           fsr2l	equ	0xFD9
 41972                           status	equ	0xFD8
 41973                           
 41974 ;; *************** function _INT1_ISR *****************
 41975 ;; Defined at:
 41976 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 41977 ;; Parameters:    Size  Location     Type
 41978 ;;		None
 41979 ;; Auto vars:     Size  Location     Type
 41980 ;;		None
 41981 ;; Return value:  Size  Location     Type
 41982 ;;                  1    wreg      void 
 41983 ;; Registers used:
 41984 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41985 ;; Tracked objects:
 41986 ;;		On entry : 0/0
 41987 ;;		On exit  : 0/0
 41988 ;;		Unchanged: 0/0
 41989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41994 ;;Total ram usage:        0 bytes
 41995 ;; Hardware stack levels used:    1
 41996 ;; Hardware stack levels required when called:    2
 41997 ;; This function calls:
 41998 ;;		_INT1_CallBack
 41999 ;; This function is called by:
 42000 ;;		_INTERRUPT_InterruptManager
 42001 ;; This function uses a non-reentrant model
 42002 ;;
 42003                           
 42004                           	psect	text212
 42005  008C82                     __ptext212:
 42006                           	opt stack 0
 42007  008C82                     _INT1_ISR:
 42008                           	opt stack 15
 42009                           
 42010                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 42011                           
 42012                           ;incstack = 0
 42013  008C82  90F0               	bcf	intcon3,0,c	;volatile
 42014                           
 42015                           ;ext_int.c: 38: INT1_CallBack();
 42016  008C84  ECDB  F044         	call	_INT1_CallBack	;wreg free
 42017  008C88  0012               	return		;funcret
 42018  008C8A                     __end_of_INT1_ISR:
 42019                           	opt stack 0
 42020                           tosu	equ	0xFFF
 42021                           tosh	equ	0xFFE
 42022                           tosl	equ	0xFFD
 42023                           pclatu	equ	0xFFB
 42024                           pclath	equ	0xFFA
 42025                           tblptru	equ	0xFF8
 42026                           tblptrh	equ	0xFF7
 42027                           tblptrl	equ	0xFF6
 42028                           tablat	equ	0xFF5
 42029                           prodh	equ	0xFF4
 42030                           prodl	equ	0xFF3
 42031                           intcon	equ	0xFF2
 42032                           intcon2	equ	0xFF1
 42033                           intcon3	equ	0xFF0
 42034                           indf0	equ	0xFEF
 42035                           postinc0	equ	0xFEE
 42036                           plusw0	equ	0xFEB
 42037                           fsr0h	equ	0xFEA
 42038                           fsr0l	equ	0xFE9
 42039                           wreg	equ	0xFE8
 42040                           postinc1	equ	0xFE6
 42041                           postdec1	equ	0xFE5
 42042                           plusw1	equ	0xFE3
 42043                           fsr1h	equ	0xFE2
 42044                           fsr1l	equ	0xFE1
 42045                           indf2	equ	0xFDF
 42046                           postinc2	equ	0xFDE
 42047                           postdec2	equ	0xFDD
 42048                           plusw2	equ	0xFDB
 42049                           fsr2h	equ	0xFDA
 42050                           fsr2l	equ	0xFD9
 42051                           status	equ	0xFD8
 42052                           
 42053 ;; *************** function _INT1_CallBack *****************
 42054 ;; Defined at:
 42055 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 42056 ;; Parameters:    Size  Location     Type
 42057 ;;		None
 42058 ;; Auto vars:     Size  Location     Type
 42059 ;;		None
 42060 ;; Return value:  Size  Location     Type
 42061 ;;                  1    wreg      void 
 42062 ;; Registers used:
 42063 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42064 ;; Tracked objects:
 42065 ;;		On entry : 0/0
 42066 ;;		On exit  : 0/0
 42067 ;;		Unchanged: 0/0
 42068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42073 ;;Total ram usage:        0 bytes
 42074 ;; Hardware stack levels used:    1
 42075 ;; Hardware stack levels required when called:    1
 42076 ;; This function calls:
 42077 ;;		Absolute function
 42078 ;;		_DIO0_ISR_Lora
 42079 ;;		_INT1_DefaultInterruptHandler
 42080 ;; This function is called by:
 42081 ;;		_INT1_ISR
 42082 ;; This function uses a non-reentrant model
 42083 ;;
 42084                           
 42085                           	psect	text213
 42086  0089B6                     __ptext213:
 42087                           	opt stack 0
 42088  0089B6                     _INT1_CallBack:
 42089                           	opt stack 15
 42090                           
 42091                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 42092                           
 42093                           ;incstack = 0
 42094  0089B6  0101               	movlb	1	; () banked
 42095  0089B8  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
 42096  0089BA  11FA               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42097  0089BC  B4D8               	btfsc	status,2,c
 42098  0089BE  0012               	return	
 42099                           
 42100                           ; BSR set to: 1
 42101                           ;ext_int.c: 46: {
 42102                           ;ext_int.c: 47: INT1_InterruptHandler();
 42103  0089C0  D801               	call	i2u2155_48
 42104  0089C2  0012               	return	
 42105  0089C4                     i2u2155_48:
 42106  0089C4  0005               	push	
 42107  0089C6  6EFA               	movwf	pclath,c
 42108  0089C8  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
 42109  0089CA  6EFD               	movwf	tosl,c
 42110  0089CC  51FA               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42111  0089CE  6EFE               	movwf	tosh,c
 42112  0089D0  6AFF               	clrf	tosu,c
 42113  0089D2  50FA               	movf	pclath,w,c
 42114  0089D4  0012               	return		;indir
 42115  0089D6                     __end_of_INT1_CallBack:
 42116                           	opt stack 0
 42117                           tosu	equ	0xFFF
 42118                           tosh	equ	0xFFE
 42119                           tosl	equ	0xFFD
 42120                           pclatu	equ	0xFFB
 42121                           pclath	equ	0xFFA
 42122                           tblptru	equ	0xFF8
 42123                           tblptrh	equ	0xFF7
 42124                           tblptrl	equ	0xFF6
 42125                           tablat	equ	0xFF5
 42126                           prodh	equ	0xFF4
 42127                           prodl	equ	0xFF3
 42128                           intcon	equ	0xFF2
 42129                           intcon2	equ	0xFF1
 42130                           intcon3	equ	0xFF0
 42131                           indf0	equ	0xFEF
 42132                           postinc0	equ	0xFEE
 42133                           plusw0	equ	0xFEB
 42134                           fsr0h	equ	0xFEA
 42135                           fsr0l	equ	0xFE9
 42136                           wreg	equ	0xFE8
 42137                           postinc1	equ	0xFE6
 42138                           postdec1	equ	0xFE5
 42139                           plusw1	equ	0xFE3
 42140                           fsr1h	equ	0xFE2
 42141                           fsr1l	equ	0xFE1
 42142                           indf2	equ	0xFDF
 42143                           postinc2	equ	0xFDE
 42144                           postdec2	equ	0xFDD
 42145                           plusw2	equ	0xFDB
 42146                           fsr2h	equ	0xFDA
 42147                           fsr2l	equ	0xFD9
 42148                           status	equ	0xFD8
 42149                           
 42150 ;; *************** function _DIO0_ISR_Lora *****************
 42151 ;; Defined at:
 42152 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42153 ;; Parameters:    Size  Location     Type
 42154 ;;		None
 42155 ;; Auto vars:     Size  Location     Type
 42156 ;;		None
 42157 ;; Return value:  Size  Location     Type
 42158 ;;                  1    wreg      void 
 42159 ;; Registers used:
 42160 ;;		status,2, status,0
 42161 ;; Tracked objects:
 42162 ;;		On entry : 0/0
 42163 ;;		On exit  : 0/0
 42164 ;;		Unchanged: 0/0
 42165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42170 ;;Total ram usage:        0 bytes
 42171 ;; Hardware stack levels used:    1
 42172 ;; This function calls:
 42173 ;;		Nothing
 42174 ;; This function is called by:
 42175 ;;		_DIO0_ISR_Lora_Init
 42176 ;;		_INT1_CallBack
 42177 ;; This function uses a non-reentrant model
 42178 ;;
 42179                           
 42180                           	psect	text214
 42181  008CA8                     __ptext214:
 42182                           	opt stack 0
 42183  008CA8                     _DIO0_ISR_Lora:
 42184                           	opt stack 15
 42185                           
 42186                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 42187                           
 42188                           ;incstack = 0
 42189  008CA8  0101               	movlb	1	; () banked
 42190  008CAA  817A               	bsf	_dioStatus& (0+255),0,b	;volatile
 42191                           
 42192                           ; BSR set to: 1
 42193  008CAC  0012               	return		;funcret
 42194  008CAE                     __end_of_DIO0_ISR_Lora:
 42195                           	opt stack 0
 42196                           tosu	equ	0xFFF
 42197                           tosh	equ	0xFFE
 42198                           tosl	equ	0xFFD
 42199                           pclatu	equ	0xFFB
 42200                           pclath	equ	0xFFA
 42201                           tblptru	equ	0xFF8
 42202                           tblptrh	equ	0xFF7
 42203                           tblptrl	equ	0xFF6
 42204                           tablat	equ	0xFF5
 42205                           prodh	equ	0xFF4
 42206                           prodl	equ	0xFF3
 42207                           intcon	equ	0xFF2
 42208                           intcon2	equ	0xFF1
 42209                           intcon3	equ	0xFF0
 42210                           indf0	equ	0xFEF
 42211                           postinc0	equ	0xFEE
 42212                           plusw0	equ	0xFEB
 42213                           fsr0h	equ	0xFEA
 42214                           fsr0l	equ	0xFE9
 42215                           wreg	equ	0xFE8
 42216                           postinc1	equ	0xFE6
 42217                           postdec1	equ	0xFE5
 42218                           plusw1	equ	0xFE3
 42219                           fsr1h	equ	0xFE2
 42220                           fsr1l	equ	0xFE1
 42221                           indf2	equ	0xFDF
 42222                           postinc2	equ	0xFDE
 42223                           postdec2	equ	0xFDD
 42224                           plusw2	equ	0xFDB
 42225                           fsr2h	equ	0xFDA
 42226                           fsr2l	equ	0xFD9
 42227                           status	equ	0xFD8
 42228                           
 42229 ;; *************** function _INT1_DefaultInterruptHandler *****************
 42230 ;; Defined at:
 42231 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 42232 ;; Parameters:    Size  Location     Type
 42233 ;;		None
 42234 ;; Auto vars:     Size  Location     Type
 42235 ;;		None
 42236 ;; Return value:  Size  Location     Type
 42237 ;;                  1    wreg      void 
 42238 ;; Registers used:
 42239 ;;		None
 42240 ;; Tracked objects:
 42241 ;;		On entry : 0/0
 42242 ;;		On exit  : 0/0
 42243 ;;		Unchanged: 0/0
 42244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42249 ;;Total ram usage:        0 bytes
 42250 ;; Hardware stack levels used:    1
 42251 ;; This function calls:
 42252 ;;		Nothing
 42253 ;; This function is called by:
 42254 ;;		_EXT_INT_Initialize
 42255 ;;		_INT1_CallBack
 42256 ;; This function uses a non-reentrant model
 42257 ;;
 42258                           
 42259                           	psect	text215
 42260  008CD6                     __ptext215:
 42261                           	opt stack 0
 42262  008CD6                     _INT1_DefaultInterruptHandler:
 42263                           	opt stack 15
 42264                           
 42265                           ; BSR set to: 1
 42266                           ;incstack = 0
 42267  008CD6  0012               	return		;funcret
 42268  008CD8                     __end_of_INT1_DefaultInterruptHandler:
 42269                           	opt stack 0
 42270                           tosu	equ	0xFFF
 42271                           tosh	equ	0xFFE
 42272                           tosl	equ	0xFFD
 42273                           pclatu	equ	0xFFB
 42274                           pclath	equ	0xFFA
 42275                           tblptru	equ	0xFF8
 42276                           tblptrh	equ	0xFF7
 42277                           tblptrl	equ	0xFF6
 42278                           tablat	equ	0xFF5
 42279                           prodh	equ	0xFF4
 42280                           prodl	equ	0xFF3
 42281                           intcon	equ	0xFF2
 42282                           intcon2	equ	0xFF1
 42283                           intcon3	equ	0xFF0
 42284                           indf0	equ	0xFEF
 42285                           postinc0	equ	0xFEE
 42286                           plusw0	equ	0xFEB
 42287                           fsr0h	equ	0xFEA
 42288                           fsr0l	equ	0xFE9
 42289                           wreg	equ	0xFE8
 42290                           postinc1	equ	0xFE6
 42291                           postdec1	equ	0xFE5
 42292                           plusw1	equ	0xFE3
 42293                           fsr1h	equ	0xFE2
 42294                           fsr1l	equ	0xFE1
 42295                           indf2	equ	0xFDF
 42296                           postinc2	equ	0xFDE
 42297                           postdec2	equ	0xFDD
 42298                           plusw2	equ	0xFDB
 42299                           fsr2h	equ	0xFDA
 42300                           fsr2l	equ	0xFD9
 42301                           status	equ	0xFD8
 42302                           tosu	equ	0xFFF
 42303                           tosh	equ	0xFFE
 42304                           tosl	equ	0xFFD
 42305                           pclatu	equ	0xFFB
 42306                           pclath	equ	0xFFA
 42307                           tblptru	equ	0xFF8
 42308                           tblptrh	equ	0xFF7
 42309                           tblptrl	equ	0xFF6
 42310                           tablat	equ	0xFF5
 42311                           prodh	equ	0xFF4
 42312                           prodl	equ	0xFF3
 42313                           intcon	equ	0xFF2
 42314                           intcon2	equ	0xFF1
 42315                           intcon3	equ	0xFF0
 42316                           indf0	equ	0xFEF
 42317                           postinc0	equ	0xFEE
 42318                           plusw0	equ	0xFEB
 42319                           fsr0h	equ	0xFEA
 42320                           fsr0l	equ	0xFE9
 42321                           wreg	equ	0xFE8
 42322                           postinc1	equ	0xFE6
 42323                           postdec1	equ	0xFE5
 42324                           plusw1	equ	0xFE3
 42325                           fsr1h	equ	0xFE2
 42326                           fsr1l	equ	0xFE1
 42327                           indf2	equ	0xFDF
 42328                           postinc2	equ	0xFDE
 42329                           postdec2	equ	0xFDD
 42330                           plusw2	equ	0xFDB
 42331                           fsr2h	equ	0xFDA
 42332                           fsr2l	equ	0xFD9
 42333                           status	equ	0xFD8
 42334                           
 42335                           	psect	text216
 42336  000000                     __ptext216:
 42337                           	opt stack 0
 42338                           tosu	equ	0xFFF
 42339                           tosh	equ	0xFFE
 42340                           tosl	equ	0xFFD
 42341                           pclatu	equ	0xFFB
 42342                           pclath	equ	0xFFA
 42343                           tblptru	equ	0xFF8
 42344                           tblptrh	equ	0xFF7
 42345                           tblptrl	equ	0xFF6
 42346                           tablat	equ	0xFF5
 42347                           prodh	equ	0xFF4
 42348                           prodl	equ	0xFF3
 42349                           intcon	equ	0xFF2
 42350                           intcon2	equ	0xFF1
 42351                           intcon3	equ	0xFF0
 42352                           indf0	equ	0xFEF
 42353                           postinc0	equ	0xFEE
 42354                           plusw0	equ	0xFEB
 42355                           fsr0h	equ	0xFEA
 42356                           fsr0l	equ	0xFE9
 42357                           wreg	equ	0xFE8
 42358                           postinc1	equ	0xFE6
 42359                           postdec1	equ	0xFE5
 42360                           plusw1	equ	0xFE3
 42361                           fsr1h	equ	0xFE2
 42362                           fsr1l	equ	0xFE1
 42363                           indf2	equ	0xFDF
 42364                           postinc2	equ	0xFDE
 42365                           postdec2	equ	0xFDD
 42366                           plusw2	equ	0xFDB
 42367                           fsr2h	equ	0xFDA
 42368                           fsr2l	equ	0xFD9
 42369                           status	equ	0xFD8
 42370                           
 42371                           	psect	rparam
 42372  0000                     tosu	equ	0xFFF
 42373                           tosh	equ	0xFFE
 42374                           tosl	equ	0xFFD
 42375                           pclatu	equ	0xFFB
 42376                           pclath	equ	0xFFA
 42377                           tblptru	equ	0xFF8
 42378                           tblptrh	equ	0xFF7
 42379                           tblptrl	equ	0xFF6
 42380                           tablat	equ	0xFF5
 42381                           prodh	equ	0xFF4
 42382                           prodl	equ	0xFF3
 42383                           intcon	equ	0xFF2
 42384                           intcon2	equ	0xFF1
 42385                           intcon3	equ	0xFF0
 42386                           indf0	equ	0xFEF
 42387                           postinc0	equ	0xFEE
 42388                           plusw0	equ	0xFEB
 42389                           fsr0h	equ	0xFEA
 42390                           fsr0l	equ	0xFE9
 42391                           wreg	equ	0xFE8
 42392                           postinc1	equ	0xFE6
 42393                           postdec1	equ	0xFE5
 42394                           plusw1	equ	0xFE3
 42395                           fsr1h	equ	0xFE2
 42396                           fsr1l	equ	0xFE1
 42397                           indf2	equ	0xFDF
 42398                           postinc2	equ	0xFDE
 42399                           postdec2	equ	0xFDD
 42400                           plusw2	equ	0xFDB
 42401                           fsr2h	equ	0xFDA
 42402                           fsr2l	equ	0xFD9
 42403                           status	equ	0xFD8
 42404                           
 42405                           	psect	temp
 42406  000048                     btemp:
 42407                           	opt stack 0
 42408  000048                     	ds	12
 42409  0000                     wtemp0	set	btemp
 42410  0000                     wtemp1	set	btemp+2
 42411  0000                     wtemp2	set	btemp+4
 42412  0000                     wtemp3	set	btemp+6
 42413  0000                     wtemp4	set	btemp+8
 42414  0000                     wtemp5	set	btemp+10
 42415  0000                     wtemp6	set	btemp+1
 42416  0000                     ttemp0	set	btemp
 42417  0000                     ttemp1	set	btemp+3
 42418  0000                     ttemp2	set	btemp+6
 42419  0000                     ttemp3	set	btemp+9
 42420  0000                     ltemp0	set	btemp
 42421  0000                     ltemp1	set	btemp+4
 42422  0000                     ltemp2	set	btemp+8
 42423                           tosu	equ	0xFFF
 42424                           tosh	equ	0xFFE
 42425                           tosl	equ	0xFFD
 42426                           pclatu	equ	0xFFB
 42427                           pclath	equ	0xFFA
 42428                           tblptru	equ	0xFF8
 42429                           tblptrh	equ	0xFF7
 42430                           tblptrl	equ	0xFF6
 42431                           tablat	equ	0xFF5
 42432                           prodh	equ	0xFF4
 42433                           prodl	equ	0xFF3
 42434                           intcon	equ	0xFF2
 42435                           intcon2	equ	0xFF1
 42436                           intcon3	equ	0xFF0
 42437                           indf0	equ	0xFEF
 42438                           postinc0	equ	0xFEE
 42439                           plusw0	equ	0xFEB
 42440                           fsr0h	equ	0xFEA
 42441                           fsr0l	equ	0xFE9
 42442                           wreg	equ	0xFE8
 42443                           postinc1	equ	0xFE6
 42444                           postdec1	equ	0xFE5
 42445                           plusw1	equ	0xFE3
 42446                           fsr1h	equ	0xFE2
 42447                           fsr1l	equ	0xFE1
 42448                           indf2	equ	0xFDF
 42449                           postinc2	equ	0xFDE
 42450                           postdec2	equ	0xFDD
 42451                           plusw2	equ	0xFDB
 42452                           fsr2h	equ	0xFDA
 42453                           fsr2l	equ	0xFD9
 42454                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        92
    BSS         1280
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    153     154
    BANK1           256    105     251
    BANK2           256      0     245
    BANK3           256      0     208
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1541$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), data(BANK1[8]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), applicationKey(BANK3[16]), deviceEUI(BANK1[8]), applicationEUI(BANK1[8]), 
		 -> AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), data(BANK1[8]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), applicationKey(BANK3[16]), deviceEUI(BANK1[8]), applicationEUI(BANK1[8]), 
		 -> AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> data(BANK1[8]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK1[8]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> applicationKey(BANK3[16]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK3[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> applicationEUI(BANK1[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEUI(BANK1[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 8
		 -> data(BANK1[8]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1541$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1541$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S872$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S872$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S650$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6933161
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
               _LORAWAN_SetDeviceEui
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6093343
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366018
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156134
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693430
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508445
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158447
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327333
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166277
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554668
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518077
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3106191
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217228
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1094645
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1576601
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492335
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326528
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1067995
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9419
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25173
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9673
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168115
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  327333
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  158326
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   22     8     14   46483
                                             49 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207596
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  185180
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163264
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126952
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263894
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   23204
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    7600
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  128079
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   91386
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  108927
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    6391
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    5712
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176370
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100781
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    5712
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetDeviceEui
     _memcpy
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D0      11       81.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9A       5       96.3%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     485      12        0.0%
DATA                 0      0     6A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 24 09:27:22 2019

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init 8CCC  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl 88D6  
                                                      l47 8B44  
                                                      l90 2286  
                                                      l93 2346  
                                                      l86 225A  
                                                      l95 2378  
                                                      l88 2308  
                                                      l97 239A  
                                                      l89 22CE  
                                                      l98 23AE  
                                                      l99 23BE  
                                            ___awdiv@sign 0065  
                         __size_of_UpdateJoinSuccessState 013E  
                                     ___wmul@multiplicand 0062  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 7D1E  
                                   __end_of_AESEncodeLoRa 8386  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l101 24D6  
                                                     l102 242A  
                                                     l103 2438  
                                                     l113 5510  
                                                     l106 251E  
                                                     l115 5538  
                                                     l124 7978  
                                                     l125 7930  
                                                     l117 558C  
                                                     l119 55B4  
                                                     l320 62A4  
                                                     l305 6E62  
                                                     l331 5C4E  
                                                     l323 6370  
                                                     l500 18EC  
                                                     l261 4716  
                                                     l333 5CB2  
                                                     l501 1664  
                                                     l262 47A8  
                                                     l502 1632  
                                                     l271 7F6C  
                                                     l351 2950  
                                                     l503 1596  
                                                     l319 6374  
                                                     l328 5CB4  
                                                     l280 84AE  
                                                     l440 5E3A  
                                                     l432 5DEA  
                                                     l504 164A  
                                                     l600 6A40  
                                                     l329 5BF2  
                                                     l361 2AB2  
                                                     l521 1844  
                                                     l505 15BE  
                                                     l354 29B6  
                                                     l530 1974  
                                                     l514 16C8  
                                                     l506 15E6  
                                                     l602 6A9C  
                                                     l443 5E86  
                                                     l363 2ABC  
                                                     l523 1890  
                                                     l507 161E  
                                                     l603 6A96  
                                                     l444 5E78  
                                                     l436 5E04  
                                                     l348 2916  
                                                     l532 19B8  
                                                     l524 189C  
                                                     l516 1744  
                                                     l508 1676  
                                                     l285 7042  
                                                     l189 8A72  
                                                     l445 5E7C  
                                                     l365 2ADE  
                                                     l357 2A86  
                                                     l533 19C4  
                                                     l525 18C6  
                                                     l509 16C4  
                                                     l605 6A9E  
                                                     l438 5E4C  
                                                     l526 18DE  
                                                     l550 3AFA  
                                                     l606 6AB4  
                                                     l279 84CC  
                                                     l447 5EB4  
                                                     l439 5E2E  
                                                     l375 3624  
                                                     l367 2AE8  
                                                     l359 2A90  
                                                     l471 6126  
                                                     l519 1764  
                                                     l551 3B26  
                                                     l368 2C10  
                                                     l480 6152  
                                                     l472 60D6  
                                                     l528 1962  
                                                     l560 3BD6  
                                                     l552 3B0C  
                                                     l544 3A32  
                                                     l616 5A12  
                                                     l289 7044  
                                                     l377 362E  
                                                     l481 617E  
                                                     l473 60E4  
                                                     l529 1994  
                                                     l625 57BA  
                                                     l641 83D0  
                                                     l482 6186  
                                                     l474 6116  
                                                     l546 3A4A  
                                                     l570 3CD2  
                                                     l730 7FEC  
                                                     l547 3A64  
                                                     l571 3CFE  
                                                     l548 3AD0  
                                                     l572 3D20  
                                                     l660 6F92  
                                                     l652 6F6E  
                                                     l724 834A  
                                                     l477 6136  
                                                     l549 3AE8  
                                                     l565 3C6A  
                                                     l653 6F5A  
                                             ?_RADIO_Init 0079  
                                                     l486 455C  
                                                     l718 6DA0  
                                                     l478 6144  
                                                     l558 3C4C  
                                                     l574 3D3A  
                                                     l662 6FA2  
                                                     l670 7F48  
                                                     l487 4572  
                                                     l575 3DAC  
                                                     l567 3C82  
                                                     l591 6408  
                                                     l655 6F60  
                                                     l647 8288  
                                                     l671 7F34  
                                                     l727 7FDA  
                                                     l576 3E7C  
                                                     l568 3C98  
                                                     l592 63EA  
                                                     l656 6F66  
                                                     l489 45A6  
                                                     l569 3CA4  
                                                     l665 6FAA  
                                                     l673 7F3A  
                                                     l578 3E06  
                                                     l594 643E  
                                                     l658 6FB2  
                                                     l674 7F40  
                                                     l659 6F80  
                                                     l588 643A  
                                                     l676 7F5A  
                                                     l684 7D06  
                                                     l685 7CF8  
                                                     l599 6A5E  
                                                     l849 848C  
                                                     l689 7CFE  
                                         ??_UpdateTxPower 0060  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 76B8  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 764C  
                                  _ExecuteRxParamSetupReq 3E88  
                                      _DIO2_ISR_Lora_Init 8B5C  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01F3  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 8C5E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 259A  
                                 __end_of_SwTimersExecute 6380  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 6542  
                     __end_of_RADIO_SetFrequencyHopPeriod 8C54  
                             _RADIO_SetFrequencyHopPeriod 8C4A  
                                              _CheckFlags 7B02  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 89B6  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                      __size_of_IOCB4_ISR 0020  
                                                    l1020 439A  
                                                    l1014 799A  
                                                    l1102 28CA  
                                                    l1015 799E  
                                                    l1111 2698  
                                                    l1103 25D6  
                                                    l1200 5984  
                                                    l1112 2660  
                                                    l1104 25C4  
                                                    l1122 2818  
                                                    l1123 2720  
                                                    l1044 7BDE  
                                                    l1116 2892  
                                                    l1124 2814  
                                                    l1108 25E0  
                                                    l1213 6CA8  
                                                    l1133 8AC0  
                                                    l1205 40BA  
                                                    l1221 8A04  
                                                    l1117 2718  
                                                    l1150 3478  
                                                    l1046 7C0E  
                                                    l1118 26E0  
                                                    l1151 32F4  
                                                    l1207 4270  
                                                    l1320 7AE8  
                                                    l1304 88D2  
                                                    l1152 3346  
                                                    l2200 06AE  
                                                    l1233 76B2  
                                                    l1073 1476  
                                                    l1145 7E06  
                                                    l1137 869C  
                                                    l1153 3384  
                                                    l1209 427E  
                                                    l2201 02DE  
                                                    l1082 11E2  
                                                    l1074 0EDA  
                                                    l1146 7E12  
                                                    l1170 39AE  
                                                    l1226 4BDE  
                                                    l2202 03EE  
                                                    l1251 71A8  
                                                    l1091 13EA  
                                                    l1155 345E  
                                                    l1171 39A0  
                                                    l1227 4AE6  
                                                    l2211 0576  
                                                    l2203 04AA  
                                                    l2107 4DBA  
                                                    l2060 527E  
                                                    l1076 0FF8  
                                                    l2300 1F62  
                                                    l1332 7642  
                                                    l1180 3F96  
                                                    l1228 4BDA  
                                                    l2204 0492  
                                                    l2061 524A  
                                                    l1077 11D4  
                                                    l1333 7614  
                                                    l1317 7AFE  
                                                    l1157 3502  
                                                    l1165 38AC  
                                                    l1181 3FD6  
                                                    l2221 0810  
                                                    l2213 0592  
                                                    l1246 711E  
                                                    l2062 527A  
                                                    l1086 12E8  
                                                    l2302 1FA6  
                                                    l1270 506C  
                                                    l1334 7624  
                                                    l1326 7608  
                                                    l1318 7ABE  
                                                    l1174 3A04  
                                                    l1182 4092  
                                                    l2230 0942  
                                                    l1191 5944  
                                                    l1087 1308  
                                                    l1079 113E  
                                                    l2311 1FEE  
                                                    l1335 7630  
                                                    l1327 75FE  
                                                    l1175 3A12  
                                                    l2223 08E6  
                                                    l2215 05A4  
                                                    l1351 2F44  
                                                    l2160 5EDE  
                                                    l1096 14AA  
                                                    l1088 1386  
                                                    l2312 205A  
                                                    l1328 75F0  
                                                    l1256 5480  
                                                    l1168 38EA  
                                                    l2240 0B42  
                                                    l2232 096E  
                                                    l2224 08CE  
                                                    l2216 0652  
                                                    l2208 04DA  
                                                    l2080 69FC  
                                                    l2161 5F4C  
                                                    l2321 4866  
                                                    l1193 5946  
                                                    l1089 145E  
                                                    l2313 20E4  
                                                    l1257 53A6  
                                                    l1281 788C  
                                                    l1169 3A16  
                                                    l2209 051E  
                                                    l2129 5BC6  
                                                    l2162 5FB4  
                                                    l2402 73B2  
                                                    l2306 1FAC  
                                                    l1266 4F90  
                                                    l1258 5414  
                                                    l2242 0C18  
                                                    l2234 0980  
                                                    l2067 52E0  
                                                    l2059 528C  
                                                    l1187 587E  
                                                    l2331 1DE8  
                                                    l2315 214C  
                                                    l2307 1FBA  
                                                    l1267 5070  
                                                    l1259 547C  
                                                    l1179 3F56  
                                                    l2243 0C12  
                                                    l2235 09D6  
                                                    l2219 06F4  
                                                    l2083 66E4  
                                                    l1188 594A  
                                                    l2412 6884  
                                                    l2340 1C82  
                                                    l2332 1A8C  
                                                    l2308 1FDC  
                                                    l1268 4F96  
                                                    l1292 8032  
                                                    l2236 09E4  
                                                    l2092 66F4  
                                                    l1197 5966  
                                                    l1189 5884  
                                                    l2413 67D6  
                                                    l2421 604A  
                                                    l2341 1C86  
                                                    l2333 1AFA  
                                                    l1269 5004  
                                                    l1277 8AA8  
                                                    l2237 0B48  
                                                    l2229 0926  
                                                    l2406 73CC  
                                                    l2326 1E26  
                                                    l2350 1DC2  
                                                    l2342 1CE2  
                                                    l2334 1B40  
                                                    l1286 78BA  
                                                    l2262 0D02  
                                                    l2238 0AB2  
                                                    l2190 01A0  
                                                    l2078 6978  
                                                    l2159 5FB8  
                                                    l2319 4810  
                                                    l1199 5980  
                                                    l2327 19F6  
                                                    l2183 0CC4  
                                                    l2408 73E2  
                                                    l2416 6882  
                                                    l2432 4A2A  
                                                    l2360 6484  
                                                    l2336 1E24  
                                                    l2280 315C  
                                                    l2272 2F5E  
                                                    l2256 0CA2  
                                                    l2248 0C0C  
                                                    l2184 025C  
                                                    l2409 73F6  
                                                    l2433 4976  
                                                    l2361 64FC  
                                                    l2337 1B88  
                                                    l2273 31B6  
                                                    l2281 3172  
                                                    l2257 0CA6  
                                                    l2434 49BC  
                                                    l2346 1D02  
                                                    l2338 1BF6  
                                                    l2266 7A18  
                                                    l1298 882A  
                                                    l2282 3188  
                                                    l2274 30EE  
                                                    l2186 00BC  
                                                    l2506 6B12  
                                                    l2523 7C82  
                                                    l2363 6520  
                                                    l2347 1D70  
                                                    l2339 1C3C  
                                                    l2267 7A3E  
                                                    l2283 3212  
                                                    l2275 31F2  
                                                    l2371 7462  
                                                    l2195 01B2  
                                                    l2187 010A  
                                                    l2507 6B48  
                                                    l2524 7C96  
                                                    l1812 67BC  
                                                    l1804 6718  
                                                    l2276 3104  
                                                    l2188 010E  
                                                    l2349 1DB8  
                                                    l2277 311A  
                                                    l2197 0CBE  
                                                    l2438 4AC4  
                                                    l2358 647E  
                                                    l1806 6740  
                                                    l2382 8246  
                                                    l2278 3130  
                                                    l2542 7846  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l2439 4A7E  
                                                    l2367 653C  
                                                    l2359 64FE  
                                                    l1807 6750  
                                                    l2279 3146  
                                                    l2543 784E  
                                                    l2535 7806  
                                                    l2296 1EBC  
                                                    l2536 7810  
                                                    l2297 1EC6  
                                                    l2538 7826  
                                                    l2395 7B18  
                                                    l2299 1FAA  
                                                    l2539 7820  
                                                    l2396 7B2E  
                                                    l2397 7B44  
                                                    l1599 892A  
                                                    l1784 6D26  
                                                    l2680 720E  
                                                    l2930 813E  
                                                    l2682 722C  
                                                    l2683 7224  
                                                    l2940 7A56  
                                                    l2925 811C  
                                                    l2862 7324  
                                                    l2926 8114  
                                                    l2686 724C  
                                                    l2863 7318  
                                                    l2687 7256  
                                                    l2679 71FE  
                                                    l2872 77AA  
                                                    l2688 7264  
                                                    l2945 84F8  
                                                    l2873 779E  
                                                    l2929 8134  
                                                    l2946 84E6  
                                                    l2866 7358  
                                                    l2939 7A90  
                                                    l2867 7366  
                                                    l2876 77D2  
                                                    l2877 77E0  
                                        _RADIO_WritePower 60BA  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 47BA  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1077 00B8  
                                     _RADIO_Transmit$1079 00BC  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 0062  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 8996  
                       __end_of_LORAWAN_SetApplicationEui 85F2  
                       __end_of_LORAWAN_SetApplicationKey 85C4  
                                ??_InitDefault433Channels 006B  
                                ExecuteNewChannel@drRange 00AA  
                                                    _data 01C1  
                                      _PrepareSessionKeys 6B66  
                                                    _loRa 0200  
                                                    _main 6ABA  
                                                    _rand 7B60  
                          __end_of_UpdateMinMaxChDataRate 5FC6  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 28FE  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 7EC0  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 6894  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                              __end_of_RADIO_GetPacketSnr 8C90  
                                            ___param_bank 000000  
                                              _GetRx1Freq 8B16  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 7F12  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate 7722  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 8C8A  
                                        __end_of_INT2_ISR 8C82  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                           __end_of_OSCILLATOR_Initialize 8BB8  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l13115 5530  
                                         __end_of___abdiv 7858  
                                                   l13133 55AC  
                                                   l15013 04DA  
                                                   l12609 7F86  
                                                   l13505 233E  
                                                   l13417 606E  
                                                   l12803 84E6  
                                                   l15035 0576  
                                                   l12717 2C08  
                                                   l12661 2948  
                                                   l13541 2430  
                                                   l13525 23B6  
                                                   l14421 1F5E  
                                                   l12591 7A56  
                                                   l14423 1F62  
                                                   l12649 290E  
                                                   l13561 2516  
                                                   l14435 1FA4  
                                                   l15147 0926  
                                                   l12677 29AE  
                                                   l15415 11DA  
                                                   l16081 6D98  
                                                   l15273 0C9C  
                                                   l15169 096E  
                                                   l16251 485E  
                                                   l14571 66CE  
                                                   l16237 4808  
                                                   l14725 5704  
                                                   l13927 49B4  
                                                   l14671 6740  
                                                   l13767 7AB6  
                                                   l14591 40B2  
                                                   l14575 66DC  
                                                   l14719 5668  
                                                   l14579 66EC  
                                                   l15741 7116  
                                                   l14855 319E  
                                                   l15815 2D3C  
                                                   l15807 2C80  
                                                   l13969 6890  
                                                   l15817 2D56  
                                                   l15825 2DF2  
                                                   l15923 5B50  
                                                   l15757 71A0  
                                                   l15853 697A  
                                                   l15933 5B80  
                                                   l15837 2EA0  
                                                   l15871 4C6E  
                                                   l15927 5B56  
                                                   l15943 5BC2  
                                                   l15953 7532  
                                                   l15893 4D1E  
                                                   l15877 4C8C  
                                                   l15887 4CC0  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv 726E  
                                              _FillSubKey 7920  
                       __end_of_IOCB4_SetInterruptHandler 8BE6  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 7378  
                                         RADIO_Transmit@i 00C1  
                                                   u20050 4854  
                                         ___awdiv@divisor 0062  
                                                   u20070 48AA  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 77F2  
                                                   u14120 7A78  
                                                   u14210 2994  
                                                   u14140 8BCE  
                                                   u15020 16AE  
                                       ??_EnableChannels1 0069  
                                                   u14127 7A6E  
                                                   u14400 7974  
                                                   u15040 16BE  
                                                   _LATC2 007C5A  
                                                   u14410 7976  
                                    RxJoinResponse@status 0001  
                                                   _LATD3 007C63  
                                                   u14340 7328  
                                                   u14430 6EA8  
                                                   u14270 2BF6  
                                                   u14190 2942  
                                                   u15070 1716  
                                                   u16030 5958  
                                                   u16200 4A28  
                                                   u16120 650A  
                       __end_of_AckRetransmissionCallback 5BCC  
                                                   u21528 635C  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u21529 636E  
                                                   u14370 77AE  
                                                   u14610 5EA8  
                                                   u14290 2C3C  
                                                   u15410 226C  
                                                   u16050 596C  
                                                   u15250 8826  
                                                   u15500 2404  
                                                   u15420 226E  
                                                   u15095 177E  
                                                   u15520 249E  
                                                   u14720 7074  
                                                   u15360 7230  
                                                   u16160 6534  
                                                   u16400 1E32  
                                                   u16250 6844  
                                                   u17130 4284  
                                                   u14740 709C  
                                                   u16260 6890  
                                                   u15550 2564  
                                                   u14920 5564  
                                                   u15480 23B2  
                                                   u14760 70C2  
                                                   u15640 3DCC  
                                                   u15720 78B6  
                                                   u16505 3BC4  
                                                   u15625 3D5A  
                                                   u17225 4C02  
                                                   u16370 1CCA  
                                                   u16290 1A8A  
                                                   u18130 0A18  
                                                   u17058 66BA  
                                                   u15395 223C  
                                                   u16515 3BE8  
                                                   u18300 0C68  
                                                   u21797 84B6  
                                                   u17405 567A  
                                                   u14870 8120  
                                                   u15750 802C  
                                                   u17510 7416  
                                                   u18230 0BD6  
                                                   u19030 63C2  
                                                   u19110 59D0  
                                          __CFG_DEBUG$OFF 000000  
                                                   u15655 3DF4  
                                                   u16720 387C  
                                                   u17088 8468  
                                                   u18048 089E  
                                                   u19120 59E8  
                                                   u15665 3E18  
                                                   u18049 08B2  
                                                   u16490 3B9C  
                                                   u17450 73AE  
                                                   u19130 5A50  
                                                   u14891 54B6  
                                                   u16548 74E2  
                                                   u15940 7AFA  
                                                   u15860 8690  
                                                   u17428 5712  
                                                   u17380 5620  
                                                   u17365 758C  
                                                   u19125 59DC  
                                                   u17429 5726  
                                                   u14990 165E  
                                                   u16574 7DF6  
                                                   u15870 8698  
                                                   u17630 323A  
                                                   u16575 7DF0  
                                                   u19135 5A44  
                                                   u19160 5778  
                                                   u17800 03DE  
                                                   u17720 019A  
                                                   u19330 52A6  
                                                   u19170 5790  
                                                   u14995 1654  
                                                   u17395 5658  
                                                   u19180 57F8  
                                                   u17548 744A  
                                                   u18268 0C44  
                                                   u17549 745E  
                                                   u18269 0C58  
                                                   u16950 1FD0  
                                                   u18358 0CEE  
                                                   u18198 0BB0  
                                                   u17750 0278  
                                                   u19430 2E4A  
                                                   u19175 5784  
                                                   u18199 0BC4  
                                                   u18455 260C  
                                                   u18720 10F6  
                                                   u18368 0D18  
                                                   u18528 2704  
                                                   u19520 4C9A  
                                                   u19345 52CE  
                                                   u19185 57EC  
                                                   u18730 1114  
                                                   u17690 017E  
                                                   u18618 28B6  
                                                   u19355 52F2  
                                                   u17771 02B6  
                                                   u18820 138A  
                                                   u18740 1174  
                                                   u17940 05E4  
                                                   u19445 2E90  
                                                   u17918 0552  
                                                   u18638 28EA  
                                                   u18478 2684  
                                                   u18735 110A  
                                                   u17919 0566  
                                                   u19455 2EBA  
                                                   u18840 13B2  
                                                   u17848 046E  
                                                   u19560 4CD6  
                                                   u18745 1168  
                                                   u18665 0D9E  
                                                   u17849 0482  
                                                   u17970 06D8  
                                                   u18675 0E22  
                                                   u18595 2834  
                                                   u19660 5B4A  
                                                   u18685 0F14  
                                                   u18918 14CA  
                                                   u17990 07F4  
                                                   u18950 7834  
                                                   u18855 13D8  
                                                   u18695 0F98  
                                                   u19575 4D0E  
                                                   u17968 068A  
                                                   u17888 04FA  
                                                   u19728 5BAE  
                                                   u18865 13FC  
                                                   u17969 069E  
                                                   u17889 050E  
                                                   u19825 6F3C  
                                                   u19585 4D30  
                                                   u19930 6DD2  
                                                   u19768 7556  
                                                   u19688 5B7A  
                                         __end_of___lwmod 8148  
                                                   u19769 756A  
                                                   u18898 1496  
                                                   u19895 8394  
                                                   i2l331 5D4C  
                                                   i2l261 4EA2  
                                                   i2l333 5DB0  
                                                   i2l262 4F1E  
                                                   i2l271 81DC  
                                                   i2l328 5DB2  
                                                   i2l329 5CF0  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0064  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 8CCC  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                        __end_of_TMR1_ISR 8B16  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 8C72  
                            ??_IncludeMacCommandsResponse 0065  
                           __end_of_RADIO_WatchdogTimeout 7FF0  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _randx 01D9  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 8B8C  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                  _UpdateJoinSuccessState 55F2  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 8BF0  
                                              _ComputeMic 78BE  
                                 __end_of_TMR1_Initialize 864C  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate 8C0E  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 5096  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 2F4E  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 8916  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 2C48  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 19DE  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 6894  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit 8B3A  
                                            __end_of_main 6B66  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand 7BBC  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 6E02  
                                        _SetJoinFailState 844C  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 8A48  
                                    _ExecuteRxTimingSetup 8744  
                                       __end_of_IOCB4_ISR 8996  
                               __size_of_UpdateDLSettings 001C  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 8C22  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00F9  
                                                  ??_rand 00A8  
                                          ??_RADIO_RxDone 00F3  
                                          ??_RADIO_TxDone 00E3  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 8CCE  
                       __end_of_LORAWAN_LinkCheckCallback 4DC4  
                          __end_of_SetReceptionNotOkState 7478  
                             __end_of_UpdateReceiveDelays 8256  
                         __end_of_AssembleEncryptionBlock 60BA  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 7F60  
                                          _EnableChannels 8A10  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 8CBA  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic 7C16  
                         __size_of_SearchAvailableChannel 012A  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 8A62  
                                        ___llmod@dividend 0060  
                                        ___awdiv@dividend 0060  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 6A06  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 694E  
                                _RADIO_FSKPacketSent$1098 00EB  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 8676  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 0099  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 3244  
                                                  i2l1450 0044  
                  __end_of_LORAWAN_ReceiveWindow2Callback 66F8  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 6620  
                                                  i2l1452 0050  
                                                  i2l1455 005C  
                                                  i2l1448 0038  
                                                  i2l1379 7D72  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l1599 8A3E  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                        __size_of_ValidateChannelMaskCntl 0020  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                              __size_of_LORAWAN_RxTimeout 0364  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init 8B8C  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 8B4C  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags 7378  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random 8872  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 8CCE  
                                     LORAWAN_TxDone@ticks 00DA  
                      SearchAvailableChannel@randomNumber 00B9  
                    __end_of_TMR1_DefaultInterruptHandler 8CD2  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 8CD0  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel 8256  
                                               ??___abdiv 0061  
                                                  ___lmul 7C70  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 876C  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                   ?_ExecuteRxTimingSetup 0067  
                                               ??___awdiv 0064  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 6464  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                                               ??___lwmod 00AC  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 7A44  
                                                  _memset 84DC  
                                                  clear_0 68FC  
                                                  clear_1 690E  
                                                  clear_2 691A  
                                                  clear_3 6926  
                                                  clear_4 6932  
                                                  clear_5 6942  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 0066  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels 8A2C  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 8CD6  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 8CD4  
                                            __pdataCOMRAM 0054  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert 8CBE  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 5358  
                                  __end_of_ExecuteLinkAdr 350C  
                                      ??_ExecuteDutyCycle 0062  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                      __end_of_LORAWAN_SetChannelIdStatus 7C16  
                              _LORAWAN_SetChannelIdStatus 7BBC  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 8936  
                                   __end_of_SwTimerCreate 704A  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 8956  
                             ??_LORAWAN_SetApplicationEui 006D  
                             ??_LORAWAN_SetApplicationKey 006D  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize 89D6  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 6948  
                           __end_of_RADIO_FSKPayloadReady 6ABA  
                                          _RADIO_Transmit 3A20  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 006F  
                                        _ConfigureRadioRx 86CA  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 7E1C  
                                     ExecuteDevStatus@ptr 0060  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FF77  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0062  
                               ExecuteLinkAdr@channelMask 0073  
                                      __end_of_HALSPISend 8BC6  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 585E  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 86F4  
                                            __pidataBANK3 841C  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 8CCA  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 14DE  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF95  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 8CD4  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 8CD2  
                                __end_of_RADIO_WritePower 61AA  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand 8B9C  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                                  _InitDefault433Channels 715E  
                                         _UpdateFrequency 807C  
                                  _AutomaticReplyCallback 87E4  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                                         _UpdateDutyCycle 80C0  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower 86A0  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 8CCA  
                            __end_of_HALResetPinMakeInput 8CC6  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 8BF0  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 1E40  
                              _IncludeMacCommandsResponse 19DE  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate 8AAC  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 89F4  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                  __end_of_RADIO_Transmit 3C58  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 428A  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00F9  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop 87E4  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 73FA  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF7F  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 8C18  
                                    __end_of_RADIO_SetCRC 8C36  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0060  
                                    __end_of_RADIO_RxDone 6464  
                              __end_of_RADIO_RxFSKTimeout 8350  
                                    __end_of_RADIO_TxDone 5AAE  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 6FBE  
                                      __end_of_RADIO_DIO1 7F60  
                                      __end_of_RADIO_DIO2 7D1E  
                                      __end_of_RADIO_DIO3 8872  
                                      __end_of_RADIO_DIO4 83B8  
                                      __end_of_RADIO_DIO5 8744  
                               ??_RADIO_FHSSChangeChannel 0079  
                             __size_of_SwTimerSetCallback 0044  
                           __size_of_LORAWAN_SetDeviceEui 002E  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 4622  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 8956  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 75E0  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0069  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 00BB  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 409C  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 0060  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A5  
                                      EncryptFRMPayload@j 00A6  
                                      EncryptFRMPayload@k 00A4  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                               _LORAWAN_SetApplicationEui 85C4  
                                    ??_DIO3_ISR_Lora_Init 0060  
                               _LORAWAN_SetApplicationKey 8596  
                                        _UpdateDLSettings 89F4  
                                              _deviceAddr 01DD  
                                        _ValidateRxOffset 8A94  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init 8B4C  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 5730  
                                                 _AESCmac 21F0  
                                  ComputeMic@bufferLength 00CB  
                                 __end_of_UpdateDataRange 54A6  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l11027 81F0  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr 8C8A  
                                    EncryptFRMPayload@key 0099  
                                   __end_of_UpdateTxPower 8C04  
                                     _RADIO_SetIQInverted 8C22  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                     i2_SwTimersInterrupt 5CCE  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF95  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                __end_of_SetJoinFailState 847C  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl 88B6  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                        LORAWAN_SetDeviceEui@deviceEuiNew 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                       __end_of_RADIO_SetChannelFrequency 70D4  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 8BDC  
                       __end_of_SetCallbackSoftwareTimers 6620  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 5AAE  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$819 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0060  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 70D4  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers 7E6E  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 80C0  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv 77F2  
                                              AESEncode@i 007C  
                                               _AESEncode 28FE  
                                  ValidateRxOffset@result 0061  
                               __end_of_TMR_ISR_Lora_Init 8B5C  
                                                 ___awdiv 71E8  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                 __end_of_UpdateDutyCycle 8104  
                                                 ___lldiv 72F4  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod 778A  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 8104  
                               SwTimerIsRunning@isRunning 0061  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 6894  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                                 _appSKey 03A0  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 3E88  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 6ABA  
                                                 __ptext1 89D6  
                                                 __ptext2 8620  
                                                 __ptext3 8B9C  
                                                 __ptext4 7D74  
                                                 __ptext5 8BAA  
                                                 __ptext6 882E  
                                                 __ptext7 8B4C  
                                                 __ptext8 8BD2  
                                                 __ptext9 8C72  
                                    __end_of_LORAWAN_Init 79E4  
                                    __end_of_LORAWAN_Join 6D5E  
                                    __end_of_LORAWAN_Send 67CA  
                                           _DIO0_ISR_Lora 8CA8  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 5096  
                                               _IOCB4_ISR 8976  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00BC  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize 8BAA  
                          __end_of_UpdateJoinSuccessState 5730  
                                 __size_of_LORAWAN_TxDone 07B2  
                              __end_of_RADIO_SetBandwidth 8C5E  
                                         _RADIO_GetStatus 8C90  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF8E  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 8CA2  
                                             _SwTimerStop 87BC  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 03B0  
                             IncludeMacCommandsResponse@i 006D  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 37B0  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                               __size_of_TMR_GetDeltaTime 0198  
                                           _DIO2_ISR_Lora 8C9C  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 853A  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 850C  
                                      ?_ExecuteNewChannel 00A6  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 6948  
                                 _CreateAllSoftwareTimers 7EC0  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 8BE6  
                                   ??_RADIO_FSKPacketSent 00E3  
                                          _GenerateSubkey 54A6  
                                   _RADIO_WatchdogTimeout 7FAA  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF67  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 764C  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 4C58  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                               i2u2161_48 8944  
                                               i2u2155_48 89C4  
                                               i2u2157_48 89A4  
                                               i2u2159_48 8984  
                                   _UpdateCurrentDataRate 8C04  
                                   _UpdateChannelIdStatus 4F30  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 8B7C  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask 7AA4  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 8CC2  
                                            ??_GetRx1Freq 0064  
              LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 8C40  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 8C72  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                           _AESEncode$814 0072  
                                           _AESEncode$815 0074  
                                           _AESEncode$816 0076  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop 82D6  
                            __end_of_RADIO_SetFSKSyncWord 84AC  
                                      LORAWAN_Join@result 00DC  
                                      __end_of_CheckFlags 7B60  
                               ValidateTxPower@txPowerNew 0061  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 51FA  
                                      _DIO0_ISR_Lora_Init 8B7C  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01F9  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 8350  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 629A  
                              __end_of_RADIO_RegisterRead 87BC  
                       __end_of_LORAWAN_GetMaxPayloadSize 7A44  
                          __end_of_HALResetPinOutputValue 8A7C  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx 86F4  
                                __end_of_ConfigureRadioTx 7E6E  
                                         _RADIO_RxTimeout 85F2  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 3A20  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout 818C  
                                          _TMR1_ReadTimer 8894  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 55F2  
                                           RADIO_RxDone@i 00F4  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0178  
                                      __end_of_GetRx1Freq 8B28  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                         EncryptFRMPayload@macBufferIndex 009B  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys 72F4  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 8AEE  
                                         _RADIO_WriteMode 5DCE  
                              ??_RADIO_WriteConfiguration 00A8  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey 7982  
                                 _AssembleEncryptionBlock 5FC6  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                        ?_UpdateFrequency 0060  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random 8894  
                                          __end_of_RxData 8CD0  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate 8AC4  
                            __end_of_INTERRUPT_Initialize 8CB6  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                              __end_of_DIO5_ISR_Lora_Init 8CC8  
                                 __end_of_RADIO_GetStatus 8C96  
                                          __end_of___lmul 7CC8  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 8794  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 8CAE  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                      __end_of_ComputeMic 7920  
                                               Random@max 00AD  
                                          __end_of_memcpy 7AA4  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 81D0  
                                  __end_of_TMR1_ReadTimer 88B6  
                                          __end_of_memset 850C  
                                         _SPI2_Initialize 8B9C  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 8C2C  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                            _RADIO_RxDone 6380  
                                            _RADIO_TxDone 5988  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 6894  
                                          _ConfigureRadio 6C12  
                                      LORAWAN_RxDone@mhdr 00E1  
                                      LORAWAN_RxDone@temp 00E7  
                                      _DIO4_ISR_Lora_Init 8CC8  
                                __end_ofi2_TMR1_ReadTimer 8976  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 88F6  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 6F2E  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack 89D6  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 8A94  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 89B6  
                                           ??_RADIO_Reset 0065  
                                __end_of_UpdateDLSettings 8A10  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                                __end_of_ValidateRxOffset 8AAC  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 8C40  
                           ExecuteNewChannel@channelIndex 00AF  
                          __end_of_SearchAvailableChannel 5988  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer 81D0  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 __end_of_SystemTimerInit 8C7A  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 0173  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0171  
                                   _RADIO_FSKPayloadReady 6A06  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 8CC2  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0095  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 71E8  
                          __end_of_AutomaticReplyCallback 880A  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF87  
                                                ??___lmul 00A2  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                        _activationMethod 0177  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0064  
                                   __size_of_LORAWAN_Send 00D2  
                                 __end_of_RADIO_RxTimeout 8620  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01C9  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 7FF0  
                                      __end_of_ExtractMic 7C70  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 8676  
                                       _ValidateChannelId 880A  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 8C36  
                                      _RADIO_RxFSKTimeout 8314  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 016D  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 6CBA  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                  TMR_GetDeltaTime@tmrVal 0175  
                                          _LORAWAN_TxDone 0D2C  
                            __end_of_LORAWAN_SetDeviceEui 8568  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                    __end_of_SwTimerStart 6E98  
                  __end_of_LORAWAN_EnterContinuousReceive 74F6  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive 7478  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00CA  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 00B4  
                                      LORAWAN_RxTimeout@i 00CA  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                     ??_ValidateDataRange 0062  
                                        _TMR_GetDeltaTime 4622  
                           EnableChannels@channelMaskCntl 006E  
                                 __end_of_RADIO_WriteMode 5ECC  
                 __end_of_UnconfirmedTransmissionCallback 756E  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback 74F6  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                 _RADIO_ReceiveStart$1082 00B7  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                               _aesBuffer 01B1  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 847C  
                             RADIO_SetBandwidth@bandwidth 0060  
                              __end_of_SwTimerSetCallback 818C  
       __end_of_ResetParametersForUnconfirmedTransmission 8AEE  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission 8ADA  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 01F7  
                                               _bandwidth FF8E  
                                      ??_SetJoinFailState 0060  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 7982  
                                            _LORAWAN_Join 6CBA  
                                            _LORAWAN_Send 66F8  
                                  RADIO_FSKPayloadReady@i 00F4  
                                       _ValidateFrequency 7858  
                                               __pnvBANK1 01F1  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 61AA  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 8CB6  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 807C  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 7D74  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 428A  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 04E0  
                                               _dioStatus 017A  
                               __end_of_ValidateDataRange 8036  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 5BCC  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                                               _deviceEUI 01E9  
                        __end_of_TMR1_SetInterruptHandler 8BDC  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize 8BAA  
                                                ?___awdiv 0060  
                                               __ptext100 7C16  
                                               __ptext101 726E  
                                               __ptext110 7478  
                                               __ptext102 6B66  
                               __end_of_ValidateChannelId 882E  
                                               __ptext111 8CCE  
                                               __ptext103 7378  
                                               __ptext200 8A2C  
                                               __ptext120 8A48  
                                               __ptext112 8ADA  
                                               __ptext104 7B02  
                                               __ptext201 5CCE  
                                               __ptext121 764C  
                                               __ptext113 8B28  
                                               __ptext105 5730  
                                               __ptext210 8CA2  
                                               __ptext202 4DC4  
                                               __ptext130 8C4A  
                                               __ptext122 585E  
                                               __ptext114 8C96  
                                               __ptext106 0D2C  
                                               __ptext211 8CD4  
                                               __ptext203 8956  
                                               __ptext131 847C  
                                               __ptext123 7E1C  
                                               __ptext115 88D6  
                                               __ptext107 8296  
                                               __ptext212 8C82  
                                               __ptext204 8C68  
                                               __ptext140 8872  
                                               __ptext132 704A  
                                               __ptext124 8C18  
                                               __ptext116 3C58  
                                               __ptext108 86A0  
                                               __ptext213 89B6  
                                               __ptext205 8976  
                                               __ptext141 7B60  
                                               __ptext133 8C54  
                                               __ptext125 8C22  
                                               __ptext117 86CA  
                                               __ptext109 8C90  
                                               __ptext214 8CA8  
                                               __ptext206 8C9C  
                                               __ptext150 350C  
                                               __ptext142 8104  
                                               __ptext134 3A20  
                                               __ptext126 8C2C  
                                               __ptext118 8AEE  
                                               __ptext215 8CD6  
                                               __ptext207 8CD2  
                                               __ptext151 7982  
                                               __ptext143 78BE  
                                               __ptext135 14DE  
                                               __ptext127 6C12  
                                               __ptext119 6CBA  
                                               __ptext216 0000  
                                               __ptext208 8C7A  
                                               __ptext160 8148  
                                               __ptext152 8B8C  
                                               __ptext144 21F0  
                                               __ptext136 60BA  
                                               __ptext128 8C36  
                                               __ptext209 8996  
                                               __ptext161 5DCE  
                                               __ptext153 6542  
                                               __ptext145 54A6  
                                               __ptext137 76B8  
                                               __ptext129 8C40  
                                               __ptext170 8CBA  
                                               __ptext162 8794  
                                               __ptext154 6D5E  
                                               __ptext146 7920  
                                               __ptext138 7722  
                                               __ptext171 8036  
                                               __ptext163 8BC6  
                                               __ptext155 428A  
                                               __ptext147 8350  
                                               __ptext139 47BA  
                                               __ptext180 6E02  
                                               __ptext172 84AC  
                                               __ptext164 61AA  
                                               __ptext156 5ECC  
                                               __ptext148 28FE  
                                               __ptext181 6E98  
                                               __ptext173 8A62  
                                               __ptext165 778A  
                                               __ptext157 7E6E  
                                               __ptext149 5096  
                                               __ptext190 84DC  
                                               __ptext182 7F60  
                                               __ptext174 8CBE  
                                               __ptext166 88F6  
                                               __ptext158 8C5E  
                                               __ptext191 7A44  
                                               __ptext183 8916  
                                               __ptext175 8CC2  
                                               __ptext167 8BB8  
                                               __ptext159 4458  
                                               __ptext192 7EC0  
                                               __ptext184 5BCC  
                                               __ptext176 51FA  
                                               __ptext168 8B3A  
                                               __ptext193 6FBE  
                                               __ptext185 4622  
                                               __ptext177 7C70  
                                               __ptext169 8CB6  
                                               __ptext186 8894  
                                               __ptext178 72F4  
                                               __ptext195 8B02  
                                               __ptext187 818C  
                                               __ptext179 87BC  
                                               __ptext196 8936  
                                               __ptext188 70D4  
                                               __ptext197 8CD0  
                                               __ptext189 715E  
                                               __ptext198 7D1E  
                                               __ptext199 81D0  
                                       _EncryptFRMPayload 494A  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                           __size_of_ExecuteRxTimingSetup 0028  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 494A  
                                                ?___lwmod 00A8  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 704A  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 6542  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 14DE  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 8850  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 8C0E  
                           __end_of_RADIO_SetLoRaSyncWord 8C68  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 1E40  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                              __end_ofi2_TMR_GetDeltaTime 4F30  
                                     ??_SwTimersInterrupt 0084  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _DutyCycleCallback 2C48  
                                 InitDefault433Channels@i 006B  
                                   __end_of_TMR_SwapTimer 7FAA  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                                 __end_ofi2_TMR_SwapTimer 8214  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                      _RADIO_ReceiveStart 3C58  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 8314  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 8CB2  
                                           _SwTimerCreate 6FBE  
                          __end_of_InitDefault868Channels 715E  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                           _TMR1_CallBack 8936  
                               __end_of_ValidateFrequency 78BE  
                                        _SwTimerIsRunning 86A0  
                                        _ExecuteLinkCheck 83EA  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 8C82  
                                _LORAWAN_SetDeviceAddress 8A7C  
                                                _INT2_ISR 8C7A  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 8C54  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue 8296  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 7DC8  
                                         _HALDIO5PinValue 8BC6  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 5CCE  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 8B6C  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 4AD6  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0066  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 778A  
                                    ConfigureRadioTx@freq 0073  
                             UpdateDataRange@dataRangeNew 0060  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 0169  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 5ECC  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR 8B02  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0060  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 8214  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 21F0  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                        ___abdiv@dividend 0066  
                                      _DIO1_ISR_Lora_Init 8B6C  
                               __end_of_DutyCycleCallback 2F4E  
                                       ___wmul@multiplier 0060  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                              __end_of_PrepareSessionKeys 6C12  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 585E  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 68A8  
                                               copy_data1 68C8  
                                               copy_data2 68E8  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                             __end_of_RADIO_SetIQInverted 8C2C  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 7D74  
                                             _RADIO_Reset 8036  
                                     ExecuteLinkCheck@ptr 0060  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 8794  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 4AD6  
                             __end_ofi2_SwTimersInterrupt 5DCE  
                               _LORAWAN_GetMaxPayloadSize 79E4  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0095  
                                      CheckMcastFlags@hdr 0060  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                    _LORAWAN_SetDeviceEui 853A  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 84DC  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer 8A2C  
                                               memcpy@tmp 0066  
              LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                __size_of_CheckMcastFlags 0082  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                               _ticksToScheduledInterrupt 0054  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0086  
                                      _ComputeSessionKeys 726E  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                          _applicationEUI 01E1  
                                        __size_of___lwmod 0044  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                          _applicationKey 03C0  
                                      ??_ValidateDataRate 0060  
                                _TMR1_SetInterruptHandler 8BD2  
                                  _IOCB4_InterruptHandler 01F5  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 8B3A  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission 8B28  
                                   _TMR1_InterruptHandler 01F1  
                                        ??_GenerateSubkey 0097  
                                        _CountfOptsLength 67CA  
                                              _HALSPISend 8BB8  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FF6F  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 3244  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                        __end_of_RADIO_UnhandledInterrupt 83EA  
                                           _UpdateTxPower 8BFA  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel 8296  
                                         _allocatedTimers 00F9  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 8B02  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 8CC6  
                                                __ptext10 8CC6  
                                                __ptext11 8CC8  
                                                __ptext20 8BF0  
                                                __ptext12 8CCA  
                                                __ptext21 850C  
                                                __ptext13 8B5C  
                                              _T1GCONbits 000FCC  
                                                __ptext30 55F2  
                                                __ptext22 853A  
                                                __ptext14 8BDC  
                                                __ptext31 87E4  
                                                __ptext23 8A7C  
                                                __ptext15 8B6C  
                                                __ptext40 871C  
                                                __ptext32 5AAE  
                                                __ptext24 8568  
                                                __ptext16 8B7C  
                                                __ptext41 8386  
                                                __ptext33 4C58  
                                                __ptext25 8596  
                                                __ptext17 8CB2  
                                                __ptext50 6380  
                                                __ptext42 8850  
                                                __ptext34 694E  
                                                __ptext26 85C4  
                                                __ptext18 864C  
                                                __ptext51 77F2  
                                                __ptext43 7CC8  
                                                __ptext35 6620  
                                                __ptext27 82D6  
                                                __ptext19 8BE6  
                                                __ptext60 844C  
                                                __ptext52 6A06  
                                                __ptext44 7F12  
                                                __ptext36 7FAA  
                                                __ptext28 629A  
                                                __ptext61 8CCC  
                                                __ptext53 259A  
                                                __ptext45 85F2  
                                                __ptext37 8314  
                                                __ptext29 2C48  
                                                __ptext70 7858  
                                                __ptext62 2F4E  
                                                __ptext54 0086  
                                                __ptext46 8256  
                                                __ptext38 74F6  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 7FF0  
                                                __ptext63 8744  
                                                __ptext55 756E  
                                                __ptext47 6F2E  
                                                __ptext39 8B16  
                                                __ptext80 8AAC  
                                                __ptext72 807C  
                                                __ptext64 8214  
                                                __ptext56 89F4  
                                                __ptext48 83B8  
                                                __ptext81 88B6  
                                                __ptext73 80C0  
                                                __ptext65 876C  
                                                __ptext57 409C  
                                                __ptext49 5988  
                                                __ptext90 66F8  
                                                __ptext82 7AA4  
                                                __ptext74 5358  
                                                __ptext66 3E88  
                                                __ptext58 4AD6  
                                                __ptext91 79E4  
                                                __ptext83 8BFA  
                                                __ptext75 7BBC  
                                                __ptext67 8A94  
                                                __ptext59 73FA  
                                                __ptext92 1E40  
                                                __ptext84 8C04  
                                                __ptext76 880A  
                                                __ptext68 8AC4  
                                                __ptext93 19DE  
                                                __ptext85 8A10  
                                                __ptext77 83EA  
                                                __ptext69 37B0  
                                                __ptext94 8C8A  
                                                __ptext86 75E0  
                                                __ptext78 3244  
                                                __ptext95 6464  
                                                __ptext87 4F30  
                                                __ptext79 8676  
                                                __ptext96 494A  
                                                __ptext88 7DC8  
                                                __ptext97 71E8  
                                                __ptext89 8C0E  
                                                __ptext98 5FC6  
                                                __ptext99 67CA  
                                 ExecuteRxTimingSetup@ptr 0067  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   ??_UpdateReceiveDelays 0066  
                                   __end_of_LORAWAN_Reset 4458  
                                  __end_of_StartReTxTimer 4C58  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState 73FA  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01C9  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 8BD2  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 00AC  
                                           __size_of_rand 005C  
                                       _RADIO_ReceiveStop 88D6  
                                      ??_UpdateDLSettings 0061  
                                    _LORAWAN_PlatformInit 882E  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0060  
                               __end_ofi2_TMR1_WriteTimer 8A48  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                    ??_ComputeSessionKeys 0093  
                                   ?_LORAWAN_SetDeviceEui 006B  
                                           _timerOverflow 0047  
                                            _SwTimerStart 6E02  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 018C  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 47BA  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask 7B02  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData 8C96  
                                       ??_TMR1_WriteTimer 0062  
                                              _RADIO_DIO0 6F2E  
                                              _RADIO_DIO1 7F12  
                                              _RADIO_DIO2 7CC8  
                                              _RADIO_DIO3 8850  
                                              _RADIO_DIO4 8386  
                                              _RADIO_DIO5 871C  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 8CD8  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 8CD6  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF77  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                                      __end_of_modulation FF6F  
                                              _RADIO_Init 4458  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0179  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 8CBA  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 350C  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 409C  
                                     ??_RADIO_ReleaseData 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 6D5E  
                                       _RADIO_TxDone$1094 00EB  
                                      _EXT_INT_Initialize 864C  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 6E98  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop 88F6  
                                         _SwTimersExecute 629A  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus 8C18  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                                UpdateDutyCycle@channelId 0062  
                                  GenerateSubkey@const_Rb 0098  
                         __size_of_ExecuteRxParamSetupReq 0214  
                               UpdateJoinInProgress@state 0060  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$5004 00D6  
                                     _LORAWAN_TxDone$1971 00C9  
                                     _LORAWAN_TxDone$1972 00CD  
                      __end_of_LORAWAN_LinkCheckConfigure 5358  
                               __end_of_RADIO_ReleaseData 8C9C  
                              _LORAWAN_LinkCheckConfigure 51FA  
                                      __end_of_txPower433 FFA2  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 8CBE  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0069  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                        ??_ConfigureRadio 0072  
                                      _SwTimerSetCallback 8148  
             __end_of_UpdateRetransmissionAckTimeoutState 75E0  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState 756E  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                   __end_of_DIO0_ISR_Lora 8CAE  
                                __end_of_SwTimerIsRunning 86CA  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck 841C  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule 37B0  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 8CA8  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue 82D6  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 7E1C  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters 8ADA  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 8AC4  
                                 UpdateTxPower@txPowerNew 0060  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$3459 00AC  
                        __end_of_INT1_SetInterruptHandler 8BFA  
                            FindSmallestDataRate@dataRate 0063  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 8CA2  
                                    _SystemBlockingWaitMs 84AC  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                 __size_of_EnableChannels 001C  
                            __end_of_UpdateJoinInProgress 8A62  
                            __end_of_ExecuteRxTimingSetup 876C  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFFF  
                      __size_of_LORAWAN_SetApplicationEui 002E  
                __end_of_RADIO_WriteFSKFrequencyDeviation 7722  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 76B8  
                      __size_of_LORAWAN_SetApplicationKey 002E  
                __end_of_LORAWAN_SetApplicationSessionKey 8596  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 8568  
                                        ExtractMic@buffer 006B  
                              ?_LORAWAN_SetApplicationEui 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                              ?_LORAWAN_SetApplicationKey 006B  
                                _RADIO_UnhandledInterrupt 83B8  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 7DC8  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 8916  
                                 __size_of_ExecuteLinkAdr 02C8  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 4DC4  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                  ??_LORAWAN_SetDeviceEui 006D  
                                         _PIN_MANAGER_IOC 8C68  
                                     RADIO_WritePower@ocp 0064  
                                      ??_LORAWAN_Mainloop 00F9  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                       ??_UpdateDataRange 0061  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 8620  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 017B  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 259A  
                             __end_of_RADIO_SetModulation 8C4A  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
