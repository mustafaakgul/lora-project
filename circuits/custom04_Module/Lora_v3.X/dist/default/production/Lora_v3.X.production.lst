

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 10 19:11:01 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   240                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   241  0000                     
   242                           ; Version 1.45
   243                           ; Generated 16/11/2017 GMT
   244                           ; 
   245                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18LF46K22 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   278 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   279 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   280 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   281 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   282 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   283 ;;_LORAWAN_LinkCheckCallback$3473	offset	0
   284 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   285 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   286 ;;_DutyCycleCallback$2157	offset	0
   287 ;;DutyCycleCallback@minim	offset	4
   288 ;;DutyCycleCallback@i	offset	8
   289 ;;DutyCycleCallback@found	offset	9
   290 ;;DutyCycleCallback@param	offset=-1 (param)
   291 ;;AutomaticReplyCallback@param	offset=-1 (param)
   292 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   293 ;;AckRetransmissionCallback@param	offset=-1 (param)
   294 ;;_param	offset=-1 (param)
   295 ;;_UpdateJoinSuccessState$3490	offset	0
   296 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   297                           
   298                           	psect	idataCOMRAM
   299  008C2E                     __pidataCOMRAM:
   300                           	opt stack 0
   301                           
   302                           ;initializer for _ticksToScheduledInterrupt
   303  008C2E  FFFF               	dw	65535
   304  008C30  FFFF               	dw	65535
   305                           
   306                           	psect	idataBANK1
   307  008664                     __pidataBANK1:
   308                           	opt stack 0
   309                           
   310                           ;initializer for GenerateSubkey@F7103
   311  008664  00                 	db	0
   312  008665  00                 	db	0
   313  008666  00                 	db	0
   314  008667  00                 	db	0
   315  008668  00                 	db	0
   316  008669  00                 	db	0
   317  00866A  00                 	db	0
   318  00866B  00                 	db	0
   319  00866C  00                 	db	0
   320  00866D  00                 	db	0
   321  00866E  00                 	db	0
   322  00866F  00                 	db	0
   323  008670  00                 	db	0
   324  008671  00                 	db	0
   325  008672  00                 	db	0
   326  008673  87                 	db	135
   327                           
   328                           ;initializer for _randx
   329  008674  0001               	dw	1
   330  008676  0000               	dw	0
   331                           
   332                           ;initializer for _devAddr
   333  008678  5E47               	dw	24135
   334  00867A  3DEF               	dw	15855
   335                           
   336                           ;initializer for _nwkSKey
   337  00867C  CB                 	db	203
   338  00867D  1E                 	db	30
   339  00867E  88                 	db	136
   340  00867F  5D                 	db	93
   341  008680  5D                 	db	93
   342  008681  F1                 	db	241
   343  008682  12                 	db	18
   344  008683  D5                 	db	213
   345  008684  08                 	db	8
   346  008685  CC                 	db	204
   347  008686  B9                 	db	185
   348  008687  D1                 	db	209
   349  008688  D4                 	db	212
   350  008689  4B                 	db	75
   351  00868A  1E                 	db	30
   352  00868B  DF                 	db	223
   353                           
   354                           	psect	idataBANK3
   355  008ABC                     __pidataBANK3:
   356                           	opt stack 0
   357                           
   358                           ;initializer for _appSKey
   359  008ABC  96                 	db	150
   360  008ABD  23                 	db	35
   361  008ABE  5A                 	db	90
   362  008ABF  1F                 	db	31
   363  008AC0  9A                 	db	154
   364  008AC1  E1                 	db	225
   365  008AC2  60                 	db	96
   366  008AC3  36                 	db	54
   367  008AC4  81                 	db	129
   368  008AC5  C4                 	db	196
   369  008AC6  E4                 	db	228
   370  008AC7  B5                 	db	181
   371  008AC8  54                 	db	84
   372  008AC9  C3                 	db	195
   373  008ACA  CA                 	db	202
   374  008ACB  B5                 	db	181
   375                           
   376                           	psect	mediumconst
   377  00FE60                     __pmediumconst:
   378                           	opt stack 0
   379  00FE60  00                 	db	0
   380  00FE61                     _STable:
   381                           	opt stack 0
   382  00FE61  63                 	db	99
   383  00FE62  7C                 	db	124
   384  00FE63  77                 	db	119
   385  00FE64  7B                 	db	123
   386  00FE65  F2                 	db	242
   387  00FE66  6B                 	db	107
   388  00FE67  6F                 	db	111
   389  00FE68  C5                 	db	197
   390  00FE69  30                 	db	48
   391  00FE6A  01                 	db	1
   392  00FE6B  67                 	db	103
   393  00FE6C  2B                 	db	43
   394  00FE6D  FE                 	db	254
   395  00FE6E  D7                 	db	215
   396  00FE6F  AB                 	db	171
   397  00FE70  76                 	db	118
   398  00FE71  CA                 	db	202
   399  00FE72  82                 	db	130
   400  00FE73  C9                 	db	201
   401  00FE74  7D                 	db	125
   402  00FE75  FA                 	db	250
   403  00FE76  59                 	db	89
   404  00FE77  47                 	db	71
   405  00FE78  F0                 	db	240
   406  00FE79  AD                 	db	173
   407  00FE7A  D4                 	db	212
   408  00FE7B  A2                 	db	162
   409  00FE7C  AF                 	db	175
   410  00FE7D  9C                 	db	156
   411  00FE7E  A4                 	db	164
   412  00FE7F  72                 	db	114
   413  00FE80  C0                 	db	192
   414  00FE81  B7                 	db	183
   415  00FE82  FD                 	db	253
   416  00FE83  93                 	db	147
   417  00FE84  26                 	db	38
   418  00FE85  36                 	db	54
   419  00FE86  3F                 	db	63
   420  00FE87  F7                 	db	247
   421  00FE88  CC                 	db	204
   422  00FE89  34                 	db	52
   423  00FE8A  A5                 	db	165
   424  00FE8B  E5                 	db	229
   425  00FE8C  F1                 	db	241
   426  00FE8D  71                 	db	113
   427  00FE8E  D8                 	db	216
   428  00FE8F  31                 	db	49
   429  00FE90  15                 	db	21
   430  00FE91  04                 	db	4
   431  00FE92  C7                 	db	199
   432  00FE93  23                 	db	35
   433  00FE94  C3                 	db	195
   434  00FE95  18                 	db	24
   435  00FE96  96                 	db	150
   436  00FE97  05                 	db	5
   437  00FE98  9A                 	db	154
   438  00FE99  07                 	db	7
   439  00FE9A  12                 	db	18
   440  00FE9B  80                 	db	128
   441  00FE9C  E2                 	db	226
   442  00FE9D  EB                 	db	235
   443  00FE9E  27                 	db	39
   444  00FE9F  B2                 	db	178
   445  00FEA0  75                 	db	117
   446  00FEA1  09                 	db	9
   447  00FEA2  83                 	db	131
   448  00FEA3  2C                 	db	44
   449  00FEA4  1A                 	db	26
   450  00FEA5  1B                 	db	27
   451  00FEA6  6E                 	db	110
   452  00FEA7  5A                 	db	90
   453  00FEA8  A0                 	db	160
   454  00FEA9  52                 	db	82
   455  00FEAA  3B                 	db	59
   456  00FEAB  D6                 	db	214
   457  00FEAC  B3                 	db	179
   458  00FEAD  29                 	db	41
   459  00FEAE  E3                 	db	227
   460  00FEAF  2F                 	db	47
   461  00FEB0  84                 	db	132
   462  00FEB1  53                 	db	83
   463  00FEB2  D1                 	db	209
   464  00FEB3  00                 	db	0
   465  00FEB4  ED                 	db	237
   466  00FEB5  20                 	db	32
   467  00FEB6  FC                 	db	252
   468  00FEB7  B1                 	db	177
   469  00FEB8  5B                 	db	91
   470  00FEB9  6A                 	db	106
   471  00FEBA  CB                 	db	203
   472  00FEBB  BE                 	db	190
   473  00FEBC  39                 	db	57
   474  00FEBD  4A                 	db	74
   475  00FEBE  4C                 	db	76
   476  00FEBF  58                 	db	88
   477  00FEC0  CF                 	db	207
   478  00FEC1  D0                 	db	208
   479  00FEC2  EF                 	db	239
   480  00FEC3  AA                 	db	170
   481  00FEC4  FB                 	db	251
   482  00FEC5  43                 	db	67
   483  00FEC6  4D                 	db	77
   484  00FEC7  33                 	db	51
   485  00FEC8  85                 	db	133
   486  00FEC9  45                 	db	69
   487  00FECA  F9                 	db	249
   488  00FECB  02                 	db	2
   489  00FECC  7F                 	db	127
   490  00FECD  50                 	db	80
   491  00FECE  3C                 	db	60
   492  00FECF  9F                 	db	159
   493  00FED0  A8                 	db	168
   494  00FED1  51                 	db	81
   495  00FED2  A3                 	db	163
   496  00FED3  40                 	db	64
   497  00FED4  8F                 	db	143
   498  00FED5  92                 	db	146
   499  00FED6  9D                 	db	157
   500  00FED7  38                 	db	56
   501  00FED8  F5                 	db	245
   502  00FED9  BC                 	db	188
   503  00FEDA  B6                 	db	182
   504  00FEDB  DA                 	db	218
   505  00FEDC  21                 	db	33
   506  00FEDD  10                 	db	16
   507  00FEDE  FF                 	db	255
   508  00FEDF  F3                 	db	243
   509  00FEE0  D2                 	db	210
   510  00FEE1  CD                 	db	205
   511  00FEE2  0C                 	db	12
   512  00FEE3  13                 	db	19
   513  00FEE4  EC                 	db	236
   514  00FEE5  5F                 	db	95
   515  00FEE6  97                 	db	151
   516  00FEE7  44                 	db	68
   517  00FEE8  17                 	db	23
   518  00FEE9  C4                 	db	196
   519  00FEEA  A7                 	db	167
   520  00FEEB  7E                 	db	126
   521  00FEEC  3D                 	db	61
   522  00FEED  64                 	db	100
   523  00FEEE  5D                 	db	93
   524  00FEEF  19                 	db	25
   525  00FEF0  73                 	db	115
   526  00FEF1  60                 	db	96
   527  00FEF2  81                 	db	129
   528  00FEF3  4F                 	db	79
   529  00FEF4  DC                 	db	220
   530  00FEF5  22                 	db	34
   531  00FEF6  2A                 	db	42
   532  00FEF7  90                 	db	144
   533  00FEF8  88                 	db	136
   534  00FEF9  46                 	db	70
   535  00FEFA  EE                 	db	238
   536  00FEFB  B8                 	db	184
   537  00FEFC  14                 	db	20
   538  00FEFD  DE                 	db	222
   539  00FEFE  5E                 	db	94
   540  00FEFF  0B                 	db	11
   541  00FF00  DB                 	db	219
   542  00FF01  E0                 	db	224
   543  00FF02  32                 	db	50
   544  00FF03  3A                 	db	58
   545  00FF04  0A                 	db	10
   546  00FF05  49                 	db	73
   547  00FF06  06                 	db	6
   548  00FF07  24                 	db	36
   549  00FF08  5C                 	db	92
   550  00FF09  C2                 	db	194
   551  00FF0A  D3                 	db	211
   552  00FF0B  AC                 	db	172
   553  00FF0C  62                 	db	98
   554  00FF0D  91                 	db	145
   555  00FF0E  95                 	db	149
   556  00FF0F  E4                 	db	228
   557  00FF10  79                 	db	121
   558  00FF11  E7                 	db	231
   559  00FF12  C8                 	db	200
   560  00FF13  37                 	db	55
   561  00FF14  6D                 	db	109
   562  00FF15  8D                 	db	141
   563  00FF16  D5                 	db	213
   564  00FF17  4E                 	db	78
   565  00FF18  A9                 	db	169
   566  00FF19  6C                 	db	108
   567  00FF1A  56                 	db	86
   568  00FF1B  F4                 	db	244
   569  00FF1C  EA                 	db	234
   570  00FF1D  65                 	db	101
   571  00FF1E  7A                 	db	122
   572  00FF1F  AE                 	db	174
   573  00FF20  08                 	db	8
   574  00FF21  BA                 	db	186
   575  00FF22  78                 	db	120
   576  00FF23  25                 	db	37
   577  00FF24  2E                 	db	46
   578  00FF25  1C                 	db	28
   579  00FF26  A6                 	db	166
   580  00FF27  B4                 	db	180
   581  00FF28  C6                 	db	198
   582  00FF29  E8                 	db	232
   583  00FF2A  DD                 	db	221
   584  00FF2B  74                 	db	116
   585  00FF2C  1F                 	db	31
   586  00FF2D  4B                 	db	75
   587  00FF2E  BD                 	db	189
   588  00FF2F  8B                 	db	139
   589  00FF30  8A                 	db	138
   590  00FF31  70                 	db	112
   591  00FF32  3E                 	db	62
   592  00FF33  B5                 	db	181
   593  00FF34  66                 	db	102
   594  00FF35  48                 	db	72
   595  00FF36  03                 	db	3
   596  00FF37  F6                 	db	246
   597  00FF38  0E                 	db	14
   598  00FF39  61                 	db	97
   599  00FF3A  35                 	db	53
   600  00FF3B  57                 	db	87
   601  00FF3C  B9                 	db	185
   602  00FF3D  86                 	db	134
   603  00FF3E  C1                 	db	193
   604  00FF3F  1D                 	db	29
   605  00FF40  9E                 	db	158
   606  00FF41  E1                 	db	225
   607  00FF42  F8                 	db	248
   608  00FF43  98                 	db	152
   609  00FF44  11                 	db	17
   610  00FF45  69                 	db	105
   611  00FF46  D9                 	db	217
   612  00FF47  8E                 	db	142
   613  00FF48  94                 	db	148
   614  00FF49  9B                 	db	155
   615  00FF4A  1E                 	db	30
   616  00FF4B  87                 	db	135
   617  00FF4C  E9                 	db	233
   618  00FF4D  CE                 	db	206
   619  00FF4E  55                 	db	85
   620  00FF4F  28                 	db	40
   621  00FF50  DF                 	db	223
   622  00FF51  8C                 	db	140
   623  00FF52  A1                 	db	161
   624  00FF53  89                 	db	137
   625  00FF54  0D                 	db	13
   626  00FF55  BF                 	db	191
   627  00FF56  E6                 	db	230
   628  00FF57  42                 	db	66
   629  00FF58  68                 	db	104
   630  00FF59  41                 	db	65
   631  00FF5A  99                 	db	153
   632  00FF5B  2D                 	db	45
   633  00FF5C  0F                 	db	15
   634  00FF5D  B0                 	db	176
   635  00FF5E  54                 	db	84
   636  00FF5F  BB                 	db	187
   637  00FF60  16                 	db	22
   638  00FF61                     __end_of_STable:
   639                           	opt stack 0
   640  00FF61                     _modulation:
   641                           	opt stack 0
   642  00FF61  01                 	db	1
   643  00FF62  01                 	db	1
   644  00FF63  01                 	db	1
   645  00FF64  01                 	db	1
   646  00FF65  01                 	db	1
   647  00FF66  01                 	db	1
   648  00FF67  01                 	db	1
   649  00FF68  00                 	db	0
   650  00FF69                     __end_of_modulation:
   651                           	opt stack 0
   652  00FF69                     _rxWindowOffset:
   653                           	opt stack 0
   654  00FF69  DF                 	db	223
   655  00FF6A  CE                 	db	206
   656  00FF6B  C6                 	db	198
   657  00FF6C  C2                 	db	194
   658  00FF6D  BE                 	db	190
   659  00FF6E  BC                 	db	188
   660  00FF6F  F1                 	db	241
   661  00FF70  FE                 	db	254
   662  00FF71                     __end_of_rxWindowOffset:
   663                           	opt stack 0
   664  00FF71                     _maxPayloadSize:
   665                           	opt stack 0
   666  00FF71  33                 	db	51
   667  00FF72  33                 	db	51
   668  00FF73  33                 	db	51
   669  00FF74  73                 	db	115
   670  00FF75  F2                 	db	242
   671  00FF76  F2                 	db	242
   672  00FF77  F2                 	db	242
   673  00FF78  38                 	db	56
   674  00FF79                     __end_of_maxPayloadSize:
   675                           	opt stack 0
   676  00FF79                     _rxWindowSize:
   677                           	opt stack 0
   678  00FF79  08                 	db	8
   679  00FF7A  0A                 	db	10
   680  00FF7B  0E                 	db	14
   681  00FF7C  1A                 	db	26
   682  00FF7D  31                 	db	49
   683  00FF7E  58                 	db	88
   684  00FF7F  3C                 	db	60
   685  00FF80  08                 	db	8
   686  00FF81                     __end_of_rxWindowSize:
   687                           	opt stack 0
   688  00FF81                     _macEndDevCmdReplyLen:
   689                           	opt stack 0
   690  00FF81  01                 	db	1
   691  00FF82  02                 	db	2
   692  00FF83  01                 	db	1
   693  00FF84  02                 	db	2
   694  00FF85  03                 	db	3
   695  00FF86  02                 	db	2
   696  00FF87  01                 	db	1
   697  00FF88                     __end_of_macEndDevCmdReplyLen:
   698                           	opt stack 0
   699  00FF88                     _bandwidth:
   700                           	opt stack 0
   701  00FF88  07                 	db	7
   702  00FF89  07                 	db	7
   703  00FF8A  07                 	db	7
   704  00FF8B  07                 	db	7
   705  00FF8C  07                 	db	7
   706  00FF8D  07                 	db	7
   707  00FF8E  08                 	db	8
   708  00FF8F                     __end_of_bandwidth:
   709                           	opt stack 0
   710  00FF8F                     _spreadingFactor:
   711                           	opt stack 0
   712  00FF8F  0C                 	db	12
   713  00FF90  0B                 	db	11
   714  00FF91  0A                 	db	10
   715  00FF92  09                 	db	9
   716  00FF93  08                 	db	8
   717  00FF94  07                 	db	7
   718  00FF95  07                 	db	7
   719  00FF96                     __end_of_spreadingFactor:
   720                           	opt stack 0
   721  00FF96  0A                 	db	10
   722  00FF97  07                 	db	7
   723  00FF98  04                 	db	4
   724  00FF99  01                 	db	1
   725  00FF9A  FE                 	db	254
   726  00FF9B  FB                 	db	251
   727  00FF9C                     __end_of_txPower433:
   728                           	opt stack 0
   729  00FF9C                     _txPower868:
   730                           	opt stack 0
   731  00FF9C  14                 	db	20
   732  00FF9D  0E                 	db	14
   733  00FF9E  0B                 	db	11
   734  00FF9F  08                 	db	8
   735  00FFA0  05                 	db	5
   736  00FFA1  02                 	db	2
   737  00FFA2                     __end_of_txPower868:
   738                           	opt stack 0
   739  00FFA2                     _DefaultChannels433:
   740                           	opt stack 0
   741  00FFA2  B9D8               	dw	47576
   742  00FFA4  19D1               	dw	6609
   743  00FFA6  01                 	db	1
   744  00FFA7  50                 	db	80
   745  00FFA8  012E               	dw	302
   746  00FFAA  0000               	dw	0
   747  00FFAC  0000               	dw	0
   748  00FFAE  01                 	db	1
   749  00FFAF  FF                 	db	255
   750  00FFB0  C718               	dw	50968
   751  00FFB2  19D4               	dw	6612
   752  00FFB4  01                 	db	1
   753  00FFB5  50                 	db	80
   754  00FFB6  012E               	dw	302
   755  00FFB8  0000               	dw	0
   756  00FFBA  0000               	dw	0
   757  00FFBC  01                 	db	1
   758  00FFBD  FF                 	db	255
   759  00FFBE  D458               	dw	54360
   760  00FFC0  19D7               	dw	6615
   761  00FFC2  01                 	db	1
   762  00FFC3  50                 	db	80
   763  00FFC4  012E               	dw	302
   764  00FFC6  0000               	dw	0
   765  00FFC8  0000               	dw	0
   766  00FFCA  01                 	db	1
   767  00FFCB  FF                 	db	255
   768  00FFCC                     __end_of_DefaultChannels433:
   769                           	opt stack 0
   770  00FFCC                     _DefaultChannels868:
   771                           	opt stack 0
   772  00FFCC  27A0               	dw	10144
   773  00FFCE  33BE               	dw	13246
   774  00FFD0  01                 	db	1
   775  00FFD1  50                 	db	80
   776  00FFD2  012E               	dw	302
   777  00FFD4  0000               	dw	0
   778  00FFD6  0000               	dw	0
   779  00FFD8  01                 	db	1
   780  00FFD9  FF                 	db	255
   781  00FFDA  34E0               	dw	13536
   782  00FFDC  33C1               	dw	13249
   783  00FFDE  01                 	db	1
   784  00FFDF  50                 	db	80
   785  00FFE0  012E               	dw	302
   786  00FFE2  0000               	dw	0
   787  00FFE4  0000               	dw	0
   788  00FFE6  01                 	db	1
   789  00FFE7  FF                 	db	255
   790  00FFE8  4220               	dw	16928
   791  00FFEA  33C4               	dw	13252
   792  00FFEC  01                 	db	1
   793  00FFED  50                 	db	80
   794  00FFEE  012E               	dw	302
   795  00FFF0  0000               	dw	0
   796  00FFF2  0000               	dw	0
   797  00FFF4  01                 	db	1
   798  00FFF5  FF                 	db	255
   799  00FFF6                     __end_of_DefaultChannels868:
   800                           	opt stack 0
   801  00FFF6                     _FskSyncWordBuff:
   802                           	opt stack 0
   803  00FFF6  C1                 	db	193
   804  00FFF7  94                 	db	148
   805  00FFF8  C1                 	db	193
   806  00FFF9                     __end_of_FskSyncWordBuff:
   807                           	opt stack 0
   808  00FFF9                     STR_1:
   809                           
   810                           ; BSR set to: 1
   811  00FFF9  4C                 	db	76	;'L'
   812  00FFFA  6F                 	db	111	;'o'
   813  00FFFB  52                 	db	82	;'R'
   814  00FFFC  61                 	db	97	;'a'
   815  00FFFD  78                 	db	120	;'x'
   816  00FFFE  00                 	db	0
   817                           
   818                           ; #config settings
   819  00FFFF  00                 	db	0	; dummy byte at the end
   820  0000                     
   821                           	psect	nvBANK1
   822  0001E8                     __pnvBANK1:
   823                           	opt stack 0
   824  0001E8                     _TMR1_InterruptHandler:
   825                           	opt stack 0
   826  0001E8                     	ds	2
   827  0001EA                     _timer1ReloadVal:
   828                           	opt stack 0
   829  0001EA                     	ds	2
   830  0001EC                     _IOCB4_InterruptHandler:
   831                           	opt stack 0
   832  0001EC                     	ds	2
   833  0001EE                     _INT2_InterruptHandler:
   834                           	opt stack 0
   835  0001EE                     	ds	2
   836  0001F0                     _INT1_InterruptHandler:
   837                           	opt stack 0
   838  0001F0                     	ds	2
   839  0000                     _ANSELA	set	3896
   840  0000                     _ANSELE	set	3900
   841  0000                     _ANSELB	set	3897
   842  0000                     _ANSELC	set	3898
   843  0000                     _ANSELD	set	3899
   844  0000                     _TMR1	set	4046
   845  0000                     _T1GCONbits	set	4044
   846  0000                     _T1CONbits	set	4045
   847  0000                     _T1CON	set	4045
   848  0000                     _TMR1L	set	4046
   849  0000                     _TMR1H	set	4047
   850  0000                     _T1GCON	set	4044
   851  0000                     _IOCBbits	set	3938
   852  0000                     _WPUB	set	3937
   853  0000                     _TRISD	set	3989
   854  0000                     _TRISC	set	3988
   855  0000                     _TRISB	set	3987
   856  0000                     _TRISA	set	3986
   857  0000                     _TRISE	set	3990
   858  0000                     _LATC	set	3979
   859  0000                     _LATB	set	3978
   860  0000                     _LATA	set	3977
   861  0000                     _LATD	set	3980
   862  0000                     _LATE	set	3981
   863  0000                     _OSCTUNE	set	3995
   864  0000                     _OSCCON2	set	4050
   865  0000                     _OSCCON	set	4051
   866  0000                     _PIR1bits	set	3998
   867  0000                     _PIE1bits	set	3997
   868  0000                     _RCONbits	set	4048
   869  0000                     _INTCON2bits	set	4081
   870  0000                     _INTCON3bits	set	4080
   871  0000                     _PORTBbits	set	3969
   872  0000                     _SSP2STATbits	set	3949
   873  0000                     _SSP2BUF	set	3951
   874  0000                     _SSP2CON1bits	set	3948
   875  0000                     _SSP2ADD	set	3950
   876  0000                     _SSP2CON1	set	3948
   877  0000                     _SSP2STAT	set	3949
   878  0000                     _INTCONbits	set	4082
   879  0000                     _LATD3	set	31843
   880  0000                     _LATC2	set	31834
   881  0000                     _TRISC2	set	31906
   882                           
   883                           	psect	cinit
   884  0068E0                     __pcinit:
   885                           	opt stack 0
   886  0068E0                     start_initialization:
   887                           	opt stack 0
   888  0068E0                     __initialization:
   889                           	opt stack 0
   890                           
   891                           ; Initialize objects allocated to BANK3 (16 bytes)
   892                           ; load TBLPTR registers with __pidataBANK3
   893  0068E0  0EBC               	movlw	low __pidataBANK3
   894  0068E2  6EF6               	movwf	tblptrl,c
   895  0068E4  0E8A               	movlw	high __pidataBANK3
   896  0068E6  6EF7               	movwf	tblptrh,c
   897  0068E8  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   898  0068EA  6EF8               	movwf	tblptru,c
   899  0068EC  EE03  F0A0         	lfsr	0,__pdataBANK3
   900  0068F0  EE20 F010          	lfsr	2,16
   901  0068F4                     copy_data0:
   902  0068F4  0009               	tblrd		*+
   903  0068F6  CFF5 FFEE          	movff	tablat,postinc0
   904  0068FA  50DD               	movf	postdec2,w,c
   905  0068FC  50D9               	movf	fsr2l,w,c
   906  0068FE  E1FA               	bnz	copy_data0
   907                           
   908                           ; Initialize objects allocated to BANK1 (40 bytes)
   909                           ; load TBLPTR registers with __pidataBANK1
   910  006900  0E64               	movlw	low __pidataBANK1
   911  006902  6EF6               	movwf	tblptrl,c
   912  006904  0E86               	movlw	high __pidataBANK1
   913  006906  6EF7               	movwf	tblptrh,c
   914  006908  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   915  00690A  6EF8               	movwf	tblptru,c
   916  00690C  EE01  F0C0         	lfsr	0,__pdataBANK1
   917  006910  EE20 F028          	lfsr	2,40
   918  006914                     copy_data1:
   919  006914  0009               	tblrd		*+
   920  006916  CFF5 FFEE          	movff	tablat,postinc0
   921  00691A  50DD               	movf	postdec2,w,c
   922  00691C  50D9               	movf	fsr2l,w,c
   923  00691E  E1FA               	bnz	copy_data1
   924                           
   925                           ; Initialize objects allocated to COMRAM (4 bytes)
   926                           ; load TBLPTR registers with __pidataCOMRAM
   927  006920  0E2E               	movlw	low __pidataCOMRAM
   928  006922  6EF6               	movwf	tblptrl,c
   929  006924  0E8C               	movlw	high __pidataCOMRAM
   930  006926  6EF7               	movwf	tblptrh,c
   931  006928  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   932  00692A  6EF8               	movwf	tblptru,c
   933  00692C  EE00  F054         	lfsr	0,__pdataCOMRAM
   934  006930  EE20 F004          	lfsr	2,4
   935  006934                     copy_data2:
   936  006934  0009               	tblrd		*+
   937  006936  CFF5 FFEE          	movff	tablat,postinc0
   938  00693A  50DD               	movf	postdec2,w,c
   939  00693C  50D9               	movf	fsr2l,w,c
   940  00693E  E1FA               	bnz	copy_data2
   941                           
   942                           ; Clear objects allocated to BIGRAM (542 bytes)
   943  006940  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   944  006944  EE22 F01E          	lfsr	2,542
   945  006948                     clear_0:
   946  006948  6AEE               	clrf	postinc0,c
   947  00694A  50DD               	movf	postdec2,w,c
   948  00694C  50D9               	movf	fsr2l,w,c
   949  00694E  E1FC               	bnz	clear_0
   950  006950  50DA               	movf	fsr2h,w,c
   951  006952  E1FA               	bnz	clear_0
   952                           
   953                           ; Clear objects allocated to BANK4 (224 bytes)
   954  006954  EE04  F000         	lfsr	0,__pbssBANK4
   955  006958  0EE0               	movlw	224
   956  00695A                     clear_1:
   957  00695A  6AEE               	clrf	postinc0,c
   958  00695C  06E8               	decf	wreg,f,c
   959  00695E  E1FD               	bnz	clear_1
   960                           
   961                           ; Clear objects allocated to BANK3 (160 bytes)
   962  006960  EE03  F000         	lfsr	0,__pbssBANK3
   963  006964  0EA0               	movlw	160
   964  006966                     clear_2:
   965  006966  6AEE               	clrf	postinc0,c
   966  006968  06E8               	decf	wreg,f,c
   967  00696A  E1FD               	bnz	clear_2
   968                           
   969                           ; Clear objects allocated to BANK2 (245 bytes)
   970  00696C  EE02  F000         	lfsr	0,__pbssBANK2
   971  006970  0EF5               	movlw	245
   972  006972                     clear_3:
   973  006972  6AEE               	clrf	postinc0,c
   974  006974  06E8               	decf	wreg,f,c
   975  006976  E1FD               	bnz	clear_3
   976                           
   977                           ; Clear objects allocated to BANK1 (87 bytes)
   978  006978  EE01  F069         	lfsr	0,__pbssBANK1
   979  00697C  0E57               	movlw	87
   980  00697E                     clear_4:
   981  00697E  6AEE               	clrf	postinc0,c
   982  006980  06E8               	decf	wreg,f,c
   983  006982  E1FD               	bnz	clear_4
   984                           
   985                           ; Clear objects allocated to BANK0 (1 bytes)
   986  006984  0100               	movlb	0
   987  006986  6BFB               	clrf	__pbssBANK0& (0+255),b
   988                           
   989                           ; Clear objects allocated to COMRAM (12 bytes)
   990  006988  EE00  F03C         	lfsr	0,__pbssCOMRAM
   991  00698C  0E0C               	movlw	12
   992  00698E                     clear_5:
   993  00698E  6AEE               	clrf	postinc0,c
   994  006990  06E8               	decf	wreg,f,c
   995  006992  E1FD               	bnz	clear_5
   996  006994                     end_of_initialization:
   997                           	opt stack 0
   998  006994                     __end_of__initialization:
   999                           	opt stack 0
  1000  006994  0100               	movlb	0
  1001  006996  EFF5  F037         	goto	_main	;jump to C main() function
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec2	equ	0xFDD
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           
  1012                           	psect	bssCOMRAM
  1013  00003C                     __pbssCOMRAM:
  1014                           	opt stack 0
  1015  00003C                     _ticksAccounted:
  1016                           	opt stack 0
  1017  00003C                     	ds	4
  1018  000040                     _ticksAdded:
  1019                           	opt stack 0
  1020  000040                     	ds	4
  1021  000044                     _reloadVal:
  1022                           	opt stack 0
  1023  000044                     	ds	2
  1024  000046                     __rcon:
  1025                           	opt stack 0
  1026  000046                     	ds	1
  1027  000047                     _timerOverflow:
  1028                           	opt stack 0
  1029  000047                     	ds	1
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec2	equ	0xFDD
  1037                           fsr2h	equ	0xFDA
  1038                           fsr2l	equ	0xFD9
  1039                           
  1040                           	psect	dataCOMRAM
  1041  000054                     __pdataCOMRAM:
  1042                           	opt stack 0
  1043  000054                     _ticksToScheduledInterrupt:
  1044                           	opt stack 0
  1045  000054                     	ds	4
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec2	equ	0xFDD
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           
  1056                           	psect	bssBANK0
  1057  0000FB                     __pbssBANK0:
  1058                           	opt stack 0
  1059  0000FB                     _allocatedTimers:
  1060                           	opt stack 0
  1061  0000FB                     	ds	1
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec2	equ	0xFDD
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           
  1072                           	psect	bssBANK1
  1073  000169                     __pbssBANK1:
  1074                           	opt stack 0
  1075  000169                     _rxPayload:
  1076                           	opt stack 0
  1077  000169                     	ds	4
  1078  00016D                     TMR_GetDeltaTime@retVal:
  1079                           	opt stack 0
  1080  00016D                     	ds	4
  1081  000171                     TMR_SwapTimer@retVal:
  1082                           	opt stack 0
  1083  000171                     	ds	2
  1084  000173                     TMR_SwapTimer@oldVal:
  1085                           	opt stack 0
  1086  000173                     	ds	2
  1087  000175                     TMR_GetDeltaTime@tmrVal:
  1088                           	opt stack 0
  1089  000175                     	ds	2
  1090  000177                     _localDioStatus:
  1091                           	opt stack 0
  1092  000177                     	ds	1
  1093  000178                     __roundCounter:
  1094                           	opt stack 0
  1095  000178                     	ds	1
  1096  000179                     _dioStatus:
  1097                           	opt stack 0
  1098  000179                     	ds	1
  1099  00017A                     _RadioConfiguration:
  1100                           	opt stack 0
  1101  00017A                     	ds	54
  1102  0001B0                     _aesBuffer:
  1103                           	opt stack 0
  1104  0001B0                     	ds	16
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           
  1115                           	psect	dataBANK1
  1116  0001C0                     __pdataBANK1:
  1117                           	opt stack 0
  1118  0001C0                     GenerateSubkey@F7103:
  1119                           	opt stack 0
  1120  0001C0                     	ds	16
  1121  0001D0                     _randx:
  1122                           	opt stack 0
  1123  0001D0                     	ds	4
  1124  0001D4                     _devAddr:
  1125                           	opt stack 0
  1126  0001D4                     	ds	4
  1127  0001D8                     _nwkSKey:
  1128                           	opt stack 0
  1129  0001D8                     	ds	16
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           postdec2	equ	0xFDD
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           
  1140                           	psect	bssBANK2
  1141  000200                     __pbssBANK2:
  1142                           	opt stack 0
  1143  000200                     _loRa:
  1144                           	opt stack 0
  1145  000200                     	ds	245
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           postinc0	equ	0xFEE
  1151                           wreg	equ	0xFE8
  1152                           postdec2	equ	0xFDD
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           
  1156                           	psect	bssBANK3
  1157  000300                     __pbssBANK3:
  1158                           	opt stack 0
  1159  000300                     _swTimers:
  1160                           	opt stack 0
  1161  000300                     	ds	160
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec2	equ	0xFDD
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           
  1172                           	psect	dataBANK3
  1173  0003A0                     __pdataBANK3:
  1174                           	opt stack 0
  1175  0003A0                     _appSKey:
  1176                           	opt stack 0
  1177  0003A0                     	ds	16
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec2	equ	0xFDD
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           
  1188                           	psect	bssBANK4
  1189  000400                     __pbssBANK4:
  1190                           	opt stack 0
  1191  000400                     _Channels:
  1192                           	opt stack 0
  1193  000400                     	ds	224
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           postinc0	equ	0xFEE
  1199                           wreg	equ	0xFE8
  1200                           postdec2	equ	0xFDD
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           
  1204                           	psect	bssBIGRAM
  1205  0004E0                     __pbssBIGRAM:
  1206                           	opt stack 0
  1207  0004E0                     _macBuffer:
  1208                           	opt stack 0
  1209  0004E0                     	ds	271
  1210  0005EF                     _radioBuffer:
  1211                           	opt stack 0
  1212  0005EF                     	ds	271
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec2	equ	0xFDD
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           
  1223                           	psect	cstackBANK1
  1224  000100                     __pcstackBANK1:
  1225                           	opt stack 0
  1226  000100                     AESCmac@k2:
  1227                           	opt stack 0
  1228                           
  1229                           ; 16 bytes @ 0x0
  1230  000100                     	ds	16
  1231  000110                     AESCmac@k1:
  1232                           	opt stack 0
  1233                           
  1234                           ; 16 bytes @ 0x10
  1235  000110                     	ds	16
  1236  000120                     AESCmac@mLast:
  1237                           	opt stack 0
  1238                           
  1239                           ; 16 bytes @ 0x20
  1240  000120                     	ds	16
  1241  000130                     AESCmac@padded:
  1242                           	opt stack 0
  1243                           
  1244                           ; 16 bytes @ 0x30
  1245  000130                     	ds	16
  1246  000140                     AESCmac@y:
  1247                           	opt stack 0
  1248                           
  1249                           ; 16 bytes @ 0x40
  1250  000140                     	ds	16
  1251  000150                     AESCmac@x:
  1252                           	opt stack 0
  1253                           
  1254                           ; 16 bytes @ 0x50
  1255  000150                     	ds	16
  1256  000160                     AESCmac@ptr:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x60
  1260  000160                     	ds	2
  1261  000162                     AESCmac@flag:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x62
  1265  000162                     	ds	1
  1266  000163                     AESCmac@n:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x63
  1270  000163                     	ds	1
  1271  000164                     AESCmac@j:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0x64
  1275  000164                     	ds	1
  1276  000165                     AESCmac@i:
  1277                           	opt stack 0
  1278                           
  1279                           ; 1 bytes @ 0x65
  1280  000165                     	ds	1
  1281  000166                     LORAWAN_RxDone@buffer:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x66
  1285  000166                     	ds	2
  1286  000168                     LORAWAN_RxDone@bufferLength:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x68
  1290  000168                     	ds	1
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           postdec2	equ	0xFDD
  1298                           fsr2h	equ	0xFDA
  1299                           fsr2l	equ	0xFD9
  1300                           
  1301                           	psect	cstackBANK0
  1302  000060                     __pcstackBANK0:
  1303                           	opt stack 0
  1304  000060                     ??_UpdateMinMaxChDataRate:
  1305  000060                     ??_FindSmallestDataRate:
  1306  000060                     ??_CountfOptsLength:
  1307  000060                     ?_TMR1_ReadTimer:
  1308                           	opt stack 0
  1309  000060                     ?_ExecuteDutyCycle:
  1310                           	opt stack 0
  1311  000060                     ?_ExecuteDevStatus:
  1312                           	opt stack 0
  1313  000060                     ?_ExecuteLinkCheck:
  1314                           	opt stack 0
  1315  000060                     ?___wmul:
  1316                           	opt stack 0
  1317  000060                     ?___awdiv:
  1318                           	opt stack 0
  1319  000060                     ?_GetRx1Freq:
  1320                           	opt stack 0
  1321  000060                     ?___lldiv:
  1322                           	opt stack 0
  1323  000060                     ?___llmod:
  1324                           	opt stack 0
  1325  000060                     INTERRUPT_GetDioStatus@a:
  1326                           	opt stack 0
  1327  000060                     SPI2_Exchange8bit@data:
  1328                           	opt stack 0
  1329  000060                     HALResetPinOutputValue@value:
  1330                           	opt stack 0
  1331  000060                     SwTimerCreate@retVal:
  1332                           	opt stack 0
  1333  000060                     SwTimerIsRunning@timerId:
  1334                           	opt stack 0
  1335  000060                     SwTimerStop@timerId:
  1336                           	opt stack 0
  1337  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1338                           	opt stack 0
  1339  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1340                           	opt stack 0
  1341  000060                     RADIO_SetOutputPower@power:
  1342                           	opt stack 0
  1343  000060                     RADIO_SetCRC@crc:
  1344                           	opt stack 0
  1345  000060                     RADIO_SetIQInverted@iqInverted:
  1346                           	opt stack 0
  1347  000060                     RADIO_SetBandwidth@bandwidth:
  1348                           	opt stack 0
  1349  000060                     RADIO_SetModulation@modulation:
  1350                           	opt stack 0
  1351  000060                     ValidateDataRate@dataRate:
  1352                           	opt stack 0
  1353  000060                     ValidateTxPower@result:
  1354                           	opt stack 0
  1355  000060                     UpdateDLSettings@dlRx1DrOffset:
  1356                           	opt stack 0
  1357  000060                     UpdateDataRange@dataRangeNew:
  1358                           	opt stack 0
  1359  000060                     UpdateChannelIdStatus@statusNew:
  1360                           	opt stack 0
  1361  000060                     ValidateRxOffset@rxOffset:
  1362                           	opt stack 0
  1363  000060                     ValidateChannelId@allowedForDefaultChannels:
  1364                           	opt stack 0
  1365  000060                     ValidateChannelMaskCntl@result:
  1366                           	opt stack 0
  1367  000060                     UpdateCurrentDataRate@valueNew:
  1368                           	opt stack 0
  1369  000060                     UpdateTxPower@txPowerNew:
  1370                           	opt stack 0
  1371  000060                     UpdateJoinInProgress@state:
  1372                           	opt stack 0
  1373  000060                     ___abdiv@divisor:
  1374                           	opt stack 0
  1375  000060                     FillSubKey@source:
  1376                           	opt stack 0
  1377  000060                     SwTimerSetCallback@callback:
  1378                           	opt stack 0
  1379  000060                     EncKeySchedule@key:
  1380                           	opt stack 0
  1381  000060                     EncodeShiftRow@stateTable:
  1382                           	opt stack 0
  1383  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1384                           	opt stack 0
  1385  000060                     ExecuteDutyCycle@ptr:
  1386                           	opt stack 0
  1387  000060                     ExecuteDevStatus@ptr:
  1388                           	opt stack 0
  1389  000060                     UpdateDutyCycle@dutyCycleNew:
  1390                           	opt stack 0
  1391  000060                     ValidateChannelMask@channelMask:
  1392                           	opt stack 0
  1393  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1394                           	opt stack 0
  1395  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1396                           	opt stack 0
  1397  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1398                           	opt stack 0
  1399  000060                     TMR1_WriteTimer@timerVal:
  1400                           	opt stack 0
  1401  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1402                           	opt stack 0
  1403  000060                     ExecuteLinkCheck@ptr:
  1404                           	opt stack 0
  1405  000060                     IncludeMacCommandsResponse@macBuffer:
  1406                           	opt stack 0
  1407  000060                     CheckFlags@hdr:
  1408                           	opt stack 0
  1409  000060                     CheckMcastFlags@hdr:
  1410                           	opt stack 0
  1411  000060                     RxData@pData:
  1412                           	opt stack 0
  1413  000060                     ___wmul@multiplier:
  1414                           	opt stack 0
  1415  000060                     ___awdiv@dividend:
  1416                           	opt stack 0
  1417  000060                     memcpy@d1:
  1418                           	opt stack 0
  1419  000060                     memset@p1:
  1420                           	opt stack 0
  1421  000060                     SystemBlockingWaitMs@ms:
  1422                           	opt stack 0
  1423  000060                     RADIO_SetChannelFrequency@frequency:
  1424                           	opt stack 0
  1425  000060                     ValidateFrequency@frequencyNew:
  1426                           	opt stack 0
  1427  000060                     UpdateFrequency@frequencyNew:
  1428                           	opt stack 0
  1429  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1430                           	opt stack 0
  1431  000060                     UpdateReceiveWindow2Parameters@frequency:
  1432                           	opt stack 0
  1433  000060                     ___lldiv@dividend:
  1434                           	opt stack 0
  1435  000060                     ___llmod@dividend:
  1436                           	opt stack 0
  1437                           
  1438                           ; 4 bytes @ 0x0
  1439  000060                     	ds	1
  1440  000061                     ??_UpdateDataRange:
  1441  000061                     ??_UpdateChannelIdStatus:
  1442  000061                     ??___abdiv:
  1443  000061                     HALSPISend@data:
  1444                           	opt stack 0
  1445  000061                     SwTimerIsRunning@isRunning:
  1446                           	opt stack 0
  1447  000061                     ValidateDataRate@result:
  1448                           	opt stack 0
  1449  000061                     ValidateTxPower@txPowerNew:
  1450                           	opt stack 0
  1451  000061                     UpdateDLSettings@dlRx2Dr:
  1452                           	opt stack 0
  1453  000061                     ValidateRxOffset@result:
  1454                           	opt stack 0
  1455  000061                     ValidateChannelId@result:
  1456                           	opt stack 0
  1457  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1458                           	opt stack 0
  1459  000061                     UpdateMinMaxChDataRate@i:
  1460                           	opt stack 0
  1461  000061                     FindSmallestDataRate@found:
  1462                           	opt stack 0
  1463                           
  1464                           ; 1 bytes @ 0x1
  1465  000061                     	ds	1
  1466  000062                     ??_TMR1_ReadTimer:
  1467  000062                     ??_EncKeySchedule:
  1468  000062                     ??_ValidateChannelMask:
  1469  000062                     ??_ExecuteDutyCycle:
  1470  000062                     SwTimerSetCallback@callbackParameter:
  1471                           	opt stack 0
  1472  000062                     EncodeShiftRow@temp:
  1473                           	opt stack 0
  1474  000062                     RADIO_RegisterWrite@value:
  1475                           	opt stack 0
  1476  000062                     RADIO_RegisterRead@reg:
  1477                           	opt stack 0
  1478  000062                     UpdateDataRange@channelId:
  1479                           	opt stack 0
  1480  000062                     UpdateChannelIdStatus@channelId:
  1481                           	opt stack 0
  1482  000062                     ValidateDataRange@result:
  1483                           	opt stack 0
  1484  000062                     ValidateChannelId@channelId:
  1485                           	opt stack 0
  1486  000062                     UpdateDutyCycle@channelId:
  1487                           	opt stack 0
  1488  000062                     FindSmallestDataRate@i:
  1489                           	opt stack 0
  1490  000062                     RxData@dataLength:
  1491                           	opt stack 0
  1492  000062                     FillSubKey@key:
  1493                           	opt stack 0
  1494  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1495                           	opt stack 0
  1496  000062                     ___wmul@multiplicand:
  1497                           	opt stack 0
  1498  000062                     ___awdiv@divisor:
  1499                           	opt stack 0
  1500  000062                     memcpy@s1:
  1501                           	opt stack 0
  1502  000062                     memset@c:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x2
  1506  000062                     	ds	1
  1507  000063                     SwTimerSetCallback@timerId:
  1508                           	opt stack 0
  1509  000063                     RADIO_RegisterWrite@reg:
  1510                           	opt stack 0
  1511  000063                     RADIO_RegisterRead@readValue:
  1512                           	opt stack 0
  1513  000063                     UpdateDataRange@i:
  1514                           	opt stack 0
  1515  000063                     UpdateChannelIdStatus@i:
  1516                           	opt stack 0
  1517  000063                     ValidateDataRange@dataRangeNew:
  1518                           	opt stack 0
  1519  000063                     FindSmallestDataRate@dataRate:
  1520                           	opt stack 0
  1521  000063                     RxData@status:
  1522                           	opt stack 0
  1523  000063                     ___abdiv@counter:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x3
  1527  000063                     	ds	1
  1528  000064                     ??_SystemBlockingWaitMs:
  1529  000064                     FillSubKey@size:
  1530                           	opt stack 0
  1531  000064                     RADIO_WritePower@ocp:
  1532                           	opt stack 0
  1533  000064                     RADIO_UnhandledInterrupt@modulation:
  1534                           	opt stack 0
  1535  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1536                           	opt stack 0
  1537  000064                     ValidateFrequency@result:
  1538                           	opt stack 0
  1539  000064                     ValidateDataRange@dataRateMax:
  1540                           	opt stack 0
  1541  000064                     UpdateFrequency@channelId:
  1542                           	opt stack 0
  1543  000064                     ValidateChannelMask@i:
  1544                           	opt stack 0
  1545  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1546                           	opt stack 0
  1547  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1548                           	opt stack 0
  1549  000064                     ___abdiv@sign:
  1550                           	opt stack 0
  1551  000064                     ___awdiv@counter:
  1552                           	opt stack 0
  1553  000064                     _EncKeySchedule$819:
  1554                           	opt stack 0
  1555  000064                     EnableChannels1@channelMask:
  1556                           	opt stack 0
  1557  000064                     TMR1_ReadTimer@readVal:
  1558                           	opt stack 0
  1559  000064                     ___wmul@product:
  1560                           	opt stack 0
  1561  000064                     memcpy@n:
  1562                           	opt stack 0
  1563  000064                     memset@n:
  1564                           	opt stack 0
  1565  000064                     ___lldiv@divisor:
  1566                           	opt stack 0
  1567  000064                     ___llmod@divisor:
  1568                           	opt stack 0
  1569                           
  1570                           ; 4 bytes @ 0x4
  1571  000064                     	ds	1
  1572  000065                     ??_FillSubKey:
  1573  000065                     ??_IncludeMacCommandsResponse:
  1574  000065                     ??_RADIO_DIO3:
  1575  000065                     ??_RADIO_DIO4:
  1576  000065                     ??_RADIO_DIO5:
  1577  000065                     RADIO_WriteMode@newModulation:
  1578                           	opt stack 0
  1579  000065                     RADIO_WritePower@paDac:
  1580                           	opt stack 0
  1581  000065                     LORAWAN_SetChannelIdStatus@result:
  1582                           	opt stack 0
  1583  000065                     ExecuteDutyCycle@maxDCycle:
  1584                           	opt stack 0
  1585  000065                     ValidateDataRange@dataRateMin:
  1586                           	opt stack 0
  1587  000065                     ___abdiv@quotient:
  1588                           	opt stack 0
  1589  000065                     ___awdiv@sign:
  1590                           	opt stack 0
  1591                           
  1592                           ; 1 bytes @ 0x5
  1593  000065                     	ds	1
  1594  000066                     FillSubKey@carry:
  1595                           	opt stack 0
  1596  000066                     RADIO_WriteMode@blocking:
  1597                           	opt stack 0
  1598  000066                     RADIO_WritePower@power:
  1599                           	opt stack 0
  1600  000066                     RADIO_DIO3@dioMapping:
  1601                           	opt stack 0
  1602  000066                     RADIO_DIO5@dioMapping:
  1603                           	opt stack 0
  1604  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1605                           	opt stack 0
  1606  000066                     EnableChannels1@channelMaskCntl:
  1607                           	opt stack 0
  1608  000066                     TMR1_ReadTimer@readValHigh:
  1609                           	opt stack 0
  1610  000066                     UpdateReceiveDelays@delay:
  1611                           	opt stack 0
  1612  000066                     CountfOptsLength@macCommandLength:
  1613                           	opt stack 0
  1614  000066                     ___abdiv@dividend:
  1615                           	opt stack 0
  1616  000066                     memcpy@tmp:
  1617                           	opt stack 0
  1618  000066                     AESEncode@block:
  1619                           	opt stack 0
  1620  000066                     ___awdiv@quotient:
  1621                           	opt stack 0
  1622  000066                     memset@p:
  1623                           	opt stack 0
  1624                           
  1625                           ; 2 bytes @ 0x6
  1626  000066                     	ds	1
  1627  000067                     ?_ExecuteRxTimingSetup:
  1628                           	opt stack 0
  1629  000067                     FillSubKey@i:
  1630                           	opt stack 0
  1631  000067                     RADIO_WriteMode@currentModulation:
  1632                           	opt stack 0
  1633  000067                     RADIO_DIO4@dioMapping:
  1634                           	opt stack 0
  1635  000067                     EnableChannels1@channelIndexMin:
  1636                           	opt stack 0
  1637  000067                     TMR1_ReadTimer@readValLow:
  1638                           	opt stack 0
  1639  000067                     CountfOptsLength@i:
  1640                           	opt stack 0
  1641  000067                     ExecuteRxTimingSetup@ptr:
  1642                           	opt stack 0
  1643  000067                     memcpy@d:
  1644                           	opt stack 0
  1645                           
  1646                           ; 2 bytes @ 0x7
  1647  000067                     	ds	1
  1648  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1649  000068                     ?_TMR_SwapTimer:
  1650                           	opt stack 0
  1651  000068                     ?_TMR_GetDeltaTime:
  1652                           	opt stack 0
  1653  000068                     RADIO_WriteMode@dioMapping:
  1654                           	opt stack 0
  1655  000068                     EnableChannels1@channelIndexMax:
  1656                           	opt stack 0
  1657  000068                     ___llmod@counter:
  1658                           	opt stack 0
  1659  000068                     TMR_SwapTimer@timerVal:
  1660                           	opt stack 0
  1661  000068                     AESEncode@key:
  1662                           	opt stack 0
  1663  000068                     ___lldiv@quotient:
  1664                           	opt stack 0
  1665                           
  1666                           ; 4 bytes @ 0x8
  1667  000068                     	ds	1
  1668  000069                     ??_EnableChannels1:
  1669  000069                     RADIO_WriteMode@currentMode:
  1670                           	opt stack 0
  1671  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1672                           	opt stack 0
  1673  000069                     ExecuteRxTimingSetup@delay:
  1674                           	opt stack 0
  1675  000069                     memcpy@s:
  1676                           	opt stack 0
  1677                           
  1678                           ; 2 bytes @ 0x9
  1679  000069                     	ds	1
  1680  00006A                     ??_AESEncode:
  1681  00006A                     RADIO_WriteMode@newMode:
  1682                           	opt stack 0
  1683  00006A                     LORAWAN_GetMaxPayloadSize@result:
  1684                           	opt stack 0
  1685  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1686                           	opt stack 0
  1687                           
  1688                           ; 4 bytes @ 0xA
  1689  00006A                     	ds	1
  1690  00006B                     ?_ExtractMic:
  1691                           	opt stack 0
  1692  00006B                     RADIO_WriteMode@opMode:
  1693                           	opt stack 0
  1694  00006B                     InitDefault868Channels@i:
  1695                           	opt stack 0
  1696  00006B                     InitDefault433Channels@i:
  1697                           	opt stack 0
  1698  00006B                     EnableChannels1@i:
  1699                           	opt stack 0
  1700  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1701                           	opt stack 0
  1702  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1703                           	opt stack 0
  1704  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1705                           	opt stack 0
  1706  00006B                     PrepareSessionKeys@sessionKey:
  1707                           	opt stack 0
  1708  00006B                     ExtractMic@buffer:
  1709                           	opt stack 0
  1710  00006B                     AssembleEncryptionBlock@frameCounter:
  1711                           	opt stack 0
  1712                           
  1713                           ; 4 bytes @ 0xB
  1714  00006B                     	ds	1
  1715  00006C                     ??_TMR_GetDeltaTime:
  1716  00006C                     ?_RADIO_ReadRandom:
  1717                           	opt stack 0
  1718  00006C                     ___lldiv@counter:
  1719                           	opt stack 0
  1720  00006C                     EnableChannels@channelMask:
  1721                           	opt stack 0
  1722                           
  1723                           ; 2 bytes @ 0xC
  1724  00006C                     	ds	1
  1725  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1726                           	opt stack 0
  1727  00006D                     IncludeMacCommandsResponse@i:
  1728                           	opt stack 0
  1729  00006D                     ExtractMic@bufferLength:
  1730                           	opt stack 0
  1731  00006D                     PrepareSessionKeys@appNonce:
  1732                           	opt stack 0
  1733  00006D                     SwTimerSetTimeout@timeout:
  1734                           	opt stack 0
  1735  00006D                     RADIO_WriteFrequency@frequency:
  1736                           	opt stack 0
  1737  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1738                           	opt stack 0
  1739  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1740                           	opt stack 0
  1741                           
  1742                           ; 4 bytes @ 0xD
  1743  00006D                     	ds	1
  1744  00006E                     ??_TMR_OverrideRemaining:
  1745  00006E                     ??_RADIO_ReadRandom:
  1746  00006E                     EnableChannels@channelMaskCntl:
  1747                           	opt stack 0
  1748  00006E                     IncludeMacCommandsResponse@bufferIndex:
  1749                           	opt stack 0
  1750  00006E                     ConfigureRadio@freq:
  1751                           	opt stack 0
  1752                           
  1753                           ; 4 bytes @ 0xE
  1754  00006E                     	ds	1
  1755  00006F                     ??_ExtractMic:
  1756  00006F                     ?_ExecuteLinkAdr:
  1757                           	opt stack 0
  1758  00006F                     AssembleEncryptionBlock@blockId:
  1759                           	opt stack 0
  1760  00006F                     RADIO_ReadRandom@retVal:
  1761                           	opt stack 0
  1762  00006F                     ExecuteLinkAdr@ptr:
  1763                           	opt stack 0
  1764  00006F                     PrepareSessionKeys@networkId:
  1765                           	opt stack 0
  1766                           
  1767                           ; 2 bytes @ 0xF
  1768  00006F                     	ds	1
  1769  000070                     AssembleEncryptionBlock@firstByte:
  1770                           	opt stack 0
  1771  000070                     TMR_OverrideRemaining@tmrVal:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x10
  1775  000070                     	ds	1
  1776  000071                     ??_ExecuteLinkAdr:
  1777  000071                     ??_SwTimerSetTimeout:
  1778  000071                     RADIO_ReadRandom@i:
  1779                           	opt stack 0
  1780  000071                     PrepareSessionKeys@index:
  1781                           	opt stack 0
  1782  000071                     AssembleEncryptionBlock@multicastStatus:
  1783                           	opt stack 0
  1784  000071                     RADIO_WriteFrequency@num_mod:
  1785                           	opt stack 0
  1786  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1787                           	opt stack 0
  1788  000071                     RADIO_WriteFSKBitRate@num:
  1789                           	opt stack 0
  1790                           
  1791                           ; 4 bytes @ 0x11
  1792  000071                     	ds	1
  1793  000072                     ConfigureRadio@dataRate:
  1794                           	opt stack 0
  1795  000072                     AssembleEncryptionBlock@dir:
  1796                           	opt stack 0
  1797  000072                     TMR_OverrideRemaining@oldReloadVal:
  1798                           	opt stack 0
  1799  000072                     _AESEncode$814:
  1800                           	opt stack 0
  1801  000072                     srand@x:
  1802                           	opt stack 0
  1803                           
  1804                           ; 2 bytes @ 0x12
  1805  000072                     	ds	1
  1806  000073                     AssembleEncryptionBlock@bufferIndex:
  1807                           	opt stack 0
  1808  000073                     ExecuteLinkAdr@channelMask:
  1809                           	opt stack 0
  1810  000073                     ConfigureRadioTx@freq:
  1811                           	opt stack 0
  1812  000073                     ConfigureRadioRx@freq:
  1813                           	opt stack 0
  1814  000073                     ExtractMic@mic:
  1815                           	opt stack 0
  1816                           
  1817                           ; 4 bytes @ 0x13
  1818  000073                     	ds	1
  1819  000074                     _AESEncode$815:
  1820                           	opt stack 0
  1821                           
  1822                           ; 2 bytes @ 0x14
  1823  000074                     	ds	1
  1824  000075                     SwTimerSetTimeout@timerId:
  1825                           	opt stack 0
  1826  000075                     ExecuteLinkAdr@txPower:
  1827                           	opt stack 0
  1828  000075                     RADIO_WriteFrequency@num:
  1829                           	opt stack 0
  1830                           
  1831                           ; 4 bytes @ 0x15
  1832  000075                     	ds	1
  1833  000076                     _AESEncode$816:
  1834                           	opt stack 0
  1835  000076                     ExecuteLinkAdr@redundancy:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x16
  1839  000076                     	ds	1
  1840  000077                     ConfigureRadioTx@dataRate:
  1841                           	opt stack 0
  1842  000077                     ConfigureRadioRx@dataRate:
  1843                           	opt stack 0
  1844                           
  1845                           ; 1 bytes @ 0x17
  1846  000077                     	ds	1
  1847  000078                     AESEncode@aux:
  1848                           	opt stack 0
  1849  000078                     ExecuteLinkAdr@dataRate:
  1850                           	opt stack 0
  1851  000078                     ConfigureRadioTx@txPower:
  1852                           	opt stack 0
  1853                           
  1854                           ; 1 bytes @ 0x18
  1855  000078                     	ds	1
  1856  000079                     AESEncode@aux2:
  1857                           	opt stack 0
  1858  000079                     RADIO_FHSSChangeChannel@irqFlags:
  1859                           	opt stack 0
  1860  000079                     RADIO_Init@radioBuffer:
  1861                           	opt stack 0
  1862                           
  1863                           ; 2 bytes @ 0x19
  1864  000079                     	ds	1
  1865  00007A                     ??_RADIO_DIO2:
  1866  00007A                     AESEncode@aux1:
  1867                           	opt stack 0
  1868                           
  1869                           ; 1 bytes @ 0x1A
  1870  00007A                     	ds	1
  1871  00007B                     AESEncode@aux3:
  1872                           	opt stack 0
  1873  00007B                     RADIO_DIO2@opMode:
  1874                           	opt stack 0
  1875  00007B                     RADIO_Init@frequency:
  1876                           	opt stack 0
  1877                           
  1878                           ; 4 bytes @ 0x1B
  1879  00007B                     	ds	1
  1880  00007C                     AESEncode@i:
  1881                           	opt stack 0
  1882  00007C                     RADIO_DIO2@dioMapping:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x1C
  1886  00007C                     	ds	1
  1887  00007D                     AESEncodeLoRa@block:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x1D
  1891  00007D                     	ds	2
  1892  00007F                     ??_RADIO_Init:
  1893  00007F                     AESEncodeLoRa@key:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x1F
  1897  00007F                     	ds	1
  1898  000080                     ?_SwTimersInterrupt:
  1899                           	opt stack 0
  1900                           
  1901                           ; 4 bytes @ 0x20
  1902  000080                     	ds	1
  1903  000081                     AESEncodeLoRa@useKey:
  1904                           	opt stack 0
  1905                           
  1906                           ; 16 bytes @ 0x21
  1907  000081                     	ds	3
  1908  000084                     
  1909                           ; 1 bytes @ 0x24
  1910  000084                     	ds	4
  1911  000088                     SwTimersInterrupt@timeElapsed:
  1912                           	opt stack 0
  1913                           
  1914                           ; 4 bytes @ 0x28
  1915  000088                     	ds	4
  1916  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  1917                           	opt stack 0
  1918                           
  1919                           ; 4 bytes @ 0x2C
  1920  00008C                     	ds	4
  1921  000090                     SwTimersInterrupt@i:
  1922                           	opt stack 0
  1923                           
  1924                           ; 1 bytes @ 0x30
  1925  000090                     	ds	1
  1926  000091                     ?_SwTimerReadValue:
  1927                           	opt stack 0
  1928  000091                     GenerateSubkey@key:
  1929                           	opt stack 0
  1930  000091                     ComputeSessionKeys@joinAcceptBuffer:
  1931                           	opt stack 0
  1932  000091                     EncryptFRMPayload@buffer:
  1933                           	opt stack 0
  1934                           
  1935                           ; 2 bytes @ 0x31
  1936  000091                     	ds	2
  1937  000093                     EncryptFRMPayload@bufferLength:
  1938                           	opt stack 0
  1939  000093                     GenerateSubkey@k1:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x33
  1943  000093                     	ds	1
  1944  000094                     EncryptFRMPayload@dir:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x34
  1948  000094                     	ds	1
  1949  000095                     GenerateSubkey@k2:
  1950                           	opt stack 0
  1951  000095                     SwTimerReadValue@ticksCount:
  1952                           	opt stack 0
  1953  000095                     SwTimerStart@ticksRemaining:
  1954                           	opt stack 0
  1955  000095                     EncryptFRMPayload@frameCounter:
  1956                           	opt stack 0
  1957                           
  1958                           ; 4 bytes @ 0x35
  1959  000095                     	ds	2
  1960  000097                     ??_GenerateSubkey:
  1961                           
  1962                           ; 1 bytes @ 0x37
  1963  000097                     	ds	1
  1964  000098                     GenerateSubkey@const_Rb:
  1965                           	opt stack 0
  1966                           
  1967                           ; 16 bytes @ 0x38
  1968  000098                     	ds	1
  1969  000099                     SwTimerReadValue@timerId:
  1970                           	opt stack 0
  1971  000099                     SwTimerStart@timerId:
  1972                           	opt stack 0
  1973  000099                     EncryptFRMPayload@key:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x39
  1977  000099                     	ds	1
  1978  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  1979  00009A                     ??_StartReTxTimer:
  1980  00009A                     ?___lmul:
  1981                           	opt stack 0
  1982  00009A                     ___lmul@multiplier:
  1983                           	opt stack 0
  1984                           
  1985                           ; 4 bytes @ 0x3A
  1986  00009A                     	ds	1
  1987  00009B                     EncryptFRMPayload@macBufferIndex:
  1988                           	opt stack 0
  1989                           
  1990                           ; 1 bytes @ 0x3B
  1991  00009B                     	ds	1
  1992  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x3C
  1996  00009C                     	ds	2
  1997  00009E                     EncryptFRMPayload@multicastStatus:
  1998                           	opt stack 0
  1999  00009E                     StartReTxTimer@minim:
  2000                           	opt stack 0
  2001  00009E                     ___lmul@multiplicand:
  2002                           	opt stack 0
  2003                           
  2004                           ; 4 bytes @ 0x3E
  2005  00009E                     	ds	1
  2006  00009F                     ??_EncryptFRMPayload:
  2007                           
  2008                           ; 1 bytes @ 0x3F
  2009  00009F                     	ds	3
  2010  0000A2                     StartReTxTimer@i:
  2011                           	opt stack 0
  2012  0000A2                     ___lmul@product:
  2013                           	opt stack 0
  2014                           
  2015                           ; 4 bytes @ 0x42
  2016  0000A2                     	ds	4
  2017  0000A6                     ?_ExecuteNewChannel:
  2018                           	opt stack 0
  2019  0000A6                     ?_ExecuteRxParamSetupReq:
  2020                           	opt stack 0
  2021  0000A6                     ?_rand:
  2022                           	opt stack 0
  2023  0000A6                     EncryptFRMPayload@k:
  2024                           	opt stack 0
  2025  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  2026                           	opt stack 0
  2027  0000A6                     ExecuteNewChannel@ptr:
  2028                           	opt stack 0
  2029  0000A6                     ExecuteRxParamSetupReq@ptr:
  2030                           	opt stack 0
  2031  0000A6                     UpdateCfList@joinAccept:
  2032                           	opt stack 0
  2033  0000A6                     LORAWAN_LinkCheckConfigure@period:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x46
  2037  0000A6                     	ds	1
  2038  0000A7                     EncryptFRMPayload@i:
  2039                           	opt stack 0
  2040                           
  2041                           ; 1 bytes @ 0x47
  2042  0000A7                     	ds	1
  2043  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  2044  0000A8                     ??_ExecuteNewChannel:
  2045  0000A8                     ??_ExecuteRxParamSetupReq:
  2046  0000A8                     ??_RADIO_WriteConfiguration:
  2047  0000A8                     ?___lwmod:
  2048                           	opt stack 0
  2049  0000A8                     UpdateCfList@bufferLength:
  2050                           	opt stack 0
  2051  0000A8                     EncryptFRMPayload@j:
  2052                           	opt stack 0
  2053  0000A8                     ___lwmod@dividend:
  2054                           	opt stack 0
  2055  0000A8                     GenerateSubkey@l:
  2056                           	opt stack 0
  2057                           
  2058                           ; 16 bytes @ 0x48
  2059  0000A8                     	ds	1
  2060  0000A9                     UpdateCfList@frequency:
  2061                           	opt stack 0
  2062                           
  2063                           ; 4 bytes @ 0x49
  2064  0000A9                     	ds	1
  2065  0000AA                     ExecuteNewChannel@drRange:
  2066                           	opt stack 0
  2067  0000AA                     ___lwmod@divisor:
  2068                           	opt stack 0
  2069  0000AA                     ExecuteRxParamSetupReq@frequency:
  2070                           	opt stack 0
  2071                           
  2072                           ; 4 bytes @ 0x4A
  2073  0000AA                     	ds	1
  2074  0000AB                     RADIO_WriteConfiguration@i:
  2075                           	opt stack 0
  2076  0000AB                     ExecuteNewChannel@frequency:
  2077                           	opt stack 0
  2078                           
  2079                           ; 4 bytes @ 0x4B
  2080  0000AB                     	ds	1
  2081  0000AC                     ___lwmod@counter:
  2082                           	opt stack 0
  2083  0000AC                     RADIO_WriteConfiguration@tempValue:
  2084                           	opt stack 0
  2085  0000AC                     _LORAWAN_LinkCheckConfigure$3459:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x4C
  2089  0000AC                     	ds	1
  2090  0000AD                     ?_Random:
  2091                           	opt stack 0
  2092  0000AD                     UpdateCfList@channelIndex:
  2093                           	opt stack 0
  2094  0000AD                     Random@max:
  2095                           	opt stack 0
  2096                           
  2097                           ; 2 bytes @ 0x4D
  2098  0000AD                     	ds	1
  2099  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  2100                           	opt stack 0
  2101  0000AE                     UpdateCfList@i:
  2102                           	opt stack 0
  2103                           
  2104                           ; 1 bytes @ 0x4E
  2105  0000AE                     	ds	1
  2106  0000AF                     ExecuteNewChannel@channelIndex:
  2107                           	opt stack 0
  2108  0000AF                     SearchAvailableChannel@transmissionType:
  2109                           	opt stack 0
  2110                           
  2111                           ; 1 bytes @ 0x4F
  2112  0000AF                     	ds	1
  2113  0000B0                     ?_MacExecuteCommands:
  2114                           	opt stack 0
  2115  0000B0                     RADIO_WriteConfiguration@regValue:
  2116                           	opt stack 0
  2117  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  2118                           	opt stack 0
  2119  0000B0                     SearchAvailableChannel@channelIndex:
  2120                           	opt stack 0
  2121  0000B0                     MacExecuteCommands@buffer:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x50
  2125  0000B0                     	ds	1
  2126  0000B1                     ?_RADIO_Transmit:
  2127                           	opt stack 0
  2128  0000B1                     ?_RADIO_ReceiveStart:
  2129                           	opt stack 0
  2130  0000B1                     LORAWAN_Reset@ismBandNew:
  2131                           	opt stack 0
  2132  0000B1                     RADIO_Transmit@buffer:
  2133                           	opt stack 0
  2134  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x51
  2138  0000B1                     	ds	1
  2139  0000B2                     ??_SearchAvailableChannel:
  2140  0000B2                     MacExecuteCommands@fOptsLen:
  2141                           	opt stack 0
  2142  0000B2                     LORAWAN_Init@RxPayload:
  2143                           	opt stack 0
  2144                           
  2145                           ; 2 bytes @ 0x52
  2146  0000B2                     	ds	1
  2147  0000B3                     ??_MacExecuteCommands:
  2148  0000B3                     ??_RADIO_ReceiveStart:
  2149  0000B3                     RADIO_Transmit@bufferLen:
  2150                           	opt stack 0
  2151                           
  2152                           ; 1 bytes @ 0x53
  2153  0000B3                     	ds	1
  2154  0000B4                     ??_RADIO_Transmit:
  2155  0000B4                     LORAWAN_Init@RxJoinResponse:
  2156                           	opt stack 0
  2157                           
  2158                           ; 2 bytes @ 0x54
  2159  0000B4                     	ds	1
  2160  0000B5                     MacExecuteCommands@done:
  2161                           	opt stack 0
  2162                           
  2163                           ; 1 bytes @ 0x55
  2164  0000B5                     	ds	1
  2165  0000B6                     SearchAvailableChannel@randomNumberCopy:
  2166                           	opt stack 0
  2167  0000B6                     MacExecuteCommands@ptr:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x56
  2171  0000B6                     	ds	1
  2172  0000B7                     SearchAvailableChannel@result:
  2173                           	opt stack 0
  2174  0000B7                     _RADIO_ReceiveStart$1082:
  2175                           	opt stack 0
  2176                           
  2177                           ; 4 bytes @ 0x57
  2178  0000B7                     	ds	1
  2179  0000B8                     GenerateSubkey@i:
  2180                           	opt stack 0
  2181  0000B8                     SearchAvailableChannel@maxChannels:
  2182                           	opt stack 0
  2183  0000B8                     _RADIO_Transmit$1077:
  2184                           	opt stack 0
  2185                           
  2186                           ; 4 bytes @ 0x58
  2187  0000B8                     	ds	1
  2188  0000B9                     SearchAvailableChannel@randomNumber:
  2189                           	opt stack 0
  2190  0000B9                     AESCmac@key:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x59
  2194  0000B9                     	ds	1
  2195  0000BA                     SearchAvailableChannel@i:
  2196                           	opt stack 0
  2197                           
  2198                           ; 1 bytes @ 0x5A
  2199  0000BA                     	ds	1
  2200  0000BB                     SelectChannelForTransmission@transmissionType:
  2201                           	opt stack 0
  2202  0000BB                     AESCmac@output:
  2203                           	opt stack 0
  2204  0000BB                     LORAWAN_TxDone@timeOnAir:
  2205                           	opt stack 0
  2206                           
  2207                           ; 2 bytes @ 0x5B
  2208  0000BB                     	ds	1
  2209  0000BC                     SelectChannelForTransmission@result:
  2210                           	opt stack 0
  2211  0000BC                     _RADIO_Transmit$1079:
  2212                           	opt stack 0
  2213                           
  2214                           ; 4 bytes @ 0x5C
  2215  0000BC                     	ds	1
  2216  0000BD                     ??_LORAWAN_TxDone:
  2217  0000BD                     SelectChannelForTransmission@channelIndex:
  2218                           	opt stack 0
  2219  0000BD                     AESCmac@input:
  2220                           	opt stack 0
  2221                           
  2222                           ; 2 bytes @ 0x5D
  2223  0000BD                     	ds	2
  2224  0000BF                     AESCmac@size:
  2225                           	opt stack 0
  2226                           
  2227                           ; 1 bytes @ 0x5F
  2228  0000BF                     	ds	1
  2229  0000C0                     ??_AESCmac:
  2230  0000C0                     RADIO_Transmit@regValue:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x60
  2234  0000C0                     	ds	1
  2235  0000C1                     RADIO_Transmit@i:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x61
  2239  0000C1                     	ds	1
  2240  0000C2                     ??_LORAWAN_RxTimeout:
  2241                           
  2242                           ; 1 bytes @ 0x62
  2243  0000C2                     	ds	4
  2244  0000C6                     LORAWAN_RxTimeout@minim:
  2245                           	opt stack 0
  2246                           
  2247                           ; 4 bytes @ 0x66
  2248  0000C6                     	ds	1
  2249  0000C7                     ?_ComputeMic:
  2250                           	opt stack 0
  2251  0000C7                     AssemblePacket@port:
  2252                           	opt stack 0
  2253  0000C7                     ComputeMic@key:
  2254                           	opt stack 0
  2255                           
  2256                           ; 2 bytes @ 0x67
  2257  0000C7                     	ds	1
  2258  0000C8                     AssemblePacket@buffer:
  2259                           	opt stack 0
  2260                           
  2261                           ; 2 bytes @ 0x68
  2262  0000C8                     	ds	1
  2263  0000C9                     ComputeMic@buffer:
  2264                           	opt stack 0
  2265  0000C9                     _LORAWAN_TxDone$1971:
  2266                           	opt stack 0
  2267                           
  2268                           ; 4 bytes @ 0x69
  2269  0000C9                     	ds	1
  2270  0000CA                     LORAWAN_RxTimeout@i:
  2271                           	opt stack 0
  2272  0000CA                     AssemblePacket@bufferLength:
  2273                           	opt stack 0
  2274                           
  2275                           ; 2 bytes @ 0x6A
  2276  0000CA                     	ds	1
  2277  0000CB                     ??_RADIO_DIO1:
  2278  0000CB                     ComputeMic@bufferLength:
  2279                           	opt stack 0
  2280                           
  2281                           ; 1 bytes @ 0x6B
  2282  0000CB                     	ds	1
  2283  0000CC                     ??_AssemblePacket:
  2284  0000CC                     RADIO_DIO1@dioMapping:
  2285                           	opt stack 0
  2286  0000CC                     ComputeMic@mic:
  2287                           	opt stack 0
  2288                           
  2289                           ; 4 bytes @ 0x6C
  2290  0000CC                     	ds	1
  2291  0000CD                     _LORAWAN_TxDone$1972:
  2292                           	opt stack 0
  2293                           
  2294                           ; 4 bytes @ 0x6D
  2295  0000CD                     	ds	1
  2296  0000CE                     AssemblePacket@confirmed:
  2297                           	opt stack 0
  2298                           
  2299                           ; 1 bytes @ 0x6E
  2300  0000CE                     	ds	1
  2301  0000CF                     AssemblePacket@mhdr:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x6F
  2305  0000CF                     	ds	1
  2306  0000D0                     ??_PrepareJoinRequestFrame:
  2307  0000D0                     AssemblePacket@fCtrl:
  2308                           	opt stack 0
  2309                           
  2310                           ; 1 bytes @ 0x70
  2311  0000D0                     	ds	1
  2312  0000D1                     LORAWAN_TxDone@found:
  2313                           	opt stack 0
  2314  0000D1                     AssemblePacket@macCmdIdx:
  2315                           	opt stack 0
  2316                           
  2317                           ; 1 bytes @ 0x71
  2318  0000D1                     	ds	1
  2319  0000D2                     AssemblePacket@bufferIndex:
  2320                           	opt stack 0
  2321  0000D2                     LORAWAN_TxDone@delta:
  2322                           	opt stack 0
  2323                           
  2324                           ; 4 bytes @ 0x72
  2325  0000D2                     	ds	1
  2326  0000D3                     LORAWAN_Send@port:
  2327                           	opt stack 0
  2328                           
  2329                           ; 1 bytes @ 0x73
  2330  0000D3                     	ds	1
  2331  0000D4                     LORAWAN_Send@buffer:
  2332                           	opt stack 0
  2333  0000D4                     PrepareJoinRequestFrame@mic:
  2334                           	opt stack 0
  2335                           
  2336                           ; 4 bytes @ 0x74
  2337  0000D4                     	ds	2
  2338  0000D6                     LORAWAN_Send@bufferLength:
  2339                           	opt stack 0
  2340  0000D6                     _LORAWAN_TxDone$4999:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x76
  2344  0000D6                     	ds	1
  2345  0000D7                     ??_LORAWAN_Send:
  2346                           
  2347                           ; 1 bytes @ 0x77
  2348  0000D7                     	ds	1
  2349  0000D8                     LORAWAN_Send@result:
  2350                           	opt stack 0
  2351  0000D8                     PrepareJoinRequestFrame@mhdr:
  2352                           	opt stack 0
  2353                           
  2354                           ; 1 bytes @ 0x78
  2355  0000D8                     	ds	1
  2356  0000D9                     LORAWAN_Send@confirmed:
  2357                           	opt stack 0
  2358  0000D9                     PrepareJoinRequestFrame@iCtr:
  2359                           	opt stack 0
  2360                           
  2361                           ; 1 bytes @ 0x79
  2362  0000D9                     	ds	1
  2363  0000DA                     ??_LORAWAN_RxDone:
  2364  0000DA                     ??_SwTimersExecute:
  2365  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2366                           	opt stack 0
  2367  0000DA                     LORAWAN_TxDone@ticks:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x7A
  2371  0000DA                     	ds	1
  2372  0000DB                     LORAWAN_Join@bufferIndex:
  2373                           	opt stack 0
  2374                           
  2375                           ; 1 bytes @ 0x7B
  2376  0000DB                     	ds	1
  2377  0000DC                     LORAWAN_Join@result:
  2378                           	opt stack 0
  2379                           
  2380                           ; 1 bytes @ 0x7C
  2381  0000DC                     	ds	1
  2382  0000DD                     LORAWAN_Join@activationTypeNew:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x7D
  2386  0000DD                     	ds	1
  2387  0000DE                     SwTimersExecute@i:
  2388                           	opt stack 0
  2389  0000DE                     LORAWAN_TxDone@minim:
  2390                           	opt stack 0
  2391                           
  2392                           ; 4 bytes @ 0x7E
  2393  0000DE                     	ds	1
  2394  0000DF                     LORAWAN_RxDone@fPort:
  2395                           	opt stack 0
  2396                           
  2397                           ; 1 bytes @ 0x7F
  2398  0000DF                     	ds	1
  2399  0000E0                     LORAWAN_RxDone@channelIndex:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x80
  2403  0000E0                     	ds	1
  2404  0000E1                     LORAWAN_RxDone@mhdr:
  2405                           	opt stack 0
  2406                           
  2407                           ; 1 bytes @ 0x81
  2408  0000E1                     	ds	1
  2409  0000E2                     LORAWAN_TxDone@i:
  2410                           	opt stack 0
  2411  0000E2                     LORAWAN_RxDone@extractedMic:
  2412                           	opt stack 0
  2413                           
  2414                           ; 4 bytes @ 0x82
  2415  0000E2                     	ds	1
  2416  0000E3                     ??_RADIO_TxDone:
  2417  0000E3                     ??_RADIO_FSKPacketSent:
  2418                           
  2419                           ; 1 bytes @ 0x83
  2420  0000E3                     	ds	3
  2421  0000E6                     LORAWAN_RxDone@bufferIndex:
  2422                           	opt stack 0
  2423                           
  2424                           ; 1 bytes @ 0x86
  2425  0000E6                     	ds	1
  2426  0000E7                     LORAWAN_RxDone@temp:
  2427                           	opt stack 0
  2428  0000E7                     RADIO_TxDone@timeOnAir:
  2429                           	opt stack 0
  2430  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x87
  2434  0000E7                     	ds	1
  2435  0000E8                     LORAWAN_RxDone@packet:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x88
  2439  0000E8                     	ds	2
  2440  0000EA                     LORAWAN_RxDone@computedMic:
  2441                           	opt stack 0
  2442                           
  2443                           ; 4 bytes @ 0x8A
  2444  0000EA                     	ds	1
  2445  0000EB                     _RADIO_TxDone$1094:
  2446                           	opt stack 0
  2447  0000EB                     _RADIO_FSKPacketSent$1098:
  2448                           	opt stack 0
  2449                           
  2450                           ; 4 bytes @ 0x8B
  2451  0000EB                     	ds	3
  2452  0000EE                     LORAWAN_RxDone@joinAccept:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x8E
  2456  0000EE                     	ds	1
  2457  0000EF                     RADIO_FSKPacketSent@irqFlags:
  2458                           	opt stack 0
  2459                           
  2460                           ; 1 bytes @ 0x8F
  2461  0000EF                     	ds	1
  2462  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  2463                           	opt stack 0
  2464                           
  2465                           ; 1 bytes @ 0x90
  2466  0000F0                     	ds	1
  2467  0000F1                     LORAWAN_RxDone@hdr:
  2468                           	opt stack 0
  2469                           
  2470                           ; 2 bytes @ 0x91
  2471  0000F1                     	ds	2
  2472  0000F3                     RADIO_RxDone@irqFlags:
  2473                           	opt stack 0
  2474  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  2475                           	opt stack 0
  2476                           
  2477                           ; 1 bytes @ 0x93
  2478  0000F3                     	ds	1
  2479  0000F4                     RADIO_RxDone@i:
  2480                           	opt stack 0
  2481  0000F4                     RADIO_FSKPayloadReady@i:
  2482                           	opt stack 0
  2483                           
  2484                           ; 1 bytes @ 0x94
  2485  0000F4                     	ds	1
  2486  0000F5                     ??_RADIO_DIO0:
  2487                           
  2488                           ; 1 bytes @ 0x95
  2489  0000F5                     	ds	2
  2490  0000F7                     RADIO_DIO0@dioMapping:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0x97
  2494  0000F7                     	ds	1
  2495  0000F8                     RADIO_DIO0@opMode:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x98
  2499  0000F8                     	ds	1
  2500  0000F9                     ??_main:
  2501                           
  2502                           ; 1 bytes @ 0x99
  2503  0000F9                     	ds	2
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           postinc0	equ	0xFEE
  2509                           wreg	equ	0xFE8
  2510                           postdec2	equ	0xFDD
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           
  2514                           	psect	cstackCOMRAM
  2515  000001                     __pcstackCOMRAM:
  2516                           	opt stack 0
  2517  000001                     ?i2_TMR1_ReadTimer:
  2518                           	opt stack 0
  2519  000001                     i2TMR1_WriteTimer@timerVal:
  2520                           	opt stack 0
  2521                           
  2522                           ; 2 bytes @ 0x0
  2523  000001                     	ds	2
  2524  000003                     ??i2_TMR1_ReadTimer:
  2525  000003                     
  2526                           ; 1 bytes @ 0x2
  2527  000003                     	ds	2
  2528  000005                     i2TMR1_ReadTimer@readVal:
  2529                           	opt stack 0
  2530                           
  2531                           ; 2 bytes @ 0x4
  2532  000005                     	ds	2
  2533  000007                     i2TMR1_ReadTimer@readValHigh:
  2534                           	opt stack 0
  2535                           
  2536                           ; 1 bytes @ 0x6
  2537  000007                     	ds	1
  2538  000008                     i2TMR1_ReadTimer@readValLow:
  2539                           	opt stack 0
  2540                           
  2541                           ; 1 bytes @ 0x7
  2542  000008                     	ds	1
  2543  000009                     ?i2_TMR_SwapTimer:
  2544                           	opt stack 0
  2545  000009                     ?i2_TMR_GetDeltaTime:
  2546                           	opt stack 0
  2547  000009                     i2TMR_SwapTimer@timerVal:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x8
  2551  000009                     	ds	2
  2552  00000B                     
  2553                           ; 1 bytes @ 0xA
  2554  00000B                     	ds	2
  2555  00000D                     ??i2_TMR_GetDeltaTime:
  2556                           
  2557                           ; 1 bytes @ 0xC
  2558  00000D                     	ds	20
  2559  000021                     ?i2_SwTimersInterrupt:
  2560                           	opt stack 0
  2561                           
  2562                           ; 4 bytes @ 0x20
  2563  000021                     	ds	4
  2564  000025                     
  2565                           ; 1 bytes @ 0x24
  2566  000025                     	ds	4
  2567  000029                     i2SwTimersInterrupt@timeElapsed:
  2568                           	opt stack 0
  2569                           
  2570                           ; 4 bytes @ 0x28
  2571  000029                     	ds	4
  2572  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2573                           	opt stack 0
  2574                           
  2575                           ; 4 bytes @ 0x2C
  2576  00002D                     	ds	4
  2577  000031                     i2SwTimersInterrupt@i:
  2578                           	opt stack 0
  2579                           
  2580                           ; 1 bytes @ 0x30
  2581  000031                     	ds	1
  2582  000032                     ??_TMR_ISR_lora:
  2583                           
  2584                           ; 1 bytes @ 0x31
  2585  000032                     	ds	2
  2586  000034                     ??_INTERRUPT_InterruptManager:
  2587                           
  2588                           ; 1 bytes @ 0x33
  2589  000034                     	ds	8
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec2	equ	0xFDD
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           
  2600 ;;
  2601 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2602 ;;
  2603 ;; *************** function _main *****************
  2604 ;; Defined at:
  2605 ;;		line 60 in file "main.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        2 bytes
  2624 ;; Hardware stack levels required when called:   19
  2625 ;; This function calls:
  2626 ;;		_LORAWAN_Init
  2627 ;;		_LORAWAN_Join
  2628 ;;		_LORAWAN_Mainloop
  2629 ;;		_LORAWAN_Send
  2630 ;;		_LORAWAN_SetApplicationSessionKey
  2631 ;;		_LORAWAN_SetDeviceAddress
  2632 ;;		_LORAWAN_SetNetworkSessionKey
  2633 ;;		_SYSTEM_Initialize
  2634 ;; This function is called by:
  2635 ;;		Startup code after reset
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text0
  2640  006FEA                     __ptext0:
  2641                           	opt stack 0
  2642  006FEA                     _main:
  2643                           	opt stack 12
  2644                           
  2645                           ;main.c: 63: SYSTEM_Initialize();
  2646                           
  2647                           ;incstack = 0
  2648  006FEA  ECA3  F044         	call	_SYSTEM_Initialize	;wreg free
  2649                           
  2650                           ;main.c: 89: (INTCONbits.GIE = 1);
  2651  006FEE  8EF2               	bsf	intcon,7,c	;volatile
  2652                           
  2653                           ;main.c: 92: (INTCONbits.PEIE = 1);
  2654  006FF0  8CF2               	bsf	intcon,6,c	;volatile
  2655                           
  2656                           ;main.c: 94: LORAWAN_Init(RxData, RxJoinResponse);
  2657  006FF2  0E4E               	movlw	low _RxData
  2658  006FF4  0100               	movlb	0	; () banked
  2659  006FF6  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2660  006FF8  0E8C               	movlw	high _RxData
  2661  006FFA  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2662  006FFC  0E4C               	movlw	low _RxJoinResponse
  2663  006FFE  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2664  007000  0E8C               	movlw	high _RxJoinResponse
  2665  007002  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2666  007004  ECD6  F03C         	call	_LORAWAN_Init	;wreg free
  2667                           
  2668                           ;main.c: 95: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2669  007008  0ED8               	movlw	low _nwkSKey
  2670  00700A  0100               	movlb	0	; () banked
  2671  00700C  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2672  00700E  0E01               	movlw	high _nwkSKey
  2673  007010  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2674  007012  EC83  F042         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2675                           
  2676                           ;main.c: 96: LORAWAN_SetApplicationSessionKey(appSKey);
  2677  007016  0EA0               	movlw	low _appSKey
  2678  007018  0100               	movlb	0	; () banked
  2679  00701A  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2680  00701C  0E03               	movlw	high _appSKey
  2681  00701E  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2682  007020  EC9A  F042         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2683                           
  2684                           ;main.c: 97: LORAWAN_SetDeviceAddress(devAddr);
  2685  007024  C1D4  F060         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2686  007028  C1D5  F061         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2687  00702C  C1D6  F062         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2688  007030  C1D7  F063         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2689  007034  ECF6  F044         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2690                           
  2691                           ;main.c: 98: LORAWAN_Join(ABP);
  2692  007038  0E01               	movlw	1
  2693  00703A  EC2D  F036         	call	_LORAWAN_Join
  2694  00703E                     
  2695                           ;main.c: 101: {
  2696                           ;main.c: 111: LORAWAN_Mainloop();
  2697  00703E  EC80  F041         	call	_LORAWAN_Mainloop	;wreg free
  2698                           
  2699                           ;main.c: 114: LORAWAN_Send(UNCNF, 2, "LoRax", 5);
  2700  007042  0E02               	movlw	2
  2701  007044  0100               	movlb	0	; () banked
  2702  007046  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  2703  007048  0EF9               	movlw	low STR_1
  2704  00704A  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  2705  00704C  0EFF               	movlw	high STR_1
  2706  00704E  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2707  007050  0E05               	movlw	5
  2708  007052  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2709  007054  0E00               	movlw	0
  2710  007056  ECA2  F033         	call	_LORAWAN_Send
  2711                           
  2712                           ;main.c: 115: _delay((unsigned long)((5000)*(16000000/4000.0)));
  2713  00705A  0E66               	movlw	102
  2714  00705C  0100               	movlb	0	; () banked
  2715  00705E  6FFA               	movwf	(??_main+1)& (0+255),b
  2716  007060  0E76               	movlw	118
  2717  007062  6FF9               	movwf	??_main& (0+255),b
  2718  007064  0EC1               	movlw	193
  2719  007066                     u21797:
  2720  007066  2EE8               	decfsz	wreg,f,c
  2721  007068  D7FE               	bra	u21797
  2722  00706A  2FF9               	decfsz	??_main& (0+255),f,b
  2723  00706C  D7FC               	bra	u21797
  2724  00706E  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  2725  007070  D7FA               	bra	u21797
  2726  007072  D7E5               	goto	l2492
  2727  007074                     __end_of_main:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           intcon	equ	0xFF2
  2734                           postinc0	equ	0xFEE
  2735                           wreg	equ	0xFE8
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           
  2740 ;; *************** function _SYSTEM_Initialize *****************
  2741 ;; Defined at:
  2742 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:   10
  2763 ;; This function calls:
  2764 ;;		_EXT_INT_Initialize
  2765 ;;		_INTERRUPT_Initialize
  2766 ;;		_LORAWAN_PlatformInit
  2767 ;;		_OSCILLATOR_Initialize
  2768 ;;		_PIN_MANAGER_Initialize
  2769 ;;		_SPI2_Initialize
  2770 ;;		_TMR1_Initialize
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text1
  2777  008946                     __ptext1:
  2778                           	opt stack 0
  2779  008946                     _SYSTEM_Initialize:
  2780                           	opt stack 20
  2781                           
  2782                           ;mcc.c: 53: INTERRUPT_Initialize();
  2783                           
  2784                           ;incstack = 0
  2785  008946  EC19  F046         	call	_INTERRUPT_Initialize	;wreg free
  2786                           
  2787                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2788  00894A  ECCF  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
  2789                           
  2790                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2791  00894E  EC95  F045         	call	_OSCILLATOR_Initialize	;wreg free
  2792                           
  2793                           ;mcc.c: 56: SPI2_Initialize();
  2794  008952  EC8E  F045         	call	_SPI2_Initialize	;wreg free
  2795                           
  2796                           ;mcc.c: 57: TMR1_Initialize();
  2797  008956  ECC8  F042         	call	_TMR1_Initialize	;wreg free
  2798                           
  2799                           ;mcc.c: 58: EXT_INT_Initialize();
  2800  00895A  ECDE  F042         	call	_EXT_INT_Initialize	;wreg free
  2801                           
  2802                           ;mcc.c: 59: LORAWAN_PlatformInit();
  2803  00895E  ECCF  F043         	call	_LORAWAN_PlatformInit	;wreg free
  2804  008962  0012               	return		;funcret
  2805  008964                     __end_of_SYSTEM_Initialize:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec2	equ	0xFDD
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           
  2818 ;; *************** function _TMR1_Initialize *****************
  2819 ;; Defined at:
  2820 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    8
  2841 ;; This function calls:
  2842 ;;		_TMR1_SetInterruptHandler
  2843 ;; This function is called by:
  2844 ;;		_SYSTEM_Initialize
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text2
  2849  008590                     __ptext2:
  2850                           	opt stack 0
  2851  008590                     _TMR1_Initialize:
  2852                           	opt stack 21
  2853                           
  2854                           ;tmr1.c: 69: T1GCON = 0x00;
  2855                           
  2856                           ;incstack = 0
  2857  008590  0E00               	movlw	0
  2858  008592  6ECC               	movwf	4044,c	;volatile
  2859                           
  2860                           ;tmr1.c: 72: TMR1H = 0x00;
  2861  008594  0E00               	movlw	0
  2862  008596  6ECF               	movwf	4047,c	;volatile
  2863                           
  2864                           ;tmr1.c: 75: TMR1L = 0x00;
  2865  008598  0E00               	movlw	0
  2866  00859A  6ECE               	movwf	4046,c	;volatile
  2867                           
  2868                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2869  00859C  CFCE F1EA          	movff	4046,_timer1ReloadVal	;volatile
  2870  0085A0  CFCF F1EB          	movff	4047,_timer1ReloadVal+1	;volatile
  2871                           
  2872                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2873  0085A4  909E               	bcf	3998,0,c	;volatile
  2874                           
  2875                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2876  0085A6  809D               	bsf	3997,0,c	;volatile
  2877                           
  2878                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2879  0085A8  0E50               	movlw	low _TMR1_DefaultInterruptHandler
  2880  0085AA  0100               	movlb	0	; () banked
  2881  0085AC  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2882  0085AE  0E8C               	movlw	high _TMR1_DefaultInterruptHandler
  2883  0085B0  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2884  0085B2  ECA9  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  2885                           
  2886                           ;tmr1.c: 90: T1CON = 0x8D;
  2887  0085B6  0E8D               	movlw	141
  2888  0085B8  6ECD               	movwf	4045,c	;volatile
  2889  0085BA  0012               	return		;funcret
  2890  0085BC                     __end_of_TMR1_Initialize:
  2891                           	opt stack 0
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           intcon	equ	0xFF2
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           postdec2	equ	0xFDD
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           
  2903 ;; *************** function _SPI2_Initialize *****************
  2904 ;; Defined at:
  2905 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    7
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_SYSTEM_Initialize
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text3
  2934  008B1C                     __ptext3:
  2935                           	opt stack 0
  2936  008B1C                     _SPI2_Initialize:
  2937                           	opt stack 22
  2938                           
  2939                           ;spi2.c: 70: SSP2STAT = 0x40;
  2940                           
  2941                           ;incstack = 0
  2942  008B1C  0E40               	movlw	64
  2943  008B1E  6E6D               	movwf	3949,c	;volatile
  2944                           
  2945                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2946  008B20  0E20               	movlw	32
  2947  008B22  6E6C               	movwf	3948,c	;volatile
  2948                           
  2949                           ;spi2.c: 76: SSP2ADD = 0x00;
  2950  008B24  0E00               	movlw	0
  2951  008B26  6E6E               	movwf	3950,c	;volatile
  2952  008B28  0012               	return		;funcret
  2953  008B2A                     __end_of_SPI2_Initialize:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           postdec2	equ	0xFDD
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           
  2966 ;; *************** function _PIN_MANAGER_Initialize *****************
  2967 ;; Defined at:
  2968 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    8
  2989 ;; This function calls:
  2990 ;;		_IOCB4_SetInterruptHandler
  2991 ;; This function is called by:
  2992 ;;		_SYSTEM_Initialize
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text4
  2997  007D9E                     __ptext4:
  2998                           	opt stack 0
  2999  007D9E                     _PIN_MANAGER_Initialize:
  3000                           	opt stack 21
  3001                           
  3002                           ;pin_manager.c: 62: LATE = 0x00;
  3003                           
  3004                           ;incstack = 0
  3005  007D9E  0E00               	movlw	0
  3006  007DA0  6E8D               	movwf	3981,c	;volatile
  3007                           
  3008                           ;pin_manager.c: 63: LATD = 0x00;
  3009  007DA2  0E00               	movlw	0
  3010  007DA4  6E8C               	movwf	3980,c	;volatile
  3011                           
  3012                           ;pin_manager.c: 64: LATA = 0x00;
  3013  007DA6  0E00               	movlw	0
  3014  007DA8  6E89               	movwf	3977,c	;volatile
  3015                           
  3016                           ;pin_manager.c: 65: LATB = 0x00;
  3017  007DAA  0E00               	movlw	0
  3018  007DAC  6E8A               	movwf	3978,c	;volatile
  3019                           
  3020                           ;pin_manager.c: 66: LATC = 0x00;
  3021  007DAE  0E00               	movlw	0
  3022  007DB0  6E8B               	movwf	3979,c	;volatile
  3023                           
  3024                           ;pin_manager.c: 71: TRISE = 0x07;
  3025  007DB2  0E07               	movlw	7
  3026  007DB4  6E96               	movwf	3990,c	;volatile
  3027                           
  3028                           ;pin_manager.c: 72: TRISA = 0xFF;
  3029  007DB6  6892               	setf	3986,c	;volatile
  3030                           
  3031                           ;pin_manager.c: 73: TRISB = 0xFF;
  3032  007DB8  6893               	setf	3987,c	;volatile
  3033                           
  3034                           ;pin_manager.c: 74: TRISC = 0xFE;
  3035  007DBA  0EFE               	movlw	254
  3036  007DBC  6E94               	movwf	3988,c	;volatile
  3037                           
  3038                           ;pin_manager.c: 75: TRISD = 0xE6;
  3039  007DBE  0EE6               	movlw	230
  3040  007DC0  6E95               	movwf	3989,c	;volatile
  3041                           
  3042                           ;pin_manager.c: 80: ANSELD = 0xE4;
  3043  007DC2  0EE4               	movlw	228
  3044  007DC4  010F               	movlb	15	; () banked
  3045  007DC6  6F3B               	movwf	59,b	;volatile
  3046                           
  3047                           ;pin_manager.c: 81: ANSELC = 0xF8;
  3048  007DC8  0EF8               	movlw	248
  3049  007DCA  6F3A               	movwf	58,b	;volatile
  3050                           
  3051                           ;pin_manager.c: 82: ANSELB = 0x28;
  3052  007DCC  0E28               	movlw	40
  3053  007DCE  6F39               	movwf	57,b	;volatile
  3054                           
  3055                           ;pin_manager.c: 83: ANSELE = 0x07;
  3056  007DD0  0E07               	movlw	7
  3057  007DD2  6F3C               	movwf	60,b	;volatile
  3058                           
  3059                           ;pin_manager.c: 84: ANSELA = 0x2F;
  3060  007DD4  0E2F               	movlw	47
  3061  007DD6  6F38               	movwf	56,b	;volatile
  3062                           
  3063                           ;pin_manager.c: 89: WPUB = 0x00;
  3064  007DD8  0E00               	movlw	0
  3065  007DDA  6E61               	movwf	3937,c	;volatile
  3066                           
  3067                           ; BSR set to: 15
  3068                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  3069  007DDC  8EF1               	bsf	intcon2,7,c	;volatile
  3070                           
  3071                           ; BSR set to: 15
  3072                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  3073  007DDE  8862               	bsf	3938,4,c	;volatile
  3074                           
  3075                           ; BSR set to: 15
  3076                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3077  007DE0  0E52               	movlw	low _IOCB4_DefaultInterruptHandler
  3078  007DE2  0100               	movlb	0	; () banked
  3079  007DE4  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3080  007DE6  0E8C               	movlw	high _IOCB4_DefaultInterruptHandler
  3081  007DE8  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3082  007DEA  ECAE  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  3083                           
  3084                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  3085  007DEE  86F2               	bsf	intcon,3,c	;volatile
  3086  007DF0  0012               	return		;funcret
  3087  007DF2                     __end_of_PIN_MANAGER_Initialize:
  3088                           	opt stack 0
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           postdec2	equ	0xFDD
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           
  3101 ;; *************** function _OSCILLATOR_Initialize *****************
  3102 ;; Defined at:
  3103 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    7
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_SYSTEM_Initialize
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text5
  3132  008B2A                     __ptext5:
  3133                           	opt stack 0
  3134  008B2A                     _OSCILLATOR_Initialize:
  3135                           	opt stack 22
  3136                           
  3137                           ;mcc.c: 65: OSCCON = 0x70;
  3138                           
  3139                           ;incstack = 0
  3140  008B2A  0E70               	movlw	112
  3141  008B2C  6ED3               	movwf	4051,c	;volatile
  3142                           
  3143                           ;mcc.c: 67: OSCCON2 = 0x04;
  3144  008B2E  0E04               	movlw	4
  3145  008B30  6ED2               	movwf	4050,c	;volatile
  3146                           
  3147                           ;mcc.c: 69: OSCTUNE = 0x00;
  3148  008B32  0E00               	movlw	0
  3149  008B34  6E9B               	movwf	3995,c	;volatile
  3150  008B36  0012               	return		;funcret
  3151  008B38                     __end_of_OSCILLATOR_Initialize:
  3152                           	opt stack 0
  3153                           tblptru	equ	0xFF8
  3154                           tblptrh	equ	0xFF7
  3155                           tblptrl	equ	0xFF6
  3156                           tablat	equ	0xFF5
  3157                           intcon	equ	0xFF2
  3158                           intcon2	equ	0xFF1
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           postdec2	equ	0xFDD
  3162                           fsr2h	equ	0xFDA
  3163                           fsr2l	equ	0xFD9
  3164                           
  3165 ;; *************** function _LORAWAN_PlatformInit *****************
  3166 ;; Defined at:
  3167 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    9
  3188 ;; This function calls:
  3189 ;;		_DIO0_ISR_Lora_Init
  3190 ;;		_DIO1_ISR_Lora_Init
  3191 ;;		_DIO2_ISR_Lora_Init
  3192 ;;		_DIO3_ISR_Lora_Init
  3193 ;;		_DIO4_ISR_Lora_Init
  3194 ;;		_DIO5_ISR_Lora_Init
  3195 ;;		_SystemTimerInit
  3196 ;;		_TMR_ISR_Lora_Init
  3197 ;; This function is called by:
  3198 ;;		_SYSTEM_Initialize
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text6
  3203  00879E                     __ptext6:
  3204                           	opt stack 0
  3205  00879E                     _LORAWAN_PlatformInit:
  3206                           	opt stack 20
  3207                           
  3208                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  3209                           
  3210                           ;incstack = 0
  3211  00879E  EC66  F045         	call	_TMR_ISR_Lora_Init	;wreg free
  3212                           
  3213                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  3214  0087A2  EC7E  F045         	call	_DIO0_ISR_Lora_Init	;wreg free
  3215                           
  3216                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  3217  0087A6  EC76  F045         	call	_DIO1_ISR_Lora_Init	;wreg free
  3218                           
  3219                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  3220  0087AA  EC6E  F045         	call	_DIO2_ISR_Lora_Init	;wreg free
  3221                           
  3222                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  3223  0087AE  EC25  F046         	call	_DIO3_ISR_Lora_Init	;wreg free
  3224                           
  3225                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  3226  0087B2  EC24  F046         	call	_DIO4_ISR_Lora_Init	;wreg free
  3227                           
  3228                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  3229  0087B6  EC23  F046         	call	_DIO5_ISR_Lora_Init	;wreg free
  3230                           
  3231                           ;lorawan_init.c: 82: SystemTimerInit();
  3232  0087BA  ECF9  F045         	call	_SystemTimerInit	;wreg free
  3233  0087BE  0012               	return		;funcret
  3234  0087C0                     __end_of_LORAWAN_PlatformInit:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           intcon	equ	0xFF2
  3241                           intcon2	equ	0xFF1
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           
  3248 ;; *************** function _TMR_ISR_Lora_Init *****************
  3249 ;; Defined at:
  3250 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    8
  3271 ;; This function calls:
  3272 ;;		_TMR1_SetInterruptHandler
  3273 ;; This function is called by:
  3274 ;;		_LORAWAN_PlatformInit
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text7
  3279  008ACC                     __ptext7:
  3280                           	opt stack 0
  3281  008ACC                     _TMR_ISR_Lora_Init:
  3282                           	opt stack 20
  3283                           
  3284                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3285                           
  3286                           ;incstack = 0
  3287  008ACC  0E48               	movlw	low _TMR_ISR_lora
  3288  008ACE  0100               	movlb	0	; () banked
  3289  008AD0  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3290  008AD2  0E7D               	movlw	high _TMR_ISR_lora
  3291  008AD4  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3292  008AD6  ECA9  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  3293  008ADA  0012               	return		;funcret
  3294  008ADC                     __end_of_TMR_ISR_Lora_Init:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           intcon	equ	0xFF2
  3301                           intcon2	equ	0xFF1
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           postdec2	equ	0xFDD
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           
  3308 ;; *************** function _TMR1_SetInterruptHandler *****************
  3309 ;; Defined at:
  3310 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3313 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    7
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_TMR_ISR_Lora_Init
  3336 ;;		_TMR1_Initialize
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text8
  3341  008B52                     __ptext8:
  3342                           	opt stack 0
  3343  008B52                     _TMR1_SetInterruptHandler:
  3344                           	opt stack 21
  3345                           
  3346                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  3347                           
  3348                           ;incstack = 0
  3349  008B52  C060  F1E8         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3350  008B56  C061  F1E9         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3351  008B5A  0012               	return		;funcret
  3352  008B5C                     __end_of_TMR1_SetInterruptHandler:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           intcon	equ	0xFF2
  3359                           intcon2	equ	0xFF1
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec2	equ	0xFDD
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           
  3366 ;; *************** function _SystemTimerInit *****************
  3367 ;; Defined at:
  3368 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    7
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_LORAWAN_PlatformInit
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text9
  3397  008BF2                     __ptext9:
  3398                           	opt stack 0
  3399  008BF2                     _SystemTimerInit:
  3400                           	opt stack 21
  3401                           
  3402                           ;sw_timer.c: 137: allocatedTimers = 0;
  3403                           
  3404                           ;incstack = 0
  3405  008BF2  0E00               	movlw	0
  3406  008BF4  0100               	movlb	0	; () banked
  3407  008BF6  6FFB               	movwf	_allocatedTimers& (0+255),b	;volatile
  3408                           
  3409                           ; BSR set to: 0
  3410  008BF8  0012               	return		;funcret
  3411  008BFA                     __end_of_SystemTimerInit:
  3412                           	opt stack 0
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           intcon	equ	0xFF2
  3418                           intcon2	equ	0xFF1
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec2	equ	0xFDD
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           
  3425 ;; *************** function _DIO5_ISR_Lora_Init *****************
  3426 ;; Defined at:
  3427 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		None
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    7
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_LORAWAN_PlatformInit
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text10
  3456  008C46                     __ptext10:
  3457                           	opt stack 0
  3458  008C46                     _DIO5_ISR_Lora_Init:
  3459                           	opt stack 21
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;incstack = 0
  3463  008C46  0012               	return		;funcret
  3464  008C48                     __end_of_DIO5_ISR_Lora_Init:
  3465                           	opt stack 0
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           intcon	equ	0xFF2
  3471                           intcon2	equ	0xFF1
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec2	equ	0xFDD
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           
  3478 ;; *************** function _DIO4_ISR_Lora_Init *****************
  3479 ;; Defined at:
  3480 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		None
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_LORAWAN_PlatformInit
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text11
  3509  008C48                     __ptext11:
  3510                           	opt stack 0
  3511  008C48                     _DIO4_ISR_Lora_Init:
  3512                           	opt stack 21
  3513                           
  3514                           ;incstack = 0
  3515  008C48  0012               	return		;funcret
  3516  008C4A                     __end_of_DIO4_ISR_Lora_Init:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           intcon	equ	0xFF2
  3523                           intcon2	equ	0xFF1
  3524                           postinc0	equ	0xFEE
  3525                           wreg	equ	0xFE8
  3526                           postdec2	equ	0xFDD
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           
  3530 ;; *************** function _DIO3_ISR_Lora_Init *****************
  3531 ;; Defined at:
  3532 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		None
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    7
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_LORAWAN_PlatformInit
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text12
  3561  008C4A                     __ptext12:
  3562                           	opt stack 0
  3563  008C4A                     _DIO3_ISR_Lora_Init:
  3564                           	opt stack 21
  3565                           
  3566                           ;incstack = 0
  3567  008C4A  0012               	return		;funcret
  3568  008C4C                     __end_of_DIO3_ISR_Lora_Init:
  3569                           	opt stack 0
  3570                           tblptru	equ	0xFF8
  3571                           tblptrh	equ	0xFF7
  3572                           tblptrl	equ	0xFF6
  3573                           tablat	equ	0xFF5
  3574                           intcon	equ	0xFF2
  3575                           intcon2	equ	0xFF1
  3576                           postinc0	equ	0xFEE
  3577                           wreg	equ	0xFE8
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           
  3582 ;; *************** function _DIO2_ISR_Lora_Init *****************
  3583 ;; Defined at:
  3584 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    8
  3605 ;; This function calls:
  3606 ;;		_IOCB4_SetInterruptHandler
  3607 ;; This function is called by:
  3608 ;;		_LORAWAN_PlatformInit
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text13
  3613  008ADC                     __ptext13:
  3614                           	opt stack 0
  3615  008ADC                     _DIO2_ISR_Lora_Init:
  3616                           	opt stack 20
  3617                           
  3618                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  3619                           
  3620                           ;incstack = 0
  3621  008ADC  0E1C               	movlw	low _DIO2_ISR_Lora
  3622  008ADE  0100               	movlb	0	; () banked
  3623  008AE0  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3624  008AE2  0E8C               	movlw	high _DIO2_ISR_Lora
  3625  008AE4  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3626  008AE6  ECAE  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  3627  008AEA  0012               	return		;funcret
  3628  008AEC                     __end_of_DIO2_ISR_Lora_Init:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           intcon	equ	0xFF2
  3635                           intcon2	equ	0xFF1
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec2	equ	0xFDD
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           
  3642 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3643 ;; Defined at:
  3644 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3647 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        2 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    7
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_DIO2_ISR_Lora_Init
  3670 ;;		_PIN_MANAGER_Initialize
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text14
  3675  008B5C                     __ptext14:
  3676                           	opt stack 0
  3677  008B5C                     _IOCB4_SetInterruptHandler:
  3678                           	opt stack 21
  3679                           
  3680                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  3681                           
  3682                           ;incstack = 0
  3683  008B5C  C060  F1EC         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3684  008B60  C061  F1ED         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3685  008B64  0012               	return		;funcret
  3686  008B66                     __end_of_IOCB4_SetInterruptHandler:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           intcon	equ	0xFF2
  3693                           intcon2	equ	0xFF1
  3694                           postinc0	equ	0xFEE
  3695                           wreg	equ	0xFE8
  3696                           postdec2	equ	0xFDD
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           
  3700 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3701 ;; Defined at:
  3702 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    8
  3723 ;; This function calls:
  3724 ;;		_INT2_SetInterruptHandler
  3725 ;; This function is called by:
  3726 ;;		_LORAWAN_PlatformInit
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text15
  3731  008AEC                     __ptext15:
  3732                           	opt stack 0
  3733  008AEC                     _DIO1_ISR_Lora_Init:
  3734                           	opt stack 20
  3735                           
  3736                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3737                           
  3738                           ;incstack = 0
  3739  008AEC  0E22               	movlw	low _DIO1_ISR_Lora
  3740  008AEE  0100               	movlb	0	; () banked
  3741  008AF0  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3742  008AF2  0E8C               	movlw	high _DIO1_ISR_Lora
  3743  008AF4  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3744  008AF6  ECB3  F045         	call	_INT2_SetInterruptHandler	;wreg free
  3745  008AFA  0012               	return		;funcret
  3746  008AFC                     __end_of_DIO1_ISR_Lora_Init:
  3747                           	opt stack 0
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           intcon	equ	0xFF2
  3753                           intcon2	equ	0xFF1
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           
  3760 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3761 ;; Defined at:
  3762 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    8
  3783 ;; This function calls:
  3784 ;;		_INT1_SetInterruptHandler
  3785 ;; This function is called by:
  3786 ;;		_LORAWAN_PlatformInit
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text16
  3791  008AFC                     __ptext16:
  3792                           	opt stack 0
  3793  008AFC                     _DIO0_ISR_Lora_Init:
  3794                           	opt stack 20
  3795                           
  3796                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3797                           
  3798                           ;incstack = 0
  3799  008AFC  0E28               	movlw	low _DIO0_ISR_Lora
  3800  008AFE  0100               	movlb	0	; () banked
  3801  008B00  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3802  008B02  0E8C               	movlw	high _DIO0_ISR_Lora
  3803  008B04  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3804  008B06  ECB8  F045         	call	_INT1_SetInterruptHandler	;wreg free
  3805  008B0A  0012               	return		;funcret
  3806  008B0C                     __end_of_DIO0_ISR_Lora_Init:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           intcon	equ	0xFF2
  3813                           intcon2	equ	0xFF1
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec2	equ	0xFDD
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           
  3820 ;; *************** function _INTERRUPT_Initialize *****************
  3821 ;; Defined at:
  3822 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		None
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    7
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_SYSTEM_Initialize
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text17
  3851  008C32                     __ptext17:
  3852                           	opt stack 0
  3853  008C32                     _INTERRUPT_Initialize:
  3854                           	opt stack 22
  3855                           
  3856                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3857                           
  3858                           ;incstack = 0
  3859  008C32  9ED0               	bcf	4048,7,c	;volatile
  3860  008C34  0012               	return		;funcret
  3861  008C36                     __end_of_INTERRUPT_Initialize:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           intcon	equ	0xFF2
  3868                           intcon2	equ	0xFF1
  3869                           postinc0	equ	0xFEE
  3870                           wreg	equ	0xFE8
  3871                           postdec2	equ	0xFDD
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           
  3875 ;; *************** function _EXT_INT_Initialize *****************
  3876 ;; Defined at:
  3877 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    8
  3898 ;; This function calls:
  3899 ;;		_INT1_SetInterruptHandler
  3900 ;;		_INT2_SetInterruptHandler
  3901 ;; This function is called by:
  3902 ;;		_SYSTEM_Initialize
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text18
  3907  0085BC                     __ptext18:
  3908                           	opt stack 0
  3909  0085BC                     _EXT_INT_Initialize:
  3910                           	opt stack 21
  3911                           
  3912                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3913                           
  3914                           ;incstack = 0
  3915  0085BC  90F0               	bcf	intcon3,0,c	;volatile
  3916                           
  3917                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3918  0085BE  8AF1               	bsf	intcon2,5,c	;volatile
  3919                           
  3920                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3921  0085C0  0E56               	movlw	low _INT1_DefaultInterruptHandler
  3922  0085C2  0100               	movlb	0	; () banked
  3923  0085C4  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3924  0085C6  0E8C               	movlw	high _INT1_DefaultInterruptHandler
  3925  0085C8  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3926  0085CA  ECB8  F045         	call	_INT1_SetInterruptHandler	;wreg free
  3927                           
  3928                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3929  0085CE  86F0               	bsf	intcon3,3,c	;volatile
  3930                           
  3931                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3932  0085D0  92F0               	bcf	intcon3,1,c	;volatile
  3933                           
  3934                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3935  0085D2  88F1               	bsf	intcon2,4,c	;volatile
  3936                           
  3937                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3938  0085D4  0E54               	movlw	low _INT2_DefaultInterruptHandler
  3939  0085D6  0100               	movlb	0	; () banked
  3940  0085D8  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3941  0085DA  0E8C               	movlw	high _INT2_DefaultInterruptHandler
  3942  0085DC  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3943  0085DE  ECB3  F045         	call	_INT2_SetInterruptHandler	;wreg free
  3944                           
  3945                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3946  0085E2  88F0               	bsf	intcon3,4,c	;volatile
  3947  0085E4  0012               	return		;funcret
  3948  0085E6                     __end_of_EXT_INT_Initialize:
  3949                           	opt stack 0
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           intcon	equ	0xFF2
  3955                           intcon2	equ	0xFF1
  3956                           intcon3	equ	0xFF0
  3957                           postinc0	equ	0xFEE
  3958                           wreg	equ	0xFE8
  3959                           postdec2	equ	0xFDD
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           
  3963 ;; *************** function _INT2_SetInterruptHandler *****************
  3964 ;; Defined at:
  3965 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3968 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    7
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_DIO1_ISR_Lora_Init
  3991 ;;		_EXT_INT_Initialize
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text19
  3996  008B66                     __ptext19:
  3997                           	opt stack 0
  3998  008B66                     _INT2_SetInterruptHandler:
  3999                           	opt stack 20
  4000                           
  4001                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  4002                           
  4003                           ;incstack = 0
  4004  008B66  C060  F1EE         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4005  008B6A  C061  F1EF         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4006  008B6E  0012               	return		;funcret
  4007  008B70                     __end_of_INT2_SetInterruptHandler:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           intcon	equ	0xFF2
  4014                           intcon2	equ	0xFF1
  4015                           intcon3	equ	0xFF0
  4016                           postinc0	equ	0xFEE
  4017                           wreg	equ	0xFE8
  4018                           postdec2	equ	0xFDD
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           
  4022 ;; *************** function _INT1_SetInterruptHandler *****************
  4023 ;; Defined at:
  4024 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4027 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;Total ram usage:        2 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    7
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_DIO0_ISR_Lora_Init
  4050 ;;		_EXT_INT_Initialize
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text20
  4055  008B70                     __ptext20:
  4056                           	opt stack 0
  4057  008B70                     _INT1_SetInterruptHandler:
  4058                           	opt stack 20
  4059                           
  4060                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  4061                           
  4062                           ;incstack = 0
  4063  008B70  C060  F1F0         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4064  008B74  C061  F1F1         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4065  008B78  0012               	return		;funcret
  4066  008B7A                     __end_of_INT1_SetInterruptHandler:
  4067                           	opt stack 0
  4068                           tblptru	equ	0xFF8
  4069                           tblptrh	equ	0xFF7
  4070                           tblptrl	equ	0xFF6
  4071                           tablat	equ	0xFF5
  4072                           intcon	equ	0xFF2
  4073                           intcon2	equ	0xFF1
  4074                           intcon3	equ	0xFF0
  4075                           postinc0	equ	0xFEE
  4076                           wreg	equ	0xFE8
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           
  4081 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  4082 ;; Defined at:
  4083 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  4086 ;;		 -> nwkSKey(16), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    8
  4105 ;; This function calls:
  4106 ;;		_memcpy
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text21
  4113  008506                     __ptext21:
  4114                           	opt stack 0
  4115  008506                     _LORAWAN_SetNetworkSessionKey:
  4116                           	opt stack 22
  4117                           
  4118                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  4119                           
  4120                           ;incstack = 0
  4121  008506  0100               	movlb	0	; () banked
  4122  008508  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  4123  00850A  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  4124  00850C  B4D8               	btfsc	status,2,c
  4125  00850E  0012               	return	
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;lorawan.c: 382: {
  4129                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  4130  008510  0E22               	movlw	low (_loRa+34)
  4131  008512  6F60               	movwf	memcpy@d1& (0+255),b
  4132  008514  0E02               	movlw	high (_loRa+34)
  4133  008516  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4134  008518  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  4135  00851C  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  4136  008520  0E00               	movlw	0
  4137  008522  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4138  008524  0E10               	movlw	16
  4139  008526  6F64               	movwf	memcpy@n& (0+255),b
  4140  008528  EC37  F03D         	call	_memcpy	;wreg free
  4141                           
  4142                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  4143  00852C  0102               	movlb	2	; () banked
  4144  00852E  89A5               	bsf	(_loRa+165)& (0+255),4,b
  4145                           
  4146                           ; BSR set to: 2
  4147                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  4148  008530  9902               	bcf	(_loRa+2)& (0+255),4,b
  4149  008532  0012               	return	
  4150  008534                     __end_of_LORAWAN_SetNetworkSessionKey:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           intcon	equ	0xFF2
  4157                           intcon2	equ	0xFF1
  4158                           intcon3	equ	0xFF0
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           postdec2	equ	0xFDD
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  4167 ;; Defined at:
  4168 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		None
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        4 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    7
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text22
  4197  0089EC                     __ptext22:
  4198                           	opt stack 0
  4199  0089EC                     _LORAWAN_SetDeviceAddress:
  4200                           	opt stack 23
  4201                           
  4202                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  4203                           
  4204                           ;incstack = 0
  4205  0089EC  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  4206  0089F0  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  4207  0089F4  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  4208  0089F8  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  4209                           
  4210                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  4211  0089FC  0102               	movlb	2	; () banked
  4212  0089FE  85A5               	bsf	(_loRa+165)& (0+255),2,b
  4213                           
  4214                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  4215  008A00  9902               	bcf	(_loRa+2)& (0+255),4,b
  4216                           
  4217                           ; BSR set to: 2
  4218  008A02  0012               	return		;funcret
  4219  008A04                     __end_of_LORAWAN_SetDeviceAddress:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           intcon	equ	0xFF2
  4226                           intcon2	equ	0xFF1
  4227                           intcon3	equ	0xFF0
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           postdec2	equ	0xFDD
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  4236 ;; Defined at:
  4237 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  4240 ;;		 -> appSKey(16), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;Total ram usage:        2 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    8
  4259 ;; This function calls:
  4260 ;;		_memcpy
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text23
  4267  008534                     __ptext23:
  4268                           	opt stack 0
  4269  008534                     _LORAWAN_SetApplicationSessionKey:
  4270                           	opt stack 22
  4271                           
  4272                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  4273                           
  4274                           ; BSR set to: 2
  4275                           ;incstack = 0
  4276  008534  0100               	movlb	0	; () banked
  4277  008536  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  4278  008538  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  4279  00853A  B4D8               	btfsc	status,2,c
  4280  00853C  0012               	return	
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;lorawan.c: 397: {
  4284                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  4285  00853E  0E32               	movlw	low (_loRa+50)
  4286  008540  6F60               	movwf	memcpy@d1& (0+255),b
  4287  008542  0E02               	movlw	high (_loRa+50)
  4288  008544  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4289  008546  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  4290  00854A  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  4291  00854E  0E00               	movlw	0
  4292  008550  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4293  008552  0E10               	movlw	16
  4294  008554  6F64               	movwf	memcpy@n& (0+255),b
  4295  008556  EC37  F03D         	call	_memcpy	;wreg free
  4296                           
  4297                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  4298  00855A  0102               	movlb	2	; () banked
  4299  00855C  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  4300                           
  4301                           ; BSR set to: 2
  4302                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  4303  00855E  9902               	bcf	(_loRa+2)& (0+255),4,b
  4304  008560  0012               	return	
  4305  008562                     __end_of_LORAWAN_SetApplicationSessionKey:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           intcon	equ	0xFF2
  4312                           intcon2	equ	0xFF1
  4313                           intcon3	equ	0xFF0
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           postdec2	equ	0xFDD
  4317                           fsr2h	equ	0xFDA
  4318                           fsr2l	equ	0xFD9
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function _LORAWAN_Mainloop *****************
  4322 ;; Defined at:
  4323 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:   18
  4344 ;; This function calls:
  4345 ;;		_INTERRUPT_GetDioStatus
  4346 ;;		_RADIO_DIO0
  4347 ;;		_RADIO_DIO1
  4348 ;;		_RADIO_DIO2
  4349 ;;		_RADIO_DIO3
  4350 ;;		_RADIO_DIO4
  4351 ;;		_RADIO_DIO5
  4352 ;;		_SwTimersExecute
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text24
  4359  008300                     __ptext24:
  4360                           	opt stack 0
  4361  008300                     _LORAWAN_Mainloop:
  4362                           	opt stack 12
  4363                           
  4364                           ;lorawan.c: 2240: SwTimersExecute();
  4365                           
  4366                           ;incstack = 0
  4367  008300  EC73  F031         	call	_SwTimersExecute	;wreg free
  4368                           
  4369                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  4370  008304  EC2F  F045         	call	_INTERRUPT_GetDioStatus	;wreg free
  4371  008308  0101               	movlb	1	; () banked
  4372  00830A  6F77               	movwf	_localDioStatus& (0+255),b
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  4376  00830C  B177               	btfsc	_localDioStatus& (0+255),0,b
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;lorawan.c: 2246: {
  4380                           ;lorawan.c: 2247: RADIO_DIO0();
  4381  00830E  EC67  F037         	call	_RADIO_DIO0	;wreg free
  4382                           
  4383                           ;lorawan.c: 2248: }
  4384                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  4385  008312  0101               	movlb	1	; () banked
  4386  008314  B377               	btfsc	_localDioStatus& (0+255),1,b
  4387                           
  4388                           ; BSR set to: 1
  4389                           ;lorawan.c: 2250: {
  4390                           ;lorawan.c: 2251: RADIO_DIO1();
  4391  008316  EC9E  F03F         	call	_RADIO_DIO1	;wreg free
  4392                           
  4393                           ;lorawan.c: 2252: }
  4394                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  4395  00831A  0101               	movlb	1	; () banked
  4396  00831C  B577               	btfsc	_localDioStatus& (0+255),2,b
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;lorawan.c: 2254: {
  4400                           ;lorawan.c: 2255: RADIO_DIO2();
  4401  00831E  EC79  F03E         	call	_RADIO_DIO2	;wreg free
  4402                           
  4403                           ;lorawan.c: 2256: }
  4404                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  4405  008322  0101               	movlb	1	; () banked
  4406  008324  B777               	btfsc	_localDioStatus& (0+255),3,b
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;lorawan.c: 2258: {
  4410                           ;lorawan.c: 2259: RADIO_DIO3();
  4411  008326  ECE0  F043         	call	_RADIO_DIO3	;wreg free
  4412                           
  4413                           ;lorawan.c: 2260: }
  4414                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  4415  00832A  0101               	movlb	1	; () banked
  4416  00832C  B977               	btfsc	_localDioStatus& (0+255),4,b
  4417                           
  4418                           ; BSR set to: 1
  4419                           ;lorawan.c: 2262: {
  4420                           ;lorawan.c: 2263: RADIO_DIO4();
  4421  00832E  ECD8  F041         	call	_RADIO_DIO4	;wreg free
  4422                           
  4423                           ;lorawan.c: 2264: }
  4424                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  4425  008332  0101               	movlb	1	; () banked
  4426  008334  AB77               	btfss	_localDioStatus& (0+255),5,b
  4427  008336  0012               	return	
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;lorawan.c: 2266: {
  4431                           ;lorawan.c: 2267: RADIO_DIO5();
  4432  008338  EC46  F043         	call	_RADIO_DIO5	;wreg free
  4433  00833C  0012               	return	
  4434  00833E                     __end_of_LORAWAN_Mainloop:
  4435                           	opt stack 0
  4436                           tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           intcon	equ	0xFF2
  4441                           intcon2	equ	0xFF1
  4442                           intcon3	equ	0xFF0
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450 ;; *************** function _SwTimersExecute *****************
  4451 ;; Defined at:
  4452 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  i               1  126[BANK0 ] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;Total ram usage:        5 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:   17
  4473 ;; This function calls:
  4474 ;;		Absolute function
  4475 ;;		_AckRetransmissionCallback
  4476 ;;		_AutomaticReplyCallback
  4477 ;;		_DutyCycleCallback
  4478 ;;		_LORAWAN_LinkCheckCallback
  4479 ;;		_LORAWAN_ReceiveWindow1Callback
  4480 ;;		_LORAWAN_ReceiveWindow2Callback
  4481 ;;		_RADIO_RxFSKTimeout
  4482 ;;		_RADIO_WatchdogTimeout
  4483 ;;		_UnconfirmedTransmissionCallback
  4484 ;;		_UpdateJoinSuccessState
  4485 ;; This function is called by:
  4486 ;;		_LORAWAN_Mainloop
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text25
  4491  0062E6                     __ptext25:
  4492                           	opt stack 0
  4493  0062E6                     _SwTimersExecute:
  4494                           	opt stack 12
  4495                           
  4496                           ;sw_timer.c: 262: uint8_t i;
  4497                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  4498                           
  4499                           ;incstack = 0
  4500  0062E6  9EF2               	bcf	intcon,7,c	;volatile
  4501                           
  4502                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  4503  0062E8  0E00               	movlw	0
  4504  0062EA  0100               	movlb	0	; () banked
  4505  0062EC  6FDE               	movwf	SwTimersExecute@i& (0+255),b
  4506  0062EE  D068               	goto	l319
  4507  0062F0                     
  4508                           ; BSR set to: 0
  4509                           ;sw_timer.c: 266: {
  4510                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  4511                           
  4512                           ; BSR set to: 0
  4513  0062F0  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4514  0062F2  0D08               	mullw	8
  4515  0062F4  0E04               	movlw	4
  4516  0062F6  26F3               	addwf	prodl,f,c
  4517  0062F8  0E00               	movlw	0
  4518  0062FA  22F4               	addwfc	prodh,f,c
  4519  0062FC  0E00               	movlw	low _swTimers
  4520  0062FE  24F3               	addwf	prodl,w,c
  4521  006300  6ED9               	movwf	fsr2l,c
  4522  006302  0E03               	movlw	high _swTimers
  4523  006304  20F4               	addwfc	prodh,w,c
  4524  006306  6EDA               	movwf	fsr2h,c
  4525  006308  04DE               	decf	postinc2,w,c
  4526  00630A  A4D8               	btfss	status,2,c
  4527  00630C  D057               	goto	l323
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;sw_timer.c: 270: {
  4531                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  4532  00630E  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4533  006310  0D08               	mullw	8
  4534  006312  0E00               	movlw	low _swTimers
  4535  006314  24F3               	addwf	prodl,w,c
  4536  006316  6ED9               	movwf	fsr2l,c
  4537  006318  0E03               	movlw	high _swTimers
  4538  00631A  20F4               	addwfc	prodh,w,c
  4539  00631C  6EDA               	movwf	fsr2h,c
  4540  00631E  50DE               	movf	postinc2,w,c
  4541  006320  10DE               	iorwf	postinc2,w,c
  4542  006322  10DE               	iorwf	postinc2,w,c
  4543  006324  10DE               	iorwf	postinc2,w,c
  4544  006326  A4D8               	btfss	status,2,c
  4545  006328  D049               	goto	l323
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;sw_timer.c: 272: {
  4549                           ;sw_timer.c: 273: swTimers[i].running = 0;
  4550  00632A  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4551  00632C  0D08               	mullw	8
  4552  00632E  0E04               	movlw	4
  4553  006330  26F3               	addwf	prodl,f,c
  4554  006332  0E00               	movlw	0
  4555  006334  22F4               	addwfc	prodh,f,c
  4556  006336  0E00               	movlw	low _swTimers
  4557  006338  24F3               	addwf	prodl,w,c
  4558  00633A  6ED9               	movwf	fsr2l,c
  4559  00633C  0E03               	movlw	high _swTimers
  4560  00633E  20F4               	addwfc	prodh,w,c
  4561  006340  6EDA               	movwf	fsr2h,c
  4562  006342  0E00               	movlw	0
  4563  006344  6EDF               	movwf	indf2,c
  4564                           
  4565                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  4566  006346  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4567  006348  0D08               	mullw	8
  4568  00634A  0E06               	movlw	6
  4569  00634C  26F3               	addwf	prodl,f,c
  4570  00634E  0E00               	movlw	0
  4571  006350  22F4               	addwfc	prodh,f,c
  4572  006352  0E00               	movlw	low _swTimers
  4573  006354  24F3               	addwf	prodl,w,c
  4574  006356  6ED9               	movwf	fsr2l,c
  4575  006358  0E03               	movlw	high _swTimers
  4576  00635A  20F4               	addwfc	prodh,w,c
  4577  00635C  6EDA               	movwf	fsr2h,c
  4578  00635E  50DE               	movf	postinc2,w,c
  4579  006360  10DE               	iorwf	postinc2,w,c
  4580  006362  B4D8               	btfsc	status,2,c
  4581  006364  D02B               	goto	l323
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;sw_timer.c: 275: {
  4585                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  4586  006366  8EF2               	bsf	intcon,7,c	;volatile
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  4590  006368  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4591  00636A  0D08               	mullw	8
  4592  00636C  0E05               	movlw	5
  4593  00636E  26F3               	addwf	prodl,f,c
  4594  006370  0E00               	movlw	0
  4595  006372  22F4               	addwfc	prodh,f,c
  4596  006374  0E00               	movlw	low _swTimers
  4597  006376  24F3               	addwf	prodl,w,c
  4598  006378  6ED9               	movwf	fsr2l,c
  4599  00637A  0E03               	movlw	high _swTimers
  4600  00637C  20F4               	addwfc	prodh,w,c
  4601  00637E  6EDA               	movwf	fsr2h,c
  4602  006380  50DF               	movf	indf2,w,c
  4603  006382  6EE6               	movwf	postinc1,c
  4604  006384  51DE               	movf	SwTimersExecute@i& (0+255),w,b
  4605  006386  0D08               	mullw	8
  4606  006388  0E06               	movlw	6
  4607  00638A  26F3               	addwf	prodl,f,c
  4608  00638C  0E00               	movlw	0
  4609  00638E  22F4               	addwfc	prodh,f,c
  4610  006390  0E00               	movlw	low _swTimers
  4611  006392  24F3               	addwf	prodl,w,c
  4612  006394  6ED9               	movwf	fsr2l,c
  4613  006396  0E03               	movlw	high _swTimers
  4614  006398  20F4               	addwfc	prodh,w,c
  4615  00639A  6EDA               	movwf	fsr2h,c
  4616  00639C  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
  4617  0063A0  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
  4618  0063A4  D801               	call	u21538
  4619  0063A6  D009               	goto	u21539
  4620  0063A8                     u21538:
  4621  0063A8  0005               	push	
  4622  0063AA  6EFA               	movwf	pclath,c
  4623  0063AC  51DA               	movf	??_SwTimersExecute& (0+255),w,b
  4624  0063AE  6EFD               	movwf	tosl,c
  4625  0063B0  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  4626  0063B2  6EFE               	movwf	tosh,c
  4627  0063B4  6AFF               	clrf	tosu,c
  4628  0063B6  50FA               	movf	pclath,w,c
  4629  0063B8  0012               	return		;indir
  4630  0063BA                     u21539:
  4631                           
  4632                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  4633  0063BA  9EF2               	bcf	intcon,7,c	;volatile
  4634  0063BC                     l323:
  4635  0063BC  0100               	movlb	0	; () banked
  4636  0063BE  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
  4637  0063C0                     l319:
  4638                           
  4639                           ; BSR set to: 0
  4640                           
  4641                           ; BSR set to: 0
  4642  0063C0  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
  4643  0063C2  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
  4644  0063C4  A0D8               	btfss	status,0,c
  4645  0063C6  D794               	goto	l320
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;sw_timer.c: 279: }
  4649                           ;sw_timer.c: 280: }
  4650                           ;sw_timer.c: 281: }
  4651                           ;sw_timer.c: 282: }
  4652                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  4653  0063C8  8EF2               	bsf	intcon,7,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656  0063CA  0012               	return		;funcret
  4657  0063CC                     __end_of_SwTimersExecute:
  4658                           	opt stack 0
  4659                           tosu	equ	0xFFF
  4660                           tosh	equ	0xFFE
  4661                           tosl	equ	0xFFD
  4662                           pclath	equ	0xFFA
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           intcon2	equ	0xFF1
  4671                           intcon3	equ	0xFF0
  4672                           postinc0	equ	0xFEE
  4673                           wreg	equ	0xFE8
  4674                           postinc1	equ	0xFE6
  4675                           indf2	equ	0xFDF
  4676                           postinc2	equ	0xFDE
  4677                           postdec2	equ	0xFDD
  4678                           fsr2h	equ	0xFDA
  4679                           fsr2l	equ	0xFD9
  4680                           status	equ	0xFD8
  4681                           
  4682 ;; *************** function _DutyCycleCallback *****************
  4683 ;; Defined at:
  4684 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  param           1  [STACK] unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  minim           4  [STACK] unsigned long 
  4689 ;;  i               1  [STACK] unsigned char 
  4690 ;;  found           1  [STACK] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1  [STACK] void 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 3F/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:   11
  4707 ;; This function calls:
  4708 ;;		_SwTimerSetTimeout
  4709 ;;		_SwTimerStart
  4710 ;;		___lldiv
  4711 ;; This function is called by:
  4712 ;;		_SetCallbackSoftwareTimers
  4713 ;;		_SwTimersExecute
  4714 ;; This function uses a reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text26
  4718  002C48                     __ptext26:
  4719                           	opt stack 0
  4720  002C48                     _DutyCycleCallback:
  4721                           	opt stack 0
  4722                           
  4723                           ; BSR set to: 0
  4724                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  4725  002C48  0E0A               	movlw	10
  4726  002C4A  26E1               	addwf	fsr1l,f,c
  4727  002C4C  0E00               	movlw	0
  4728  002C4E  22E2               	addwfc	fsr1h,f,c
  4729                           
  4730                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  4731                           
  4732                           ;incstack = 0
  4733  002C50  0EFF               	movlw	255
  4734  002C52  6E50               	movwf	btemp+8,c
  4735  002C54  0EFF               	movlw	255
  4736  002C56  6E51               	movwf	btemp+9,c
  4737  002C58  0EFF               	movlw	255
  4738  002C5A  6E52               	movwf	btemp+10,c
  4739  002C5C  0EFF               	movlw	255
  4740  002C5E  6E53               	movwf	btemp+11,c
  4741                           
  4742                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  4743  002C60  0EFA               	movlw	-6
  4744  002C62  C050  FFE3         	movff	btemp+8,plusw1
  4745  002C66  0EFB               	movlw	-5
  4746  002C68  C051  FFE3         	movff	btemp+9,plusw1
  4747  002C6C  0EFC               	movlw	-4
  4748  002C6E  C052  FFE3         	movff	btemp+10,plusw1
  4749  002C72  0EFD               	movlw	-3
  4750  002C74  C053  FFE3         	movff	btemp+11,plusw1
  4751                           
  4752                           ;lorawan_eu.c: 1224: bool found = 0;
  4753                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  4754  002C78  0EFF               	movlw	-1
  4755  002C7A  6AE3               	clrf	plusw1,c
  4756                           
  4757                           ;lorawan_eu.c: 1225: uint8_t i;
  4758                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  4759                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4760  002C7C  0EFE               	movlw	-2
  4761  002C7E  6AE3               	clrf	plusw1,c
  4762  002C80                     l15787:
  4763                           
  4764                           ;lorawan_eu.c: 1228: {
  4765                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  4766                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4767  002C80  0EFE               	movlw	-2
  4768  002C82  50E3               	movf	plusw1,w,c
  4769  002C84  0D0E               	mullw	14
  4770  002C86  0E04               	movlw	low (_Channels+4)
  4771  002C88  24F3               	addwf	prodl,w,c
  4772  002C8A  6ED9               	movwf	fsr2l,c
  4773  002C8C  0E04               	movlw	high (_Channels+4)
  4774  002C8E  20F4               	addwfc	prodh,w,c
  4775  002C90  6EDA               	movwf	fsr2h,c
  4776  002C92  04DE               	decf	postinc2,w,c
  4777  002C94  A4D8               	btfss	status,2,c
  4778  002C96  D0AD               	goto	l15805
  4779                           
  4780                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4781  002C98  0EFE               	movlw	-2
  4782  002C9A  50E3               	movf	plusw1,w,c
  4783  002C9C  0D0E               	mullw	14
  4784  002C9E  0E08               	movlw	low (_Channels+8)
  4785  002CA0  24F3               	addwf	prodl,w,c
  4786  002CA2  6ED9               	movwf	fsr2l,c
  4787  002CA4  0E04               	movlw	high (_Channels+8)
  4788  002CA6  20F4               	addwfc	prodh,w,c
  4789  002CA8  6EDA               	movwf	fsr2h,c
  4790  002CAA  50DE               	movf	postinc2,w,c
  4791  002CAC  10DE               	iorwf	postinc2,w,c
  4792  002CAE  10DE               	iorwf	postinc2,w,c
  4793  002CB0  10DE               	iorwf	postinc2,w,c
  4794  002CB2  B4D8               	btfsc	status,2,c
  4795  002CB4  D09E               	goto	l15805
  4796                           
  4797                           ;lorawan_eu.c: 1231: {
  4798                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  4799                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4800  002CB6  0EFE               	movlw	-2
  4801  002CB8  50E3               	movf	plusw1,w,c
  4802  002CBA  0D0E               	mullw	14
  4803  002CBC  0E08               	movlw	low (_Channels+8)
  4804  002CBE  24F3               	addwf	prodl,w,c
  4805  002CC0  6ED9               	movwf	fsr2l,c
  4806  002CC2  0E04               	movlw	high (_Channels+8)
  4807  002CC4  20F4               	addwfc	prodh,w,c
  4808  002CC6  6EDA               	movwf	fsr2h,c
  4809  002CC8  50DE               	movf	postinc2,w,c
  4810  002CCA  0102               	movlb	2	; () banked
  4811  002CCC  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  4812  002CCE  50DE               	movf	postinc2,w,c
  4813  002CD0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  4814  002CD2  50DE               	movf	postinc2,w,c
  4815  002CD4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  4816  002CD6  50DE               	movf	postinc2,w,c
  4817  002CD8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  4818  002CDA  B0D8               	btfsc	status,0,c
  4819  002CDC  D02F               	goto	l15795
  4820                           
  4821                           ; BSR set to: 2
  4822                           ;lorawan_eu.c: 1233: {
  4823                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  4824                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4825  002CDE  0EFE               	movlw	-2
  4826  002CE0  50E3               	movf	plusw1,w,c
  4827  002CE2  0D0E               	mullw	14
  4828  002CE4  0E08               	movlw	low (_Channels+8)
  4829  002CE6  24F3               	addwf	prodl,w,c
  4830  002CE8  6ED9               	movwf	fsr2l,c
  4831  002CEA  0E04               	movlw	high (_Channels+8)
  4832  002CEC  20F4               	addwfc	prodh,w,c
  4833  002CEE  6EDA               	movwf	fsr2h,c
  4834  002CF0  CFDE F050          	movff	postinc2,btemp+8
  4835  002CF4  CFDE F051          	movff	postinc2,btemp+9
  4836  002CF8  CFDE F052          	movff	postinc2,btemp+10
  4837  002CFC  CFDE F053          	movff	postinc2,btemp+11
  4838  002D00  51C8               	movf	(_loRa+200)& (0+255),w,b
  4839  002D02  5C50               	subwf	btemp+8,w,c
  4840  002D04  6E4C               	movwf	btemp+4,c
  4841  002D06  51C9               	movf	(_loRa+201)& (0+255),w,b
  4842  002D08  5851               	subwfb	btemp+9,w,c
  4843  002D0A  6E4D               	movwf	btemp+5,c
  4844  002D0C  51CA               	movf	(_loRa+202)& (0+255),w,b
  4845  002D0E  5852               	subwfb	btemp+10,w,c
  4846  002D10  6E4E               	movwf	btemp+6,c
  4847  002D12  51CB               	movf	(_loRa+203)& (0+255),w,b
  4848  002D14  5853               	subwfb	btemp+11,w,c
  4849  002D16  6E4F               	movwf	btemp+7,c
  4850                           
  4851                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4852  002D18  0EFE               	movlw	-2
  4853  002D1A  50E3               	movf	plusw1,w,c
  4854  002D1C  0D0E               	mullw	14
  4855  002D1E  0E08               	movlw	low (_Channels+8)
  4856  002D20  24F3               	addwf	prodl,w,c
  4857  002D22  6ED9               	movwf	fsr2l,c
  4858  002D24  0E04               	movlw	high (_Channels+8)
  4859  002D26  20F4               	addwfc	prodh,w,c
  4860  002D28  6EDA               	movwf	fsr2h,c
  4861  002D2A  C04C  FFDE         	movff	btemp+4,postinc2
  4862  002D2E  C04D  FFDE         	movff	btemp+5,postinc2
  4863  002D32  C04E  FFDE         	movff	btemp+6,postinc2
  4864  002D36  C04F  FFDE         	movff	btemp+7,postinc2
  4865                           
  4866                           ;lorawan_eu.c: 1235: }
  4867  002D3A  D00D               	goto	l15797
  4868  002D3C                     l15795:
  4869                           
  4870                           ; BSR set to: 2
  4871                           ;lorawan_eu.c: 1236: else
  4872                           ;lorawan_eu.c: 1237: {
  4873                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  4874                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4875  002D3C  0EFE               	movlw	-2
  4876  002D3E  50E3               	movf	plusw1,w,c
  4877  002D40  0D0E               	mullw	14
  4878  002D42  0E08               	movlw	low (_Channels+8)
  4879  002D44  24F3               	addwf	prodl,w,c
  4880  002D46  6ED9               	movwf	fsr2l,c
  4881  002D48  0E04               	movlw	high (_Channels+8)
  4882  002D4A  20F4               	addwfc	prodh,w,c
  4883  002D4C  6EDA               	movwf	fsr2h,c
  4884  002D4E  6ADE               	clrf	postinc2,c
  4885  002D50  6ADE               	clrf	postinc2,c
  4886  002D52  6ADE               	clrf	postinc2,c
  4887  002D54  6ADD               	clrf	postdec2,c
  4888  002D56                     l15797:
  4889                           
  4890                           ; BSR set to: 2
  4891                           ;lorawan_eu.c: 1239: }
  4892                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  4893                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4894  002D56  0EFE               	movlw	-2
  4895  002D58  50E3               	movf	plusw1,w,c
  4896  002D5A  0D0E               	mullw	14
  4897  002D5C  0E08               	movlw	low (_Channels+8)
  4898  002D5E  24F3               	addwf	prodl,w,c
  4899  002D60  6ED9               	movwf	fsr2l,c
  4900  002D62  0E04               	movlw	high (_Channels+8)
  4901  002D64  20F4               	addwfc	prodh,w,c
  4902  002D66  6EDA               	movwf	fsr2h,c
  4903                           
  4904                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  4905  002D68  0EFA               	movlw	-6
  4906  002D6A  CFE3 F048          	movff	plusw1,btemp
  4907  002D6E  50DE               	movf	postinc2,w,c
  4908  002D70  5C48               	subwf	btemp,w,c
  4909  002D72  0EFB               	movlw	-5
  4910  002D74  CFE3 F048          	movff	plusw1,btemp
  4911  002D78  50DE               	movf	postinc2,w,c
  4912  002D7A  5848               	subwfb	btemp,w,c
  4913  002D7C  0EFC               	movlw	-4
  4914  002D7E  CFE3 F048          	movff	plusw1,btemp
  4915  002D82  50DE               	movf	postinc2,w,c
  4916  002D84  5848               	subwfb	btemp,w,c
  4917  002D86  0EFD               	movlw	-3
  4918  002D88  CFE3 F048          	movff	plusw1,btemp
  4919  002D8C  50DE               	movf	postinc2,w,c
  4920  002D8E  5848               	subwfb	btemp,w,c
  4921  002D90  A0D8               	btfss	status,0,c
  4922  002D92  D02F               	goto	l15805
  4923                           
  4924                           ; BSR set to: 2
  4925                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4926  002D94  0EFE               	movlw	-2
  4927  002D96  50E3               	movf	plusw1,w,c
  4928  002D98  0D0E               	mullw	14
  4929  002D9A  0E08               	movlw	low (_Channels+8)
  4930  002D9C  24F3               	addwf	prodl,w,c
  4931  002D9E  6ED9               	movwf	fsr2l,c
  4932  002DA0  0E04               	movlw	high (_Channels+8)
  4933  002DA2  20F4               	addwfc	prodh,w,c
  4934  002DA4  6EDA               	movwf	fsr2h,c
  4935  002DA6  50DE               	movf	postinc2,w,c
  4936  002DA8  10DE               	iorwf	postinc2,w,c
  4937  002DAA  10DE               	iorwf	postinc2,w,c
  4938  002DAC  10DE               	iorwf	postinc2,w,c
  4939  002DAE  B4D8               	btfsc	status,2,c
  4940  002DB0  D020               	goto	l15805
  4941                           
  4942                           ; BSR set to: 2
  4943                           ;lorawan_eu.c: 1241: {
  4944                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  4945                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4946  002DB2  0EFE               	movlw	-2
  4947  002DB4  50E3               	movf	plusw1,w,c
  4948  002DB6  0D0E               	mullw	14
  4949  002DB8  0E08               	movlw	low (_Channels+8)
  4950  002DBA  24F3               	addwf	prodl,w,c
  4951  002DBC  6ED9               	movwf	fsr2l,c
  4952  002DBE  0E04               	movlw	high (_Channels+8)
  4953  002DC0  20F4               	addwfc	prodh,w,c
  4954  002DC2  6EDA               	movwf	fsr2h,c
  4955  002DC4  CFDE F050          	movff	postinc2,btemp+8
  4956  002DC8  CFDE F051          	movff	postinc2,btemp+9
  4957  002DCC  CFDE F052          	movff	postinc2,btemp+10
  4958  002DD0  CFDE F053          	movff	postinc2,btemp+11
  4959                           
  4960                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  4961  002DD4  0EFA               	movlw	-6
  4962  002DD6  C050  FFE3         	movff	btemp+8,plusw1
  4963  002DDA  0EFB               	movlw	-5
  4964  002DDC  C051  FFE3         	movff	btemp+9,plusw1
  4965  002DE0  0EFC               	movlw	-4
  4966  002DE2  C052  FFE3         	movff	btemp+10,plusw1
  4967  002DE6  0EFD               	movlw	-3
  4968  002DE8  C053  FFE3         	movff	btemp+11,plusw1
  4969                           
  4970                           ; BSR set to: 2
  4971                           ;lorawan_eu.c: 1243: found = 1;
  4972                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  4973  002DEC  0EFF               	movlw	-1
  4974  002DEE  6AE3               	clrf	plusw1,c
  4975  002DF0  2AE3               	incf	plusw1,f,c
  4976  002DF2                     l15805:
  4977                           
  4978                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4979  002DF2  0EFE               	movlw	-2
  4980  002DF4  2AE3               	incf	plusw1,f,c
  4981                           
  4982                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  4983  002DF6  0EFE               	movlw	-2
  4984  002DF8  CFE3 F048          	movff	plusw1,btemp
  4985  002DFC  0E0F               	movlw	15
  4986  002DFE  6448               	cpfsgt	btemp,c
  4987  002E00  D73F               	goto	l15787
  4988                           
  4989                           ;lorawan_eu.c: 1244: }
  4990                           ;lorawan_eu.c: 1245: }
  4991                           ;lorawan_eu.c: 1246: }
  4992                           ;lorawan_eu.c: 1247: if ( found == 1 )
  4993                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  4994  002E02  0EFF               	movlw	-1
  4995  002E04  04E3               	decf	plusw1,w,c
  4996  002E06  A4D8               	btfss	status,2,c
  4997  002E08  D09D               	goto	l1351
  4998                           
  4999                           ;lorawan_eu.c: 1248: {
  5000                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5001                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5002  002E0A  50E1               	movf	fsr1l,w,c
  5003  002E0C  0FFA               	addlw	-6
  5004  002E0E  6ED9               	movwf	fsr2l,c
  5005  002E10  50E2               	movf	fsr1h,w,c
  5006  002E12  6EDA               	movwf	fsr2h,c
  5007  002E14  0EFF               	movlw	255
  5008  002E16  22DA               	addwfc	fsr2h,f,c
  5009  002E18  CFDE F2C8          	movff	postinc2,_loRa+200
  5010  002E1C  CFDE F2C9          	movff	postinc2,_loRa+201
  5011  002E20  CFDE F2CA          	movff	postinc2,_loRa+202
  5012  002E24  CFDE F2CB          	movff	postinc2,_loRa+203
  5013                           
  5014                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5015                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5016  002E28  0EFD               	movlw	-3
  5017  002E2A  50E3               	movf	plusw1,w,c
  5018  002E2C  E10E               	bnz	u19470
  5019  002E2E  0EFA               	movlw	-6
  5020  002E30  28E3               	incf	plusw1,w,c
  5021  002E32  0EFB               	movlw	-5
  5022  002E34  CFE3 F048          	movff	plusw1,btemp
  5023  002E38  0EFF               	movlw	255
  5024  002E3A  5A48               	subwfb	btemp,f,c
  5025  002E3C  0EFC               	movlw	-4
  5026  002E3E  CFE3 F048          	movff	plusw1,btemp
  5027  002E42  0E0F               	movlw	15
  5028  002E44  5A48               	subwfb	btemp,f,c
  5029  002E46  A0D8               	btfss	status,0,c
  5030  002E48  D02B               	goto	l15817
  5031  002E4A                     u19470:
  5032                           
  5033                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5034  002E4A  50E1               	movf	fsr1l,w,c
  5035  002E4C  0FFA               	addlw	-6
  5036  002E4E  6ED9               	movwf	fsr2l,c
  5037  002E50  50E2               	movf	fsr1h,w,c
  5038  002E52  6EDA               	movwf	fsr2h,c
  5039  002E54  0EFF               	movlw	255
  5040  002E56  22DA               	addwfc	fsr2h,f,c
  5041  002E58  CFDE F060          	movff	postinc2,___lldiv@dividend
  5042  002E5C  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  5043  002E60  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  5044  002E64  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  5045  002E68  0E7D               	movlw	125
  5046  002E6A  0100               	movlb	0	; () banked
  5047  002E6C  6F64               	movwf	___lldiv@divisor& (0+255),b
  5048  002E6E  0E00               	movlw	0
  5049  002E70  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5050  002E72  0E00               	movlw	0
  5051  002E74  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5052  002E76  0E00               	movlw	0
  5053  002E78  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5054  002E7A  EC8F  F039         	call	___lldiv	;wreg free
  5055  002E7E  C060  F050         	movff	?___lldiv,btemp+8
  5056  002E82  C061  F051         	movff	?___lldiv+1,btemp+9
  5057  002E86  C062  F052         	movff	?___lldiv+2,btemp+10
  5058  002E8A  C063  F053         	movff	?___lldiv+3,btemp+11
  5059  002E8E  0E0C               	movlw	12
  5060  002E90                     u19485:
  5061  002E90  90D8               	bcf	status,0,c
  5062  002E92  3650               	rlcf	btemp+8,f,c
  5063  002E94  3651               	rlcf	btemp+9,f,c
  5064  002E96  3652               	rlcf	btemp+10,f,c
  5065  002E98  3653               	rlcf	btemp+11,f,c
  5066  002E9A  2EE8               	decfsz	wreg,f,c
  5067  002E9C  D7F9               	goto	u19485
  5068  002E9E  D02F               	goto	L1
  5069  002EA0                     l15817:
  5070                           
  5071                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5072  002EA0  0EFA               	movlw	-6
  5073  002EA2  CFE3 F050          	movff	plusw1,btemp+8
  5074  002EA6  0EFB               	movlw	-5
  5075  002EA8  CFE3 F051          	movff	plusw1,btemp+9
  5076  002EAC  0EFC               	movlw	-4
  5077  002EAE  CFE3 F052          	movff	plusw1,btemp+10
  5078  002EB2  0EFD               	movlw	-3
  5079  002EB4  CFE3 F053          	movff	plusw1,btemp+11
  5080  002EB8  0E0C               	movlw	12
  5081  002EBA                     u19495:
  5082  002EBA  90D8               	bcf	status,0,c
  5083  002EBC  3650               	rlcf	btemp+8,f,c
  5084  002EBE  3651               	rlcf	btemp+9,f,c
  5085  002EC0  3652               	rlcf	btemp+10,f,c
  5086  002EC2  3653               	rlcf	btemp+11,f,c
  5087  002EC4  2EE8               	decfsz	wreg,f,c
  5088  002EC6  D7F9               	goto	u19495
  5089  002EC8  C050  F060         	movff	btemp+8,___lldiv@dividend
  5090  002ECC  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5091  002ED0  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5092  002ED4  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5093  002ED8  0E7D               	movlw	125
  5094  002EDA  0100               	movlb	0	; () banked
  5095  002EDC  6F64               	movwf	___lldiv@divisor& (0+255),b
  5096  002EDE  0E00               	movlw	0
  5097  002EE0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5098  002EE2  0E00               	movlw	0
  5099  002EE4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5100  002EE6  0E00               	movlw	0
  5101  002EE8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5102  002EEA  EC8F  F039         	call	___lldiv	;wreg free
  5103  002EEE  C060  F050         	movff	?___lldiv,btemp+8
  5104  002EF2  C061  F051         	movff	?___lldiv+1,btemp+9
  5105  002EF6  C062  F052         	movff	?___lldiv+2,btemp+10
  5106  002EFA  C063  F053         	movff	?___lldiv+3,btemp+11
  5107  002EFE                     L1:
  5108                           
  5109                           ;stkvar	_DutyCycleCallback$2157 @ sp[(-10)+0]
  5110  002EFE  0EF6               	movlw	-10
  5111  002F00  C050  FFE3         	movff	btemp+8,plusw1
  5112  002F04  0EF7               	movlw	-9
  5113  002F06  C051  FFE3         	movff	btemp+9,plusw1
  5114  002F0A  0EF8               	movlw	-8
  5115  002F0C  C052  FFE3         	movff	btemp+10,plusw1
  5116  002F10  0EF9               	movlw	-7
  5117  002F12  C053  FFE3         	movff	btemp+11,plusw1
  5118                           
  5119                           ;stkvar	_DutyCycleCallback$2157 @ sp[(-10)+0]
  5120  002F16  50E1               	movf	fsr1l,w,c
  5121  002F18  0FF6               	addlw	-10
  5122  002F1A  6ED9               	movwf	fsr2l,c
  5123  002F1C  50E2               	movf	fsr1h,w,c
  5124  002F1E  6EDA               	movwf	fsr2h,c
  5125  002F20  0EFF               	movlw	255
  5126  002F22  22DA               	addwfc	fsr2h,f,c
  5127  002F24  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5128  002F28  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5129  002F2C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5130  002F30  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5131  002F34  0102               	movlb	2	; () banked
  5132  002F36  51E9               	movf	(_loRa+233)& (0+255),w,b
  5133  002F38  ECDB  F040         	call	_SwTimerSetTimeout
  5134                           
  5135                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  5136  002F3C  0102               	movlb	2	; () banked
  5137  002F3E  51E9               	movf	(_loRa+233)& (0+255),w,b
  5138  002F40  ECD1  F036         	call	_SwTimerStart
  5139  002F44                     l1351:
  5140                           
  5141                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5142  002F44  0EF5               	movlw	245
  5143  002F46  26E1               	addwf	fsr1l,f,c
  5144  002F48  0EFF               	movlw	255
  5145  002F4A  22E2               	addwfc	fsr1h,f,c
  5146  002F4C  0012               	return		;funcret
  5147  002F4E                     __end_of_DutyCycleCallback:
  5148                           	opt stack 0
  5149                           tosu	equ	0xFFF
  5150                           tosh	equ	0xFFE
  5151                           tosl	equ	0xFFD
  5152                           pclath	equ	0xFFA
  5153                           tblptru	equ	0xFF8
  5154                           tblptrh	equ	0xFF7
  5155                           tblptrl	equ	0xFF6
  5156                           tablat	equ	0xFF5
  5157                           prodh	equ	0xFF4
  5158                           prodl	equ	0xFF3
  5159                           intcon	equ	0xFF2
  5160                           intcon2	equ	0xFF1
  5161                           intcon3	equ	0xFF0
  5162                           postinc0	equ	0xFEE
  5163                           wreg	equ	0xFE8
  5164                           postinc1	equ	0xFE6
  5165                           plusw1	equ	0xFE3
  5166                           fsr1h	equ	0xFE2
  5167                           fsr1l	equ	0xFE1
  5168                           indf2	equ	0xFDF
  5169                           postinc2	equ	0xFDE
  5170                           postdec2	equ	0xFDD
  5171                           fsr2h	equ	0xFDA
  5172                           fsr2l	equ	0xFD9
  5173                           status	equ	0xFD8
  5174                           
  5175 ;; *************** function _UpdateJoinSuccessState *****************
  5176 ;; Defined at:
  5177 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  param           1  [STACK] unsigned char 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1  [STACK] void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;Total ram usage:        0 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   11
  5198 ;; This function calls:
  5199 ;;		_RxJoinResponse
  5200 ;;		_SwTimerSetTimeout
  5201 ;;		_SwTimerStart
  5202 ;;		___lldiv
  5203 ;; This function is called by:
  5204 ;;		_SetCallbackSoftwareTimers
  5205 ;;		_LORAWAN_RxDone
  5206 ;;		_SwTimersExecute
  5207 ;; This function uses a reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text27
  5211  00563E                     __ptext27:
  5212                           	opt stack 0
  5213  00563E                     _UpdateJoinSuccessState:
  5214                           	opt stack 0
  5215                           
  5216                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5217  00563E  52E6               	movf	postinc1,f,c
  5218  005640  52E6               	movf	postinc1,f,c
  5219  005642  52E6               	movf	postinc1,f,c
  5220  005644  52E6               	movf	postinc1,f,c
  5221                           
  5222                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  5223                           
  5224                           ;incstack = 0
  5225  005646  0102               	movlb	2	; () banked
  5226  005648  9500               	bcf	_loRa& (0+255),2,b
  5227                           
  5228                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  5229  00564A  8902               	bsf	(_loRa+2)& (0+255),4,b
  5230                           
  5231                           ; BSR set to: 2
  5232                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  5233  00564C  0EF0               	movlw	-16
  5234  00564E  1702               	andwf	(_loRa+2)& (0+255),f,b
  5235                           
  5236                           ; BSR set to: 2
  5237                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  5238  005650  6BD0               	clrf	(_loRa+208)& (0+255),b
  5239  005652  6BD1               	clrf	(_loRa+209)& (0+255),b
  5240                           
  5241                           ; BSR set to: 2
  5242                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  5243  005654  6BEE               	clrf	(_loRa+238)& (0+255),b
  5244                           
  5245                           ; BSR set to: 2
  5246                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  5247  005656  A503               	btfss	(_loRa+3)& (0+255),2,b
  5248  005658  D07B               	goto	l14705
  5249                           
  5250                           ; BSR set to: 2
  5251                           ;lorawan.c: 1052: {
  5252                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5253  00565A  51CF               	movf	(_loRa+207)& (0+255),w,b
  5254  00565C  E107               	bnz	u17420
  5255  00565E  29CC               	incf	(_loRa+204)& (0+255),w,b
  5256  005660  0EFF               	movlw	255
  5257  005662  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  5258  005664  0E0F               	movlw	15
  5259  005666  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  5260  005668  A0D8               	btfss	status,0,c
  5261  00566A  D024               	goto	l14699
  5262  00566C                     u17420:
  5263                           
  5264                           ; BSR set to: 2
  5265  00566C  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  5266  005670  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  5267  005674  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  5268  005678  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  5269  00567C  0E7D               	movlw	125
  5270  00567E  0100               	movlb	0	; () banked
  5271  005680  6F64               	movwf	___lldiv@divisor& (0+255),b
  5272  005682  0E00               	movlw	0
  5273  005684  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5274  005686  0E00               	movlw	0
  5275  005688  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5276  00568A  0E00               	movlw	0
  5277  00568C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5278  00568E  EC8F  F039         	call	___lldiv	;wreg free
  5279  005692  C060  F050         	movff	?___lldiv,btemp+8
  5280  005696  C061  F051         	movff	?___lldiv+1,btemp+9
  5281  00569A  C062  F052         	movff	?___lldiv+2,btemp+10
  5282  00569E  C063  F053         	movff	?___lldiv+3,btemp+11
  5283  0056A2  0E0C               	movlw	12
  5284  0056A4                     u17435:
  5285  0056A4  90D8               	bcf	status,0,c
  5286  0056A6  3650               	rlcf	btemp+8,f,c
  5287  0056A8  3651               	rlcf	btemp+9,f,c
  5288  0056AA  3652               	rlcf	btemp+10,f,c
  5289  0056AC  3653               	rlcf	btemp+11,f,c
  5290  0056AE  2EE8               	decfsz	wreg,f,c
  5291  0056B0  D7F9               	goto	u17435
  5292  0056B2  D02B               	goto	L2
  5293  0056B4                     l14699:
  5294                           
  5295                           ; BSR set to: 2
  5296  0056B4  C2CC  F050         	movff	_loRa+204,btemp+8
  5297  0056B8  C2CD  F051         	movff	_loRa+205,btemp+9
  5298  0056BC  C2CE  F052         	movff	_loRa+206,btemp+10
  5299  0056C0  C2CF  F053         	movff	_loRa+207,btemp+11
  5300  0056C4  0E0C               	movlw	12
  5301  0056C6                     u17445:
  5302  0056C6  90D8               	bcf	status,0,c
  5303  0056C8  3650               	rlcf	btemp+8,f,c
  5304  0056CA  3651               	rlcf	btemp+9,f,c
  5305  0056CC  3652               	rlcf	btemp+10,f,c
  5306  0056CE  3653               	rlcf	btemp+11,f,c
  5307  0056D0  2EE8               	decfsz	wreg,f,c
  5308  0056D2  D7F9               	goto	u17445
  5309  0056D4  C050  F060         	movff	btemp+8,___lldiv@dividend
  5310  0056D8  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  5311  0056DC  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  5312  0056E0  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  5313  0056E4  0E7D               	movlw	125
  5314  0056E6  0100               	movlb	0	; () banked
  5315  0056E8  6F64               	movwf	___lldiv@divisor& (0+255),b
  5316  0056EA  0E00               	movlw	0
  5317  0056EC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5318  0056EE  0E00               	movlw	0
  5319  0056F0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5320  0056F2  0E00               	movlw	0
  5321  0056F4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5322  0056F6  EC8F  F039         	call	___lldiv	;wreg free
  5323  0056FA  C060  F050         	movff	?___lldiv,btemp+8
  5324  0056FE  C061  F051         	movff	?___lldiv+1,btemp+9
  5325  005702  C062  F052         	movff	?___lldiv+2,btemp+10
  5326  005706  C063  F053         	movff	?___lldiv+3,btemp+11
  5327  00570A                     L2:
  5328                           
  5329                           ;stkvar	_UpdateJoinSuccessState$3490 @ sp[(-4)+0]
  5330  00570A  0EFC               	movlw	-4
  5331  00570C  C050  FFE3         	movff	btemp+8,plusw1
  5332  005710  0EFD               	movlw	-3
  5333  005712  C051  FFE3         	movff	btemp+9,plusw1
  5334  005716  0EFE               	movlw	-2
  5335  005718  C052  FFE3         	movff	btemp+10,plusw1
  5336  00571C  0EFF               	movlw	-1
  5337  00571E  C053  FFE3         	movff	btemp+11,plusw1
  5338                           
  5339                           ;stkvar	_UpdateJoinSuccessState$3490 @ sp[(-4)+0]
  5340  005722  50E1               	movf	fsr1l,w,c
  5341  005724  0FFC               	addlw	-4
  5342  005726  6ED9               	movwf	fsr2l,c
  5343  005728  50E2               	movf	fsr1h,w,c
  5344  00572A  6EDA               	movwf	fsr2h,c
  5345  00572C  0EFF               	movlw	255
  5346  00572E  22DA               	addwfc	fsr2h,f,c
  5347  005730  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  5348  005734  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  5349  005738  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  5350  00573C  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  5351  005740  0102               	movlb	2	; () banked
  5352  005742  51E7               	movf	(_loRa+231)& (0+255),w,b
  5353  005744  ECDB  F040         	call	_SwTimerSetTimeout
  5354                           
  5355                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  5356  005748  0102               	movlb	2	; () banked
  5357  00574A  51E7               	movf	(_loRa+231)& (0+255),w,b
  5358  00574C  ECD1  F036         	call	_SwTimerStart
  5359  005750                     l14705:
  5360                           
  5361                           ;lorawan.c: 1055: }
  5362                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  5363  005750  0101               	movlb	1	; () banked
  5364  005752  516B               	movf	(_rxPayload+2)& (0+255),w,b
  5365  005754  116C               	iorwf	(_rxPayload+3)& (0+255),w,b
  5366  005756  B4D8               	btfsc	status,2,c
  5367  005758  D00C               	goto	u17469
  5368                           
  5369                           ; BSR set to: 1
  5370                           ;lorawan.c: 1058: {
  5371                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  5372  00575A  D801               	call	u17468
  5373  00575C  D00A               	goto	u17469
  5374  00575E                     u17468:
  5375  00575E  0005               	push	
  5376  005760  6EFA               	movwf	pclath,c
  5377  005762  516B               	movf	(_rxPayload+2)& (0+255),w,b
  5378  005764  6EFD               	movwf	tosl,c
  5379  005766  516C               	movf	(_rxPayload+3)& (0+255),w,b
  5380  005768  6EFE               	movwf	tosh,c
  5381  00576A  6AFF               	clrf	tosu,c
  5382  00576C  50FA               	movf	pclath,w,c
  5383  00576E  0E01               	movlw	1
  5384  005770  0012               	return		;indir
  5385  005772                     u17469:
  5386                           
  5387                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5388  005772  0EFB               	movlw	251
  5389  005774  26E1               	addwf	fsr1l,f,c
  5390  005776  0EFF               	movlw	255
  5391  005778  22E2               	addwfc	fsr1h,f,c
  5392  00577A  0012               	return		;funcret
  5393  00577C                     __end_of_UpdateJoinSuccessState:
  5394                           	opt stack 0
  5395                           tosu	equ	0xFFF
  5396                           tosh	equ	0xFFE
  5397                           tosl	equ	0xFFD
  5398                           pclath	equ	0xFFA
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           intcon2	equ	0xFF1
  5407                           intcon3	equ	0xFF0
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           postinc1	equ	0xFE6
  5411                           plusw1	equ	0xFE3
  5412                           fsr1h	equ	0xFE2
  5413                           fsr1l	equ	0xFE1
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _AutomaticReplyCallback *****************
  5422 ;; Defined at:
  5423 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  param           1  [STACK] unsigned char 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1  [STACK] void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 3F/0
  5434 ;;		On exit  : 3F/2
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:   14
  5444 ;; This function calls:
  5445 ;;		_LORAWAN_Send
  5446 ;; This function is called by:
  5447 ;;		_SetCallbackSoftwareTimers
  5448 ;;		_SwTimersExecute
  5449 ;; This function uses a reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text28
  5453  008754                     __ptext28:
  5454                           	opt stack 0
  5455  008754                     _AutomaticReplyCallback:
  5456                           	opt stack 14
  5457                           
  5458                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  5459                           
  5460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5461                           ;incstack = 0
  5462  008754  0EF0               	movlw	-16
  5463  008756  0102               	movlb	2	; () banked
  5464  008758  1702               	andwf	(_loRa+2)& (0+255),f,b
  5465                           
  5466                           ; BSR set to: 2
  5467                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  5468  00875A  0E00               	movlw	0
  5469  00875C  0100               	movlb	0	; () banked
  5470  00875E  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  5471  008760  0E00               	movlw	0
  5472  008762  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  5473  008764  0E00               	movlw	0
  5474  008766  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  5475  008768  0E00               	movlw	0
  5476  00876A  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  5477  00876C  0E00               	movlw	0
  5478  00876E  ECA2  F033         	call	_LORAWAN_Send
  5479                           
  5480                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  5481  008772  0102               	movlb	2	; () banked
  5482  008774  9700               	bcf	_loRa& (0+255),3,b
  5483                           
  5484                           ; BSR set to: 2
  5485                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  5486  008776  52E5               	movf	postdec1,f,c
  5487  008778  0012               	return		;funcret
  5488  00877A                     __end_of_AutomaticReplyCallback:
  5489                           	opt stack 0
  5490                           tosu	equ	0xFFF
  5491                           tosh	equ	0xFFE
  5492                           tosl	equ	0xFFD
  5493                           pclath	equ	0xFFA
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           intcon	equ	0xFF2
  5501                           intcon2	equ	0xFF1
  5502                           intcon3	equ	0xFF0
  5503                           postinc0	equ	0xFEE
  5504                           wreg	equ	0xFE8
  5505                           postinc1	equ	0xFE6
  5506                           postdec1	equ	0xFE5
  5507                           plusw1	equ	0xFE3
  5508                           fsr1h	equ	0xFE2
  5509                           fsr1l	equ	0xFE1
  5510                           indf2	equ	0xFDF
  5511                           postinc2	equ	0xFDE
  5512                           postdec2	equ	0xFDD
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function _AckRetransmissionCallback *****************
  5518 ;; Defined at:
  5519 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  param           1  [STACK] unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  maximumPacke    1  [STACK] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1  [STACK] void 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 3F/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:   13
  5540 ;; This function calls:
  5541 ;;		_FindSmallestDataRate
  5542 ;;		_LORAWAN_GetMaxPayloadSize
  5543 ;;		_RADIO_Transmit
  5544 ;;		_ResetParametersForConfirmedTransmission
  5545 ;;		_RxData
  5546 ;;		_SelectChannelForTransmission
  5547 ;;		_UpdateRetransmissionAckTimeoutState
  5548 ;; This function is called by:
  5549 ;;		_SetCallbackSoftwareTimers
  5550 ;;		_SwTimersExecute
  5551 ;; This function uses a reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text29
  5555  005AFA                     __ptext29:
  5556                           	opt stack 0
  5557  005AFA                     _AckRetransmissionCallback:
  5558                           	opt stack 0
  5559                           
  5560                           ; BSR set to: 2
  5561                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5562  005AFA  52E6               	movf	postinc1,f,c
  5563                           
  5564                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  5565                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  5566                           
  5567                           ;incstack = 0
  5568  005AFC  0102               	movlb	2	; () banked
  5569  005AFE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5570  005B00  D086               	goto	l15923
  5571                           
  5572                           ; BSR set to: 2
  5573                           ;lorawan.c: 939: {
  5574                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  5575  005B02  51D9               	movf	(_loRa+217)& (0+255),w,b
  5576  005B04  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  5577  005B06  A0D8               	btfss	status,0,c
  5578  005B08  D061               	goto	l15913
  5579                           
  5580                           ; BSR set to: 2
  5581                           ;lorawan.c: 941: {
  5582                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  5583  005B0A  EC07  F03D         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  5584  005B0E  6E53               	movwf	btemp+11,c
  5585  005B10  0E0D               	movlw	13
  5586  005B12  2653               	addwf	btemp+11,f,c
  5587                           
  5588                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5589  005B14  0EFF               	movlw	-1
  5590  005B16  C053  FFE3         	movff	btemp+11,plusw1
  5591                           
  5592                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  5593                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  5594  005B1A  0EFF               	movlw	-1
  5595  005B1C  50E3               	movf	plusw1,w,c
  5596  005B1E  6E49               	movwf	btemp+1,c
  5597  005B20  6A4A               	clrf	btemp+2,c
  5598  005B22  0102               	movlb	2	; () banked
  5599  005B24  51D4               	movf	(_loRa+212)& (0+255),w,b
  5600  005B26  5C49               	subwf	btemp+1,w,c
  5601  005B28  51D5               	movf	(_loRa+213)& (0+255),w,b
  5602  005B2A  584A               	subwfb	btemp+2,w,c
  5603  005B2C  A0D8               	btfss	status,0,c
  5604  005B2E  D039               	goto	l15907
  5605                           
  5606                           ; BSR set to: 2
  5607                           ;lorawan.c: 946: {
  5608                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  5609  005B30  0E01               	movlw	1
  5610  005B32  EC3B  F03B         	call	_SelectChannelForTransmission
  5611  005B36  0900               	iorlw	0
  5612  005B38  A4D8               	btfss	status,2,c
  5613  005B3A  D030               	goto	l15903
  5614                           
  5615                           ;lorawan.c: 948: {
  5616                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  5617  005B3C  0EF0               	movlw	low (_macBuffer+16)
  5618  005B3E  0100               	movlb	0	; () banked
  5619  005B40  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  5620  005B42  0E04               	movlw	high (_macBuffer+16)
  5621  005B44  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  5622  005B46  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  5623  005B4A  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  5624  005B4E  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  5625  005B52  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  5626  005B56  5049               	movf	btemp+1,w,c
  5627  005B58  104A               	iorwf	btemp+2,w,c
  5628  005B5A  A4D8               	btfss	status,2,c
  5629  005B5C  D01F               	goto	l15903
  5630                           
  5631                           ;lorawan.c: 951: {
  5632                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  5633  005B5E  0102               	movlb	2	; () banked
  5634  005B60  5102               	movf	(_loRa+2)& (0+255),w,b
  5635  005B62  0BF0               	andlw	-16
  5636  005B64  0901               	iorlw	1
  5637  005B66  6F02               	movwf	(_loRa+2)& (0+255),b
  5638                           
  5639                           ; BSR set to: 2
  5640                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  5641  005B68  2BD9               	incf	(_loRa+217)& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 2
  5644                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  5645  005B6A  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  5646  005B6C  D052               	goto	l2129
  5647                           
  5648                           ; BSR set to: 2
  5649  005B6E  51DF               	movf	(_loRa+223)& (0+255),w,b
  5650  005B70  B4D8               	btfsc	status,2,c
  5651  005B72  D04F               	goto	l2129
  5652                           
  5653                           ; BSR set to: 2
  5654  005B74  51D9               	movf	(_loRa+217)& (0+255),w,b
  5655  005B76  6E49               	movwf	btemp+1,c
  5656  005B78  6A4A               	clrf	btemp+2,c
  5657  005B7A  51D7               	movf	(_loRa+215)& (0+255),w,b
  5658  005B7C  6E52               	movwf	btemp+10,c
  5659  005B7E  6A53               	clrf	btemp+11,c
  5660  005B80  0E01               	movlw	1
  5661  005B82  2652               	addwf	btemp+10,f,c
  5662  005B84  0E00               	movlw	0
  5663  005B86  2253               	addwfc	btemp+11,f,c
  5664  005B88  5049               	movf	btemp+1,w,c
  5665  005B8A  1852               	xorwf	btemp+10,w,c
  5666  005B8C  E104               	bnz	u19700
  5667  005B8E  504A               	movf	btemp+2,w,c
  5668  005B90  1853               	xorwf	btemp+11,w,c
  5669  005B92  B4D8               	btfsc	status,2,c
  5670  005B94  D03E               	goto	l2129
  5671  005B96                     u19700:
  5672                           
  5673                           ; BSR set to: 2
  5674                           ;lorawan.c: 957: {
  5675                           ;lorawan.c: 958: FindSmallestDataRate();
  5676  005B96  EC58  F032         	call	_FindSmallestDataRate	;wreg free
  5677  005B9A  D03B               	goto	l2129
  5678  005B9C                     l15903:
  5679                           
  5680                           ;lorawan.c: 961: else
  5681                           ;lorawan.c: 962: {
  5682                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  5683  005B9C  ECCC  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  5684  005BA0  D038               	goto	l2129
  5685  005BA2                     l15907:
  5686                           
  5687                           ; BSR set to: 2
  5688                           ;lorawan.c: 973: else
  5689                           ;lorawan.c: 974: {
  5690                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  5691  005BA2  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5692                           
  5693                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  5694  005BA6  0101               	movlb	1	; () banked
  5695  005BA8  5169               	movf	_rxPayload& (0+255),w,b
  5696  005BAA  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  5697  005BAC  B4D8               	btfsc	status,2,c
  5698  005BAE  D031               	goto	l2129
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;lorawan.c: 977: {
  5702                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  5703  005BB0  0E00               	movlw	0
  5704  005BB2  0100               	movlb	0	; () banked
  5705  005BB4  6F60               	movwf	RxData@pData& (0+255),b
  5706  005BB6  0E00               	movlw	0
  5707  005BB8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  5708  005BBA  0E00               	movlw	0
  5709  005BBC  6F62               	movwf	RxData@dataLength& (0+255),b
  5710  005BBE  0E04               	movlw	4
  5711  005BC0  6F63               	movwf	RxData@status& (0+255),b
  5712  005BC2  D801               	call	u19728
  5713  005BC4  D026               	goto	l2129
  5714  005BC6                     u19728:
  5715  005BC6  0005               	push	
  5716  005BC8  6EFA               	movwf	pclath,c
  5717  005BCA  D019               	goto	L3
  5718  005BCC                     l15913:
  5719                           
  5720                           ; BSR set to: 2
  5721                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  5722  005BCC  51D9               	movf	(_loRa+217)& (0+255),w,b
  5723  005BCE  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  5724  005BD0  A0D8               	btfss	status,0,c
  5725                           
  5726                           ; BSR set to: 2
  5727  005BD2  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5728  005BD4  D01E               	goto	l2129
  5729                           
  5730                           ; BSR set to: 2
  5731                           ;lorawan.c: 983: {
  5732                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  5733  005BD6  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5734                           
  5735                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  5736  005BDA  0101               	movlb	1	; () banked
  5737  005BDC  5169               	movf	_rxPayload& (0+255),w,b
  5738  005BDE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  5739  005BE0  B4D8               	btfsc	status,2,c
  5740  005BE2  D017               	goto	l2129
  5741                           
  5742                           ; BSR set to: 1
  5743                           ;lorawan.c: 986: {
  5744                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  5745  005BE4  0E00               	movlw	0
  5746  005BE6  0100               	movlb	0	; () banked
  5747  005BE8  6F60               	movwf	RxData@pData& (0+255),b
  5748  005BEA  0E00               	movlw	0
  5749  005BEC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  5750  005BEE  0E00               	movlw	0
  5751  005BF0  6F62               	movwf	RxData@dataLength& (0+255),b
  5752  005BF2  0E00               	movlw	0
  5753  005BF4  6F63               	movwf	RxData@status& (0+255),b
  5754  005BF6  D801               	call	u19768
  5755  005BF8  D00C               	goto	l2129
  5756  005BFA                     u19768:
  5757  005BFA  0005               	push	
  5758  005BFC  6EFA               	movwf	pclath,c
  5759  005BFE                     L3:
  5760  005BFE  0101               	movlb	1	; () banked
  5761  005C00  5169               	movf	_rxPayload& (0+255),w,b
  5762  005C02  6EFD               	movwf	tosl,c
  5763  005C04  516A               	movf	(_rxPayload+1)& (0+255),w,b
  5764  005C06  6EFE               	movwf	tosh,c
  5765  005C08  6AFF               	clrf	tosu,c
  5766  005C0A  50FA               	movf	pclath,w,c
  5767  005C0C  0012               	return		;indir
  5768  005C0E                     l15923:
  5769                           
  5770                           ; BSR set to: 2
  5771                           ;lorawan.c: 991: else
  5772                           ;lorawan.c: 992: {
  5773                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  5774  005C0E  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5775  005C12                     l2129:
  5776                           
  5777                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  5778  005C12  52E5               	movf	postdec1,f,c
  5779  005C14  52E5               	movf	postdec1,f,c
  5780  005C16  0012               	return		;funcret
  5781  005C18                     __end_of_AckRetransmissionCallback:
  5782                           	opt stack 0
  5783                           tosu	equ	0xFFF
  5784                           tosh	equ	0xFFE
  5785                           tosl	equ	0xFFD
  5786                           pclath	equ	0xFFA
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           prodh	equ	0xFF4
  5792                           prodl	equ	0xFF3
  5793                           intcon	equ	0xFF2
  5794                           intcon2	equ	0xFF1
  5795                           intcon3	equ	0xFF0
  5796                           postinc0	equ	0xFEE
  5797                           wreg	equ	0xFE8
  5798                           postinc1	equ	0xFE6
  5799                           postdec1	equ	0xFE5
  5800                           plusw1	equ	0xFE3
  5801                           fsr1h	equ	0xFE2
  5802                           fsr1l	equ	0xFE1
  5803                           indf2	equ	0xFDF
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  5811 ;; Defined at:
  5812 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  param           1  [STACK] unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  iCtr            1  [STACK] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1  [STACK] void 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 3F/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:   11
  5833 ;; This function calls:
  5834 ;;		_SwTimerSetTimeout
  5835 ;;		_SwTimerStart
  5836 ;;		___lldiv
  5837 ;; This function is called by:
  5838 ;;		_SetCallbackSoftwareTimers
  5839 ;;		_SwTimersExecute
  5840 ;; This function uses a reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text30
  5844  004CA4                     __ptext30:
  5845                           	opt stack 0
  5846  004CA4                     _LORAWAN_LinkCheckCallback:
  5847                           	opt stack 0
  5848                           
  5849                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5850  004CA4  0E05               	movlw	5
  5851  004CA6  26E1               	addwf	fsr1l,f,c
  5852  004CA8  0E00               	movlw	0
  5853  004CAA  22E2               	addwfc	fsr1h,f,c
  5854                           
  5855                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  5856                           
  5857                           ;incstack = 0
  5858  004CAC  0102               	movlb	2	; () banked
  5859  004CAE  A103               	btfss	(_loRa+3)& (0+255),0,b
  5860                           
  5861                           ; BSR set to: 2
  5862  004CB0  A503               	btfss	(_loRa+3)& (0+255),2,b
  5863  004CB2  D02C               	goto	l15867
  5864                           
  5865                           ; BSR set to: 2
  5866                           ;lorawan.c: 886: {
  5867                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  5868                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5869  004CB4  0EFF               	movlw	-1
  5870  004CB6  6AE3               	clrf	plusw1,c
  5871  004CB8  D00F               	goto	l15857
  5872  004CBA                     l15851:
  5873                           
  5874                           ; BSR set to: 2
  5875                           ;lorawan.c: 889: {
  5876                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  5877                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5878  004CBA  0EFF               	movlw	-1
  5879  004CBC  50E3               	movf	plusw1,w,c
  5880  004CBE  0D02               	mullw	2
  5881  004CC0  0EA8               	movlw	low (_loRa+168)
  5882  004CC2  24F3               	addwf	prodl,w,c
  5883  004CC4  6ED9               	movwf	fsr2l,c
  5884  004CC6  0E02               	movlw	high (_loRa+168)
  5885  004CC8  20F4               	addwfc	prodh,w,c
  5886  004CCA  6EDA               	movwf	fsr2h,c
  5887  004CCC  0E02               	movlw	2
  5888  004CCE  18DE               	xorwf	postinc2,w,c
  5889  004CD0  B4D8               	btfsc	status,2,c
  5890  004CD2  D009               	goto	u19560
  5891                           
  5892                           ; BSR set to: 2
  5893                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5894  004CD4  0EFF               	movlw	-1
  5895  004CD6  2AE3               	incf	plusw1,f,c
  5896  004CD8                     l15857:
  5897                           
  5898                           ; BSR set to: 2
  5899                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5900  004CD8  0EFF               	movlw	-1
  5901  004CDA  CFE3 F048          	movff	plusw1,btemp
  5902  004CDE  51A7               	movf	(_loRa+167)& (0+255),w,b
  5903  004CE0  5C48               	subwf	btemp,w,c
  5904  004CE2  A0D8               	btfss	status,0,c
  5905  004CE4  D7EA               	goto	l15851
  5906  004CE6                     u19560:
  5907                           
  5908                           ; BSR set to: 2
  5909                           ;lorawan.c: 893: }
  5910                           ;lorawan.c: 894: }
  5911                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  5912                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  5913  004CE6  0EFF               	movlw	-1
  5914  004CE8  50E3               	movf	plusw1,w,c
  5915  004CEA  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  5916  004CEC  A4D8               	btfss	status,2,c
  5917  004CEE  D00E               	goto	l15867
  5918                           
  5919                           ; BSR set to: 2
  5920                           ;lorawan.c: 897: {
  5921                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  5922  004CF0  51A7               	movf	(_loRa+167)& (0+255),w,b
  5923  004CF2  0D02               	mullw	2
  5924  004CF4  0EA8               	movlw	low (_loRa+168)
  5925  004CF6  24F3               	addwf	prodl,w,c
  5926  004CF8  6ED9               	movwf	fsr2l,c
  5927  004CFA  0E02               	movlw	high (_loRa+168)
  5928  004CFC  20F4               	addwfc	prodh,w,c
  5929  004CFE  6EDA               	movwf	fsr2h,c
  5930  004D00  0E02               	movlw	2
  5931  004D02  6EDF               	movwf	indf2,c
  5932                           
  5933                           ; BSR set to: 2
  5934                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  5935  004D04  0E10               	movlw	16
  5936  004D06  61A7               	cpfslt	(_loRa+167)& (0+255),b
  5937  004D08  D001               	goto	l15867
  5938                           
  5939                           ; BSR set to: 2
  5940                           ;lorawan.c: 901: {
  5941                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  5942  004D0A  2BA7               	incf	(_loRa+167)& (0+255),f,b
  5943  004D0C                     l15867:
  5944                           
  5945                           ; BSR set to: 2
  5946                           ;lorawan.c: 903: }
  5947                           ;lorawan.c: 904: }
  5948                           ;lorawan.c: 905: }
  5949                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  5950  004D0C  A503               	btfss	(_loRa+3)& (0+255),2,b
  5951  004D0E  D07B               	goto	l2107
  5952                           
  5953                           ; BSR set to: 2
  5954                           ;lorawan.c: 909: {
  5955                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5956  004D10  51CF               	movf	(_loRa+207)& (0+255),w,b
  5957  004D12  E107               	bnz	u19600
  5958  004D14  29CC               	incf	(_loRa+204)& (0+255),w,b
  5959  004D16  0EFF               	movlw	255
  5960  004D18  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  5961  004D1A  0E0F               	movlw	15
  5962  004D1C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  5963  004D1E  A0D8               	btfss	status,0,c
  5964  004D20  D024               	goto	l15873
  5965  004D22                     u19600:
  5966                           
  5967                           ; BSR set to: 2
  5968  004D22  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
  5969  004D26  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
  5970  004D2A  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
  5971  004D2E  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
  5972  004D32  0E7D               	movlw	125
  5973  004D34  0100               	movlb	0	; () banked
  5974  004D36  6F64               	movwf	___lldiv@divisor& (0+255),b
  5975  004D38  0E00               	movlw	0
  5976  004D3A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5977  004D3C  0E00               	movlw	0
  5978  004D3E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5979  004D40  0E00               	movlw	0
  5980  004D42  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5981  004D44  EC8F  F039         	call	___lldiv	;wreg free
  5982  004D48  C060  F050         	movff	?___lldiv,btemp+8
  5983  004D4C  C061  F051         	movff	?___lldiv+1,btemp+9
  5984  004D50  C062  F052         	movff	?___lldiv+2,btemp+10
  5985  004D54  C063  F053         	movff	?___lldiv+3,btemp+11
  5986  004D58  0E0C               	movlw	12
  5987  004D5A                     u19615:
  5988  004D5A  90D8               	bcf	status,0,c
  5989  004D5C  3650               	rlcf	btemp+8,f,c
  5990  004D5E  3651               	rlcf	btemp+9,f,c
  5991  004D60  3652               	rlcf	btemp+10,f,c
  5992  004D62  3653               	rlcf	btemp+11,f,c
  5993  004D64  2EE8               	decfsz	wreg,f,c
  5994  004D66  D7F9               	goto	u19615
  5995  004D68  D02B               	goto	L4
  5996  004D6A                     l15873:
  5997                           
  5998                           ; BSR set to: 2
  5999  004D6A  C2CC  F050         	movff	_loRa+204,btemp+8
  6000  004D6E  C2CD  F051         	movff	_loRa+205,btemp+9
  6001  004D72  C2CE  F052         	movff	_loRa+206,btemp+10
  6002  004D76  C2CF  F053         	movff	_loRa+207,btemp+11
  6003  004D7A  0E0C               	movlw	12
  6004  004D7C                     u19625:
  6005  004D7C  90D8               	bcf	status,0,c
  6006  004D7E  3650               	rlcf	btemp+8,f,c
  6007  004D80  3651               	rlcf	btemp+9,f,c
  6008  004D82  3652               	rlcf	btemp+10,f,c
  6009  004D84  3653               	rlcf	btemp+11,f,c
  6010  004D86  2EE8               	decfsz	wreg,f,c
  6011  004D88  D7F9               	goto	u19625
  6012  004D8A  C050  F060         	movff	btemp+8,___lldiv@dividend
  6013  004D8E  C051  F061         	movff	btemp+9,___lldiv@dividend+1
  6014  004D92  C052  F062         	movff	btemp+10,___lldiv@dividend+2
  6015  004D96  C053  F063         	movff	btemp+11,___lldiv@dividend+3
  6016  004D9A  0E7D               	movlw	125
  6017  004D9C  0100               	movlb	0	; () banked
  6018  004D9E  6F64               	movwf	___lldiv@divisor& (0+255),b
  6019  004DA0  0E00               	movlw	0
  6020  004DA2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  6021  004DA4  0E00               	movlw	0
  6022  004DA6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  6023  004DA8  0E00               	movlw	0
  6024  004DAA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  6025  004DAC  EC8F  F039         	call	___lldiv	;wreg free
  6026  004DB0  C060  F050         	movff	?___lldiv,btemp+8
  6027  004DB4  C061  F051         	movff	?___lldiv+1,btemp+9
  6028  004DB8  C062  F052         	movff	?___lldiv+2,btemp+10
  6029  004DBC  C063  F053         	movff	?___lldiv+3,btemp+11
  6030  004DC0                     L4:
  6031                           
  6032                           ;stkvar	_LORAWAN_LinkCheckCallback$3473 @ sp[(-5)+0]
  6033  004DC0  0EFB               	movlw	-5
  6034  004DC2  C050  FFE3         	movff	btemp+8,plusw1
  6035  004DC6  0EFC               	movlw	-4
  6036  004DC8  C051  FFE3         	movff	btemp+9,plusw1
  6037  004DCC  0EFD               	movlw	-3
  6038  004DCE  C052  FFE3         	movff	btemp+10,plusw1
  6039  004DD2  0EFE               	movlw	-2
  6040  004DD4  C053  FFE3         	movff	btemp+11,plusw1
  6041                           
  6042                           ;stkvar	_LORAWAN_LinkCheckCallback$3473 @ sp[(-5)+0]
  6043  004DD8  50E1               	movf	fsr1l,w,c
  6044  004DDA  0FFB               	addlw	-5
  6045  004DDC  6ED9               	movwf	fsr2l,c
  6046  004DDE  50E2               	movf	fsr1h,w,c
  6047  004DE0  6EDA               	movwf	fsr2h,c
  6048  004DE2  0EFF               	movlw	255
  6049  004DE4  22DA               	addwfc	fsr2h,f,c
  6050  004DE6  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  6051  004DEA  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6052  004DEE  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6053  004DF2  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6054  004DF6  0102               	movlb	2	; () banked
  6055  004DF8  51E7               	movf	(_loRa+231)& (0+255),w,b
  6056  004DFA  ECDB  F040         	call	_SwTimerSetTimeout
  6057                           
  6058                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6059  004DFE  0102               	movlb	2	; () banked
  6060  004E00  51E7               	movf	(_loRa+231)& (0+255),w,b
  6061  004E02  ECD1  F036         	call	_SwTimerStart
  6062  004E06                     l2107:
  6063                           
  6064                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6065  004E06  0EFA               	movlw	250
  6066  004E08  26E1               	addwf	fsr1l,f,c
  6067  004E0A  0EFF               	movlw	255
  6068  004E0C  22E2               	addwfc	fsr1h,f,c
  6069  004E0E  0012               	return		;funcret
  6070  004E10                     __end_of_LORAWAN_LinkCheckCallback:
  6071                           	opt stack 0
  6072                           tosu	equ	0xFFF
  6073                           tosh	equ	0xFFE
  6074                           tosl	equ	0xFFD
  6075                           pclath	equ	0xFFA
  6076                           tblptru	equ	0xFF8
  6077                           tblptrh	equ	0xFF7
  6078                           tblptrl	equ	0xFF6
  6079                           tablat	equ	0xFF5
  6080                           prodh	equ	0xFF4
  6081                           prodl	equ	0xFF3
  6082                           intcon	equ	0xFF2
  6083                           intcon2	equ	0xFF1
  6084                           intcon3	equ	0xFF0
  6085                           postinc0	equ	0xFEE
  6086                           wreg	equ	0xFE8
  6087                           postinc1	equ	0xFE6
  6088                           postdec1	equ	0xFE5
  6089                           plusw1	equ	0xFE3
  6090                           fsr1h	equ	0xFE2
  6091                           fsr1l	equ	0xFE1
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           postdec2	equ	0xFDD
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  6100 ;; Defined at:
  6101 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  param           1  [STACK] unsigned char 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  freq            4  [STACK] unsigned long 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1  [STACK] void 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 3F/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:   13
  6122 ;; This function calls:
  6123 ;;		_ConfigureRadioRx
  6124 ;;		_GetRx1Freq
  6125 ;;		_RADIO_ReceiveStart
  6126 ;;		_RADIO_ReceiveStop
  6127 ;;		_RADIO_ReleaseData
  6128 ;; This function is called by:
  6129 ;;		_SetCallbackSoftwareTimers
  6130 ;;		_SwTimersExecute
  6131 ;; This function uses a reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text31
  6135  00699A                     __ptext31:
  6136                           	opt stack 0
  6137  00699A                     _LORAWAN_ReceiveWindow1Callback:
  6138                           	opt stack 0
  6139                           
  6140                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6141  00699A  52E6               	movf	postinc1,f,c
  6142  00699C  52E6               	movf	postinc1,f,c
  6143  00699E  52E6               	movf	postinc1,f,c
  6144  0069A0  52E6               	movf	postinc1,f,c
  6145                           
  6146                           ;lorawan.c: 798: uint32_t freq;
  6147                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  6148                           
  6149                           ;incstack = 0
  6150  0069A2  0102               	movlb	2	; () banked
  6151  0069A4  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6152  0069A6  D050               	goto	l2080
  6153                           
  6154                           ; BSR set to: 2
  6155                           ;lorawan.c: 801: {
  6156                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  6157  0069A8  0E02               	movlw	2
  6158  0069AA  1912               	xorwf	(_loRa+18)& (0+255),w,b
  6159  0069AC  B4D8               	btfsc	status,2,c
  6160                           
  6161                           ; BSR set to: 2
  6162                           ;lorawan.c: 803: {
  6163                           ;lorawan.c: 804: RADIO_ReceiveStop();
  6164  0069AE  EC23  F044         	call	_RADIO_ReceiveStop	;wreg free
  6165                           
  6166                           ;lorawan.c: 805: }
  6167                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  6168  0069B2  0102               	movlb	2	; () banked
  6169  0069B4  51EF               	movf	(_loRa+239)& (0+255),w,b
  6170  0069B6  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6171  0069B8  A0D8               	btfss	status,0,c
  6172  0069BA  D004               	goto	l2078
  6173                           
  6174                           ; BSR set to: 2
  6175                           ;lorawan.c: 807: {
  6176                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  6177  0069BC  51EF               	movf	(_loRa+239)& (0+255),w,b
  6178  0069BE  5D17               	subwf	(_loRa+23)& (0+255),w,b
  6179  0069C0  6F17               	movwf	(_loRa+23)& (0+255),b
  6180                           
  6181                           ;lorawan.c: 809: }
  6182  0069C2  D001               	goto	l15833
  6183  0069C4                     l2078:
  6184                           
  6185                           ; BSR set to: 2
  6186                           ;lorawan.c: 810: else
  6187                           ;lorawan.c: 811: {
  6188                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  6189  0069C4  6B17               	clrf	(_loRa+23)& (0+255),b
  6190  0069C6                     l15833:
  6191                           
  6192                           ; BSR set to: 2
  6193                           ;lorawan.c: 813: }
  6194                           ;lorawan.c: 815: freq = GetRx1Freq();
  6195  0069C6  EC43  F045         	call	_GetRx1Freq	;wreg free
  6196  0069CA  C060  F050         	movff	?_GetRx1Freq,btemp+8
  6197  0069CE  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
  6198  0069D2  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
  6199  0069D6  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
  6200                           
  6201                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6202  0069DA  0EFC               	movlw	-4
  6203  0069DC  C050  FFE3         	movff	btemp+8,plusw1
  6204  0069E0  0EFD               	movlw	-3
  6205  0069E2  C051  FFE3         	movff	btemp+9,plusw1
  6206  0069E6  0EFE               	movlw	-2
  6207  0069E8  C052  FFE3         	movff	btemp+10,plusw1
  6208  0069EC  0EFF               	movlw	-1
  6209  0069EE  C053  FFE3         	movff	btemp+11,plusw1
  6210                           
  6211                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  6212  0069F2  0102               	movlb	2	; () banked
  6213  0069F4  5102               	movf	(_loRa+2)& (0+255),w,b
  6214  0069F6  0BF0               	andlw	-16
  6215  0069F8  0903               	iorlw	3
  6216  0069FA  6F02               	movwf	(_loRa+2)& (0+255),b
  6217                           
  6218                           ; BSR set to: 2
  6219                           ;lorawan.c: 819: RADIO_ReleaseData();
  6220  0069FC  EC0B  F046         	call	_RADIO_ReleaseData	;wreg free
  6221                           
  6222                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  6223                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  6224  006A00  50E1               	movf	fsr1l,w,c
  6225  006A02  0FFC               	addlw	-4
  6226  006A04  6ED9               	movwf	fsr2l,c
  6227  006A06  50E2               	movf	fsr1h,w,c
  6228  006A08  6EDA               	movwf	fsr2h,c
  6229  006A0A  0EFF               	movlw	255
  6230  006A0C  22DA               	addwfc	fsr2h,f,c
  6231  006A0E  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  6232  006A12  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  6233  006A16  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  6234  006A1A  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  6235  006A1E  0102               	movlb	2	; () banked
  6236  006A20  5117               	movf	(_loRa+23)& (0+255),w,b
  6237  006A22  EC1D  F043         	call	_ConfigureRadioRx
  6238                           
  6239                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  6240  006A26  0E79               	movlw	low _rxWindowSize
  6241  006A28  0102               	movlb	2	; () banked
  6242  006A2A  2517               	addwf	(_loRa+23)& (0+255),w,b
  6243  006A2C  6EF6               	movwf	tblptrl,c
  6244  006A2E  6AF7               	clrf	tblptrh,c
  6245  006A30  0EFF               	movlw	high _rxWindowSize
  6246  006A32  22F7               	addwfc	tblptrh,f,c
  6247  006A34                     	if	1	;There are 3 active tblptr bytes
  6248  006A34  6AF8               	clrf	tblptru,c
  6249  006A36  0E00               	movlw	low (__mediumconst shr (0+16))
  6250  006A38  22F8               	addwfc	tblptru,f,c
  6251  006A3A                     	endif
  6252  006A3A  0008               	tblrd		*
  6253  006A3C  50F5               	movf	tablat,w,c
  6254  006A3E  0100               	movlb	0	; () banked
  6255  006A40  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6256  006A42  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6257  006A44  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  6258  006A48                     l2080:
  6259                           
  6260                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6261  006A48  0EFB               	movlw	251
  6262  006A4A  26E1               	addwf	fsr1l,f,c
  6263  006A4C  0EFF               	movlw	255
  6264  006A4E  22E2               	addwfc	fsr1h,f,c
  6265  006A50  0012               	return		;funcret
  6266  006A52                     __end_of_LORAWAN_ReceiveWindow1Callback:
  6267                           	opt stack 0
  6268                           tosu	equ	0xFFF
  6269                           tosh	equ	0xFFE
  6270                           tosl	equ	0xFFD
  6271                           pclath	equ	0xFFA
  6272                           tblptru	equ	0xFF8
  6273                           tblptrh	equ	0xFF7
  6274                           tblptrl	equ	0xFF6
  6275                           tablat	equ	0xFF5
  6276                           prodh	equ	0xFF4
  6277                           prodl	equ	0xFF3
  6278                           intcon	equ	0xFF2
  6279                           intcon2	equ	0xFF1
  6280                           intcon3	equ	0xFF0
  6281                           postinc0	equ	0xFEE
  6282                           wreg	equ	0xFE8
  6283                           postinc1	equ	0xFE6
  6284                           postdec1	equ	0xFE5
  6285                           plusw1	equ	0xFE3
  6286                           fsr1h	equ	0xFE2
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           postinc2	equ	0xFDE
  6290                           postdec2	equ	0xFDD
  6291                           fsr2h	equ	0xFDA
  6292                           fsr2l	equ	0xFD9
  6293                           status	equ	0xFD8
  6294                           
  6295 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  6296 ;; Defined at:
  6297 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  param           1  [STACK] unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1  [STACK] void 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 3D/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:   14
  6318 ;; This function calls:
  6319 ;;		_ConfigureRadioRx
  6320 ;;		_LORAWAN_EnterContinuousReceive
  6321 ;;		_RADIO_GetStatus
  6322 ;;		_RADIO_ReceiveStart
  6323 ;;		_RADIO_ReceiveStop
  6324 ;;		_RADIO_ReleaseData
  6325 ;;		_ResetParametersForConfirmedTransmission
  6326 ;;		_ResetParametersForUnconfirmedTransmission
  6327 ;;		_RxData
  6328 ;; This function is called by:
  6329 ;;		_LORAWAN_RxTimeout
  6330 ;;		_SetCallbackSoftwareTimers
  6331 ;;		_SwTimersExecute
  6332 ;; This function uses a reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text32
  6336  00666C                     __ptext32:
  6337                           	opt stack 0
  6338  00666C                     _LORAWAN_ReceiveWindow2Callback:
  6339                           	opt stack 12
  6340                           
  6341                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  6342                           
  6343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6344                           ;incstack = 0
  6345  00666C  0102               	movlb	2	; () banked
  6346  00666E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6347  006670  D05F               	goto	l2083
  6348                           
  6349                           ; BSR set to: 2
  6350                           ;lorawan.c: 831: {
  6351                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  6352  006672  EC08  F046         	call	_RADIO_GetStatus	;wreg free
  6353  006676  6E53               	movwf	btemp+11,c
  6354  006678  B253               	btfsc	btemp+11,1,c
  6355  00667A  D056               	goto	l14555
  6356                           
  6357                           ;lorawan.c: 833: {
  6358                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  6359  00667C  0102               	movlb	2	; () banked
  6360  00667E  5102               	movf	(_loRa+2)& (0+255),w,b
  6361  006680  0BF0               	andlw	-16
  6362  006682  0905               	iorlw	5
  6363  006684  6F02               	movwf	(_loRa+2)& (0+255),b
  6364                           
  6365                           ; BSR set to: 2
  6366                           ;lorawan.c: 836: RADIO_ReceiveStop();
  6367  006686  EC23  F044         	call	_RADIO_ReceiveStop	;wreg free
  6368                           
  6369                           ;lorawan.c: 837: RADIO_ReleaseData();
  6370  00668A  EC0B  F046         	call	_RADIO_ReleaseData	;wreg free
  6371                           
  6372                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  6373  00668E  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  6374  006692  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  6375  006696  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  6376  00669A  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  6377  00669E  0102               	movlb	2	; () banked
  6378  0066A0  511C               	movf	(_loRa+28)& (0+255),w,b
  6379  0066A2  EC1D  F043         	call	_ConfigureRadioRx
  6380                           
  6381                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  6382  0066A6  0102               	movlb	2	; () banked
  6383  0066A8  5112               	movf	(_loRa+18)& (0+255),w,b
  6384  0066AA  A4D8               	btfss	status,2,c
  6385  0066AC  D036               	goto	l14551
  6386                           
  6387                           ; BSR set to: 2
  6388                           ;lorawan.c: 842: {
  6389                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  6390  0066AE  0E79               	movlw	low _rxWindowSize
  6391  0066B0  251C               	addwf	(_loRa+28)& (0+255),w,b
  6392  0066B2  6EF6               	movwf	tblptrl,c
  6393  0066B4  6AF7               	clrf	tblptrh,c
  6394  0066B6  0EFF               	movlw	high _rxWindowSize
  6395  0066B8  22F7               	addwfc	tblptrh,f,c
  6396  0066BA                     	if	1	;There are 3 active tblptr bytes
  6397  0066BA  6AF8               	clrf	tblptru,c
  6398  0066BC  0E00               	movlw	low (__mediumconst shr (0+16))
  6399  0066BE  22F8               	addwfc	tblptru,f,c
  6400  0066C0                     	endif
  6401  0066C0  0008               	tblrd		*
  6402  0066C2  50F5               	movf	tablat,w,c
  6403  0066C4  0100               	movlb	0	; () banked
  6404  0066C6  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  6405  0066C8  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  6406  0066CA  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
  6407  0066CE  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
  6408  0066D2  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
  6409  0066D6  5049               	movf	btemp+1,w,c
  6410  0066D8  104A               	iorwf	btemp+2,w,c
  6411  0066DA  B4D8               	btfsc	status,2,c
  6412  0066DC  D031               	goto	l2092
  6413                           
  6414                           ;lorawan.c: 844: {
  6415                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  6416  0066DE  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6417                           
  6418                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  6419  0066E2  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6420                           
  6421                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  6422  0066E6  0101               	movlb	1	; () banked
  6423  0066E8  5169               	movf	_rxPayload& (0+255),w,b
  6424  0066EA  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  6425  0066EC  B4D8               	btfsc	status,2,c
  6426  0066EE  D028               	goto	l2092
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;lorawan.c: 848: {
  6430                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  6431  0066F0  0E00               	movlw	0
  6432  0066F2  0100               	movlb	0	; () banked
  6433  0066F4  6F60               	movwf	RxData@pData& (0+255),b
  6434  0066F6  0E00               	movlw	0
  6435  0066F8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6436  0066FA  0E00               	movlw	0
  6437  0066FC  6F62               	movwf	RxData@dataLength& (0+255),b
  6438  0066FE  0E00               	movlw	0
  6439  006700  6F63               	movwf	RxData@status& (0+255),b
  6440  006702  D801               	call	u17098
  6441  006704  D01D               	goto	l2092
  6442  006706                     u17098:
  6443  006706  0005               	push	
  6444  006708  6EFA               	movwf	pclath,c
  6445  00670A  0101               	movlb	1	; () banked
  6446  00670C  5169               	movf	_rxPayload& (0+255),w,b
  6447  00670E  6EFD               	movwf	tosl,c
  6448  006710  516A               	movf	(_rxPayload+1)& (0+255),w,b
  6449  006712  6EFE               	movwf	tosh,c
  6450  006714  6AFF               	clrf	tosu,c
  6451  006716  50FA               	movf	pclath,w,c
  6452  006718  0012               	return		;indir
  6453  00671A                     l14551:
  6454                           
  6455                           ; BSR set to: 2
  6456                           ;lorawan.c: 853: else
  6457                           ;lorawan.c: 854: {
  6458                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  6459  00671A  5102               	movf	(_loRa+2)& (0+255),w,b
  6460  00671C  0BF0               	andlw	-16
  6461  00671E  0909               	iorlw	9
  6462  006720  6F02               	movwf	(_loRa+2)& (0+255),b
  6463                           
  6464                           ; BSR set to: 2
  6465                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  6466  006722  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  6467  006726  D00C               	goto	l2092
  6468  006728                     l14555:
  6469                           
  6470                           ;lorawan.c: 859: else
  6471                           ;lorawan.c: 860: {
  6472                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  6473  006728  0E01               	movlw	1
  6474  00672A  0102               	movlb	2	; () banked
  6475  00672C  6FF1               	movwf	(_loRa+241)& (0+255),b
  6476                           
  6477                           ; BSR set to: 1
  6478                           ;lorawan.c: 864: }
  6479                           ;lorawan.c: 865: }
  6480  00672E  D008               	goto	l2092
  6481  006730                     l2083:
  6482                           
  6483                           ; BSR set to: 2
  6484                           ;lorawan.c: 866: else
  6485                           ;lorawan.c: 867: {
  6486                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  6487  006730  A500               	btfss	_loRa& (0+255),2,b
  6488  006732  D002               	goto	l14559
  6489                           
  6490                           ; BSR set to: 2
  6491                           ;lorawan.c: 871: {
  6492                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  6493  006734  9500               	bcf	_loRa& (0+255),2,b
  6494                           
  6495                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  6496  006736  9902               	bcf	(_loRa+2)& (0+255),4,b
  6497  006738                     l14559:
  6498                           
  6499                           ; BSR set to: 2
  6500                           ;lorawan.c: 874: }
  6501                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  6502  006738  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6503                           
  6504                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  6505  00673C  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6506  006740                     l2092:
  6507                           
  6508                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  6509  006740  52E5               	movf	postdec1,f,c
  6510  006742  0012               	return		;funcret
  6511  006744                     __end_of_LORAWAN_ReceiveWindow2Callback:
  6512                           	opt stack 0
  6513                           tosu	equ	0xFFF
  6514                           tosh	equ	0xFFE
  6515                           tosl	equ	0xFFD
  6516                           pclath	equ	0xFFA
  6517                           tblptru	equ	0xFF8
  6518                           tblptrh	equ	0xFF7
  6519                           tblptrl	equ	0xFF6
  6520                           tablat	equ	0xFF5
  6521                           prodh	equ	0xFF4
  6522                           prodl	equ	0xFF3
  6523                           intcon	equ	0xFF2
  6524                           intcon2	equ	0xFF1
  6525                           intcon3	equ	0xFF0
  6526                           postinc0	equ	0xFEE
  6527                           wreg	equ	0xFE8
  6528                           postinc1	equ	0xFE6
  6529                           postdec1	equ	0xFE5
  6530                           plusw1	equ	0xFE3
  6531                           fsr1h	equ	0xFE2
  6532                           fsr1l	equ	0xFE1
  6533                           indf2	equ	0xFDF
  6534                           postinc2	equ	0xFDE
  6535                           postdec2	equ	0xFDD
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           
  6540 ;; *************** function _RADIO_WatchdogTimeout *****************
  6541 ;; Defined at:
  6542 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  param           1  [STACK] unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1  [STACK] void 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 3F/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;Total ram usage:        0 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:   16
  6563 ;; This function calls:
  6564 ;;		_LORAWAN_RxTimeout
  6565 ;;		_LORAWAN_TxDone
  6566 ;;		_RADIO_WriteMode
  6567 ;; This function is called by:
  6568 ;;		_RADIO_Init
  6569 ;;		_SwTimersExecute
  6570 ;; This function uses a reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text33
  6574  007FD4                     __ptext33:
  6575                           	opt stack 0
  6576  007FD4                     _RADIO_WatchdogTimeout:
  6577                           	opt stack 12
  6578                           
  6579                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  6580                           
  6581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6582                           ;incstack = 0
  6583  007FD4  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6584  007FD8  0E01               	movlw	1
  6585  007FDA  0100               	movlb	0	; () banked
  6586  007FDC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6587  007FDE  0E01               	movlw	1
  6588  007FE0  EC0D  F02F         	call	_RADIO_WriteMode
  6589                           
  6590                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6591  007FE4  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6592  007FE8  0E00               	movlw	0
  6593  007FEA  0100               	movlb	0	; () banked
  6594  007FEC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6595  007FEE  0E00               	movlw	0
  6596  007FF0  EC0D  F02F         	call	_RADIO_WriteMode
  6597                           
  6598                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  6599  007FF4  0101               	movlb	1	; () banked
  6600  007FF6  899D               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  6601                           
  6602                           ; BSR set to: 1
  6603                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  6604  007FF8  A39D               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  6605  007FFA  D004               	goto	l727
  6606                           
  6607                           ; BSR set to: 1
  6608                           ;radio_driver_SX1276.c: 1414: {
  6609                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  6610  007FFC  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  6614  007FFE  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  6615                           
  6616                           ;radio_driver_SX1276.c: 1417: }
  6617  008002  D009               	goto	l730
  6618  008004                     l727:
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  6622  008004  A19D               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  6623  008006  D007               	goto	l730
  6624                           
  6625                           ; BSR set to: 1
  6626                           ;radio_driver_SX1276.c: 1419: {
  6627                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  6628  008008  919D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  6629                           
  6630                           ; BSR set to: 1
  6631                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  6632  00800A  C1A4  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  6633  00800E  C1A5  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  6634  008012  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  6635  008016                     l730:
  6636                           
  6637                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  6638  008016  52E5               	movf	postdec1,f,c
  6639  008018  0012               	return		;funcret
  6640  00801A                     __end_of_RADIO_WatchdogTimeout:
  6641                           	opt stack 0
  6642                           tosu	equ	0xFFF
  6643                           tosh	equ	0xFFE
  6644                           tosl	equ	0xFFD
  6645                           pclath	equ	0xFFA
  6646                           tblptru	equ	0xFF8
  6647                           tblptrh	equ	0xFF7
  6648                           tblptrl	equ	0xFF6
  6649                           tablat	equ	0xFF5
  6650                           prodh	equ	0xFF4
  6651                           prodl	equ	0xFF3
  6652                           intcon	equ	0xFF2
  6653                           intcon2	equ	0xFF1
  6654                           intcon3	equ	0xFF0
  6655                           postinc0	equ	0xFEE
  6656                           wreg	equ	0xFE8
  6657                           postinc1	equ	0xFE6
  6658                           postdec1	equ	0xFE5
  6659                           plusw1	equ	0xFE3
  6660                           fsr1h	equ	0xFE2
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _RADIO_RxFSKTimeout *****************
  6670 ;; Defined at:
  6671 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  param           1  [STACK] unsigned char 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  irqFlags        1  [STACK] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1  [STACK] void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 3F/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:   16
  6692 ;; This function calls:
  6693 ;;		_LORAWAN_RxTimeout
  6694 ;;		_RADIO_RegisterRead
  6695 ;;		_RADIO_WriteMode
  6696 ;;		_SwTimerStop
  6697 ;; This function is called by:
  6698 ;;		_RADIO_Init
  6699 ;;		_SwTimersExecute
  6700 ;; This function uses a reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text34
  6704  00833E                     __ptext34:
  6705                           	opt stack 0
  6706  00833E                     _RADIO_RxFSKTimeout:
  6707                           	opt stack 0
  6708                           
  6709                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6710  00833E  52E6               	movf	postinc1,f,c
  6711                           
  6712                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  6713                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  6714                           
  6715                           ;incstack = 0
  6716  008340  0E3E               	movlw	62
  6717  008342  EC82  F043         	call	_RADIO_RegisterRead
  6718  008346  6E53               	movwf	btemp+11,c
  6719                           
  6720                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6721  008348  0EFF               	movlw	-1
  6722  00834A  C053  FFE3         	movff	btemp+11,plusw1
  6723                           
  6724                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  6725                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  6726  00834E  0EFF               	movlw	-1
  6727  008350  B0E3               	btfsc	plusw1,0,c
  6728  008352  D010               	goto	l724
  6729                           
  6730                           ;radio_driver_SX1276.c: 1397: {
  6731                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6732  008354  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6733  008358  0E00               	movlw	0
  6734  00835A  0100               	movlb	0	; () banked
  6735  00835C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  6736  00835E  0E00               	movlw	0
  6737  008360  EC0D  F02F         	call	_RADIO_WriteMode
  6738                           
  6739                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  6740  008364  0101               	movlb	1	; () banked
  6741  008366  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
  6742  008368  EC96  F043         	call	_SwTimerStop
  6743                           
  6744                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  6745  00836C  0101               	movlb	1	; () banked
  6746  00836E  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  6750  008370  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  6751  008374                     l724:
  6752                           
  6753                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6754  008374  52E5               	movf	postdec1,f,c
  6755  008376  52E5               	movf	postdec1,f,c
  6756  008378  0012               	return		;funcret
  6757  00837A                     __end_of_RADIO_RxFSKTimeout:
  6758                           	opt stack 0
  6759                           tosu	equ	0xFFF
  6760                           tosh	equ	0xFFE
  6761                           tosl	equ	0xFFD
  6762                           pclath	equ	0xFFA
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           intcon	equ	0xFF2
  6770                           intcon2	equ	0xFF1
  6771                           intcon3	equ	0xFF0
  6772                           postinc0	equ	0xFEE
  6773                           wreg	equ	0xFE8
  6774                           postinc1	equ	0xFE6
  6775                           postdec1	equ	0xFE5
  6776                           plusw1	equ	0xFE3
  6777                           fsr1h	equ	0xFE2
  6778                           fsr1l	equ	0xFE1
  6779                           indf2	equ	0xFDF
  6780                           postinc2	equ	0xFDE
  6781                           postdec2	equ	0xFDD
  6782                           fsr2h	equ	0xFDA
  6783                           fsr2l	equ	0xFD9
  6784                           status	equ	0xFD8
  6785                           
  6786 ;; *************** function _UnconfirmedTransmissionCallback *****************
  6787 ;; Defined at:
  6788 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  param           1  [STACK] unsigned char 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1  [STACK] void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 3F/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:   13
  6809 ;; This function calls:
  6810 ;;		_RADIO_Transmit
  6811 ;;		_ResetParametersForUnconfirmedTransmission
  6812 ;;		_RxData
  6813 ;;		_SelectChannelForTransmission
  6814 ;; This function is called by:
  6815 ;;		_SetCallbackSoftwareTimers
  6816 ;;		_SwTimersExecute
  6817 ;; This function uses a reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text35
  6821  007520                     __ptext35:
  6822                           	opt stack 0
  6823  007520                     _UnconfirmedTransmissionCallback:
  6824                           	opt stack 15
  6825                           
  6826                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  6827                           
  6828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6829                           ;incstack = 0
  6830  007520  0E01               	movlw	1
  6831  007522  EC3B  F03B         	call	_SelectChannelForTransmission
  6832  007526  0900               	iorlw	0
  6833  007528  A4D8               	btfss	status,2,c
  6834  00752A  D018               	goto	l15933
  6835  00752C  0EF0               	movlw	low (_macBuffer+16)
  6836  00752E  0100               	movlb	0	; () banked
  6837  007530  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  6838  007532  0E04               	movlw	high (_macBuffer+16)
  6839  007534  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6840  007536  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6841  00753A  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  6842  00753E  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
  6843  007542  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
  6844  007546  5049               	movf	btemp+1,w,c
  6845  007548  104A               	iorwf	btemp+2,w,c
  6846  00754A  A4D8               	btfss	status,2,c
  6847  00754C  D007               	goto	l15933
  6848                           
  6849                           ;lorawan.c: 1001: {
  6850                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  6851  00754E  0102               	movlb	2	; () banked
  6852  007550  2BD8               	incf	(_loRa+216)& (0+255),f,b
  6853                           
  6854                           ; BSR set to: 2
  6855                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6856  007552  5102               	movf	(_loRa+2)& (0+255),w,b
  6857  007554  0BF0               	andlw	-16
  6858  007556  0901               	iorlw	1
  6859  007558  6F02               	movwf	(_loRa+2)& (0+255),b
  6860                           
  6861                           ;lorawan.c: 1005: }
  6862  00755A  D01C               	goto	u19809
  6863  00755C                     l15933:
  6864                           
  6865                           ;lorawan.c: 1006: else
  6866                           ;lorawan.c: 1008: {
  6867                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  6868  00755C  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  6869                           
  6870                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  6871  007560  0101               	movlb	1	; () banked
  6872  007562  5169               	movf	_rxPayload& (0+255),w,b
  6873  007564  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  6874  007566  B4D8               	btfsc	status,2,c
  6875  007568  D015               	goto	u19809
  6876                           
  6877                           ; BSR set to: 1
  6878                           ;lorawan.c: 1011: {
  6879                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6880  00756A  0E00               	movlw	0
  6881  00756C  0100               	movlb	0	; () banked
  6882  00756E  6F60               	movwf	RxData@pData& (0+255),b
  6883  007570  0E00               	movlw	0
  6884  007572  6F61               	movwf	(RxData@pData+1)& (0+255),b
  6885  007574  0E00               	movlw	0
  6886  007576  6F62               	movwf	RxData@dataLength& (0+255),b
  6887  007578  0E00               	movlw	0
  6888  00757A  6F63               	movwf	RxData@status& (0+255),b
  6889  00757C  D801               	call	u19808
  6890  00757E  D00A               	goto	u19809
  6891  007580                     u19808:
  6892  007580  0005               	push	
  6893  007582  6EFA               	movwf	pclath,c
  6894  007584  0101               	movlb	1	; () banked
  6895  007586  5169               	movf	_rxPayload& (0+255),w,b
  6896  007588  6EFD               	movwf	tosl,c
  6897  00758A  516A               	movf	(_rxPayload+1)& (0+255),w,b
  6898  00758C  6EFE               	movwf	tosh,c
  6899  00758E  6AFF               	clrf	tosu,c
  6900  007590  50FA               	movf	pclath,w,c
  6901  007592  0012               	return		;indir
  6902  007594                     u19809:
  6903                           
  6904                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  6905  007594  52E5               	movf	postdec1,f,c
  6906  007596  0012               	return		;funcret
  6907  007598                     __end_of_UnconfirmedTransmissionCallback:
  6908                           	opt stack 0
  6909                           tosu	equ	0xFFF
  6910                           tosh	equ	0xFFE
  6911                           tosl	equ	0xFFD
  6912                           pclath	equ	0xFFA
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           intcon	equ	0xFF2
  6920                           intcon2	equ	0xFF1
  6921                           intcon3	equ	0xFF0
  6922                           postinc0	equ	0xFEE
  6923                           wreg	equ	0xFE8
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           plusw1	equ	0xFE3
  6927                           fsr1h	equ	0xFE2
  6928                           fsr1l	equ	0xFE1
  6929                           indf2	equ	0xFDF
  6930                           postinc2	equ	0xFDE
  6931                           postdec2	equ	0xFDD
  6932                           fsr2h	equ	0xFDA
  6933                           fsr2l	equ	0xFD9
  6934                           status	equ	0xFD8
  6935                           
  6936 ;; *************** function _GetRx1Freq *****************
  6937 ;; Defined at:
  6938 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;		None
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  4    0[BANK0 ] unsigned long 
  6945 ;; Registers used:
  6946 ;;		None
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        4 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    7
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_LORAWAN_ReceiveWindow1Callback
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text36
  6967  008A86                     __ptext36:
  6968                           	opt stack 0
  6969  008A86                     _GetRx1Freq:
  6970                           	opt stack 20
  6971                           
  6972                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  6973                           
  6974                           ;incstack = 0
  6975  008A86  C213  F060         	movff	_loRa+19,?_GetRx1Freq
  6976  008A8A  C214  F061         	movff	_loRa+20,?_GetRx1Freq+1
  6977  008A8E  C215  F062         	movff	_loRa+21,?_GetRx1Freq+2
  6978  008A92  C216  F063         	movff	_loRa+22,?_GetRx1Freq+3
  6979  008A96  0012               	return		;funcret
  6980  008A98                     __end_of_GetRx1Freq:
  6981                           	opt stack 0
  6982                           tosu	equ	0xFFF
  6983                           tosh	equ	0xFFE
  6984                           tosl	equ	0xFFD
  6985                           pclath	equ	0xFFA
  6986                           tblptru	equ	0xFF8
  6987                           tblptrh	equ	0xFF7
  6988                           tblptrl	equ	0xFF6
  6989                           tablat	equ	0xFF5
  6990                           prodh	equ	0xFF4
  6991                           prodl	equ	0xFF3
  6992                           intcon	equ	0xFF2
  6993                           intcon2	equ	0xFF1
  6994                           intcon3	equ	0xFF0
  6995                           postinc0	equ	0xFEE
  6996                           wreg	equ	0xFE8
  6997                           postinc1	equ	0xFE6
  6998                           postdec1	equ	0xFE5
  6999                           plusw1	equ	0xFE3
  7000                           fsr1h	equ	0xFE2
  7001                           fsr1l	equ	0xFE1
  7002                           indf2	equ	0xFDF
  7003                           postinc2	equ	0xFDE
  7004                           postdec2	equ	0xFDD
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _RADIO_DIO5 *****************
  7010 ;; Defined at:
  7011 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      void 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;Total ram usage:        2 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:   11
  7032 ;; This function calls:
  7033 ;;		_RADIO_RegisterRead
  7034 ;;		_RADIO_UnhandledInterrupt
  7035 ;; This function is called by:
  7036 ;;		_LORAWAN_Mainloop
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text37
  7041  00868C                     __ptext37:
  7042                           	opt stack 0
  7043  00868C                     _RADIO_DIO5:
  7044                           	opt stack 18
  7045                           
  7046                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7047                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7048                           
  7049                           ;incstack = 0
  7050  00868C  0E41               	movlw	65
  7051  00868E  EC82  F043         	call	_RADIO_RegisterRead
  7052  008692  0100               	movlb	0	; () banked
  7053  008694  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  7054  008696  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
  7055  008698  0B0F               	andlw	15
  7056  00869A  0B03               	andlw	3
  7057  00869C  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  7058                           
  7059                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7060  00869E  0E01               	movlw	1
  7061  0086A0  EC82  F043         	call	_RADIO_RegisterRead
  7062  0086A4  0100               	movlb	0	; () banked
  7063  0086A6  6F65               	movwf	??_RADIO_DIO5& (0+255),b
  7064  0086A8  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
  7065  0086AA  0012               	return	
  7066                           
  7067                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7068                           
  7069                           ; BSR set to: 0
  7070                           
  7071                           ;radio_driver_SX1276.c: 1354: {
  7072                           ;radio_driver_SX1276.c: 1355: default:
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;radio_driver_SX1276.c: 1351: {
  7076                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  7077  0086AC  0E01               	movlw	1
  7078  0086AE  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7079                           
  7080                           ;radio_driver_SX1276.c: 1358: }
  7081                           
  7082                           ;radio_driver_SX1276.c: 1357: break;
  7083  0086B2  0012               	return	
  7084  0086B4                     __end_of_RADIO_DIO5:
  7085                           	opt stack 0
  7086                           tosu	equ	0xFFF
  7087                           tosh	equ	0xFFE
  7088                           tosl	equ	0xFFD
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           intcon3	equ	0xFF0
  7099                           postinc0	equ	0xFEE
  7100                           wreg	equ	0xFE8
  7101                           postinc1	equ	0xFE6
  7102                           postdec1	equ	0xFE5
  7103                           plusw1	equ	0xFE3
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113 ;; *************** function _RADIO_DIO4 *****************
  7114 ;; Defined at:
  7115 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  dioMapping      1    7[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;Total ram usage:        3 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   11
  7136 ;; This function calls:
  7137 ;;		_RADIO_RegisterRead
  7138 ;;		_RADIO_UnhandledInterrupt
  7139 ;; This function is called by:
  7140 ;;		_LORAWAN_Mainloop
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text38
  7145  0083B0                     __ptext38:
  7146                           	opt stack 0
  7147  0083B0                     _RADIO_DIO4:
  7148                           	opt stack 18
  7149                           
  7150                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  7151                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  7152                           
  7153                           ;incstack = 0
  7154  0083B0  0E41               	movlw	65
  7155  0083B2  EC82  F043         	call	_RADIO_RegisterRead
  7156  0083B6  0100               	movlb	0	; () banked
  7157  0083B8  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  7158  0083BA  0E06               	movlw	6
  7159  0083BC  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  7160  0083BE                     u19935:
  7161  0083BE  90D8               	bcf	status,0,c
  7162  0083C0  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
  7163  0083C2  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  7164  0083C4  D7FC               	goto	u19935
  7165  0083C6  5165               	movf	??_RADIO_DIO4& (0+255),w,b
  7166  0083C8  0B03               	andlw	3
  7167  0083CA  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  7168                           
  7169                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7170  0083CC  0E01               	movlw	1
  7171  0083CE  EC82  F043         	call	_RADIO_RegisterRead
  7172  0083D2  0100               	movlb	0	; () banked
  7173  0083D4  6F65               	movwf	??_RADIO_DIO4& (0+255),b
  7174  0083D6  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
  7175  0083D8  0012               	return	
  7176                           
  7177                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7178                           
  7179                           ; BSR set to: 0
  7180                           
  7181                           ;radio_driver_SX1276.c: 1331: {
  7182                           ;radio_driver_SX1276.c: 1332: default:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;radio_driver_SX1276.c: 1328: {
  7186                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  7187  0083DA  0E01               	movlw	1
  7188  0083DC  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7189                           
  7190                           ;radio_driver_SX1276.c: 1335: }
  7191                           
  7192                           ;radio_driver_SX1276.c: 1334: break;
  7193  0083E0  0012               	return	
  7194  0083E2                     __end_of_RADIO_DIO4:
  7195                           	opt stack 0
  7196                           tosu	equ	0xFFF
  7197                           tosh	equ	0xFFE
  7198                           tosl	equ	0xFFD
  7199                           pclath	equ	0xFFA
  7200                           tblptru	equ	0xFF8
  7201                           tblptrh	equ	0xFF7
  7202                           tblptrl	equ	0xFF6
  7203                           tablat	equ	0xFF5
  7204                           prodh	equ	0xFF4
  7205                           prodl	equ	0xFF3
  7206                           intcon	equ	0xFF2
  7207                           intcon2	equ	0xFF1
  7208                           intcon3	equ	0xFF0
  7209                           postinc0	equ	0xFEE
  7210                           wreg	equ	0xFE8
  7211                           postinc1	equ	0xFE6
  7212                           postdec1	equ	0xFE5
  7213                           plusw1	equ	0xFE3
  7214                           fsr1h	equ	0xFE2
  7215                           fsr1l	equ	0xFE1
  7216                           indf2	equ	0xFDF
  7217                           postinc2	equ	0xFDE
  7218                           postdec2	equ	0xFDD
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _RADIO_DIO3 *****************
  7224 ;; Defined at:
  7225 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  dioMapping      1    6[BANK0 ] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;Total ram usage:        2 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:   11
  7246 ;; This function calls:
  7247 ;;		_RADIO_RegisterRead
  7248 ;;		_RADIO_UnhandledInterrupt
  7249 ;; This function is called by:
  7250 ;;		_LORAWAN_Mainloop
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text39
  7255  0087C0                     __ptext39:
  7256                           	opt stack 0
  7257  0087C0                     _RADIO_DIO3:
  7258                           	opt stack 18
  7259                           
  7260                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  7261                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  7262                           
  7263                           ;incstack = 0
  7264  0087C0  0E40               	movlw	64
  7265  0087C2  EC82  F043         	call	_RADIO_RegisterRead
  7266  0087C6  0B03               	andlw	3
  7267  0087C8  0100               	movlb	0	; () banked
  7268  0087CA  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  7269                           
  7270                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7271  0087CC  0E01               	movlw	1
  7272  0087CE  EC82  F043         	call	_RADIO_RegisterRead
  7273  0087D2  0100               	movlb	0	; () banked
  7274  0087D4  6F65               	movwf	??_RADIO_DIO3& (0+255),b
  7275  0087D6  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
  7276  0087D8  0012               	return	
  7277                           
  7278                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7279                           
  7280                           ; BSR set to: 0
  7281                           
  7282                           ;radio_driver_SX1276.c: 1308: {
  7283                           ;radio_driver_SX1276.c: 1309: default:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;radio_driver_SX1276.c: 1305: {
  7287                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  7288  0087DA  0E01               	movlw	1
  7289  0087DC  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7290                           
  7291                           ;radio_driver_SX1276.c: 1312: }
  7292                           
  7293                           ;radio_driver_SX1276.c: 1311: break;
  7294  0087E0  0012               	return	
  7295  0087E2                     __end_of_RADIO_DIO3:
  7296                           	opt stack 0
  7297                           tosu	equ	0xFFF
  7298                           tosh	equ	0xFFE
  7299                           tosl	equ	0xFFD
  7300                           pclath	equ	0xFFA
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           intcon2	equ	0xFF1
  7309                           intcon3	equ	0xFF0
  7310                           postinc0	equ	0xFEE
  7311                           wreg	equ	0xFE8
  7312                           postinc1	equ	0xFE6
  7313                           postdec1	equ	0xFE5
  7314                           plusw1	equ	0xFE3
  7315                           fsr1h	equ	0xFE2
  7316                           fsr1l	equ	0xFE1
  7317                           indf2	equ	0xFDF
  7318                           postinc2	equ	0xFDE
  7319                           postdec2	equ	0xFDD
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324 ;; *************** function _RADIO_DIO2 *****************
  7325 ;; Defined at:
  7326 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  dioMapping      1   28[BANK0 ] unsigned char 
  7331 ;;  opMode          1   27[BANK0 ] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;Total ram usage:        3 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:   12
  7348 ;; This function calls:
  7349 ;;		_RADIO_FHSSChangeChannel
  7350 ;;		_RADIO_RegisterRead
  7351 ;;		_RADIO_UnhandledInterrupt
  7352 ;; This function is called by:
  7353 ;;		_LORAWAN_Mainloop
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text40
  7358  007CF2                     __ptext40:
  7359                           	opt stack 0
  7360  007CF2                     _RADIO_DIO2:
  7361                           	opt stack 17
  7362                           
  7363                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  7364                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  7365                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  7366                           
  7367                           ;incstack = 0
  7368  007CF2  0E40               	movlw	64
  7369  007CF4  EC82  F043         	call	_RADIO_RegisterRead
  7370  007CF8  0100               	movlb	0	; () banked
  7371  007CFA  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7372  007CFC  90D8               	bcf	status,0,c
  7373  007CFE  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
  7374  007D00  90D8               	bcf	status,0,c
  7375  007D02  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
  7376  007D04  0B03               	andlw	3
  7377  007D06  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  7378                           
  7379                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  7380  007D08  0E01               	movlw	1
  7381  007D0A  EC82  F043         	call	_RADIO_RegisterRead
  7382  007D0E  0100               	movlb	0	; () banked
  7383  007D10  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
  7384                           
  7385                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7386  007D12  0E01               	movlw	1
  7387  007D14  EC82  F043         	call	_RADIO_RegisterRead
  7388  007D18  0100               	movlb	0	; () banked
  7389  007D1A  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
  7390  007D1C  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
  7391  007D1E  0012               	return	
  7392  007D20  D007               	goto	l684
  7393  007D22                     
  7394                           ; BSR set to: 0
  7395                           ;radio_driver_SX1276.c: 1283: case 0x01:
  7396                           ;radio_driver_SX1276.c: 1284: case 0x02:
  7397                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  7398                           
  7399                           ; BSR set to: 0
  7400                           
  7401                           ; BSR set to: 0
  7402                           
  7403                           ; BSR set to: 0
  7404  007D22  EC40  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  7405                           
  7406                           ;radio_driver_SX1276.c: 1286: break;
  7407  007D26  0012               	return	
  7408  007D28                     
  7409                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7410  007D28  0E01               	movlw	1
  7411  007D2A  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7412                           
  7413                           ;radio_driver_SX1276.c: 1290: }
  7414                           
  7415                           ;radio_driver_SX1276.c: 1289: break;
  7416  007D2E  0012               	return	
  7417  007D30                     l684:
  7418  007D30  0100               	movlb	0	; () banked
  7419  007D32  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  7420                           
  7421                           ; Switch size 1, requested type "space"
  7422                           ; Number of cases is 3, Range of values is 0 to 2
  7423                           ; switch strategies available:
  7424                           ; Name         Instructions Cycles
  7425                           ; simple_byte           10     6 (average)
  7426                           ;	Chosen strategy is simple_byte
  7427  007D34  0A00               	xorlw	0	; case 0
  7428  007D36  B4D8               	btfsc	status,2,c
  7429  007D38  D7F4               	goto	l685
  7430  007D3A  0A01               	xorlw	1	; case 1
  7431  007D3C  B4D8               	btfsc	status,2,c
  7432  007D3E  D7F1               	goto	l685
  7433  007D40  0A03               	xorlw	3	; case 2
  7434  007D42  B4D8               	btfsc	status,2,c
  7435  007D44  D7EE               	goto	l685
  7436  007D46  D7F0               	goto	l689
  7437  007D48                     __end_of_RADIO_DIO2:
  7438                           	opt stack 0
  7439                           tosu	equ	0xFFF
  7440                           tosh	equ	0xFFE
  7441                           tosl	equ	0xFFD
  7442                           pclath	equ	0xFFA
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodh	equ	0xFF4
  7448                           prodl	equ	0xFF3
  7449                           intcon	equ	0xFF2
  7450                           intcon2	equ	0xFF1
  7451                           intcon3	equ	0xFF0
  7452                           postinc0	equ	0xFEE
  7453                           wreg	equ	0xFE8
  7454                           postinc1	equ	0xFE6
  7455                           postdec1	equ	0xFE5
  7456                           plusw1	equ	0xFE3
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           postdec2	equ	0xFDD
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _RADIO_DIO1 *****************
  7467 ;; Defined at:
  7468 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  dioMapping      1  108[BANK0 ] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;Total ram usage:        2 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:   17
  7489 ;; This function calls:
  7490 ;;		_RADIO_FHSSChangeChannel
  7491 ;;		_RADIO_RegisterRead
  7492 ;;		_RADIO_RxTimeout
  7493 ;;		_RADIO_UnhandledInterrupt
  7494 ;; This function is called by:
  7495 ;;		_LORAWAN_Mainloop
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text41
  7500  007F3C                     __ptext41:
  7501                           	opt stack 0
  7502  007F3C                     _RADIO_DIO1:
  7503                           	opt stack 12
  7504                           
  7505                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  7506                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  7507                           
  7508                           ;incstack = 0
  7509  007F3C  0E40               	movlw	64
  7510  007F3E  EC82  F043         	call	_RADIO_RegisterRead
  7511  007F42  0100               	movlb	0	; () banked
  7512  007F44  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  7513  007F46  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
  7514  007F48  0B0F               	andlw	15
  7515  007F4A  0B03               	andlw	3
  7516  007F4C  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  7517                           
  7518                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7519  007F4E  0E01               	movlw	1
  7520  007F50  EC82  F043         	call	_RADIO_RegisterRead
  7521  007F54  0100               	movlb	0	; () banked
  7522  007F56  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
  7523  007F58  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
  7524  007F5A  D00B               	goto	l670
  7525  007F5C  D013               	goto	l676
  7526  007F5E                     
  7527                           ; BSR set to: 0
  7528                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  7529                           
  7530                           ; BSR set to: 0
  7531  007F5E  ECB1  F042         	call	_RADIO_RxTimeout	;wreg free
  7532                           
  7533                           ;radio_driver_SX1276.c: 1244: break;
  7534  007F62  0012               	return	
  7535  007F64                     
  7536                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  7537  007F64  EC40  F041         	call	_RADIO_FHSSChangeChannel	;wreg free
  7538                           
  7539                           ;radio_driver_SX1276.c: 1247: break;
  7540  007F68  0012               	return	
  7541  007F6A                     
  7542                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7543  007F6A  0E01               	movlw	1
  7544  007F6C  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7545                           
  7546                           ;radio_driver_SX1276.c: 1251: }
  7547                           
  7548                           ;radio_driver_SX1276.c: 1250: break;
  7549  007F70  0012               	return	
  7550  007F72                     l670:
  7551  007F72  0100               	movlb	0	; () banked
  7552  007F74  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7553                           
  7554                           ; Switch size 1, requested type "space"
  7555                           ; Number of cases is 2, Range of values is 0 to 1
  7556                           ; switch strategies available:
  7557                           ; Name         Instructions Cycles
  7558                           ; simple_byte            7     4 (average)
  7559                           ;	Chosen strategy is simple_byte
  7560  007F76  0A00               	xorlw	0	; case 0
  7561  007F78  B4D8               	btfsc	status,2,c
  7562  007F7A  D7F1               	goto	l671
  7563  007F7C  0A01               	xorlw	1	; case 1
  7564  007F7E  B4D8               	btfsc	status,2,c
  7565  007F80  D7F1               	goto	l673
  7566  007F82  D7F3               	goto	l674
  7567  007F84                     l676:
  7568                           
  7569                           ; BSR set to: 0
  7570                           
  7571                           ; BSR set to: 0
  7572  007F84  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  7573                           
  7574                           ; Switch size 1, requested type "space"
  7575                           ; Number of cases is 1, Range of values is 0 to 0
  7576                           ; switch strategies available:
  7577                           ; Name         Instructions Cycles
  7578                           ; simple_byte            4     3 (average)
  7579                           ;	Chosen strategy is simple_byte
  7580  007F86  0A00               	xorlw	0	; case 0
  7581                           
  7582                           ; BSR set to: 0
  7583  007F88  0012               	return	
  7584  007F8A                     __end_of_RADIO_DIO1:
  7585                           	opt stack 0
  7586                           tosu	equ	0xFFF
  7587                           tosh	equ	0xFFE
  7588                           tosl	equ	0xFFD
  7589                           pclath	equ	0xFFA
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           intcon2	equ	0xFF1
  7598                           intcon3	equ	0xFF0
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           postinc1	equ	0xFE6
  7602                           postdec1	equ	0xFE5
  7603                           plusw1	equ	0xFE3
  7604                           fsr1h	equ	0xFE2
  7605                           fsr1l	equ	0xFE1
  7606                           indf2	equ	0xFDF
  7607                           postinc2	equ	0xFDE
  7608                           postdec2	equ	0xFDD
  7609                           fsr2h	equ	0xFDA
  7610                           fsr2l	equ	0xFD9
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function _RADIO_RxTimeout *****************
  7614 ;; Defined at:
  7615 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:   16
  7636 ;; This function calls:
  7637 ;;		_LORAWAN_RxTimeout
  7638 ;;		_RADIO_RegisterWrite
  7639 ;;		_RADIO_WriteMode
  7640 ;;		_SwTimerStop
  7641 ;; This function is called by:
  7642 ;;		_RADIO_DIO1
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text42
  7647  008562                     __ptext42:
  7648                           	opt stack 0
  7649  008562                     _RADIO_RxTimeout:
  7650                           	opt stack 12
  7651                           
  7652                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7653                           
  7654                           ;incstack = 0
  7655  008562  0101               	movlb	1	; () banked
  7656  008564  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7657  008566  EC96  F043         	call	_SwTimerStop
  7658                           
  7659                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  7660  00856A  0E80               	movlw	128
  7661  00856C  0100               	movlb	0	; () banked
  7662  00856E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7663  008570  0E12               	movlw	18
  7664  008572  EC33  F044         	call	_RADIO_RegisterWrite
  7665                           
  7666                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7667  008576  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7668  00857A  0E00               	movlw	0
  7669  00857C  0100               	movlb	0	; () banked
  7670  00857E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7671  008580  0E00               	movlw	0
  7672  008582  EC0D  F02F         	call	_RADIO_WriteMode
  7673                           
  7674                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  7675  008586  0101               	movlb	1	; () banked
  7676  008588  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7677                           
  7678                           ; BSR set to: 1
  7679                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  7680  00858A  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  7681  00858E  0012               	return		;funcret
  7682  008590                     __end_of_RADIO_RxTimeout:
  7683                           	opt stack 0
  7684                           tosu	equ	0xFFF
  7685                           tosh	equ	0xFFE
  7686                           tosl	equ	0xFFD
  7687                           pclath	equ	0xFFA
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           prodh	equ	0xFF4
  7693                           prodl	equ	0xFF3
  7694                           intcon	equ	0xFF2
  7695                           intcon2	equ	0xFF1
  7696                           intcon3	equ	0xFF0
  7697                           postinc0	equ	0xFEE
  7698                           wreg	equ	0xFE8
  7699                           postinc1	equ	0xFE6
  7700                           postdec1	equ	0xFE5
  7701                           plusw1	equ	0xFE3
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function _RADIO_FHSSChangeChannel *****************
  7712 ;; Defined at:
  7713 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  irqFlags        1   25[BANK0 ] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;Total ram usage:        1 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:   11
  7734 ;; This function calls:
  7735 ;;		_RADIO_RegisterRead
  7736 ;;		_RADIO_RegisterWrite
  7737 ;;		_RADIO_WriteFrequency
  7738 ;; This function is called by:
  7739 ;;		_RADIO_DIO1
  7740 ;;		_RADIO_DIO2
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text43
  7745  008280                     __ptext43:
  7746                           	opt stack 0
  7747  008280                     _RADIO_FHSSChangeChannel:
  7748                           	opt stack 17
  7749                           
  7750                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  7751                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  7752                           
  7753                           ;incstack = 0
  7754  008280  0E12               	movlw	18
  7755  008282  EC82  F043         	call	_RADIO_RegisterRead
  7756  008286  0100               	movlb	0	; () banked
  7757  008288  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  7761  00828A  0101               	movlb	1	; () banked
  7762  00828C  5198               	movf	(_RadioConfiguration+30)& (0+255),w,b
  7763  00828E  1199               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  7764  008290  B4D8               	btfsc	status,2,c
  7765  008292  D00F               	goto	l647
  7766                           
  7767                           ; BSR set to: 1
  7768                           ;radio_driver_SX1276.c: 1164: {
  7769                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  7770  008294  51A9               	movf	(_RadioConfiguration+47)& (0+255),w,b
  7771  008296  11AA               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  7772  008298  B4D8               	btfsc	status,2,c
  7773  00829A  D00B               	goto	l647
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;radio_driver_SX1276.c: 1166: {
  7777                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  7778  00829C  0E00               	movlw	0
  7779  00829E  0100               	movlb	0	; () banked
  7780  0082A0  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  7781  0082A2  0E00               	movlw	0
  7782  0082A4  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  7783  0082A6  0E00               	movlw	0
  7784  0082A8  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  7785  0082AA  0E00               	movlw	0
  7786  0082AC  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  7787  0082AE  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
  7788  0082B2                     l647:
  7789                           
  7790                           ;radio_driver_SX1276.c: 1168: }
  7791                           ;radio_driver_SX1276.c: 1169: }
  7792                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  7793  0082B2  0E02               	movlw	2
  7794  0082B4  0100               	movlb	0	; () banked
  7795  0082B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7796  0082B8  0E12               	movlw	18
  7797  0082BA  EC33  F044         	call	_RADIO_RegisterWrite
  7798  0082BE  0012               	return		;funcret
  7799  0082C0                     __end_of_RADIO_FHSSChangeChannel:
  7800                           	opt stack 0
  7801                           tosu	equ	0xFFF
  7802                           tosh	equ	0xFFE
  7803                           tosl	equ	0xFFD
  7804                           pclath	equ	0xFFA
  7805                           tblptru	equ	0xFF8
  7806                           tblptrh	equ	0xFF7
  7807                           tblptrl	equ	0xFF6
  7808                           tablat	equ	0xFF5
  7809                           prodh	equ	0xFF4
  7810                           prodl	equ	0xFF3
  7811                           intcon	equ	0xFF2
  7812                           intcon2	equ	0xFF1
  7813                           intcon3	equ	0xFF0
  7814                           postinc0	equ	0xFEE
  7815                           wreg	equ	0xFE8
  7816                           postinc1	equ	0xFE6
  7817                           postdec1	equ	0xFE5
  7818                           plusw1	equ	0xFE3
  7819                           fsr1h	equ	0xFE2
  7820                           fsr1l	equ	0xFE1
  7821                           indf2	equ	0xFDF
  7822                           postinc2	equ	0xFDE
  7823                           postdec2	equ	0xFDD
  7824                           fsr2h	equ	0xFDA
  7825                           fsr2l	equ	0xFD9
  7826                           status	equ	0xFD8
  7827                           
  7828 ;; *************** function _RADIO_DIO0 *****************
  7829 ;; Defined at:
  7830 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  opMode          1  152[BANK0 ] unsigned char 
  7835 ;;  dioMapping      1  151[BANK0 ] unsigned char 
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;Total ram usage:        4 bytes
  7850 ;; Hardware stack levels used:    1
  7851 ;; Hardware stack levels required when called:   17
  7852 ;; This function calls:
  7853 ;;		_RADIO_FSKPacketSent
  7854 ;;		_RADIO_FSKPayloadReady
  7855 ;;		_RADIO_RegisterRead
  7856 ;;		_RADIO_RxDone
  7857 ;;		_RADIO_TxDone
  7858 ;;		_RADIO_UnhandledInterrupt
  7859 ;; This function is called by:
  7860 ;;		_LORAWAN_Mainloop
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text44
  7865  006ECE                     __ptext44:
  7866                           	opt stack 0
  7867  006ECE                     _RADIO_DIO0:
  7868                           	opt stack 12
  7869                           
  7870                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  7871                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  7872                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  7873                           
  7874                           ;incstack = 0
  7875  006ECE  0E40               	movlw	64
  7876  006ED0  EC82  F043         	call	_RADIO_RegisterRead
  7877  006ED4  0100               	movlb	0	; () banked
  7878  006ED6  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
  7879  006ED8  0E06               	movlw	6
  7880  006EDA  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  7881  006EDC                     u19865:
  7882  006EDC  90D8               	bcf	status,0,c
  7883  006EDE  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
  7884  006EE0  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  7885  006EE2  D7FC               	goto	u19865
  7886  006EE4  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
  7887  006EE6  0B03               	andlw	3
  7888  006EE8  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  7889                           
  7890                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  7891  006EEA  0E01               	movlw	1
  7892  006EEC  EC82  F043         	call	_RADIO_RegisterRead
  7893  006EF0  0100               	movlb	0	; () banked
  7894  006EF2  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  7898  006EF4  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  7899  006EF6  D00B               	goto	l652
  7900  006EF8  D02C               	goto	l658
  7901  006EFA                     
  7902                           ; BSR set to: 0
  7903                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  7904                           
  7905                           ; BSR set to: 0
  7906  006EFA  ECE6  F031         	call	_RADIO_RxDone	;wreg free
  7907                           
  7908                           ;radio_driver_SX1276.c: 1191: break;
  7909  006EFE  0012               	return	
  7910  006F00                     
  7911                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  7912  006F00  ECEA  F02C         	call	_RADIO_TxDone	;wreg free
  7913                           
  7914                           ;radio_driver_SX1276.c: 1194: break;
  7915  006F04  0012               	return	
  7916  006F06                     
  7917                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7918  006F06  0E01               	movlw	1
  7919  006F08  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7920                           
  7921                           ;radio_driver_SX1276.c: 1198: }
  7922                           
  7923                           ;radio_driver_SX1276.c: 1197: break;
  7924  006F0C  0012               	return	
  7925  006F0E                     l652:
  7926  006F0E  0100               	movlb	0	; () banked
  7927  006F10  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  7928                           
  7929                           ; Switch size 1, requested type "space"
  7930                           ; Number of cases is 2, Range of values is 0 to 1
  7931                           ; switch strategies available:
  7932                           ; Name         Instructions Cycles
  7933                           ; simple_byte            7     4 (average)
  7934                           ;	Chosen strategy is simple_byte
  7935  006F12  0A00               	xorlw	0	; case 0
  7936  006F14  B4D8               	btfsc	status,2,c
  7937  006F16  D7F1               	goto	l653
  7938  006F18  0A01               	xorlw	1	; case 1
  7939  006F1A  B4D8               	btfsc	status,2,c
  7940  006F1C  D7F1               	goto	l655
  7941  006F1E  D7F3               	goto	l656
  7942  006F20                     
  7943                           ; BSR set to: 0
  7944                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  7945                           
  7946                           ; BSR set to: 0
  7947  006F20  0E07               	movlw	7
  7948  006F22  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  7949                           
  7950                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  7951  006F24  0E03               	movlw	3
  7952  006F26  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  7953  006F28  A4D8               	btfss	status,2,c
  7954  006F2A  D003               	goto	l660
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;radio_driver_SX1276.c: 1209: {
  7958                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  7959  006F2C  ECBE  F02B         	call	_RADIO_FSKPacketSent	;wreg free
  7960                           
  7961                           ;radio_driver_SX1276.c: 1212: }
  7962  006F30  0012               	return	
  7963  006F32                     l660:
  7964                           
  7965                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  7966  006F32  0E05               	movlw	5
  7967  006F34  0100               	movlb	0	; () banked
  7968  006F36  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  7969  006F38  A4D8               	btfss	status,2,c
  7970  006F3A  D003               	goto	l662
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;radio_driver_SX1276.c: 1214: {
  7974                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  7975  006F3C  EC29  F035         	call	_RADIO_FSKPayloadReady	;wreg free
  7976                           
  7977                           ;radio_driver_SX1276.c: 1217: }
  7978  006F40  0012               	return	
  7979  006F42                     l662:
  7980                           
  7981                           ;radio_driver_SX1276.c: 1218: else
  7982                           ;radio_driver_SX1276.c: 1219: {
  7983                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  7984  006F42  0E00               	movlw	0
  7985  006F44  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7986                           
  7987                           ;radio_driver_SX1276.c: 1221: }
  7988                           ;radio_driver_SX1276.c: 1222: break;
  7989  006F48  0012               	return	
  7990  006F4A                     
  7991                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  7992  006F4A  0E00               	movlw	0
  7993  006F4C  ECF1  F041         	call	_RADIO_UnhandledInterrupt
  7994                           
  7995                           ;radio_driver_SX1276.c: 1226: }
  7996                           
  7997                           ;radio_driver_SX1276.c: 1225: break;
  7998  006F50  0012               	return	
  7999  006F52                     l658:
  8000  006F52  0100               	movlb	0	; () banked
  8001  006F54  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8002                           
  8003                           ; Switch size 1, requested type "space"
  8004                           ; Number of cases is 1, Range of values is 0 to 0
  8005                           ; switch strategies available:
  8006                           ; Name         Instructions Cycles
  8007                           ; simple_byte            4     3 (average)
  8008                           ;	Chosen strategy is simple_byte
  8009  006F56  0A00               	xorlw	0	; case 0
  8010  006F58  B4D8               	btfsc	status,2,c
  8011  006F5A  D7E2               	goto	l659
  8012  006F5C  D7F6               	goto	l665
  8013  006F5E                     __end_of_RADIO_DIO0:
  8014                           	opt stack 0
  8015                           tosu	equ	0xFFF
  8016                           tosh	equ	0xFFE
  8017                           tosl	equ	0xFFD
  8018                           pclath	equ	0xFFA
  8019                           tblptru	equ	0xFF8
  8020                           tblptrh	equ	0xFF7
  8021                           tblptrl	equ	0xFF6
  8022                           tablat	equ	0xFF5
  8023                           prodh	equ	0xFF4
  8024                           prodl	equ	0xFF3
  8025                           intcon	equ	0xFF2
  8026                           intcon2	equ	0xFF1
  8027                           intcon3	equ	0xFF0
  8028                           postinc0	equ	0xFEE
  8029                           wreg	equ	0xFE8
  8030                           postinc1	equ	0xFE6
  8031                           postdec1	equ	0xFE5
  8032                           plusw1	equ	0xFE3
  8033                           fsr1h	equ	0xFE2
  8034                           fsr1l	equ	0xFE1
  8035                           indf2	equ	0xFDF
  8036                           postinc2	equ	0xFDE
  8037                           postdec2	equ	0xFDD
  8038                           fsr2h	equ	0xFDA
  8039                           fsr2l	equ	0xFD9
  8040                           status	equ	0xFD8
  8041                           
  8042 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8043 ;; Defined at:
  8044 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  modulation      1    wreg     enum E6984
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  modulation      1    4[BANK0 ] enum E6984
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;Total ram usage:        1 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:   10
  8065 ;; This function calls:
  8066 ;;		_RADIO_RegisterWrite
  8067 ;; This function is called by:
  8068 ;;		_RADIO_DIO0
  8069 ;;		_RADIO_DIO1
  8070 ;;		_RADIO_DIO2
  8071 ;;		_RADIO_DIO3
  8072 ;;		_RADIO_DIO4
  8073 ;;		_RADIO_DIO5
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text45
  8078  0083E2                     __ptext45:
  8079                           	opt stack 0
  8080  0083E2                     _RADIO_UnhandledInterrupt:
  8081                           	opt stack 18
  8082                           
  8083                           ;incstack = 0
  8084                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8085  0083E2  0100               	movlb	0	; () banked
  8086  0083E4  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8087                           
  8088                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8089  0083E6  0100               	movlb	0	; () banked
  8090  0083E8  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8091  0083EA  A4D8               	btfss	status,2,c
  8092  0083EC  D006               	goto	l641
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;radio_driver_SX1276.c: 1145: {
  8096                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8097  0083EE  0EFF               	movlw	255
  8098  0083F0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8099  0083F2  0E12               	movlw	18
  8100  0083F4  EC33  F044         	call	_RADIO_RegisterWrite
  8101                           
  8102                           ;radio_driver_SX1276.c: 1147: }
  8103  0083F8  0012               	return	
  8104  0083FA                     l641:
  8105                           
  8106                           ;radio_driver_SX1276.c: 1148: else
  8107                           ;radio_driver_SX1276.c: 1149: {
  8108                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8109  0083FA  0EFF               	movlw	255
  8110  0083FC  0100               	movlb	0	; () banked
  8111  0083FE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8112  008400  0E3E               	movlw	62
  8113  008402  EC33  F044         	call	_RADIO_RegisterWrite
  8114                           
  8115                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8116  008406  0EFF               	movlw	255
  8117  008408  0100               	movlb	0	; () banked
  8118  00840A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8119  00840C  0E3F               	movlw	63
  8120  00840E  EC33  F044         	call	_RADIO_RegisterWrite
  8121  008412  0012               	return	
  8122  008414                     __end_of_RADIO_UnhandledInterrupt:
  8123                           	opt stack 0
  8124                           tosu	equ	0xFFF
  8125                           tosh	equ	0xFFE
  8126                           tosl	equ	0xFFD
  8127                           pclath	equ	0xFFA
  8128                           tblptru	equ	0xFF8
  8129                           tblptrh	equ	0xFF7
  8130                           tblptrl	equ	0xFF6
  8131                           tablat	equ	0xFF5
  8132                           prodh	equ	0xFF4
  8133                           prodl	equ	0xFF3
  8134                           intcon	equ	0xFF2
  8135                           intcon2	equ	0xFF1
  8136                           intcon3	equ	0xFF0
  8137                           postinc0	equ	0xFEE
  8138                           wreg	equ	0xFE8
  8139                           postinc1	equ	0xFE6
  8140                           postdec1	equ	0xFE5
  8141                           plusw1	equ	0xFE3
  8142                           fsr1h	equ	0xFE2
  8143                           fsr1l	equ	0xFE1
  8144                           indf2	equ	0xFDF
  8145                           postinc2	equ	0xFDE
  8146                           postdec2	equ	0xFDD
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8
  8150                           
  8151 ;; *************** function _RADIO_TxDone *****************
  8152 ;; Defined at:
  8153 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;		None
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;Total ram usage:       12 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:   15
  8174 ;; This function calls:
  8175 ;;		_LORAWAN_TxDone
  8176 ;;		_RADIO_RegisterWrite
  8177 ;;		_RADIO_WriteMode
  8178 ;;		_SwTimerReadValue
  8179 ;;		_SwTimerStop
  8180 ;;		___lmul
  8181 ;; This function is called by:
  8182 ;;		_RADIO_DIO0
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text46
  8187  0059D4                     __ptext46:
  8188                           	opt stack 0
  8189  0059D4                     _RADIO_TxDone:
  8190                           	opt stack 13
  8191                           
  8192                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8193                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8194                           
  8195                           ;incstack = 0
  8196  0059D4  0101               	movlb	1	; () banked
  8197  0059D6  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8198  0059D8  EC96  F043         	call	_SwTimerStop
  8199                           
  8200                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8201  0059DC  0E08               	movlw	8
  8202  0059DE  0100               	movlb	0	; () banked
  8203  0059E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8204  0059E2  0E12               	movlw	18
  8205  0059E4  EC33  F044         	call	_RADIO_RegisterWrite
  8206                           
  8207                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8208  0059E8  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8209  0059EC  0E00               	movlw	0
  8210  0059EE  0100               	movlb	0	; () banked
  8211  0059F0  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8212  0059F2  0E00               	movlw	0
  8213  0059F4  EC0D  F02F         	call	_RADIO_WriteMode
  8214                           
  8215                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8216  0059F8  0101               	movlb	1	; () banked
  8217  0059FA  919D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8221  0059FC  B99D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8222  0059FE  0012               	return	
  8223                           
  8224                           ; BSR set to: 1
  8225                           ;radio_driver_SX1276.c: 1087: {
  8226                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8227  005A00  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8228  005A02  EC60  F041         	call	_SwTimerReadValue
  8229  005A06  0100               	movlb	0	; () banked
  8230  005A08  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8231  005A0A  E108               	bnz	u19150
  8232  005A0C  0E1F               	movlw	31
  8233  005A0E  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
  8234  005A10  0EAC               	movlw	172
  8235  005A12  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8236  005A14  0EDF               	movlw	223
  8237  005A16  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8238  005A18  A0D8               	btfss	status,0,c
  8239  005A1A  D021               	goto	l616
  8240  005A1C                     u19150:
  8241                           
  8242                           ; BSR set to: 0
  8243  005A1C  0101               	movlb	1	; () banked
  8244  005A1E  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8245  005A20  EC60  F041         	call	_SwTimerReadValue
  8246  005A24  0E0D               	movlw	13
  8247  005A26  D006               	goto	u19160
  8248  005A28                     u19165:
  8249  005A28  0100               	movlb	0	; () banked
  8250  005A2A  90D8               	bcf	status,0,c
  8251  005A2C  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  8252  005A2E  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  8253  005A30  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  8254  005A32  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
  8255  005A34                     u19160:
  8256  005A34  2EE8               	decfsz	wreg,f,c
  8257  005A36  D7F8               	goto	u19165
  8258  005A38  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8259  005A3C  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8260  005A40  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8261  005A44  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8262  005A48  0E7D               	movlw	125
  8263  005A4A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8264  005A4C  0E00               	movlw	0
  8265  005A4E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8266  005A50  0E00               	movlw	0
  8267  005A52  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8268  005A54  0E00               	movlw	0
  8269  005A56  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8270  005A58  EC4D  F03E         	call	___lmul	;wreg free
  8271  005A5C  D021               	goto	L5
  8272  005A5E                     l616:
  8273  005A5E  0101               	movlb	1	; () banked
  8274  005A60  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8275  005A62  EC60  F041         	call	_SwTimerReadValue
  8276  005A66  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
  8277  005A6A  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  8278  005A6E  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  8279  005A72  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  8280  005A76  0E7D               	movlw	125
  8281  005A78  0100               	movlb	0	; () banked
  8282  005A7A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
  8283  005A7C  0E00               	movlw	0
  8284  005A7E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8285  005A80  0E00               	movlw	0
  8286  005A82  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8287  005A84  0E00               	movlw	0
  8288  005A86  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8289  005A88  EC4D  F03E         	call	___lmul	;wreg free
  8290  005A8C  0E0D               	movlw	13
  8291  005A8E  D006               	goto	u19170
  8292  005A90                     u19175:
  8293  005A90  0100               	movlb	0	; () banked
  8294  005A92  90D8               	bcf	status,0,c
  8295  005A94  339D               	rrcf	(?___lmul+3)& (0+255),f,b
  8296  005A96  339C               	rrcf	(?___lmul+2)& (0+255),f,b
  8297  005A98  339B               	rrcf	(?___lmul+1)& (0+255),f,b
  8298  005A9A  339A               	rrcf	?___lmul& (0+255),f,b
  8299  005A9C                     u19170:
  8300  005A9C  2EE8               	decfsz	wreg,f,c
  8301  005A9E  D7F8               	goto	u19175
  8302  005AA0                     L5:
  8303  005AA0  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$1094
  8304  005AA4  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$1094+1
  8305  005AA8  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$1094+2
  8306  005AAC  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$1094+3
  8307                           
  8308                           ; BSR set to: 0
  8309  005AB0  C0EB  F0E3         	movff	_RADIO_TxDone$1094,??_RADIO_TxDone
  8310  005AB4  C0EC  F0E4         	movff	_RADIO_TxDone$1094+1,??_RADIO_TxDone+1
  8311  005AB8  C0ED  F0E5         	movff	_RADIO_TxDone$1094+2,??_RADIO_TxDone+2
  8312  005ABC  C0EE  F0E6         	movff	_RADIO_TxDone$1094+3,??_RADIO_TxDone+3
  8313  005AC0  0100               	movlb	0	; () banked
  8314  005AC2  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
  8315  005AC4  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  8316  005AC6  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  8317  005AC8  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  8318  005ACA  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
  8319  005ACC  0E00               	movlw	0
  8320  005ACE  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  8321  005AD0  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  8322  005AD2  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  8323  005AD4  0E20               	movlw	32
  8324  005AD6  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
  8325  005AD8  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  8326  005ADA  0E4E               	movlw	78
  8327  005ADC  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  8328  005ADE  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  8329  005AE0  0E00               	movlw	0
  8330  005AE2  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  8331  005AE4  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  8332  005AE6  0E00               	movlw	0
  8333  005AE8  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  8334  005AEA  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  8338  005AEC  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  8339  005AF0  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  8340  005AF4  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
  8341  005AF8  0012               	return	
  8342  005AFA                     __end_of_RADIO_TxDone:
  8343                           	opt stack 0
  8344                           tosu	equ	0xFFF
  8345                           tosh	equ	0xFFE
  8346                           tosl	equ	0xFFD
  8347                           pclath	equ	0xFFA
  8348                           tblptru	equ	0xFF8
  8349                           tblptrh	equ	0xFF7
  8350                           tblptrl	equ	0xFF6
  8351                           tablat	equ	0xFF5
  8352                           prodh	equ	0xFF4
  8353                           prodl	equ	0xFF3
  8354                           intcon	equ	0xFF2
  8355                           intcon2	equ	0xFF1
  8356                           intcon3	equ	0xFF0
  8357                           postinc0	equ	0xFEE
  8358                           wreg	equ	0xFE8
  8359                           postinc1	equ	0xFE6
  8360                           postdec1	equ	0xFE5
  8361                           plusw1	equ	0xFE3
  8362                           fsr1h	equ	0xFE2
  8363                           fsr1l	equ	0xFE1
  8364                           indf2	equ	0xFDF
  8365                           postinc2	equ	0xFDE
  8366                           postdec2	equ	0xFDD
  8367                           fsr2h	equ	0xFDA
  8368                           fsr2l	equ	0xFD9
  8369                           status	equ	0xFD8
  8370                           
  8371 ;; *************** function _RADIO_RxDone *****************
  8372 ;; Defined at:
  8373 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  i               1  148[BANK0 ] unsigned char 
  8378 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1    wreg      void 
  8381 ;; Registers used:
  8382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8392 ;;Total ram usage:        2 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:   16
  8395 ;; This function calls:
  8396 ;;		_HALSPICSAssert
  8397 ;;		_HALSPICSDeassert
  8398 ;;		_HALSPISend
  8399 ;;		_LORAWAN_RxDone
  8400 ;;		_RADIO_RegisterRead
  8401 ;;		_RADIO_RegisterWrite
  8402 ;;		_RADIO_WriteMode
  8403 ;;		_SwTimerStop
  8404 ;;		___abdiv
  8405 ;; This function is called by:
  8406 ;;		_RADIO_DIO0
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text47
  8411  0063CC                     __ptext47:
  8412                           	opt stack 0
  8413  0063CC                     _RADIO_RxDone:
  8414                           	opt stack 12
  8415                           
  8416                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  8417                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  8418                           
  8419                           ;incstack = 0
  8420  0063CC  0E12               	movlw	18
  8421  0063CE  EC82  F043         	call	_RADIO_RegisterRead
  8422  0063D2  0100               	movlb	0	; () banked
  8423  0063D4  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  8424                           
  8425                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  8426  0063D6  0E70               	movlw	112
  8427  0063D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8428  0063DA  0E12               	movlw	18
  8429  0063DC  EC33  F044         	call	_RADIO_RegisterWrite
  8430                           
  8431                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  8432  0063E0  0100               	movlb	0	; () banked
  8433  0063E2  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  8434  0063E4  0B50               	andlw	80
  8435  0063E6  0A50               	xorlw	80
  8436  0063E8  A4D8               	btfss	status,2,c
  8437  0063EA  0012               	return	
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;radio_driver_SX1276.c: 969: {
  8441                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8442  0063EC  0101               	movlb	1	; () banked
  8443  0063EE  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8444  0063F0  EC96  F043         	call	_SwTimerStop
  8445                           
  8446                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  8447  0063F4  0E1C               	movlw	28
  8448  0063F6  EC82  F043         	call	_RADIO_RegisterRead
  8449  0063FA  0100               	movlb	0	; () banked
  8450  0063FC  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  8454  0063FE  0101               	movlb	1	; () banked
  8455  006400  5196               	movf	(_RadioConfiguration+28)& (0+255),w,b
  8456  006402  B4D8               	btfsc	status,2,c
  8457  006404  D004               	goto	u19070
  8458                           
  8459                           ; BSR set to: 1
  8460  006406  0100               	movlb	0	; () banked
  8461  006408  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  8462                           
  8463                           ; BSR set to: 0
  8464  00640A  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
  8465  00640C  D03C               	goto	l588
  8466  00640E                     u19070:
  8467                           
  8468                           ;radio_driver_SX1276.c: 976: {
  8469                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  8470                           
  8471                           ; BSR set to: 0
  8472  00640E  0E13               	movlw	19
  8473  006410  EC82  F043         	call	_RADIO_RegisterRead
  8474  006414  0101               	movlb	1	; () banked
  8475  006416  6F9E               	movwf	(_RadioConfiguration+36)& (0+255),b
  8476                           
  8477                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  8478  006418  0E00               	movlw	0
  8479  00641A  0100               	movlb	0	; () banked
  8480  00641C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8481  00641E  0E0D               	movlw	13
  8482  006420  EC33  F044         	call	_RADIO_RegisterWrite
  8483                           
  8484                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  8485  006424  EC1D  F046         	call	_HALSPICSAssert	;wreg free
  8486                           
  8487                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  8488  006428  0E00               	movlw	0
  8489  00642A  EC9C  F045         	call	_HALSPISend
  8490                           
  8491                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8492  00642E  0E00               	movlw	0
  8493  006430  0100               	movlb	0	; () banked
  8494  006432  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
  8495  006434  D00F               	goto	l591
  8496  006436                     
  8497                           ; BSR set to: 0
  8498                           ;radio_driver_SX1276.c: 990: {
  8499                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8500                           
  8501                           ; BSR set to: 0
  8502  006436  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
  8503  006438  0D01               	mullw	1
  8504  00643A  50F3               	movf	prodl,w,c
  8505  00643C  0101               	movlb	1	; () banked
  8506  00643E  259F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8507  006440  6ED9               	movwf	fsr2l,c
  8508  006442  50F4               	movf	prodh,w,c
  8509  006444  21A0               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8510  006446  6EDA               	movwf	fsr2h,c
  8511  006448  0EFF               	movlw	255
  8512  00644A  EC9C  F045         	call	_HALSPISend
  8513  00644E  6EDF               	movwf	indf2,c
  8514  006450  0100               	movlb	0	; () banked
  8515  006452  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
  8516  006454                     l591:
  8517                           
  8518                           ; BSR set to: 0
  8519                           
  8520                           ; BSR set to: 0
  8521  006454  0101               	movlb	1	; () banked
  8522  006456  519E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  8523  006458  0100               	movlb	0	; () banked
  8524  00645A  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
  8525  00645C  A0D8               	btfss	status,0,c
  8526  00645E  D7EB               	goto	l592
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;radio_driver_SX1276.c: 992: }
  8530                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  8531                           
  8532                           ; BSR set to: 0
  8533  006460  EC1B  F046         	call	_HALSPICSDeassert	;wreg free
  8534                           
  8535                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  8536  006464  0101               	movlb	1	; () banked
  8537  006466  859D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8538                           
  8539                           ; BSR set to: 1
  8540                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  8541  006468  0E19               	movlw	25
  8542  00646A  EC82  F043         	call	_RADIO_RegisterRead
  8543  00646E  0101               	movlb	1	; () banked
  8544  006470  6FAC               	movwf	(_RadioConfiguration+50)& (0+255),b
  8545                           
  8546                           ; BSR set to: 1
  8547                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  8548  006472  0E04               	movlw	4
  8549  006474  0100               	movlb	0	; () banked
  8550  006476  6F60               	movwf	___abdiv@divisor& (0+255),b
  8551  006478  0101               	movlb	1	; () banked
  8552  00647A  51AC               	movf	(_RadioConfiguration+50)& (0+255),w,b
  8553  00647C  EC0E  F03C         	call	___abdiv
  8554  006480  0101               	movlb	1	; () banked
  8555  006482  6FAC               	movwf	(_RadioConfiguration+50)& (0+255),b
  8556                           
  8557                           ;radio_driver_SX1276.c: 998: }
  8558  006484  D002               	goto	l594
  8559  006486                     l588:
  8560                           
  8561                           ;radio_driver_SX1276.c: 999: else
  8562                           ;radio_driver_SX1276.c: 1000: {
  8563                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  8564                           
  8565                           ; BSR set to: 1
  8566  006486  0101               	movlb	1	; () banked
  8567  006488  879D               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  8568  00648A                     l594:
  8569                           
  8570                           ; BSR set to: 1
  8571                           ;radio_driver_SX1276.c: 1003: }
  8572                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8573                           
  8574                           ; BSR set to: 1
  8575  00648A  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8576  00648E  0E00               	movlw	0
  8577  006490  0100               	movlb	0	; () banked
  8578  006492  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8579  006494  0E00               	movlw	0
  8580  006496  EC0D  F02F         	call	_RADIO_WriteMode
  8581                           
  8582                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  8583  00649A  0101               	movlb	1	; () banked
  8584  00649C  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  8588  00649E  C19F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  8589  0064A2  C1A0  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  8590  0064A6  C19E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  8591  0064AA  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  8592  0064AE  0012               	return	
  8593  0064B0                     __end_of_RADIO_RxDone:
  8594                           	opt stack 0
  8595                           tosu	equ	0xFFF
  8596                           tosh	equ	0xFFE
  8597                           tosl	equ	0xFFD
  8598                           pclath	equ	0xFFA
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           intcon2	equ	0xFF1
  8607                           intcon3	equ	0xFF0
  8608                           postinc0	equ	0xFEE
  8609                           wreg	equ	0xFE8
  8610                           postinc1	equ	0xFE6
  8611                           postdec1	equ	0xFE5
  8612                           plusw1	equ	0xFE3
  8613                           fsr1h	equ	0xFE2
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function ___abdiv *****************
  8623 ;; Defined at:
  8624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  dividend        1    wreg     char 
  8627 ;;  divisor         1    0[BANK0 ] char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  dividend        1    6[BANK0 ] char 
  8630 ;;  quotient        1    5[BANK0 ] char 
  8631 ;;  sign            1    4[BANK0 ] unsigned char 
  8632 ;;  counter         1    3[BANK0 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      char 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8642 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;Total ram usage:        7 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    7
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_RADIO_RxDone
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text48
  8657  00781C                     __ptext48:
  8658                           	opt stack 0
  8659  00781C                     ___abdiv:
  8660                           	opt stack 20
  8661                           
  8662                           ;incstack = 0
  8663                           ;___abdiv@dividend stored from wreg
  8664  00781C  0100               	movlb	0	; () banked
  8665  00781E  6F66               	movwf	___abdiv@dividend& (0+255),b
  8666  007820  0E00               	movlw	0
  8667  007822  0100               	movlb	0	; () banked
  8668  007824  6F64               	movwf	___abdiv@sign& (0+255),b
  8669                           
  8670                           ; BSR set to: 0
  8671  007826  AF60               	btfss	___abdiv@divisor& (0+255),7,b
  8672  007828  D003               	goto	l2519
  8673                           
  8674                           ; BSR set to: 0
  8675  00782A  6D60               	negf	___abdiv@divisor& (0+255),b
  8676                           
  8677                           ; BSR set to: 0
  8678  00782C  0E01               	movlw	1
  8679  00782E  6F64               	movwf	___abdiv@sign& (0+255),b
  8680  007830                     l2519:
  8681                           
  8682                           ; BSR set to: 0
  8683                           
  8684                           ; BSR set to: 0
  8685  007830  AF66               	btfss	___abdiv@dividend& (0+255),7,b
  8686  007832  D003               	goto	l2520
  8687                           
  8688                           ; BSR set to: 0
  8689  007834  6D66               	negf	___abdiv@dividend& (0+255),b
  8690                           
  8691                           ; BSR set to: 0
  8692  007836  0E01               	movlw	1
  8693  007838  1B64               	xorwf	___abdiv@sign& (0+255),f,b
  8694  00783A                     l2520:
  8695                           
  8696                           ; BSR set to: 0
  8697                           
  8698                           ; BSR set to: 0
  8699  00783A  0E00               	movlw	0
  8700  00783C  6F65               	movwf	___abdiv@quotient& (0+255),b
  8701                           
  8702                           ; BSR set to: 0
  8703  00783E  5160               	movf	___abdiv@divisor& (0+255),w,b
  8704  007840  B4D8               	btfsc	status,2,c
  8705  007842  D01A               	goto	l2527
  8706                           
  8707                           ; BSR set to: 0
  8708  007844  0E01               	movlw	1
  8709  007846  6F63               	movwf	___abdiv@counter& (0+255),b
  8710  007848  D003               	goto	l2522
  8711  00784A                     
  8712                           ; BSR set to: 0
  8713                           
  8714                           ; BSR set to: 0
  8715  00784A  90D8               	bcf	status,0,c
  8716  00784C  3760               	rlcf	___abdiv@divisor& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  00784E  2B63               	incf	___abdiv@counter& (0+255),f,b
  8720  007850                     l2522:
  8721                           
  8722                           ; BSR set to: 0
  8723                           
  8724                           ; BSR set to: 0
  8725  007850  C060  F061         	movff	___abdiv@divisor,??___abdiv
  8726  007854  6B62               	clrf	(??___abdiv+1)& (0+255),b
  8727  007856  BF61               	btfsc	??___abdiv& (0+255),7,b
  8728  007858  0762               	decf	(??___abdiv+1)& (0+255),f,b
  8729  00785A  AF61               	btfss	??___abdiv& (0+255),7,b
  8730  00785C  D7F6               	goto	l2523
  8731  00785E                     u18990:
  8732                           
  8733                           ; BSR set to: 0
  8734                           
  8735                           ; BSR set to: 0
  8736                           
  8737                           ; BSR set to: 0
  8738  00785E  90D8               	bcf	status,0,c
  8739  007860  3765               	rlcf	___abdiv@quotient& (0+255),f,b
  8740  007862  5160               	movf	___abdiv@divisor& (0+255),w,b
  8741  007864  5D66               	subwf	___abdiv@dividend& (0+255),w,b
  8742  007866  A0D8               	btfss	status,0,c
  8743  007868  D003               	goto	l2526
  8744                           
  8745                           ; BSR set to: 0
  8746  00786A  5160               	movf	___abdiv@divisor& (0+255),w,b
  8747  00786C  5F66               	subwf	___abdiv@dividend& (0+255),f,b
  8748                           
  8749                           ; BSR set to: 0
  8750  00786E  8165               	bsf	___abdiv@quotient& (0+255),0,b
  8751  007870                     l2526:
  8752                           
  8753                           ; BSR set to: 0
  8754                           
  8755                           ; BSR set to: 0
  8756  007870  90D8               	bcf	status,0,c
  8757  007872  3360               	rrcf	___abdiv@divisor& (0+255),f,b
  8758                           
  8759                           ; BSR set to: 0
  8760  007874  2F63               	decfsz	___abdiv@counter& (0+255),f,b
  8761  007876  D7F3               	goto	u18990
  8762  007878                     l2527:
  8763                           
  8764                           ; BSR set to: 0
  8765                           
  8766                           ; BSR set to: 0
  8767                           
  8768                           ; BSR set to: 0
  8769  007878  5164               	movf	___abdiv@sign& (0+255),w,b
  8770  00787A  A4D8               	btfss	status,2,c
  8771                           
  8772                           ; BSR set to: 0
  8773  00787C  6D65               	negf	___abdiv@quotient& (0+255),b
  8774                           
  8775                           ; BSR set to: 0
  8776                           
  8777                           ; BSR set to: 0
  8778  00787E  5165               	movf	___abdiv@quotient& (0+255),w,b
  8779  007880  0012               	return	
  8780  007882                     __end_of___abdiv:
  8781                           	opt stack 0
  8782                           tosu	equ	0xFFF
  8783                           tosh	equ	0xFFE
  8784                           tosl	equ	0xFFD
  8785                           pclath	equ	0xFFA
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           prodh	equ	0xFF4
  8791                           prodl	equ	0xFF3
  8792                           intcon	equ	0xFF2
  8793                           intcon2	equ	0xFF1
  8794                           intcon3	equ	0xFF0
  8795                           postinc0	equ	0xFEE
  8796                           wreg	equ	0xFE8
  8797                           postinc1	equ	0xFE6
  8798                           postdec1	equ	0xFE5
  8799                           plusw1	equ	0xFE3
  8800                           fsr1h	equ	0xFE2
  8801                           fsr1l	equ	0xFE1
  8802                           indf2	equ	0xFDF
  8803                           postinc2	equ	0xFDE
  8804                           postdec2	equ	0xFDD
  8805                           fsr2h	equ	0xFDA
  8806                           fsr2l	equ	0xFD9
  8807                           status	equ	0xFD8
  8808                           
  8809 ;; *************** function _RADIO_FSKPayloadReady *****************
  8810 ;; Defined at:
  8811 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;  i               1  148[BANK0 ] unsigned char 
  8816 ;;  irqFlags        1  147[BANK0 ] unsigned char 
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;Total ram usage:        2 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:   16
  8833 ;; This function calls:
  8834 ;;		_HALSPICSAssert
  8835 ;;		_HALSPICSDeassert
  8836 ;;		_HALSPISend
  8837 ;;		_LORAWAN_RxDone
  8838 ;;		_LORAWAN_RxTimeout
  8839 ;;		_RADIO_RegisterRead
  8840 ;;		_RADIO_WriteMode
  8841 ;;		_SwTimerStop
  8842 ;; This function is called by:
  8843 ;;		_RADIO_DIO0
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text49
  8848  006A52                     __ptext49:
  8849                           	opt stack 0
  8850  006A52                     _RADIO_FSKPayloadReady:
  8851                           	opt stack 12
  8852                           
  8853                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  8854                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  8855                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;incstack = 0
  8859  006A52  0E3F               	movlw	63
  8860  006A54  EC82  F043         	call	_RADIO_RegisterRead
  8861  006A58  0100               	movlb	0	; () banked
  8862  006A5A  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  8866  006A5C  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  8867  006A5E  0012               	return	
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;radio_driver_SX1276.c: 1017: {
  8871                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8872  006A60  0101               	movlb	1	; () banked
  8873  006A62  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8874  006A64  EC96  F043         	call	_SwTimerStop
  8875                           
  8876                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  8877  006A68  0101               	movlb	1	; () banked
  8878  006A6A  51A2               	movf	(_RadioConfiguration+40)& (0+255),w,b
  8879  006A6C  EC96  F043         	call	_SwTimerStop
  8880                           
  8881                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  8882  006A70  EC1D  F046         	call	_HALSPICSAssert	;wreg free
  8883                           
  8884                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  8885  006A74  0E00               	movlw	0
  8886  006A76  EC9C  F045         	call	_HALSPISend
  8887                           
  8888                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  8889  006A7A  0EFF               	movlw	255
  8890  006A7C  EC9C  F045         	call	_HALSPISend
  8891  006A80  0101               	movlb	1	; () banked
  8892  006A82  6F9E               	movwf	(_RadioConfiguration+36)& (0+255),b
  8893                           
  8894                           ; BSR set to: 1
  8895                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  8896  006A84  0E00               	movlw	0
  8897  006A86  0100               	movlb	0	; () banked
  8898  006A88  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  8899  006A8A  D00F               	goto	l599
  8900  006A8C                     
  8901                           ; BSR set to: 0
  8902                           ;radio_driver_SX1276.c: 1029: {
  8903                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  8904                           
  8905                           ; BSR set to: 0
  8906  006A8C  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  8907  006A8E  0D01               	mullw	1
  8908  006A90  50F3               	movf	prodl,w,c
  8909  006A92  0101               	movlb	1	; () banked
  8910  006A94  259F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  8911  006A96  6ED9               	movwf	fsr2l,c
  8912  006A98  50F4               	movf	prodh,w,c
  8913  006A9A  21A0               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  8914  006A9C  6EDA               	movwf	fsr2h,c
  8915  006A9E  0EFF               	movlw	255
  8916  006AA0  EC9C  F045         	call	_HALSPISend
  8917  006AA4  6EDF               	movwf	indf2,c
  8918  006AA6  0100               	movlb	0	; () banked
  8919  006AA8  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  8920  006AAA                     l599:
  8921                           
  8922                           ; BSR set to: 0
  8923                           
  8924                           ; BSR set to: 0
  8925  006AAA  0101               	movlb	1	; () banked
  8926  006AAC  519E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  8927  006AAE  0100               	movlb	0	; () banked
  8928  006AB0  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  8929  006AB2  A0D8               	btfss	status,0,c
  8930  006AB4  D7EB               	goto	l600
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;radio_driver_SX1276.c: 1031: }
  8934                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  8935                           
  8936                           ; BSR set to: 0
  8937  006AB6  EC1B  F046         	call	_HALSPICSDeassert	;wreg free
  8938                           
  8939                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8940  006ABA  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8941  006ABE  0E00               	movlw	0
  8942  006AC0  0100               	movlb	0	; () banked
  8943  006AC2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8944  006AC4  0E00               	movlw	0
  8945  006AC6  EC0D  F02F         	call	_RADIO_WriteMode
  8946                           
  8947                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  8948  006ACA  0101               	movlb	1	; () banked
  8949  006ACC  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8950                           
  8951                           ; BSR set to: 1
  8952                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  8953  006ACE  0E80               	movlw	128
  8954  006AD0  6FAC               	movwf	(_RadioConfiguration+50)& (0+255),b
  8955                           
  8956                           ; BSR set to: 1
  8957                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  8958  006AD2  0596               	decf	(_RadioConfiguration+28)& (0+255),w,b
  8959  006AD4  A4D8               	btfss	status,2,c
  8960  006AD6  D008               	goto	l602
  8961                           
  8962                           ; BSR set to: 1
  8963                           ;radio_driver_SX1276.c: 1040: {
  8964                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  8965  006AD8  0100               	movlb	0	; () banked
  8966  006ADA  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  8967  006ADC  D002               	goto	l603
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;radio_driver_SX1276.c: 1042: {
  8971                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  8972  006ADE  0101               	movlb	1	; () banked
  8973  006AE0  D003               	goto	l602
  8974  006AE2                     l603:
  8975                           
  8976                           ;radio_driver_SX1276.c: 1045: else
  8977                           ;radio_driver_SX1276.c: 1046: {
  8978                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  8979                           
  8980                           ; BSR set to: 1
  8981  006AE2  0101               	movlb	1	; () banked
  8982  006AE4  959D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  8983                           
  8984                           ; BSR set to: 1
  8985                           ;radio_driver_SX1276.c: 1048: }
  8986                           ;radio_driver_SX1276.c: 1049: }
  8987  006AE6  D001               	goto	l605
  8988  006AE8                     l602:
  8989                           
  8990                           ; BSR set to: 1
  8991                           ;radio_driver_SX1276.c: 1050: else
  8992                           ;radio_driver_SX1276.c: 1051: {
  8993                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
  8994                           
  8995                           ; BSR set to: 1
  8996  006AE8  859D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  8997  006AEA                     l605:
  8998                           
  8999                           ; BSR set to: 1
  9000                           ;radio_driver_SX1276.c: 1053: }
  9001                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9002                           
  9003                           ; BSR set to: 1
  9004  006AEA  A59D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9005  006AEC  D009               	goto	l606
  9006                           
  9007                           ; BSR set to: 1
  9008                           ;radio_driver_SX1276.c: 1056: {
  9009                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9010  006AEE  C19F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9011  006AF2  C1A0  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9012  006AF6  C19E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9013  006AFA  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
  9014                           
  9015                           ;radio_driver_SX1276.c: 1058: }
  9016  006AFE  0012               	return	
  9017  006B00                     l606:
  9018                           
  9019                           ;radio_driver_SX1276.c: 1059: else
  9020                           ;radio_driver_SX1276.c: 1060: {
  9021                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
  9022  006B00  ECCD  F012         	call	_LORAWAN_RxTimeout	;wreg free
  9023  006B04  0012               	return	
  9024  006B06                     __end_of_RADIO_FSKPayloadReady:
  9025                           	opt stack 0
  9026                           tosu	equ	0xFFF
  9027                           tosh	equ	0xFFE
  9028                           tosl	equ	0xFFD
  9029                           pclath	equ	0xFFA
  9030                           tblptru	equ	0xFF8
  9031                           tblptrh	equ	0xFF7
  9032                           tblptrl	equ	0xFF6
  9033                           tablat	equ	0xFF5
  9034                           prodh	equ	0xFF4
  9035                           prodl	equ	0xFF3
  9036                           intcon	equ	0xFF2
  9037                           intcon2	equ	0xFF1
  9038                           intcon3	equ	0xFF0
  9039                           postinc0	equ	0xFEE
  9040                           wreg	equ	0xFE8
  9041                           postinc1	equ	0xFE6
  9042                           postdec1	equ	0xFE5
  9043                           plusw1	equ	0xFE3
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8
  9052                           
  9053 ;; *************** function _LORAWAN_RxTimeout *****************
  9054 ;; Defined at:
  9055 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;  minim           4  102[BANK0 ] unsigned long 
  9060 ;;  i               1  106[BANK0 ] unsigned char 
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;Total ram usage:        9 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:   15
  9077 ;; This function calls:
  9078 ;;		_LORAWAN_ReceiveWindow2Callback
  9079 ;;		_RADIO_Transmit
  9080 ;;		_ResetParametersForConfirmedTransmission
  9081 ;;		_ResetParametersForUnconfirmedTransmission
  9082 ;;		_RxData
  9083 ;;		_SelectChannelForTransmission
  9084 ;;		_SetJoinFailState
  9085 ;;		_SwTimerSetTimeout
  9086 ;;		_SwTimerStart
  9087 ;;		___lldiv
  9088 ;; This function is called by:
  9089 ;;		_RADIO_FSKPayloadReady
  9090 ;;		_RADIO_RxTimeout
  9091 ;;		_RADIO_RxFSKTimeout
  9092 ;;		_RADIO_WatchdogTimeout
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text50
  9097  00259A                     __ptext50:
  9098                           	opt stack 0
  9099  00259A                     _LORAWAN_RxTimeout:
  9100                           	opt stack 12
  9101                           
  9102                           ;lorawan_eu.c: 466: uint8_t i;
  9103                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9104                           
  9105                           ;incstack = 0
  9106  00259A  0100               	movlb	0	; () banked
  9107  00259C  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9108  00259E  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9109  0025A0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9110  0025A2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9111                           
  9112                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9113  0025A4  0102               	movlb	2	; () banked
  9114  0025A6  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9115  0025A8  D190               	goto	l1102
  9116                           
  9117                           ; BSR set to: 2
  9118                           ;lorawan_eu.c: 470: {
  9119                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9120  0025AA  5102               	movf	(_loRa+2)& (0+255),w,b
  9121  0025AC  0B0F               	andlw	15
  9122  0025AE  0A03               	xorlw	3
  9123  0025B0  A4D8               	btfss	status,2,c
  9124  0025B2  D011               	goto	l1103
  9125                           
  9126                           ; BSR set to: 2
  9127                           ;lorawan_eu.c: 473: {
  9128                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9129  0025B4  5112               	movf	(_loRa+18)& (0+255),w,b
  9130  0025B6  A4D8               	btfss	status,2,c
  9131  0025B8  D005               	goto	l1104
  9132                           
  9133                           ; BSR set to: 2
  9134                           ;lorawan_eu.c: 475: {
  9135                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9136  0025BA  5102               	movf	(_loRa+2)& (0+255),w,b
  9137  0025BC  0BF0               	andlw	-16
  9138  0025BE  0904               	iorlw	4
  9139  0025C0  6F02               	movwf	(_loRa+2)& (0+255),b
  9140                           
  9141                           ;lorawan_eu.c: 477: }
  9142  0025C2  0012               	return	
  9143  0025C4                     l1104:
  9144                           
  9145                           ; BSR set to: 2
  9146                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9147                           
  9148                           ; BSR set to: 2
  9149  0025C4  0E02               	movlw	2
  9150  0025C6  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9151  0025C8  A4D8               	btfss	status,2,c
  9152  0025CA  0012               	return	
  9153                           
  9154                           ; BSR set to: 2
  9155                           ;lorawan_eu.c: 479: {
  9156                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9157  0025CC  0E00               	movlw	0
  9158  0025CE  6EE6               	movwf	postinc1,c
  9159  0025D0  EC36  F033         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9160                           
  9161                           ;lorawan_eu.c: 481: }
  9162                           ;lorawan_eu.c: 482: }
  9163  0025D4  0012               	return	
  9164  0025D6                     l1103:
  9165                           
  9166                           ; BSR set to: 2
  9167                           ;lorawan_eu.c: 483: else
  9168                           ;lorawan_eu.c: 484: {
  9169                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9170  0025D6  A500               	btfss	_loRa& (0+255),2,b
  9171  0025D8  D003               	goto	l1108
  9172                           
  9173                           ; BSR set to: 2
  9174                           ;lorawan_eu.c: 487: {
  9175                           ;lorawan_eu.c: 488: SetJoinFailState();
  9176  0025DA  EC23  F042         	call	_SetJoinFailState	;wreg free
  9177                           
  9178                           ;lorawan_eu.c: 489: }
  9179  0025DE  0012               	return	
  9180  0025E0                     l1108:
  9181                           
  9182                           ; BSR set to: 2
  9183                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9184  0025E0  A902               	btfss	(_loRa+2)& (0+255),4,b
  9185  0025E2  0012               	return	
  9186                           
  9187                           ; BSR set to: 2
  9188                           ;lorawan_eu.c: 492: {
  9189                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9190  0025E4  A100               	btfss	_loRa& (0+255),0,b
  9191  0025E6  D058               	goto	l1111
  9192                           
  9193                           ; BSR set to: 2
  9194                           ;lorawan_eu.c: 494: {
  9195                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9196  0025E8  51D9               	movf	(_loRa+217)& (0+255),w,b
  9197  0025EA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9198  0025EC  A0D8               	btfss	status,0,c
  9199  0025EE  D038               	goto	l1112
  9200                           
  9201                           ; BSR set to: 2
  9202                           ;lorawan_eu.c: 496: {
  9203                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9204  0025F0  5102               	movf	(_loRa+2)& (0+255),w,b
  9205  0025F2  0BF0               	andlw	-16
  9206  0025F4  0906               	iorlw	6
  9207  0025F6  6F02               	movwf	(_loRa+2)& (0+255),b
  9208                           
  9209                           ; BSR set to: 2
  9210                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9211  0025F8  51A0               	movf	(_loRa+160)& (0+255),w,b
  9212  0025FA  0100               	movlb	0	; () banked
  9213  0025FC  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9214  0025FE  0102               	movlb	2	; () banked
  9215  002600  51A1               	movf	(_loRa+161)& (0+255),w,b
  9216  002602  0100               	movlb	0	; () banked
  9217  002604  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9218  002606  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9219  002608  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9220  00260A  0E0C               	movlw	12
  9221  00260C                     u18495:
  9222  00260C  90D8               	bcf	status,0,c
  9223  00260E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9224  002610  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9225  002612  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9226  002614  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9227  002616  2EE8               	decfsz	wreg,f,c
  9228  002618  D7F9               	goto	u18495
  9229  00261A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9230  00261E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9231  002622  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9232  002626  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9233  00262A  0E7D               	movlw	125
  9234  00262C  6F64               	movwf	___lldiv@divisor& (0+255),b
  9235  00262E  0E00               	movlw	0
  9236  002630  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9237  002632  0E00               	movlw	0
  9238  002634  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9239  002636  0E00               	movlw	0
  9240  002638  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9241  00263A  EC8F  F039         	call	___lldiv	;wreg free
  9242  00263E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9243  002642  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9244  002646  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9245  00264A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9246  00264E  0102               	movlb	2	; () banked
  9247  002650  51E8               	movf	(_loRa+232)& (0+255),w,b
  9248  002652  ECDB  F040         	call	_SwTimerSetTimeout
  9249                           
  9250                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9251  002656  0102               	movlb	2	; () banked
  9252  002658  51E8               	movf	(_loRa+232)& (0+255),w,b
  9253  00265A  ECD1  F036         	call	_SwTimerStart
  9254                           
  9255                           ;lorawan_eu.c: 500: }
  9256  00265E  0012               	return	
  9257  002660                     l1112:
  9258                           
  9259                           ;lorawan_eu.c: 501: else
  9260                           ;lorawan_eu.c: 502: {
  9261                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9262  002660  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9263                           
  9264                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9265  002664  0101               	movlb	1	; () banked
  9266  002666  5169               	movf	_rxPayload& (0+255),w,b
  9267  002668  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9268  00266A  B4D8               	btfsc	status,2,c
  9269  00266C  0012               	return	
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;lorawan_eu.c: 505: {
  9273                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9274  00266E  0E00               	movlw	0
  9275  002670  0100               	movlb	0	; () banked
  9276  002672  6F60               	movwf	RxData@pData& (0+255),b
  9277  002674  0E00               	movlw	0
  9278  002676  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9279  002678  0E00               	movlw	0
  9280  00267A  6F62               	movwf	RxData@dataLength& (0+255),b
  9281  00267C  0E00               	movlw	0
  9282  00267E  6F63               	movwf	RxData@status& (0+255),b
  9283  002680  D801               	call	u18518
  9284  002682  0012               	return	
  9285  002684                     u18518:
  9286  002684  0005               	push	
  9287  002686  6EFA               	movwf	pclath,c
  9288  002688  0101               	movlb	1	; () banked
  9289  00268A  5169               	movf	_rxPayload& (0+255),w,b
  9290  00268C  6EFD               	movwf	tosl,c
  9291  00268E  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9292  002690  6EFE               	movwf	tosh,c
  9293  002692  6AFF               	clrf	tosu,c
  9294  002694  50FA               	movf	pclath,w,c
  9295  002696  0012               	return		;indir
  9296  002698                     l1111:
  9297                           
  9298                           ;lorawan_eu.c: 511: else
  9299                           ;lorawan_eu.c: 512: {
  9300                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
  9301  002698  0102               	movlb	2	; () banked
  9302  00269A  51D8               	movf	(_loRa+216)& (0+255),w,b
  9303  00269C  5DD6               	subwf	(_loRa+214)& (0+255),w,b
  9304  00269E  A0D8               	btfss	status,0,c
  9305  0026A0  D0F8               	goto	l1116
  9306                           
  9307                           ; BSR set to: 2
  9308                           ;lorawan_eu.c: 514: {
  9309                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9310  0026A2  5102               	movf	(_loRa+2)& (0+255),w,b
  9311  0026A4  0BF0               	andlw	-16
  9312  0026A6  0906               	iorlw	6
  9313  0026A8  6F02               	movwf	(_loRa+2)& (0+255),b
  9314                           
  9315                           ; BSR set to: 2
  9316                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
  9317  0026AA  0E01               	movlw	1
  9318  0026AC  EC3B  F03B         	call	_SelectChannelForTransmission
  9319  0026B0  0900               	iorlw	0
  9320  0026B2  A4D8               	btfss	status,2,c
  9321  0026B4  D031               	goto	l1117
  9322                           
  9323                           ;lorawan_eu.c: 517: {
  9324                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  9325  0026B6  0EF0               	movlw	low (_macBuffer+16)
  9326  0026B8  0100               	movlb	0	; () banked
  9327  0026BA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
  9328  0026BC  0E04               	movlw	high (_macBuffer+16)
  9329  0026BE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9330  0026C0  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9331  0026C4  EC10  F01D         	call	_RADIO_Transmit	;wreg free
  9332  0026C8  0100               	movlb	0	; () banked
  9333  0026CA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
  9334  0026CC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  9335  0026CE  A4D8               	btfss	status,2,c
  9336  0026D0  D007               	goto	l1118
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;lorawan_eu.c: 520: {
  9340                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9341  0026D2  0102               	movlb	2	; () banked
  9342  0026D4  2BD8               	incf	(_loRa+216)& (0+255),f,b
  9343                           
  9344                           ; BSR set to: 2
  9345                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9346  0026D6  5102               	movf	(_loRa+2)& (0+255),w,b
  9347  0026D8  0BF0               	andlw	-16
  9348  0026DA  0901               	iorlw	1
  9349  0026DC  6F02               	movwf	(_loRa+2)& (0+255),b
  9350                           
  9351                           ;lorawan_eu.c: 523: }
  9352  0026DE  0012               	return	
  9353  0026E0                     l1118:
  9354                           
  9355                           ;lorawan_eu.c: 524: else
  9356                           ;lorawan_eu.c: 526: {
  9357                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
  9358                           
  9359                           ; BSR set to: 2
  9360  0026E0  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9361                           
  9362                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
  9363  0026E4  0101               	movlb	1	; () banked
  9364  0026E6  5169               	movf	_rxPayload& (0+255),w,b
  9365  0026E8  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9366  0026EA  B4D8               	btfsc	status,2,c
  9367  0026EC  0012               	return	
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;lorawan_eu.c: 529: {
  9371                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9372  0026EE  0E00               	movlw	0
  9373  0026F0  0100               	movlb	0	; () banked
  9374  0026F2  6F60               	movwf	RxData@pData& (0+255),b
  9375  0026F4  0E00               	movlw	0
  9376  0026F6  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9377  0026F8  0E00               	movlw	0
  9378  0026FA  6F62               	movwf	RxData@dataLength& (0+255),b
  9379  0026FC  0E00               	movlw	0
  9380  0026FE  6F63               	movwf	RxData@status& (0+255),b
  9381  002700  D801               	call	u18568
  9382  002702  0012               	return	
  9383  002704                     u18568:
  9384  002704  0005               	push	
  9385  002706  6EFA               	movwf	pclath,c
  9386  002708  0101               	movlb	1	; () banked
  9387  00270A  5169               	movf	_rxPayload& (0+255),w,b
  9388  00270C  6EFD               	movwf	tosl,c
  9389  00270E  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9390  002710  6EFE               	movwf	tosh,c
  9391  002712  6AFF               	clrf	tosu,c
  9392  002714  50FA               	movf	pclath,w,c
  9393  002716  0012               	return		;indir
  9394  002718                     l1117:
  9395                           
  9396                           ;lorawan_eu.c: 534: else
  9397                           ;lorawan_eu.c: 535: {
  9398                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
  9399  002718  0E00               	movlw	0
  9400  00271A  0100               	movlb	0	; () banked
  9401  00271C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
  9402  00271E  D07C               	goto	l1122
  9403  002720                     
  9404                           ;lorawan_eu.c: 538: {
  9405                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
  9406                           
  9407                           ; BSR set to: 0
  9408  002720  0100               	movlb	0	; () banked
  9409  002722  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9410  002724  0D0E               	mullw	14
  9411  002726  0E04               	movlw	4
  9412  002728  26F3               	addwf	prodl,f,c
  9413  00272A  0E00               	movlw	0
  9414  00272C  22F4               	addwfc	prodh,f,c
  9415  00272E  0E00               	movlw	low _Channels
  9416  002730  24F3               	addwf	prodl,w,c
  9417  002732  6ED9               	movwf	fsr2l,c
  9418  002734  0E04               	movlw	high _Channels
  9419  002736  20F4               	addwfc	prodh,w,c
  9420  002738  6EDA               	movwf	fsr2h,c
  9421  00273A  04DE               	decf	postinc2,w,c
  9422  00273C  A4D8               	btfss	status,2,c
  9423  00273E  D06A               	goto	l1124
  9424                           
  9425                           ; BSR set to: 0
  9426  002740  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9427  002742  0D0E               	mullw	14
  9428  002744  0E08               	movlw	8
  9429  002746  26F3               	addwf	prodl,f,c
  9430  002748  0E00               	movlw	0
  9431  00274A  22F4               	addwfc	prodh,f,c
  9432  00274C  0E00               	movlw	low _Channels
  9433  00274E  24F3               	addwf	prodl,w,c
  9434  002750  6ED9               	movwf	fsr2l,c
  9435  002752  0E04               	movlw	high _Channels
  9436  002754  20F4               	addwfc	prodh,w,c
  9437  002756  6EDA               	movwf	fsr2h,c
  9438  002758  50DE               	movf	postinc2,w,c
  9439  00275A  10DE               	iorwf	postinc2,w,c
  9440  00275C  10DE               	iorwf	postinc2,w,c
  9441  00275E  10DE               	iorwf	postinc2,w,c
  9442  002760  B4D8               	btfsc	status,2,c
  9443  002762  D058               	goto	l1124
  9444                           
  9445                           ; BSR set to: 0
  9446  002764  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9447  002766  0D0E               	mullw	14
  9448  002768  0E08               	movlw	8
  9449  00276A  26F3               	addwf	prodl,f,c
  9450  00276C  0E00               	movlw	0
  9451  00276E  22F4               	addwfc	prodh,f,c
  9452  002770  0E00               	movlw	low _Channels
  9453  002772  24F3               	addwf	prodl,w,c
  9454  002774  6ED9               	movwf	fsr2l,c
  9455  002776  0E04               	movlw	high _Channels
  9456  002778  20F4               	addwfc	prodh,w,c
  9457  00277A  6EDA               	movwf	fsr2h,c
  9458  00277C  50DE               	movf	postinc2,w,c
  9459  00277E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
  9460  002780  50DE               	movf	postinc2,w,c
  9461  002782  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
  9462  002784  50DE               	movf	postinc2,w,c
  9463  002786  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
  9464  002788  50DE               	movf	postinc2,w,c
  9465  00278A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
  9466  00278C  A0D8               	btfss	status,0,c
  9467  00278E  D042               	goto	l1124
  9468                           
  9469                           ; BSR set to: 0
  9470  002790  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9471  002792  0D0E               	mullw	14
  9472  002794  0E05               	movlw	5
  9473  002796  26F3               	addwf	prodl,f,c
  9474  002798  0E00               	movlw	0
  9475  00279A  22F4               	addwfc	prodh,f,c
  9476  00279C  0E00               	movlw	low _Channels
  9477  00279E  24F3               	addwf	prodl,w,c
  9478  0027A0  6ED9               	movwf	fsr2l,c
  9479  0027A2  0E04               	movlw	high _Channels
  9480  0027A4  20F4               	addwfc	prodh,w,c
  9481  0027A6  6EDA               	movwf	fsr2h,c
  9482  0027A8  0104               	movlb	4	; () banked
  9483  0027AA  50DF               	movf	223,w,c
  9484  0027AC  0B0F               	andlw	15
  9485  0027AE  0100               	movlb	0	; () banked
  9486  0027B0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9487  0027B2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
  9488  0027B4  0102               	movlb	2	; () banked
  9489  0027B6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
  9490  0027B8  A0D8               	btfss	status,0,c
  9491  0027BA  D02C               	goto	l1124
  9492                           
  9493                           ; BSR set to: 2
  9494  0027BC  0100               	movlb	0	; () banked
  9495  0027BE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9496  0027C0  0D0E               	mullw	14
  9497  0027C2  0E05               	movlw	5
  9498  0027C4  26F3               	addwf	prodl,f,c
  9499  0027C6  0E00               	movlw	0
  9500  0027C8  22F4               	addwfc	prodh,f,c
  9501  0027CA  0E00               	movlw	low _Channels
  9502  0027CC  24F3               	addwf	prodl,w,c
  9503  0027CE  6ED9               	movwf	fsr2l,c
  9504  0027D0  0E04               	movlw	high _Channels
  9505  0027D2  20F4               	addwfc	prodh,w,c
  9506  0027D4  6EDA               	movwf	fsr2h,c
  9507  0027D6  0104               	movlb	4	; () banked
  9508  0027D8  38DF               	swapf	223,w,c
  9509  0027DA  0B0F               	andlw	15
  9510  0027DC  0100               	movlb	0	; () banked
  9511  0027DE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9512  0027E0  0102               	movlb	2	; () banked
  9513  0027E2  51DF               	movf	(_loRa+223)& (0+255),w,b
  9514  0027E4  0100               	movlb	0	; () banked
  9515  0027E6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9516  0027E8  A0D8               	btfss	status,0,c
  9517  0027EA  D014               	goto	l1124
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;lorawan_eu.c: 540: {
  9521                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
  9522  0027EC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9523  0027EE  0D0E               	mullw	14
  9524  0027F0  0E08               	movlw	8
  9525  0027F2  26F3               	addwf	prodl,f,c
  9526  0027F4  0E00               	movlw	0
  9527  0027F6  22F4               	addwfc	prodh,f,c
  9528  0027F8  0E00               	movlw	low _Channels
  9529  0027FA  24F3               	addwf	prodl,w,c
  9530  0027FC  6ED9               	movwf	fsr2l,c
  9531  0027FE  0E04               	movlw	high _Channels
  9532  002800  20F4               	addwfc	prodh,w,c
  9533  002802  6EDA               	movwf	fsr2h,c
  9534  002804  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
  9535  002808  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
  9536  00280C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
  9537  002810  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
  9538  002814                     l1124:
  9539                           
  9540                           ; BSR set to: 0
  9541  002814  0100               	movlb	0	; () banked
  9542  002816  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
  9543  002818                     l1122:
  9544                           
  9545                           ; BSR set to: 0
  9546                           
  9547                           ; BSR set to: 0
  9548  002818  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  9549  00281A  0102               	movlb	2	; () banked
  9550  00281C  5DED               	subwf	(_loRa+237)& (0+255),w,b
  9551  00281E  B0D8               	btfsc	status,0,c
  9552  002820  D77F               	goto	l1123
  9553                           
  9554                           ; BSR set to: 2
  9555                           ;lorawan_eu.c: 542: }
  9556                           ;lorawan_eu.c: 543: }
  9557                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
  9558                           
  9559                           ; BSR set to: 2
  9560  002822  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
  9561  002826  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
  9562  00282A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
  9563  00282E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
  9564  002832  0E0C               	movlw	12
  9565  002834                     u18635:
  9566  002834  90D8               	bcf	status,0,c
  9567  002836  0100               	movlb	0	; () banked
  9568  002838  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9569  00283A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9570  00283C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9571  00283E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9572  002840  2EE8               	decfsz	wreg,f,c
  9573  002842  D7F8               	goto	u18635
  9574  002844  0E00               	movlw	0
  9575  002846  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
  9576  002848  6F60               	movwf	___lldiv@dividend& (0+255),b
  9577  00284A  0E20               	movlw	32
  9578  00284C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
  9579  00284E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
  9580  002850  0E03               	movlw	3
  9581  002852  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
  9582  002854  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
  9583  002856  0E00               	movlw	0
  9584  002858  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
  9585  00285A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
  9586  00285C  0E7D               	movlw	125
  9587  00285E  6F64               	movwf	___lldiv@divisor& (0+255),b
  9588  002860  0E00               	movlw	0
  9589  002862  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9590  002864  0E00               	movlw	0
  9591  002866  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9592  002868  0E00               	movlw	0
  9593  00286A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9594  00286C  EC8F  F039         	call	___lldiv	;wreg free
  9595  002870  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9596  002874  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9597  002878  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9598  00287C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9599  002880  0102               	movlb	2	; () banked
  9600  002882  51EA               	movf	(_loRa+234)& (0+255),w,b
  9601  002884  ECDB  F040         	call	_SwTimerSetTimeout
  9602                           
  9603                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
  9604  002888  0102               	movlb	2	; () banked
  9605  00288A  51EA               	movf	(_loRa+234)& (0+255),w,b
  9606  00288C  ECD1  F036         	call	_SwTimerStart
  9607                           
  9608                           ;lorawan_eu.c: 546: }
  9609                           ;lorawan_eu.c: 547: }
  9610  002890  0012               	return	
  9611  002892                     l1116:
  9612                           
  9613                           ;lorawan_eu.c: 548: else
  9614                           ;lorawan_eu.c: 549: {
  9615                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
  9616  002892  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9617                           
  9618                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
  9619  002896  0101               	movlb	1	; () banked
  9620  002898  5169               	movf	_rxPayload& (0+255),w,b
  9621  00289A  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9622  00289C  B4D8               	btfsc	status,2,c
  9623  00289E  0012               	return	
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;lorawan_eu.c: 552: {
  9627                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
  9628  0028A0  0E00               	movlw	0
  9629  0028A2  0100               	movlb	0	; () banked
  9630  0028A4  6F60               	movwf	RxData@pData& (0+255),b
  9631  0028A6  0E00               	movlw	0
  9632  0028A8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9633  0028AA  0E00               	movlw	0
  9634  0028AC  6F62               	movwf	RxData@dataLength& (0+255),b
  9635  0028AE  0E01               	movlw	1
  9636  0028B0  6F63               	movwf	RxData@status& (0+255),b
  9637  0028B2  D801               	call	u18658
  9638  0028B4  0012               	return	
  9639  0028B6                     u18658:
  9640  0028B6  0005               	push	
  9641  0028B8  6EFA               	movwf	pclath,c
  9642  0028BA  0101               	movlb	1	; () banked
  9643  0028BC  5169               	movf	_rxPayload& (0+255),w,b
  9644  0028BE  6EFD               	movwf	tosl,c
  9645  0028C0  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9646  0028C2  6EFE               	movwf	tosh,c
  9647  0028C4  6AFF               	clrf	tosu,c
  9648  0028C6  50FA               	movf	pclath,w,c
  9649  0028C8  0012               	return		;indir
  9650  0028CA                     l1102:
  9651                           
  9652                           ;lorawan_eu.c: 560: else
  9653                           ;lorawan_eu.c: 561: {
  9654                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
  9655  0028CA  0101               	movlb	1	; () banked
  9656  0028CC  5169               	movf	_rxPayload& (0+255),w,b
  9657  0028CE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
  9658  0028D0  B4D8               	btfsc	status,2,c
  9659  0028D2  0012               	return	
  9660                           
  9661                           ; BSR set to: 1
  9662                           ;lorawan_eu.c: 564: {
  9663                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
  9664  0028D4  0E00               	movlw	0
  9665  0028D6  0100               	movlb	0	; () banked
  9666  0028D8  6F60               	movwf	RxData@pData& (0+255),b
  9667  0028DA  0E00               	movlw	0
  9668  0028DC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9669  0028DE  0E00               	movlw	0
  9670  0028E0  6F62               	movwf	RxData@dataLength& (0+255),b
  9671  0028E2  0E02               	movlw	2
  9672  0028E4  6F63               	movwf	RxData@status& (0+255),b
  9673  0028E6  D801               	call	u18678
  9674  0028E8  0012               	return	
  9675  0028EA                     u18678:
  9676  0028EA  0005               	push	
  9677  0028EC  6EFA               	movwf	pclath,c
  9678  0028EE  0101               	movlb	1	; () banked
  9679  0028F0  5169               	movf	_rxPayload& (0+255),w,b
  9680  0028F2  6EFD               	movwf	tosl,c
  9681  0028F4  516A               	movf	(_rxPayload+1)& (0+255),w,b
  9682  0028F6  6EFE               	movwf	tosh,c
  9683  0028F8  6AFF               	clrf	tosu,c
  9684  0028FA  50FA               	movf	pclath,w,c
  9685  0028FC  0012               	return		;indir
  9686  0028FE                     __end_of_LORAWAN_RxTimeout:
  9687                           	opt stack 0
  9688                           tosu	equ	0xFFF
  9689                           tosh	equ	0xFFE
  9690                           tosl	equ	0xFFD
  9691                           pclath	equ	0xFFA
  9692                           tblptru	equ	0xFF8
  9693                           tblptrh	equ	0xFF7
  9694                           tblptrl	equ	0xFF6
  9695                           tablat	equ	0xFF5
  9696                           prodh	equ	0xFF4
  9697                           prodl	equ	0xFF3
  9698                           intcon	equ	0xFF2
  9699                           intcon2	equ	0xFF1
  9700                           intcon3	equ	0xFF0
  9701                           postinc0	equ	0xFEE
  9702                           wreg	equ	0xFE8
  9703                           postinc1	equ	0xFE6
  9704                           postdec1	equ	0xFE5
  9705                           plusw1	equ	0xFE3
  9706                           fsr1h	equ	0xFE2
  9707                           fsr1l	equ	0xFE1
  9708                           indf2	equ	0xFDF
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           fsr2h	equ	0xFDA
  9712                           fsr2l	equ	0xFD9
  9713                           status	equ	0xFD8
  9714                           
  9715 ;; *************** function _LORAWAN_RxDone *****************
  9716 ;; Defined at:
  9717 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
  9720 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9721 ;;  bufferLength    1  104[BANK1 ] unsigned char 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  hdr             2  145[BANK0 ] PTR struct .
  9724 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9725 ;;  joinAccept      2  142[BANK0 ] PTR struct .
  9726 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9727 ;;  computedMic     4  138[BANK0 ] unsigned long 
  9728 ;;  extractedMic    4  130[BANK0 ] unsigned long 
  9729 ;;  packet          2  136[BANK0 ] PTR unsigned char 
  9730 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
  9731 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
  9732 ;;  temp            1  135[BANK0 ] unsigned char 
  9733 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
  9734 ;;  mhdr            1  129[BANK0 ] struct .
  9735 ;;  channelIndex    1  128[BANK0 ] unsigned char 
  9736 ;;  fPort           1  127[BANK0 ] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      enum E7426
  9739 ;; Registers used:
  9740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9746 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;Total ram usage:       28 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:   15
  9753 ;; This function calls:
  9754 ;;		_AESCmac
  9755 ;;		_AESEncodeLoRa
  9756 ;;		_AssembleEncryptionBlock
  9757 ;;		_CheckFlags
  9758 ;;		_CheckMcastFlags
  9759 ;;		_ComputeMic
  9760 ;;		_ComputeSessionKeys
  9761 ;;		_EncryptFRMPayload
  9762 ;;		_ExtractMic
  9763 ;;		_LORAWAN_EnterContinuousReceive
  9764 ;;		_LORAWAN_Send
  9765 ;;		_MacExecuteCommands
  9766 ;;		_RADIO_GetStatus
  9767 ;;		_RADIO_ReleaseData
  9768 ;;		_RxData
  9769 ;;		_SearchAvailableChannel
  9770 ;;		_SetJoinFailState
  9771 ;;		_SetReceptionNotOkState
  9772 ;;		_StartReTxTimer
  9773 ;;		_SwTimerStop
  9774 ;;		_UpdateCfList
  9775 ;;		_UpdateDLSettings
  9776 ;;		_UpdateJoinSuccessState
  9777 ;;		_UpdateReceiveDelays
  9778 ;;		_UpdateRetransmissionAckTimeoutState
  9779 ;;		_memcpy
  9780 ;; This function is called by:
  9781 ;;		_RADIO_RxDone
  9782 ;;		_RADIO_FSKPayloadReady
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text51
  9787  000086                     __ptext51:
  9788                           	opt stack 0
  9789  000086                     _LORAWAN_RxDone:
  9790                           	opt stack 12
  9791                           
  9792                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
  9793                           ;lorawan.c: 1124: Mhdr_t mhdr;
  9794                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
  9795                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
  9796                           ;lorawan.c: 1127: uint8_t *packet;
  9797                           ;lorawan.c: 1128: uint8_t temp;
  9798                           ;lorawan.c: 1130: RADIO_ReleaseData();
  9799                           
  9800                           ;incstack = 0
  9801  000086  EC0B  F046         	call	_RADIO_ReleaseData	;wreg free
  9802                           
  9803                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
  9804  00008A  0102               	movlb	2	; () banked
  9805  00008C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9806  00008E  EF62  F006         	goto	l2183
  9807                           
  9808                           ; BSR set to: 2
  9809                           ;lorawan.c: 1133: {
  9810                           ;lorawan.c: 1134: mhdr.value = buffer[0];
  9811  000092  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  9812  000096  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  9813  00009A  50DF               	movf	indf2,w,c
  9814  00009C  0100               	movlb	0	; () banked
  9815  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
  9819  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  9820  0000A2  32E8               	rrcf	wreg,f,c
  9821  0000A4  0B07               	andlw	7
  9822  0000A6  06E8               	decf	wreg,f,c
  9823  0000A8  A4D8               	btfss	status,2,c
  9824  0000AA  D0D8               	goto	l2184
  9825                           
  9826                           ; BSR set to: 0
  9827  0000AC  0102               	movlb	2	; () banked
  9828  0000AE  511D               	movf	(_loRa+29)& (0+255),w,b
  9829  0000B0  A4D8               	btfss	status,2,c
  9830  0000B2  D0D4               	goto	l2184
  9831                           
  9832                           ; BSR set to: 2
  9833                           ;lorawan.c: 1136: {
  9834                           ;lorawan.c: 1137: temp = bufferLength - 1;
  9835  0000B4  0101               	movlb	1	; () banked
  9836  0000B6  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9837  0000B8  0100               	movlb	0	; () banked
  9838  0000BA  D028               	goto	L6
  9839  0000BC                     
  9840                           ; BSR set to: 0
  9841                           ;lorawan.c: 1139: {
  9842                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
  9843                           
  9844                           ; BSR set to: 0
  9845  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  9846  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
  9847  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  9848  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
  9849  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9850  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
  9851  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
  9852  0000CA  0101               	movlb	1	; () banked
  9853  0000CC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9854  0000CE  0100               	movlb	0	; () banked
  9855  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  9856  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  9857  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
  9858  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  9859  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  9860  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  9861  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  9862  0000DE  0101               	movlb	1	; () banked
  9863  0000E0  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  9864  0000E2  0100               	movlb	0	; () banked
  9865  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  9866  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  9867  0000E8  0101               	movlb	1	; () banked
  9868  0000EA  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  9869  0000EC  0100               	movlb	0	; () banked
  9870  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  9871  0000F0  0E42               	movlw	low (_loRa+66)
  9872  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
  9873  0000F4  0E02               	movlw	high (_loRa+66)
  9874  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
  9875  0000F8  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
  9876                           
  9877                           ;lorawan.c: 1142: if (temp > 16)
  9878  0000FC  0E10               	movlw	16
  9879  0000FE  0100               	movlb	0	; () banked
  9880  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
  9881  000102  D003               	goto	l2187
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;lorawan.c: 1143: {
  9885                           ;lorawan.c: 1144: temp -= 16;
  9886  000104  0E10               	movlw	16
  9887  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
  9888                           
  9889                           ;lorawan.c: 1145: }
  9890  000108  D002               	goto	l2188
  9891  00010A                     l2187:
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;lorawan.c: 1146: else
  9895                           ;lorawan.c: 1147: {
  9896                           ;lorawan.c: 1148: temp = 0;
  9897                           
  9898                           ; BSR set to: 0
  9899  00010A  0E00               	movlw	0
  9900  00010C                     L6:
  9901  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
  9902  00010E                     l2188:
  9903                           
  9904                           ; BSR set to: 0
  9905                           
  9906                           ; BSR set to: 0
  9907  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  9908  000110  A4D8               	btfss	status,2,c
  9909  000112  D7D4               	goto	l2186
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;lorawan.c: 1149: }
  9913                           ;lorawan.c: 1150: }
  9914                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
  9915                           
  9916                           ; BSR set to: 0
  9917  000114  0E42               	movlw	low (_loRa+66)
  9918  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
  9919  000118  0E02               	movlw	high (_loRa+66)
  9920  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
  9921  00011C  C166  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
  9922  000120  C167  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
  9923  000124  0101               	movlb	1	; () banked
  9924  000126  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9925  000128  0FFC               	addlw	252
  9926  00012A  0100               	movlb	0	; () banked
  9927  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
  9928  00012E  EC74  F03C         	call	_ComputeMic	;wreg free
  9929  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
  9930  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
  9931  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
  9932  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
  9933                           
  9934                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
  9935  000142  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  9936  000146  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  9937  00014A  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  9938  00014E  EC20  F03E         	call	_ExtractMic	;wreg free
  9939  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  9940  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  9941  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  9942  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  9943                           
  9944                           ;lorawan.c: 1155: if (extractedMic != computedMic)
  9945  000162  0100               	movlb	0	; () banked
  9946  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
  9947  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  9948  000168  E10A               	bnz	u17730
  9949  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  9950  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  9951  00016E  E107               	bnz	u17730
  9952  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  9953  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  9954  000174  E104               	bnz	u17730
  9955  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  9956  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  9957  00017A  B4D8               	btfsc	status,2,c
  9958  00017C  D011               	goto	l2190
  9959  00017E                     u17730:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;lorawan.c: 1156: {
  9963                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
  9964  00017E  0102               	movlb	2	; () banked
  9965  000180  5102               	movf	(_loRa+2)& (0+255),w,b
  9966  000182  0B0F               	andlw	15
  9967  000184  0A05               	xorlw	5
  9968  000186  B4D8               	btfsc	status,2,c
  9969  000188  D008               	goto	u17760
  9970                           
  9971                           ; BSR set to: 2
  9972  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
  9973  00018C  0B0F               	andlw	15
  9974  00018E  0A03               	xorlw	3
  9975  000190  A4D8               	btfss	status,2,c
  9976  000192  0012               	return	
  9977                           
  9978                           ; BSR set to: 2
  9979  000194  51F1               	movf	(_loRa+241)& (0+255),w,b
  9980  000196  B4D8               	btfsc	status,2,c
  9981  000198  0012               	return	
  9982  00019A                     u17760:
  9983                           
  9984                           ; BSR set to: 2
  9985                           ;lorawan.c: 1158: {
  9986                           ;lorawan.c: 1159: SetJoinFailState();
  9987                           
  9988                           ; BSR set to: 2
  9989  00019A  EC23  F042         	call	_SetJoinFailState	;wreg free
  9990                           
  9991                           ;lorawan.c: 1160: }
  9992                           ;lorawan.c: 1162: return INVALID_PARAMETER;
  9993                           ;	Return value of _LORAWAN_RxDone is never used
  9994  00019E  0012               	return	
  9995  0001A0                     l2190:
  9996                           
  9997                           ;lorawan.c: 1163: }
  9998                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
  9999  0001A0  0102               	movlb	2	; () banked
 10000  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10001  0001A4  0B0F               	andlw	15
 10002  0001A6  0A03               	xorlw	3
 10003  0001A8  A4D8               	btfss	status,2,c
 10004  0001AA  D003               	goto	l2195
 10005                           
 10006                           ; BSR set to: 2
 10007                           ;lorawan.c: 1167: {
 10008                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10009  0001AC  51E3               	movf	(_loRa+227)& (0+255),w,b
 10010  0001AE  EC96  F043         	call	_SwTimerStop
 10011  0001B2                     l2195:
 10012                           
 10013                           ;lorawan.c: 1169: }
 10014                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10015                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10016  0001B2  C166  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10017  0001B6  C167  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10018                           
 10019                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10020  0001BA  0100               	movlb	0	; () banked
 10021  0001BC  EE20 F007          	lfsr	2,7
 10022  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10023  0001C2  26D9               	addwf	fsr2l,f,c
 10024  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10025  0001C6  22DA               	addwfc	fsr2h,f,c
 10026  0001C8  CFDE F21E          	movff	postinc2,_loRa+30
 10027  0001CC  CFDE F21F          	movff	postinc2,_loRa+31
 10028  0001D0  CFDE F220          	movff	postinc2,_loRa+32
 10029  0001D4  CFDE F221          	movff	postinc2,_loRa+33
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10033  0001D8  EE20 F00C          	lfsr	2,12
 10034  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10035  0001DE  26D9               	addwf	fsr2l,f,c
 10036  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10037  0001E2  22DA               	addwfc	fsr2h,f,c
 10038  0001E4  50DF               	movf	indf2,w,c
 10039  0001E6  0B0F               	andlw	15
 10040  0001E8  EC1F  F041         	call	_UpdateReceiveDelays
 10041                           
 10042                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10043  0001EC  0100               	movlb	0	; () banked
 10044  0001EE  EE20 F00B          	lfsr	2,11
 10045  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10046  0001F4  26D9               	addwf	fsr2l,f,c
 10047  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10048  0001F8  22DA               	addwfc	fsr2h,f,c
 10049  0001FA  38DF               	swapf	223,w,c
 10050  0001FC  0B07               	andlw	7
 10051  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10052  000200  EE20 F00B          	lfsr	2,11
 10053  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10054  000206  26D9               	addwf	fsr2l,f,c
 10055  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10056  00020A  22DA               	addwfc	fsr2h,f,c
 10057  00020C  50DF               	movf	223,w,c
 10058  00020E  0B0F               	andlw	15
 10059  000210  ECB2  F044         	call	_UpdateDLSettings
 10060                           
 10061                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10062  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10063  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10064  00021C  0101               	movlb	1	; () banked
 10065  00021E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10066  000220  EC4E  F020         	call	_UpdateCfList
 10067                           
 10068                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10069  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10070  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10071  00022C  EC4C  F039         	call	_ComputeSessionKeys	;wreg free
 10072                           
 10073                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10074  000230  0E00               	movlw	0
 10075  000232  6EE6               	movwf	postinc1,c
 10076  000234  EC1F  F02B         	call	_UpdateJoinSuccessState	;wreg free
 10077                           
 10078                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10079  000238  0E00               	movlw	0
 10080  00023A  0102               	movlb	2	; () banked
 10081  00023C  6F06               	movwf	(_loRa+6)& (0+255),b
 10082  00023E  0E00               	movlw	0
 10083  000240  6F07               	movwf	(_loRa+7)& (0+255),b
 10084  000242  0E00               	movlw	0
 10085  000244  6F08               	movwf	(_loRa+8)& (0+255),b
 10086  000246  0E00               	movlw	0
 10087  000248  6F09               	movwf	(_loRa+9)& (0+255),b
 10088                           
 10089                           ; BSR set to: 2
 10090                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10091  00024A  0E00               	movlw	0
 10092  00024C  6F0A               	movwf	(_loRa+10)& (0+255),b
 10093  00024E  0E00               	movlw	0
 10094  000250  6F0B               	movwf	(_loRa+11)& (0+255),b
 10095  000252  0E00               	movlw	0
 10096  000254  6F0C               	movwf	(_loRa+12)& (0+255),b
 10097  000256  0E00               	movlw	0
 10098  000258  6F0D               	movwf	(_loRa+13)& (0+255),b
 10099                           
 10100                           ; BSR set to: 2
 10101                           ;lorawan.c: 1190: }
 10102                           
 10103                           ; BSR set to: 2
 10104                           ;lorawan.c: 1189: return OK;
 10105                           ;	Return value of _LORAWAN_RxDone is never used
 10106  00025A  0012               	return	
 10107  00025C                     l2184:
 10108                           
 10109                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10110                           
 10111                           ; BSR set to: 2
 10112  00025C  0100               	movlb	0	; () banked
 10113  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10114  000260  32E8               	rrcf	wreg,f,c
 10115  000262  0B07               	andlw	7
 10116  000264  0A03               	xorlw	3
 10117  000266  B4D8               	btfsc	status,2,c
 10118  000268  D007               	goto	u17790
 10119                           
 10120                           ; BSR set to: 0
 10121  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10122  00026C  32E8               	rrcf	wreg,f,c
 10123  00026E  0B07               	andlw	7
 10124  000270  0A05               	xorlw	5
 10125  000272  A4D8               	btfss	status,2,c
 10126  000274  EF5F  F006         	goto	l2197
 10127  000278                     u17790:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;lorawan.c: 1192: {
 10131                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10132                           
 10133                           ; BSR set to: 0
 10134  000278  0E00               	movlw	0
 10135  00027A  0102               	movlb	2	; () banked
 10136  00027C  6FA7               	movwf	(_loRa+167)& (0+255),b
 10137                           
 10138                           ; BSR set to: 2
 10139                           ;lorawan.c: 1195: Hdr_t *hdr;
 10140                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10141  00027E  C166  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10142  000282  C167  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10143                           
 10144                           ; BSR set to: 2
 10145                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10146  000286  0E02               	movlw	2
 10147  000288  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10148  00028A  A4D8               	btfss	status,2,c
 10149  00028C  D210               	goto	l2200
 10150                           
 10151                           ; BSR set to: 2
 10152  00028E  0100               	movlb	0	; () banked
 10153  000290  EE20 F001          	lfsr	2,1
 10154  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10155  000296  26D9               	addwf	fsr2l,f,c
 10156  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10157  00029A  22DA               	addwfc	fsr2h,f,c
 10158  00029C  0102               	movlb	2	; () banked
 10159  00029E  5162               	movf	(_loRa+98)& (0+255),w,b
 10160  0002A0  18DE               	xorwf	postinc2,w,c
 10161  0002A2  E109               	bnz	u17811
 10162  0002A4  5163               	movf	(_loRa+99)& (0+255),w,b
 10163  0002A6  18DE               	xorwf	postinc2,w,c
 10164  0002A8  E106               	bnz	u17811
 10165  0002AA  5164               	movf	(_loRa+100)& (0+255),w,b
 10166  0002AC  18DE               	xorwf	postinc2,w,c
 10167  0002AE  E103               	bnz	u17811
 10168  0002B0  5165               	movf	(_loRa+101)& (0+255),w,b
 10169  0002B2  18DE               	xorwf	postinc2,w,c
 10170  0002B4  A4D8               	btfss	status,2,c
 10171  0002B6                     u17811:
 10172  0002B6  D1FB               	goto	l2200
 10173                           
 10174                           ; BSR set to: 2
 10175  0002B8  A504               	btfss	(_loRa+4)& (0+255),2,b
 10176  0002BA  D1F9               	goto	l2200
 10177                           
 10178                           ; BSR set to: 2
 10179                           ;lorawan.c: 1200: {
 10180                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10181  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10182  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10183  0002C4  ECD1  F039         	call	_CheckMcastFlags	;wreg free
 10184  0002C8  0900               	iorlw	0
 10185  0002CA  A4D8               	btfss	status,2,c
 10186  0002CC  D008               	goto	l2201
 10187                           
 10188                           ;lorawan.c: 1203: {
 10189                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10190  0002CE  0102               	movlb	2	; () banked
 10191  0002D0  5102               	movf	(_loRa+2)& (0+255),w,b
 10192  0002D2  0BF0               	andlw	-16
 10193  0002D4  0909               	iorlw	9
 10194  0002D6  6F02               	movwf	(_loRa+2)& (0+255),b
 10195                           
 10196                           ; BSR set to: 2
 10197                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10198  0002D8  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10199                           
 10200                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 10201                           ;	Return value of _LORAWAN_RxDone is never used
 10202  0002DC  0012               	return	
 10203  0002DE                     l2201:
 10204                           
 10205                           ;lorawan.c: 1207: }
 10206                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10207  0002DE  0100               	movlb	0	; () banked
 10208  0002E0  EE20 F006          	lfsr	2,6
 10209  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10210  0002E6  26D9               	addwf	fsr2l,f,c
 10211  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10212  0002EA  22DA               	addwfc	fsr2h,f,c
 10213  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10214  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10215  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10216  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10217  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10218  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10219  000300  0101               	movlb	1	; () banked
 10220  000302  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10221  000304  0FFC               	addlw	252
 10222  000306  0100               	movlb	0	; () banked
 10223  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10224  00030A  0E49               	movlw	73
 10225  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10226  00030E  0E01               	movlw	1
 10227  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10228  000312  0E01               	movlw	1
 10229  000314  EC09  F030         	call	_AssembleEncryptionBlock
 10230                           
 10231                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10232  000318  0EEF               	movlw	low _radioBuffer
 10233  00031A  0100               	movlb	0	; () banked
 10234  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 10235  00031E  0E05               	movlw	high _radioBuffer
 10236  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10237  000322  0EB0               	movlw	low _aesBuffer
 10238  000324  6F62               	movwf	memcpy@s1& (0+255),b
 10239  000326  0E01               	movlw	high _aesBuffer
 10240  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10241  00032A  0E00               	movlw	0
 10242  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10243  00032E  0E10               	movlw	16
 10244  000330  6F64               	movwf	memcpy@n& (0+255),b
 10245  000332  EC37  F03D         	call	_memcpy	;wreg free
 10246                           
 10247                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10248  000336  0EFF               	movlw	low (_radioBuffer+16)
 10249  000338  0100               	movlb	0	; () banked
 10250  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 10251  00033C  0E05               	movlw	high (_radioBuffer+16)
 10252  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10253  000340  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10254  000344  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10255  000348  0EFC               	movlw	252
 10256  00034A  0101               	movlb	1	; () banked
 10257  00034C  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10258  00034E  0100               	movlb	0	; () banked
 10259  000350  6F64               	movwf	memcpy@n& (0+255),b
 10260  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 10261  000354  0EFF               	movlw	255
 10262  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 10263  000358  EC37  F03D         	call	_memcpy	;wreg free
 10264                           
 10265                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10266  00035C  0E66               	movlw	low (_loRa+102)
 10267  00035E  0100               	movlb	0	; () banked
 10268  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 10269  000362  0E02               	movlw	high (_loRa+102)
 10270  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 10271  000366  0EB0               	movlw	low _aesBuffer
 10272  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 10273  00036A  0E01               	movlw	high _aesBuffer
 10274  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 10275  00036E  0EEF               	movlw	low _radioBuffer
 10276  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 10277  000372  0E05               	movlw	high _radioBuffer
 10278  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 10279  000376  0101               	movlb	1	; () banked
 10280  000378  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10281  00037A  0F0C               	addlw	12
 10282  00037C  0100               	movlb	0	; () banked
 10283  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 10284  000380  ECF8  F010         	call	_AESCmac	;wreg free
 10285                           
 10286                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10287  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 10288  000386  0100               	movlb	0	; () banked
 10289  000388  6F60               	movwf	memcpy@d1& (0+255),b
 10290  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 10291  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10292  00038E  0EB0               	movlw	low _aesBuffer
 10293  000390  6F62               	movwf	memcpy@s1& (0+255),b
 10294  000392  0E01               	movlw	high _aesBuffer
 10295  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10296  000396  0E00               	movlw	0
 10297  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10298  00039A  0E04               	movlw	4
 10299  00039C  6F64               	movwf	memcpy@n& (0+255),b
 10300  00039E  EC37  F03D         	call	_memcpy	;wreg free
 10301                           
 10302                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10303  0003A2  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10304  0003A6  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10305  0003AA  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10306  0003AE  EC20  F03E         	call	_ExtractMic	;wreg free
 10307  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10308  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10309  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10310  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10311                           
 10312                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10313  0003C2  0100               	movlb	0	; () banked
 10314  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10315  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10316  0003C8  E10A               	bnz	u17840
 10317  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10318  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10319  0003CE  E107               	bnz	u17840
 10320  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10321  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10322  0003D4  E104               	bnz	u17840
 10323  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10324  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10325  0003DA  B4D8               	btfsc	status,2,c
 10326  0003DC  D008               	goto	l2202
 10327  0003DE                     u17840:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;lorawan.c: 1218: {
 10331                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10332  0003DE  0102               	movlb	2	; () banked
 10333  0003E0  5102               	movf	(_loRa+2)& (0+255),w,b
 10334  0003E2  0BF0               	andlw	-16
 10335  0003E4  0909               	iorlw	9
 10336  0003E6  6F02               	movwf	(_loRa+2)& (0+255),b
 10337                           
 10338                           ; BSR set to: 2
 10339                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 10340  0003E8  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10341                           
 10342                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 10343                           ;	Return value of _LORAWAN_RxDone is never used
 10344  0003EC  0012               	return	
 10345  0003EE                     l2202:
 10346                           
 10347                           ;lorawan.c: 1222: }
 10348                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10349  0003EE  0100               	movlb	0	; () banked
 10350  0003F0  EE20 F006          	lfsr	2,6
 10351  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10352  0003F6  26D9               	addwf	fsr2l,f,c
 10353  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10354  0003FA  22DA               	addwfc	fsr2h,f,c
 10355  0003FC  0102               	movlb	2	; () banked
 10356  0003FE  510E               	movf	(_loRa+14)& (0+255),w,b
 10357  000400  5CDE               	subwf	postinc2,w,c
 10358  000402  510F               	movf	(_loRa+15)& (0+255),w,b
 10359  000404  58DE               	subwfb	postinc2,w,c
 10360  000406  A0D8               	btfss	status,0,c
 10361  000408  D050               	goto	l2203
 10362                           
 10363                           ; BSR set to: 2
 10364                           ;lorawan.c: 1225: {
 10365                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10366  00040A  0100               	movlb	0	; () banked
 10367  00040C  EE20 F006          	lfsr	2,6
 10368  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10369  000412  26D9               	addwf	fsr2l,f,c
 10370  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10371  000416  22DA               	addwfc	fsr2h,f,c
 10372  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10373  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10374  000420  EE22  F00E         	lfsr	2,_loRa+14
 10375  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 10376  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 10377  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10378  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10379  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10380  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10381  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10382  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10383  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10384  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10385  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10386  00043E  0102               	movlb	2	; () banked
 10387  000440  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10388  000442  0100               	movlb	0	; () banked
 10389  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10390  000446  0102               	movlb	2	; () banked
 10391  000448  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10392  00044A  B0D8               	btfsc	status,0,c
 10393  00044C  D022               	goto	l2204
 10394                           
 10395                           ; BSR set to: 2
 10396                           ;lorawan.c: 1227: {
 10397                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10398  00044E  0101               	movlb	1	; () banked
 10399  000450  5169               	movf	_rxPayload& (0+255),w,b
 10400  000452  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10401  000454  B4D8               	btfsc	status,2,c
 10402  000456  D015               	goto	u17889
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;lorawan.c: 1229: {
 10406                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10407  000458  0E00               	movlw	0
 10408  00045A  0100               	movlb	0	; () banked
 10409  00045C  6F60               	movwf	RxData@pData& (0+255),b
 10410  00045E  0E00               	movlw	0
 10411  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10412  000462  0E00               	movlw	0
 10413  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 10414  000466  0E05               	movlw	5
 10415  000468  6F63               	movwf	RxData@status& (0+255),b
 10416  00046A  D801               	call	u17888
 10417  00046C  D00A               	goto	u17889
 10418  00046E                     u17888:
 10419  00046E  0005               	push	
 10420  000470  6EFA               	movwf	pclath,c
 10421  000472  0101               	movlb	1	; () banked
 10422  000474  5169               	movf	_rxPayload& (0+255),w,b
 10423  000476  6EFD               	movwf	tosl,c
 10424  000478  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10425  00047A  6EFE               	movwf	tosh,c
 10426  00047C  6AFF               	clrf	tosu,c
 10427  00047E  50FA               	movf	pclath,w,c
 10428  000480  0012               	return		;indir
 10429  000482                     u17889:
 10430                           
 10431                           ;lorawan.c: 1231: }
 10432                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10433  000482  0102               	movlb	2	; () banked
 10434  000484  5102               	movf	(_loRa+2)& (0+255),w,b
 10435  000486  0BF0               	andlw	-16
 10436  000488  0909               	iorlw	9
 10437  00048A  6F02               	movwf	(_loRa+2)& (0+255),b
 10438                           
 10439                           ; BSR set to: 2
 10440                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 10441  00048C  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10442                           
 10443                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 10444                           ;	Return value of _LORAWAN_RxDone is never used
 10445  000490  0012               	return	
 10446  000492                     l2204:
 10447                           
 10448                           ;lorawan.c: 1237: else
 10449                           ;lorawan.c: 1238: {
 10450                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10451  000492  0100               	movlb	0	; () banked
 10452  000494  EE20 F006          	lfsr	2,6
 10453  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10454  00049A  26D9               	addwf	fsr2l,f,c
 10455  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10456  00049E  22DA               	addwfc	fsr2h,f,c
 10457  0004A0  CFDE F20E          	movff	postinc2,_loRa+14
 10458  0004A4  CFDD F20F          	movff	postdec2,_loRa+15
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;lorawan.c: 1240: }
 10462                           ;lorawan.c: 1241: }
 10463  0004A8  D03A               	goto	l2209
 10464  0004AA                     l2203:
 10465                           
 10466                           ;lorawan.c: 1242: else
 10467                           ;lorawan.c: 1243: {
 10468                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10469                           
 10470                           ; BSR set to: 0
 10471  0004AA  0100               	movlb	0	; () banked
 10472  0004AC  EE20 F006          	lfsr	2,6
 10473  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10474  0004B2  26D9               	addwf	fsr2l,f,c
 10475  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10476  0004B6  22DA               	addwfc	fsr2h,f,c
 10477  0004B8  50DE               	movf	postinc2,w,c
 10478  0004BA  10DE               	iorwf	postinc2,w,c
 10479  0004BC  A4D8               	btfss	status,2,c
 10480  0004BE  D00D               	goto	l2208
 10481                           
 10482                           ; BSR set to: 0
 10483  0004C0  0102               	movlb	2	; () banked
 10484  0004C2  290E               	incf	(_loRa+14)& (0+255),w,b
 10485  0004C4  E10A               	bnz	l14993
 10486  0004C6  290F               	incf	(_loRa+15)& (0+255),w,b
 10487  0004C8  A4D8               	btfss	status,2,c
 10488  0004CA  D007               	goto	l2208
 10489                           
 10490                           ; BSR set to: 2
 10491                           ;lorawan.c: 1245: {
 10492                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 10493  0004CC  0E00               	movlw	0
 10494  0004CE  6F0F               	movwf	(_loRa+15)& (0+255),b
 10495  0004D0  0E00               	movlw	0
 10496  0004D2  6F0E               	movwf	(_loRa+14)& (0+255),b
 10497                           
 10498                           ; BSR set to: 2
 10499                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 10500  0004D4  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 10501  0004D6  2B11               	incf	(_loRa+17)& (0+255),f,b
 10502                           
 10503                           ;lorawan.c: 1248: }
 10504  0004D8  D022               	goto	l2209
 10505  0004DA                     l2208:
 10506  0004DA                     l14993:
 10507                           
 10508                           ;lorawan.c: 1249: else
 10509                           ;lorawan.c: 1250: {
 10510                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 10511  0004DA  0101               	movlb	1	; () banked
 10512  0004DC  5169               	movf	_rxPayload& (0+255),w,b
 10513  0004DE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10514  0004E0  B4D8               	btfsc	status,2,c
 10515  0004E2  D015               	goto	u17929
 10516                           
 10517                           ; BSR set to: 1
 10518                           ;lorawan.c: 1252: {
 10519                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10520  0004E4  0E00               	movlw	0
 10521  0004E6  0100               	movlb	0	; () banked
 10522  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 10523  0004EA  0E00               	movlw	0
 10524  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10525  0004EE  0E00               	movlw	0
 10526  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 10527  0004F2  0E05               	movlw	5
 10528  0004F4  6F63               	movwf	RxData@status& (0+255),b
 10529  0004F6  D801               	call	u17928
 10530  0004F8  D00A               	goto	u17929
 10531  0004FA                     u17928:
 10532  0004FA  0005               	push	
 10533  0004FC  6EFA               	movwf	pclath,c
 10534  0004FE  0101               	movlb	1	; () banked
 10535  000500  5169               	movf	_rxPayload& (0+255),w,b
 10536  000502  6EFD               	movwf	tosl,c
 10537  000504  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10538  000506  6EFE               	movwf	tosh,c
 10539  000508  6AFF               	clrf	tosu,c
 10540  00050A  50FA               	movf	pclath,w,c
 10541  00050C  0012               	return		;indir
 10542  00050E                     u17929:
 10543                           
 10544                           ;lorawan.c: 1254: }
 10545                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10546  00050E  0102               	movlb	2	; () banked
 10547  000510  5102               	movf	(_loRa+2)& (0+255),w,b
 10548  000512  0BF0               	andlw	-16
 10549  000514  0909               	iorlw	9
 10550  000516  6F02               	movwf	(_loRa+2)& (0+255),b
 10551                           
 10552                           ; BSR set to: 2
 10553                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 10554  000518  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10555                           
 10556                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 10557                           ;	Return value of _LORAWAN_RxDone is never used
 10558  00051C  0012               	return	
 10559  00051E                     l2209:
 10560                           
 10561                           ;lorawan.c: 1259: }
 10562                           ;lorawan.c: 1260: }
 10563                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 10564  00051E  0102               	movlb	2	; () banked
 10565  000520  290E               	incf	(_loRa+14)& (0+255),w,b
 10566  000522  E129               	bnz	l15015
 10567  000524  290F               	incf	(_loRa+15)& (0+255),w,b
 10568  000526  E127               	bnz	l15015
 10569  000528  2910               	incf	(_loRa+16)& (0+255),w,b
 10570  00052A  E125               	bnz	l15015
 10571  00052C  2911               	incf	(_loRa+17)& (0+255),w,b
 10572  00052E  A4D8               	btfss	status,2,c
 10573  000530  D022               	goto	l2211
 10574                           
 10575                           ; BSR set to: 2
 10576                           ;lorawan.c: 1263: {
 10577                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 10578  000532  0101               	movlb	1	; () banked
 10579  000534  5169               	movf	_rxPayload& (0+255),w,b
 10580  000536  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10581  000538  B4D8               	btfsc	status,2,c
 10582  00053A  D015               	goto	u17959
 10583                           
 10584                           ; BSR set to: 1
 10585                           ;lorawan.c: 1265: {
 10586                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10587  00053C  0E00               	movlw	0
 10588  00053E  0100               	movlb	0	; () banked
 10589  000540  6F60               	movwf	RxData@pData& (0+255),b
 10590  000542  0E00               	movlw	0
 10591  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10592  000546  0E00               	movlw	0
 10593  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 10594  00054A  0E05               	movlw	5
 10595  00054C  6F63               	movwf	RxData@status& (0+255),b
 10596  00054E  D801               	call	u17958
 10597  000550  D00A               	goto	u17959
 10598  000552                     u17958:
 10599  000552  0005               	push	
 10600  000554  6EFA               	movwf	pclath,c
 10601  000556  0101               	movlb	1	; () banked
 10602  000558  5169               	movf	_rxPayload& (0+255),w,b
 10603  00055A  6EFD               	movwf	tosl,c
 10604  00055C  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10605  00055E  6EFE               	movwf	tosh,c
 10606  000560  6AFF               	clrf	tosu,c
 10607  000562  50FA               	movf	pclath,w,c
 10608  000564  0012               	return		;indir
 10609  000566                     u17959:
 10610                           
 10611                           ;lorawan.c: 1267: }
 10612                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10613  000566  0102               	movlb	2	; () banked
 10614  000568  5102               	movf	(_loRa+2)& (0+255),w,b
 10615  00056A  0BF0               	andlw	-16
 10616  00056C  0909               	iorlw	9
 10617  00056E  6F02               	movwf	(_loRa+2)& (0+255),b
 10618                           
 10619                           ; BSR set to: 2
 10620                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 10621  000570  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10622                           
 10623                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 10624                           ;	Return value of _LORAWAN_RxDone is never used
 10625  000574  0012               	return	
 10626  000576                     l2211:
 10627  000576                     l15015:
 10628                           
 10629                           ;lorawan.c: 1272: }
 10630                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 10631  000576  0102               	movlb	2	; () banked
 10632  000578  5102               	movf	(_loRa+2)& (0+255),w,b
 10633  00057A  0B0F               	andlw	15
 10634  00057C  0A08               	xorlw	8
 10635  00057E  A4D8               	btfss	status,2,c
 10636  000580  D008               	goto	l2213
 10637                           
 10638                           ; BSR set to: 2
 10639                           ;lorawan.c: 1275: {
 10640                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 10641  000582  51E4               	movf	(_loRa+228)& (0+255),w,b
 10642  000584  EC96  F043         	call	_SwTimerStop
 10643                           
 10644                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 10645  000588  0102               	movlb	2	; () banked
 10646  00058A  51E5               	movf	(_loRa+229)& (0+255),w,b
 10647  00058C  EC96  F043         	call	_SwTimerStop
 10648                           
 10649                           ;lorawan.c: 1278: }
 10650  000590  D009               	goto	l2215
 10651  000592                     l2213:
 10652                           
 10653                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 10654  000592  0102               	movlb	2	; () banked
 10655  000594  5102               	movf	(_loRa+2)& (0+255),w,b
 10656  000596  0B0F               	andlw	15
 10657  000598  0A03               	xorlw	3
 10658  00059A  A4D8               	btfss	status,2,c
 10659  00059C  D003               	goto	l2215
 10660                           
 10661                           ; BSR set to: 2
 10662                           ;lorawan.c: 1280: {
 10663                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 10664  00059E  51E5               	movf	(_loRa+229)& (0+255),w,b
 10665  0005A0  EC96  F043         	call	_SwTimerStop
 10666  0005A4                     l2215:
 10667                           
 10668                           ;lorawan.c: 1282: }
 10669                           ;lorawan.c: 1284: buffer = buffer + 8;
 10670  0005A4  0E08               	movlw	8
 10671  0005A6  0101               	movlb	1	; () banked
 10672  0005A8  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10673  0005AA  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 10674  0005AC  0E00               	movlw	0
 10675  0005AE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10676  0005B0  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 10677                           
 10678                           ; BSR set to: 1
 10679                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 10680  0005B2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10681  0005B4  0100               	movlb	0	; () banked
 10682  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 10683  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 10684  0005BA  EE20 F005          	lfsr	2,5
 10685  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10686  0005C0  26D9               	addwf	fsr2l,f,c
 10687  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10688  0005C4  22DA               	addwfc	fsr2h,f,c
 10689  0005C6  50DF               	movf	223,w,c
 10690  0005C8  0B0F               	andlw	15
 10691  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 10692  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 10693  0005CE  0E0C               	movlw	12
 10694  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 10695  0005D2  0E00               	movlw	0
 10696  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 10697  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10698  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 10699  0005DA  E104               	bnz	u17980
 10700  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10701  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 10702  0005E0  B4D8               	btfsc	status,2,c
 10703  0005E2  D037               	goto	l2216
 10704  0005E4                     u17980:
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;lorawan.c: 1287: {
 10708                           ;lorawan.c: 1288: fPort = *(buffer++);
 10709  0005E4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10710  0005E8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10711  0005EC  50DF               	movf	indf2,w,c
 10712  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 10713                           
 10714                           ; BSR set to: 0
 10715  0005F0  0101               	movlb	1	; () banked
 10716  0005F2  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 10717  0005F4  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 10721  0005F6  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10722  0005F8  0FF4               	addlw	244
 10723  0005FA  0100               	movlb	0	; () banked
 10724  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 10728  0005FE  0E19               	movlw	25
 10729  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 10733  000602  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 10734  000606  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 10735  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 10736  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 10737  00060E  0E01               	movlw	1
 10738  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 10739  000612  C20E  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 10740  000616  C20F  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 10741  00061A  C210  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 10742  00061E  C211  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 10743  000622  0E76               	movlw	low (_loRa+118)
 10744  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 10745  000626  0E02               	movlw	high (_loRa+118)
 10746  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 10747  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 10748  00062E  0EEF               	movlw	low _radioBuffer
 10749  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 10750  000632  0E05               	movlw	high _radioBuffer
 10751  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 10752  000636  0E01               	movlw	1
 10753  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 10754  00063A  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 10755                           
 10756                           ;lorawan.c: 1294: packet = buffer - 1;
 10757  00063E  0EFF               	movlw	255
 10758  000640  0101               	movlb	1	; () banked
 10759  000642  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10760  000644  0100               	movlb	0	; () banked
 10761  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 10762  000648  0EFF               	movlw	255
 10763  00064A  0101               	movlb	1	; () banked
 10764  00064C  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10765  00064E  0100               	movlb	0	; () banked
 10766  000650  D005               	goto	L7
 10767  000652                     l2216:
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;lorawan.c: 1296: else
 10771                           ;lorawan.c: 1297: {
 10772                           ;lorawan.c: 1298: frmPayloadLength = 0;
 10773                           
 10774                           ; BSR set to: 0
 10775  000652  0E00               	movlw	0
 10776  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;lorawan.c: 1299: packet = (0);
 10780  000656  0E00               	movlw	0
 10781  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 10782  00065A  0E00               	movlw	0
 10783  00065C                     L7:
 10784  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;lorawan.c: 1300: }
 10788                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 10789                           
 10790                           ; BSR set to: 0
 10791  00065E  0102               	movlb	2	; () banked
 10792  000660  8303               	bsf	(_loRa+3)& (0+255),1,b
 10793                           
 10794                           ; BSR set to: 2
 10795                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 10796  000662  9102               	bcf	(_loRa+2)& (0+255),0,b
 10797  000664  9302               	bcf	(_loRa+2)& (0+255),1,b
 10798  000666  9502               	bcf	(_loRa+2)& (0+255),2,b
 10799  000668  9702               	bcf	(_loRa+2)& (0+255),3,b
 10800                           
 10801                           ; BSR set to: 2
 10802                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 10803  00066A  0101               	movlb	1	; () banked
 10804  00066C  5169               	movf	_rxPayload& (0+255),w,b
 10805  00066E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 10806  000670  B4D8               	btfsc	status,2,c
 10807  000672  D015               	goto	u18009
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;lorawan.c: 1306: {
 10811                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 10812  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 10813  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 10814  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 10815  000680  0E01               	movlw	1
 10816  000682  0100               	movlb	0	; () banked
 10817  000684  6F63               	movwf	RxData@status& (0+255),b
 10818  000686  D801               	call	u18008
 10819  000688  D00A               	goto	u18009
 10820  00068A                     u18008:
 10821  00068A  0005               	push	
 10822  00068C  6EFA               	movwf	pclath,c
 10823  00068E  0101               	movlb	1	; () banked
 10824  000690  5169               	movf	_rxPayload& (0+255),w,b
 10825  000692  6EFD               	movwf	tosl,c
 10826  000694  516A               	movf	(_rxPayload+1)& (0+255),w,b
 10827  000696  6EFE               	movwf	tosh,c
 10828  000698  6AFF               	clrf	tosu,c
 10829  00069A  50FA               	movf	pclath,w,c
 10830  00069C  0012               	return		;indir
 10831  00069E                     u18009:
 10832                           
 10833                           ;lorawan.c: 1308: }
 10834                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10835  00069E  0102               	movlb	2	; () banked
 10836  0006A0  5102               	movf	(_loRa+2)& (0+255),w,b
 10837  0006A2  0BF0               	andlw	-16
 10838  0006A4  0909               	iorlw	9
 10839  0006A6  6F02               	movwf	(_loRa+2)& (0+255),b
 10840                           
 10841                           ; BSR set to: 2
 10842                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 10843  0006A8  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10844                           
 10845                           ;lorawan.c: 1312: return MAC_OK;
 10846                           ;	Return value of _LORAWAN_RxDone is never used
 10847  0006AC  0012               	return	
 10848  0006AE                     l2200:
 10849                           
 10850                           ;lorawan.c: 1313: }
 10851                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 10852  0006AE  0100               	movlb	0	; () banked
 10853  0006B0  EE20 F001          	lfsr	2,1
 10854  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10855  0006B6  26D9               	addwf	fsr2l,f,c
 10856  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10857  0006BA  22DA               	addwfc	fsr2h,f,c
 10858  0006BC  0102               	movlb	2	; () banked
 10859  0006BE  511E               	movf	(_loRa+30)& (0+255),w,b
 10860  0006C0  18DE               	xorwf	postinc2,w,c
 10861  0006C2  E10A               	bnz	u18010
 10862  0006C4  511F               	movf	(_loRa+31)& (0+255),w,b
 10863  0006C6  18DE               	xorwf	postinc2,w,c
 10864  0006C8  E107               	bnz	u18010
 10865  0006CA  5120               	movf	(_loRa+32)& (0+255),w,b
 10866  0006CC  18DE               	xorwf	postinc2,w,c
 10867  0006CE  E104               	bnz	u18010
 10868  0006D0  5121               	movf	(_loRa+33)& (0+255),w,b
 10869  0006D2  18DE               	xorwf	postinc2,w,c
 10870  0006D4  B4D8               	btfsc	status,2,c
 10871  0006D6  D00E               	goto	l2219
 10872  0006D8                     u18010:
 10873                           
 10874                           ; BSR set to: 2
 10875                           ;lorawan.c: 1317: {
 10876                           ;lorawan.c: 1318: SetReceptionNotOkState();
 10877  0006D8  EC12  F03A         	call	_SetReceptionNotOkState	;wreg free
 10878                           
 10879                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 10880  0006DC  0E02               	movlw	2
 10881  0006DE  0102               	movlb	2	; () banked
 10882  0006E0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10883  0006E2  A4D8               	btfss	status,2,c
 10884  0006E4  0012               	return	
 10885                           
 10886                           ; BSR set to: 2
 10887                           ;lorawan.c: 1320: {
 10888                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10889  0006E6  5102               	movf	(_loRa+2)& (0+255),w,b
 10890  0006E8  0BF0               	andlw	-16
 10891  0006EA  0909               	iorlw	9
 10892  0006EC  6F02               	movwf	(_loRa+2)& (0+255),b
 10893                           
 10894                           ; BSR set to: 2
 10895                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 10896  0006EE  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10897                           
 10898                           ;lorawan.c: 1323: }
 10899                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 10900                           ;	Return value of _LORAWAN_RxDone is never used
 10901  0006F2  0012               	return	
 10902  0006F4                     l2219:
 10903                           
 10904                           ;lorawan.c: 1325: }
 10905                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 10906  0006F4  0100               	movlb	0	; () banked
 10907  0006F6  EE20 F006          	lfsr	2,6
 10908  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10909  0006FC  26D9               	addwf	fsr2l,f,c
 10910  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10911  000700  22DA               	addwfc	fsr2h,f,c
 10912  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 10913  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 10914  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10915  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10916  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10917  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10918  000716  0101               	movlb	1	; () banked
 10919  000718  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10920  00071A  0FFC               	addlw	252
 10921  00071C  0100               	movlb	0	; () banked
 10922  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10923  000720  0E49               	movlw	73
 10924  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10925  000724  0E00               	movlw	0
 10926  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10927  000728  0E01               	movlw	1
 10928  00072A  EC09  F030         	call	_AssembleEncryptionBlock
 10929                           
 10930                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10931  00072E  0EEF               	movlw	low _radioBuffer
 10932  000730  0100               	movlb	0	; () banked
 10933  000732  6F60               	movwf	memcpy@d1& (0+255),b
 10934  000734  0E05               	movlw	high _radioBuffer
 10935  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10936  000738  0EB0               	movlw	low _aesBuffer
 10937  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 10938  00073C  0E01               	movlw	high _aesBuffer
 10939  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10940  000740  0E00               	movlw	0
 10941  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10942  000744  0E10               	movlw	16
 10943  000746  6F64               	movwf	memcpy@n& (0+255),b
 10944  000748  EC37  F03D         	call	_memcpy	;wreg free
 10945                           
 10946                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10947  00074C  0EFF               	movlw	low (_radioBuffer+16)
 10948  00074E  0100               	movlb	0	; () banked
 10949  000750  6F60               	movwf	memcpy@d1& (0+255),b
 10950  000752  0E05               	movlw	high (_radioBuffer+16)
 10951  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10952  000756  C166  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10953  00075A  C167  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10954  00075E  0EFC               	movlw	252
 10955  000760  0101               	movlb	1	; () banked
 10956  000762  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10957  000764  0100               	movlb	0	; () banked
 10958  000766  6F64               	movwf	memcpy@n& (0+255),b
 10959  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 10960  00076A  0EFF               	movlw	255
 10961  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 10962  00076E  EC37  F03D         	call	_memcpy	;wreg free
 10963                           
 10964                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10965  000772  0E22               	movlw	low (_loRa+34)
 10966  000774  0100               	movlb	0	; () banked
 10967  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 10968  000778  0E02               	movlw	high (_loRa+34)
 10969  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 10970  00077C  0EB0               	movlw	low _aesBuffer
 10971  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 10972  000780  0E01               	movlw	high _aesBuffer
 10973  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 10974  000784  0EEF               	movlw	low _radioBuffer
 10975  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 10976  000788  0E05               	movlw	high _radioBuffer
 10977  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 10978  00078C  0101               	movlb	1	; () banked
 10979  00078E  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10980  000790  0F0C               	addlw	12
 10981  000792  0100               	movlb	0	; () banked
 10982  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 10983  000796  ECF8  F010         	call	_AESCmac	;wreg free
 10984                           
 10985                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10986  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 10987  00079C  0100               	movlb	0	; () banked
 10988  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 10989  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 10990  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10991  0007A4  0EB0               	movlw	low _aesBuffer
 10992  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 10993  0007A8  0E01               	movlw	high _aesBuffer
 10994  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10995  0007AC  0E00               	movlw	0
 10996  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10997  0007B0  0E04               	movlw	4
 10998  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 10999  0007B4  EC37  F03D         	call	_memcpy	;wreg free
 11000                           
 11001                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11002  0007B8  C166  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11003  0007BC  C167  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11004  0007C0  C168  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11005  0007C4  EC20  F03E         	call	_ExtractMic	;wreg free
 11006  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11007  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11008  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11009  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11010                           
 11011                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11012  0007D8  0100               	movlb	0	; () banked
 11013  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11014  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11015  0007DE  E10A               	bnz	u18030
 11016  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11017  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11018  0007E4  E107               	bnz	u18030
 11019  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11020  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11021  0007EA  E104               	bnz	u18030
 11022  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11023  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11024  0007F0  B4D8               	btfsc	status,2,c
 11025  0007F2  D00E               	goto	l2221
 11026  0007F4                     u18030:
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;lorawan.c: 1337: {
 11030                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11031  0007F4  EC12  F03A         	call	_SetReceptionNotOkState	;wreg free
 11032                           
 11033                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 11034  0007F8  0E02               	movlw	2
 11035  0007FA  0102               	movlb	2	; () banked
 11036  0007FC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11037  0007FE  A4D8               	btfss	status,2,c
 11038  000800  0012               	return	
 11039                           
 11040                           ; BSR set to: 2
 11041                           ;lorawan.c: 1340: {
 11042                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11043  000802  5102               	movf	(_loRa+2)& (0+255),w,b
 11044  000804  0BF0               	andlw	-16
 11045  000806  0909               	iorlw	9
 11046  000808  6F02               	movwf	(_loRa+2)& (0+255),b
 11047                           
 11048                           ; BSR set to: 2
 11049                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 11050  00080A  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11051                           
 11052                           ;lorawan.c: 1343: }
 11053                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 11054                           ;	Return value of _LORAWAN_RxDone is never used
 11055  00080E  0012               	return	
 11056  000810                     l2221:
 11057                           
 11058                           ;lorawan.c: 1345: }
 11059                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11060  000810  0100               	movlb	0	; () banked
 11061  000812  EE20 F006          	lfsr	2,6
 11062  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11063  000818  26D9               	addwf	fsr2l,f,c
 11064  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11065  00081C  22DA               	addwfc	fsr2h,f,c
 11066  00081E  0102               	movlb	2	; () banked
 11067  000820  510A               	movf	(_loRa+10)& (0+255),w,b
 11068  000822  5CDE               	subwf	postinc2,w,c
 11069  000824  510B               	movf	(_loRa+11)& (0+255),w,b
 11070  000826  58DE               	subwfb	postinc2,w,c
 11071  000828  A0D8               	btfss	status,0,c
 11072  00082A  D05D               	goto	l2223
 11073                           
 11074                           ; BSR set to: 2
 11075                           ;lorawan.c: 1349: {
 11076                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11077  00082C  0100               	movlb	0	; () banked
 11078  00082E  EE20 F006          	lfsr	2,6
 11079  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11080  000834  26D9               	addwf	fsr2l,f,c
 11081  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11082  000838  22DA               	addwfc	fsr2h,f,c
 11083  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 11084  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 11085  000842  EE22  F00A         	lfsr	2,_loRa+10
 11086  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 11087  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 11088  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11089  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11090  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11091  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11092  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11093  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11094  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11095  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11096  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11097  000860  0102               	movlb	2	; () banked
 11098  000862  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11099  000864  0100               	movlb	0	; () banked
 11100  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11101  000868  0102               	movlb	2	; () banked
 11102  00086A  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11103  00086C  B0D8               	btfsc	status,0,c
 11104  00086E  D02F               	goto	l2224
 11105                           
 11106                           ; BSR set to: 2
 11107                           ;lorawan.c: 1351: {
 11108                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11109  000870  9100               	bcf	_loRa& (0+255),0,b
 11110                           
 11111                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11112  000872  9102               	bcf	(_loRa+2)& (0+255),0,b
 11113  000874  9302               	bcf	(_loRa+2)& (0+255),1,b
 11114  000876  9502               	bcf	(_loRa+2)& (0+255),2,b
 11115  000878  9702               	bcf	(_loRa+2)& (0+255),3,b
 11116                           
 11117                           ; BSR set to: 2
 11118                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11119  00087A  0101               	movlb	1	; () banked
 11120  00087C  5169               	movf	_rxPayload& (0+255),w,b
 11121  00087E  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11122  000880  B4D8               	btfsc	status,2,c
 11123  000882  D017               	goto	u18089
 11124                           
 11125                           ; BSR set to: 1
 11126                           ;lorawan.c: 1355: {
 11127                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11128  000884  0102               	movlb	2	; () banked
 11129  000886  9B00               	bcf	_loRa& (0+255),5,b
 11130                           
 11131                           ; BSR set to: 2
 11132                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11133  000888  0E00               	movlw	0
 11134  00088A  0100               	movlb	0	; () banked
 11135  00088C  6F60               	movwf	RxData@pData& (0+255),b
 11136  00088E  0E00               	movlw	0
 11137  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11138  000892  0E00               	movlw	0
 11139  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 11140  000896  0E00               	movlw	0
 11141  000898  6F63               	movwf	RxData@status& (0+255),b
 11142  00089A  D801               	call	u18088
 11143  00089C  D00A               	goto	u18089
 11144  00089E                     u18088:
 11145  00089E  0005               	push	
 11146  0008A0  6EFA               	movwf	pclath,c
 11147  0008A2  0101               	movlb	1	; () banked
 11148  0008A4  5169               	movf	_rxPayload& (0+255),w,b
 11149  0008A6  6EFD               	movwf	tosl,c
 11150  0008A8  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11151  0008AA  6EFE               	movwf	tosh,c
 11152  0008AC  6AFF               	clrf	tosu,c
 11153  0008AE  50FA               	movf	pclath,w,c
 11154  0008B0  0012               	return		;indir
 11155  0008B2                     u18089:
 11156                           
 11157                           ;lorawan.c: 1358: }
 11158                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11159  0008B2  0102               	movlb	2	; () banked
 11160  0008B4  9303               	bcf	(_loRa+3)& (0+255),1,b
 11161                           
 11162                           ; BSR set to: 2
 11163                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 11164  0008B6  8304               	bsf	(_loRa+4)& (0+255),1,b
 11165                           
 11166                           ; BSR set to: 2
 11167                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 11168  0008B8  0E02               	movlw	2
 11169  0008BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11170  0008BC  A4D8               	btfss	status,2,c
 11171  0008BE  0012               	return	
 11172                           
 11173                           ; BSR set to: 2
 11174                           ;lorawan.c: 1364: {
 11175                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11176  0008C0  5102               	movf	(_loRa+2)& (0+255),w,b
 11177  0008C2  0BF0               	andlw	-16
 11178  0008C4  0909               	iorlw	9
 11179  0008C6  6F02               	movwf	(_loRa+2)& (0+255),b
 11180                           
 11181                           ; BSR set to: 2
 11182                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 11183  0008C8  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11184                           
 11185                           ;lorawan.c: 1367: }
 11186                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11187                           ;	Return value of _LORAWAN_RxDone is never used
 11188  0008CC  0012               	return	
 11189  0008CE                     l2224:
 11190                           
 11191                           ;lorawan.c: 1370: else
 11192                           ;lorawan.c: 1371: {
 11193                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11194  0008CE  0100               	movlb	0	; () banked
 11195  0008D0  EE20 F006          	lfsr	2,6
 11196  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11197  0008D6  26D9               	addwf	fsr2l,f,c
 11198  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11199  0008DA  22DA               	addwfc	fsr2h,f,c
 11200  0008DC  CFDE F20A          	movff	postinc2,_loRa+10
 11201  0008E0  CFDD F20B          	movff	postdec2,_loRa+11
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;lorawan.c: 1373: }
 11205                           ;lorawan.c: 1374: }
 11206  0008E4  D02E               	goto	l2230
 11207  0008E6                     l2223:
 11208                           
 11209                           ;lorawan.c: 1375: else
 11210                           ;lorawan.c: 1376: {
 11211                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11212                           
 11213                           ; BSR set to: 0
 11214  0008E6  0100               	movlb	0	; () banked
 11215  0008E8  EE20 F006          	lfsr	2,6
 11216  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11217  0008EE  26D9               	addwf	fsr2l,f,c
 11218  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11219  0008F2  22DA               	addwfc	fsr2h,f,c
 11220  0008F4  50DE               	movf	postinc2,w,c
 11221  0008F6  10DE               	iorwf	postinc2,w,c
 11222  0008F8  A4D8               	btfss	status,2,c
 11223  0008FA  D015               	goto	l2229
 11224                           
 11225                           ; BSR set to: 0
 11226  0008FC  0102               	movlb	2	; () banked
 11227  0008FE  290A               	incf	(_loRa+10)& (0+255),w,b
 11228  000900  E112               	bnz	l15127
 11229  000902  290B               	incf	(_loRa+11)& (0+255),w,b
 11230  000904  A4D8               	btfss	status,2,c
 11231  000906  D00F               	goto	l2229
 11232                           
 11233                           ; BSR set to: 2
 11234                           ;lorawan.c: 1378: {
 11235                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11236  000908  0100               	movlb	0	; () banked
 11237  00090A  EE20 F006          	lfsr	2,6
 11238  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11239  000910  26D9               	addwf	fsr2l,f,c
 11240  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11241  000914  22DA               	addwfc	fsr2h,f,c
 11242  000916  CFDE F20A          	movff	postinc2,_loRa+10
 11243  00091A  CFDD F20B          	movff	postdec2,_loRa+11
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11247  00091E  0102               	movlb	2	; () banked
 11248  000920  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11249  000922  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11250                           
 11251                           ;lorawan.c: 1382: }
 11252  000924  D00E               	goto	l2230
 11253  000926                     l2229:
 11254  000926                     l15127:
 11255                           
 11256                           ;lorawan.c: 1383: else
 11257                           ;lorawan.c: 1384: {
 11258                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11259  000926  EC12  F03A         	call	_SetReceptionNotOkState	;wreg free
 11260                           
 11261                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 11262  00092A  0E02               	movlw	2
 11263  00092C  0102               	movlb	2	; () banked
 11264  00092E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11265  000930  A4D8               	btfss	status,2,c
 11266  000932  0012               	return	
 11267                           
 11268                           ; BSR set to: 2
 11269                           ;lorawan.c: 1387: {
 11270                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11271  000934  5102               	movf	(_loRa+2)& (0+255),w,b
 11272  000936  0BF0               	andlw	-16
 11273  000938  0909               	iorlw	9
 11274  00093A  6F02               	movwf	(_loRa+2)& (0+255),b
 11275                           
 11276                           ; BSR set to: 2
 11277                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 11278  00093C  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11279                           
 11280                           ;lorawan.c: 1390: }
 11281                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 11282                           ;	Return value of _LORAWAN_RxDone is never used
 11283  000940  0012               	return	
 11284  000942                     l2230:
 11285                           
 11286                           ;lorawan.c: 1393: }
 11287                           ;lorawan.c: 1394: }
 11288                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11289  000942  0102               	movlb	2	; () banked
 11290  000944  290A               	incf	(_loRa+10)& (0+255),w,b
 11291  000946  E113               	bnz	l15149
 11292  000948  290B               	incf	(_loRa+11)& (0+255),w,b
 11293  00094A  E111               	bnz	l15149
 11294  00094C  290C               	incf	(_loRa+12)& (0+255),w,b
 11295  00094E  E10F               	bnz	l15149
 11296  000950  290D               	incf	(_loRa+13)& (0+255),w,b
 11297  000952  A4D8               	btfss	status,2,c
 11298  000954  D00C               	goto	l2232
 11299                           
 11300                           ; BSR set to: 2
 11301                           ;lorawan.c: 1397: {
 11302                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11303  000956  8304               	bsf	(_loRa+4)& (0+255),1,b
 11304                           
 11305                           ; BSR set to: 2
 11306                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11307  000958  0E02               	movlw	2
 11308  00095A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11309  00095C  A4D8               	btfss	status,2,c
 11310  00095E  0012               	return	
 11311                           
 11312                           ; BSR set to: 2
 11313                           ;lorawan.c: 1402: {
 11314                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11315  000960  5102               	movf	(_loRa+2)& (0+255),w,b
 11316  000962  0BF0               	andlw	-16
 11317  000964  0909               	iorlw	9
 11318  000966  6F02               	movwf	(_loRa+2)& (0+255),b
 11319                           
 11320                           ; BSR set to: 2
 11321                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 11322  000968  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11323                           
 11324                           ;lorawan.c: 1405: }
 11325                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11326                           ;	Return value of _LORAWAN_RxDone is never used
 11327  00096C  0012               	return	
 11328  00096E                     l2232:
 11329  00096E                     l15149:
 11330                           
 11331                           ;lorawan.c: 1407: }
 11332                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11333  00096E  0102               	movlb	2	; () banked
 11334  000970  5102               	movf	(_loRa+2)& (0+255),w,b
 11335  000972  0B0F               	andlw	15
 11336  000974  0A03               	xorlw	3
 11337  000976  A4D8               	btfss	status,2,c
 11338  000978  D003               	goto	l2234
 11339                           
 11340                           ; BSR set to: 2
 11341                           ;lorawan.c: 1411: {
 11342                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11343  00097A  51E5               	movf	(_loRa+229)& (0+255),w,b
 11344  00097C  EC96  F043         	call	_SwTimerStop
 11345  000980                     l2234:
 11346                           
 11347                           ;lorawan.c: 1413: }
 11348                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11349  000980  0E01               	movlw	1
 11350  000982  0102               	movlb	2	; () banked
 11351  000984  6FD8               	movwf	(_loRa+216)& (0+255),b
 11352                           
 11353                           ; BSR set to: 2
 11354                           ;lorawan.c: 1417: CheckFlags (hdr);
 11355  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11356  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11357  00098E  EC96  F03D         	call	_CheckFlags	;wreg free
 11358                           
 11359                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11360  000992  0100               	movlb	0	; () banked
 11361  000994  EE20 F005          	lfsr	2,5
 11362  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11363  00099A  26D9               	addwf	fsr2l,f,c
 11364  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11365  00099E  22DA               	addwfc	fsr2h,f,c
 11366  0009A0  50DF               	movf	223,w,c
 11367  0009A2  0B0F               	andlw	15
 11368  0009A4  0900               	iorlw	0
 11369  0009A6  B4D8               	btfsc	status,2,c
 11370  0009A8  D016               	goto	l2235
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;lorawan.c: 1420: {
 11374                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11375  0009AA  0E08               	movlw	8
 11376  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11377  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 11378  0009B0  0E00               	movlw	0
 11379  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11380  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11381  0009B6  EE20 F005          	lfsr	2,5
 11382  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11383  0009BC  26D9               	addwf	fsr2l,f,c
 11384  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11385  0009C0  22DA               	addwfc	fsr2h,f,c
 11386  0009C2  50DF               	movf	223,w,c
 11387  0009C4  0B0F               	andlw	15
 11388  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11389  0009C8  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 11390  0009CC  C0B0  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11391  0009D0  C0B1  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11392                           
 11393                           ;lorawan.c: 1422: }
 11394  0009D4  D007               	goto	l2236
 11395  0009D6                     l2235:
 11396                           
 11397                           ;lorawan.c: 1423: else
 11398                           ;lorawan.c: 1424: {
 11399                           ;lorawan.c: 1425: buffer = buffer + 8;
 11400  0009D6  0E08               	movlw	8
 11401  0009D8  0101               	movlb	1	; () banked
 11402  0009DA  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11403  0009DC  6F66               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 11404  0009DE  0E00               	movlw	0
 11405  0009E0  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11406  0009E2  6F67               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 11407  0009E4                     l2236:
 11408                           
 11409                           ;lorawan.c: 1426: }
 11410                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11411                           
 11412                           ; BSR set to: 1
 11413  0009E4  0101               	movlb	1	; () banked
 11414  0009E6  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11415  0009E8  0100               	movlb	0	; () banked
 11416  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11417  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11418  0009EE  EE20 F005          	lfsr	2,5
 11419  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11420  0009F4  26D9               	addwf	fsr2l,f,c
 11421  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11422  0009F8  22DA               	addwfc	fsr2h,f,c
 11423  0009FA  50DF               	movf	223,w,c
 11424  0009FC  0B0F               	andlw	15
 11425  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11426  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11427  000A02  0E0C               	movlw	12
 11428  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11429  000A06  0E00               	movlw	0
 11430  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11431  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11432  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11433  000A0E  E104               	bnz	u18170
 11434  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11435  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11436  000A14  B4D8               	btfsc	status,2,c
 11437  000A16  D098               	goto	l2237
 11438  000A18                     u18170:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;lorawan.c: 1428: {
 11442                           ;lorawan.c: 1429: fPort = *(buffer++);
 11443  000A18  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11444  000A1C  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11445  000A20  50DF               	movf	indf2,w,c
 11446  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11447                           
 11448                           ; BSR set to: 0
 11449  000A24  0101               	movlb	1	; () banked
 11450  000A26  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11451  000A28  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11452                           
 11453                           ; BSR set to: 1
 11454                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11455  000A2A  0100               	movlb	0	; () banked
 11456  000A2C  EE20 F005          	lfsr	2,5
 11457  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11458  000A32  26D9               	addwf	fsr2l,f,c
 11459  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11460  000A36  22DA               	addwfc	fsr2h,f,c
 11461  000A38  50DF               	movf	223,w,c
 11462  000A3A  0B0F               	andlw	15
 11463  000A3C  0800               	sublw	0
 11464  000A3E  0101               	movlb	1	; () banked
 11465  000A40  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11466  000A42  0FF4               	addlw	244
 11467  000A44  0100               	movlb	0	; () banked
 11468  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11472  000A48  EE20 F005          	lfsr	2,5
 11473  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11474  000A4E  26D9               	addwf	fsr2l,f,c
 11475  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11476  000A52  22DA               	addwfc	fsr2h,f,c
 11477  000A54  50DF               	movf	223,w,c
 11478  000A56  0B0F               	andlw	15
 11479  000A58  0F19               	addlw	25
 11480  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;lorawan.c: 1434: if (fPort != 0)
 11484  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11485  000A5E  B4D8               	btfsc	status,2,c
 11486  000A60  D028               	goto	l2238
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;lorawan.c: 1435: {
 11490                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11491  000A62  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11492  000A66  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11493  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11494  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11495  000A6E  0E01               	movlw	1
 11496  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11497  000A72  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11498  000A76  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11499  000A7A  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11500  000A7E  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11501  000A82  0E32               	movlw	low (_loRa+50)
 11502  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11503  000A86  0E02               	movlw	high (_loRa+50)
 11504  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11505  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11506  000A8E  0EEF               	movlw	low _radioBuffer
 11507  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11508  000A92  0E05               	movlw	high _radioBuffer
 11509  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11510  000A96  0E00               	movlw	0
 11511  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11512  000A9A  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 11513                           
 11514                           ;lorawan.c: 1437: packet = buffer - 1;
 11515  000A9E  0EFF               	movlw	255
 11516  000AA0  0101               	movlb	1	; () banked
 11517  000AA2  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11518  000AA4  0100               	movlb	0	; () banked
 11519  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11520  000AA8  0EFF               	movlw	255
 11521  000AAA  0101               	movlb	1	; () banked
 11522  000AAC  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11523  000AAE  0100               	movlb	0	; () banked
 11524  000AB0  D050               	goto	L29
 11525  000AB2                     l2238:
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;lorawan.c: 1439: else
 11529                           ;lorawan.c: 1440: {
 11530                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11531                           
 11532                           ; BSR set to: 0
 11533  000AB2  0101               	movlb	1	; () banked
 11534  000AB4  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11535  000AB6  0100               	movlb	0	; () banked
 11536  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11537  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11538  000ABC  EE20 F005          	lfsr	2,5
 11539  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11540  000AC2  26D9               	addwf	fsr2l,f,c
 11541  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11542  000AC6  22DA               	addwfc	fsr2h,f,c
 11543  000AC8  50DF               	movf	223,w,c
 11544  000ACA  0B0F               	andlw	15
 11545  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11546  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11547  000AD0  0E0D               	movlw	13
 11548  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11549  000AD4  0E00               	movlw	0
 11550  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11551  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11552  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11553  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11554  000ADE  0A80               	xorlw	128
 11555  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11556  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11557  000AE4  0A80               	xorlw	128
 11558  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11559  000AE8  B0D8               	btfsc	status,0,c
 11560  000AEA  D02B               	goto	l2240
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;lorawan.c: 1443: {
 11564                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11565  000AEC  C166  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11566  000AF0  C167  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11567  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11568  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11569  000AF8  0E01               	movlw	1
 11570  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 11571  000AFC  C20A  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11572  000B00  C20B  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11573  000B04  C20C  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11574  000B08  C20D  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11575  000B0C  0E22               	movlw	low (_loRa+34)
 11576  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 11577  000B10  0E02               	movlw	high (_loRa+34)
 11578  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11579  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11580  000B18  0EEF               	movlw	low _radioBuffer
 11581  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11582  000B1C  0E05               	movlw	high _radioBuffer
 11583  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11584  000B20  0E00               	movlw	0
 11585  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11586  000B24  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 11587                           
 11588                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11589  000B28  C166  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11590  000B2C  C167  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11591  000B30  0100               	movlb	0	; () banked
 11592  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11593  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11594  000B36  ECA7  F017         	call	_MacExecuteCommands	;wreg free
 11595  000B3A  C0B0  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11596  000B3E  C0B1  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11597  000B42                     l2240:
 11598                           
 11599                           ;lorawan.c: 1447: }
 11600                           ;lorawan.c: 1449: frmPayloadLength = 0;
 11601  000B42  0E00               	movlw	0
 11602  000B44  0100               	movlb	0	; () banked
 11603  000B46  D001               	goto	L9
 11604  000B48                     l2237:
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;lorawan.c: 1453: else
 11608                           ;lorawan.c: 1454: {
 11609                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11610                           
 11611                           ; BSR set to: 0
 11612  000B48  0E00               	movlw	0
 11613  000B4A                     L9:
 11614  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;lorawan.c: 1456: packet = (0);
 11618  000B4C  0E00               	movlw	0
 11619  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11620  000B50  0E00               	movlw	0
 11621  000B52                     L29:
 11622  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;lorawan.c: 1457: }
 11626                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11627                           
 11628                           ; BSR set to: 0
 11629  000B54  0E01               	movlw	1
 11630  000B56  0102               	movlb	2	; () banked
 11631  000B58  6FD8               	movwf	(_loRa+216)& (0+255),b
 11632                           
 11633                           ; BSR set to: 2
 11634                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11635  000B5A  0E00               	movlw	0
 11636  000B5C  6FD1               	movwf	(_loRa+209)& (0+255),b
 11637  000B5E  0E00               	movlw	0
 11638  000B60  6FD0               	movwf	(_loRa+208)& (0+255),b
 11639                           
 11640                           ; BSR set to: 2
 11641                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11642  000B62  0E00               	movlw	0
 11643  000B64  6FEE               	movwf	(_loRa+238)& (0+255),b
 11644                           
 11645                           ; BSR set to: 2
 11646                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11647  000B66  9900               	bcf	_loRa& (0+255),4,b
 11648                           
 11649                           ; BSR set to: 2
 11650                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11651  000B68  8303               	bsf	(_loRa+3)& (0+255),1,b
 11652                           
 11653                           ; BSR set to: 2
 11654                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11655  000B6A  A100               	btfss	_loRa& (0+255),0,b
 11656  000B6C  D055               	goto	l2242
 11657                           
 11658                           ; BSR set to: 2
 11659                           ;lorawan.c: 1468: {
 11660                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11661  000B6E  0100               	movlb	0	; () banked
 11662  000B70  EE20 F005          	lfsr	2,5
 11663  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11664  000B76  26D9               	addwf	fsr2l,f,c
 11665  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11666  000B7A  22DA               	addwfc	fsr2h,f,c
 11667  000B7C  AADF               	btfss	indf2,5,c
 11668  000B7E  D049               	goto	l2243
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;lorawan.c: 1470: {
 11672                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11673  000B80  0102               	movlb	2	; () banked
 11674  000B82  9100               	bcf	_loRa& (0+255),0,b
 11675                           
 11676                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11677  000B84  9102               	bcf	(_loRa+2)& (0+255),0,b
 11678  000B86  9302               	bcf	(_loRa+2)& (0+255),1,b
 11679  000B88  9502               	bcf	(_loRa+2)& (0+255),2,b
 11680  000B8A  9702               	bcf	(_loRa+2)& (0+255),3,b
 11681                           
 11682                           ; BSR set to: 2
 11683                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11684  000B8C  0101               	movlb	1	; () banked
 11685  000B8E  5169               	movf	_rxPayload& (0+255),w,b
 11686  000B90  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11687  000B92  B4D8               	btfsc	status,2,c
 11688  000B94  D017               	goto	u18239
 11689                           
 11690                           ; BSR set to: 1
 11691                           ;lorawan.c: 1474: {
 11692                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11693  000B96  0102               	movlb	2	; () banked
 11694  000B98  9B00               	bcf	_loRa& (0+255),5,b
 11695                           
 11696                           ; BSR set to: 2
 11697                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11698  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11699  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11700  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11701  000BA6  0E01               	movlw	1
 11702  000BA8  0100               	movlb	0	; () banked
 11703  000BAA  6F63               	movwf	RxData@status& (0+255),b
 11704  000BAC  D801               	call	u18238
 11705  000BAE  D00A               	goto	u18239
 11706  000BB0                     u18238:
 11707  000BB0  0005               	push	
 11708  000BB2  6EFA               	movwf	pclath,c
 11709  000BB4  0101               	movlb	1	; () banked
 11710  000BB6  5169               	movf	_rxPayload& (0+255),w,b
 11711  000BB8  6EFD               	movwf	tosl,c
 11712  000BBA  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11713  000BBC  6EFE               	movwf	tosh,c
 11714  000BBE  6AFF               	clrf	tosu,c
 11715  000BC0  50FA               	movf	pclath,w,c
 11716  000BC2  0012               	return		;indir
 11717  000BC4                     u18239:
 11718                           
 11719                           ;lorawan.c: 1477: }
 11720                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11721  000BC4  0102               	movlb	2	; () banked
 11722  000BC6  9303               	bcf	(_loRa+3)& (0+255),1,b
 11723                           
 11724                           ; BSR set to: 2
 11725                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11726  000BC8  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11727                           
 11728                           ; BSR set to: 2
 11729  000BCA  BB00               	btfsc	_loRa& (0+255),5,b
 11730  000BCC  D06C               	goto	l2257
 11731                           
 11732                           ; BSR set to: 2
 11733  000BCE  B300               	btfsc	_loRa& (0+255),1,b
 11734  000BD0  D002               	goto	u18270
 11735                           
 11736                           ; BSR set to: 2
 11737  000BD2  A700               	btfss	_loRa& (0+255),3,b
 11738  000BD4  D068               	goto	l2257
 11739  000BD6                     u18270:
 11740                           
 11741                           ; BSR set to: 2
 11742                           ;lorawan.c: 1480: {
 11743                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11744                           
 11745                           ; BSR set to: 2
 11746  000BD6  0E01               	movlw	1
 11747  000BD8  0100               	movlb	0	; () banked
 11748  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11749  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 11750  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11751  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 11752  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11753  000BE4  0102               	movlb	2	; () banked
 11754  000BE6  51ED               	movf	(_loRa+237)& (0+255),w,b
 11755  000BE8  EC55  F02C         	call	_SearchAvailableChannel
 11756  000BEC  0900               	iorlw	0
 11757  000BEE  A4D8               	btfss	status,2,c
 11758  000BF0  D00D               	goto	l2248
 11759                           
 11760                           ;lorawan.c: 1482: {
 11761                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 11762  000BF2  0E00               	movlw	0
 11763  000BF4  0100               	movlb	0	; () banked
 11764  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 11765  000BF8  0E00               	movlw	0
 11766  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 11767  000BFC  0E00               	movlw	0
 11768  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11769  000C00  0E00               	movlw	0
 11770  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11771  000C04  0E00               	movlw	0
 11772  000C06  ECA2  F033         	call	_LORAWAN_Send
 11773  000C0A  D048               	goto	l15253
 11774  000C0C                     l2248:
 11775                           
 11776                           ;lorawan.c: 1486: else
 11777                           ;lorawan.c: 1487: {
 11778                           ;lorawan.c: 1489: StartReTxTimer();
 11779                           
 11780                           ; BSR set to: 2
 11781  000C0C  EC91  F025         	call	_StartReTxTimer	;wreg free
 11782                           
 11783                           ;lorawan.c: 1490: }
 11784                           ;lorawan.c: 1491: }
 11785                           ;lorawan.c: 1492: }
 11786  000C10  D04A               	goto	l2257
 11787  000C12                     l2243:
 11788                           
 11789                           ;lorawan.c: 1494: else
 11790                           ;lorawan.c: 1495: {
 11791                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 11792  000C12  ECCC  F03A         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 11793                           
 11794                           ;lorawan.c: 1497: }
 11795                           ;lorawan.c: 1498: }
 11796  000C16  D047               	goto	l2257
 11797  000C18                     l2242:
 11798                           
 11799                           ; BSR set to: 2
 11800                           ;lorawan.c: 1499: else
 11801                           ;lorawan.c: 1500: {
 11802                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 11803  000C18  9102               	bcf	(_loRa+2)& (0+255),0,b
 11804  000C1A  9302               	bcf	(_loRa+2)& (0+255),1,b
 11805  000C1C  9502               	bcf	(_loRa+2)& (0+255),2,b
 11806  000C1E  9702               	bcf	(_loRa+2)& (0+255),3,b
 11807                           
 11808                           ; BSR set to: 2
 11809                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 11810  000C20  0101               	movlb	1	; () banked
 11811  000C22  5169               	movf	_rxPayload& (0+255),w,b
 11812  000C24  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11813  000C26  B4D8               	btfsc	status,2,c
 11814  000C28  D017               	goto	u18309
 11815                           
 11816                           ; BSR set to: 1
 11817                           ;lorawan.c: 1504: {
 11818                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 11819  000C2A  0102               	movlb	2	; () banked
 11820  000C2C  9B00               	bcf	_loRa& (0+255),5,b
 11821                           
 11822                           ; BSR set to: 2
 11823                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11824  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 11825  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 11826  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 11827  000C3A  0E01               	movlw	1
 11828  000C3C  0100               	movlb	0	; () banked
 11829  000C3E  6F63               	movwf	RxData@status& (0+255),b
 11830  000C40  D801               	call	u18308
 11831  000C42  D00A               	goto	u18309
 11832  000C44                     u18308:
 11833  000C44  0005               	push	
 11834  000C46  6EFA               	movwf	pclath,c
 11835  000C48  0101               	movlb	1	; () banked
 11836  000C4A  5169               	movf	_rxPayload& (0+255),w,b
 11837  000C4C  6EFD               	movwf	tosl,c
 11838  000C4E  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11839  000C50  6EFE               	movwf	tosh,c
 11840  000C52  6AFF               	clrf	tosu,c
 11841  000C54  50FA               	movf	pclath,w,c
 11842  000C56  0012               	return		;indir
 11843  000C58                     u18309:
 11844                           
 11845                           ;lorawan.c: 1507: }
 11846                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11847  000C58  0102               	movlb	2	; () banked
 11848  000C5A  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11849                           
 11850                           ; BSR set to: 2
 11851  000C5C  BB00               	btfsc	_loRa& (0+255),5,b
 11852  000C5E  D023               	goto	l2257
 11853                           
 11854                           ; BSR set to: 2
 11855  000C60  B300               	btfsc	_loRa& (0+255),1,b
 11856  000C62  D002               	goto	u18340
 11857                           
 11858                           ; BSR set to: 2
 11859  000C64  A700               	btfss	_loRa& (0+255),3,b
 11860  000C66  D01F               	goto	l2257
 11861  000C68                     u18340:
 11862                           
 11863                           ; BSR set to: 2
 11864                           ;lorawan.c: 1510: {
 11865                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11866                           
 11867                           ; BSR set to: 2
 11868  000C68  0E01               	movlw	1
 11869  000C6A  0100               	movlb	0	; () banked
 11870  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11871  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 11872  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11873  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 11874  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11875  000C76  0102               	movlb	2	; () banked
 11876  000C78  51ED               	movf	(_loRa+237)& (0+255),w,b
 11877  000C7A  EC55  F02C         	call	_SearchAvailableChannel
 11878  000C7E  0900               	iorlw	0
 11879  000C80  A4D8               	btfss	status,2,c
 11880  000C82  D00F               	goto	l2256
 11881                           
 11882                           ;lorawan.c: 1512: {
 11883                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 11884  000C84  0E00               	movlw	0
 11885  000C86  0100               	movlb	0	; () banked
 11886  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 11887  000C8A  0E00               	movlw	0
 11888  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 11889  000C8E  0E00               	movlw	0
 11890  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11891  000C92  0E00               	movlw	0
 11892  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11893  000C96  0E00               	movlw	0
 11894  000C98  ECA2  F033         	call	_LORAWAN_Send
 11895  000C9C                     l15253:
 11896                           
 11897                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 11898  000C9C  0102               	movlb	2	; () banked
 11899  000C9E  9700               	bcf	_loRa& (0+255),3,b
 11900                           
 11901                           ;lorawan.c: 1515: }
 11902  000CA0  D002               	goto	l2257
 11903  000CA2                     l2256:
 11904                           
 11905                           ;lorawan.c: 1516: else
 11906                           ;lorawan.c: 1517: {
 11907                           ;lorawan.c: 1519: StartReTxTimer();
 11908                           
 11909                           ; BSR set to: 2
 11910  000CA2  EC91  F025         	call	_StartReTxTimer	;wreg free
 11911  000CA6                     l2257:
 11912                           
 11913                           ;lorawan.c: 1520: }
 11914                           ;lorawan.c: 1521: }
 11915                           ;lorawan.c: 1522: }
 11916                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 11917  000CA6  0E02               	movlw	2
 11918  000CA8  0102               	movlb	2	; () banked
 11919  000CAA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11920  000CAC  A4D8               	btfss	status,2,c
 11921  000CAE  0012               	return	
 11922                           
 11923                           ; BSR set to: 2
 11924                           ;lorawan.c: 1525: {
 11925                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11926  000CB0  5102               	movf	(_loRa+2)& (0+255),w,b
 11927  000CB2  0BF0               	andlw	-16
 11928  000CB4  0909               	iorlw	9
 11929  000CB6  6F02               	movwf	(_loRa+2)& (0+255),b
 11930                           
 11931                           ; BSR set to: 2
 11932                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 11933  000CB8  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11934                           
 11935                           ;lorawan.c: 1528: }
 11936                           ;lorawan.c: 1529: }
 11937  000CBC  0012               	return	
 11938  000CBE                     l2197:
 11939                           
 11940                           ;lorawan.c: 1530: else
 11941                           ;lorawan.c: 1531: {
 11942                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 11943  000CBE  EC12  F03A         	call	_SetReceptionNotOkState	;wreg free
 11944                           
 11945                           ;lorawan.c: 1535: }
 11946                           ;lorawan.c: 1536: }
 11947                           
 11948                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 11949                           ;	Return value of _LORAWAN_RxDone is never used
 11950  000CC2  0012               	return	
 11951  000CC4                     l2183:
 11952                           
 11953                           ;lorawan.c: 1537: else
 11954                           ;lorawan.c: 1538: {
 11955                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 11956  000CC4  0101               	movlb	1	; () banked
 11957  000CC6  5169               	movf	_rxPayload& (0+255),w,b
 11958  000CC8  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 11959  000CCA  B4D8               	btfsc	status,2,c
 11960  000CCC  0012               	return	
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;lorawan.c: 1541: {
 11964                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 11965  000CCE  EC08  F046         	call	_RADIO_GetStatus	;wreg free
 11966  000CD2  0100               	movlb	0	; () banked
 11967  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 11968  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 11969  000CD8  D014               	goto	l2262
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;lorawan.c: 1543: {
 11973                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 11974  000CDA  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 11975  000CDE  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 11976  000CE2  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 11977  000CE6  0E03               	movlw	3
 11978  000CE8  6F63               	movwf	RxData@status& (0+255),b
 11979  000CEA  D801               	call	u18398
 11980  000CEC  0012               	return	
 11981  000CEE                     u18398:
 11982  000CEE  0005               	push	
 11983  000CF0  6EFA               	movwf	pclath,c
 11984  000CF2  0101               	movlb	1	; () banked
 11985  000CF4  5169               	movf	_rxPayload& (0+255),w,b
 11986  000CF6  6EFD               	movwf	tosl,c
 11987  000CF8  516A               	movf	(_rxPayload+1)& (0+255),w,b
 11988  000CFA  6EFE               	movwf	tosh,c
 11989  000CFC  6AFF               	clrf	tosu,c
 11990  000CFE  50FA               	movf	pclath,w,c
 11991  000D00  0012               	return		;indir
 11992  000D02                     l2262:
 11993                           
 11994                           ;lorawan.c: 1546: else
 11995                           ;lorawan.c: 1547: {
 11996                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 11997  000D02  C166  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 11998  000D06  C167  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 11999  000D0A  C168  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 12000  000D0E  0E02               	movlw	2
 12001  000D10  0100               	movlb	0	; () banked
 12002  000D12  6F63               	movwf	RxData@status& (0+255),b
 12003  000D14  D801               	call	u18408
 12004  000D16  0012               	return	
 12005  000D18                     u18408:
 12006  000D18  0005               	push	
 12007  000D1A  6EFA               	movwf	pclath,c
 12008  000D1C  0101               	movlb	1	; () banked
 12009  000D1E  5169               	movf	_rxPayload& (0+255),w,b
 12010  000D20  6EFD               	movwf	tosl,c
 12011  000D22  516A               	movf	(_rxPayload+1)& (0+255),w,b
 12012  000D24  6EFE               	movwf	tosh,c
 12013  000D26  6AFF               	clrf	tosu,c
 12014  000D28  50FA               	movf	pclath,w,c
 12015  000D2A  0012               	return		;indir
 12016  000D2C                     __end_of_LORAWAN_RxDone:
 12017                           	opt stack 0
 12018                           tosu	equ	0xFFF
 12019                           tosh	equ	0xFFE
 12020                           tosl	equ	0xFFD
 12021                           pclath	equ	0xFFA
 12022                           tblptru	equ	0xFF8
 12023                           tblptrh	equ	0xFF7
 12024                           tblptrl	equ	0xFF6
 12025                           tablat	equ	0xFF5
 12026                           prodh	equ	0xFF4
 12027                           prodl	equ	0xFF3
 12028                           intcon	equ	0xFF2
 12029                           intcon2	equ	0xFF1
 12030                           intcon3	equ	0xFF0
 12031                           postinc0	equ	0xFEE
 12032                           wreg	equ	0xFE8
 12033                           postinc1	equ	0xFE6
 12034                           postdec1	equ	0xFE5
 12035                           plusw1	equ	0xFE3
 12036                           fsr1h	equ	0xFE2
 12037                           fsr1l	equ	0xFE1
 12038                           indf2	equ	0xFDF
 12039                           postinc2	equ	0xFDE
 12040                           postdec2	equ	0xFDD
 12041                           fsr2h	equ	0xFDA
 12042                           fsr2l	equ	0xFD9
 12043                           status	equ	0xFD8
 12044                           
 12045 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12046 ;; Defined at:
 12047 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;		None
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;		None
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;Total ram usage:        4 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:   11
 12068 ;; This function calls:
 12069 ;;		_SwTimerSetTimeout
 12070 ;;		_SwTimerStart
 12071 ;;		___lldiv
 12072 ;; This function is called by:
 12073 ;;		_AckRetransmissionCallback
 12074 ;;		_LORAWAN_RxDone
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           	psect	text52
 12079  007598                     __ptext52:
 12080                           	opt stack 0
 12081  007598                     _UpdateRetransmissionAckTimeoutState:
 12082                           	opt stack 16
 12083                           
 12084                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12085                           
 12086                           ;incstack = 0
 12087  007598  0102               	movlb	2	; () banked
 12088  00759A  5102               	movf	(_loRa+2)& (0+255),w,b
 12089  00759C  0BF0               	andlw	-16
 12090  00759E  0906               	iorlw	6
 12091  0075A0  6F02               	movwf	(_loRa+2)& (0+255),b
 12092                           
 12093                           ; BSR set to: 2
 12094                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12095  0075A2  51A0               	movf	(_loRa+160)& (0+255),w,b
 12096  0075A4  0100               	movlb	0	; () banked
 12097  0075A6  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12098  0075A8  0102               	movlb	2	; () banked
 12099  0075AA  51A1               	movf	(_loRa+161)& (0+255),w,b
 12100  0075AC  0100               	movlb	0	; () banked
 12101  0075AE  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12102  0075B0  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12103  0075B2  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12104  0075B4  0E0C               	movlw	12
 12105  0075B6                     u17405:
 12106  0075B6  90D8               	bcf	status,0,c
 12107  0075B8  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12108  0075BA  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12109  0075BC  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12110  0075BE  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12111  0075C0  2EE8               	decfsz	wreg,f,c
 12112  0075C2  D7F9               	goto	u17405
 12113  0075C4  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12114  0075C8  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12115  0075CC  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12116  0075D0  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12117  0075D4  0E7D               	movlw	125
 12118  0075D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 12119  0075D8  0E00               	movlw	0
 12120  0075DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12121  0075DC  0E00               	movlw	0
 12122  0075DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12123  0075E0  0E00               	movlw	0
 12124  0075E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12125  0075E4  EC8F  F039         	call	___lldiv	;wreg free
 12126  0075E8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12127  0075EC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12128  0075F0  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12129  0075F4  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12130  0075F8  0102               	movlb	2	; () banked
 12131  0075FA  51E8               	movf	(_loRa+232)& (0+255),w,b
 12132  0075FC  ECDB  F040         	call	_SwTimerSetTimeout
 12133                           
 12134                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12135  007600  0102               	movlb	2	; () banked
 12136  007602  51E8               	movf	(_loRa+232)& (0+255),w,b
 12137  007604  ECD1  F036         	call	_SwTimerStart
 12138  007608  0012               	return		;funcret
 12139  00760A                     __end_of_UpdateRetransmissionAckTimeoutState:
 12140                           	opt stack 0
 12141                           tosu	equ	0xFFF
 12142                           tosh	equ	0xFFE
 12143                           tosl	equ	0xFFD
 12144                           pclath	equ	0xFFA
 12145                           tblptru	equ	0xFF8
 12146                           tblptrh	equ	0xFF7
 12147                           tblptrl	equ	0xFF6
 12148                           tablat	equ	0xFF5
 12149                           prodh	equ	0xFF4
 12150                           prodl	equ	0xFF3
 12151                           intcon	equ	0xFF2
 12152                           intcon2	equ	0xFF1
 12153                           intcon3	equ	0xFF0
 12154                           postinc0	equ	0xFEE
 12155                           wreg	equ	0xFE8
 12156                           postinc1	equ	0xFE6
 12157                           postdec1	equ	0xFE5
 12158                           plusw1	equ	0xFE3
 12159                           fsr1h	equ	0xFE2
 12160                           fsr1l	equ	0xFE1
 12161                           indf2	equ	0xFDF
 12162                           postinc2	equ	0xFDE
 12163                           postdec2	equ	0xFDD
 12164                           fsr2h	equ	0xFDA
 12165                           fsr2l	equ	0xFD9
 12166                           status	equ	0xFD8
 12167                           
 12168 ;; *************** function _UpdateDLSettings *****************
 12169 ;; Defined at:
 12170 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  dlRx2Dr         1    wreg     unsigned char 
 12173 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      void 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12185 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12189 ;;Total ram usage:        2 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    7
 12192 ;; This function calls:
 12193 ;;		Nothing
 12194 ;; This function is called by:
 12195 ;;		_LORAWAN_RxDone
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text53
 12200  008964                     __ptext53:
 12201                           	opt stack 0
 12202  008964                     _UpdateDLSettings:
 12203                           	opt stack 19
 12204                           
 12205                           ;incstack = 0
 12206                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12207  008964  0100               	movlb	0	; () banked
 12208  008966  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12209                           
 12210                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12211  008968  0E08               	movlw	8
 12212  00896A  0100               	movlb	0	; () banked
 12213  00896C  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12214  00896E  D002               	goto	l1221
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;lorawan_eu.c: 891: {
 12218                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12219  008970  C061  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12220  008974                     l1221:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;lorawan_eu.c: 893: }
 12224                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12225                           
 12226                           ; BSR set to: 0
 12227  008974  0E06               	movlw	6
 12228  008976  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12229  008978  0012               	return	
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;lorawan_eu.c: 896: {
 12233                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12234  00897A  C060  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12235  00897E  0012               	return	
 12236  008980                     __end_of_UpdateDLSettings:
 12237                           	opt stack 0
 12238                           tosu	equ	0xFFF
 12239                           tosh	equ	0xFFE
 12240                           tosl	equ	0xFFD
 12241                           pclath	equ	0xFFA
 12242                           tblptru	equ	0xFF8
 12243                           tblptrh	equ	0xFF7
 12244                           tblptrl	equ	0xFF6
 12245                           tablat	equ	0xFF5
 12246                           prodh	equ	0xFF4
 12247                           prodl	equ	0xFF3
 12248                           intcon	equ	0xFF2
 12249                           intcon2	equ	0xFF1
 12250                           intcon3	equ	0xFF0
 12251                           postinc0	equ	0xFEE
 12252                           wreg	equ	0xFE8
 12253                           postinc1	equ	0xFE6
 12254                           postdec1	equ	0xFE5
 12255                           plusw1	equ	0xFE3
 12256                           fsr1h	equ	0xFE2
 12257                           fsr1l	equ	0xFE1
 12258                           indf2	equ	0xFDF
 12259                           postinc2	equ	0xFDE
 12260                           postdec2	equ	0xFDD
 12261                           fsr2h	equ	0xFDA
 12262                           fsr2l	equ	0xFD9
 12263                           status	equ	0xFD8
 12264                           
 12265 ;; *************** function _UpdateCfList *****************
 12266 ;; Defined at:
 12267 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;  bufferLength    1    wreg     unsigned char 
 12270 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 12271 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 12274 ;;  frequency       4   73[BANK0 ] unsigned long 
 12275 ;;  i               1   78[BANK0 ] unsigned char 
 12276 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;Total ram usage:        9 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    9
 12293 ;; This function calls:
 12294 ;;		_LORAWAN_SetChannelIdStatus
 12295 ;;		_ValidateFrequency
 12296 ;;		___lmul
 12297 ;;		___wmul
 12298 ;;		_memcpy
 12299 ;; This function is called by:
 12300 ;;		_LORAWAN_RxDone
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           	psect	text54
 12305  00409C                     __ptext54:
 12306                           	opt stack 0
 12307  00409C                     _UpdateCfList:
 12308                           	opt stack 17
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;incstack = 0
 12312                           ;UpdateCfList@bufferLength stored from wreg
 12313  00409C  0100               	movlb	0	; () banked
 12314  00409E  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 12315                           
 12316                           ;lorawan_eu.c: 826: uint8_t i;
 12317                           ;lorawan_eu.c: 827: uint32_t frequency;
 12318                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12319                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12320  0040A0  0E21               	movlw	33
 12321  0040A2  0100               	movlb	0	; () banked
 12322  0040A4  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12323  0040A6  A4D8               	btfss	status,2,c
 12324  0040A8  0012               	return	
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;lorawan_eu.c: 831: {
 12328                           ;lorawan_eu.c: 833: channelIndex = 3;
 12329  0040AA  0E03               	movlw	3
 12330  0040AC  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 12331                           
 12332                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12333  0040AE  0E00               	movlw	0
 12334  0040B0  6FAE               	movwf	UpdateCfList@i& (0+255),b
 12335  0040B2                     l14571:
 12336                           
 12337                           ; BSR set to: 0
 12338  0040B2  0E04               	movlw	4
 12339  0040B4  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 12340  0040B6  D001               	goto	l1205
 12341  0040B8  D0E5               	goto	u17170
 12342  0040BA                     l1205:
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;lorawan_eu.c: 836: {
 12346                           ;lorawan_eu.c: 837: frequency = 0;
 12347                           
 12348                           ; BSR set to: 0
 12349  0040BA  0E00               	movlw	0
 12350  0040BC  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 12351  0040BE  0E00               	movlw	0
 12352  0040C0  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 12353  0040C2  0E00               	movlw	0
 12354  0040C4  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 12355  0040C6  0E00               	movlw	0
 12356  0040C8  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12360  0040CA  0EA9               	movlw	low UpdateCfList@frequency
 12361  0040CC  6F60               	movwf	memcpy@d1& (0+255),b
 12362  0040CE  0E00               	movlw	high UpdateCfList@frequency
 12363  0040D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12364  0040D2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12365  0040D4  0D03               	mullw	3
 12366  0040D6  0E0D               	movlw	13
 12367  0040D8  26F3               	addwf	prodl,f,c
 12368  0040DA  0E00               	movlw	0
 12369  0040DC  22F4               	addwfc	prodh,f,c
 12370  0040DE  50F3               	movf	prodl,w,c
 12371  0040E0  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 12372  0040E2  6F62               	movwf	memcpy@s1& (0+255),b
 12373  0040E4  50F4               	movf	prodh,w,c
 12374  0040E6  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 12375  0040E8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12376  0040EA  0E00               	movlw	0
 12377  0040EC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12378  0040EE  0E03               	movlw	3
 12379  0040F0  6F64               	movwf	memcpy@n& (0+255),b
 12380  0040F2  EC37  F03D         	call	_memcpy	;wreg free
 12381                           
 12382                           ;lorawan_eu.c: 839: frequency *= 100;
 12383  0040F6  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 12384  0040FA  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12385  0040FE  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12386  004102  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12387  004106  0E64               	movlw	100
 12388  004108  0100               	movlb	0	; () banked
 12389  00410A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 12390  00410C  0E00               	movlw	0
 12391  00410E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12392  004110  0E00               	movlw	0
 12393  004112  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12394  004114  0E00               	movlw	0
 12395  004116  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12396  004118  EC4D  F03E         	call	___lmul	;wreg free
 12397  00411C  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 12398  004120  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 12399  004124  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 12400  004128  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 12401                           
 12402                           ;lorawan_eu.c: 840: if (frequency != 0)
 12403  00412C  0100               	movlb	0	; () banked
 12404  00412E  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 12405  004130  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12406  004132  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12407  004134  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12408  004136  B4D8               	btfsc	status,2,c
 12409  004138  D09B               	goto	l1207
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;lorawan_eu.c: 841: {
 12413                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12414  00413A  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12415  00413E  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12416  004142  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12417  004146  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12418  00414A  EC41  F03C         	call	_ValidateFrequency	;wreg free
 12419  00414E  0900               	iorlw	0
 12420  004150  A4D8               	btfss	status,2,c
 12421  004152  D095               	goto	l1209
 12422                           
 12423                           ;lorawan_eu.c: 843: {
 12424                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12425  004154  0100               	movlb	0	; () banked
 12426  004156  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12427  004158  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12428  00415A  6F60               	movwf	___wmul@multiplier& (0+255),b
 12429  00415C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12430  00415E  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12431  004160  0E00               	movlw	0
 12432  004162  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12433  004164  0E0E               	movlw	14
 12434  004166  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12435  004168  EC6E  F043         	call	___wmul	;wreg free
 12436  00416C  0E00               	movlw	low _Channels
 12437  00416E  0100               	movlb	0	; () banked
 12438  004170  2560               	addwf	?___wmul& (0+255),w,b
 12439  004172  6ED9               	movwf	fsr2l,c
 12440  004174  0E04               	movlw	high _Channels
 12441  004176  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12442  004178  6EDA               	movwf	fsr2h,c
 12443  00417A  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 12444  00417E  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12445  004182  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12446  004186  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12447                           
 12448                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12449  00418A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12450  00418C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12451  00418E  6F60               	movwf	___wmul@multiplier& (0+255),b
 12452  004190  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12453  004192  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12454  004194  0E00               	movlw	0
 12455  004196  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12456  004198  0E0E               	movlw	14
 12457  00419A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12458  00419C  EC6E  F043         	call	___wmul	;wreg free
 12459  0041A0  0E05               	movlw	5
 12460  0041A2  0100               	movlb	0	; () banked
 12461  0041A4  2760               	addwf	?___wmul& (0+255),f,b
 12462  0041A6  0E00               	movlw	0
 12463  0041A8  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12464  0041AA  0E00               	movlw	low _Channels
 12465  0041AC  2560               	addwf	?___wmul& (0+255),w,b
 12466  0041AE  6ED9               	movwf	fsr2l,c
 12467  0041B0  0E04               	movlw	high _Channels
 12468  0041B2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12469  0041B4  6EDA               	movwf	fsr2h,c
 12470  0041B6  0104               	movlb	4	; () banked
 12471  0041B8  50DF               	movf	223,w,c
 12472  0041BA  0B0F               	andlw	-241
 12473  0041BC  0950               	iorlw	80
 12474  0041BE  6EDF               	movwf	223,c
 12475                           
 12476                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12477  0041C0  0100               	movlb	0	; () banked
 12478  0041C2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12479  0041C4  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12480  0041C6  6F60               	movwf	___wmul@multiplier& (0+255),b
 12481  0041C8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12482  0041CA  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12483  0041CC  0E00               	movlw	0
 12484  0041CE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12485  0041D0  0E0E               	movlw	14
 12486  0041D2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12487  0041D4  EC6E  F043         	call	___wmul	;wreg free
 12488  0041D8  0E05               	movlw	5
 12489  0041DA  0100               	movlb	0	; () banked
 12490  0041DC  2760               	addwf	?___wmul& (0+255),f,b
 12491  0041DE  0E00               	movlw	0
 12492  0041E0  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12493  0041E2  0E00               	movlw	low _Channels
 12494  0041E4  2560               	addwf	?___wmul& (0+255),w,b
 12495  0041E6  6ED9               	movwf	fsr2l,c
 12496  0041E8  0E04               	movlw	high _Channels
 12497  0041EA  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12498  0041EC  6EDA               	movwf	fsr2h,c
 12499  0041EE  0104               	movlb	4	; () banked
 12500  0041F0  90DF               	bcf	223,0,c
 12501  0041F2  92DF               	bcf	223,1,c
 12502  0041F4  94DF               	bcf	223,2,c
 12503  0041F6  96DF               	bcf	223,3,c
 12504                           
 12505                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12506  0041F8  0100               	movlb	0	; () banked
 12507  0041FA  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12508  0041FC  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12509  0041FE  6F60               	movwf	___wmul@multiplier& (0+255),b
 12510  004200  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12511  004202  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12512  004204  0E00               	movlw	0
 12513  004206  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12514  004208  0E0E               	movlw	14
 12515  00420A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12516  00420C  EC6E  F043         	call	___wmul	;wreg free
 12517  004210  0E06               	movlw	6
 12518  004212  0100               	movlb	0	; () banked
 12519  004214  2760               	addwf	?___wmul& (0+255),f,b
 12520  004216  0E00               	movlw	0
 12521  004218  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12522  00421A  0E00               	movlw	low _Channels
 12523  00421C  2560               	addwf	?___wmul& (0+255),w,b
 12524  00421E  6ED9               	movwf	fsr2l,c
 12525  004220  0E04               	movlw	high _Channels
 12526  004222  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12527  004224  6EDA               	movwf	fsr2h,c
 12528  004226  0EE7               	movlw	231
 12529  004228  6EDE               	movwf	postinc2,c
 12530  00422A  0E03               	movlw	3
 12531  00422C  6EDD               	movwf	postdec2,c
 12532                           
 12533                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12534  00422E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12535  004230  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12536  004232  6F60               	movwf	___wmul@multiplier& (0+255),b
 12537  004234  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12538  004236  3761               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 12539  004238  0E00               	movlw	0
 12540  00423A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12541  00423C  0E0E               	movlw	14
 12542  00423E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 12543  004240  EC6E  F043         	call	___wmul	;wreg free
 12544  004244  0E0D               	movlw	13
 12545  004246  0100               	movlb	0	; () banked
 12546  004248  2760               	addwf	?___wmul& (0+255),f,b
 12547  00424A  0E00               	movlw	0
 12548  00424C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 12549  00424E  0E00               	movlw	low _Channels
 12550  004250  2560               	addwf	?___wmul& (0+255),w,b
 12551  004252  6ED9               	movwf	fsr2l,c
 12552  004254  0E04               	movlw	high _Channels
 12553  004256  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 12554  004258  6EDA               	movwf	fsr2h,c
 12555  00425A  0EFF               	movlw	255
 12556  00425C  6EDF               	movwf	indf2,c
 12557                           
 12558                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12559  00425E  0E01               	movlw	1
 12560  004260  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12561  004262  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12562  004264  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12563  004266  ECF3  F03D         	call	_LORAWAN_SetChannelIdStatus
 12564                           
 12565                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12566  00426A  0102               	movlb	2	; () banked
 12567  00426C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12568                           
 12569                           ; BSR set to: 2
 12570                           ;lorawan_eu.c: 851: }
 12571                           ;lorawan_eu.c: 852: }
 12572  00426E  D007               	goto	l1209
 12573  004270                     l1207:
 12574                           
 12575                           ;lorawan_eu.c: 853: else
 12576                           ;lorawan_eu.c: 854: {
 12577                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12578                           
 12579                           ; BSR set to: 2
 12580  004270  0E00               	movlw	0
 12581  004272  0100               	movlb	0	; () banked
 12582  004274  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12583  004276  51AE               	movf	UpdateCfList@i& (0+255),w,b
 12584  004278  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12585  00427A  ECF3  F03D         	call	_LORAWAN_SetChannelIdStatus
 12586  00427E                     l1209:
 12587  00427E  0100               	movlb	0	; () banked
 12588  004280  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 12589  004282  D717               	goto	l14571
 12590  004284                     u17170:
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;lorawan_eu.c: 856: }
 12594                           ;lorawan_eu.c: 857: }
 12595                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12596  004284  0102               	movlb	2	; () banked
 12597  004286  8703               	bsf	(_loRa+3)& (0+255),3,b
 12598  004288  0012               	return	
 12599  00428A                     __end_of_UpdateCfList:
 12600                           	opt stack 0
 12601                           tosu	equ	0xFFF
 12602                           tosh	equ	0xFFE
 12603                           tosl	equ	0xFFD
 12604                           pclath	equ	0xFFA
 12605                           tblptru	equ	0xFF8
 12606                           tblptrh	equ	0xFF7
 12607                           tblptrl	equ	0xFF6
 12608                           tablat	equ	0xFF5
 12609                           prodh	equ	0xFF4
 12610                           prodl	equ	0xFF3
 12611                           intcon	equ	0xFF2
 12612                           intcon2	equ	0xFF1
 12613                           intcon3	equ	0xFF0
 12614                           postinc0	equ	0xFEE
 12615                           wreg	equ	0xFE8
 12616                           postinc1	equ	0xFE6
 12617                           postdec1	equ	0xFE5
 12618                           plusw1	equ	0xFE3
 12619                           fsr1h	equ	0xFE2
 12620                           fsr1l	equ	0xFE1
 12621                           indf2	equ	0xFDF
 12622                           postinc2	equ	0xFDE
 12623                           postdec2	equ	0xFDD
 12624                           fsr2h	equ	0xFDA
 12625                           fsr2l	equ	0xFD9
 12626                           status	equ	0xFD8
 12627                           
 12628 ;; *************** function _StartReTxTimer *****************
 12629 ;; Defined at:
 12630 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;		None
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;  minim           4   62[BANK0 ] unsigned long 
 12635 ;;  i               1   66[BANK0 ] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;Total ram usage:        9 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:   11
 12652 ;; This function calls:
 12653 ;;		_SwTimerSetTimeout
 12654 ;;		_SwTimerStart
 12655 ;;		___lldiv
 12656 ;; This function is called by:
 12657 ;;		_LORAWAN_RxDone
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           	psect	text55
 12662  004B22                     __ptext55:
 12663                           	opt stack 0
 12664  004B22                     _StartReTxTimer:
 12665                           	opt stack 15
 12666                           
 12667                           ;lorawan_eu.c: 904: uint8_t i;
 12668                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12669                           
 12670                           ;incstack = 0
 12671  004B22  0100               	movlb	0	; () banked
 12672  004B24  699E               	setf	StartReTxTimer@minim& (0+255),b
 12673  004B26  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12674  004B28  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12675  004B2A  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12679  004B2C  0E00               	movlw	0
 12680  004B2E  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 12681  004B30  D07C               	goto	l1226
 12682  004B32                     
 12683                           ;lorawan_eu.c: 908: {
 12684                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12685                           
 12686                           ; BSR set to: 0
 12687  004B32  0100               	movlb	0	; () banked
 12688  004B34  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12689  004B36  0D0E               	mullw	14
 12690  004B38  0E04               	movlw	4
 12691  004B3A  26F3               	addwf	prodl,f,c
 12692  004B3C  0E00               	movlw	0
 12693  004B3E  22F4               	addwfc	prodh,f,c
 12694  004B40  0E00               	movlw	low _Channels
 12695  004B42  24F3               	addwf	prodl,w,c
 12696  004B44  6ED9               	movwf	fsr2l,c
 12697  004B46  0E04               	movlw	high _Channels
 12698  004B48  20F4               	addwfc	prodh,w,c
 12699  004B4A  6EDA               	movwf	fsr2h,c
 12700  004B4C  04DE               	decf	postinc2,w,c
 12701  004B4E  A4D8               	btfss	status,2,c
 12702  004B50  D06A               	goto	l1228
 12703                           
 12704                           ; BSR set to: 0
 12705  004B52  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12706  004B54  0D0E               	mullw	14
 12707  004B56  0E08               	movlw	8
 12708  004B58  26F3               	addwf	prodl,f,c
 12709  004B5A  0E00               	movlw	0
 12710  004B5C  22F4               	addwfc	prodh,f,c
 12711  004B5E  0E00               	movlw	low _Channels
 12712  004B60  24F3               	addwf	prodl,w,c
 12713  004B62  6ED9               	movwf	fsr2l,c
 12714  004B64  0E04               	movlw	high _Channels
 12715  004B66  20F4               	addwfc	prodh,w,c
 12716  004B68  6EDA               	movwf	fsr2h,c
 12717  004B6A  50DE               	movf	postinc2,w,c
 12718  004B6C  10DE               	iorwf	postinc2,w,c
 12719  004B6E  10DE               	iorwf	postinc2,w,c
 12720  004B70  10DE               	iorwf	postinc2,w,c
 12721  004B72  B4D8               	btfsc	status,2,c
 12722  004B74  D058               	goto	l1228
 12723                           
 12724                           ; BSR set to: 0
 12725  004B76  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12726  004B78  0D0E               	mullw	14
 12727  004B7A  0E08               	movlw	8
 12728  004B7C  26F3               	addwf	prodl,f,c
 12729  004B7E  0E00               	movlw	0
 12730  004B80  22F4               	addwfc	prodh,f,c
 12731  004B82  0E00               	movlw	low _Channels
 12732  004B84  24F3               	addwf	prodl,w,c
 12733  004B86  6ED9               	movwf	fsr2l,c
 12734  004B88  0E04               	movlw	high _Channels
 12735  004B8A  20F4               	addwfc	prodh,w,c
 12736  004B8C  6EDA               	movwf	fsr2h,c
 12737  004B8E  50DE               	movf	postinc2,w,c
 12738  004B90  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 12739  004B92  50DE               	movf	postinc2,w,c
 12740  004B94  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12741  004B96  50DE               	movf	postinc2,w,c
 12742  004B98  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12743  004B9A  50DE               	movf	postinc2,w,c
 12744  004B9C  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12745  004B9E  A0D8               	btfss	status,0,c
 12746  004BA0  D042               	goto	l1228
 12747                           
 12748                           ; BSR set to: 0
 12749  004BA2  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12750  004BA4  0D0E               	mullw	14
 12751  004BA6  0E05               	movlw	5
 12752  004BA8  26F3               	addwf	prodl,f,c
 12753  004BAA  0E00               	movlw	0
 12754  004BAC  22F4               	addwfc	prodh,f,c
 12755  004BAE  0E00               	movlw	low _Channels
 12756  004BB0  24F3               	addwf	prodl,w,c
 12757  004BB2  6ED9               	movwf	fsr2l,c
 12758  004BB4  0E04               	movlw	high _Channels
 12759  004BB6  20F4               	addwfc	prodh,w,c
 12760  004BB8  6EDA               	movwf	fsr2h,c
 12761  004BBA  0104               	movlb	4	; () banked
 12762  004BBC  50DF               	movf	223,w,c
 12763  004BBE  0B0F               	andlw	15
 12764  004BC0  0100               	movlb	0	; () banked
 12765  004BC2  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 12766  004BC4  519A               	movf	??_StartReTxTimer& (0+255),w,b
 12767  004BC6  0102               	movlb	2	; () banked
 12768  004BC8  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12769  004BCA  A0D8               	btfss	status,0,c
 12770  004BCC  D02C               	goto	l1228
 12771                           
 12772                           ; BSR set to: 2
 12773  004BCE  0100               	movlb	0	; () banked
 12774  004BD0  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12775  004BD2  0D0E               	mullw	14
 12776  004BD4  0E05               	movlw	5
 12777  004BD6  26F3               	addwf	prodl,f,c
 12778  004BD8  0E00               	movlw	0
 12779  004BDA  22F4               	addwfc	prodh,f,c
 12780  004BDC  0E00               	movlw	low _Channels
 12781  004BDE  24F3               	addwf	prodl,w,c
 12782  004BE0  6ED9               	movwf	fsr2l,c
 12783  004BE2  0E04               	movlw	high _Channels
 12784  004BE4  20F4               	addwfc	prodh,w,c
 12785  004BE6  6EDA               	movwf	fsr2h,c
 12786  004BE8  0104               	movlb	4	; () banked
 12787  004BEA  38DF               	swapf	223,w,c
 12788  004BEC  0B0F               	andlw	15
 12789  004BEE  0100               	movlb	0	; () banked
 12790  004BF0  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 12791  004BF2  0102               	movlb	2	; () banked
 12792  004BF4  51DF               	movf	(_loRa+223)& (0+255),w,b
 12793  004BF6  0100               	movlb	0	; () banked
 12794  004BF8  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 12795  004BFA  A0D8               	btfss	status,0,c
 12796  004BFC  D014               	goto	l1228
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;lorawan_eu.c: 910: {
 12800                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12801  004BFE  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12802  004C00  0D0E               	mullw	14
 12803  004C02  0E08               	movlw	8
 12804  004C04  26F3               	addwf	prodl,f,c
 12805  004C06  0E00               	movlw	0
 12806  004C08  22F4               	addwfc	prodh,f,c
 12807  004C0A  0E00               	movlw	low _Channels
 12808  004C0C  24F3               	addwf	prodl,w,c
 12809  004C0E  6ED9               	movwf	fsr2l,c
 12810  004C10  0E04               	movlw	high _Channels
 12811  004C12  20F4               	addwfc	prodh,w,c
 12812  004C14  6EDA               	movwf	fsr2h,c
 12813  004C16  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 12814  004C1A  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 12815  004C1E  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 12816  004C22  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 12817  004C26                     l1228:
 12818                           
 12819                           ; BSR set to: 0
 12820  004C26  0100               	movlb	0	; () banked
 12821  004C28  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 12822  004C2A                     l1226:
 12823                           
 12824                           ; BSR set to: 0
 12825                           
 12826                           ; BSR set to: 0
 12827  004C2A  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 12828  004C2C  0102               	movlb	2	; () banked
 12829  004C2E  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12830  004C30  B0D8               	btfsc	status,0,c
 12831  004C32  D77F               	goto	l1227
 12832                           
 12833                           ; BSR set to: 2
 12834                           ;lorawan_eu.c: 912: }
 12835                           ;lorawan_eu.c: 913: }
 12836                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12837                           
 12838                           ; BSR set to: 2
 12839  004C34  5102               	movf	(_loRa+2)& (0+255),w,b
 12840  004C36  0BF0               	andlw	-16
 12841  004C38  0906               	iorlw	6
 12842  004C3A  6F02               	movwf	(_loRa+2)& (0+255),b
 12843                           
 12844                           ; BSR set to: 2
 12845                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12846  004C3C  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12847  004C40  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12848  004C44  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12849  004C48  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12850  004C4C  0E0C               	movlw	12
 12851  004C4E                     u17265:
 12852  004C4E  90D8               	bcf	status,0,c
 12853  004C50  0100               	movlb	0	; () banked
 12854  004C52  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 12855  004C54  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12856  004C56  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12857  004C58  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12858  004C5A  2EE8               	decfsz	wreg,f,c
 12859  004C5C  D7F8               	goto	u17265
 12860  004C5E  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 12861  004C62  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12862  004C66  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12863  004C6A  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12864  004C6E  0E7D               	movlw	125
 12865  004C70  6F64               	movwf	___lldiv@divisor& (0+255),b
 12866  004C72  0E00               	movlw	0
 12867  004C74  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12868  004C76  0E00               	movlw	0
 12869  004C78  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12870  004C7A  0E00               	movlw	0
 12871  004C7C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12872  004C7E  EC8F  F039         	call	___lldiv	;wreg free
 12873  004C82  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12874  004C86  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12875  004C8A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12876  004C8E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12877  004C92  0102               	movlb	2	; () banked
 12878  004C94  51E6               	movf	(_loRa+230)& (0+255),w,b
 12879  004C96  ECDB  F040         	call	_SwTimerSetTimeout
 12880                           
 12881                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12882  004C9A  0102               	movlb	2	; () banked
 12883  004C9C  51E6               	movf	(_loRa+230)& (0+255),w,b
 12884  004C9E  ECD1  F036         	call	_SwTimerStart
 12885  004CA2  0012               	return		;funcret
 12886  004CA4                     __end_of_StartReTxTimer:
 12887                           	opt stack 0
 12888                           tosu	equ	0xFFF
 12889                           tosh	equ	0xFFE
 12890                           tosl	equ	0xFFD
 12891                           pclath	equ	0xFFA
 12892                           tblptru	equ	0xFF8
 12893                           tblptrh	equ	0xFF7
 12894                           tblptrl	equ	0xFF6
 12895                           tablat	equ	0xFF5
 12896                           prodh	equ	0xFF4
 12897                           prodl	equ	0xFF3
 12898                           intcon	equ	0xFF2
 12899                           intcon2	equ	0xFF1
 12900                           intcon3	equ	0xFF0
 12901                           postinc0	equ	0xFEE
 12902                           wreg	equ	0xFE8
 12903                           postinc1	equ	0xFE6
 12904                           postdec1	equ	0xFE5
 12905                           plusw1	equ	0xFE3
 12906                           fsr1h	equ	0xFE2
 12907                           fsr1l	equ	0xFE1
 12908                           indf2	equ	0xFDF
 12909                           postinc2	equ	0xFDE
 12910                           postdec2	equ	0xFDD
 12911                           fsr2h	equ	0xFDA
 12912                           fsr2l	equ	0xFD9
 12913                           status	equ	0xFD8
 12914                           
 12915 ;; *************** function _SetReceptionNotOkState *****************
 12916 ;; Defined at:
 12917 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;		None
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1    wreg      void 
 12924 ;; Registers used:
 12925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12926 ;; Tracked objects:
 12927 ;;		On entry : 0/0
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12935 ;;Total ram usage:        0 bytes
 12936 ;; Hardware stack levels used:    1
 12937 ;; Hardware stack levels required when called:   14
 12938 ;; This function calls:
 12939 ;;		_LORAWAN_EnterContinuousReceive
 12940 ;;		_RxData
 12941 ;; This function is called by:
 12942 ;;		_LORAWAN_RxDone
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           	psect	text56
 12947  007424                     __ptext56:
 12948                           	opt stack 0
 12949  007424                     _SetReceptionNotOkState:
 12950                           	opt stack 12
 12951                           
 12952                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 12953                           
 12954                           ;incstack = 0
 12955  007424  0102               	movlb	2	; () banked
 12956  007426  5102               	movf	(_loRa+2)& (0+255),w,b
 12957  007428  0B0F               	andlw	15
 12958  00742A  0A05               	xorlw	5
 12959  00742C  B4D8               	btfsc	status,2,c
 12960  00742E  D008               	goto	u17550
 12961                           
 12962                           ; BSR set to: 2
 12963  007430  5102               	movf	(_loRa+2)& (0+255),w,b
 12964  007432  0B0F               	andlw	15
 12965  007434  0A03               	xorlw	3
 12966  007436  A4D8               	btfss	status,2,c
 12967  007438  D029               	goto	l2371
 12968                           
 12969                           ; BSR set to: 2
 12970  00743A  51F1               	movf	(_loRa+241)& (0+255),w,b
 12971  00743C  B4D8               	btfsc	status,2,c
 12972  00743E  D026               	goto	l2371
 12973  007440                     u17550:
 12974                           
 12975                           ; BSR set to: 2
 12976                           ;lorawan.c: 2000: {
 12977                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12978  007440  9100               	bcf	_loRa& (0+255),0,b
 12979                           
 12980                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 12981  007442  9102               	bcf	(_loRa+2)& (0+255),0,b
 12982  007444  9302               	bcf	(_loRa+2)& (0+255),1,b
 12983  007446  9502               	bcf	(_loRa+2)& (0+255),2,b
 12984  007448  9702               	bcf	(_loRa+2)& (0+255),3,b
 12985                           
 12986                           ; BSR set to: 2
 12987                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 12988  00744A  5112               	movf	(_loRa+18)& (0+255),w,b
 12989  00744C  A4D8               	btfss	status,2,c
 12990  00744E  D01C               	goto	u17589
 12991                           
 12992                           ; BSR set to: 2
 12993  007450  0101               	movlb	1	; () banked
 12994  007452  5169               	movf	_rxPayload& (0+255),w,b
 12995  007454  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 12996  007456  B4D8               	btfsc	status,2,c
 12997  007458  D017               	goto	u17589
 12998                           
 12999                           ; BSR set to: 1
 13000                           ;lorawan.c: 2005: {
 13001                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13002  00745A  0102               	movlb	2	; () banked
 13003  00745C  9B00               	bcf	_loRa& (0+255),5,b
 13004                           
 13005                           ; BSR set to: 2
 13006                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13007  00745E  0E00               	movlw	0
 13008  007460  0100               	movlb	0	; () banked
 13009  007462  6F60               	movwf	RxData@pData& (0+255),b
 13010  007464  0E00               	movlw	0
 13011  007466  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13012  007468  0E00               	movlw	0
 13013  00746A  6F62               	movwf	RxData@dataLength& (0+255),b
 13014  00746C  0E00               	movlw	0
 13015  00746E  6F63               	movwf	RxData@status& (0+255),b
 13016  007470  D801               	call	u17588
 13017  007472  D00A               	goto	u17589
 13018  007474                     u17588:
 13019  007474  0005               	push	
 13020  007476  6EFA               	movwf	pclath,c
 13021  007478  0101               	movlb	1	; () banked
 13022  00747A  5169               	movf	_rxPayload& (0+255),w,b
 13023  00747C  6EFD               	movwf	tosl,c
 13024  00747E  516A               	movf	(_rxPayload+1)& (0+255),w,b
 13025  007480  6EFE               	movwf	tosh,c
 13026  007482  6AFF               	clrf	tosu,c
 13027  007484  50FA               	movf	pclath,w,c
 13028  007486  0012               	return		;indir
 13029  007488                     u17589:
 13030                           
 13031                           ;lorawan.c: 2008: }
 13032                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13033  007488  0102               	movlb	2	; () banked
 13034  00748A  9303               	bcf	(_loRa+3)& (0+255),1,b
 13035  00748C                     l2371:
 13036                           
 13037                           ; BSR set to: 2
 13038                           ;lorawan.c: 2010: }
 13039                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13040                           
 13041                           ; BSR set to: 2
 13042  00748C  0E02               	movlw	2
 13043  00748E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13044  007490  A4D8               	btfss	status,2,c
 13045  007492  0012               	return	
 13046                           
 13047                           ; BSR set to: 2
 13048                           ;lorawan.c: 2013: {
 13049                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13050  007494  5102               	movf	(_loRa+2)& (0+255),w,b
 13051  007496  0BF0               	andlw	-16
 13052  007498  0909               	iorlw	9
 13053  00749A  6F02               	movwf	(_loRa+2)& (0+255),b
 13054                           
 13055                           ; BSR set to: 2
 13056                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13057  00749C  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13058  0074A0  0012               	return	
 13059  0074A2                     __end_of_SetReceptionNotOkState:
 13060                           	opt stack 0
 13061                           tosu	equ	0xFFF
 13062                           tosh	equ	0xFFE
 13063                           tosl	equ	0xFFD
 13064                           pclath	equ	0xFFA
 13065                           tblptru	equ	0xFF8
 13066                           tblptrh	equ	0xFF7
 13067                           tblptrl	equ	0xFF6
 13068                           tablat	equ	0xFF5
 13069                           prodh	equ	0xFF4
 13070                           prodl	equ	0xFF3
 13071                           intcon	equ	0xFF2
 13072                           intcon2	equ	0xFF1
 13073                           intcon3	equ	0xFF0
 13074                           postinc0	equ	0xFEE
 13075                           wreg	equ	0xFE8
 13076                           postinc1	equ	0xFE6
 13077                           postdec1	equ	0xFE5
 13078                           plusw1	equ	0xFE3
 13079                           fsr1h	equ	0xFE2
 13080                           fsr1l	equ	0xFE1
 13081                           indf2	equ	0xFDF
 13082                           postinc2	equ	0xFDE
 13083                           postdec2	equ	0xFDD
 13084                           fsr2h	equ	0xFDA
 13085                           fsr2l	equ	0xFD9
 13086                           status	equ	0xFD8
 13087                           
 13088 ;; *************** function _SetJoinFailState *****************
 13089 ;; Defined at:
 13090 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;		None
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;		None
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;Total ram usage:        0 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    8
 13111 ;; This function calls:
 13112 ;;		_RxJoinResponse
 13113 ;; This function is called by:
 13114 ;;		_LORAWAN_RxTimeout
 13115 ;;		_LORAWAN_RxDone
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text57
 13120  008446                     __ptext57:
 13121                           	opt stack 0
 13122  008446                     _SetJoinFailState:
 13123                           	opt stack 18
 13124                           
 13125                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13126                           
 13127                           ;incstack = 0
 13128  008446  0102               	movlb	2	; () banked
 13129  008448  9902               	bcf	(_loRa+2)& (0+255),4,b
 13130                           
 13131                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13132  00844A  9500               	bcf	_loRa& (0+255),2,b
 13133                           
 13134                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13135  00844C  9102               	bcf	(_loRa+2)& (0+255),0,b
 13136  00844E  9302               	bcf	(_loRa+2)& (0+255),1,b
 13137  008450  9502               	bcf	(_loRa+2)& (0+255),2,b
 13138  008452  9702               	bcf	(_loRa+2)& (0+255),3,b
 13139                           
 13140                           ; BSR set to: 2
 13141                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13142  008454  0101               	movlb	1	; () banked
 13143  008456  516B               	movf	(_rxPayload+2)& (0+255),w,b
 13144  008458  116C               	iorwf	(_rxPayload+3)& (0+255),w,b
 13145  00845A  B4D8               	btfsc	status,2,c
 13146  00845C  0012               	return	
 13147                           
 13148                           ; BSR set to: 1
 13149                           ;lorawan.c: 1110: {
 13150                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13151  00845E  D801               	call	u17128
 13152  008460  0012               	return	
 13153  008462                     u17128:
 13154  008462  0005               	push	
 13155  008464  6EFA               	movwf	pclath,c
 13156  008466  516B               	movf	(_rxPayload+2)& (0+255),w,b
 13157  008468  6EFD               	movwf	tosl,c
 13158  00846A  516C               	movf	(_rxPayload+3)& (0+255),w,b
 13159  00846C  6EFE               	movwf	tosh,c
 13160  00846E  6AFF               	clrf	tosu,c
 13161  008470  50FA               	movf	pclath,w,c
 13162  008472  0E00               	movlw	0
 13163  008474  0012               	return		;indir
 13164  008476                     __end_of_SetJoinFailState:
 13165                           	opt stack 0
 13166                           tosu	equ	0xFFF
 13167                           tosh	equ	0xFFE
 13168                           tosl	equ	0xFFD
 13169                           pclath	equ	0xFFA
 13170                           tblptru	equ	0xFF8
 13171                           tblptrh	equ	0xFF7
 13172                           tblptrl	equ	0xFF6
 13173                           tablat	equ	0xFF5
 13174                           prodh	equ	0xFF4
 13175                           prodl	equ	0xFF3
 13176                           intcon	equ	0xFF2
 13177                           intcon2	equ	0xFF1
 13178                           intcon3	equ	0xFF0
 13179                           postinc0	equ	0xFEE
 13180                           wreg	equ	0xFE8
 13181                           postinc1	equ	0xFE6
 13182                           postdec1	equ	0xFE5
 13183                           plusw1	equ	0xFE3
 13184                           fsr1h	equ	0xFE2
 13185                           fsr1l	equ	0xFE1
 13186                           indf2	equ	0xFDF
 13187                           postinc2	equ	0xFDE
 13188                           postdec2	equ	0xFDD
 13189                           fsr2h	equ	0xFDA
 13190                           fsr2l	equ	0xFD9
 13191                           status	equ	0xFD8
 13192                           
 13193 ;; *************** function _RxJoinResponse *****************
 13194 ;; Defined at:
 13195 ;;		line 57 in file "main.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;  status          1    wreg     unsigned char 
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;  status          1    0[COMRAM] unsigned char 
 13200 ;; Return value:  Size  Location     Type
 13201 ;;                  1    wreg      void 
 13202 ;; Registers used:
 13203 ;;		wreg
 13204 ;; Tracked objects:
 13205 ;;		On entry : 0/0
 13206 ;;		On exit  : 0/0
 13207 ;;		Unchanged: 0/0
 13208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13213 ;;Total ram usage:        0 bytes
 13214 ;; Hardware stack levels used:    1
 13215 ;; Hardware stack levels required when called:    7
 13216 ;; This function calls:
 13217 ;;		Nothing
 13218 ;; This function is called by:
 13219 ;;		_main
 13220 ;;		_SetJoinFailState
 13221 ;;		_UpdateJoinSuccessState
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           	psect	text58
 13226  008C4C                     __ptext58:
 13227                           	opt stack 0
 13228  008C4C                     _RxJoinResponse:
 13229                           	opt stack 20
 13230                           
 13231                           ;incstack = 0
 13232  008C4C  0012               	return		;funcret
 13233  008C4E                     __end_of_RxJoinResponse:
 13234                           	opt stack 0
 13235                           tosu	equ	0xFFF
 13236                           tosh	equ	0xFFE
 13237                           tosl	equ	0xFFD
 13238                           pclath	equ	0xFFA
 13239                           tblptru	equ	0xFF8
 13240                           tblptrh	equ	0xFF7
 13241                           tblptrl	equ	0xFF6
 13242                           tablat	equ	0xFF5
 13243                           prodh	equ	0xFF4
 13244                           prodl	equ	0xFF3
 13245                           intcon	equ	0xFF2
 13246                           intcon2	equ	0xFF1
 13247                           intcon3	equ	0xFF0
 13248                           postinc0	equ	0xFEE
 13249                           wreg	equ	0xFE8
 13250                           postinc1	equ	0xFE6
 13251                           postdec1	equ	0xFE5
 13252                           plusw1	equ	0xFE3
 13253                           fsr1h	equ	0xFE2
 13254                           fsr1l	equ	0xFE1
 13255                           indf2	equ	0xFDF
 13256                           postinc2	equ	0xFDE
 13257                           postdec2	equ	0xFDD
 13258                           fsr2h	equ	0xFDA
 13259                           fsr2l	equ	0xFD9
 13260                           status	equ	0xFD8
 13261                           
 13262 ;; *************** function _MacExecuteCommands *****************
 13263 ;; Defined at:
 13264 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 13267 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13268 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 13271 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13272 ;;  done            1   85[BANK0 ] unsigned char 
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  2   80[BANK0 ] PTR unsigned char 
 13275 ;; Registers used:
 13276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13282 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;Total ram usage:        8 bytes
 13287 ;; Hardware stack levels used:    1
 13288 ;; Hardware stack levels required when called:   11
 13289 ;; This function calls:
 13290 ;;		_ExecuteDevStatus
 13291 ;;		_ExecuteDutyCycle
 13292 ;;		_ExecuteLinkAdr
 13293 ;;		_ExecuteLinkCheck
 13294 ;;		_ExecuteNewChannel
 13295 ;;		_ExecuteRxParamSetupReq
 13296 ;;		_ExecuteRxTimingSetup
 13297 ;; This function is called by:
 13298 ;;		_LORAWAN_RxDone
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text59
 13303  002F4E                     __ptext59:
 13304                           	opt stack 0
 13305  002F4E                     _MacExecuteCommands:
 13306                           	opt stack 15
 13307                           
 13308                           ;lorawan.c: 1577: bool done = 0;
 13309                           
 13310                           ;incstack = 0
 13311  002F4E  0E00               	movlw	0
 13312  002F50  0100               	movlb	0	; () banked
 13313  002F52  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;lorawan.c: 1578: uint8_t *ptr;
 13317                           ;lorawan.c: 1579: ptr = buffer;
 13318  002F54  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13319  002F58  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13320                           
 13321                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13322  002F5C  D15A               	goto	l2283
 13323  002F5E                     
 13324                           ; BSR set to: 0
 13325                           ;lorawan.c: 1581: {
 13326                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13327                           
 13328                           ; BSR set to: 0
 13329  002F5E  0102               	movlb	2	; () banked
 13330  002F60  51A7               	movf	(_loRa+167)& (0+255),w,b
 13331  002F62  0D02               	mullw	2
 13332  002F64  0E00               	movlw	low _loRa
 13333  002F66  0100               	movlb	0	; () banked
 13334  002F68  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13335  002F6A  0E02               	movlw	high _loRa
 13336  002F6C  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13337  002F6E  0EA8               	movlw	168
 13338  002F70  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13339  002F72  0E00               	movlw	0
 13340  002F74  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13341  002F76  50F3               	movf	prodl,w,c
 13342  002F78  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13343  002F7A  50F4               	movf	prodh,w,c
 13344  002F7C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13345  002F7E  0E01               	movlw	1
 13346  002F80  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13347  002F82  6ED9               	movwf	fsr2l,c
 13348  002F84  0E00               	movlw	0
 13349  002F86  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13350  002F88  6EDA               	movwf	fsr2h,c
 13351  002F8A  0102               	movlb	2	; () banked
 13352  002F8C  90DF               	bcf	indf2,0,c
 13353                           
 13354                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13355  002F8E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13356  002F90  0D02               	mullw	2
 13357  002F92  0E00               	movlw	low _loRa
 13358  002F94  0100               	movlb	0	; () banked
 13359  002F96  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13360  002F98  0E02               	movlw	high _loRa
 13361  002F9A  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13362  002F9C  0EA8               	movlw	168
 13363  002F9E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13364  002FA0  0E00               	movlw	0
 13365  002FA2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13366  002FA4  50F3               	movf	prodl,w,c
 13367  002FA6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13368  002FA8  50F4               	movf	prodh,w,c
 13369  002FAA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13370  002FAC  0E01               	movlw	1
 13371  002FAE  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13372  002FB0  6ED9               	movwf	fsr2l,c
 13373  002FB2  0E00               	movlw	0
 13374  002FB4  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13375  002FB6  6EDA               	movwf	fsr2h,c
 13376  002FB8  0102               	movlb	2	; () banked
 13377  002FBA  92DF               	bcf	indf2,1,c
 13378                           
 13379                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13380  002FBC  51A7               	movf	(_loRa+167)& (0+255),w,b
 13381  002FBE  0D02               	mullw	2
 13382  002FC0  0E00               	movlw	low _loRa
 13383  002FC2  0100               	movlb	0	; () banked
 13384  002FC4  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13385  002FC6  0E02               	movlw	high _loRa
 13386  002FC8  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13387  002FCA  0EA8               	movlw	168
 13388  002FCC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13389  002FCE  0E00               	movlw	0
 13390  002FD0  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13391  002FD2  50F3               	movf	prodl,w,c
 13392  002FD4  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13393  002FD6  50F4               	movf	prodh,w,c
 13394  002FD8  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13395  002FDA  0E01               	movlw	1
 13396  002FDC  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13397  002FDE  6ED9               	movwf	fsr2l,c
 13398  002FE0  0E00               	movlw	0
 13399  002FE2  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13400  002FE4  6EDA               	movwf	fsr2h,c
 13401  002FE6  0102               	movlb	2	; () banked
 13402  002FE8  94DF               	bcf	indf2,2,c
 13403                           
 13404                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13405  002FEA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13406  002FEC  0D02               	mullw	2
 13407  002FEE  0E00               	movlw	low _loRa
 13408  002FF0  0100               	movlb	0	; () banked
 13409  002FF2  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13410  002FF4  0E02               	movlw	high _loRa
 13411  002FF6  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13412  002FF8  0EA8               	movlw	168
 13413  002FFA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13414  002FFC  0E00               	movlw	0
 13415  002FFE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13416  003000  50F3               	movf	prodl,w,c
 13417  003002  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13418  003004  50F4               	movf	prodh,w,c
 13419  003006  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13420  003008  0E01               	movlw	1
 13421  00300A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13422  00300C  6ED9               	movwf	fsr2l,c
 13423  00300E  0E00               	movlw	0
 13424  003010  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13425  003012  6EDA               	movwf	fsr2h,c
 13426  003014  0102               	movlb	2	; () banked
 13427  003016  96DF               	bcf	indf2,3,c
 13428                           
 13429                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13430  003018  51A7               	movf	(_loRa+167)& (0+255),w,b
 13431  00301A  0D02               	mullw	2
 13432  00301C  0E00               	movlw	low _loRa
 13433  00301E  0100               	movlb	0	; () banked
 13434  003020  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13435  003022  0E02               	movlw	high _loRa
 13436  003024  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13437  003026  0EA8               	movlw	168
 13438  003028  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13439  00302A  0E00               	movlw	0
 13440  00302C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13441  00302E  50F3               	movf	prodl,w,c
 13442  003030  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13443  003032  50F4               	movf	prodh,w,c
 13444  003034  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13445  003036  0E01               	movlw	1
 13446  003038  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13447  00303A  6ED9               	movwf	fsr2l,c
 13448  00303C  0E00               	movlw	0
 13449  00303E  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13450  003040  6EDA               	movwf	fsr2h,c
 13451  003042  0102               	movlb	2	; () banked
 13452  003044  98DF               	bcf	indf2,4,c
 13453                           
 13454                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13455  003046  51A7               	movf	(_loRa+167)& (0+255),w,b
 13456  003048  0D02               	mullw	2
 13457  00304A  0E00               	movlw	low _loRa
 13458  00304C  0100               	movlb	0	; () banked
 13459  00304E  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13460  003050  0E02               	movlw	high _loRa
 13461  003052  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13462  003054  0EA8               	movlw	168
 13463  003056  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13464  003058  0E00               	movlw	0
 13465  00305A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13466  00305C  50F3               	movf	prodl,w,c
 13467  00305E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13468  003060  50F4               	movf	prodh,w,c
 13469  003062  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13470  003064  0E01               	movlw	1
 13471  003066  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13472  003068  6ED9               	movwf	fsr2l,c
 13473  00306A  0E00               	movlw	0
 13474  00306C  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13475  00306E  6EDA               	movwf	fsr2h,c
 13476  003070  0102               	movlb	2	; () banked
 13477  003072  9ADF               	bcf	indf2,5,c
 13478                           
 13479                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13480  003074  51A7               	movf	(_loRa+167)& (0+255),w,b
 13481  003076  0D02               	mullw	2
 13482  003078  0E00               	movlw	low _loRa
 13483  00307A  0100               	movlb	0	; () banked
 13484  00307C  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13485  00307E  0E02               	movlw	high _loRa
 13486  003080  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13487  003082  0EA8               	movlw	168
 13488  003084  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13489  003086  0E00               	movlw	0
 13490  003088  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13491  00308A  50F3               	movf	prodl,w,c
 13492  00308C  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13493  00308E  50F4               	movf	prodh,w,c
 13494  003090  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13495  003092  0E01               	movlw	1
 13496  003094  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13497  003096  6ED9               	movwf	fsr2l,c
 13498  003098  0E00               	movlw	0
 13499  00309A  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13500  00309C  6EDA               	movwf	fsr2h,c
 13501  00309E  0102               	movlb	2	; () banked
 13502  0030A0  9CDF               	bcf	indf2,6,c
 13503                           
 13504                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13505  0030A2  51A7               	movf	(_loRa+167)& (0+255),w,b
 13506  0030A4  0D02               	mullw	2
 13507  0030A6  0E00               	movlw	low _loRa
 13508  0030A8  0100               	movlb	0	; () banked
 13509  0030AA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 13510  0030AC  0E02               	movlw	high _loRa
 13511  0030AE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13512  0030B0  0EA8               	movlw	168
 13513  0030B2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13514  0030B4  0E00               	movlw	0
 13515  0030B6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13516  0030B8  50F3               	movf	prodl,w,c
 13517  0030BA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13518  0030BC  50F4               	movf	prodh,w,c
 13519  0030BE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13520  0030C0  0E01               	movlw	1
 13521  0030C2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 13522  0030C4  6ED9               	movwf	fsr2l,c
 13523  0030C6  0E00               	movlw	0
 13524  0030C8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 13525  0030CA  6EDA               	movwf	fsr2h,c
 13526  0030CC  0102               	movlb	2	; () banked
 13527  0030CE  9EDF               	bcf	indf2,7,c
 13528                           
 13529                           ; BSR set to: 2
 13530                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13531  0030D0  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13532  0030D4  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13533  0030D8  51A7               	movf	(_loRa+167)& (0+255),w,b
 13534  0030DA  0D02               	mullw	2
 13535  0030DC  0EA8               	movlw	low (_loRa+168)
 13536  0030DE  24F3               	addwf	prodl,w,c
 13537  0030E0  6EE9               	movwf	fsr0l,c
 13538  0030E2  0E02               	movlw	high (_loRa+168)
 13539  0030E4  20F4               	addwfc	prodh,w,c
 13540  0030E6  6EEA               	movwf	fsr0h,c
 13541  0030E8  CFDF FFEF          	movff	indf2,indf0
 13542                           
 13543                           ;lorawan.c: 1595: switch (*ptr ++)
 13544  0030EC  D064               	goto	l2273
 13545  0030EE                     
 13546                           ;lorawan.c: 1598: {
 13547                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13548                           
 13549                           ; BSR set to: 2
 13550  0030EE  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13551  0030F2  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13552  0030F6  EC0A  F042         	call	_ExecuteLinkCheck
 13553  0030FA  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13554  0030FE  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13555  003102  D04D               	goto	l14835
 13556  003104                     
 13557                           ;lorawan.c: 1605: {
 13558                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13559                           
 13560                           ; BSR set to: 2
 13561  003104  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13562  003108  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13563  00310C  EC22  F019         	call	_ExecuteLinkAdr	;wreg free
 13564  003110  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13565  003114  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13566                           
 13567                           ;lorawan.c: 1607: } break;
 13568  003118  D06C               	goto	l2275
 13569  00311A                     
 13570                           ;lorawan.c: 1610: {
 13571                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13572  00311A  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13573  00311E  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13574  003122  ECF9  F03E         	call	_ExecuteDutyCycle	;wreg free
 13575  003126  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13576  00312A  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13577                           
 13578                           ;lorawan.c: 1612: } break;
 13579  00312E  D061               	goto	l2275
 13580  003130                     
 13581                           ;lorawan.c: 1615: {
 13582                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13583  003130  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13584  003134  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13585  003138  EC44  F01F         	call	_ExecuteRxParamSetupReq	;wreg free
 13586  00313C  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13587  003140  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13588                           
 13589                           ;lorawan.c: 1617: } break;
 13590  003144  D056               	goto	l2275
 13591  003146                     
 13592                           ;lorawan.c: 1620: {
 13593                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13594  003146  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13595  00314A  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13596  00314E  ECC7  F045         	call	_ExecuteDevStatus	;wreg free
 13597  003152  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13598  003156  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13599                           
 13600                           ;lorawan.c: 1622: } break;
 13601  00315A  D04B               	goto	l2275
 13602  00315C                     
 13603                           ;lorawan.c: 1625: {
 13604                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13605  00315C  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13606  003160  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13607  003164  ECD8  F01B         	call	_ExecuteNewChannel	;wreg free
 13608  003168  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13609  00316C  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13610                           
 13611                           ;lorawan.c: 1628: } break;
 13612  003170  D040               	goto	l2275
 13613  003172                     
 13614                           ;lorawan.c: 1631: {
 13615                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13616  003172  C0B6  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13617  003176  C0B7  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13618  00317A  EC5A  F043         	call	_ExecuteRxTimingSetup	;wreg free
 13619  00317E  C067  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13620  003182  C068  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13621                           
 13622                           ;lorawan.c: 1633: } break;
 13623  003186  D035               	goto	l2275
 13624  003188                     
 13625                           ;lorawan.c: 1636: {
 13626                           ;lorawan.c: 1637: done = 1;
 13627  003188  0E01               	movlw	1
 13628  00318A  0100               	movlb	0	; () banked
 13629  00318C  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13633  00318E  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13634  003190  0D01               	mullw	1
 13635  003192  50F3               	movf	prodl,w,c
 13636  003194  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13637  003196  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 13638  003198  50F4               	movf	prodh,w,c
 13639  00319A  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13640  00319C  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13641  00319E                     l14835:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13645  00319E  0102               	movlb	2	; () banked
 13646  0031A0  51A7               	movf	(_loRa+167)& (0+255),w,b
 13647  0031A2  0D02               	mullw	2
 13648  0031A4  0EA8               	movlw	low (_loRa+168)
 13649  0031A6  24F3               	addwf	prodl,w,c
 13650  0031A8  6ED9               	movwf	fsr2l,c
 13651  0031AA  0E02               	movlw	high (_loRa+168)
 13652  0031AC  20F4               	addwfc	prodh,w,c
 13653  0031AE  6EDA               	movwf	fsr2h,c
 13654  0031B0  0EFF               	movlw	255
 13655  0031B2  6EDF               	movwf	indf2,c
 13656                           
 13657                           ; BSR set to: 2
 13658                           ;lorawan.c: 1641: }
 13659                           
 13660                           ;lorawan.c: 1640: } break;
 13661  0031B4  D01E               	goto	l2275
 13662  0031B6                     l2273:
 13663                           
 13664                           ; BSR set to: 2
 13665                           
 13666                           ; BSR set to: 2
 13667  0031B6  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13668  0031BA  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13669  0031BE  0100               	movlb	0	; () banked
 13670  0031C0  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13671  0031C2  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13672  0031C4  50DF               	movf	indf2,w,c
 13673                           
 13674                           ; Switch size 1, requested type "space"
 13675                           ; Number of cases is 7, Range of values is 2 to 8
 13676                           ; switch strategies available:
 13677                           ; Name         Instructions Cycles
 13678                           ; simple_byte           22    12 (average)
 13679                           ;	Chosen strategy is simple_byte
 13680  0031C6  0A02               	xorlw	2	; case 2
 13681  0031C8  B4D8               	btfsc	status,2,c
 13682  0031CA  D791               	goto	l2274
 13683  0031CC  0A01               	xorlw	1	; case 3
 13684  0031CE  B4D8               	btfsc	status,2,c
 13685  0031D0  D799               	goto	l2276
 13686  0031D2  0A07               	xorlw	7	; case 4
 13687  0031D4  B4D8               	btfsc	status,2,c
 13688  0031D6  D7A1               	goto	l2277
 13689  0031D8  0A01               	xorlw	1	; case 5
 13690  0031DA  B4D8               	btfsc	status,2,c
 13691  0031DC  D7A9               	goto	l2278
 13692  0031DE  0A03               	xorlw	3	; case 6
 13693  0031E0  B4D8               	btfsc	status,2,c
 13694  0031E2  D7B1               	goto	l2279
 13695  0031E4  0A01               	xorlw	1	; case 7
 13696  0031E6  B4D8               	btfsc	status,2,c
 13697  0031E8  D7B9               	goto	l2280
 13698  0031EA  0A0F               	xorlw	15	; case 8
 13699  0031EC  B4D8               	btfsc	status,2,c
 13700  0031EE  D7C1               	goto	l2281
 13701  0031F0  D7CB               	goto	l2282
 13702  0031F2                     l2275:
 13703                           
 13704                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13705                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13706                           
 13707                           ; BSR set to: 0
 13708  0031F2  0102               	movlb	2	; () banked
 13709  0031F4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13710  0031F6  0D02               	mullw	2
 13711  0031F8  0EA8               	movlw	low (_loRa+168)
 13712  0031FA  24F3               	addwf	prodl,w,c
 13713  0031FC  6ED9               	movwf	fsr2l,c
 13714  0031FE  0E02               	movlw	high (_loRa+168)
 13715  003200  20F4               	addwfc	prodh,w,c
 13716  003202  6EDA               	movwf	fsr2h,c
 13717  003204  28DE               	incf	postinc2,w,c
 13718  003206  B4D8               	btfsc	status,2,c
 13719  003208  D004               	goto	l2283
 13720                           
 13721                           ; BSR set to: 2
 13722  00320A  0E10               	movlw	16
 13723  00320C  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13724  00320E  D001               	goto	l2283
 13725                           
 13726                           ; BSR set to: 2
 13727                           ;lorawan.c: 1645: {
 13728                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13729  003210  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13730  003212                     l2283:
 13731                           
 13732                           ; BSR set to: 2
 13733                           
 13734                           ; BSR set to: 2
 13735  003212  0100               	movlb	0	; () banked
 13736  003214  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13737  003216  0D01               	mullw	1
 13738  003218  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 13739  00321C  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 13740  003220  50F3               	movf	prodl,w,c
 13741  003222  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 13742  003224  50F4               	movf	prodh,w,c
 13743  003226  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 13744  003228  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 13745  00322A  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13746  00322C  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13747  00322E  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13748  003230  B0D8               	btfsc	status,0,c
 13749  003232  D003               	goto	u17670
 13750                           
 13751                           ; BSR set to: 0
 13752  003234  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 13753  003236  B4D8               	btfsc	status,2,c
 13754  003238  D692               	goto	l2272
 13755  00323A                     u17670:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;lorawan.c: 1647: }
 13759                           ;lorawan.c: 1648: }
 13760                           ;lorawan.c: 1649: return ptr;
 13761                           
 13762                           ; BSR set to: 0
 13763                           
 13764                           ; BSR set to: 0
 13765  00323A  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13766  00323E  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13767  003242  0012               	return	
 13768  003244                     __end_of_MacExecuteCommands:
 13769                           	opt stack 0
 13770                           tosu	equ	0xFFF
 13771                           tosh	equ	0xFFE
 13772                           tosl	equ	0xFFD
 13773                           pclath	equ	0xFFA
 13774                           tblptru	equ	0xFF8
 13775                           tblptrh	equ	0xFF7
 13776                           tblptrl	equ	0xFF6
 13777                           tablat	equ	0xFF5
 13778                           prodh	equ	0xFF4
 13779                           prodl	equ	0xFF3
 13780                           intcon	equ	0xFF2
 13781                           intcon2	equ	0xFF1
 13782                           intcon3	equ	0xFF0
 13783                           indf0	equ	0xFEF
 13784                           postinc0	equ	0xFEE
 13785                           fsr0h	equ	0xFEA
 13786                           fsr0l	equ	0xFE9
 13787                           wreg	equ	0xFE8
 13788                           postinc1	equ	0xFE6
 13789                           postdec1	equ	0xFE5
 13790                           plusw1	equ	0xFE3
 13791                           fsr1h	equ	0xFE2
 13792                           fsr1l	equ	0xFE1
 13793                           indf2	equ	0xFDF
 13794                           postinc2	equ	0xFDE
 13795                           postdec2	equ	0xFDD
 13796                           fsr2h	equ	0xFDA
 13797                           fsr2l	equ	0xFD9
 13798                           status	equ	0xFD8
 13799                           
 13800 ;; *************** function _ExecuteRxTimingSetup *****************
 13801 ;; Defined at:
 13802 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 13805 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  delay           1    9[BANK0 ] unsigned char 
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  2    7[BANK0 ] PTR unsigned char 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13821 ;;Total ram usage:        3 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:    9
 13824 ;; This function calls:
 13825 ;;		_UpdateReceiveDelays
 13826 ;; This function is called by:
 13827 ;;		_MacExecuteCommands
 13828 ;; This function uses a non-reentrant model
 13829 ;;
 13830                           
 13831                           	psect	text60
 13832  0086B4                     __ptext60:
 13833                           	opt stack 0
 13834  0086B4                     _ExecuteRxTimingSetup:
 13835                           	opt stack 16
 13836                           
 13837                           ;lorawan.c: 1661: uint8_t delay;
 13838                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;incstack = 0
 13842  0086B4  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13843  0086B8  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13844  0086BC  50DF               	movf	indf2,w,c
 13845  0086BE  0B0F               	andlw	15
 13846  0086C0  0100               	movlb	0	; () banked
 13847  0086C2  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;lorawan.c: 1664: ptr++;
 13851  0086C4  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13852  0086C6  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13856  0086C8  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13857  0086CA  EC1F  F041         	call	_UpdateReceiveDelays
 13858                           
 13859                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13860  0086CE  0102               	movlb	2	; () banked
 13861  0086D0  8104               	bsf	(_loRa+4)& (0+255),0,b
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;lorawan.c: 1669: return ptr;
 13865  0086D2  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13866  0086D6  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13867  0086DA  0012               	return	
 13868  0086DC                     __end_of_ExecuteRxTimingSetup:
 13869                           	opt stack 0
 13870                           tosu	equ	0xFFF
 13871                           tosh	equ	0xFFE
 13872                           tosl	equ	0xFFD
 13873                           pclath	equ	0xFFA
 13874                           tblptru	equ	0xFF8
 13875                           tblptrh	equ	0xFF7
 13876                           tblptrl	equ	0xFF6
 13877                           tablat	equ	0xFF5
 13878                           prodh	equ	0xFF4
 13879                           prodl	equ	0xFF3
 13880                           intcon	equ	0xFF2
 13881                           intcon2	equ	0xFF1
 13882                           intcon3	equ	0xFF0
 13883                           indf0	equ	0xFEF
 13884                           postinc0	equ	0xFEE
 13885                           fsr0h	equ	0xFEA
 13886                           fsr0l	equ	0xFE9
 13887                           wreg	equ	0xFE8
 13888                           postinc1	equ	0xFE6
 13889                           postdec1	equ	0xFE5
 13890                           plusw1	equ	0xFE3
 13891                           fsr1h	equ	0xFE2
 13892                           fsr1l	equ	0xFE1
 13893                           indf2	equ	0xFDF
 13894                           postinc2	equ	0xFDE
 13895                           postdec2	equ	0xFDD
 13896                           fsr2h	equ	0xFDA
 13897                           fsr2l	equ	0xFD9
 13898                           status	equ	0xFD8
 13899                           
 13900 ;; *************** function _UpdateReceiveDelays *****************
 13901 ;; Defined at:
 13902 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;  delay           1    wreg     unsigned char 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  delay           1    6[BANK0 ] unsigned char 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  1    wreg      void 
 13909 ;; Registers used:
 13910 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;Total ram usage:        1 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    8
 13923 ;; This function calls:
 13924 ;;		___wmul
 13925 ;; This function is called by:
 13926 ;;		_LORAWAN_RxDone
 13927 ;;		_ExecuteRxTimingSetup
 13928 ;; This function uses a non-reentrant model
 13929 ;;
 13930                           
 13931                           	psect	text61
 13932  00823E                     __ptext61:
 13933                           	opt stack 0
 13934  00823E                     _UpdateReceiveDelays:
 13935                           	opt stack 18
 13936                           
 13937                           ; BSR set to: 2
 13938                           ;incstack = 0
 13939                           ;UpdateReceiveDelays@delay stored from wreg
 13940  00823E  0100               	movlb	0	; () banked
 13941  008240  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13942                           
 13943                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13944  008242  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 13945  008246  0100               	movlb	0	; () banked
 13946  008248  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 13947  00824A  0E03               	movlw	3
 13948  00824C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13949  00824E  0EE8               	movlw	232
 13950  008250  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13951  008252  EC6E  F043         	call	___wmul	;wreg free
 13952  008256  C060  F294         	movff	?___wmul,_loRa+148
 13953  00825A  C061  F295         	movff	?___wmul+1,_loRa+149
 13954                           
 13955                           ;lorawan.c: 2029: if (delay == 0)
 13956  00825E  0100               	movlb	0	; () banked
 13957  008260  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13958  008262  A4D8               	btfss	status,2,c
 13959  008264  D005               	goto	l2382
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;lorawan.c: 2030: {
 13963                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13964  008266  0E03               	movlw	3
 13965  008268  0102               	movlb	2	; () banked
 13966  00826A  6F95               	movwf	(_loRa+149)& (0+255),b
 13967  00826C  0EE8               	movlw	232
 13968  00826E  6F94               	movwf	(_loRa+148)& (0+255),b
 13969  008270                     l2382:
 13970                           
 13971                           ;lorawan.c: 2032: }
 13972                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13973                           
 13974                           ; BSR set to: 2
 13975  008270  0EE8               	movlw	232
 13976  008272  0102               	movlb	2	; () banked
 13977  008274  2594               	addwf	(_loRa+148)& (0+255),w,b
 13978  008276  6F96               	movwf	(_loRa+150)& (0+255),b
 13979  008278  0E03               	movlw	3
 13980  00827A  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13981  00827C  6F97               	movwf	(_loRa+151)& (0+255),b
 13982                           
 13983                           ; BSR set to: 2
 13984  00827E  0012               	return		;funcret
 13985  008280                     __end_of_UpdateReceiveDelays:
 13986                           	opt stack 0
 13987                           tosu	equ	0xFFF
 13988                           tosh	equ	0xFFE
 13989                           tosl	equ	0xFFD
 13990                           pclath	equ	0xFFA
 13991                           tblptru	equ	0xFF8
 13992                           tblptrh	equ	0xFF7
 13993                           tblptrl	equ	0xFF6
 13994                           tablat	equ	0xFF5
 13995                           prodh	equ	0xFF4
 13996                           prodl	equ	0xFF3
 13997                           intcon	equ	0xFF2
 13998                           intcon2	equ	0xFF1
 13999                           intcon3	equ	0xFF0
 14000                           indf0	equ	0xFEF
 14001                           postinc0	equ	0xFEE
 14002                           fsr0h	equ	0xFEA
 14003                           fsr0l	equ	0xFE9
 14004                           wreg	equ	0xFE8
 14005                           postinc1	equ	0xFE6
 14006                           postdec1	equ	0xFE5
 14007                           plusw1	equ	0xFE3
 14008                           fsr1h	equ	0xFE2
 14009                           fsr1l	equ	0xFE1
 14010                           indf2	equ	0xFDF
 14011                           postinc2	equ	0xFDE
 14012                           postdec2	equ	0xFDD
 14013                           fsr2h	equ	0xFDA
 14014                           fsr2l	equ	0xFD9
 14015                           status	equ	0xFD8
 14016                           
 14017 ;; *************** function ___wmul *****************
 14018 ;; Defined at:
 14019 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14020 ;; Parameters:    Size  Location     Type
 14021 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14022 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  product         2    4[BANK0 ] unsigned int 
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  2    0[BANK0 ] unsigned int 
 14027 ;; Registers used:
 14028 ;;		wreg, status,2, status,0, prodl, prodh
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;Total ram usage:        6 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:    7
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_UpdateCfList
 14045 ;;		_UpdateReceiveDelays
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text62
 14050  0086DC                     __ptext62:
 14051                           	opt stack 0
 14052  0086DC                     ___wmul:
 14053                           	opt stack 18
 14054                           
 14055                           ; BSR set to: 2
 14056                           ;incstack = 0
 14057  0086DC  0100               	movlb	0	; () banked
 14058  0086DE  5160               	movf	___wmul@multiplier& (0+255),w,b
 14059  0086E0  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14060  0086E2  CFF3 F064          	movff	prodl,___wmul@product
 14061  0086E6  CFF4 F065          	movff	prodh,___wmul@product+1
 14062  0086EA  5160               	movf	___wmul@multiplier& (0+255),w,b
 14063  0086EC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14064  0086EE  50F3               	movf	prodl,w,c
 14065  0086F0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14066  0086F2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14067  0086F4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 14068  0086F6  50F3               	movf	prodl,w,c
 14069  0086F8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072  0086FA  C064  F060         	movff	___wmul@product,?___wmul
 14073  0086FE  C065  F061         	movff	___wmul@product+1,?___wmul+1
 14074  008702  0012               	return	
 14075  008704                     __end_of___wmul:
 14076                           	opt stack 0
 14077                           tosu	equ	0xFFF
 14078                           tosh	equ	0xFFE
 14079                           tosl	equ	0xFFD
 14080                           pclath	equ	0xFFA
 14081                           tblptru	equ	0xFF8
 14082                           tblptrh	equ	0xFF7
 14083                           tblptrl	equ	0xFF6
 14084                           tablat	equ	0xFF5
 14085                           prodh	equ	0xFF4
 14086                           prodl	equ	0xFF3
 14087                           intcon	equ	0xFF2
 14088                           intcon2	equ	0xFF1
 14089                           intcon3	equ	0xFF0
 14090                           indf0	equ	0xFEF
 14091                           postinc0	equ	0xFEE
 14092                           fsr0h	equ	0xFEA
 14093                           fsr0l	equ	0xFE9
 14094                           wreg	equ	0xFE8
 14095                           postinc1	equ	0xFE6
 14096                           postdec1	equ	0xFE5
 14097                           plusw1	equ	0xFE3
 14098                           fsr1h	equ	0xFE2
 14099                           fsr1l	equ	0xFE1
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           fsr2h	equ	0xFDA
 14104                           fsr2l	equ	0xFD9
 14105                           status	equ	0xFD8
 14106                           
 14107 ;; *************** function _ExecuteRxParamSetupReq *****************
 14108 ;; Defined at:
 14109 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14110 ;; Parameters:    Size  Location     Type
 14111 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14112 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  frequency       4   74[BANK0 ] unsigned long 
 14115 ;;  dlSettings      1   78[BANK0 ] struct .
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  2   70[BANK0 ] PTR unsigned char 
 14118 ;; Registers used:
 14119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;Total ram usage:        9 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    8
 14132 ;; This function calls:
 14133 ;;		_UpdateReceiveWindow2Parameters
 14134 ;;		_ValidateDataRate
 14135 ;;		_ValidateFrequency
 14136 ;;		_ValidateRxOffset
 14137 ;;		___lmul
 14138 ;; This function is called by:
 14139 ;;		_MacExecuteCommands
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           	psect	text63
 14144  003E88                     __ptext63:
 14145                           	opt stack 0
 14146  003E88                     _ExecuteRxParamSetupReq:
 14147                           	opt stack 17
 14148                           
 14149                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 14150                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;incstack = 0
 14154  003E88  0E00               	movlw	0
 14155  003E8A  0100               	movlb	0	; () banked
 14156  003E8C  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14157  003E8E  0E00               	movlw	0
 14158  003E90  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14159  003E92  0E00               	movlw	0
 14160  003E94  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14161  003E96  0E00               	movlw	0
 14162  003E98  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14166  003E9A  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14167  003E9E  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14168  003EA2  50DF               	movf	indf2,w,c
 14169  003EA4  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14170                           
 14171                           ; BSR set to: 0
 14172  003EA6  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14173  003EA8  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14177  003EAA  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14178  003EAE  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14179  003EB2  0EFF               	movlw	255
 14180  003EB4  14DE               	andwf	postinc2,w,c
 14181  003EB6  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14182  003EB8  0EFF               	movlw	255
 14183  003EBA  14DE               	andwf	postinc2,w,c
 14184  003EBC  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14185  003EBE  0EFF               	movlw	255
 14186  003EC0  14DE               	andwf	postinc2,w,c
 14187  003EC2  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14188  003EC4  0E00               	movlw	0
 14189  003EC6  14DE               	andwf	postinc2,w,c
 14190  003EC8  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14191                           
 14192                           ; BSR set to: 0
 14193                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14194  003ECA  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14195  003ECE  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14196  003ED2  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14197  003ED6  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14198  003EDA  0E64               	movlw	100
 14199  003EDC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 14200  003EDE  0E00               	movlw	0
 14201  003EE0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14202  003EE2  0E00               	movlw	0
 14203  003EE4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14204  003EE6  0E00               	movlw	0
 14205  003EE8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14206  003EEA  EC4D  F03E         	call	___lmul	;wreg free
 14207  003EEE  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14208  003EF2  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14209  003EF6  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14210  003EFA  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14211                           
 14212                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14213  003EFE  0E03               	movlw	3
 14214  003F00  0100               	movlb	0	; () banked
 14215  003F02  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 14216  003F04  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 14217  003F06  0E00               	movlw	0
 14218  003F08  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 14219  003F0A  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14223  003F0C  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14224  003F10  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14225  003F14  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14226  003F18  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14227  003F1C  EC41  F03C         	call	_ValidateFrequency	;wreg free
 14228  003F20  0900               	iorlw	0
 14229  003F22  A4D8               	btfss	status,2,c
 14230  003F24  D018               	goto	l1179
 14231                           
 14232                           ;lorawan_eu.c: 754: {
 14233                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14234  003F26  0102               	movlb	2	; () banked
 14235  003F28  51A7               	movf	(_loRa+167)& (0+255),w,b
 14236  003F2A  0D02               	mullw	2
 14237  003F2C  0E00               	movlw	low _loRa
 14238  003F2E  0100               	movlb	0	; () banked
 14239  003F30  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14240  003F32  0E02               	movlw	high _loRa
 14241  003F34  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14242  003F36  0EA8               	movlw	168
 14243  003F38  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14244  003F3A  0E00               	movlw	0
 14245  003F3C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14246  003F3E  50F3               	movf	prodl,w,c
 14247  003F40  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14248  003F42  50F4               	movf	prodh,w,c
 14249  003F44  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14250  003F46  0E01               	movlw	1
 14251  003F48  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14252  003F4A  6ED9               	movwf	fsr2l,c
 14253  003F4C  0E00               	movlw	0
 14254  003F4E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14255  003F50  6EDA               	movwf	fsr2h,c
 14256  003F52  0102               	movlb	2	; () banked
 14257  003F54  86DF               	bsf	indf2,3,c
 14258  003F56                     l1179:
 14259                           
 14260                           ;lorawan_eu.c: 756: }
 14261                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14262                           
 14263                           ; BSR set to: 2
 14264  003F56  0100               	movlb	0	; () banked
 14265  003F58  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14266  003F5A  0B0F               	andlw	15
 14267  003F5C  EC0E  F045         	call	_ValidateDataRate
 14268  003F60  0900               	iorlw	0
 14269  003F62  A4D8               	btfss	status,2,c
 14270  003F64  D018               	goto	l1180
 14271                           
 14272                           ;lorawan_eu.c: 759: {
 14273                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14274  003F66  0102               	movlb	2	; () banked
 14275  003F68  51A7               	movf	(_loRa+167)& (0+255),w,b
 14276  003F6A  0D02               	mullw	2
 14277  003F6C  0E00               	movlw	low _loRa
 14278  003F6E  0100               	movlb	0	; () banked
 14279  003F70  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14280  003F72  0E02               	movlw	high _loRa
 14281  003F74  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14282  003F76  0EA8               	movlw	168
 14283  003F78  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14284  003F7A  0E00               	movlw	0
 14285  003F7C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14286  003F7E  50F3               	movf	prodl,w,c
 14287  003F80  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14288  003F82  50F4               	movf	prodh,w,c
 14289  003F84  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14290  003F86  0E01               	movlw	1
 14291  003F88  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14292  003F8A  6ED9               	movwf	fsr2l,c
 14293  003F8C  0E00               	movlw	0
 14294  003F8E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14295  003F90  6EDA               	movwf	fsr2h,c
 14296  003F92  0102               	movlb	2	; () banked
 14297  003F94  88DF               	bsf	indf2,4,c
 14298  003F96                     l1180:
 14299                           
 14300                           ;lorawan_eu.c: 761: }
 14301                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14302                           
 14303                           ; BSR set to: 2
 14304  003F96  0100               	movlb	0	; () banked
 14305  003F98  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14306  003F9A  0B07               	andlw	7
 14307  003F9C  EC02  F045         	call	_ValidateRxOffset
 14308  003FA0  0900               	iorlw	0
 14309  003FA2  A4D8               	btfss	status,2,c
 14310  003FA4  D018               	goto	l1181
 14311                           
 14312                           ;lorawan_eu.c: 764: {
 14313                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14314  003FA6  0102               	movlb	2	; () banked
 14315  003FA8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14316  003FAA  0D02               	mullw	2
 14317  003FAC  0E00               	movlw	low _loRa
 14318  003FAE  0100               	movlb	0	; () banked
 14319  003FB0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14320  003FB2  0E02               	movlw	high _loRa
 14321  003FB4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14322  003FB6  0EA8               	movlw	168
 14323  003FB8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14324  003FBA  0E00               	movlw	0
 14325  003FBC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14326  003FBE  50F3               	movf	prodl,w,c
 14327  003FC0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14328  003FC2  50F4               	movf	prodh,w,c
 14329  003FC4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14330  003FC6  0E01               	movlw	1
 14331  003FC8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14332  003FCA  6ED9               	movwf	fsr2l,c
 14333  003FCC  0E00               	movlw	0
 14334  003FCE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14335  003FD0  6EDA               	movwf	fsr2h,c
 14336  003FD2  0102               	movlb	2	; () banked
 14337  003FD4  8ADF               	bsf	indf2,5,c
 14338  003FD6                     l1181:
 14339                           
 14340                           ;lorawan_eu.c: 766: }
 14341                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14342  003FD6  0102               	movlb	2	; () banked
 14343  003FD8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14344  003FDA  0D02               	mullw	2
 14345  003FDC  0E00               	movlw	low _loRa
 14346  003FDE  0100               	movlb	0	; () banked
 14347  003FE0  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14348  003FE2  0E02               	movlw	high _loRa
 14349  003FE4  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14350  003FE6  0EA8               	movlw	168
 14351  003FE8  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14352  003FEA  0E00               	movlw	0
 14353  003FEC  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14354  003FEE  50F3               	movf	prodl,w,c
 14355  003FF0  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14356  003FF2  50F4               	movf	prodh,w,c
 14357  003FF4  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14358  003FF6  0E01               	movlw	1
 14359  003FF8  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14360  003FFA  6ED9               	movwf	fsr2l,c
 14361  003FFC  0E00               	movlw	0
 14362  003FFE  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14363  004000  6EDA               	movwf	fsr2h,c
 14364  004002  0102               	movlb	2	; () banked
 14365  004004  A8DF               	btfss	indf2,4,c
 14366  004006  D045               	goto	l1182
 14367                           
 14368                           ; BSR set to: 2
 14369  004008  51A7               	movf	(_loRa+167)& (0+255),w,b
 14370  00400A  0D02               	mullw	2
 14371  00400C  0E00               	movlw	low _loRa
 14372  00400E  0100               	movlb	0	; () banked
 14373  004010  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14374  004012  0E02               	movlw	high _loRa
 14375  004014  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14376  004016  0EA8               	movlw	168
 14377  004018  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14378  00401A  0E00               	movlw	0
 14379  00401C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14380  00401E  50F3               	movf	prodl,w,c
 14381  004020  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14382  004022  50F4               	movf	prodh,w,c
 14383  004024  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14384  004026  0E01               	movlw	1
 14385  004028  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14386  00402A  6ED9               	movwf	fsr2l,c
 14387  00402C  0E00               	movlw	0
 14388  00402E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14389  004030  6EDA               	movwf	fsr2h,c
 14390  004032  0102               	movlb	2	; () banked
 14391  004034  A6DF               	btfss	indf2,3,c
 14392  004036  D02D               	goto	l1182
 14393                           
 14394                           ; BSR set to: 2
 14395  004038  51A7               	movf	(_loRa+167)& (0+255),w,b
 14396  00403A  0D02               	mullw	2
 14397  00403C  0E00               	movlw	low _loRa
 14398  00403E  0100               	movlb	0	; () banked
 14399  004040  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 14400  004042  0E02               	movlw	high _loRa
 14401  004044  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 14402  004046  0EA8               	movlw	168
 14403  004048  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14404  00404A  0E00               	movlw	0
 14405  00404C  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14406  00404E  50F3               	movf	prodl,w,c
 14407  004050  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 14408  004052  50F4               	movf	prodh,w,c
 14409  004054  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 14410  004056  0E01               	movlw	1
 14411  004058  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 14412  00405A  6ED9               	movwf	fsr2l,c
 14413  00405C  0E00               	movlw	0
 14414  00405E  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 14415  004060  6EDA               	movwf	fsr2h,c
 14416  004062  0102               	movlb	2	; () banked
 14417  004064  AADF               	btfss	indf2,5,c
 14418  004066  D015               	goto	l1182
 14419                           
 14420                           ; BSR set to: 2
 14421                           ;lorawan_eu.c: 769: {
 14422                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14423  004068  0100               	movlb	0	; () banked
 14424  00406A  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14425  00406C  0B07               	andlw	7
 14426  00406E  0102               	movlb	2	; () banked
 14427  004070  6FEF               	movwf	(_loRa+239)& (0+255),b
 14428                           
 14429                           ; BSR set to: 2
 14430                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14431  004072  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14432  004076  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14433  00407A  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14434  00407E  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14435  004082  0100               	movlb	0	; () banked
 14436  004084  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14437  004086  0B0F               	andlw	15
 14438  004088  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14439  00408A  EC1A  F045         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14440                           
 14441                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14442  00408E  0102               	movlb	2	; () banked
 14443  004090  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14444  004092                     l1182:
 14445                           
 14446                           ; BSR set to: 2
 14447                           ;lorawan_eu.c: 773: }
 14448                           ;lorawan_eu.c: 775: return ptr;
 14449                           
 14450                           ; BSR set to: 2
 14451  004092  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14452  004096  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14453  00409A  0012               	return	
 14454  00409C                     __end_of_ExecuteRxParamSetupReq:
 14455                           	opt stack 0
 14456                           tosu	equ	0xFFF
 14457                           tosh	equ	0xFFE
 14458                           tosl	equ	0xFFD
 14459                           pclath	equ	0xFFA
 14460                           tblptru	equ	0xFF8
 14461                           tblptrh	equ	0xFF7
 14462                           tblptrl	equ	0xFF6
 14463                           tablat	equ	0xFF5
 14464                           prodh	equ	0xFF4
 14465                           prodl	equ	0xFF3
 14466                           intcon	equ	0xFF2
 14467                           intcon2	equ	0xFF1
 14468                           intcon3	equ	0xFF0
 14469                           indf0	equ	0xFEF
 14470                           postinc0	equ	0xFEE
 14471                           fsr0h	equ	0xFEA
 14472                           fsr0l	equ	0xFE9
 14473                           wreg	equ	0xFE8
 14474                           postinc1	equ	0xFE6
 14475                           postdec1	equ	0xFE5
 14476                           plusw1	equ	0xFE3
 14477                           fsr1h	equ	0xFE2
 14478                           fsr1l	equ	0xFE1
 14479                           indf2	equ	0xFDF
 14480                           postinc2	equ	0xFDE
 14481                           postdec2	equ	0xFDD
 14482                           fsr2h	equ	0xFDA
 14483                           fsr2l	equ	0xFD9
 14484                           status	equ	0xFD8
 14485                           
 14486 ;; *************** function _ValidateRxOffset *****************
 14487 ;; Defined at:
 14488 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;  rxOffset        1    wreg     unsigned char 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 14493 ;;  result          1    1[BANK0 ] enum E7249
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  1    wreg      enum E7249
 14496 ;; Registers used:
 14497 ;;		wreg, status,2, status,0
 14498 ;; Tracked objects:
 14499 ;;		On entry : 0/0
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;Total ram usage:        2 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:    7
 14510 ;; This function calls:
 14511 ;;		Nothing
 14512 ;; This function is called by:
 14513 ;;		_ExecuteRxParamSetupReq
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           	psect	text64
 14518  008A04                     __ptext64:
 14519                           	opt stack 0
 14520  008A04                     _ValidateRxOffset:
 14521                           	opt stack 17
 14522                           
 14523                           ; BSR set to: 2
 14524                           ;incstack = 0
 14525                           ;ValidateRxOffset@rxOffset stored from wreg
 14526  008A04  0100               	movlb	0	; () banked
 14527  008A06  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14528                           
 14529                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14530  008A08  0E00               	movlw	0
 14531  008A0A  0100               	movlb	0	; () banked
 14532  008A0C  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14536  008A0E  0E05               	movlw	5
 14537  008A10  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14538  008A12  D002               	goto	l1277
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;lorawan_eu.c: 1081: {
 14542                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14543  008A14  0E03               	movlw	3
 14544  008A16  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 14545  008A18                     l1277:
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;lorawan_eu.c: 1083: }
 14549                           ;lorawan_eu.c: 1085: return result;
 14550  008A18  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 14551  008A1A  0012               	return	
 14552  008A1C                     __end_of_ValidateRxOffset:
 14553                           	opt stack 0
 14554                           tosu	equ	0xFFF
 14555                           tosh	equ	0xFFE
 14556                           tosl	equ	0xFFD
 14557                           pclath	equ	0xFFA
 14558                           tblptru	equ	0xFF8
 14559                           tblptrh	equ	0xFF7
 14560                           tblptrl	equ	0xFF6
 14561                           tablat	equ	0xFF5
 14562                           prodh	equ	0xFF4
 14563                           prodl	equ	0xFF3
 14564                           intcon	equ	0xFF2
 14565                           intcon2	equ	0xFF1
 14566                           intcon3	equ	0xFF0
 14567                           indf0	equ	0xFEF
 14568                           postinc0	equ	0xFEE
 14569                           fsr0h	equ	0xFEA
 14570                           fsr0l	equ	0xFE9
 14571                           wreg	equ	0xFE8
 14572                           postinc1	equ	0xFE6
 14573                           postdec1	equ	0xFE5
 14574                           plusw1	equ	0xFE3
 14575                           fsr1h	equ	0xFE2
 14576                           fsr1l	equ	0xFE1
 14577                           indf2	equ	0xFDF
 14578                           postinc2	equ	0xFDE
 14579                           postdec2	equ	0xFDD
 14580                           fsr2h	equ	0xFDA
 14581                           fsr2l	equ	0xFD9
 14582                           status	equ	0xFD8
 14583                           
 14584 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14585 ;; Defined at:
 14586 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  frequency       4    0[BANK0 ] unsigned long 
 14589 ;;  dataRate        1    4[BANK0 ] unsigned char 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;		None
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      void 
 14594 ;; Registers used:
 14595 ;;		None
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14601 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14605 ;;Total ram usage:        5 bytes
 14606 ;; Hardware stack levels used:    1
 14607 ;; Hardware stack levels required when called:    7
 14608 ;; This function calls:
 14609 ;;		Nothing
 14610 ;; This function is called by:
 14611 ;;		_ExecuteRxParamSetupReq
 14612 ;;		_LORAWAN_SetReceiveWindow2Parameters
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           
 14616                           	psect	text65
 14617  008A34                     __ptext65:
 14618                           	opt stack 0
 14619  008A34                     _UpdateReceiveWindow2Parameters:
 14620                           	opt stack 17
 14621                           
 14622                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;incstack = 0
 14626  008A34  C064  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14627                           
 14628                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14629  008A38  C060  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14630  008A3C  C061  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14631  008A40  C062  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14632  008A44  C063  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14633  008A48  0012               	return		;funcret
 14634  008A4A                     __end_of_UpdateReceiveWindow2Parameters:
 14635                           	opt stack 0
 14636                           tosu	equ	0xFFF
 14637                           tosh	equ	0xFFE
 14638                           tosl	equ	0xFFD
 14639                           pclath	equ	0xFFA
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           prodh	equ	0xFF4
 14645                           prodl	equ	0xFF3
 14646                           intcon	equ	0xFF2
 14647                           intcon2	equ	0xFF1
 14648                           intcon3	equ	0xFF0
 14649                           indf0	equ	0xFEF
 14650                           postinc0	equ	0xFEE
 14651                           fsr0h	equ	0xFEA
 14652                           fsr0l	equ	0xFE9
 14653                           wreg	equ	0xFE8
 14654                           postinc1	equ	0xFE6
 14655                           postdec1	equ	0xFE5
 14656                           plusw1	equ	0xFE3
 14657                           fsr1h	equ	0xFE2
 14658                           fsr1l	equ	0xFE1
 14659                           indf2	equ	0xFDF
 14660                           postinc2	equ	0xFDE
 14661                           postdec2	equ	0xFDD
 14662                           fsr2h	equ	0xFDA
 14663                           fsr2l	equ	0xFD9
 14664                           status	equ	0xFD8
 14665                           
 14666 ;; *************** function _ExecuteNewChannel *****************
 14667 ;; Defined at:
 14668 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14669 ;; Parameters:    Size  Location     Type
 14670 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 14671 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14672 ;; Auto vars:     Size  Location     Type
 14673 ;;  frequency       4   75[BANK0 ] unsigned long 
 14674 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 14675 ;;  drRange         1   74[BANK0 ] struct .
 14676 ;; Return value:  Size  Location     Type
 14677 ;;                  2   70[BANK0 ] PTR unsigned char 
 14678 ;; Registers used:
 14679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14688 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14689 ;;Total ram usage:       10 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:    9
 14692 ;; This function calls:
 14693 ;;		_LORAWAN_SetChannelIdStatus
 14694 ;;		_UpdateChannelIdStatus
 14695 ;;		_UpdateDataRange
 14696 ;;		_UpdateDutyCycle
 14697 ;;		_UpdateFrequency
 14698 ;;		_ValidateChannelId
 14699 ;;		_ValidateDataRange
 14700 ;;		_ValidateFrequency
 14701 ;;		___lmul
 14702 ;; This function is called by:
 14703 ;;		_MacExecuteCommands
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text66
 14708  0037B0                     __ptext66:
 14709                           	opt stack 0
 14710  0037B0                     _ExecuteNewChannel:
 14711                           	opt stack 16
 14712                           
 14713                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 14714                           ;lorawan_eu.c: 680: DataRange_t drRange;
 14715                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 14716                           
 14717                           ;incstack = 0
 14718  0037B0  0E00               	movlw	0
 14719  0037B2  0100               	movlb	0	; () banked
 14720  0037B4  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14721  0037B6  0E00               	movlw	0
 14722  0037B8  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14723  0037BA  0E00               	movlw	0
 14724  0037BC  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14725  0037BE  0E00               	movlw	0
 14726  0037C0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14730  0037C2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14731  0037C6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14732  0037CA  50DF               	movf	indf2,w,c
 14733  0037CC  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14734                           
 14735                           ; BSR set to: 0
 14736  0037CE  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14737  0037D0  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14738                           
 14739                           ; BSR set to: 0
 14740                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14741  0037D2  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14742  0037D6  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14743  0037DA  0EFF               	movlw	255
 14744  0037DC  14DE               	andwf	postinc2,w,c
 14745  0037DE  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14746  0037E0  0EFF               	movlw	255
 14747  0037E2  14DE               	andwf	postinc2,w,c
 14748  0037E4  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14749  0037E6  0EFF               	movlw	255
 14750  0037E8  14DE               	andwf	postinc2,w,c
 14751  0037EA  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14752  0037EC  0E00               	movlw	0
 14753  0037EE  14DE               	andwf	postinc2,w,c
 14754  0037F0  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14758  0037F2  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14759  0037F6  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14760  0037FA  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14761  0037FE  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14762  003802  0E64               	movlw	100
 14763  003804  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 14764  003806  0E00               	movlw	0
 14765  003808  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14766  00380A  0E00               	movlw	0
 14767  00380C  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14768  00380E  0E00               	movlw	0
 14769  003810  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14770  003812  EC4D  F03E         	call	___lmul	;wreg free
 14771  003816  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 14772  00381A  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14773  00381E  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14774  003822  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14775                           
 14776                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14777  003826  0E03               	movlw	3
 14778  003828  0100               	movlb	0	; () banked
 14779  00382A  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 14780  00382C  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 14781  00382E  0E00               	movlw	0
 14782  003830  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 14783  003832  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14787  003834  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14788  003838  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14789  00383C  50DF               	movf	indf2,w,c
 14790  00383E  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14791                           
 14792                           ; BSR set to: 0
 14793  003840  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14794  003842  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14798  003844  0E00               	movlw	0
 14799  003846  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14800  003848  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14801  00384A  ECBD  F043         	call	_ValidateChannelId
 14802  00384E  0900               	iorlw	0
 14803  003850  A4D8               	btfss	status,2,c
 14804  003852  D04B               	goto	l1168
 14805                           
 14806                           ;lorawan_eu.c: 692: {
 14807                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14808  003854  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14809  003858  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14810  00385C  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14811  003860  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14812  003864  EC41  F03C         	call	_ValidateFrequency	;wreg free
 14813  003868  0900               	iorlw	0
 14814  00386A  B4D8               	btfsc	status,2,c
 14815  00386C  D007               	goto	u16760
 14816  00386E  0100               	movlb	0	; () banked
 14817  003870  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14818  003872  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14819  003874  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14820  003876  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14821  003878  A4D8               	btfss	status,2,c
 14822  00387A  D018               	goto	l1165
 14823  00387C                     u16760:
 14824                           
 14825                           ;lorawan_eu.c: 694: {
 14826                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14827                           
 14828                           ; BSR set to: 0
 14829  00387C  0102               	movlb	2	; () banked
 14830  00387E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14831  003880  0D02               	mullw	2
 14832  003882  0E00               	movlw	low _loRa
 14833  003884  0100               	movlb	0	; () banked
 14834  003886  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 14835  003888  0E02               	movlw	high _loRa
 14836  00388A  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14837  00388C  0EA8               	movlw	168
 14838  00388E  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14839  003890  0E00               	movlw	0
 14840  003892  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14841  003894  50F3               	movf	prodl,w,c
 14842  003896  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14843  003898  50F4               	movf	prodh,w,c
 14844  00389A  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14845  00389C  0E01               	movlw	1
 14846  00389E  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 14847  0038A0  6ED9               	movwf	fsr2l,c
 14848  0038A2  0E00               	movlw	0
 14849  0038A4  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 14850  0038A6  6EDA               	movwf	fsr2h,c
 14851  0038A8  0102               	movlb	2	; () banked
 14852  0038AA  8EDF               	bsf	indf2,7,c
 14853  0038AC                     l1165:
 14854                           
 14855                           ;lorawan_eu.c: 696: }
 14856                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14857                           
 14858                           ; BSR set to: 2
 14859  0038AC  0100               	movlb	0	; () banked
 14860  0038AE  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14861  0038B0  EC0D  F040         	call	_ValidateDataRange
 14862  0038B4  0900               	iorlw	0
 14863  0038B6  A4D8               	btfss	status,2,c
 14864  0038B8  D018               	goto	l1168
 14865                           
 14866                           ;lorawan_eu.c: 699: {
 14867                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14868  0038BA  0102               	movlb	2	; () banked
 14869  0038BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 14870  0038BE  0D02               	mullw	2
 14871  0038C0  0E00               	movlw	low _loRa
 14872  0038C2  0100               	movlb	0	; () banked
 14873  0038C4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 14874  0038C6  0E02               	movlw	high _loRa
 14875  0038C8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14876  0038CA  0EA8               	movlw	168
 14877  0038CC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14878  0038CE  0E00               	movlw	0
 14879  0038D0  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14880  0038D2  50F3               	movf	prodl,w,c
 14881  0038D4  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14882  0038D6  50F4               	movf	prodh,w,c
 14883  0038D8  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14884  0038DA  0E01               	movlw	1
 14885  0038DC  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 14886  0038DE  6ED9               	movwf	fsr2l,c
 14887  0038E0  0E00               	movlw	0
 14888  0038E2  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 14889  0038E4  6EDA               	movwf	fsr2h,c
 14890  0038E6  0102               	movlb	2	; () banked
 14891  0038E8  8CDF               	bsf	indf2,6,c
 14892  0038EA                     l1168:
 14893                           
 14894                           ;lorawan_eu.c: 701: }
 14895                           ;lorawan_eu.c: 702: }
 14896                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14897                           
 14898                           ; BSR set to: 2
 14899  0038EA  0102               	movlb	2	; () banked
 14900  0038EC  51A7               	movf	(_loRa+167)& (0+255),w,b
 14901  0038EE  0D02               	mullw	2
 14902  0038F0  0E00               	movlw	low _loRa
 14903  0038F2  0100               	movlb	0	; () banked
 14904  0038F4  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 14905  0038F6  0E02               	movlw	high _loRa
 14906  0038F8  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14907  0038FA  0EA8               	movlw	168
 14908  0038FC  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14909  0038FE  0E00               	movlw	0
 14910  003900  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14911  003902  50F3               	movf	prodl,w,c
 14912  003904  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14913  003906  50F4               	movf	prodh,w,c
 14914  003908  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14915  00390A  0E01               	movlw	1
 14916  00390C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 14917  00390E  6ED9               	movwf	fsr2l,c
 14918  003910  0E00               	movlw	0
 14919  003912  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 14920  003914  6EDA               	movwf	fsr2h,c
 14921  003916  0102               	movlb	2	; () banked
 14922  003918  AEDF               	btfss	indf2,7,c
 14923  00391A  D07D               	goto	l1169
 14924                           
 14925                           ; BSR set to: 2
 14926  00391C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14927  00391E  0D02               	mullw	2
 14928  003920  0E00               	movlw	low _loRa
 14929  003922  0100               	movlb	0	; () banked
 14930  003924  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 14931  003926  0E02               	movlw	high _loRa
 14932  003928  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 14933  00392A  0EA8               	movlw	168
 14934  00392C  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14935  00392E  0E00               	movlw	0
 14936  003930  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14937  003932  50F3               	movf	prodl,w,c
 14938  003934  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 14939  003936  50F4               	movf	prodh,w,c
 14940  003938  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 14941  00393A  0E01               	movlw	1
 14942  00393C  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 14943  00393E  6ED9               	movwf	fsr2l,c
 14944  003940  0E00               	movlw	0
 14945  003942  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 14946  003944  6EDA               	movwf	fsr2h,c
 14947  003946  0102               	movlb	2	; () banked
 14948  003948  ACDF               	btfss	indf2,6,c
 14949  00394A  D065               	goto	l1169
 14950                           
 14951                           ; BSR set to: 2
 14952                           ;lorawan_eu.c: 705: {
 14953                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14954  00394C  0E10               	movlw	16
 14955  00394E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14956  003950  D02E               	goto	l1170
 14957                           
 14958                           ; BSR set to: 2
 14959                           ;lorawan_eu.c: 707: {
 14960                           ;lorawan_eu.c: 708: if (frequency != 0)
 14961  003952  0100               	movlb	0	; () banked
 14962  003954  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14963  003956  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14964  003958  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14965  00395A  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14966  00395C  B4D8               	btfsc	status,2,c
 14967  00395E  D020               	goto	l1171
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;lorawan_eu.c: 709: {
 14971                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14972  003960  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14973  003964  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14974  003968  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14975  00396C  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14976  003970  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14977  003972  EC53  F040         	call	_UpdateFrequency
 14978                           
 14979                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14980  003976  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14981  00397A  0100               	movlb	0	; () banked
 14982  00397C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14983  00397E  ECD2  F029         	call	_UpdateDataRange
 14984                           
 14985                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14986  003982  0E01               	movlw	1
 14987  003984  0100               	movlb	0	; () banked
 14988  003986  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14989  003988  0E2E               	movlw	46
 14990  00398A  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14991  00398C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14992  00398E  EC75  F040         	call	_UpdateDutyCycle
 14993                           
 14994                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14995  003992  0E01               	movlw	1
 14996  003994  0100               	movlb	0	; () banked
 14997  003996  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14998  003998  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14999  00399A  ECBE  F027         	call	_UpdateChannelIdStatus
 15000                           
 15001                           ;lorawan_eu.c: 714: }
 15002  00399E  D039               	goto	l1175
 15003  0039A0                     l1171:
 15004                           
 15005                           ;lorawan_eu.c: 715: else
 15006                           ;lorawan_eu.c: 716: {
 15007                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 15008  0039A0  0E00               	movlw	0
 15009  0039A2  0100               	movlb	0	; () banked
 15010  0039A4  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15011  0039A6  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15012  0039A8  ECF3  F03D         	call	_LORAWAN_SetChannelIdStatus
 15013                           
 15014                           ;lorawan_eu.c: 718: }
 15015                           ;lorawan_eu.c: 719: }
 15016  0039AC  D032               	goto	l1175
 15017  0039AE                     l1170:
 15018                           
 15019                           ;lorawan_eu.c: 720: else
 15020                           ;lorawan_eu.c: 721: {
 15021                           ;lorawan_eu.c: 722: if (frequency != 0)
 15022  0039AE  0100               	movlb	0	; () banked
 15023  0039B0  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15024  0039B2  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15025  0039B4  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15026  0039B6  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15027  0039B8  B4D8               	btfsc	status,2,c
 15028  0039BA  D024               	goto	l1174
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;lorawan_eu.c: 723: {
 15032                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 15033  0039BC  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15034  0039C0  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15035  0039C4  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15036  0039C8  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15037  0039CC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15038  0039CE  0F10               	addlw	16
 15039  0039D0  EC53  F040         	call	_UpdateFrequency
 15040                           
 15041                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 15042  0039D4  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15043  0039D8  0100               	movlb	0	; () banked
 15044  0039DA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15045  0039DC  0F10               	addlw	16
 15046  0039DE  ECD2  F029         	call	_UpdateDataRange
 15047                           
 15048                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 15049  0039E2  0E01               	movlw	1
 15050  0039E4  0100               	movlb	0	; () banked
 15051  0039E6  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15052  0039E8  0E2E               	movlw	46
 15053  0039EA  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15054  0039EC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15055  0039EE  0F10               	addlw	16
 15056  0039F0  EC75  F040         	call	_UpdateDutyCycle
 15057                           
 15058                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 15059  0039F4  0E01               	movlw	1
 15060  0039F6  0100               	movlb	0	; () banked
 15061  0039F8  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15062  0039FA  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15063  0039FC  0F10               	addlw	16
 15064  0039FE  ECBE  F027         	call	_UpdateChannelIdStatus
 15065                           
 15066                           ;lorawan_eu.c: 728: }
 15067  003A02  D007               	goto	l1175
 15068  003A04                     l1174:
 15069                           
 15070                           ;lorawan_eu.c: 729: else
 15071                           ;lorawan_eu.c: 730: {
 15072                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 15073  003A04  0E00               	movlw	0
 15074  003A06  0100               	movlb	0	; () banked
 15075  003A08  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15076  003A0A  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15077  003A0C  0F10               	addlw	16
 15078  003A0E  ECF3  F03D         	call	_LORAWAN_SetChannelIdStatus
 15079  003A12                     l1175:
 15080                           
 15081                           ;lorawan_eu.c: 732: }
 15082                           ;lorawan_eu.c: 733: }
 15083                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 15084  003A12  0102               	movlb	2	; () banked
 15085  003A14  8703               	bsf	(_loRa+3)& (0+255),3,b
 15086  003A16                     l1169:
 15087                           
 15088                           ; BSR set to: 2
 15089                           ;lorawan_eu.c: 736: }
 15090                           ;lorawan_eu.c: 737: return ptr;
 15091                           
 15092                           ; BSR set to: 2
 15093  003A16  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 15094  003A1A  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 15095  003A1E  0012               	return	
 15096  003A20                     __end_of_ExecuteNewChannel:
 15097                           	opt stack 0
 15098                           tosu	equ	0xFFF
 15099                           tosh	equ	0xFFE
 15100                           tosl	equ	0xFFD
 15101                           pclath	equ	0xFFA
 15102                           tblptru	equ	0xFF8
 15103                           tblptrh	equ	0xFF7
 15104                           tblptrl	equ	0xFF6
 15105                           tablat	equ	0xFF5
 15106                           prodh	equ	0xFF4
 15107                           prodl	equ	0xFF3
 15108                           intcon	equ	0xFF2
 15109                           intcon2	equ	0xFF1
 15110                           intcon3	equ	0xFF0
 15111                           indf0	equ	0xFEF
 15112                           postinc0	equ	0xFEE
 15113                           fsr0h	equ	0xFEA
 15114                           fsr0l	equ	0xFE9
 15115                           wreg	equ	0xFE8
 15116                           postinc1	equ	0xFE6
 15117                           postdec1	equ	0xFE5
 15118                           plusw1	equ	0xFE3
 15119                           fsr1h	equ	0xFE2
 15120                           fsr1l	equ	0xFE1
 15121                           indf2	equ	0xFDF
 15122                           postinc2	equ	0xFDE
 15123                           postdec2	equ	0xFDD
 15124                           fsr2h	equ	0xFDA
 15125                           fsr2l	equ	0xFD9
 15126                           status	equ	0xFD8
 15127                           
 15128 ;; *************** function _ValidateFrequency *****************
 15129 ;; Defined at:
 15130 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;  result          1    4[BANK0 ] enum E7249
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      enum E7249
 15137 ;; Registers used:
 15138 ;;		wreg, status,2, status,0
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;Total ram usage:        5 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:    7
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_ExecuteNewChannel
 15155 ;;		_ExecuteRxParamSetupReq
 15156 ;;		_UpdateCfList
 15157 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15158 ;;		_LORAWAN_SetFrequency
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text67
 15163  007882                     __ptext67:
 15164                           	opt stack 0
 15165  007882                     _ValidateFrequency:
 15166                           	opt stack 18
 15167                           
 15168                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 15169                           
 15170                           ; BSR set to: 2
 15171                           ;incstack = 0
 15172  007882  0E00               	movlw	0
 15173  007884  0100               	movlb	0	; () banked
 15174  007886  6F64               	movwf	ValidateFrequency@result& (0+255),b
 15175                           
 15176                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 15177  007888  0102               	movlb	2	; () banked
 15178  00788A  51A4               	movf	(_loRa+164)& (0+255),w,b
 15179  00788C  A4D8               	btfss	status,2,c
 15180  00788E  D013               	goto	l1281
 15181                           
 15182                           ; BSR set to: 2
 15183                           ;lorawan_eu.c: 1093: {
 15184                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 15185  007890  0E81               	movlw	129
 15186  007892  0100               	movlb	0	; () banked
 15187  007894  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15188  007896  0E25               	movlw	37
 15189  007898  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15190  00789A  0EDB               	movlw	219
 15191  00789C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15192  00789E  0E33               	movlw	51
 15193  0078A0  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15194  0078A2  B0D8               	btfsc	status,0,c
 15195  0078A4  D01D               	goto	u15740
 15196                           
 15197                           ; BSR set to: 0
 15198  0078A6  0EC0               	movlw	192
 15199  0078A8  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15200  0078AA  0E55               	movlw	85
 15201  0078AC  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15202  0078AE  0E70               	movlw	112
 15203  0078B0  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15204  0078B2  0E33               	movlw	51
 15205  0078B4  D012               	goto	L30
 15206  0078B6                     l1281:
 15207                           
 15208                           ;lorawan_eu.c: 1099: else
 15209                           ;lorawan_eu.c: 1100: {
 15210                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 15211                           
 15212                           ; BSR set to: 0
 15213  0078B6  0E71               	movlw	113
 15214  0078B8  0100               	movlb	0	; () banked
 15215  0078BA  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15216  0078BC  0E5E               	movlw	94
 15217  0078BE  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15218  0078C0  0EEA               	movlw	234
 15219  0078C2  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15220  0078C4  0E19               	movlw	25
 15221  0078C6  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15222  0078C8  B0D8               	btfsc	status,0,c
 15223  0078CA  D00A               	goto	u15740
 15224                           
 15225                           ; BSR set to: 0
 15226  0078CC  0E90               	movlw	144
 15227  0078CE  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15228  0078D0  0ED1               	movlw	209
 15229  0078D2  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15230  0078D4  0ECF               	movlw	207
 15231  0078D6  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15232  0078D8  0E19               	movlw	25
 15233  0078DA                     L30:
 15234  0078DA  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15235  0078DC  B0D8               	btfsc	status,0,c
 15236  0078DE  D002               	goto	l1286
 15237  0078E0                     u15740:
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;lorawan_eu.c: 1102: {
 15241                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 15242                           
 15243                           ; BSR set to: 0
 15244  0078E0  0E03               	movlw	3
 15245  0078E2  6F64               	movwf	ValidateFrequency@result& (0+255),b
 15246  0078E4                     l1286:
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;lorawan_eu.c: 1104: }
 15250                           ;lorawan_eu.c: 1105: }
 15251                           ;lorawan_eu.c: 1107: return result;
 15252                           
 15253                           ; BSR set to: 0
 15254  0078E4  5164               	movf	ValidateFrequency@result& (0+255),w,b
 15255  0078E6  0012               	return	
 15256  0078E8                     __end_of_ValidateFrequency:
 15257                           	opt stack 0
 15258                           tosu	equ	0xFFF
 15259                           tosh	equ	0xFFE
 15260                           tosl	equ	0xFFD
 15261                           pclath	equ	0xFFA
 15262                           tblptru	equ	0xFF8
 15263                           tblptrh	equ	0xFF7
 15264                           tblptrl	equ	0xFF6
 15265                           tablat	equ	0xFF5
 15266                           prodh	equ	0xFF4
 15267                           prodl	equ	0xFF3
 15268                           intcon	equ	0xFF2
 15269                           intcon2	equ	0xFF1
 15270                           intcon3	equ	0xFF0
 15271                           indf0	equ	0xFEF
 15272                           postinc0	equ	0xFEE
 15273                           fsr0h	equ	0xFEA
 15274                           fsr0l	equ	0xFE9
 15275                           wreg	equ	0xFE8
 15276                           postinc1	equ	0xFE6
 15277                           postdec1	equ	0xFE5
 15278                           plusw1	equ	0xFE3
 15279                           fsr1h	equ	0xFE2
 15280                           fsr1l	equ	0xFE1
 15281                           indf2	equ	0xFDF
 15282                           postinc2	equ	0xFDE
 15283                           postdec2	equ	0xFDD
 15284                           fsr2h	equ	0xFDA
 15285                           fsr2l	equ	0xFD9
 15286                           status	equ	0xFD8
 15287                           
 15288 ;; *************** function _ValidateDataRange *****************
 15289 ;; Defined at:
 15290 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;  dataRangeNew    1    wreg     unsigned char 
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 15295 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 15296 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 15297 ;;  result          1    2[BANK0 ] enum E7249
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  1    wreg      enum E7249
 15300 ;; Registers used:
 15301 ;;		wreg, status,2, status,0, cstack
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15310 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15311 ;;Total ram usage:        4 bytes
 15312 ;; Hardware stack levels used:    1
 15313 ;; Hardware stack levels required when called:    8
 15314 ;; This function calls:
 15315 ;;		_ValidateDataRate
 15316 ;; This function is called by:
 15317 ;;		_ExecuteNewChannel
 15318 ;;		_LORAWAN_SetDataRange
 15319 ;; This function uses a non-reentrant model
 15320 ;;
 15321                           
 15322                           	psect	text68
 15323  00801A                     __ptext68:
 15324                           	opt stack 0
 15325  00801A                     _ValidateDataRange:
 15326                           	opt stack 16
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;incstack = 0
 15330                           ;ValidateDataRange@dataRangeNew stored from wreg
 15331  00801A  0100               	movlb	0	; () banked
 15332  00801C  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15333                           
 15334                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15335  00801E  0E00               	movlw	0
 15336  008020  0100               	movlb	0	; () banked
 15337  008022  6F62               	movwf	ValidateDataRange@result& (0+255),b
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15341                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15342  008024  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15343  008026  0B0F               	andlw	15
 15344  008028  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15348  00802A  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15349  00802C  0B0F               	andlw	15
 15350  00802E  0B0F               	andlw	15
 15351  008030  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15355  008032  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15356  008034  EC0E  F045         	call	_ValidateDataRate
 15357  008038  0900               	iorlw	0
 15358  00803A  A4D8               	btfss	status,2,c
 15359  00803C  D00C               	goto	u15770
 15360  00803E  0100               	movlb	0	; () banked
 15361  008040  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15362  008042  EC0E  F045         	call	_ValidateDataRate
 15363  008046  0900               	iorlw	0
 15364  008048  A4D8               	btfss	status,2,c
 15365  00804A  D005               	goto	u15770
 15366  00804C  0100               	movlb	0	; () banked
 15367  00804E  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15368  008050  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15369  008052  B0D8               	btfsc	status,0,c
 15370  008054  D003               	goto	l1292
 15371  008056                     u15770:
 15372                           
 15373                           ;lorawan_eu.c: 1119: {
 15374                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15375                           
 15376                           ; BSR set to: 0
 15377  008056  0E03               	movlw	3
 15378  008058  0100               	movlb	0	; () banked
 15379  00805A  6F62               	movwf	ValidateDataRange@result& (0+255),b
 15380  00805C                     l1292:
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;lorawan_eu.c: 1121: }
 15384                           ;lorawan_eu.c: 1122: return result;
 15385  00805C  5162               	movf	ValidateDataRange@result& (0+255),w,b
 15386  00805E  0012               	return	
 15387  008060                     __end_of_ValidateDataRange:
 15388                           	opt stack 0
 15389                           tosu	equ	0xFFF
 15390                           tosh	equ	0xFFE
 15391                           tosl	equ	0xFFD
 15392                           pclath	equ	0xFFA
 15393                           tblptru	equ	0xFF8
 15394                           tblptrh	equ	0xFF7
 15395                           tblptrl	equ	0xFF6
 15396                           tablat	equ	0xFF5
 15397                           prodh	equ	0xFF4
 15398                           prodl	equ	0xFF3
 15399                           intcon	equ	0xFF2
 15400                           intcon2	equ	0xFF1
 15401                           intcon3	equ	0xFF0
 15402                           indf0	equ	0xFEF
 15403                           postinc0	equ	0xFEE
 15404                           fsr0h	equ	0xFEA
 15405                           fsr0l	equ	0xFE9
 15406                           wreg	equ	0xFE8
 15407                           postinc1	equ	0xFE6
 15408                           postdec1	equ	0xFE5
 15409                           plusw1	equ	0xFE3
 15410                           fsr1h	equ	0xFE2
 15411                           fsr1l	equ	0xFE1
 15412                           indf2	equ	0xFDF
 15413                           postinc2	equ	0xFDE
 15414                           postdec2	equ	0xFDD
 15415                           fsr2h	equ	0xFDA
 15416                           fsr2l	equ	0xFD9
 15417                           status	equ	0xFD8
 15418                           
 15419 ;; *************** function _UpdateFrequency *****************
 15420 ;; Defined at:
 15421 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;  channelId       1    wreg     unsigned char 
 15424 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;  channelId       1    4[BANK0 ] unsigned char 
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  1    wreg      void 
 15429 ;; Registers used:
 15430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15431 ;; Tracked objects:
 15432 ;;		On entry : 0/0
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15439 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15440 ;;Total ram usage:        5 bytes
 15441 ;; Hardware stack levels used:    1
 15442 ;; Hardware stack levels required when called:    7
 15443 ;; This function calls:
 15444 ;;		Nothing
 15445 ;; This function is called by:
 15446 ;;		_ExecuteNewChannel
 15447 ;;		_LORAWAN_SetFrequency
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           
 15451                           	psect	text69
 15452  0080A6                     __ptext69:
 15453                           	opt stack 0
 15454  0080A6                     _UpdateFrequency:
 15455                           	opt stack 17
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;incstack = 0
 15459                           ;UpdateFrequency@channelId stored from wreg
 15460  0080A6  0100               	movlb	0	; () banked
 15461  0080A8  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 15462                           
 15463                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15464  0080AA  0100               	movlb	0	; () banked
 15465  0080AC  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 15466  0080AE  0D0E               	mullw	14
 15467  0080B0  0E00               	movlw	low _Channels
 15468  0080B2  24F3               	addwf	prodl,w,c
 15469  0080B4  6ED9               	movwf	fsr2l,c
 15470  0080B6  0E04               	movlw	high _Channels
 15471  0080B8  20F4               	addwfc	prodh,w,c
 15472  0080BA  6EDA               	movwf	fsr2h,c
 15473  0080BC  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15474  0080C0  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15475  0080C4  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15476  0080C8  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15477                           
 15478                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15479  0080CC  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 15480  0080CE  0D0E               	mullw	14
 15481  0080D0  0E0D               	movlw	13
 15482  0080D2  26F3               	addwf	prodl,f,c
 15483  0080D4  0E00               	movlw	0
 15484  0080D6  22F4               	addwfc	prodh,f,c
 15485  0080D8  0E00               	movlw	low _Channels
 15486  0080DA  24F3               	addwf	prodl,w,c
 15487  0080DC  6ED9               	movwf	fsr2l,c
 15488  0080DE  0E04               	movlw	high _Channels
 15489  0080E0  20F4               	addwfc	prodh,w,c
 15490  0080E2  6EDA               	movwf	fsr2h,c
 15491  0080E4  0E00               	movlw	0
 15492  0080E6  80DB               	bsf	plusw2,0,c
 15493                           
 15494                           ; BSR set to: 0
 15495  0080E8  0012               	return		;funcret
 15496  0080EA                     __end_of_UpdateFrequency:
 15497                           	opt stack 0
 15498                           tosu	equ	0xFFF
 15499                           tosh	equ	0xFFE
 15500                           tosl	equ	0xFFD
 15501                           pclath	equ	0xFFA
 15502                           tblptru	equ	0xFF8
 15503                           tblptrh	equ	0xFF7
 15504                           tblptrl	equ	0xFF6
 15505                           tablat	equ	0xFF5
 15506                           prodh	equ	0xFF4
 15507                           prodl	equ	0xFF3
 15508                           intcon	equ	0xFF2
 15509                           intcon2	equ	0xFF1
 15510                           intcon3	equ	0xFF0
 15511                           indf0	equ	0xFEF
 15512                           postinc0	equ	0xFEE
 15513                           fsr0h	equ	0xFEA
 15514                           fsr0l	equ	0xFE9
 15515                           wreg	equ	0xFE8
 15516                           postinc1	equ	0xFE6
 15517                           postdec1	equ	0xFE5
 15518                           plusw1	equ	0xFE3
 15519                           fsr1h	equ	0xFE2
 15520                           fsr1l	equ	0xFE1
 15521                           indf2	equ	0xFDF
 15522                           postinc2	equ	0xFDE
 15523                           postdec2	equ	0xFDD
 15524                           plusw2	equ	0xFDB
 15525                           fsr2h	equ	0xFDA
 15526                           fsr2l	equ	0xFD9
 15527                           status	equ	0xFD8
 15528                           
 15529 ;; *************** function _UpdateDutyCycle *****************
 15530 ;; Defined at:
 15531 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;  channelId       1    wreg     unsigned char 
 15534 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;  channelId       1    2[BANK0 ] unsigned char 
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  1    wreg      void 
 15539 ;; Registers used:
 15540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15541 ;; Tracked objects:
 15542 ;;		On entry : 0/0
 15543 ;;		On exit  : 0/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;Total ram usage:        3 bytes
 15551 ;; Hardware stack levels used:    1
 15552 ;; Hardware stack levels required when called:    7
 15553 ;; This function calls:
 15554 ;;		Nothing
 15555 ;; This function is called by:
 15556 ;;		_ExecuteNewChannel
 15557 ;;		_LORAWAN_SetDutyCycle
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561                           	psect	text70
 15562  0080EA                     __ptext70:
 15563                           	opt stack 0
 15564  0080EA                     _UpdateDutyCycle:
 15565                           	opt stack 17
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;incstack = 0
 15569                           ;UpdateDutyCycle@channelId stored from wreg
 15570  0080EA  0100               	movlb	0	; () banked
 15571  0080EC  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15572                           
 15573                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15574  0080EE  0100               	movlb	0	; () banked
 15575  0080F0  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15576  0080F2  0D0E               	mullw	14
 15577  0080F4  0E06               	movlw	6
 15578  0080F6  26F3               	addwf	prodl,f,c
 15579  0080F8  0E00               	movlw	0
 15580  0080FA  22F4               	addwfc	prodh,f,c
 15581  0080FC  0E00               	movlw	low _Channels
 15582  0080FE  24F3               	addwf	prodl,w,c
 15583  008100  6ED9               	movwf	fsr2l,c
 15584  008102  0E04               	movlw	high _Channels
 15585  008104  20F4               	addwfc	prodh,w,c
 15586  008106  6EDA               	movwf	fsr2h,c
 15587  008108  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15588  00810C  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15589                           
 15590                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15591  008110  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15592  008112  0D0E               	mullw	14
 15593  008114  0E0D               	movlw	13
 15594  008116  26F3               	addwf	prodl,f,c
 15595  008118  0E00               	movlw	0
 15596  00811A  22F4               	addwfc	prodh,f,c
 15597  00811C  0E00               	movlw	low _Channels
 15598  00811E  24F3               	addwf	prodl,w,c
 15599  008120  6ED9               	movwf	fsr2l,c
 15600  008122  0E04               	movlw	high _Channels
 15601  008124  20F4               	addwfc	prodh,w,c
 15602  008126  6EDA               	movwf	fsr2h,c
 15603  008128  0E00               	movlw	0
 15604  00812A  84DB               	bsf	plusw2,2,c
 15605                           
 15606                           ; BSR set to: 0
 15607  00812C  0012               	return		;funcret
 15608  00812E                     __end_of_UpdateDutyCycle:
 15609                           	opt stack 0
 15610                           tosu	equ	0xFFF
 15611                           tosh	equ	0xFFE
 15612                           tosl	equ	0xFFD
 15613                           pclath	equ	0xFFA
 15614                           tblptru	equ	0xFF8
 15615                           tblptrh	equ	0xFF7
 15616                           tblptrl	equ	0xFF6
 15617                           tablat	equ	0xFF5
 15618                           prodh	equ	0xFF4
 15619                           prodl	equ	0xFF3
 15620                           intcon	equ	0xFF2
 15621                           intcon2	equ	0xFF1
 15622                           intcon3	equ	0xFF0
 15623                           indf0	equ	0xFEF
 15624                           postinc0	equ	0xFEE
 15625                           fsr0h	equ	0xFEA
 15626                           fsr0l	equ	0xFE9
 15627                           wreg	equ	0xFE8
 15628                           postinc1	equ	0xFE6
 15629                           postdec1	equ	0xFE5
 15630                           plusw1	equ	0xFE3
 15631                           fsr1h	equ	0xFE2
 15632                           fsr1l	equ	0xFE1
 15633                           indf2	equ	0xFDF
 15634                           postinc2	equ	0xFDE
 15635                           postdec2	equ	0xFDD
 15636                           plusw2	equ	0xFDB
 15637                           fsr2h	equ	0xFDA
 15638                           fsr2l	equ	0xFD9
 15639                           status	equ	0xFD8
 15640                           
 15641 ;; *************** function _UpdateDataRange *****************
 15642 ;; Defined at:
 15643 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15644 ;; Parameters:    Size  Location     Type
 15645 ;;  channelId       1    wreg     unsigned char 
 15646 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;  channelId       1    2[BANK0 ] unsigned char 
 15649 ;;  i               1    3[BANK0 ] unsigned char 
 15650 ;; Return value:  Size  Location     Type
 15651 ;;                  1    wreg      void 
 15652 ;; Registers used:
 15653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15654 ;; Tracked objects:
 15655 ;;		On entry : 0/0
 15656 ;;		On exit  : 0/0
 15657 ;;		Unchanged: 0/0
 15658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15659 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15662 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15663 ;;Total ram usage:        4 bytes
 15664 ;; Hardware stack levels used:    1
 15665 ;; Hardware stack levels required when called:    7
 15666 ;; This function calls:
 15667 ;;		Nothing
 15668 ;; This function is called by:
 15669 ;;		_ExecuteNewChannel
 15670 ;;		_LORAWAN_SetDataRange
 15671 ;; This function uses a non-reentrant model
 15672 ;;
 15673                           
 15674                           	psect	text71
 15675  0053A4                     __ptext71:
 15676                           	opt stack 0
 15677  0053A4                     _UpdateDataRange:
 15678                           	opt stack 17
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;incstack = 0
 15682                           ;UpdateDataRange@channelId stored from wreg
 15683  0053A4  0100               	movlb	0	; () banked
 15684  0053A6  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 15685                           
 15686                           ;lorawan_eu.c: 1011: uint8_t i;
 15687                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15688  0053A8  0E07               	movlw	7
 15689  0053AA  0102               	movlb	2	; () banked
 15690  0053AC  6FEB               	movwf	(_loRa+235)& (0+255),b
 15691                           
 15692                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15693  0053AE  0E00               	movlw	0
 15694  0053B0  6FEC               	movwf	(_loRa+236)& (0+255),b
 15695                           
 15696                           ; BSR set to: 2
 15697                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15698  0053B2  0100               	movlb	0	; () banked
 15699  0053B4  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 15700  0053B6  0D0E               	mullw	14
 15701  0053B8  0E05               	movlw	5
 15702  0053BA  26F3               	addwf	prodl,f,c
 15703  0053BC  0E00               	movlw	0
 15704  0053BE  22F4               	addwfc	prodh,f,c
 15705  0053C0  0E00               	movlw	low _Channels
 15706  0053C2  24F3               	addwf	prodl,w,c
 15707  0053C4  6ED9               	movwf	fsr2l,c
 15708  0053C6  0E04               	movlw	high _Channels
 15709  0053C8  20F4               	addwfc	prodh,w,c
 15710  0053CA  6EDA               	movwf	fsr2h,c
 15711  0053CC  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15715  0053D0  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 15716  0053D2  0D0E               	mullw	14
 15717  0053D4  0E0D               	movlw	13
 15718  0053D6  26F3               	addwf	prodl,f,c
 15719  0053D8  0E00               	movlw	0
 15720  0053DA  22F4               	addwfc	prodh,f,c
 15721  0053DC  0E00               	movlw	low _Channels
 15722  0053DE  24F3               	addwf	prodl,w,c
 15723  0053E0  6ED9               	movwf	fsr2l,c
 15724  0053E2  0E04               	movlw	high _Channels
 15725  0053E4  20F4               	addwfc	prodh,w,c
 15726  0053E6  6EDA               	movwf	fsr2h,c
 15727  0053E8  0E00               	movlw	0
 15728  0053EA  82DB               	bsf	plusw2,1,c
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15732  0053EC  0E00               	movlw	0
 15733  0053EE  6F63               	movwf	UpdateDataRange@i& (0+255),b
 15734  0053F0  D06D               	goto	l1256
 15735  0053F2                     
 15736                           ; BSR set to: 0
 15737                           ;lorawan_eu.c: 1020: {
 15738                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15739                           
 15740                           ; BSR set to: 0
 15741  0053F2  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15742  0053F4  0D0E               	mullw	14
 15743  0053F6  0E05               	movlw	5
 15744  0053F8  26F3               	addwf	prodl,f,c
 15745  0053FA  0E00               	movlw	0
 15746  0053FC  22F4               	addwfc	prodh,f,c
 15747  0053FE  0E00               	movlw	low _Channels
 15748  005400  24F3               	addwf	prodl,w,c
 15749  005402  6ED9               	movwf	fsr2l,c
 15750  005404  0E04               	movlw	high _Channels
 15751  005406  20F4               	addwfc	prodh,w,c
 15752  005408  6EDA               	movwf	fsr2h,c
 15753  00540A  0104               	movlb	4	; () banked
 15754  00540C  50DF               	movf	223,w,c
 15755  00540E  0B0F               	andlw	15
 15756  005410  0100               	movlb	0	; () banked
 15757  005412  6F61               	movwf	??_UpdateDataRange& (0+255),b
 15758  005414  0102               	movlb	2	; () banked
 15759  005416  51EB               	movf	(_loRa+235)& (0+255),w,b
 15760  005418  0100               	movlb	0	; () banked
 15761  00541A  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 15762  00541C  B0D8               	btfsc	status,0,c
 15763  00541E  D020               	goto	l1258
 15764                           
 15765                           ; BSR set to: 0
 15766  005420  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15767  005422  0D0E               	mullw	14
 15768  005424  0E04               	movlw	4
 15769  005426  26F3               	addwf	prodl,f,c
 15770  005428  0E00               	movlw	0
 15771  00542A  22F4               	addwfc	prodh,f,c
 15772  00542C  0E00               	movlw	low _Channels
 15773  00542E  24F3               	addwf	prodl,w,c
 15774  005430  6ED9               	movwf	fsr2l,c
 15775  005432  0E04               	movlw	high _Channels
 15776  005434  20F4               	addwfc	prodh,w,c
 15777  005436  6EDA               	movwf	fsr2h,c
 15778  005438  04DE               	decf	postinc2,w,c
 15779  00543A  A4D8               	btfss	status,2,c
 15780  00543C  D011               	goto	l1258
 15781                           
 15782                           ; BSR set to: 0
 15783                           ;lorawan_eu.c: 1022: {
 15784                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15785  00543E  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15786  005440  0D0E               	mullw	14
 15787  005442  0E05               	movlw	5
 15788  005444  26F3               	addwf	prodl,f,c
 15789  005446  0E00               	movlw	0
 15790  005448  22F4               	addwfc	prodh,f,c
 15791  00544A  0E00               	movlw	low _Channels
 15792  00544C  24F3               	addwf	prodl,w,c
 15793  00544E  6ED9               	movwf	fsr2l,c
 15794  005450  0E04               	movlw	high _Channels
 15795  005452  20F4               	addwfc	prodh,w,c
 15796  005454  6EDA               	movwf	fsr2h,c
 15797  005456  0104               	movlb	4	; () banked
 15798  005458  50DF               	movf	223,w,c
 15799  00545A  0B0F               	andlw	15
 15800  00545C  0102               	movlb	2	; () banked
 15801  00545E  6FEB               	movwf	(_loRa+235)& (0+255),b
 15802  005460                     l1258:
 15803                           
 15804                           ;lorawan_eu.c: 1024: }
 15805                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15806  005460  0100               	movlb	0	; () banked
 15807  005462  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15808  005464  0D0E               	mullw	14
 15809  005466  0E05               	movlw	5
 15810  005468  26F3               	addwf	prodl,f,c
 15811  00546A  0E00               	movlw	0
 15812  00546C  22F4               	addwfc	prodh,f,c
 15813  00546E  0E00               	movlw	low _Channels
 15814  005470  24F3               	addwf	prodl,w,c
 15815  005472  6ED9               	movwf	fsr2l,c
 15816  005474  0E04               	movlw	high _Channels
 15817  005476  20F4               	addwfc	prodh,w,c
 15818  005478  6EDA               	movwf	fsr2h,c
 15819  00547A  0104               	movlb	4	; () banked
 15820  00547C  38DF               	swapf	223,w,c
 15821  00547E  0B0F               	andlw	15
 15822  005480  0102               	movlb	2	; () banked
 15823  005482  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15824  005484  D021               	goto	l1259
 15825                           
 15826                           ; BSR set to: 2
 15827  005486  0100               	movlb	0	; () banked
 15828  005488  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15829  00548A  0D0E               	mullw	14
 15830  00548C  0E04               	movlw	4
 15831  00548E  26F3               	addwf	prodl,f,c
 15832  005490  0E00               	movlw	0
 15833  005492  22F4               	addwfc	prodh,f,c
 15834  005494  0E00               	movlw	low _Channels
 15835  005496  24F3               	addwf	prodl,w,c
 15836  005498  6ED9               	movwf	fsr2l,c
 15837  00549A  0E04               	movlw	high _Channels
 15838  00549C  20F4               	addwfc	prodh,w,c
 15839  00549E  6EDA               	movwf	fsr2h,c
 15840  0054A0  04DE               	decf	postinc2,w,c
 15841  0054A2  A4D8               	btfss	status,2,c
 15842  0054A4  D011               	goto	l1259
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;lorawan_eu.c: 1026: {
 15846                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15847  0054A6  5163               	movf	UpdateDataRange@i& (0+255),w,b
 15848  0054A8  0D0E               	mullw	14
 15849  0054AA  0E05               	movlw	5
 15850  0054AC  26F3               	addwf	prodl,f,c
 15851  0054AE  0E00               	movlw	0
 15852  0054B0  22F4               	addwfc	prodh,f,c
 15853  0054B2  0E00               	movlw	low _Channels
 15854  0054B4  24F3               	addwf	prodl,w,c
 15855  0054B6  6ED9               	movwf	fsr2l,c
 15856  0054B8  0E04               	movlw	high _Channels
 15857  0054BA  20F4               	addwfc	prodh,w,c
 15858  0054BC  6EDA               	movwf	fsr2h,c
 15859  0054BE  0104               	movlb	4	; () banked
 15860  0054C0  38DF               	swapf	223,w,c
 15861  0054C2  0B0F               	andlw	15
 15862  0054C4  0102               	movlb	2	; () banked
 15863  0054C6  6FEC               	movwf	(_loRa+236)& (0+255),b
 15864  0054C8                     l1259:
 15865                           
 15866                           ; BSR set to: 2
 15867  0054C8  0100               	movlb	0	; () banked
 15868  0054CA  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 15869  0054CC                     l1256:
 15870                           
 15871                           ; BSR set to: 0
 15872                           
 15873                           ; BSR set to: 0
 15874  0054CC  0102               	movlb	2	; () banked
 15875  0054CE  51ED               	movf	(_loRa+237)& (0+255),w,b
 15876  0054D0  0100               	movlb	0	; () banked
 15877  0054D2  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 15878  0054D4  A0D8               	btfss	status,0,c
 15879  0054D6  D78D               	goto	l1257
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;lorawan_eu.c: 1028: }
 15883                           ;lorawan_eu.c: 1029: }
 15884                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15885                           
 15886                           ; BSR set to: 0
 15887  0054D8  0102               	movlb	2	; () banked
 15888  0054DA  51DF               	movf	(_loRa+223)& (0+255),w,b
 15889  0054DC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15890  0054DE  A0D8               	btfss	status,0,c
 15891                           
 15892                           ; BSR set to: 2
 15893                           ;lorawan_eu.c: 1032: {
 15894                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15895  0054E0  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15896                           
 15897                           ; BSR set to: 2
 15898                           ;lorawan_eu.c: 1034: }
 15899                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15900                           
 15901                           ; BSR set to: 2
 15902  0054E4  51EB               	movf	(_loRa+235)& (0+255),w,b
 15903  0054E6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15904  0054E8  B0D8               	btfsc	status,0,c
 15905  0054EA  0012               	return	
 15906                           
 15907                           ; BSR set to: 2
 15908                           ;lorawan_eu.c: 1037: {
 15909                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15910  0054EC  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15911  0054F0  0012               	return	
 15912  0054F2                     __end_of_UpdateDataRange:
 15913                           	opt stack 0
 15914                           tosu	equ	0xFFF
 15915                           tosh	equ	0xFFE
 15916                           tosl	equ	0xFFD
 15917                           pclath	equ	0xFFA
 15918                           tblptru	equ	0xFF8
 15919                           tblptrh	equ	0xFF7
 15920                           tblptrl	equ	0xFF6
 15921                           tablat	equ	0xFF5
 15922                           prodh	equ	0xFF4
 15923                           prodl	equ	0xFF3
 15924                           intcon	equ	0xFF2
 15925                           intcon2	equ	0xFF1
 15926                           intcon3	equ	0xFF0
 15927                           indf0	equ	0xFEF
 15928                           postinc0	equ	0xFEE
 15929                           fsr0h	equ	0xFEA
 15930                           fsr0l	equ	0xFE9
 15931                           wreg	equ	0xFE8
 15932                           postinc1	equ	0xFE6
 15933                           postdec1	equ	0xFE5
 15934                           plusw1	equ	0xFE3
 15935                           fsr1h	equ	0xFE2
 15936                           fsr1l	equ	0xFE1
 15937                           indf2	equ	0xFDF
 15938                           postinc2	equ	0xFDE
 15939                           postdec2	equ	0xFDD
 15940                           plusw2	equ	0xFDB
 15941                           fsr2h	equ	0xFDA
 15942                           fsr2l	equ	0xFD9
 15943                           status	equ	0xFD8
 15944                           
 15945 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15946 ;; Defined at:
 15947 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  channelId       1    wreg     unsigned char 
 15950 ;;  statusNew       1    4[BANK0 ] unsigned char 
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;  channelId       1    6[BANK0 ] unsigned char 
 15953 ;;  result          1    5[BANK0 ] enum E7249
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      enum E7249
 15956 ;; Registers used:
 15957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15963 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;Total ram usage:        3 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    8
 15970 ;; This function calls:
 15971 ;;		_UpdateChannelIdStatus
 15972 ;;		_ValidateChannelId
 15973 ;; This function is called by:
 15974 ;;		_ExecuteNewChannel
 15975 ;;		_UpdateCfList
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text72
 15980  007BE6                     __ptext72:
 15981                           	opt stack 0
 15982  007BE6                     _LORAWAN_SetChannelIdStatus:
 15983                           	opt stack 17
 15984                           
 15985                           ; BSR set to: 2
 15986                           ;incstack = 0
 15987                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15988  007BE6  0100               	movlb	0	; () banked
 15989  007BE8  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15990                           
 15991                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 15992  007BEA  0E00               	movlw	0
 15993  007BEC  0100               	movlb	0	; () banked
 15994  007BEE  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 15995                           
 15996                           ; BSR set to: 0
 15997                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15998  007BF0  0E01               	movlw	1
 15999  007BF2  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16000  007BF4  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16001  007BF6  ECBD  F043         	call	_ValidateChannelId
 16002  007BFA  0900               	iorlw	0
 16003  007BFC  B4D8               	btfsc	status,2,c
 16004  007BFE  D004               	goto	l1044
 16005                           
 16006                           ;lorawan_eu.c: 288: {
 16007                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 16008  007C00  0E03               	movlw	3
 16009  007C02  0100               	movlb	0	; () banked
 16010  007C04  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16011                           
 16012                           ;lorawan_eu.c: 290: }
 16013  007C06  0012               	return	
 16014  007C08                     l1044:
 16015                           
 16016                           ;lorawan_eu.c: 292: else
 16017                           ;lorawan_eu.c: 293: {
 16018                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 16019                           
 16020                           ; BSR set to: 0
 16021  007C08  0100               	movlb	0	; () banked
 16022  007C0A  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16023  007C0C  0D0E               	mullw	14
 16024  007C0E  0E0D               	movlw	13
 16025  007C10  26F3               	addwf	prodl,f,c
 16026  007C12  0E00               	movlw	0
 16027  007C14  22F4               	addwfc	prodh,f,c
 16028  007C16  0E00               	movlw	low _Channels
 16029  007C18  24F3               	addwf	prodl,w,c
 16030  007C1A  6ED9               	movwf	fsr2l,c
 16031  007C1C  0E04               	movlw	high _Channels
 16032  007C1E  20F4               	addwfc	prodh,w,c
 16033  007C20  6EDA               	movwf	fsr2h,c
 16034  007C22  50DF               	movf	indf2,w,c
 16035  007C24  0B07               	andlw	7
 16036  007C26  0A07               	xorlw	7
 16037  007C28  A4D8               	btfss	status,2,c
 16038  007C2A  D006               	goto	l1046
 16039                           
 16040                           ; BSR set to: 0
 16041                           ;lorawan_eu.c: 295: {
 16042                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 16043  007C2C  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16044  007C30  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16045  007C32  ECBE  F027         	call	_UpdateChannelIdStatus
 16046                           
 16047                           ;lorawan_eu.c: 297: }
 16048  007C36  0012               	return	
 16049  007C38                     l1046:
 16050                           
 16051                           ;lorawan_eu.c: 298: else
 16052                           ;lorawan_eu.c: 299: {
 16053                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 16054  007C38  0E03               	movlw	3
 16055  007C3A  0100               	movlb	0	; () banked
 16056  007C3C  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 16057                           
 16058                           ; BSR set to: 0
 16059                           
 16060                           ; BSR set to: 0
 16061  007C3E  0012               	return	
 16062  007C40                     __end_of_LORAWAN_SetChannelIdStatus:
 16063                           	opt stack 0
 16064                           tosu	equ	0xFFF
 16065                           tosh	equ	0xFFE
 16066                           tosl	equ	0xFFD
 16067                           pclath	equ	0xFFA
 16068                           tblptru	equ	0xFF8
 16069                           tblptrh	equ	0xFF7
 16070                           tblptrl	equ	0xFF6
 16071                           tablat	equ	0xFF5
 16072                           prodh	equ	0xFF4
 16073                           prodl	equ	0xFF3
 16074                           intcon	equ	0xFF2
 16075                           intcon2	equ	0xFF1
 16076                           intcon3	equ	0xFF0
 16077                           indf0	equ	0xFEF
 16078                           postinc0	equ	0xFEE
 16079                           fsr0h	equ	0xFEA
 16080                           fsr0l	equ	0xFE9
 16081                           wreg	equ	0xFE8
 16082                           postinc1	equ	0xFE6
 16083                           postdec1	equ	0xFE5
 16084                           plusw1	equ	0xFE3
 16085                           fsr1h	equ	0xFE2
 16086                           fsr1l	equ	0xFE1
 16087                           indf2	equ	0xFDF
 16088                           postinc2	equ	0xFDE
 16089                           postdec2	equ	0xFDD
 16090                           plusw2	equ	0xFDB
 16091                           fsr2h	equ	0xFDA
 16092                           fsr2l	equ	0xFD9
 16093                           status	equ	0xFD8
 16094                           
 16095 ;; *************** function _ValidateChannelId *****************
 16096 ;; Defined at:
 16097 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  channelId       1    wreg     unsigned char 
 16100 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;  channelId       1    2[BANK0 ] unsigned char 
 16103 ;;  result          1    1[BANK0 ] enum E7249
 16104 ;; Return value:  Size  Location     Type
 16105 ;;                  1    wreg      enum E7249
 16106 ;; Registers used:
 16107 ;;		wreg, status,2, status,0
 16108 ;; Tracked objects:
 16109 ;;		On entry : 0/0
 16110 ;;		On exit  : 0/0
 16111 ;;		Unchanged: 0/0
 16112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16113 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16117 ;;Total ram usage:        3 bytes
 16118 ;; Hardware stack levels used:    1
 16119 ;; Hardware stack levels required when called:    7
 16120 ;; This function calls:
 16121 ;;		Nothing
 16122 ;; This function is called by:
 16123 ;;		_LORAWAN_SetChannelIdStatus
 16124 ;;		_ExecuteNewChannel
 16125 ;;		_LORAWAN_SetDataRange
 16126 ;;		_LORAWAN_GetDataRange
 16127 ;;		_LORAWAN_GetChannelIdStatus
 16128 ;;		_LORAWAN_SetFrequency
 16129 ;;		_LORAWAN_SetDutyCycle
 16130 ;;		_LORAWAN_GetDutyCycle
 16131 ;; This function uses a non-reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text73
 16135  00877A                     __ptext73:
 16136                           	opt stack 0
 16137  00877A                     _ValidateChannelId:
 16138                           	opt stack 17
 16139                           
 16140                           ;incstack = 0
 16141                           ;ValidateChannelId@channelId stored from wreg
 16142  00877A  0100               	movlb	0	; () banked
 16143  00877C  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 16144                           
 16145                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 16146  00877E  0E00               	movlw	0
 16147  008780  0100               	movlb	0	; () banked
 16148  008782  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16149                           
 16150                           ; BSR set to: 0
 16151                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 16152  008784  0E10               	movlw	16
 16153  008786  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16154  008788  D006               	goto	u15270
 16155                           
 16156                           ; BSR set to: 0
 16157  00878A  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 16158  00878C  A4D8               	btfss	status,2,c
 16159  00878E  D005               	goto	l1298
 16160                           
 16161                           ; BSR set to: 0
 16162  008790  0E03               	movlw	3
 16163  008792  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16164  008794  D002               	goto	l1298
 16165  008796                     u15270:
 16166                           
 16167                           ; BSR set to: 0
 16168                           ;lorawan_eu.c: 1130: {
 16169                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 16170                           
 16171                           ; BSR set to: 0
 16172  008796  0E03               	movlw	3
 16173  008798  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16174  00879A                     l1298:
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;lorawan_eu.c: 1132: }
 16178                           ;lorawan_eu.c: 1134: return result;
 16179  00879A  5161               	movf	ValidateChannelId@result& (0+255),w,b
 16180  00879C  0012               	return	
 16181  00879E                     __end_of_ValidateChannelId:
 16182                           	opt stack 0
 16183                           tosu	equ	0xFFF
 16184                           tosh	equ	0xFFE
 16185                           tosl	equ	0xFFD
 16186                           pclath	equ	0xFFA
 16187                           tblptru	equ	0xFF8
 16188                           tblptrh	equ	0xFF7
 16189                           tblptrl	equ	0xFF6
 16190                           tablat	equ	0xFF5
 16191                           prodh	equ	0xFF4
 16192                           prodl	equ	0xFF3
 16193                           intcon	equ	0xFF2
 16194                           intcon2	equ	0xFF1
 16195                           intcon3	equ	0xFF0
 16196                           indf0	equ	0xFEF
 16197                           postinc0	equ	0xFEE
 16198                           fsr0h	equ	0xFEA
 16199                           fsr0l	equ	0xFE9
 16200                           wreg	equ	0xFE8
 16201                           postinc1	equ	0xFE6
 16202                           postdec1	equ	0xFE5
 16203                           plusw1	equ	0xFE3
 16204                           fsr1h	equ	0xFE2
 16205                           fsr1l	equ	0xFE1
 16206                           indf2	equ	0xFDF
 16207                           postinc2	equ	0xFDE
 16208                           postdec2	equ	0xFDD
 16209                           plusw2	equ	0xFDB
 16210                           fsr2h	equ	0xFDA
 16211                           fsr2l	equ	0xFD9
 16212                           status	equ	0xFD8
 16213                           
 16214 ;; *************** function _ExecuteLinkCheck *****************
 16215 ;; Defined at:
 16216 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 16219 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  2    0[BANK0 ] PTR unsigned char 
 16224 ;; Registers used:
 16225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16235 ;;Total ram usage:        2 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:    7
 16238 ;; This function calls:
 16239 ;;		Nothing
 16240 ;; This function is called by:
 16241 ;;		_MacExecuteCommands
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text74
 16246  008414                     __ptext74:
 16247                           	opt stack 0
 16248  008414                     _ExecuteLinkCheck:
 16249                           	opt stack 18
 16250                           
 16251                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;incstack = 0
 16255  008414  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16256  008418  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16257  00841C  50DF               	movf	indf2,w,c
 16258  00841E  0102               	movlb	2	; () banked
 16259  008420  6FDD               	movwf	(_loRa+221)& (0+255),b
 16260                           
 16261                           ; BSR set to: 2
 16262  008422  0100               	movlb	0	; () banked
 16263  008424  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16264  008426  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 16268  008428  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16269  00842C  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16270  008430  50DF               	movf	indf2,w,c
 16271  008432  0102               	movlb	2	; () banked
 16272  008434  6FDE               	movwf	(_loRa+222)& (0+255),b
 16273  008436  0100               	movlb	0	; () banked
 16274  008438  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16275  00843A  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;lorawan.c: 1656: return ptr;
 16279  00843C  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 16280  008440  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 16281  008444  0012               	return	
 16282  008446                     __end_of_ExecuteLinkCheck:
 16283                           	opt stack 0
 16284                           tosu	equ	0xFFF
 16285                           tosh	equ	0xFFE
 16286                           tosl	equ	0xFFD
 16287                           pclath	equ	0xFFA
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           intcon	equ	0xFF2
 16295                           intcon2	equ	0xFF1
 16296                           intcon3	equ	0xFF0
 16297                           indf0	equ	0xFEF
 16298                           postinc0	equ	0xFEE
 16299                           fsr0h	equ	0xFEA
 16300                           fsr0l	equ	0xFE9
 16301                           wreg	equ	0xFE8
 16302                           postinc1	equ	0xFE6
 16303                           postdec1	equ	0xFE5
 16304                           plusw1	equ	0xFE3
 16305                           fsr1h	equ	0xFE2
 16306                           fsr1l	equ	0xFE1
 16307                           indf2	equ	0xFDF
 16308                           postinc2	equ	0xFDE
 16309                           postdec2	equ	0xFDD
 16310                           plusw2	equ	0xFDB
 16311                           fsr2h	equ	0xFDA
 16312                           fsr2l	equ	0xFD9
 16313                           status	equ	0xFD8
 16314                           
 16315 ;; *************** function _ExecuteLinkAdr *****************
 16316 ;; Defined at:
 16317 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 16320 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;  redundancy      2   22[BANK0 ] PTR struct .
 16323 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16324 ;;  channelMask     2   19[BANK0 ] unsigned int 
 16325 ;;  dataRate        1   24[BANK0 ] unsigned char 
 16326 ;;  txPower         1   21[BANK0 ] unsigned char 
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  2   15[BANK0 ] PTR unsigned char 
 16329 ;; Registers used:
 16330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16331 ;; Tracked objects:
 16332 ;;		On entry : 0/0
 16333 ;;		On exit  : 0/0
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16337 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;Total ram usage:       10 bytes
 16341 ;; Hardware stack levels used:    1
 16342 ;; Hardware stack levels required when called:   10
 16343 ;; This function calls:
 16344 ;;		_EnableChannels
 16345 ;;		_UpdateCurrentDataRate
 16346 ;;		_UpdateTxPower
 16347 ;;		_ValidateChannelMask
 16348 ;;		_ValidateChannelMaskCntl
 16349 ;;		_ValidateDataRate
 16350 ;;		_ValidateTxPower
 16351 ;; This function is called by:
 16352 ;;		_MacExecuteCommands
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           	psect	text75
 16357  003244                     __ptext75:
 16358                           	opt stack 0
 16359  003244                     _ExecuteLinkAdr:
 16360                           	opt stack 15
 16361                           
 16362                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 16363                           ;lorawan_eu.c: 616: uint16_t channelMask;
 16364                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;incstack = 0
 16368  003244  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16369  003248  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16370  00324C  50DF               	movf	indf2,w,c
 16371  00324E  0B0F               	andlw	15
 16372  003250  0100               	movlb	0	; () banked
 16373  003252  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 16374                           
 16375                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 16376  003254  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16377  003258  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16378  00325C  50DF               	movf	indf2,w,c
 16379  00325E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16380  003260  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16381  003262  0B0F               	andlw	15
 16382  003264  0B0F               	andlw	15
 16383  003266  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;lorawan_eu.c: 620: ptr++;
 16387  003268  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16388  00326A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 16392  00326C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16393  003270  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16394  003274  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 16395  003278  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 16399  00327C  0E02               	movlw	2
 16400  00327E  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 16401  003280  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 16402  003282  0E00               	movlw	0
 16403  003284  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 16404  003286  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 16408                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 16409  003288  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16410  00328C  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16411                           
 16412                           ; BSR set to: 0
 16413  003290  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16414  003292  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16418  003294  0102               	movlb	2	; () banked
 16419  003296  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16420  003298  D0EF               	goto	l1150
 16421                           
 16422                           ; BSR set to: 2
 16423                           ;lorawan_eu.c: 627: {
 16424                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 16425  00329A  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16426  00329E  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16427  0032A2  0100               	movlb	0	; () banked
 16428  0032A4  38DF               	swapf	223,w,c
 16429  0032A6  0B07               	andlw	7
 16430  0032A8  EC13  F044         	call	_ValidateChannelMaskCntl
 16431  0032AC  0900               	iorlw	0
 16432  0032AE  A4D8               	btfss	status,2,c
 16433  0032B0  D021               	goto	l1151
 16434  0032B2  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16435  0032B6  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16436  0032BA  EC67  F03D         	call	_ValidateChannelMask	;wreg free
 16437  0032BE  0900               	iorlw	0
 16438  0032C0  A4D8               	btfss	status,2,c
 16439  0032C2  D018               	goto	l1151
 16440                           
 16441                           ;lorawan_eu.c: 629: {
 16442                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16443  0032C4  0102               	movlb	2	; () banked
 16444  0032C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16445  0032C8  0D02               	mullw	2
 16446  0032CA  0E00               	movlw	low _loRa
 16447  0032CC  0100               	movlb	0	; () banked
 16448  0032CE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16449  0032D0  0E02               	movlw	high _loRa
 16450  0032D2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16451  0032D4  0EA8               	movlw	168
 16452  0032D6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16453  0032D8  0E00               	movlw	0
 16454  0032DA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16455  0032DC  50F3               	movf	prodl,w,c
 16456  0032DE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16457  0032E0  50F4               	movf	prodh,w,c
 16458  0032E2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16459  0032E4  0E01               	movlw	1
 16460  0032E6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16461  0032E8  6ED9               	movwf	fsr2l,c
 16462  0032EA  0E00               	movlw	0
 16463  0032EC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16464  0032EE  6EDA               	movwf	fsr2h,c
 16465  0032F0  0102               	movlb	2	; () banked
 16466  0032F2  80DF               	bsf	indf2,0,c
 16467  0032F4                     l1151:
 16468                           
 16469                           ;lorawan_eu.c: 631: }
 16470                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16471                           
 16472                           ; BSR set to: 2
 16473  0032F4  0100               	movlb	0	; () banked
 16474  0032F6  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16475  0032F8  EC0E  F045         	call	_ValidateDataRate
 16476  0032FC  0900               	iorlw	0
 16477  0032FE  A4D8               	btfss	status,2,c
 16478  003300  D022               	goto	l1152
 16479  003302  0102               	movlb	2	; () banked
 16480  003304  51EB               	movf	(_loRa+235)& (0+255),w,b
 16481  003306  0100               	movlb	0	; () banked
 16482  003308  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16483  00330A  A0D8               	btfss	status,0,c
 16484  00330C  D01C               	goto	l1152
 16485                           
 16486                           ; BSR set to: 0
 16487  00330E  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16488  003310  0102               	movlb	2	; () banked
 16489  003312  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16490  003314  A0D8               	btfss	status,0,c
 16491  003316  D017               	goto	l1152
 16492                           
 16493                           ; BSR set to: 2
 16494                           ;lorawan_eu.c: 634: {
 16495                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16496  003318  51A7               	movf	(_loRa+167)& (0+255),w,b
 16497  00331A  0D02               	mullw	2
 16498  00331C  0E00               	movlw	low _loRa
 16499  00331E  0100               	movlb	0	; () banked
 16500  003320  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16501  003322  0E02               	movlw	high _loRa
 16502  003324  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16503  003326  0EA8               	movlw	168
 16504  003328  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16505  00332A  0E00               	movlw	0
 16506  00332C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16507  00332E  50F3               	movf	prodl,w,c
 16508  003330  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16509  003332  50F4               	movf	prodh,w,c
 16510  003334  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16511  003336  0E01               	movlw	1
 16512  003338  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16513  00333A  6ED9               	movwf	fsr2l,c
 16514  00333C  0E00               	movlw	0
 16515  00333E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16516  003340  6EDA               	movwf	fsr2h,c
 16517  003342  0102               	movlb	2	; () banked
 16518  003344  82DF               	bsf	indf2,1,c
 16519  003346                     l1152:
 16520                           
 16521                           ;lorawan_eu.c: 636: }
 16522                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16523                           
 16524                           ; BSR set to: 2
 16525  003346  0100               	movlb	0	; () banked
 16526  003348  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16527  00334A  ECF3  F042         	call	_ValidateTxPower
 16528  00334E  0900               	iorlw	0
 16529  003350  A4D8               	btfss	status,2,c
 16530  003352  D018               	goto	l1153
 16531                           
 16532                           ;lorawan_eu.c: 639: {
 16533                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16534  003354  0102               	movlb	2	; () banked
 16535  003356  51A7               	movf	(_loRa+167)& (0+255),w,b
 16536  003358  0D02               	mullw	2
 16537  00335A  0E00               	movlw	low _loRa
 16538  00335C  0100               	movlb	0	; () banked
 16539  00335E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16540  003360  0E02               	movlw	high _loRa
 16541  003362  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16542  003364  0EA8               	movlw	168
 16543  003366  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16544  003368  0E00               	movlw	0
 16545  00336A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16546  00336C  50F3               	movf	prodl,w,c
 16547  00336E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16548  003370  50F4               	movf	prodh,w,c
 16549  003372  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16550  003374  0E01               	movlw	1
 16551  003376  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16552  003378  6ED9               	movwf	fsr2l,c
 16553  00337A  0E00               	movlw	0
 16554  00337C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16555  00337E  6EDA               	movwf	fsr2h,c
 16556  003380  0102               	movlb	2	; () banked
 16557  003382  84DF               	bsf	indf2,2,c
 16558  003384                     l1153:
 16559                           
 16560                           ;lorawan_eu.c: 641: }
 16561                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16562  003384  0102               	movlb	2	; () banked
 16563  003386  51A7               	movf	(_loRa+167)& (0+255),w,b
 16564  003388  0D02               	mullw	2
 16565  00338A  0E00               	movlw	low _loRa
 16566  00338C  0100               	movlb	0	; () banked
 16567  00338E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16568  003390  0E02               	movlw	high _loRa
 16569  003392  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16570  003394  0EA8               	movlw	168
 16571  003396  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16572  003398  0E00               	movlw	0
 16573  00339A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16574  00339C  50F3               	movf	prodl,w,c
 16575  00339E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16576  0033A0  50F4               	movf	prodh,w,c
 16577  0033A2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16578  0033A4  0E01               	movlw	1
 16579  0033A6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16580  0033A8  6ED9               	movwf	fsr2l,c
 16581  0033AA  0E00               	movlw	0
 16582  0033AC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16583  0033AE  6EDA               	movwf	fsr2h,c
 16584  0033B0  0102               	movlb	2	; () banked
 16585  0033B2  A4DF               	btfss	indf2,2,c
 16586  0033B4  D0A6               	goto	l1157
 16587                           
 16588                           ; BSR set to: 2
 16589  0033B6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16590  0033B8  0D02               	mullw	2
 16591  0033BA  0E00               	movlw	low _loRa
 16592  0033BC  0100               	movlb	0	; () banked
 16593  0033BE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16594  0033C0  0E02               	movlw	high _loRa
 16595  0033C2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16596  0033C4  0EA8               	movlw	168
 16597  0033C6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16598  0033C8  0E00               	movlw	0
 16599  0033CA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16600  0033CC  50F3               	movf	prodl,w,c
 16601  0033CE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16602  0033D0  50F4               	movf	prodh,w,c
 16603  0033D2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16604  0033D4  0E01               	movlw	1
 16605  0033D6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16606  0033D8  6ED9               	movwf	fsr2l,c
 16607  0033DA  0E00               	movlw	0
 16608  0033DC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16609  0033DE  6EDA               	movwf	fsr2h,c
 16610  0033E0  0102               	movlb	2	; () banked
 16611  0033E2  A2DF               	btfss	indf2,1,c
 16612  0033E4  D08E               	goto	l1157
 16613                           
 16614                           ; BSR set to: 2
 16615  0033E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16616  0033E8  0D02               	mullw	2
 16617  0033EA  0E00               	movlw	low _loRa
 16618  0033EC  0100               	movlb	0	; () banked
 16619  0033EE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16620  0033F0  0E02               	movlw	high _loRa
 16621  0033F2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16622  0033F4  0EA8               	movlw	168
 16623  0033F6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16624  0033F8  0E00               	movlw	0
 16625  0033FA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16626  0033FC  50F3               	movf	prodl,w,c
 16627  0033FE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16628  003400  50F4               	movf	prodh,w,c
 16629  003402  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16630  003404  0E01               	movlw	1
 16631  003406  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16632  003408  6ED9               	movwf	fsr2l,c
 16633  00340A  0E00               	movlw	0
 16634  00340C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16635  00340E  6EDA               	movwf	fsr2h,c
 16636  003410  0102               	movlb	2	; () banked
 16637  003412  A0DF               	btfss	indf2,0,c
 16638  003414  D076               	goto	l1157
 16639                           
 16640                           ; BSR set to: 2
 16641                           ;lorawan_eu.c: 644: {
 16642                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16643  003416  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16644  00341A  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16645  00341E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16646  003422  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16647  003426  0100               	movlb	0	; () banked
 16648  003428  38DF               	swapf	223,w,c
 16649  00342A  0B07               	andlw	7
 16650  00342C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16651  00342E  ECC0  F044         	call	_EnableChannels	;wreg free
 16652                           
 16653                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16654  003432  0100               	movlb	0	; () banked
 16655  003434  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16656  003436  ECBD  F045         	call	_UpdateTxPower
 16657                           
 16658                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16659  00343A  0102               	movlb	2	; () banked
 16660  00343C  8903               	bsf	(_loRa+3)& (0+255),4,b
 16661                           
 16662                           ; BSR set to: 2
 16663                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16664  00343E  0100               	movlb	0	; () banked
 16665  003440  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16666  003442  ECC2  F045         	call	_UpdateCurrentDataRate
 16667                           
 16668                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16669  003446  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16670  00344A  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16671  00344E  0100               	movlb	0	; () banked
 16672  003450  50DF               	movf	223,w,c
 16673  003452  0B0F               	andlw	15
 16674  003454  0900               	iorlw	0
 16675  003456  A4D8               	btfss	status,2,c
 16676  003458  D002               	goto	l1155
 16677                           
 16678                           ; BSR set to: 0
 16679                           ;lorawan_eu.c: 652: {
 16680                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16681  00345A  0E00               	movlw	0
 16682  00345C  D009               	goto	L10
 16683  00345E                     l1155:
 16684                           
 16685                           ;lorawan_eu.c: 655: else
 16686                           ;lorawan_eu.c: 656: {
 16687                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16688                           
 16689                           ; BSR set to: 2
 16690  00345E  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16691  003462  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16692  003466  0100               	movlb	0	; () banked
 16693  003468  50DF               	movf	223,w,c
 16694  00346A  0B0F               	andlw	15
 16695  00346C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16696  00346E  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16697  003470                     L10:
 16698  003470  0102               	movlb	2	; () banked
 16699  003472  6FD6               	movwf	(_loRa+214)& (0+255),b
 16700                           
 16701                           ; BSR set to: 2
 16702                           ;lorawan_eu.c: 658: }
 16703                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16704                           
 16705                           ; BSR set to: 2
 16706  003474  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16707                           
 16708                           ; BSR set to: 2
 16709                           ;lorawan_eu.c: 660: }
 16710                           ;lorawan_eu.c: 661: }
 16711  003476  D045               	goto	l1157
 16712  003478                     l1150:
 16713                           
 16714                           ; BSR set to: 2
 16715                           ;lorawan_eu.c: 662: else
 16716                           ;lorawan_eu.c: 663: {
 16717                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16718                           
 16719                           ; BSR set to: 2
 16720  003478  51A7               	movf	(_loRa+167)& (0+255),w,b
 16721  00347A  0D02               	mullw	2
 16722  00347C  0E00               	movlw	low _loRa
 16723  00347E  0100               	movlb	0	; () banked
 16724  003480  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16725  003482  0E02               	movlw	high _loRa
 16726  003484  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16727  003486  0EA8               	movlw	168
 16728  003488  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16729  00348A  0E00               	movlw	0
 16730  00348C  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16731  00348E  50F3               	movf	prodl,w,c
 16732  003490  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16733  003492  50F4               	movf	prodh,w,c
 16734  003494  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16735  003496  0E01               	movlw	1
 16736  003498  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16737  00349A  6ED9               	movwf	fsr2l,c
 16738  00349C  0E00               	movlw	0
 16739  00349E  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16740  0034A0  6EDA               	movwf	fsr2h,c
 16741  0034A2  0102               	movlb	2	; () banked
 16742  0034A4  90DF               	bcf	indf2,0,c
 16743                           
 16744                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16745  0034A6  51A7               	movf	(_loRa+167)& (0+255),w,b
 16746  0034A8  0D02               	mullw	2
 16747  0034AA  0E00               	movlw	low _loRa
 16748  0034AC  0100               	movlb	0	; () banked
 16749  0034AE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16750  0034B0  0E02               	movlw	high _loRa
 16751  0034B2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16752  0034B4  0EA8               	movlw	168
 16753  0034B6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16754  0034B8  0E00               	movlw	0
 16755  0034BA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16756  0034BC  50F3               	movf	prodl,w,c
 16757  0034BE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16758  0034C0  50F4               	movf	prodh,w,c
 16759  0034C2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16760  0034C4  0E01               	movlw	1
 16761  0034C6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16762  0034C8  6ED9               	movwf	fsr2l,c
 16763  0034CA  0E00               	movlw	0
 16764  0034CC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16765  0034CE  6EDA               	movwf	fsr2h,c
 16766  0034D0  0102               	movlb	2	; () banked
 16767  0034D2  92DF               	bcf	indf2,1,c
 16768                           
 16769                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16770  0034D4  51A7               	movf	(_loRa+167)& (0+255),w,b
 16771  0034D6  0D02               	mullw	2
 16772  0034D8  0E00               	movlw	low _loRa
 16773  0034DA  0100               	movlb	0	; () banked
 16774  0034DC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 16775  0034DE  0E02               	movlw	high _loRa
 16776  0034E0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 16777  0034E2  0EA8               	movlw	168
 16778  0034E4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16779  0034E6  0E00               	movlw	0
 16780  0034E8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16781  0034EA  50F3               	movf	prodl,w,c
 16782  0034EC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 16783  0034EE  50F4               	movf	prodh,w,c
 16784  0034F0  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 16785  0034F2  0E01               	movlw	1
 16786  0034F4  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 16787  0034F6  6ED9               	movwf	fsr2l,c
 16788  0034F8  0E00               	movlw	0
 16789  0034FA  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 16790  0034FC  6EDA               	movwf	fsr2h,c
 16791  0034FE  0102               	movlb	2	; () banked
 16792  003500  94DF               	bcf	indf2,2,c
 16793  003502                     l1157:
 16794                           
 16795                           ; BSR set to: 2
 16796                           ;lorawan_eu.c: 667: }
 16797                           ;lorawan_eu.c: 669: return ptr;
 16798                           
 16799                           ; BSR set to: 2
 16800  003502  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16801  003506  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16802  00350A  0012               	return	
 16803  00350C                     __end_of_ExecuteLinkAdr:
 16804                           	opt stack 0
 16805                           tosu	equ	0xFFF
 16806                           tosh	equ	0xFFE
 16807                           tosl	equ	0xFFD
 16808                           pclath	equ	0xFFA
 16809                           tblptru	equ	0xFF8
 16810                           tblptrh	equ	0xFF7
 16811                           tblptrl	equ	0xFF6
 16812                           tablat	equ	0xFF5
 16813                           prodh	equ	0xFF4
 16814                           prodl	equ	0xFF3
 16815                           intcon	equ	0xFF2
 16816                           intcon2	equ	0xFF1
 16817                           intcon3	equ	0xFF0
 16818                           indf0	equ	0xFEF
 16819                           postinc0	equ	0xFEE
 16820                           fsr0h	equ	0xFEA
 16821                           fsr0l	equ	0xFE9
 16822                           wreg	equ	0xFE8
 16823                           postinc1	equ	0xFE6
 16824                           postdec1	equ	0xFE5
 16825                           plusw1	equ	0xFE3
 16826                           fsr1h	equ	0xFE2
 16827                           fsr1l	equ	0xFE1
 16828                           indf2	equ	0xFDF
 16829                           postinc2	equ	0xFDE
 16830                           postdec2	equ	0xFDD
 16831                           plusw2	equ	0xFDB
 16832                           fsr2h	equ	0xFDA
 16833                           fsr2l	equ	0xFD9
 16834                           status	equ	0xFD8
 16835                           
 16836 ;; *************** function _ValidateTxPower *****************
 16837 ;; Defined at:
 16838 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  txPowerNew      1    wreg     unsigned char 
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 16843 ;;  result          1    0[BANK0 ] enum E7249
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  1    wreg      enum E7249
 16846 ;; Registers used:
 16847 ;;		wreg, status,2, status,0
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/0
 16850 ;;		On exit  : 0/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16857 ;;Total ram usage:        2 bytes
 16858 ;; Hardware stack levels used:    1
 16859 ;; Hardware stack levels required when called:    7
 16860 ;; This function calls:
 16861 ;;		Nothing
 16862 ;; This function is called by:
 16863 ;;		_ExecuteLinkAdr
 16864 ;;		_LORAWAN_SetTxPower
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868                           	psect	text76
 16869  0085E6                     __ptext76:
 16870                           	opt stack 0
 16871  0085E6                     _ValidateTxPower:
 16872                           	opt stack 17
 16873                           
 16874                           ; BSR set to: 2
 16875                           ;incstack = 0
 16876                           ;ValidateTxPower@txPowerNew stored from wreg
 16877  0085E6  0100               	movlb	0	; () banked
 16878  0085E8  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16879                           
 16880                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16881  0085EA  0E00               	movlw	0
 16882  0085EC  0100               	movlb	0	; () banked
 16883  0085EE  6F60               	movwf	ValidateTxPower@result& (0+255),b
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16887  0085F0  0102               	movlb	2	; () banked
 16888  0085F2  51A4               	movf	(_loRa+164)& (0+255),w,b
 16889  0085F4  A4D8               	btfss	status,2,c
 16890  0085F6  D004               	goto	u15880
 16891                           
 16892                           ; BSR set to: 2
 16893  0085F8  0100               	movlb	0	; () banked
 16894  0085FA  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16895  0085FC  B4D8               	btfsc	status,2,c
 16896  0085FE  D004               	goto	u15890
 16897  008600                     u15880:
 16898                           
 16899                           ; BSR set to: 0
 16900  008600  0E05               	movlw	5
 16901  008602  0100               	movlb	0	; () banked
 16902  008604  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16903  008606  D002               	goto	l1137
 16904  008608                     u15890:
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;lorawan_eu.c: 587: {
 16908                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16909                           
 16910                           ; BSR set to: 0
 16911  008608  0E03               	movlw	3
 16912  00860A  6F60               	movwf	ValidateTxPower@result& (0+255),b
 16913  00860C                     l1137:
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;lorawan_eu.c: 589: }
 16917                           ;lorawan_eu.c: 591: return result;
 16918  00860C  5160               	movf	ValidateTxPower@result& (0+255),w,b
 16919  00860E  0012               	return	
 16920  008610                     __end_of_ValidateTxPower:
 16921                           	opt stack 0
 16922                           tosu	equ	0xFFF
 16923                           tosh	equ	0xFFE
 16924                           tosl	equ	0xFFD
 16925                           pclath	equ	0xFFA
 16926                           tblptru	equ	0xFF8
 16927                           tblptrh	equ	0xFF7
 16928                           tblptrl	equ	0xFF6
 16929                           tablat	equ	0xFF5
 16930                           prodh	equ	0xFF4
 16931                           prodl	equ	0xFF3
 16932                           intcon	equ	0xFF2
 16933                           intcon2	equ	0xFF1
 16934                           intcon3	equ	0xFF0
 16935                           indf0	equ	0xFEF
 16936                           postinc0	equ	0xFEE
 16937                           fsr0h	equ	0xFEA
 16938                           fsr0l	equ	0xFE9
 16939                           wreg	equ	0xFE8
 16940                           postinc1	equ	0xFE6
 16941                           postdec1	equ	0xFE5
 16942                           plusw1	equ	0xFE3
 16943                           fsr1h	equ	0xFE2
 16944                           fsr1l	equ	0xFE1
 16945                           indf2	equ	0xFDF
 16946                           postinc2	equ	0xFDE
 16947                           postdec2	equ	0xFDD
 16948                           plusw2	equ	0xFDB
 16949                           fsr2h	equ	0xFDA
 16950                           fsr2l	equ	0xFD9
 16951                           status	equ	0xFD8
 16952                           
 16953 ;; *************** function _ValidateDataRate *****************
 16954 ;; Defined at:
 16955 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16956 ;; Parameters:    Size  Location     Type
 16957 ;;  dataRate        1    wreg     unsigned char 
 16958 ;; Auto vars:     Size  Location     Type
 16959 ;;  dataRate        1    0[BANK0 ] unsigned char 
 16960 ;;  result          1    1[BANK0 ] enum E7249
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  1    wreg      enum E7249
 16963 ;; Registers used:
 16964 ;;		wreg, status,2, status,0
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;Total ram usage:        2 bytes
 16975 ;; Hardware stack levels used:    1
 16976 ;; Hardware stack levels required when called:    7
 16977 ;; This function calls:
 16978 ;;		Nothing
 16979 ;; This function is called by:
 16980 ;;		_ExecuteLinkAdr
 16981 ;;		_ExecuteRxParamSetupReq
 16982 ;;		_ValidateDataRange
 16983 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16984 ;;		_LORAWAN_SetCurrentDataRate
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988                           	psect	text77
 16989  008A1C                     __ptext77:
 16990                           	opt stack 0
 16991  008A1C                     _ValidateDataRate:
 16992                           	opt stack 17
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;incstack = 0
 16996                           ;ValidateDataRate@dataRate stored from wreg
 16997  008A1C  0100               	movlb	0	; () banked
 16998  008A1E  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 16999                           
 17000                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 17001  008A20  0E00               	movlw	0
 17002  008A22  0100               	movlb	0	; () banked
 17003  008A24  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 17007  008A26  0E07               	movlw	7
 17008  008A28  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17009  008A2A  D002               	goto	l1133
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;lorawan_eu.c: 575: {
 17013                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 17014  008A2C  0E03               	movlw	3
 17015  008A2E  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17016  008A30                     l1133:
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;lorawan_eu.c: 577: }
 17020                           ;lorawan_eu.c: 579: return result;
 17021  008A30  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17022  008A32  0012               	return	
 17023  008A34                     __end_of_ValidateDataRate:
 17024                           	opt stack 0
 17025                           tosu	equ	0xFFF
 17026                           tosh	equ	0xFFE
 17027                           tosl	equ	0xFFD
 17028                           pclath	equ	0xFFA
 17029                           tblptru	equ	0xFF8
 17030                           tblptrh	equ	0xFF7
 17031                           tblptrl	equ	0xFF6
 17032                           tablat	equ	0xFF5
 17033                           prodh	equ	0xFF4
 17034                           prodl	equ	0xFF3
 17035                           intcon	equ	0xFF2
 17036                           intcon2	equ	0xFF1
 17037                           intcon3	equ	0xFF0
 17038                           indf0	equ	0xFEF
 17039                           postinc0	equ	0xFEE
 17040                           fsr0h	equ	0xFEA
 17041                           fsr0l	equ	0xFE9
 17042                           wreg	equ	0xFE8
 17043                           postinc1	equ	0xFE6
 17044                           postdec1	equ	0xFE5
 17045                           plusw1	equ	0xFE3
 17046                           fsr1h	equ	0xFE2
 17047                           fsr1l	equ	0xFE1
 17048                           indf2	equ	0xFDF
 17049                           postinc2	equ	0xFDE
 17050                           postdec2	equ	0xFDD
 17051                           plusw2	equ	0xFDB
 17052                           fsr2h	equ	0xFDA
 17053                           fsr2l	equ	0xFD9
 17054                           status	equ	0xFD8
 17055                           
 17056 ;; *************** function _ValidateChannelMaskCntl *****************
 17057 ;; Defined at:
 17058 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;  channelMaskC    1    wreg     unsigned char 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17063 ;;  result          1    0[BANK0 ] enum E7249
 17064 ;; Return value:  Size  Location     Type
 17065 ;;                  1    wreg      enum E7249
 17066 ;; Registers used:
 17067 ;;		wreg, status,2, status,0
 17068 ;; Tracked objects:
 17069 ;;		On entry : 0/0
 17070 ;;		On exit  : 0/0
 17071 ;;		Unchanged: 0/0
 17072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17077 ;;Total ram usage:        2 bytes
 17078 ;; Hardware stack levels used:    1
 17079 ;; Hardware stack levels required when called:    7
 17080 ;; This function calls:
 17081 ;;		Nothing
 17082 ;; This function is called by:
 17083 ;;		_ExecuteLinkAdr
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text78
 17088  008826                     __ptext78:
 17089                           	opt stack 0
 17090  008826                     _ValidateChannelMaskCntl:
 17091                           	opt stack 17
 17092                           
 17093                           ; BSR set to: 0
 17094                           ;incstack = 0
 17095                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17096  008826  0100               	movlb	0	; () banked
 17097  008828  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17098                           
 17099                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 17100  00882A  0E00               	movlw	0
 17101  00882C  0100               	movlb	0	; () banked
 17102  00882E  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17106  008830  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17107  008832  B4D8               	btfsc	status,2,c
 17108  008834  D006               	goto	l1304
 17109                           
 17110                           ; BSR set to: 0
 17111  008836  0E06               	movlw	6
 17112  008838  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17113  00883A  B4D8               	btfsc	status,2,c
 17114  00883C  D002               	goto	l1304
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;lorawan_eu.c: 1142: {
 17118                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 17119  00883E  0E03               	movlw	3
 17120  008840  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17121  008842                     l1304:
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;lorawan_eu.c: 1144: }
 17125                           ;lorawan_eu.c: 1146: return result;
 17126  008842  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17127  008844  0012               	return	
 17128  008846                     __end_of_ValidateChannelMaskCntl:
 17129                           	opt stack 0
 17130                           tosu	equ	0xFFF
 17131                           tosh	equ	0xFFE
 17132                           tosl	equ	0xFFD
 17133                           pclath	equ	0xFFA
 17134                           tblptru	equ	0xFF8
 17135                           tblptrh	equ	0xFF7
 17136                           tblptrl	equ	0xFF6
 17137                           tablat	equ	0xFF5
 17138                           prodh	equ	0xFF4
 17139                           prodl	equ	0xFF3
 17140                           intcon	equ	0xFF2
 17141                           intcon2	equ	0xFF1
 17142                           intcon3	equ	0xFF0
 17143                           indf0	equ	0xFEF
 17144                           postinc0	equ	0xFEE
 17145                           fsr0h	equ	0xFEA
 17146                           fsr0l	equ	0xFE9
 17147                           wreg	equ	0xFE8
 17148                           postinc1	equ	0xFE6
 17149                           postdec1	equ	0xFE5
 17150                           plusw1	equ	0xFE3
 17151                           fsr1h	equ	0xFE2
 17152                           fsr1l	equ	0xFE1
 17153                           indf2	equ	0xFDF
 17154                           postinc2	equ	0xFDE
 17155                           postdec2	equ	0xFDD
 17156                           plusw2	equ	0xFDB
 17157                           fsr2h	equ	0xFDA
 17158                           fsr2l	equ	0xFD9
 17159                           status	equ	0xFD8
 17160                           
 17161 ;; *************** function _ValidateChannelMask *****************
 17162 ;; Defined at:
 17163 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17166 ;; Auto vars:     Size  Location     Type
 17167 ;;  i               1    4[BANK0 ] unsigned char 
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  1    wreg      enum E7249
 17170 ;; Registers used:
 17171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17180 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;Total ram usage:        5 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; Hardware stack levels required when called:    7
 17184 ;; This function calls:
 17185 ;;		Nothing
 17186 ;; This function is called by:
 17187 ;;		_ExecuteLinkAdr
 17188 ;; This function uses a non-reentrant model
 17189 ;;
 17190                           
 17191                           	psect	text79
 17192  007ACE                     __ptext79:
 17193                           	opt stack 0
 17194  007ACE                     _ValidateChannelMask:
 17195                           	opt stack 17
 17196                           
 17197                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 17198                           
 17199                           ; BSR set to: 0
 17200                           ;incstack = 0
 17201  007ACE  0E00               	movlw	0
 17202  007AD0  0100               	movlb	0	; () banked
 17203  007AD2  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17204                           
 17205                           ; BSR set to: 0
 17206                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 17207  007AD4  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17208  007AD6  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17209  007AD8  B4D8               	btfsc	status,2,c
 17210  007ADA  D026               	goto	l1317
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;lorawan_eu.c: 1171: {
 17214                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 17215  007ADC  0E00               	movlw	0
 17216  007ADE  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17217  007AE0                     l13747:
 17218                           
 17219                           ; BSR set to: 0
 17220  007AE0  0E0F               	movlw	15
 17221  007AE2  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17222  007AE4  D001               	goto	l1318
 17223  007AE6  D01E               	goto	u15960
 17224  007AE8                     l1318:
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;lorawan_eu.c: 1173: {
 17228                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 17229  007AE8  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17230  007AEA  D013               	goto	l1320
 17231                           
 17232                           ; BSR set to: 0
 17233  007AEC  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 17234  007AEE  0D0E               	mullw	14
 17235  007AF0  0E0D               	movlw	13
 17236  007AF2  26F3               	addwf	prodl,f,c
 17237  007AF4  0E00               	movlw	0
 17238  007AF6  22F4               	addwfc	prodh,f,c
 17239  007AF8  0E00               	movlw	low _Channels
 17240  007AFA  24F3               	addwf	prodl,w,c
 17241  007AFC  6ED9               	movwf	fsr2l,c
 17242  007AFE  0E04               	movlw	high _Channels
 17243  007B00  20F4               	addwfc	prodh,w,c
 17244  007B02  6EDA               	movwf	fsr2h,c
 17245  007B04  50DF               	movf	indf2,w,c
 17246  007B06  0B07               	andlw	7
 17247  007B08  0A07               	xorlw	7
 17248  007B0A  B4D8               	btfsc	status,2,c
 17249  007B0C  D002               	goto	l1320
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;lorawan_eu.c: 1175: {
 17253                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 17254  007B0E  0E03               	movlw	3
 17255                           
 17256                           ; BSR set to: 0
 17257  007B10  0012               	return	
 17258  007B12                     l1320:
 17259                           
 17260                           ; BSR set to: 0
 17261                           ;lorawan_eu.c: 1178: else
 17262                           ;lorawan_eu.c: 1179: {
 17263                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 17264                           
 17265                           ; BSR set to: 0
 17266  007B12  90D8               	bcf	status,0,c
 17267  007B14  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17268  007B16  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 17269  007B18  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17270  007B1A  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 17271  007B1C  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17272                           
 17273                           ; BSR set to: 0
 17274                           
 17275                           ; BSR set to: 0
 17276  007B20  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 17277  007B22  D7DE               	goto	l13747
 17278  007B24                     u15960:
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;lorawan_eu.c: 1181: }
 17282                           ;lorawan_eu.c: 1182: }
 17283                           ;lorawan_eu.c: 1184: return OK;
 17284                           
 17285                           ; BSR set to: 0
 17286  007B24  0E00               	movlw	0
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;lorawan_eu.c: 1185: }
 17290                           
 17291                           ; BSR set to: 0
 17292  007B26  0012               	return	
 17293  007B28                     l1317:
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;lorawan_eu.c: 1186: else
 17297                           ;lorawan_eu.c: 1187: {
 17298                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 17299                           
 17300                           ; BSR set to: 0
 17301  007B28  0E03               	movlw	3
 17302                           
 17303                           ; BSR set to: 0
 17304  007B2A  0012               	return	
 17305  007B2C                     __end_of_ValidateChannelMask:
 17306                           	opt stack 0
 17307                           tosu	equ	0xFFF
 17308                           tosh	equ	0xFFE
 17309                           tosl	equ	0xFFD
 17310                           pclath	equ	0xFFA
 17311                           tblptru	equ	0xFF8
 17312                           tblptrh	equ	0xFF7
 17313                           tblptrl	equ	0xFF6
 17314                           tablat	equ	0xFF5
 17315                           prodh	equ	0xFF4
 17316                           prodl	equ	0xFF3
 17317                           intcon	equ	0xFF2
 17318                           intcon2	equ	0xFF1
 17319                           intcon3	equ	0xFF0
 17320                           indf0	equ	0xFEF
 17321                           postinc0	equ	0xFEE
 17322                           fsr0h	equ	0xFEA
 17323                           fsr0l	equ	0xFE9
 17324                           wreg	equ	0xFE8
 17325                           postinc1	equ	0xFE6
 17326                           postdec1	equ	0xFE5
 17327                           plusw1	equ	0xFE3
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           plusw2	equ	0xFDB
 17334                           fsr2h	equ	0xFDA
 17335                           fsr2l	equ	0xFD9
 17336                           status	equ	0xFD8
 17337                           
 17338 ;; *************** function _UpdateTxPower *****************
 17339 ;; Defined at:
 17340 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17341 ;; Parameters:    Size  Location     Type
 17342 ;;  txPowerNew      1    wreg     unsigned char 
 17343 ;; Auto vars:     Size  Location     Type
 17344 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17345 ;; Return value:  Size  Location     Type
 17346 ;;                  1    wreg      void 
 17347 ;; Registers used:
 17348 ;;		wreg
 17349 ;; Tracked objects:
 17350 ;;		On entry : 0/0
 17351 ;;		On exit  : 0/0
 17352 ;;		Unchanged: 0/0
 17353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17358 ;;Total ram usage:        1 bytes
 17359 ;; Hardware stack levels used:    1
 17360 ;; Hardware stack levels required when called:    7
 17361 ;; This function calls:
 17362 ;;		Nothing
 17363 ;; This function is called by:
 17364 ;;		_ExecuteLinkAdr
 17365 ;;		_LORAWAN_SetTxPower
 17366 ;; This function uses a non-reentrant model
 17367 ;;
 17368                           
 17369                           	psect	text80
 17370  008B7A                     __ptext80:
 17371                           	opt stack 0
 17372  008B7A                     _UpdateTxPower:
 17373                           	opt stack 17
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;incstack = 0
 17377                           ;UpdateTxPower@txPowerNew stored from wreg
 17378  008B7A  0100               	movlb	0	; () banked
 17379  008B7C  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17380                           
 17381                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17382  008B7E  C060  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17383  008B82  0012               	return		;funcret
 17384  008B84                     __end_of_UpdateTxPower:
 17385                           	opt stack 0
 17386                           tosu	equ	0xFFF
 17387                           tosh	equ	0xFFE
 17388                           tosl	equ	0xFFD
 17389                           pclath	equ	0xFFA
 17390                           tblptru	equ	0xFF8
 17391                           tblptrh	equ	0xFF7
 17392                           tblptrl	equ	0xFF6
 17393                           tablat	equ	0xFF5
 17394                           prodh	equ	0xFF4
 17395                           prodl	equ	0xFF3
 17396                           intcon	equ	0xFF2
 17397                           intcon2	equ	0xFF1
 17398                           intcon3	equ	0xFF0
 17399                           indf0	equ	0xFEF
 17400                           postinc0	equ	0xFEE
 17401                           fsr0h	equ	0xFEA
 17402                           fsr0l	equ	0xFE9
 17403                           wreg	equ	0xFE8
 17404                           postinc1	equ	0xFE6
 17405                           postdec1	equ	0xFE5
 17406                           plusw1	equ	0xFE3
 17407                           fsr1h	equ	0xFE2
 17408                           fsr1l	equ	0xFE1
 17409                           indf2	equ	0xFDF
 17410                           postinc2	equ	0xFDE
 17411                           postdec2	equ	0xFDD
 17412                           plusw2	equ	0xFDB
 17413                           fsr2h	equ	0xFDA
 17414                           fsr2l	equ	0xFD9
 17415                           status	equ	0xFD8
 17416                           
 17417 ;; *************** function _UpdateCurrentDataRate *****************
 17418 ;; Defined at:
 17419 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;  valueNew        1    wreg     unsigned char 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  1    wreg      void 
 17426 ;; Registers used:
 17427 ;;		wreg
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;Total ram usage:        1 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:    7
 17440 ;; This function calls:
 17441 ;;		Nothing
 17442 ;; This function is called by:
 17443 ;;		_ExecuteLinkAdr
 17444 ;;		_LORAWAN_SetCurrentDataRate
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           	psect	text81
 17449  008B84                     __ptext81:
 17450                           	opt stack 0
 17451  008B84                     _UpdateCurrentDataRate:
 17452                           	opt stack 17
 17453                           
 17454                           ;incstack = 0
 17455                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17456  008B84  0100               	movlb	0	; () banked
 17457  008B86  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17458                           
 17459                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17460  008B88  C060  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17461  008B8C  0012               	return		;funcret
 17462  008B8E                     __end_of_UpdateCurrentDataRate:
 17463                           	opt stack 0
 17464                           tosu	equ	0xFFF
 17465                           tosh	equ	0xFFE
 17466                           tosl	equ	0xFFD
 17467                           pclath	equ	0xFFA
 17468                           tblptru	equ	0xFF8
 17469                           tblptrh	equ	0xFF7
 17470                           tblptrl	equ	0xFF6
 17471                           tablat	equ	0xFF5
 17472                           prodh	equ	0xFF4
 17473                           prodl	equ	0xFF3
 17474                           intcon	equ	0xFF2
 17475                           intcon2	equ	0xFF1
 17476                           intcon3	equ	0xFF0
 17477                           indf0	equ	0xFEF
 17478                           postinc0	equ	0xFEE
 17479                           fsr0h	equ	0xFEA
 17480                           fsr0l	equ	0xFE9
 17481                           wreg	equ	0xFE8
 17482                           postinc1	equ	0xFE6
 17483                           postdec1	equ	0xFE5
 17484                           plusw1	equ	0xFE3
 17485                           fsr1h	equ	0xFE2
 17486                           fsr1l	equ	0xFE1
 17487                           indf2	equ	0xFDF
 17488                           postinc2	equ	0xFDE
 17489                           postdec2	equ	0xFDD
 17490                           plusw2	equ	0xFDB
 17491                           fsr2h	equ	0xFDA
 17492                           fsr2l	equ	0xFD9
 17493                           status	equ	0xFD8
 17494                           
 17495 ;; *************** function _EnableChannels *****************
 17496 ;; Defined at:
 17497 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17500 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17501 ;; Auto vars:     Size  Location     Type
 17502 ;;		None
 17503 ;; Return value:  Size  Location     Type
 17504 ;;                  1    wreg      void 
 17505 ;; Registers used:
 17506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17507 ;; Tracked objects:
 17508 ;;		On entry : 0/0
 17509 ;;		On exit  : 0/0
 17510 ;;		Unchanged: 0/0
 17511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17512 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17515 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17516 ;;Total ram usage:        3 bytes
 17517 ;; Hardware stack levels used:    1
 17518 ;; Hardware stack levels required when called:    9
 17519 ;; This function calls:
 17520 ;;		_EnableChannels1
 17521 ;; This function is called by:
 17522 ;;		_ExecuteLinkAdr
 17523 ;; This function uses a non-reentrant model
 17524 ;;
 17525                           
 17526                           	psect	text82
 17527  008980                     __ptext82:
 17528                           	opt stack 0
 17529  008980                     _EnableChannels:
 17530                           	opt stack 15
 17531                           
 17532                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17533                           
 17534                           ;incstack = 0
 17535  008980  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17536  008984  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17537  008988  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17538  00898C  0E00               	movlw	0
 17539  00898E  0100               	movlb	0	; () banked
 17540  008990  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 17541  008992  0E10               	movlw	16
 17542  008994  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17543  008996  EC05  F03B         	call	_EnableChannels1	;wreg free
 17544  00899A  0012               	return		;funcret
 17545  00899C                     __end_of_EnableChannels:
 17546                           	opt stack 0
 17547                           tosu	equ	0xFFF
 17548                           tosh	equ	0xFFE
 17549                           tosl	equ	0xFFD
 17550                           pclath	equ	0xFFA
 17551                           tblptru	equ	0xFF8
 17552                           tblptrh	equ	0xFF7
 17553                           tblptrl	equ	0xFF6
 17554                           tablat	equ	0xFF5
 17555                           prodh	equ	0xFF4
 17556                           prodl	equ	0xFF3
 17557                           intcon	equ	0xFF2
 17558                           intcon2	equ	0xFF1
 17559                           intcon3	equ	0xFF0
 17560                           indf0	equ	0xFEF
 17561                           postinc0	equ	0xFEE
 17562                           fsr0h	equ	0xFEA
 17563                           fsr0l	equ	0xFE9
 17564                           wreg	equ	0xFE8
 17565                           postinc1	equ	0xFE6
 17566                           postdec1	equ	0xFE5
 17567                           plusw1	equ	0xFE3
 17568                           fsr1h	equ	0xFE2
 17569                           fsr1l	equ	0xFE1
 17570                           indf2	equ	0xFDF
 17571                           postinc2	equ	0xFDE
 17572                           postdec2	equ	0xFDD
 17573                           plusw2	equ	0xFDB
 17574                           fsr2h	equ	0xFDA
 17575                           fsr2l	equ	0xFD9
 17576                           status	equ	0xFD8
 17577                           
 17578 ;; *************** function _EnableChannels1 *****************
 17579 ;; Defined at:
 17580 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17583 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 17584 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 17585 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  i               1   11[BANK0 ] unsigned char 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      void 
 17590 ;; Registers used:
 17591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17597 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17600 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17601 ;;Total ram usage:        8 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:    8
 17604 ;; This function calls:
 17605 ;;		_UpdateChannelIdStatus
 17606 ;; This function is called by:
 17607 ;;		_EnableChannels
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text83
 17612  00760A                     __ptext83:
 17613                           	opt stack 0
 17614  00760A                     _EnableChannels1:
 17615                           	opt stack 15
 17616                           
 17617                           ;lorawan_eu.c: 1195: uint8_t i;
 17618                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 17619                           
 17620                           ;incstack = 0
 17621  00760A  0E06               	movlw	6
 17622  00760C  0100               	movlb	0	; () banked
 17623  00760E  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17624  007610  A4D8               	btfss	status,2,c
 17625  007612  D00F               	goto	l1326
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;lorawan_eu.c: 1198: {
 17629                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17630  007614  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17631  007618  D007               	goto	l1327
 17632  00761A                     
 17633                           ; BSR set to: 0
 17634                           ;lorawan_eu.c: 1200: {
 17635                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 17636                           
 17637                           ; BSR set to: 0
 17638  00761A  0E01               	movlw	1
 17639  00761C  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17640  00761E  516B               	movf	EnableChannels1@i& (0+255),w,b
 17641  007620  ECBE  F027         	call	_UpdateChannelIdStatus
 17642  007624  0100               	movlb	0	; () banked
 17643  007626  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 17644  007628                     l1327:
 17645                           
 17646                           ; BSR set to: 0
 17647                           
 17648                           ; BSR set to: 0
 17649  007628  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17650  00762A  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 17651  00762C  B0D8               	btfsc	status,0,c
 17652  00762E  0012               	return	
 17653  007630  D7F4               	goto	l1328
 17654  007632                     l1326:
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 17658                           
 17659                           ; BSR set to: 0
 17660  007632  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17661  007634  A4D8               	btfss	status,2,c
 17662  007636  0012               	return	
 17663                           
 17664                           ; BSR set to: 0
 17665                           ;lorawan_eu.c: 1205: {
 17666                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 17667  007638  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17668  00763C  D017               	goto	l1332
 17669  00763E                     l1333:
 17670                           
 17671                           ; BSR set to: 0
 17672                           ;lorawan_eu.c: 1207: {
 17673                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 17674  00763E  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 17675  007640  D006               	goto	l1334
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;lorawan_eu.c: 1209: {
 17679                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 17680  007642  0E01               	movlw	1
 17681  007644  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17682  007646  516B               	movf	EnableChannels1@i& (0+255),w,b
 17683  007648  ECBE  F027         	call	_UpdateChannelIdStatus
 17684                           
 17685                           ;lorawan_eu.c: 1211: }
 17686  00764C  D006               	goto	l1335
 17687  00764E                     l1334:
 17688                           
 17689                           ;lorawan_eu.c: 1212: else
 17690                           ;lorawan_eu.c: 1213: {
 17691                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 17692  00764E  0E00               	movlw	0
 17693  007650  0100               	movlb	0	; () banked
 17694  007652  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17695  007654  516B               	movf	EnableChannels1@i& (0+255),w,b
 17696  007656  ECBE  F027         	call	_UpdateChannelIdStatus
 17697  00765A                     l1335:
 17698                           
 17699                           ;lorawan_eu.c: 1215: }
 17700                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 17701  00765A  90D8               	bcf	status,0,c
 17702  00765C  0100               	movlb	0	; () banked
 17703  00765E  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 17704  007660  6F69               	movwf	??_EnableChannels1& (0+255),b
 17705  007662  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 17706  007664  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 17707  007666  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 17708                           
 17709                           ; BSR set to: 0
 17710  00766A  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 17711  00766C                     l1332:
 17712                           
 17713                           ; BSR set to: 0
 17714                           
 17715                           ; BSR set to: 0
 17716  00766C  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17717  00766E  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 17718  007670  B0D8               	btfsc	status,0,c
 17719  007672  0012               	return	
 17720  007674  D7E4               	goto	l1333
 17721  007676                     __end_of_EnableChannels1:
 17722                           	opt stack 0
 17723                           tosu	equ	0xFFF
 17724                           tosh	equ	0xFFE
 17725                           tosl	equ	0xFFD
 17726                           pclath	equ	0xFFA
 17727                           tblptru	equ	0xFF8
 17728                           tblptrh	equ	0xFF7
 17729                           tblptrl	equ	0xFF6
 17730                           tablat	equ	0xFF5
 17731                           prodh	equ	0xFF4
 17732                           prodl	equ	0xFF3
 17733                           intcon	equ	0xFF2
 17734                           intcon2	equ	0xFF1
 17735                           intcon3	equ	0xFF0
 17736                           indf0	equ	0xFEF
 17737                           postinc0	equ	0xFEE
 17738                           fsr0h	equ	0xFEA
 17739                           fsr0l	equ	0xFE9
 17740                           wreg	equ	0xFE8
 17741                           postinc1	equ	0xFE6
 17742                           postdec1	equ	0xFE5
 17743                           plusw1	equ	0xFE3
 17744                           fsr1h	equ	0xFE2
 17745                           fsr1l	equ	0xFE1
 17746                           indf2	equ	0xFDF
 17747                           postinc2	equ	0xFDE
 17748                           postdec2	equ	0xFDD
 17749                           plusw2	equ	0xFDB
 17750                           fsr2h	equ	0xFDA
 17751                           fsr2l	equ	0xFD9
 17752                           status	equ	0xFD8
 17753                           
 17754 ;; *************** function _UpdateChannelIdStatus *****************
 17755 ;; Defined at:
 17756 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  channelId       1    wreg     unsigned char 
 17759 ;;  statusNew       1    0[BANK0 ] unsigned char 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  channelId       1    2[BANK0 ] unsigned char 
 17762 ;;  i               1    3[BANK0 ] unsigned char 
 17763 ;; Return value:  Size  Location     Type
 17764 ;;                  1    wreg      void 
 17765 ;; Registers used:
 17766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17767 ;; Tracked objects:
 17768 ;;		On entry : 0/0
 17769 ;;		On exit  : 0/0
 17770 ;;		Unchanged: 0/0
 17771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17772 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17776 ;;Total ram usage:        4 bytes
 17777 ;; Hardware stack levels used:    1
 17778 ;; Hardware stack levels required when called:    7
 17779 ;; This function calls:
 17780 ;;		Nothing
 17781 ;; This function is called by:
 17782 ;;		_LORAWAN_SetChannelIdStatus
 17783 ;;		_ExecuteNewChannel
 17784 ;;		_EnableChannels1
 17785 ;; This function uses a non-reentrant model
 17786 ;;
 17787                           
 17788                           	psect	text84
 17789  004F7C                     __ptext84:
 17790                           	opt stack 0
 17791  004F7C                     _UpdateChannelIdStatus:
 17792                           	opt stack 17
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;incstack = 0
 17796                           ;UpdateChannelIdStatus@channelId stored from wreg
 17797  004F7C  0100               	movlb	0	; () banked
 17798  004F7E  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17799                           
 17800                           ;lorawan_eu.c: 1044: uint8_t i;
 17801                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17802  004F80  0100               	movlb	0	; () banked
 17803  004F82  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17804  004F84  0D0E               	mullw	14
 17805  004F86  0E04               	movlw	4
 17806  004F88  26F3               	addwf	prodl,f,c
 17807  004F8A  0E00               	movlw	0
 17808  004F8C  22F4               	addwfc	prodh,f,c
 17809  004F8E  0E00               	movlw	low _Channels
 17810  004F90  24F3               	addwf	prodl,w,c
 17811  004F92  6ED9               	movwf	fsr2l,c
 17812  004F94  0E04               	movlw	high _Channels
 17813  004F96  20F4               	addwfc	prodh,w,c
 17814  004F98  6EDA               	movwf	fsr2h,c
 17815  004F9A  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17816                           
 17817                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17818  004F9E  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17819  004FA0  0D0E               	mullw	14
 17820  004FA2  0E04               	movlw	4
 17821  004FA4  26F3               	addwf	prodl,f,c
 17822  004FA6  0E00               	movlw	0
 17823  004FA8  22F4               	addwfc	prodh,f,c
 17824  004FAA  0E00               	movlw	low _Channels
 17825  004FAC  24F3               	addwf	prodl,w,c
 17826  004FAE  6ED9               	movwf	fsr2l,c
 17827  004FB0  0E04               	movlw	high _Channels
 17828  004FB2  20F4               	addwfc	prodh,w,c
 17829  004FB4  6EDA               	movwf	fsr2h,c
 17830  004FB6  50DF               	movf	indf2,w,c
 17831  004FB8  A4D8               	btfss	status,2,c
 17832  004FBA  D010               	goto	l1266
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;lorawan_eu.c: 1048: {
 17836                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17837  004FBC  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17838  004FBE  0D0E               	mullw	14
 17839  004FC0  0E08               	movlw	8
 17840  004FC2  26F3               	addwf	prodl,f,c
 17841  004FC4  0E00               	movlw	0
 17842  004FC6  22F4               	addwfc	prodh,f,c
 17843  004FC8  0E00               	movlw	low _Channels
 17844  004FCA  24F3               	addwf	prodl,w,c
 17845  004FCC  6ED9               	movwf	fsr2l,c
 17846  004FCE  0E04               	movlw	high _Channels
 17847  004FD0  20F4               	addwfc	prodh,w,c
 17848  004FD2  6EDA               	movwf	fsr2h,c
 17849  004FD4  6ADE               	clrf	postinc2,c
 17850  004FD6  6ADE               	clrf	postinc2,c
 17851  004FD8  6ADE               	clrf	postinc2,c
 17852  004FDA  6ADD               	clrf	postdec2,c
 17853  004FDC                     l1266:
 17854                           
 17855                           ; BSR set to: 0
 17856                           ;lorawan_eu.c: 1051: }
 17857                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17858                           
 17859                           ; BSR set to: 0
 17860  004FDC  0E00               	movlw	0
 17861  004FDE  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 17862  004FE0  D06D               	goto	l1267
 17863  004FE2                     
 17864                           ; BSR set to: 0
 17865                           ;lorawan_eu.c: 1054: {
 17866                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17867                           
 17868                           ; BSR set to: 0
 17869  004FE2  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17870  004FE4  0D0E               	mullw	14
 17871  004FE6  0E05               	movlw	5
 17872  004FE8  26F3               	addwf	prodl,f,c
 17873  004FEA  0E00               	movlw	0
 17874  004FEC  22F4               	addwfc	prodh,f,c
 17875  004FEE  0E00               	movlw	low _Channels
 17876  004FF0  24F3               	addwf	prodl,w,c
 17877  004FF2  6ED9               	movwf	fsr2l,c
 17878  004FF4  0E04               	movlw	high _Channels
 17879  004FF6  20F4               	addwfc	prodh,w,c
 17880  004FF8  6EDA               	movwf	fsr2h,c
 17881  004FFA  0104               	movlb	4	; () banked
 17882  004FFC  50DF               	movf	223,w,c
 17883  004FFE  0B0F               	andlw	15
 17884  005000  0100               	movlb	0	; () banked
 17885  005002  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17886  005004  0102               	movlb	2	; () banked
 17887  005006  51EB               	movf	(_loRa+235)& (0+255),w,b
 17888  005008  0100               	movlb	0	; () banked
 17889  00500A  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17890  00500C  B0D8               	btfsc	status,0,c
 17891  00500E  D020               	goto	l1269
 17892                           
 17893                           ; BSR set to: 0
 17894  005010  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17895  005012  0D0E               	mullw	14
 17896  005014  0E04               	movlw	4
 17897  005016  26F3               	addwf	prodl,f,c
 17898  005018  0E00               	movlw	0
 17899  00501A  22F4               	addwfc	prodh,f,c
 17900  00501C  0E00               	movlw	low _Channels
 17901  00501E  24F3               	addwf	prodl,w,c
 17902  005020  6ED9               	movwf	fsr2l,c
 17903  005022  0E04               	movlw	high _Channels
 17904  005024  20F4               	addwfc	prodh,w,c
 17905  005026  6EDA               	movwf	fsr2h,c
 17906  005028  04DE               	decf	postinc2,w,c
 17907  00502A  A4D8               	btfss	status,2,c
 17908  00502C  D011               	goto	l1269
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;lorawan_eu.c: 1056: {
 17912                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17913  00502E  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17914  005030  0D0E               	mullw	14
 17915  005032  0E05               	movlw	5
 17916  005034  26F3               	addwf	prodl,f,c
 17917  005036  0E00               	movlw	0
 17918  005038  22F4               	addwfc	prodh,f,c
 17919  00503A  0E00               	movlw	low _Channels
 17920  00503C  24F3               	addwf	prodl,w,c
 17921  00503E  6ED9               	movwf	fsr2l,c
 17922  005040  0E04               	movlw	high _Channels
 17923  005042  20F4               	addwfc	prodh,w,c
 17924  005044  6EDA               	movwf	fsr2h,c
 17925  005046  0104               	movlb	4	; () banked
 17926  005048  50DF               	movf	223,w,c
 17927  00504A  0B0F               	andlw	15
 17928  00504C  0102               	movlb	2	; () banked
 17929  00504E  6FEB               	movwf	(_loRa+235)& (0+255),b
 17930  005050                     l1269:
 17931                           
 17932                           ;lorawan_eu.c: 1058: }
 17933                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17934  005050  0100               	movlb	0	; () banked
 17935  005052  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17936  005054  0D0E               	mullw	14
 17937  005056  0E05               	movlw	5
 17938  005058  26F3               	addwf	prodl,f,c
 17939  00505A  0E00               	movlw	0
 17940  00505C  22F4               	addwfc	prodh,f,c
 17941  00505E  0E00               	movlw	low _Channels
 17942  005060  24F3               	addwf	prodl,w,c
 17943  005062  6ED9               	movwf	fsr2l,c
 17944  005064  0E04               	movlw	high _Channels
 17945  005066  20F4               	addwfc	prodh,w,c
 17946  005068  6EDA               	movwf	fsr2h,c
 17947  00506A  0104               	movlb	4	; () banked
 17948  00506C  38DF               	swapf	223,w,c
 17949  00506E  0B0F               	andlw	15
 17950  005070  0102               	movlb	2	; () banked
 17951  005072  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17952  005074  D021               	goto	l1270
 17953                           
 17954                           ; BSR set to: 2
 17955  005076  0100               	movlb	0	; () banked
 17956  005078  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17957  00507A  0D0E               	mullw	14
 17958  00507C  0E04               	movlw	4
 17959  00507E  26F3               	addwf	prodl,f,c
 17960  005080  0E00               	movlw	0
 17961  005082  22F4               	addwfc	prodh,f,c
 17962  005084  0E00               	movlw	low _Channels
 17963  005086  24F3               	addwf	prodl,w,c
 17964  005088  6ED9               	movwf	fsr2l,c
 17965  00508A  0E04               	movlw	high _Channels
 17966  00508C  20F4               	addwfc	prodh,w,c
 17967  00508E  6EDA               	movwf	fsr2h,c
 17968  005090  04DE               	decf	postinc2,w,c
 17969  005092  A4D8               	btfss	status,2,c
 17970  005094  D011               	goto	l1270
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;lorawan_eu.c: 1060: {
 17974                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17975  005096  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17976  005098  0D0E               	mullw	14
 17977  00509A  0E05               	movlw	5
 17978  00509C  26F3               	addwf	prodl,f,c
 17979  00509E  0E00               	movlw	0
 17980  0050A0  22F4               	addwfc	prodh,f,c
 17981  0050A2  0E00               	movlw	low _Channels
 17982  0050A4  24F3               	addwf	prodl,w,c
 17983  0050A6  6ED9               	movwf	fsr2l,c
 17984  0050A8  0E04               	movlw	high _Channels
 17985  0050AA  20F4               	addwfc	prodh,w,c
 17986  0050AC  6EDA               	movwf	fsr2h,c
 17987  0050AE  0104               	movlb	4	; () banked
 17988  0050B0  38DF               	swapf	223,w,c
 17989  0050B2  0B0F               	andlw	15
 17990  0050B4  0102               	movlb	2	; () banked
 17991  0050B6  6FEC               	movwf	(_loRa+236)& (0+255),b
 17992  0050B8                     l1270:
 17993                           
 17994                           ; BSR set to: 2
 17995  0050B8  0100               	movlb	0	; () banked
 17996  0050BA  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17997  0050BC                     l1267:
 17998                           
 17999                           ; BSR set to: 0
 18000                           
 18001                           ; BSR set to: 0
 18002  0050BC  0102               	movlb	2	; () banked
 18003  0050BE  51ED               	movf	(_loRa+237)& (0+255),w,b
 18004  0050C0  0100               	movlb	0	; () banked
 18005  0050C2  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18006  0050C4  A0D8               	btfss	status,0,c
 18007  0050C6  D78D               	goto	l1268
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;lorawan_eu.c: 1062: }
 18011                           ;lorawan_eu.c: 1063: }
 18012                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 18013                           
 18014                           ; BSR set to: 0
 18015  0050C8  0102               	movlb	2	; () banked
 18016  0050CA  51DF               	movf	(_loRa+223)& (0+255),w,b
 18017  0050CC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18018  0050CE  A0D8               	btfss	status,0,c
 18019                           
 18020                           ; BSR set to: 2
 18021                           ;lorawan_eu.c: 1066: {
 18022                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 18023  0050D0  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 18024                           
 18025                           ; BSR set to: 2
 18026                           ;lorawan_eu.c: 1068: }
 18027                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 18028                           
 18029                           ; BSR set to: 2
 18030  0050D4  51EB               	movf	(_loRa+235)& (0+255),w,b
 18031  0050D6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 18032  0050D8  B0D8               	btfsc	status,0,c
 18033  0050DA  0012               	return	
 18034                           
 18035                           ; BSR set to: 2
 18036                           ;lorawan_eu.c: 1071: {
 18037                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 18038  0050DC  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 18039  0050E0  0012               	return	
 18040  0050E2                     __end_of_UpdateChannelIdStatus:
 18041                           	opt stack 0
 18042                           tosu	equ	0xFFF
 18043                           tosh	equ	0xFFE
 18044                           tosl	equ	0xFFD
 18045                           pclath	equ	0xFFA
 18046                           tblptru	equ	0xFF8
 18047                           tblptrh	equ	0xFF7
 18048                           tblptrl	equ	0xFF6
 18049                           tablat	equ	0xFF5
 18050                           prodh	equ	0xFF4
 18051                           prodl	equ	0xFF3
 18052                           intcon	equ	0xFF2
 18053                           intcon2	equ	0xFF1
 18054                           intcon3	equ	0xFF0
 18055                           indf0	equ	0xFEF
 18056                           postinc0	equ	0xFEE
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           postinc1	equ	0xFE6
 18061                           postdec1	equ	0xFE5
 18062                           plusw1	equ	0xFE3
 18063                           fsr1h	equ	0xFE2
 18064                           fsr1l	equ	0xFE1
 18065                           indf2	equ	0xFDF
 18066                           postinc2	equ	0xFDE
 18067                           postdec2	equ	0xFDD
 18068                           plusw2	equ	0xFDB
 18069                           fsr2h	equ	0xFDA
 18070                           fsr2l	equ	0xFD9
 18071                           status	equ	0xFD8
 18072                           
 18073 ;; *************** function _ExecuteDutyCycle *****************
 18074 ;; Defined at:
 18075 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18076 ;; Parameters:    Size  Location     Type
 18077 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18078 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18079 ;; Auto vars:     Size  Location     Type
 18080 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18081 ;; Return value:  Size  Location     Type
 18082 ;;                  2    0[BANK0 ] PTR unsigned char 
 18083 ;; Registers used:
 18084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18085 ;; Tracked objects:
 18086 ;;		On entry : 0/0
 18087 ;;		On exit  : 0/0
 18088 ;;		Unchanged: 0/0
 18089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18092 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18093 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18094 ;;Total ram usage:        6 bytes
 18095 ;; Hardware stack levels used:    1
 18096 ;; Hardware stack levels required when called:    7
 18097 ;; This function calls:
 18098 ;;		Nothing
 18099 ;; This function is called by:
 18100 ;;		_MacExecuteCommands
 18101 ;; This function uses a non-reentrant model
 18102 ;;
 18103                           
 18104                           	psect	text85
 18105  007DF2                     __ptext85:
 18106                           	opt stack 0
 18107  007DF2                     _ExecuteDutyCycle:
 18108                           	opt stack 18
 18109                           
 18110                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 18111                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 18112                           
 18113                           ; BSR set to: 2
 18114                           ;incstack = 0
 18115  007DF2  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18116  007DF6  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18117  007DFA  50DF               	movf	indf2,w,c
 18118  007DFC  0100               	movlb	0	; () banked
 18119  007DFE  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18120                           
 18121                           ; BSR set to: 0
 18122  007E00  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18123  007E02  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 18127  007E04  0E0F               	movlw	15
 18128  007E06  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18129  007E08  D013               	goto	l1145
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;lorawan_eu.c: 600: {
 18133                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 18134  007E0A  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18135  007E0E  0E01               	movlw	1
 18136  007E10  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18137  007E12  0E00               	movlw	0
 18138  007E14  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18139  007E16  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18140  007E18  D003               	goto	u16614
 18141  007E1A                     u16615:
 18142  007E1A  90D8               	bcf	status,0,c
 18143  007E1C  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18144  007E1E  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18145  007E20                     u16614:
 18146  007E20  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18147  007E22  D7FB               	goto	u16615
 18148  007E24  C063  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18149  007E28  C064  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18150                           
 18151                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 18152  007E2C  0102               	movlb	2	; () banked
 18153  007E2E  8D03               	bsf	(_loRa+3)& (0+255),6,b
 18154  007E30                     l1145:
 18155                           
 18156                           ;lorawan_eu.c: 603: }
 18157                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 18158  007E30  0100               	movlb	0	; () banked
 18159  007E32  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18160  007E34  A4D8               	btfss	status,2,c
 18161  007E36  D002               	goto	l1146
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;lorawan_eu.c: 606: {
 18165                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 18166  007E38  0102               	movlb	2	; () banked
 18167  007E3A  8F02               	bsf	(_loRa+2)& (0+255),7,b
 18168  007E3C                     l1146:
 18169                           
 18170                           ;lorawan_eu.c: 608: }
 18171                           ;lorawan_eu.c: 610: return ptr;
 18172                           
 18173                           ; BSR set to: 2
 18174  007E3C  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18175  007E40  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18176  007E44  0012               	return	
 18177  007E46                     __end_of_ExecuteDutyCycle:
 18178                           	opt stack 0
 18179                           tosu	equ	0xFFF
 18180                           tosh	equ	0xFFE
 18181                           tosl	equ	0xFFD
 18182                           pclath	equ	0xFFA
 18183                           tblptru	equ	0xFF8
 18184                           tblptrh	equ	0xFF7
 18185                           tblptrl	equ	0xFF6
 18186                           tablat	equ	0xFF5
 18187                           prodh	equ	0xFF4
 18188                           prodl	equ	0xFF3
 18189                           intcon	equ	0xFF2
 18190                           intcon2	equ	0xFF1
 18191                           intcon3	equ	0xFF0
 18192                           indf0	equ	0xFEF
 18193                           postinc0	equ	0xFEE
 18194                           fsr0h	equ	0xFEA
 18195                           fsr0l	equ	0xFE9
 18196                           wreg	equ	0xFE8
 18197                           postinc1	equ	0xFE6
 18198                           postdec1	equ	0xFE5
 18199                           plusw1	equ	0xFE3
 18200                           fsr1h	equ	0xFE2
 18201                           fsr1l	equ	0xFE1
 18202                           indf2	equ	0xFDF
 18203                           postinc2	equ	0xFDE
 18204                           postdec2	equ	0xFDD
 18205                           plusw2	equ	0xFDB
 18206                           fsr2h	equ	0xFDA
 18207                           fsr2l	equ	0xFD9
 18208                           status	equ	0xFD8
 18209                           
 18210 ;; *************** function _ExecuteDevStatus *****************
 18211 ;; Defined at:
 18212 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18213 ;; Parameters:    Size  Location     Type
 18214 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18215 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;		None
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  2    0[BANK0 ] PTR unsigned char 
 18220 ;; Registers used:
 18221 ;;		wreg, status,2, status,0
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18230 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18231 ;;Total ram usage:        2 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    7
 18234 ;; This function calls:
 18235 ;;		Nothing
 18236 ;; This function is called by:
 18237 ;;		_MacExecuteCommands
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           
 18241                           	psect	text86
 18242  008B8E                     __ptext86:
 18243                           	opt stack 0
 18244  008B8E                     _ExecuteDevStatus:
 18245                           	opt stack 18
 18246                           
 18247                           ;lorawan_eu.c: 674: return ptr;
 18248                           
 18249                           ;incstack = 0
 18250  008B8E  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18251  008B92  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18252  008B96  0012               	return	
 18253  008B98                     __end_of_ExecuteDevStatus:
 18254                           	opt stack 0
 18255                           tosu	equ	0xFFF
 18256                           tosh	equ	0xFFE
 18257                           tosl	equ	0xFFD
 18258                           pclath	equ	0xFFA
 18259                           tblptru	equ	0xFF8
 18260                           tblptrh	equ	0xFF7
 18261                           tblptrl	equ	0xFF6
 18262                           tablat	equ	0xFF5
 18263                           prodh	equ	0xFF4
 18264                           prodl	equ	0xFF3
 18265                           intcon	equ	0xFF2
 18266                           intcon2	equ	0xFF1
 18267                           intcon3	equ	0xFF0
 18268                           indf0	equ	0xFEF
 18269                           postinc0	equ	0xFEE
 18270                           fsr0h	equ	0xFEA
 18271                           fsr0l	equ	0xFE9
 18272                           wreg	equ	0xFE8
 18273                           postinc1	equ	0xFE6
 18274                           postdec1	equ	0xFE5
 18275                           plusw1	equ	0xFE3
 18276                           fsr1h	equ	0xFE2
 18277                           fsr1l	equ	0xFE1
 18278                           indf2	equ	0xFDF
 18279                           postinc2	equ	0xFDE
 18280                           postdec2	equ	0xFDD
 18281                           plusw2	equ	0xFDB
 18282                           fsr2h	equ	0xFDA
 18283                           fsr2l	equ	0xFD9
 18284                           status	equ	0xFD8
 18285                           
 18286 ;; *************** function _LORAWAN_Send *****************
 18287 ;; Defined at:
 18288 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18289 ;; Parameters:    Size  Location     Type
 18290 ;;  confirmed       1    wreg     enum E7217
 18291 ;;  port            1  115[BANK0 ] unsigned char 
 18292 ;;  buffer          2  116[BANK0 ] PTR void 
 18293 ;;		 -> STR_1(6), NULL(0), 
 18294 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 18295 ;; Auto vars:     Size  Location     Type
 18296 ;;  confirmed       1  121[BANK0 ] enum E7217
 18297 ;;  result          1  120[BANK0 ] enum E7190
 18298 ;; Return value:  Size  Location     Type
 18299 ;;                  1    wreg      enum E7190
 18300 ;; Registers used:
 18301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18302 ;; Tracked objects:
 18303 ;;		On entry : 0/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18308 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18310 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18311 ;;Total ram usage:        7 bytes
 18312 ;; Hardware stack levels used:    1
 18313 ;; Hardware stack levels required when called:   13
 18314 ;; This function calls:
 18315 ;;		_AssemblePacket
 18316 ;;		_LORAWAN_GetMaxPayloadSize
 18317 ;;		_RADIO_ReceiveStop
 18318 ;;		_RADIO_Transmit
 18319 ;;		_SelectChannelForTransmission
 18320 ;; This function is called by:
 18321 ;;		_AutomaticReplyCallback
 18322 ;;		_LORAWAN_RxDone
 18323 ;;		_main
 18324 ;; This function uses a non-reentrant model
 18325 ;;
 18326                           
 18327                           	psect	text87
 18328  006744                     __ptext87:
 18329                           	opt stack 0
 18330  006744                     _LORAWAN_Send:
 18331                           	opt stack 17
 18332                           
 18333                           ;incstack = 0
 18334                           ;LORAWAN_Send@confirmed stored from wreg
 18335  006744  0100               	movlb	0	; () banked
 18336  006746  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18337                           
 18338                           ;lorawan.c: 187: LorawanError_t result;
 18339                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 18340  006748  0102               	movlb	2	; () banked
 18341  00674A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 18342  00674C  0012               	return	
 18343                           
 18344                           ; BSR set to: 2
 18345                           ;lorawan.c: 192: }
 18346                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18347                           
 18348                           ; BSR set to: 2
 18349                           ;lorawan.c: 190: {
 18350                           ;lorawan.c: 191: return MAC_PAUSED;
 18351                           ;	Return value of _LORAWAN_Send is never used
 18352  00674E  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 18353  006750  0012               	return	
 18354                           
 18355                           ; BSR set to: 2
 18356                           ;lorawan.c: 197: }
 18357                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18358                           
 18359                           ; BSR set to: 2
 18360                           ;lorawan.c: 195: {
 18361                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18362                           ;	Return value of _LORAWAN_Send is never used
 18363  006752  A902               	btfss	(_loRa+2)& (0+255),4,b
 18364  006754  0012               	return	
 18365                           
 18366                           ; BSR set to: 2
 18367                           ;lorawan.c: 202: }
 18368                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18369                           
 18370                           ; BSR set to: 2
 18371                           
 18372                           ; BSR set to: 2
 18373                           ;lorawan.c: 200: {
 18374                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18375                           ;	Return value of _LORAWAN_Send is never used
 18376  006756  0100               	movlb	0	; () banked
 18377  006758  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 18378  00675A  A4D8               	btfss	status,2,c
 18379  00675C  D003               	goto	l1804
 18380                           
 18381                           ; BSR set to: 0
 18382  00675E  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18383  006760  A4D8               	btfss	status,2,c
 18384  006762  0012               	return	
 18385  006764                     l1804:
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;lorawan.c: 207: }
 18389                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18390                           
 18391                           ; BSR set to: 0
 18392  006764  EC07  F03D         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18393  006768  0100               	movlb	0	; () banked
 18394  00676A  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 18395  00676C  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18396  00676E  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 18397  006770  A0D8               	btfss	status,0,c
 18398  006772  0012               	return	
 18399                           
 18400                           ; BSR set to: 0
 18401                           ;lorawan.c: 213: }
 18402                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18403                           
 18404                           ; BSR set to: 0
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;lorawan.c: 211: {
 18408                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18409                           ;	Return value of _LORAWAN_Send is never used
 18410  006774  0102               	movlb	2	; () banked
 18411  006776  2906               	incf	(_loRa+6)& (0+255),w,b
 18412  006778  E109               	bnz	l14651
 18413  00677A  2907               	incf	(_loRa+7)& (0+255),w,b
 18414  00677C  E107               	bnz	l14651
 18415  00677E  2908               	incf	(_loRa+8)& (0+255),w,b
 18416  006780  E105               	bnz	l14651
 18417  006782  2909               	incf	(_loRa+9)& (0+255),w,b
 18418  006784  A4D8               	btfss	status,2,c
 18419  006786  D002               	goto	l1806
 18420                           
 18421                           ; BSR set to: 2
 18422                           ;lorawan.c: 216: {
 18423                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18424  006788  8304               	bsf	(_loRa+4)& (0+255),1,b
 18425                           
 18426                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18427                           ;	Return value of _LORAWAN_Send is never used
 18428  00678A  0012               	return	
 18429  00678C                     l1806:
 18430  00678C                     l14651:
 18431                           
 18432                           ; BSR set to: 2
 18433                           ;lorawan.c: 220: }
 18434                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 18435  00678C  5102               	movf	(_loRa+2)& (0+255),w,b
 18436  00678E  0B0F               	andlw	15
 18437  006790  0900               	iorlw	0
 18438  006792  B4D8               	btfsc	status,2,c
 18439  006794  D003               	goto	l1807
 18440                           
 18441                           ; BSR set to: 2
 18442  006796  5112               	movf	(_loRa+18)& (0+255),w,b
 18443  006798  B4D8               	btfsc	status,2,c
 18444  00679A  0012               	return	
 18445  00679C                     l1807:
 18446                           
 18447                           ; BSR set to: 2
 18448                           ;lorawan.c: 225: }
 18449                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 18450                           
 18451                           ; BSR set to: 2
 18452  00679C  0E01               	movlw	1
 18453  00679E  EC3B  F03B         	call	_SelectChannelForTransmission
 18454  0067A2  0100               	movlb	0	; () banked
 18455  0067A4  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;lorawan.c: 228: if (result != OK)
 18459  0067A6  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 18460  0067A8  A4D8               	btfss	status,2,c
 18461  0067AA  0012               	return	
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;lorawan.c: 232: else
 18465                           ;lorawan.c: 233: {
 18466                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18467                           
 18468                           ; BSR set to: 0
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;lorawan.c: 231: }
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;lorawan.c: 229: {
 18475                           ;lorawan.c: 230: return result;
 18476                           ;	Return value of _LORAWAN_Send is never used
 18477  0067AC  0E02               	movlw	2
 18478  0067AE  0102               	movlb	2	; () banked
 18479  0067B0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 18480  0067B2  B4D8               	btfsc	status,2,c
 18481                           
 18482                           ; BSR set to: 2
 18483                           ;lorawan.c: 235: {
 18484                           ;lorawan.c: 236: RADIO_ReceiveStop();
 18485  0067B4  EC23  F044         	call	_RADIO_ReceiveStop	;wreg free
 18486                           
 18487                           ;lorawan.c: 237: }
 18488                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 18489  0067B8  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 18490  0067BC  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18491  0067C0  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18492  0067C4  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18493  0067C8  0100               	movlb	0	; () banked
 18494  0067CA  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18495  0067CC  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18496  0067CE  EC20  F00F         	call	_AssemblePacket
 18497                           
 18498                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18499  0067D2  0EF0               	movlw	low (_macBuffer+16)
 18500  0067D4  0100               	movlb	0	; () banked
 18501  0067D6  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 18502  0067D8  0E04               	movlw	high (_macBuffer+16)
 18503  0067DA  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18504  0067DC  C2D4  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18505  0067E0  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 18506  0067E4  0100               	movlb	0	; () banked
 18507  0067E6  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 18508  0067E8  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18509  0067EA  A4D8               	btfss	status,2,c
 18510  0067EC  0012               	return	
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;lorawan.c: 242: {
 18514                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 18515  0067EE  0E01               	movlw	1
 18516  0067F0  0102               	movlb	2	; () banked
 18517  0067F2  2706               	addwf	(_loRa+6)& (0+255),f,b
 18518  0067F4  0E00               	movlw	0
 18519  0067F6  2307               	addwfc	(_loRa+7)& (0+255),f,b
 18520  0067F8  2308               	addwfc	(_loRa+8)& (0+255),f,b
 18521  0067FA  2309               	addwfc	(_loRa+9)& (0+255),f,b
 18522                           
 18523                           ;lorawan.c: 245: if (CNF == confirmed)
 18524  0067FC  0100               	movlb	0	; () banked
 18525  0067FE  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18526  006800  A4D8               	btfss	status,2,c
 18527  006802  D002               	goto	l1812
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;lorawan.c: 246: {
 18531                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18532  006804  0102               	movlb	2	; () banked
 18533  006806  8100               	bsf	_loRa& (0+255),0,b
 18534  006808                     l1812:
 18535                           
 18536                           ;lorawan.c: 248: }
 18537                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18538  006808  0102               	movlb	2	; () banked
 18539  00680A  8B00               	bsf	_loRa& (0+255),5,b
 18540                           
 18541                           ; BSR set to: 2
 18542                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18543  00680C  5102               	movf	(_loRa+2)& (0+255),w,b
 18544  00680E  0BF0               	andlw	-16
 18545  006810  0901               	iorlw	1
 18546  006812  6F02               	movwf	(_loRa+2)& (0+255),b
 18547                           
 18548                           ; BSR set to: 2
 18549                           
 18550                           ; BSR set to: 2
 18551                           ;lorawan.c: 252: else
 18552                           ;lorawan.c: 253: {
 18553                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18554                           ;	Return value of _LORAWAN_Send is never used
 18555                           
 18556                           ;lorawan.c: 251: }
 18557  006814  0012               	return	
 18558  006816                     __end_of_LORAWAN_Send:
 18559                           	opt stack 0
 18560                           tosu	equ	0xFFF
 18561                           tosh	equ	0xFFE
 18562                           tosl	equ	0xFFD
 18563                           pclath	equ	0xFFA
 18564                           tblptru	equ	0xFF8
 18565                           tblptrh	equ	0xFF7
 18566                           tblptrl	equ	0xFF6
 18567                           tablat	equ	0xFF5
 18568                           prodh	equ	0xFF4
 18569                           prodl	equ	0xFF3
 18570                           intcon	equ	0xFF2
 18571                           intcon2	equ	0xFF1
 18572                           intcon3	equ	0xFF0
 18573                           indf0	equ	0xFEF
 18574                           postinc0	equ	0xFEE
 18575                           fsr0h	equ	0xFEA
 18576                           fsr0l	equ	0xFE9
 18577                           wreg	equ	0xFE8
 18578                           postinc1	equ	0xFE6
 18579                           postdec1	equ	0xFE5
 18580                           plusw1	equ	0xFE3
 18581                           fsr1h	equ	0xFE2
 18582                           fsr1l	equ	0xFE1
 18583                           indf2	equ	0xFDF
 18584                           postinc2	equ	0xFDE
 18585                           postdec2	equ	0xFDD
 18586                           plusw2	equ	0xFDB
 18587                           fsr2h	equ	0xFDA
 18588                           fsr2l	equ	0xFD9
 18589                           status	equ	0xFD8
 18590                           
 18591 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18592 ;; Defined at:
 18593 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;		None
 18596 ;; Auto vars:     Size  Location     Type
 18597 ;;  result          1   10[BANK0 ] unsigned char 
 18598 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  1    wreg      unsigned char 
 18601 ;; Registers used:
 18602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18603 ;; Tracked objects:
 18604 ;;		On entry : 0/0
 18605 ;;		On exit  : 0/0
 18606 ;;		Unchanged: 0/0
 18607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18609 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18612 ;;Total ram usage:        3 bytes
 18613 ;; Hardware stack levels used:    1
 18614 ;; Hardware stack levels required when called:    8
 18615 ;; This function calls:
 18616 ;;		_CountfOptsLength
 18617 ;; This function is called by:
 18618 ;;		_LORAWAN_Send
 18619 ;;		_AckRetransmissionCallback
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623                           	psect	text88
 18624  007A0E                     __ptext88:
 18625                           	opt stack 0
 18626  007A0E                     _LORAWAN_GetMaxPayloadSize:
 18627                           	opt stack 21
 18628                           
 18629                           ;lorawan.c: 1558: uint8_t result = 0;
 18630                           
 18631                           ;incstack = 0
 18632  007A0E  0E00               	movlw	0
 18633  007A10  0100               	movlb	0	; () banked
 18634  007A12  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 18638                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 18639  007A14  EC0B  F034         	call	_CountfOptsLength	;wreg free
 18640  007A18  0100               	movlb	0	; () banked
 18641  007A1A  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18642                           
 18643                           ; BSR set to: 0
 18644                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18645  007A1C  0102               	movlb	2	; () banked
 18646  007A1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18647  007A20  A4D8               	btfss	status,2,c
 18648  007A22  D00F               	goto	l2266
 18649                           
 18650                           ; BSR set to: 2
 18651                           ;lorawan.c: 1564: {
 18652                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18653  007A24  51DF               	movf	(_loRa+223)& (0+255),w,b
 18654  007A26  0D01               	mullw	1
 18655  007A28  0E71               	movlw	low _maxPayloadSize
 18656  007A2A  24F3               	addwf	prodl,w,c
 18657  007A2C  6EF6               	movwf	tblptrl,c
 18658  007A2E  0EFF               	movlw	high _maxPayloadSize
 18659  007A30  20F4               	addwfc	prodh,w,c
 18660  007A32  6EF7               	movwf	tblptrh,c
 18661  007A34                     	if	1	;There are 3 active tblptr bytes
 18662  007A34  6AF8               	clrf	tblptru,c
 18663  007A36  0E00               	movlw	low (__mediumconst shr (0+16))
 18664  007A38  22F8               	addwfc	tblptru,f,c
 18665  007A3A                     	endif
 18666  007A3A  0008               	tblrd		*
 18667  007A3C  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18668                           
 18669                           ;lorawan.c: 1566: }
 18670  007A40  D013               	goto	l2267
 18671  007A42                     l2266:
 18672                           
 18673                           ; BSR set to: 2
 18674                           ;lorawan.c: 1567: else
 18675                           ;lorawan.c: 1568: {
 18676                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 18677                           
 18678                           ; BSR set to: 2
 18679  007A42  51DF               	movf	(_loRa+223)& (0+255),w,b
 18680  007A44  0D01               	mullw	1
 18681  007A46  0E71               	movlw	low _maxPayloadSize
 18682  007A48  24F3               	addwf	prodl,w,c
 18683  007A4A  6EF6               	movwf	tblptrl,c
 18684  007A4C  0EFF               	movlw	high _maxPayloadSize
 18685  007A4E  20F4               	addwfc	prodh,w,c
 18686  007A50  6EF7               	movwf	tblptrh,c
 18687  007A52                     	if	1	;There are 3 active tblptr bytes
 18688  007A52  6AF8               	clrf	tblptru,c
 18689  007A54  0E00               	movlw	low (__mediumconst shr (0+16))
 18690  007A56  22F8               	addwfc	tblptru,f,c
 18691  007A58                     	endif
 18692  007A58  0008               	tblrd		*
 18693  007A5A  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18694  007A5E  0100               	movlb	0	; () banked
 18695  007A60  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18696  007A62  0800               	sublw	0
 18697  007A64  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18698  007A66  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18699  007A68                     l2267:
 18700                           
 18701                           ;lorawan.c: 1570: }
 18702                           ;lorawan.c: 1572: return result;
 18703                           
 18704                           ; BSR set to: 0
 18705  007A68  0100               	movlb	0	; () banked
 18706  007A6A  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18707  007A6C  0012               	return	
 18708  007A6E                     __end_of_LORAWAN_GetMaxPayloadSize:
 18709                           	opt stack 0
 18710                           tosu	equ	0xFFF
 18711                           tosh	equ	0xFFE
 18712                           tosl	equ	0xFFD
 18713                           pclath	equ	0xFFA
 18714                           tblptru	equ	0xFF8
 18715                           tblptrh	equ	0xFF7
 18716                           tblptrl	equ	0xFF6
 18717                           tablat	equ	0xFF5
 18718                           prodh	equ	0xFF4
 18719                           prodl	equ	0xFF3
 18720                           intcon	equ	0xFF2
 18721                           intcon2	equ	0xFF1
 18722                           intcon3	equ	0xFF0
 18723                           indf0	equ	0xFEF
 18724                           postinc0	equ	0xFEE
 18725                           fsr0h	equ	0xFEA
 18726                           fsr0l	equ	0xFE9
 18727                           wreg	equ	0xFE8
 18728                           postinc1	equ	0xFE6
 18729                           postdec1	equ	0xFE5
 18730                           plusw1	equ	0xFE3
 18731                           fsr1h	equ	0xFE2
 18732                           fsr1l	equ	0xFE1
 18733                           indf2	equ	0xFDF
 18734                           postinc2	equ	0xFDE
 18735                           postdec2	equ	0xFDD
 18736                           plusw2	equ	0xFDB
 18737                           fsr2h	equ	0xFDA
 18738                           fsr2l	equ	0xFD9
 18739                           status	equ	0xFD8
 18740                           
 18741 ;; *************** function _AssemblePacket *****************
 18742 ;; Defined at:
 18743 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18744 ;; Parameters:    Size  Location     Type
 18745 ;;  confirmed       1    wreg     unsigned char 
 18746 ;;  port            1  103[BANK0 ] unsigned char 
 18747 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 18748 ;;		 -> STR_1(6), NULL(0), 
 18749 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;  confirmed       1  110[BANK0 ] unsigned char 
 18752 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 18753 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 18754 ;;  fCtrl           1  112[BANK0 ] struct .
 18755 ;;  mhdr            1  111[BANK0 ] struct .
 18756 ;; Return value:  Size  Location     Type
 18757 ;;                  1    wreg      void 
 18758 ;; Registers used:
 18759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18760 ;; Tracked objects:
 18761 ;;		On entry : 0/0
 18762 ;;		On exit  : 0/0
 18763 ;;		Unchanged: 0/0
 18764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18765 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18766 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18768 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18769 ;;Total ram usage:       12 bytes
 18770 ;; Hardware stack levels used:    1
 18771 ;; Hardware stack levels required when called:   12
 18772 ;; This function calls:
 18773 ;;		_AESCmac
 18774 ;;		_AssembleEncryptionBlock
 18775 ;;		_CountfOptsLength
 18776 ;;		_EncryptFRMPayload
 18777 ;;		_FindSmallestDataRate
 18778 ;;		_IncludeMacCommandsResponse
 18779 ;;		_memcpy
 18780 ;;		_memset
 18781 ;; This function is called by:
 18782 ;;		_LORAWAN_Send
 18783 ;; This function uses a non-reentrant model
 18784 ;;
 18785                           
 18786                           	psect	text89
 18787  001E40                     __ptext89:
 18788                           	opt stack 0
 18789  001E40                     _AssemblePacket:
 18790                           	opt stack 17
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;incstack = 0
 18794                           ;AssemblePacket@confirmed stored from wreg
 18795  001E40  0100               	movlb	0	; () banked
 18796  001E42  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 18797                           
 18798                           ;lorawan.c: 1674: Mhdr_t mhdr;
 18799                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18800  001E44  0E10               	movlw	16
 18801  001E46  0100               	movlb	0	; () banked
 18802  001E48  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18803                           
 18804                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 18805                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18806  001E4A  0E00               	movlw	0
 18807  001E4C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18811  001E4E  0ECF               	movlw	low AssemblePacket@mhdr
 18812  001E50  6F60               	movwf	memset@p1& (0+255),b
 18813  001E52  0E00               	movlw	high AssemblePacket@mhdr
 18814  001E54  6F61               	movwf	(memset@p1+1)& (0+255),b
 18815  001E56  0E00               	movlw	0
 18816  001E58  6F63               	movwf	(memset@c+1)& (0+255),b
 18817  001E5A  0E00               	movlw	0
 18818  001E5C  6F62               	movwf	memset@c& (0+255),b
 18819  001E5E  0E00               	movlw	0
 18820  001E60  6F65               	movwf	(memset@n+1)& (0+255),b
 18821  001E62  0E01               	movlw	1
 18822  001E64  6F64               	movwf	memset@n& (0+255),b
 18823  001E66  EC6B  F042         	call	_memset	;wreg free
 18824                           
 18825                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18826  001E6A  0EE0               	movlw	low _macBuffer
 18827  001E6C  0100               	movlb	0	; () banked
 18828  001E6E  6F60               	movwf	memset@p1& (0+255),b
 18829  001E70  0E04               	movlw	high _macBuffer
 18830  001E72  6F61               	movwf	(memset@p1+1)& (0+255),b
 18831  001E74  0E00               	movlw	0
 18832  001E76  6F63               	movwf	(memset@c+1)& (0+255),b
 18833  001E78  0E00               	movlw	0
 18834  001E7A  6F62               	movwf	memset@c& (0+255),b
 18835  001E7C  0E01               	movlw	1
 18836  001E7E  6F65               	movwf	(memset@n+1)& (0+255),b
 18837  001E80  0E0F               	movlw	15
 18838  001E82  6F64               	movwf	memset@n& (0+255),b
 18839  001E84  EC6B  F042         	call	_memset	;wreg free
 18840                           
 18841                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18842  001E88  0EB0               	movlw	low _aesBuffer
 18843  001E8A  0100               	movlb	0	; () banked
 18844  001E8C  6F60               	movwf	memset@p1& (0+255),b
 18845  001E8E  0E01               	movlw	high _aesBuffer
 18846  001E90  6F61               	movwf	(memset@p1+1)& (0+255),b
 18847  001E92  0E00               	movlw	0
 18848  001E94  6F63               	movwf	(memset@c+1)& (0+255),b
 18849  001E96  0E00               	movlw	0
 18850  001E98  6F62               	movwf	memset@c& (0+255),b
 18851  001E9A  0E00               	movlw	0
 18852  001E9C  6F65               	movwf	(memset@n+1)& (0+255),b
 18853  001E9E  0E10               	movlw	16
 18854  001EA0  6F64               	movwf	memset@n& (0+255),b
 18855  001EA2  EC6B  F042         	call	_memset	;wreg free
 18856                           
 18857                           ;lorawan.c: 1683: if (confirmed == 1)
 18858  001EA6  0100               	movlb	0	; () banked
 18859  001EA8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 18860  001EAA  A4D8               	btfss	status,2,c
 18861  001EAC  D007               	goto	l2296
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;lorawan.c: 1684: {
 18865                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18866  001EAE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 18867  001EB0  0B1F               	andlw	-225
 18868  001EB2  0980               	iorlw	128
 18869  001EB4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18873  001EB6  0102               	movlb	2	; () banked
 18874  001EB8  8100               	bsf	_loRa& (0+255),0,b
 18875                           
 18876                           ;lorawan.c: 1687: }
 18877  001EBA  D005               	goto	l2297
 18878  001EBC                     l2296:
 18879                           
 18880                           ;lorawan.c: 1688: else
 18881                           ;lorawan.c: 1689: {
 18882                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18883                           
 18884                           ; BSR set to: 2
 18885  001EBC  0100               	movlb	0	; () banked
 18886  001EBE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 18887  001EC0  0B1F               	andlw	-225
 18888  001EC2  0940               	iorlw	64
 18889  001EC4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 18890  001EC6                     l2297:
 18891                           
 18892                           ;lorawan.c: 1691: }
 18893                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 18894  001EC6  0EFC               	movlw	-4
 18895  001EC8  0100               	movlb	0	; () banked
 18896  001ECA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18900  001ECC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 18901  001ECE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 18902  001ED0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18906  001ED2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18907  001ED4  0D01               	mullw	1
 18908  001ED6  0EE0               	movlw	low _macBuffer
 18909  001ED8  24F3               	addwf	prodl,w,c
 18910  001EDA  6ED9               	movwf	fsr2l,c
 18911  001EDC  0E04               	movlw	high _macBuffer
 18912  001EDE  20F4               	addwfc	prodh,w,c
 18913  001EE0  6EDA               	movwf	fsr2h,c
 18914  001EE2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 18915                           
 18916                           ; BSR set to: 0
 18917  001EE6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18921  001EE8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18922  001EEA  0D01               	mullw	1
 18923  001EEC  0EE0               	movlw	low _macBuffer
 18924  001EEE  24F3               	addwf	prodl,w,c
 18925  001EF0  6F60               	movwf	memcpy@d1& (0+255),b
 18926  001EF2  0E04               	movlw	high _macBuffer
 18927  001EF4  20F4               	addwfc	prodh,w,c
 18928  001EF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18929  001EF8  0E1E               	movlw	low (_loRa+30)
 18930  001EFA  6F62               	movwf	memcpy@s1& (0+255),b
 18931  001EFC  0E02               	movlw	high (_loRa+30)
 18932  001EFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18933  001F00  0E00               	movlw	0
 18934  001F02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18935  001F04  0E04               	movlw	4
 18936  001F06  6F64               	movwf	memcpy@n& (0+255),b
 18937  001F08  EC37  F03D         	call	_memcpy	;wreg free
 18938                           
 18939                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18940  001F0C  0100               	movlb	0	; () banked
 18941  001F0E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18942  001F10  0F04               	addlw	4
 18943  001F12  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;lorawan.c: 1699: fCtrl.value = 0;
 18947  001F14  0E00               	movlw	0
 18948  001F16  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 18949                           
 18950                           ; BSR set to: 0
 18951                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18952  001F18  0102               	movlb	2	; () banked
 18953  001F1A  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18954  001F1C  D047               	goto	l2306
 18955                           
 18956                           ; BSR set to: 2
 18957                           ;lorawan.c: 1702: {
 18958                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18959  001F1E  0100               	movlb	0	; () banked
 18960  001F20  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18964  001F22  0102               	movlb	2	; () banked
 18965  001F24  51DF               	movf	(_loRa+223)& (0+255),w,b
 18966  001F26  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18967  001F28  B0D8               	btfsc	status,0,c
 18968  001F2A  D03F               	goto	l2299
 18969                           
 18970                           ; BSR set to: 2
 18971                           ;lorawan.c: 1705: {
 18972                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18973  001F2C  0100               	movlb	0	; () banked
 18974  001F2E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18975                           
 18976                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18977  001F30  0102               	movlb	2	; () banked
 18978  001F32  8900               	bsf	_loRa& (0+255),4,b
 18979                           
 18980                           ; BSR set to: 2
 18981                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18982  001F34  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18983  001F36  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18984                           
 18985                           ; BSR set to: 2
 18986                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18987  001F38  51A2               	movf	(_loRa+162)& (0+255),w,b
 18988  001F3A  0100               	movlb	0	; () banked
 18989  001F3C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 18990  001F3E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 18991  001F40  0102               	movlb	2	; () banked
 18992  001F42  51D0               	movf	(_loRa+208)& (0+255),w,b
 18993  001F44  0100               	movlb	0	; () banked
 18994  001F46  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 18995  001F48  E10C               	bnz	l14403
 18996  001F4A  0102               	movlb	2	; () banked
 18997  001F4C  51D1               	movf	(_loRa+209)& (0+255),w,b
 18998  001F4E  0100               	movlb	0	; () banked
 18999  001F50  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19000  001F52  A4D8               	btfss	status,2,c
 19001  001F54  D006               	goto	l2300
 19002                           
 19003                           ; BSR set to: 0
 19004                           ;lorawan.c: 1711: {
 19005                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19006  001F56  0E00               	movlw	0
 19007  001F58  0102               	movlb	2	; () banked
 19008  001F5A  6FEE               	movwf	(_loRa+238)& (0+255),b
 19009  001F5C  D023               	goto	l14415
 19010  001F5E                     l14401:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 19014  001F5E  0102               	movlb	2	; () banked
 19015  001F60  D024               	goto	l2299
 19016  001F62                     l2300:
 19017  001F62                     l14403:
 19018                           
 19019                           ;lorawan.c: 1716: else
 19020                           ;lorawan.c: 1717: {
 19021                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 19022  001F62  0102               	movlb	2	; () banked
 19023  001F64  51A2               	movf	(_loRa+162)& (0+255),w,b
 19024  001F66  0100               	movlb	0	; () banked
 19025  001F68  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19026  001F6A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 19027  001F6C  0102               	movlb	2	; () banked
 19028  001F6E  51D0               	movf	(_loRa+208)& (0+255),w,b
 19029  001F70  0100               	movlb	0	; () banked
 19030  001F72  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 19031  001F74  0102               	movlb	2	; () banked
 19032  001F76  51D1               	movf	(_loRa+209)& (0+255),w,b
 19033  001F78  0100               	movlb	0	; () banked
 19034  001F7A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19035  001F7C  B0D8               	btfsc	status,0,c
 19036  001F7E  D013               	goto	l2302
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;lorawan.c: 1719: {
 19040                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19041  001F80  0102               	movlb	2	; () banked
 19042  001F82  2BEE               	incf	(_loRa+238)& (0+255),f,b
 19043                           
 19044                           ; BSR set to: 2
 19045                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19046  001F84  51EE               	movf	(_loRa+238)& (0+255),w,b
 19047  001F86  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 19048  001F88  B0D8               	btfsc	status,0,c
 19049  001F8A  D010               	goto	l2306
 19050                           
 19051                           ; BSR set to: 2
 19052                           ;lorawan.c: 1725: {
 19053                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19054  001F8C  0E00               	movlw	0
 19055  001F8E  6FEE               	movwf	(_loRa+238)& (0+255),b
 19056                           
 19057                           ; BSR set to: 2
 19058                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19059  001F90  EC58  F032         	call	_FindSmallestDataRate	;wreg free
 19060  001F94  0900               	iorlw	0
 19061  001F96  A4D8               	btfss	status,2,c
 19062  001F98  D009               	goto	l2306
 19063                           
 19064                           ;lorawan.c: 1729: {
 19065                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19066  001F9A  0E00               	movlw	0
 19067  001F9C  0102               	movlb	2	; () banked
 19068  001F9E  6FD1               	movwf	(_loRa+209)& (0+255),b
 19069  001FA0  0E00               	movlw	0
 19070  001FA2  6FD0               	movwf	(_loRa+208)& (0+255),b
 19071  001FA4                     l14415:
 19072                           
 19073                           ; BSR set to: 2
 19074                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 19075  001FA4  0100               	movlb	0	; () banked
 19076  001FA6                     l2302:
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;lorawan.c: 1737: else
 19080                           ;lorawan.c: 1738: {
 19081                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19082  001FA6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19083  001FA8  D7DA               	goto	l14401
 19084  001FAA                     l2299:
 19085                           
 19086                           ; BSR set to: 2
 19087                           ;lorawan.c: 1744: else
 19088                           ;lorawan.c: 1745: {
 19089                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 19090  001FAA  9900               	bcf	_loRa& (0+255),4,b
 19091  001FAC                     l2306:
 19092                           
 19093                           ;lorawan.c: 1747: }
 19094                           ;lorawan.c: 1748: }
 19095                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 19096                           
 19097                           ; BSR set to: 2
 19098  001FAC  0102               	movlb	2	; () banked
 19099  001FAE  A300               	btfss	_loRa& (0+255),1,b
 19100  001FB0  D004               	goto	l2307
 19101                           
 19102                           ; BSR set to: 2
 19103                           ;lorawan.c: 1751: {
 19104                           ;lorawan.c: 1752: fCtrl.ack = 1;
 19105  001FB2  0100               	movlb	0	; () banked
 19106  001FB4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19107                           
 19108                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19109  001FB6  0102               	movlb	2	; () banked
 19110  001FB8  9300               	bcf	_loRa& (0+255),1,b
 19111  001FBA                     l2307:
 19112                           
 19113                           ; BSR set to: 2
 19114                           ;lorawan.c: 1754: }
 19115                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 19116  001FBA  0100               	movlb	0	; () banked
 19117  001FBC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19121  001FBE  0102               	movlb	2	; () banked
 19122  001FC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 19123  001FC2  B4D8               	btfsc	status,2,c
 19124  001FC4  D005               	goto	u16990
 19125                           
 19126                           ; BSR set to: 2
 19127  001FC6  0100               	movlb	0	; () banked
 19128  001FC8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19129  001FCA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19130  001FCC  A4D8               	btfss	status,2,c
 19131  001FCE  D006               	goto	l2308
 19132  001FD0                     u16990:
 19133                           
 19134                           ;lorawan.c: 1759: {
 19135                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19136  001FD0  0100               	movlb	0	; () banked
 19137  001FD2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 19138  001FD4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 19139  001FD6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 19140  001FD8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 19141                           
 19142                           ;lorawan.c: 1761: }
 19143  001FDA  D009               	goto	l2311
 19144  001FDC                     l2308:
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;lorawan.c: 1763: else
 19148                           ;lorawan.c: 1764: {
 19149                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 19150                           
 19151                           ; BSR set to: 0
 19152  001FDC  EC0B  F034         	call	_CountfOptsLength	;wreg free
 19153  001FE0  0100               	movlb	0	; () banked
 19154  001FE2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 19155  001FE4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19156  001FE6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19157  001FE8  0BF0               	andlw	-16
 19158  001FEA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 19159  001FEC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 19160  001FEE                     l2311:
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;lorawan.c: 1766: }
 19164                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19165                           
 19166                           ; BSR set to: 0
 19167  001FEE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19168  001FF0  0D01               	mullw	1
 19169  001FF2  0EE0               	movlw	low _macBuffer
 19170  001FF4  24F3               	addwf	prodl,w,c
 19171  001FF6  6ED9               	movwf	fsr2l,c
 19172  001FF8  0E04               	movlw	high _macBuffer
 19173  001FFA  20F4               	addwfc	prodh,w,c
 19174  001FFC  6EDA               	movwf	fsr2h,c
 19175  001FFE  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19176                           
 19177                           ; BSR set to: 0
 19178  002002  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19182  002004  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19183  002006  0D01               	mullw	1
 19184  002008  0EE0               	movlw	low _macBuffer
 19185  00200A  24F3               	addwf	prodl,w,c
 19186  00200C  6F60               	movwf	memcpy@d1& (0+255),b
 19187  00200E  0E04               	movlw	high _macBuffer
 19188  002010  20F4               	addwfc	prodh,w,c
 19189  002012  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19190  002014  0E06               	movlw	low (_loRa+6)
 19191  002016  6F62               	movwf	memcpy@s1& (0+255),b
 19192  002018  0E02               	movlw	high (_loRa+6)
 19193  00201A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19194  00201C  0E00               	movlw	0
 19195  00201E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19196  002020  0E02               	movlw	2
 19197  002022  6F64               	movwf	memcpy@n& (0+255),b
 19198  002024  EC37  F03D         	call	_memcpy	;wreg free
 19199                           
 19200                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19201  002028  0100               	movlb	0	; () banked
 19202  00202A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19203  00202C  0F02               	addlw	2
 19204  00202E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19208  002030  0102               	movlb	2	; () banked
 19209  002032  51A7               	movf	(_loRa+167)& (0+255),w,b
 19210  002034  B4D8               	btfsc	status,2,c
 19211  002036  D011               	goto	l2312
 19212                           
 19213                           ; BSR set to: 2
 19214  002038  0100               	movlb	0	; () banked
 19215  00203A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19216  00203C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19217  00203E  B4D8               	btfsc	status,2,c
 19218  002040  D00C               	goto	l2312
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;lorawan.c: 1774: {
 19222                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 19223  002042  0EE0               	movlw	low _macBuffer
 19224  002044  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19225  002046  0E04               	movlw	high _macBuffer
 19226  002048  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19227  00204A  0ED2               	movlw	low AssemblePacket@bufferIndex
 19228  00204C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19229  00204E  0E00               	movlw	high AssemblePacket@bufferIndex
 19230  002050  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19231  002052  0E01               	movlw	1
 19232  002054  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19233  002056  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 19234  00205A                     l2312:
 19235                           
 19236                           ;lorawan.c: 1776: }
 19237                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19238  00205A  0100               	movlb	0	; () banked
 19239  00205C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19240  00205E  0D01               	mullw	1
 19241  002060  0EE0               	movlw	low _macBuffer
 19242  002062  24F3               	addwf	prodl,w,c
 19243  002064  6ED9               	movwf	fsr2l,c
 19244  002066  0E04               	movlw	high _macBuffer
 19245  002068  20F4               	addwfc	prodh,w,c
 19246  00206A  6EDA               	movwf	fsr2h,c
 19247  00206C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 19248                           
 19249                           ; BSR set to: 0
 19250  002070  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;lorawan.c: 1780: if (bufferLength != 0)
 19254  002072  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19255  002074  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19256  002076  B4D8               	btfsc	status,2,c
 19257  002078  D035               	goto	l2313
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;lorawan.c: 1781: {
 19261                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 19262  00207A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19263  00207C  0D01               	mullw	1
 19264  00207E  0EE0               	movlw	low _macBuffer
 19265  002080  24F3               	addwf	prodl,w,c
 19266  002082  6F60               	movwf	memcpy@d1& (0+255),b
 19267  002084  0E04               	movlw	high _macBuffer
 19268  002086  20F4               	addwfc	prodh,w,c
 19269  002088  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19270  00208A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19271  00208E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19272  002092  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19273  002096  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19274  00209A  EC37  F03D         	call	_memcpy	;wreg free
 19275                           
 19276                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19277  00209E  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19278  0020A2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19279  0020A6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19280  0020AA  0E00               	movlw	0
 19281  0020AC  0100               	movlb	0	; () banked
 19282  0020AE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19283  0020B0  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19284  0020B4  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19285  0020B8  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19286  0020BC  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19287  0020C0  0E32               	movlw	low (_loRa+50)
 19288  0020C2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19289  0020C4  0E02               	movlw	high (_loRa+50)
 19290  0020C6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19291  0020C8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19292  0020CC  0EE0               	movlw	low _macBuffer
 19293  0020CE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19294  0020D0  0E04               	movlw	high _macBuffer
 19295  0020D2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19296  0020D4  0E00               	movlw	0
 19297  0020D6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19298  0020D8  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 19299                           
 19300                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19301  0020DC  0100               	movlb	0	; () banked
 19302  0020DE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19303  0020E0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19304  0020E2  D033               	goto	L11
 19305  0020E4                     l2313:
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19309                           
 19310                           ; BSR set to: 0
 19311  0020E4  0102               	movlb	2	; () banked
 19312  0020E6  51A7               	movf	(_loRa+167)& (0+255),w,b
 19313  0020E8  B4D8               	btfsc	status,2,c
 19314  0020EA  D030               	goto	l2315
 19315                           
 19316                           ; BSR set to: 2
 19317                           ;lorawan.c: 1787: {
 19318                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 19319  0020EC  0EEF               	movlw	low _radioBuffer
 19320  0020EE  0100               	movlb	0	; () banked
 19321  0020F0  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19322  0020F2  0E05               	movlw	high _radioBuffer
 19323  0020F4  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19324  0020F6  0ED1               	movlw	low AssemblePacket@macCmdIdx
 19325  0020F8  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19326  0020FA  0E00               	movlw	high AssemblePacket@macCmdIdx
 19327  0020FC  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19328  0020FE  0E00               	movlw	0
 19329  002100  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19330  002102  ECEF  F00C         	call	_IncludeMacCommandsResponse	;wreg free
 19331                           
 19332                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19333  002106  0EEF               	movlw	low _radioBuffer
 19334  002108  0100               	movlb	0	; () banked
 19335  00210A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19336  00210C  0E05               	movlw	high _radioBuffer
 19337  00210E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19338  002110  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19339  002114  0E00               	movlw	0
 19340  002116  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 19341  002118  C206  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19342  00211C  C207  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19343  002120  C208  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19344  002124  C209  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19345  002128  0E22               	movlw	low (_loRa+34)
 19346  00212A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 19347  00212C  0E02               	movlw	high (_loRa+34)
 19348  00212E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19349  002130  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19350  002134  0EE0               	movlw	low _macBuffer
 19351  002136  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19352  002138  0E04               	movlw	high _macBuffer
 19353  00213A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19354  00213C  0E00               	movlw	0
 19355  00213E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19356  002140  EC45  F021         	call	_EncryptFRMPayload	;wreg free
 19357                           
 19358                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19359  002144  0100               	movlb	0	; () banked
 19360  002146  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19361  002148  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19362  00214A                     L11:
 19363  00214A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19364  00214C                     l2315:
 19365                           
 19366                           ;lorawan.c: 1793: }
 19367                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 19368                           
 19369                           ; BSR set to: 0
 19370                           
 19371                           ; BSR set to: 0
 19372  00214C  C206  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19373  002150  C207  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19374  002154  C208  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19375  002158  C209  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19376  00215C  0100               	movlb	0	; () banked
 19377  00215E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19378  002160  0FF0               	addlw	240
 19379  002162  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19380  002164  0E49               	movlw	73
 19381  002166  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19382  002168  0E00               	movlw	0
 19383  00216A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19384  00216C  0E00               	movlw	0
 19385  00216E  EC09  F030         	call	_AssembleEncryptionBlock
 19386                           
 19387                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19388  002172  0EE0               	movlw	low _macBuffer
 19389  002174  0100               	movlb	0	; () banked
 19390  002176  6F60               	movwf	memcpy@d1& (0+255),b
 19391  002178  0E04               	movlw	high _macBuffer
 19392  00217A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19393  00217C  0EB0               	movlw	low _aesBuffer
 19394  00217E  6F62               	movwf	memcpy@s1& (0+255),b
 19395  002180  0E01               	movlw	high _aesBuffer
 19396  002182  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19397  002184  0E00               	movlw	0
 19398  002186  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19399  002188  0E10               	movlw	16
 19400  00218A  6F64               	movwf	memcpy@n& (0+255),b
 19401  00218C  EC37  F03D         	call	_memcpy	;wreg free
 19402                           
 19403                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19404  002190  0E22               	movlw	low (_loRa+34)
 19405  002192  0100               	movlb	0	; () banked
 19406  002194  6FB9               	movwf	AESCmac@key& (0+255),b
 19407  002196  0E02               	movlw	high (_loRa+34)
 19408  002198  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 19409  00219A  0EB0               	movlw	low _aesBuffer
 19410  00219C  6FBB               	movwf	AESCmac@output& (0+255),b
 19411  00219E  0E01               	movlw	high _aesBuffer
 19412  0021A0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 19413  0021A2  0EE0               	movlw	low _macBuffer
 19414  0021A4  6FBD               	movwf	AESCmac@input& (0+255),b
 19415  0021A6  0E04               	movlw	high _macBuffer
 19416  0021A8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 19417  0021AA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19418  0021AE  ECF8  F010         	call	_AESCmac	;wreg free
 19419                           
 19420                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19421  0021B2  0100               	movlb	0	; () banked
 19422  0021B4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19423  0021B6  0D01               	mullw	1
 19424  0021B8  0EE0               	movlw	low _macBuffer
 19425  0021BA  24F3               	addwf	prodl,w,c
 19426  0021BC  6F60               	movwf	memcpy@d1& (0+255),b
 19427  0021BE  0E04               	movlw	high _macBuffer
 19428  0021C0  20F4               	addwfc	prodh,w,c
 19429  0021C2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19430  0021C4  0EB0               	movlw	low _aesBuffer
 19431  0021C6  6F62               	movwf	memcpy@s1& (0+255),b
 19432  0021C8  0E01               	movlw	high _aesBuffer
 19433  0021CA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19434  0021CC  0E00               	movlw	0
 19435  0021CE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19436  0021D0  0E04               	movlw	4
 19437  0021D2  6F64               	movwf	memcpy@n& (0+255),b
 19438  0021D4  EC37  F03D         	call	_memcpy	;wreg free
 19439                           
 19440                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19441  0021D8  0100               	movlb	0	; () banked
 19442  0021DA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19443  0021DC  0F04               	addlw	4
 19444  0021DE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19448  0021E0  0EF0               	movlw	240
 19449  0021E2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19450  0021E4  0102               	movlb	2	; () banked
 19451  0021E6  6FD4               	movwf	(_loRa+212)& (0+255),b
 19452  0021E8  6BD5               	clrf	(_loRa+213)& (0+255),b
 19453  0021EA  0EFF               	movlw	255
 19454  0021EC  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 19455                           
 19456                           ; BSR set to: 2
 19457  0021EE  0012               	return		;funcret
 19458  0021F0                     __end_of_AssemblePacket:
 19459                           	opt stack 0
 19460                           tosu	equ	0xFFF
 19461                           tosh	equ	0xFFE
 19462                           tosl	equ	0xFFD
 19463                           pclath	equ	0xFFA
 19464                           tblptru	equ	0xFF8
 19465                           tblptrh	equ	0xFF7
 19466                           tblptrl	equ	0xFF6
 19467                           tablat	equ	0xFF5
 19468                           prodh	equ	0xFF4
 19469                           prodl	equ	0xFF3
 19470                           intcon	equ	0xFF2
 19471                           intcon2	equ	0xFF1
 19472                           intcon3	equ	0xFF0
 19473                           indf0	equ	0xFEF
 19474                           postinc0	equ	0xFEE
 19475                           fsr0h	equ	0xFEA
 19476                           fsr0l	equ	0xFE9
 19477                           wreg	equ	0xFE8
 19478                           postinc1	equ	0xFE6
 19479                           postdec1	equ	0xFE5
 19480                           plusw1	equ	0xFE3
 19481                           fsr1h	equ	0xFE2
 19482                           fsr1l	equ	0xFE1
 19483                           indf2	equ	0xFDF
 19484                           postinc2	equ	0xFDE
 19485                           postdec2	equ	0xFDD
 19486                           plusw2	equ	0xFDB
 19487                           fsr2h	equ	0xFDA
 19488                           fsr2l	equ	0xFD9
 19489                           status	equ	0xFD8
 19490                           
 19491 ;; *************** function _IncludeMacCommandsResponse *****************
 19492 ;; Defined at:
 19493 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19494 ;; Parameters:    Size  Location     Type
 19495 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19496 ;;		 -> macBuffer(271), radioBuffer(271), 
 19497 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19498 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19499 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19500 ;; Auto vars:     Size  Location     Type
 19501 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 19502 ;;  i               1   13[BANK0 ] unsigned char 
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      void 
 19505 ;; Registers used:
 19506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19512 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19514 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19515 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;Total ram usage:       15 bytes
 19517 ;; Hardware stack levels used:    1
 19518 ;; Hardware stack levels required when called:    8
 19519 ;; This function calls:
 19520 ;;		_RADIO_GetPacketSnr
 19521 ;; This function is called by:
 19522 ;;		_AssemblePacket
 19523 ;; This function uses a non-reentrant model
 19524 ;;
 19525                           
 19526                           	psect	text90
 19527  0019DE                     __ptext90:
 19528                           	opt stack 0
 19529  0019DE                     _IncludeMacCommandsResponse:
 19530                           	opt stack 20
 19531                           
 19532                           ;lorawan.c: 1847: uint8_t i = 0;
 19533                           
 19534                           ; BSR set to: 2
 19535                           ;incstack = 0
 19536  0019DE  0E00               	movlw	0
 19537  0019E0  0100               	movlb	0	; () banked
 19538  0019E2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19542  0019E4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19543  0019E8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19544  0019EC  50DF               	movf	indf2,w,c
 19545  0019EE  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19546                           
 19547                           ; BSR set to: 0
 19548                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19549  0019F0  0E00               	movlw	0
 19550  0019F2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19551  0019F4  D218               	goto	l2326
 19552  0019F6                     
 19553                           ; BSR set to: 0
 19554                           ;lorawan.c: 1851: {
 19555                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 19556                           
 19557                           ; BSR set to: 0
 19558  0019F6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19559  0019F8  B4D8               	btfsc	status,2,c
 19560  0019FA  D1F6               	goto	l2331
 19561                           
 19562                           ; BSR set to: 0
 19563  0019FC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19564  0019FE  0D02               	mullw	2
 19565  001A00  0EA8               	movlw	low (_loRa+168)
 19566  001A02  24F3               	addwf	prodl,w,c
 19567  001A04  6ED9               	movwf	fsr2l,c
 19568  001A06  0E02               	movlw	high (_loRa+168)
 19569  001A08  20F4               	addwfc	prodh,w,c
 19570  001A0A  6EDA               	movwf	fsr2h,c
 19571  001A0C  28DE               	incf	postinc2,w,c
 19572  001A0E  B4D8               	btfsc	status,2,c
 19573  001A10  D1EB               	goto	l2331
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;lorawan.c: 1853: {
 19577                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 19578  001A12  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19579  001A16  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19580  001A1A  50DF               	movf	indf2,w,c
 19581  001A1C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19582  001A1E  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19583  001A20  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 19584  001A22  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19585  001A24  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 19586  001A26  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19587  001A28  0EFE               	movlw	254
 19588  001A2A  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19589  001A2C  0EFF               	movlw	255
 19590  001A2E  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19591  001A30  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19592  001A32  0D02               	mullw	2
 19593  001A34  0EA8               	movlw	low (_loRa+168)
 19594  001A36  24F3               	addwf	prodl,w,c
 19595  001A38  6ED9               	movwf	fsr2l,c
 19596  001A3A  0E02               	movlw	high (_loRa+168)
 19597  001A3C  20F4               	addwfc	prodh,w,c
 19598  001A3E  6EDA               	movwf	fsr2h,c
 19599  001A40  50DF               	movf	indf2,w,c
 19600  001A42  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 19601  001A44  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19602  001A46  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19603  001A48  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19604  001A4A  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19605  001A4C  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19606  001A4E  0E81               	movlw	low _macEndDevCmdReplyLen
 19607  001A50  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19608  001A52  6EF6               	movwf	tblptrl,c
 19609  001A54  0EFF               	movlw	high _macEndDevCmdReplyLen
 19610  001A56  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19611  001A58  6EF7               	movwf	tblptrh,c
 19612  001A5A                     	if	1	;There are 3 active tblptr bytes
 19613  001A5A  6AF8               	clrf	tblptru,c
 19614  001A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 19615  001A5E  22F8               	addwfc	tblptru,f,c
 19616  001A60                     	endif
 19617  001A60  0008               	tblrd		*
 19618  001A62  50F5               	movf	tablat,w,c
 19619  001A64  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 19620  001A68  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 19621  001A6A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19622  001A6C  0E00               	movlw	0
 19623  001A6E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19624  001A70  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19625  001A72  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 19626  001A74  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19627  001A76  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 19628  001A78  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 19629  001A7A  D1B6               	goto	l2331
 19630  001A7C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 19631  001A7E  E105               	bnz	u16330
 19632  001A80  0E10               	movlw	16
 19633  001A82  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19634  001A84  B0D8               	btfsc	status,0,c
 19635  001A86  D1D5               	goto	u16440
 19636  001A88  D1AF               	goto	l2331
 19637  001A8A                     u16330:
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;lorawan.c: 1855: {
 19641                           ;lorawan.c: 1856: break;
 19642  001A8A  D1D3               	goto	u16440
 19643  001A8C                     
 19644                           ; BSR set to: 0
 19645                           ;lorawan.c: 1862: {
 19646                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19647                           
 19648                           ; BSR set to: 0
 19649  001A8C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19650  001A8E  0D01               	mullw	1
 19651  001A90  50F3               	movf	prodl,w,c
 19652  001A92  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19653  001A94  6ED9               	movwf	fsr2l,c
 19654  001A96  50F4               	movf	prodh,w,c
 19655  001A98  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19656  001A9A  6EDA               	movwf	fsr2h,c
 19657  001A9C  0E03               	movlw	3
 19658  001A9E  6EDF               	movwf	indf2,c
 19659                           
 19660                           ; BSR set to: 0
 19661  001AA0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19662                           
 19663                           ; BSR set to: 0
 19664                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19665  001AA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19666  001AA4  0D01               	mullw	1
 19667  001AA6  50F3               	movf	prodl,w,c
 19668  001AA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19669  001AAA  6ED9               	movwf	fsr2l,c
 19670  001AAC  50F4               	movf	prodh,w,c
 19671  001AAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19672  001AB0  6EDA               	movwf	fsr2h,c
 19673  001AB2  0E00               	movlw	0
 19674  001AB4  6EDF               	movwf	indf2,c
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19678  001AB6  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19679  001AB8  0D02               	mullw	2
 19680  001ABA  0E00               	movlw	low _loRa
 19681  001ABC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19682  001ABE  0E02               	movlw	high _loRa
 19683  001AC0  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19684  001AC2  0EA8               	movlw	168
 19685  001AC4  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19686  001AC6  0E00               	movlw	0
 19687  001AC8  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19688  001ACA  50F3               	movf	prodl,w,c
 19689  001ACC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19690  001ACE  50F4               	movf	prodh,w,c
 19691  001AD0  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19692  001AD2  0E01               	movlw	1
 19693  001AD4  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19694  001AD6  6ED9               	movwf	fsr2l,c
 19695  001AD8  0E00               	movlw	0
 19696  001ADA  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19697  001ADC  6EDA               	movwf	fsr2h,c
 19698  001ADE  0102               	movlb	2	; () banked
 19699  001AE0  A0DF               	btfss	indf2,0,c
 19700  001AE2  D00B               	goto	l2333
 19701                           
 19702                           ; BSR set to: 2
 19703                           ;lorawan.c: 1866: {
 19704                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19705  001AE4  0100               	movlb	0	; () banked
 19706  001AE6  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19707  001AE8  0D01               	mullw	1
 19708  001AEA  50F3               	movf	prodl,w,c
 19709  001AEC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19710  001AEE  6ED9               	movwf	fsr2l,c
 19711  001AF0  50F4               	movf	prodh,w,c
 19712  001AF2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19713  001AF4  6EDA               	movwf	fsr2h,c
 19714  001AF6  0E00               	movlw	0
 19715  001AF8  80DB               	bsf	plusw2,0,c
 19716  001AFA                     l2333:
 19717                           
 19718                           ;lorawan.c: 1868: }
 19719                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19720  001AFA  0100               	movlb	0	; () banked
 19721  001AFC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19722  001AFE  0D02               	mullw	2
 19723  001B00  0E00               	movlw	low _loRa
 19724  001B02  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19725  001B04  0E02               	movlw	high _loRa
 19726  001B06  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19727  001B08  0EA8               	movlw	168
 19728  001B0A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19729  001B0C  0E00               	movlw	0
 19730  001B0E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19731  001B10  50F3               	movf	prodl,w,c
 19732  001B12  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19733  001B14  50F4               	movf	prodh,w,c
 19734  001B16  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19735  001B18  0E01               	movlw	1
 19736  001B1A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19737  001B1C  6ED9               	movwf	fsr2l,c
 19738  001B1E  0E00               	movlw	0
 19739  001B20  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19740  001B22  6EDA               	movwf	fsr2h,c
 19741  001B24  0102               	movlb	2	; () banked
 19742  001B26  A2DF               	btfss	indf2,1,c
 19743  001B28  D00B               	goto	l2334
 19744                           
 19745                           ; BSR set to: 2
 19746                           ;lorawan.c: 1871: {
 19747                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19748  001B2A  0100               	movlb	0	; () banked
 19749  001B2C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19750  001B2E  0D01               	mullw	1
 19751  001B30  50F3               	movf	prodl,w,c
 19752  001B32  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19753  001B34  6ED9               	movwf	fsr2l,c
 19754  001B36  50F4               	movf	prodh,w,c
 19755  001B38  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19756  001B3A  6EDA               	movwf	fsr2h,c
 19757  001B3C  0E00               	movlw	0
 19758  001B3E  82DB               	bsf	plusw2,1,c
 19759  001B40                     l2334:
 19760                           
 19761                           ;lorawan.c: 1873: }
 19762                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19763  001B40  0100               	movlb	0	; () banked
 19764  001B42  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19765  001B44  0D02               	mullw	2
 19766  001B46  0E00               	movlw	low _loRa
 19767  001B48  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19768  001B4A  0E02               	movlw	high _loRa
 19769  001B4C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19770  001B4E  0EA8               	movlw	168
 19771  001B50  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19772  001B52  0E00               	movlw	0
 19773  001B54  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19774  001B56  50F3               	movf	prodl,w,c
 19775  001B58  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19776  001B5A  50F4               	movf	prodh,w,c
 19777  001B5C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19778  001B5E  0E01               	movlw	1
 19779  001B60  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19780  001B62  6ED9               	movwf	fsr2l,c
 19781  001B64  0E00               	movlw	0
 19782  001B66  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19783  001B68  6EDA               	movwf	fsr2h,c
 19784  001B6A  0102               	movlb	2	; () banked
 19785  001B6C  A4DF               	btfss	indf2,2,c
 19786  001B6E  D089               	goto	l2340
 19787                           
 19788                           ; BSR set to: 2
 19789                           ;lorawan.c: 1876: {
 19790                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19791  001B70  0100               	movlb	0	; () banked
 19792  001B72  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19793  001B74  0D01               	mullw	1
 19794  001B76  50F3               	movf	prodl,w,c
 19795  001B78  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19796  001B7A  6ED9               	movwf	fsr2l,c
 19797  001B7C  50F4               	movf	prodh,w,c
 19798  001B7E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19799  001B80  6EDA               	movwf	fsr2h,c
 19800  001B82  0E00               	movlw	0
 19801  001B84  84DB               	bsf	plusw2,2,c
 19802                           
 19803                           ; BSR set to: 0
 19804  001B86  D07D               	goto	l2340
 19805  001B88                     
 19806                           ; BSR set to: 0
 19807                           ;lorawan.c: 1884: {
 19808                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19809                           
 19810                           ; BSR set to: 0
 19811  001B88  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19812  001B8A  0D01               	mullw	1
 19813  001B8C  50F3               	movf	prodl,w,c
 19814  001B8E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19815  001B90  6ED9               	movwf	fsr2l,c
 19816  001B92  50F4               	movf	prodh,w,c
 19817  001B94  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19818  001B96  6EDA               	movwf	fsr2h,c
 19819  001B98  0E05               	movlw	5
 19820  001B9A  6EDF               	movwf	indf2,c
 19821                           
 19822                           ; BSR set to: 0
 19823  001B9C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19827  001B9E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19828  001BA0  0D01               	mullw	1
 19829  001BA2  50F3               	movf	prodl,w,c
 19830  001BA4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19831  001BA6  6ED9               	movwf	fsr2l,c
 19832  001BA8  50F4               	movf	prodh,w,c
 19833  001BAA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19834  001BAC  6EDA               	movwf	fsr2h,c
 19835  001BAE  0E00               	movlw	0
 19836  001BB0  6EDF               	movwf	indf2,c
 19837                           
 19838                           ; BSR set to: 0
 19839                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19840  001BB2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19841  001BB4  0D02               	mullw	2
 19842  001BB6  0E00               	movlw	low _loRa
 19843  001BB8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19844  001BBA  0E02               	movlw	high _loRa
 19845  001BBC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19846  001BBE  0EA8               	movlw	168
 19847  001BC0  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19848  001BC2  0E00               	movlw	0
 19849  001BC4  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19850  001BC6  50F3               	movf	prodl,w,c
 19851  001BC8  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19852  001BCA  50F4               	movf	prodh,w,c
 19853  001BCC  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19854  001BCE  0E01               	movlw	1
 19855  001BD0  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19856  001BD2  6ED9               	movwf	fsr2l,c
 19857  001BD4  0E00               	movlw	0
 19858  001BD6  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19859  001BD8  6EDA               	movwf	fsr2h,c
 19860  001BDA  0102               	movlb	2	; () banked
 19861  001BDC  A6DF               	btfss	indf2,3,c
 19862  001BDE  D00B               	goto	l2338
 19863                           
 19864                           ; BSR set to: 2
 19865                           ;lorawan.c: 1888: {
 19866                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19867  001BE0  0100               	movlb	0	; () banked
 19868  001BE2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19869  001BE4  0D01               	mullw	1
 19870  001BE6  50F3               	movf	prodl,w,c
 19871  001BE8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19872  001BEA  6ED9               	movwf	fsr2l,c
 19873  001BEC  50F4               	movf	prodh,w,c
 19874  001BEE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19875  001BF0  6EDA               	movwf	fsr2h,c
 19876  001BF2  0E00               	movlw	0
 19877  001BF4  80DB               	bsf	plusw2,0,c
 19878  001BF6                     l2338:
 19879                           
 19880                           ;lorawan.c: 1890: }
 19881                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 19882  001BF6  0100               	movlb	0	; () banked
 19883  001BF8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19884  001BFA  0D02               	mullw	2
 19885  001BFC  0E00               	movlw	low _loRa
 19886  001BFE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19887  001C00  0E02               	movlw	high _loRa
 19888  001C02  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19889  001C04  0EA8               	movlw	168
 19890  001C06  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19891  001C08  0E00               	movlw	0
 19892  001C0A  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19893  001C0C  50F3               	movf	prodl,w,c
 19894  001C0E  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19895  001C10  50F4               	movf	prodh,w,c
 19896  001C12  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19897  001C14  0E01               	movlw	1
 19898  001C16  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19899  001C18  6ED9               	movwf	fsr2l,c
 19900  001C1A  0E00               	movlw	0
 19901  001C1C  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19902  001C1E  6EDA               	movwf	fsr2h,c
 19903  001C20  0102               	movlb	2	; () banked
 19904  001C22  A8DF               	btfss	indf2,4,c
 19905  001C24  D00B               	goto	l2339
 19906                           
 19907                           ; BSR set to: 2
 19908                           ;lorawan.c: 1893: {
 19909                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 19910  001C26  0100               	movlb	0	; () banked
 19911  001C28  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19912  001C2A  0D01               	mullw	1
 19913  001C2C  50F3               	movf	prodl,w,c
 19914  001C2E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19915  001C30  6ED9               	movwf	fsr2l,c
 19916  001C32  50F4               	movf	prodh,w,c
 19917  001C34  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19918  001C36  6EDA               	movwf	fsr2h,c
 19919  001C38  0E00               	movlw	0
 19920  001C3A  82DB               	bsf	plusw2,1,c
 19921  001C3C                     l2339:
 19922                           
 19923                           ;lorawan.c: 1895: }
 19924                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 19925  001C3C  0100               	movlb	0	; () banked
 19926  001C3E  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19927  001C40  0D02               	mullw	2
 19928  001C42  0E00               	movlw	low _loRa
 19929  001C44  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19930  001C46  0E02               	movlw	high _loRa
 19931  001C48  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19932  001C4A  0EA8               	movlw	168
 19933  001C4C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19934  001C4E  0E00               	movlw	0
 19935  001C50  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19936  001C52  50F3               	movf	prodl,w,c
 19937  001C54  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 19938  001C56  50F4               	movf	prodh,w,c
 19939  001C58  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 19940  001C5A  0E01               	movlw	1
 19941  001C5C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 19942  001C5E  6ED9               	movwf	fsr2l,c
 19943  001C60  0E00               	movlw	0
 19944  001C62  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19945  001C64  6EDA               	movwf	fsr2h,c
 19946  001C66  0102               	movlb	2	; () banked
 19947  001C68  AADF               	btfss	indf2,5,c
 19948  001C6A  D00B               	goto	l2340
 19949                           
 19950                           ; BSR set to: 2
 19951                           ;lorawan.c: 1898: {
 19952                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 19953  001C6C  0100               	movlb	0	; () banked
 19954  001C6E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19955  001C70  0D01               	mullw	1
 19956  001C72  50F3               	movf	prodl,w,c
 19957  001C74  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19958  001C76  6ED9               	movwf	fsr2l,c
 19959  001C78  50F4               	movf	prodh,w,c
 19960  001C7A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19961  001C7C  6EDA               	movwf	fsr2h,c
 19962  001C7E  0E00               	movlw	0
 19963  001C80  84DB               	bsf	plusw2,2,c
 19964  001C82                     l2340:
 19965                           
 19966                           ;lorawan.c: 1900: }
 19967                           ;lorawan.c: 1902: bufferIndex ++;
 19968                           
 19969                           ; BSR set to: 0
 19970  001C82  0100               	movlb	0	; () banked
 19971  001C84  D03C               	goto	L12
 19972  001C86                     
 19973                           ; BSR set to: 0
 19974                           ;lorawan.c: 1907: {
 19975                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19976                           
 19977                           ; BSR set to: 0
 19978  001C86  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19979  001C88  0D01               	mullw	1
 19980  001C8A  50F3               	movf	prodl,w,c
 19981  001C8C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19982  001C8E  6ED9               	movwf	fsr2l,c
 19983  001C90  50F4               	movf	prodh,w,c
 19984  001C92  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19985  001C94  6EDA               	movwf	fsr2h,c
 19986  001C96  0E06               	movlw	6
 19987  001C98  6EDF               	movwf	indf2,c
 19988                           
 19989                           ; BSR set to: 0
 19990  001C9A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 19994  001C9C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19995  001C9E  0D01               	mullw	1
 19996  001CA0  50F3               	movf	prodl,w,c
 19997  001CA2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19998  001CA4  6ED9               	movwf	fsr2l,c
 19999  001CA6  50F4               	movf	prodh,w,c
 20000  001CA8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20001  001CAA  6EDA               	movwf	fsr2h,c
 20002  001CAC  C2E0  FFDF         	movff	_loRa+224,indf2
 20003  001CB0  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20004                           
 20005                           ; BSR set to: 0
 20006                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 20007  001CB2  EC05  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20008  001CB6  0A80               	xorlw	128
 20009  001CB8  0FA0               	addlw	160
 20010  001CBA  A0D8               	btfss	status,0,c
 20011  001CBC  D006               	goto	u16410
 20012  001CBE  EC05  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20013  001CC2  0A80               	xorlw	128
 20014  001CC4  0F60               	addlw	-160
 20015  001CC6  A0D8               	btfss	status,0,c
 20016  001CC8  D00C               	goto	l2342
 20017  001CCA                     u16410:
 20018                           
 20019                           ;lorawan.c: 1911: {
 20020                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 20021  001CCA  0100               	movlb	0	; () banked
 20022  001CCC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20023  001CCE  0D01               	mullw	1
 20024  001CD0  50F3               	movf	prodl,w,c
 20025  001CD2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20026  001CD4  6ED9               	movwf	fsr2l,c
 20027  001CD6  50F4               	movf	prodh,w,c
 20028  001CD8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20029  001CDA  6EDA               	movwf	fsr2h,c
 20030  001CDC  0E20               	movlw	32
 20031  001CDE  6EDF               	movwf	indf2,c
 20032  001CE0  D00E               	goto	L12
 20033  001CE2                     l2342:
 20034                           
 20035                           ;lorawan.c: 1914: else
 20036                           ;lorawan.c: 1915: {
 20037                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 20038                           
 20039                           ; BSR set to: 0
 20040  001CE2  0100               	movlb	0	; () banked
 20041  001CE4  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20042  001CE6  0D01               	mullw	1
 20043  001CE8  50F3               	movf	prodl,w,c
 20044  001CEA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20045  001CEC  6ED9               	movwf	fsr2l,c
 20046  001CEE  50F4               	movf	prodh,w,c
 20047  001CF0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20048  001CF2  6EDA               	movwf	fsr2h,c
 20049  001CF4  EC05  F046         	call	_RADIO_GetPacketSnr	;wreg free
 20050  001CF8  0B3F               	andlw	63
 20051  001CFA  6EDF               	movwf	indf2,c
 20052  001CFC  D7C2               	goto	l2340
 20053  001CFE                     L12:
 20054  001CFE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20055                           
 20056                           ; BSR set to: 0
 20057                           ;lorawan.c: 1917: }
 20058                           ;lorawan.c: 1918: }
 20059                           ;lorawan.c: 1919: break;
 20060  001D00  D091               	goto	l2336
 20061  001D02                     
 20062                           ; BSR set to: 0
 20063                           ;lorawan.c: 1922: {
 20064                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 20065                           
 20066                           ; BSR set to: 0
 20067  001D02  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20068  001D04  0D01               	mullw	1
 20069  001D06  50F3               	movf	prodl,w,c
 20070  001D08  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20071  001D0A  6ED9               	movwf	fsr2l,c
 20072  001D0C  50F4               	movf	prodh,w,c
 20073  001D0E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20074  001D10  6EDA               	movwf	fsr2h,c
 20075  001D12  0E07               	movlw	7
 20076  001D14  6EDF               	movwf	indf2,c
 20077                           
 20078                           ; BSR set to: 0
 20079  001D16  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 20083  001D18  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20084  001D1A  0D01               	mullw	1
 20085  001D1C  50F3               	movf	prodl,w,c
 20086  001D1E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20087  001D20  6ED9               	movwf	fsr2l,c
 20088  001D22  50F4               	movf	prodh,w,c
 20089  001D24  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20090  001D26  6EDA               	movwf	fsr2h,c
 20091  001D28  0E00               	movlw	0
 20092  001D2A  6EDF               	movwf	indf2,c
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 20096  001D2C  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20097  001D2E  0D02               	mullw	2
 20098  001D30  0E00               	movlw	low _loRa
 20099  001D32  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20100  001D34  0E02               	movlw	high _loRa
 20101  001D36  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20102  001D38  0EA8               	movlw	168
 20103  001D3A  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20104  001D3C  0E00               	movlw	0
 20105  001D3E  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20106  001D40  50F3               	movf	prodl,w,c
 20107  001D42  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20108  001D44  50F4               	movf	prodh,w,c
 20109  001D46  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20110  001D48  0E01               	movlw	1
 20111  001D4A  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20112  001D4C  6ED9               	movwf	fsr2l,c
 20113  001D4E  0E00               	movlw	0
 20114  001D50  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20115  001D52  6EDA               	movwf	fsr2h,c
 20116  001D54  0102               	movlb	2	; () banked
 20117  001D56  AEDF               	btfss	indf2,7,c
 20118  001D58  D00B               	goto	l2347
 20119                           
 20120                           ; BSR set to: 2
 20121                           ;lorawan.c: 1926: {
 20122                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 20123  001D5A  0100               	movlb	0	; () banked
 20124  001D5C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20125  001D5E  0D01               	mullw	1
 20126  001D60  50F3               	movf	prodl,w,c
 20127  001D62  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20128  001D64  6ED9               	movwf	fsr2l,c
 20129  001D66  50F4               	movf	prodh,w,c
 20130  001D68  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20131  001D6A  6EDA               	movwf	fsr2h,c
 20132  001D6C  0E00               	movlw	0
 20133  001D6E  80DB               	bsf	plusw2,0,c
 20134  001D70                     l2347:
 20135                           
 20136                           ;lorawan.c: 1928: }
 20137                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 20138  001D70  0100               	movlb	0	; () banked
 20139  001D72  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20140  001D74  0D02               	mullw	2
 20141  001D76  0E00               	movlw	low _loRa
 20142  001D78  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 20143  001D7A  0E02               	movlw	high _loRa
 20144  001D7C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 20145  001D7E  0EA8               	movlw	168
 20146  001D80  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20147  001D82  0E00               	movlw	0
 20148  001D84  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20149  001D86  50F3               	movf	prodl,w,c
 20150  001D88  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 20151  001D8A  50F4               	movf	prodh,w,c
 20152  001D8C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 20153  001D8E  0E01               	movlw	1
 20154  001D90  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 20155  001D92  6ED9               	movwf	fsr2l,c
 20156  001D94  0E00               	movlw	0
 20157  001D96  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 20158  001D98  6EDA               	movwf	fsr2h,c
 20159  001D9A  0102               	movlb	2	; () banked
 20160  001D9C  ACDF               	btfss	indf2,6,c
 20161  001D9E  D771               	goto	l2340
 20162                           
 20163                           ; BSR set to: 2
 20164                           ;lorawan.c: 1931: {
 20165                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20166  001DA0  0100               	movlb	0	; () banked
 20167  001DA2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20168  001DA4  0D01               	mullw	1
 20169  001DA6  50F3               	movf	prodl,w,c
 20170  001DA8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20171  001DAA  6ED9               	movwf	fsr2l,c
 20172  001DAC  50F4               	movf	prodh,w,c
 20173  001DAE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20174  001DB0  6EDA               	movwf	fsr2h,c
 20175  001DB2  0E00               	movlw	0
 20176  001DB4  82DB               	bsf	plusw2,1,c
 20177                           
 20178                           ; BSR set to: 0
 20179  001DB6  D765               	goto	l2340
 20180  001DB8                     l2349:
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;lorawan.c: 1939: {
 20184                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20185  001DB8  0102               	movlb	2	; () banked
 20186  001DBA  69DD               	setf	(_loRa+221)& (0+255),b
 20187                           
 20188                           ; BSR set to: 2
 20189                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20190  001DBC  0E00               	movlw	0
 20191  001DBE  6FDE               	movwf	(_loRa+222)& (0+255),b
 20192                           
 20193                           ; BSR set to: 2
 20194                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20195  001DC0  0100               	movlb	0	; () banked
 20196  001DC2                     
 20197                           ; BSR set to: 0
 20198                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 20199                           ;lorawan.c: 1948: {
 20200                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20201                           
 20202                           ; BSR set to: 0
 20203                           
 20204                           ; BSR set to: 0
 20205  001DC2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20206  001DC4  0D02               	mullw	2
 20207  001DC6  0EA8               	movlw	low (_loRa+168)
 20208  001DC8  24F3               	addwf	prodl,w,c
 20209  001DCA  6ED9               	movwf	fsr2l,c
 20210  001DCC  0E02               	movlw	high (_loRa+168)
 20211  001DCE  20F4               	addwfc	prodh,w,c
 20212  001DD0  6EDA               	movwf	fsr2h,c
 20213  001DD2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20214  001DD4  0D01               	mullw	1
 20215  001DD6  50F3               	movf	prodl,w,c
 20216  001DD8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20217  001DDA  6EE9               	movwf	fsr0l,c
 20218  001DDC  50F4               	movf	prodh,w,c
 20219  001DDE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20220  001DE0  6EEA               	movwf	fsr0h,c
 20221  001DE2  CFDF FFEF          	movff	indf2,indf0
 20222  001DE6  D78B               	goto	L12
 20223  001DE8                     l2331:
 20224                           
 20225                           ; BSR set to: 0
 20226                           
 20227                           ; BSR set to: 0
 20228  001DE8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20229  001DEA  0D02               	mullw	2
 20230  001DEC  0EA8               	movlw	low (_loRa+168)
 20231  001DEE  24F3               	addwf	prodl,w,c
 20232  001DF0  6ED9               	movwf	fsr2l,c
 20233  001DF2  0E02               	movlw	high (_loRa+168)
 20234  001DF4  20F4               	addwfc	prodh,w,c
 20235  001DF6  6EDA               	movwf	fsr2h,c
 20236  001DF8  50DF               	movf	indf2,w,c
 20237                           
 20238                           ; Switch size 1, requested type "space"
 20239                           ; Number of cases is 7, Range of values is 2 to 8
 20240                           ; switch strategies available:
 20241                           ; Name         Instructions Cycles
 20242                           ; simple_byte           22    12 (average)
 20243                           ;	Chosen strategy is simple_byte
 20244  001DFA  0A02               	xorlw	2	; case 2
 20245  001DFC  B4D8               	btfsc	status,2,c
 20246  001DFE  D7DC               	goto	l2349
 20247  001E00  0A01               	xorlw	1	; case 3
 20248  001E02  B4D8               	btfsc	status,2,c
 20249  001E04  D643               	goto	l2332
 20250  001E06  0A07               	xorlw	7	; case 4
 20251  001E08  B4D8               	btfsc	status,2,c
 20252  001E0A  D7DB               	goto	l2350
 20253  001E0C  0A01               	xorlw	1	; case 5
 20254  001E0E  B4D8               	btfsc	status,2,c
 20255  001E10  D6BB               	goto	l2337
 20256  001E12  0A03               	xorlw	3	; case 6
 20257  001E14  B4D8               	btfsc	status,2,c
 20258  001E16  D737               	goto	l2341
 20259  001E18  0A01               	xorlw	1	; case 7
 20260  001E1A  B4D8               	btfsc	status,2,c
 20261  001E1C  D772               	goto	l2346
 20262  001E1E  0A0F               	xorlw	15	; case 8
 20263  001E20  B4D8               	btfsc	status,2,c
 20264  001E22  D7CF               	goto	l2350
 20265  001E24                     l2336:
 20266                           
 20267                           ; BSR set to: 0
 20268                           
 20269                           ; BSR set to: 0
 20270  001E24  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20271  001E26                     l2326:
 20272                           
 20273                           ; BSR set to: 0
 20274                           
 20275                           ; BSR set to: 0
 20276  001E26  0102               	movlb	2	; () banked
 20277  001E28  51A7               	movf	(_loRa+167)& (0+255),w,b
 20278  001E2A  0100               	movlb	0	; () banked
 20279  001E2C  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20280  001E2E  A0D8               	btfss	status,0,c
 20281  001E30  D5E2               	goto	l2327
 20282  001E32                     u16440:
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;lorawan.c: 1957: }
 20286                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20287                           
 20288                           ; BSR set to: 0
 20289  001E32  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20290  001E36  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20291  001E3A  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20292                           
 20293                           ; BSR set to: 0
 20294  001E3E  0012               	return		;funcret
 20295  001E40                     __end_of_IncludeMacCommandsResponse:
 20296                           	opt stack 0
 20297                           tosu	equ	0xFFF
 20298                           tosh	equ	0xFFE
 20299                           tosl	equ	0xFFD
 20300                           pclath	equ	0xFFA
 20301                           tblptru	equ	0xFF8
 20302                           tblptrh	equ	0xFF7
 20303                           tblptrl	equ	0xFF6
 20304                           tablat	equ	0xFF5
 20305                           prodh	equ	0xFF4
 20306                           prodl	equ	0xFF3
 20307                           intcon	equ	0xFF2
 20308                           intcon2	equ	0xFF1
 20309                           intcon3	equ	0xFF0
 20310                           indf0	equ	0xFEF
 20311                           postinc0	equ	0xFEE
 20312                           fsr0h	equ	0xFEA
 20313                           fsr0l	equ	0xFE9
 20314                           wreg	equ	0xFE8
 20315                           postinc1	equ	0xFE6
 20316                           postdec1	equ	0xFE5
 20317                           plusw1	equ	0xFE3
 20318                           fsr1h	equ	0xFE2
 20319                           fsr1l	equ	0xFE1
 20320                           indf2	equ	0xFDF
 20321                           postinc2	equ	0xFDE
 20322                           postdec2	equ	0xFDD
 20323                           plusw2	equ	0xFDB
 20324                           fsr2h	equ	0xFDA
 20325                           fsr2l	equ	0xFD9
 20326                           status	equ	0xFD8
 20327                           
 20328 ;; *************** function _RADIO_GetPacketSnr *****************
 20329 ;; Defined at:
 20330 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20331 ;; Parameters:    Size  Location     Type
 20332 ;;		None
 20333 ;; Auto vars:     Size  Location     Type
 20334 ;;		None
 20335 ;; Return value:  Size  Location     Type
 20336 ;;                  1    wreg      char 
 20337 ;; Registers used:
 20338 ;;		wreg, status,2
 20339 ;; Tracked objects:
 20340 ;;		On entry : 0/0
 20341 ;;		On exit  : 0/0
 20342 ;;		Unchanged: 0/0
 20343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20348 ;;Total ram usage:        0 bytes
 20349 ;; Hardware stack levels used:    1
 20350 ;; Hardware stack levels required when called:    7
 20351 ;; This function calls:
 20352 ;;		Nothing
 20353 ;; This function is called by:
 20354 ;;		_IncludeMacCommandsResponse
 20355 ;; This function uses a non-reentrant model
 20356 ;;
 20357                           
 20358                           	psect	text91
 20359  008C0A                     __ptext91:
 20360                           	opt stack 0
 20361  008C0A                     _RADIO_GetPacketSnr:
 20362                           	opt stack 20
 20363                           
 20364                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;incstack = 0
 20368  008C0A  0101               	movlb	1	; () banked
 20369  008C0C  51AC               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20370  008C0E  0012               	return	
 20371  008C10                     __end_of_RADIO_GetPacketSnr:
 20372                           	opt stack 0
 20373                           tosu	equ	0xFFF
 20374                           tosh	equ	0xFFE
 20375                           tosl	equ	0xFFD
 20376                           pclath	equ	0xFFA
 20377                           tblptru	equ	0xFF8
 20378                           tblptrh	equ	0xFF7
 20379                           tblptrl	equ	0xFF6
 20380                           tablat	equ	0xFF5
 20381                           prodh	equ	0xFF4
 20382                           prodl	equ	0xFF3
 20383                           intcon	equ	0xFF2
 20384                           intcon2	equ	0xFF1
 20385                           intcon3	equ	0xFF0
 20386                           indf0	equ	0xFEF
 20387                           postinc0	equ	0xFEE
 20388                           fsr0h	equ	0xFEA
 20389                           fsr0l	equ	0xFE9
 20390                           wreg	equ	0xFE8
 20391                           postinc1	equ	0xFE6
 20392                           postdec1	equ	0xFE5
 20393                           plusw1	equ	0xFE3
 20394                           fsr1h	equ	0xFE2
 20395                           fsr1l	equ	0xFE1
 20396                           indf2	equ	0xFDF
 20397                           postinc2	equ	0xFDE
 20398                           postdec2	equ	0xFDD
 20399                           plusw2	equ	0xFDB
 20400                           fsr2h	equ	0xFDA
 20401                           fsr2l	equ	0xFD9
 20402                           status	equ	0xFD8
 20403                           
 20404 ;; *************** function _FindSmallestDataRate *****************
 20405 ;; Defined at:
 20406 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20407 ;; Parameters:    Size  Location     Type
 20408 ;;		None
 20409 ;; Auto vars:     Size  Location     Type
 20410 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20411 ;;  i               1    2[BANK0 ] unsigned char 
 20412 ;;  found           1    1[BANK0 ] unsigned char 
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  1    wreg      unsigned char 
 20415 ;; Registers used:
 20416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20417 ;; Tracked objects:
 20418 ;;		On entry : 0/0
 20419 ;;		On exit  : 0/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20423 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20425 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20426 ;;Total ram usage:        4 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:    7
 20429 ;; This function calls:
 20430 ;;		Nothing
 20431 ;; This function is called by:
 20432 ;;		_AckRetransmissionCallback
 20433 ;;		_AssemblePacket
 20434 ;; This function uses a non-reentrant model
 20435 ;;
 20436                           
 20437                           	psect	text92
 20438  0064B0                     __ptext92:
 20439                           	opt stack 0
 20440  0064B0                     _FindSmallestDataRate:
 20441                           	opt stack 21
 20442                           
 20443                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 20444                           
 20445                           ; BSR set to: 1
 20446                           ;incstack = 0
 20447  0064B0  0E00               	movlw	0
 20448  0064B2  0100               	movlb	0	; () banked
 20449  0064B4  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20450                           
 20451                           ;lorawan.c: 1966: bool found = 0;
 20452  0064B6  0E00               	movlw	0
 20453  0064B8  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20454                           
 20455                           ; BSR set to: 0
 20456                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20457  0064BA  0102               	movlb	2	; () banked
 20458  0064BC  51DF               	movf	(_loRa+223)& (0+255),w,b
 20459  0064BE  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20460  0064C0  B0D8               	btfsc	status,0,c
 20461  0064C2  D062               	goto	l2367
 20462                           
 20463                           ; BSR set to: 2
 20464                           ;lorawan.c: 1969: {
 20465                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20466  0064C4  05DF               	decf	(_loRa+223)& (0+255),w,b
 20467  0064C6  0100               	movlb	0	; () banked
 20468  0064C8  D050               	goto	L13
 20469  0064CA                     
 20470                           ; BSR set to: 0
 20471                           ;lorawan.c: 1973: {
 20472                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20473                           
 20474                           ; BSR set to: 0
 20475  0064CA  0E00               	movlw	0
 20476  0064CC  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20477  0064CE  D03D               	goto	l2359
 20478  0064D0                     
 20479                           ; BSR set to: 0
 20480                           ;lorawan.c: 1975: {
 20481                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20482                           
 20483                           ; BSR set to: 0
 20484  0064D0  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20485  0064D2  0D0E               	mullw	14
 20486  0064D4  0E05               	movlw	5
 20487  0064D6  26F3               	addwf	prodl,f,c
 20488  0064D8  0E00               	movlw	0
 20489  0064DA  22F4               	addwfc	prodh,f,c
 20490  0064DC  0E00               	movlw	low _Channels
 20491  0064DE  24F3               	addwf	prodl,w,c
 20492  0064E0  6ED9               	movwf	fsr2l,c
 20493  0064E2  0E04               	movlw	high _Channels
 20494  0064E4  20F4               	addwfc	prodh,w,c
 20495  0064E6  6EDA               	movwf	fsr2h,c
 20496  0064E8  0104               	movlb	4	; () banked
 20497  0064EA  50DF               	movf	223,w,c
 20498  0064EC  0B0F               	andlw	15
 20499  0064EE  0100               	movlb	0	; () banked
 20500  0064F0  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20501  0064F2  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20502  0064F4  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20503  0064F6  A0D8               	btfss	status,0,c
 20504  0064F8  D027               	goto	l2361
 20505                           
 20506                           ; BSR set to: 0
 20507  0064FA  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20508  0064FC  0D0E               	mullw	14
 20509  0064FE  0E05               	movlw	5
 20510  006500  26F3               	addwf	prodl,f,c
 20511  006502  0E00               	movlw	0
 20512  006504  22F4               	addwfc	prodh,f,c
 20513  006506  0E00               	movlw	low _Channels
 20514  006508  24F3               	addwf	prodl,w,c
 20515  00650A  6ED9               	movwf	fsr2l,c
 20516  00650C  0E04               	movlw	high _Channels
 20517  00650E  20F4               	addwfc	prodh,w,c
 20518  006510  6EDA               	movwf	fsr2h,c
 20519  006512  0104               	movlb	4	; () banked
 20520  006514  38DF               	swapf	223,w,c
 20521  006516  0B0F               	andlw	15
 20522  006518  0100               	movlb	0	; () banked
 20523  00651A  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20524  00651C  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20525  00651E  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20526  006520  A0D8               	btfss	status,0,c
 20527  006522  D012               	goto	l2361
 20528                           
 20529                           ; BSR set to: 0
 20530  006524  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20531  006526  0D0E               	mullw	14
 20532  006528  0E04               	movlw	4
 20533  00652A  26F3               	addwf	prodl,f,c
 20534  00652C  0E00               	movlw	0
 20535  00652E  22F4               	addwfc	prodh,f,c
 20536  006530  0E00               	movlw	low _Channels
 20537  006532  24F3               	addwf	prodl,w,c
 20538  006534  6ED9               	movwf	fsr2l,c
 20539  006536  0E04               	movlw	high _Channels
 20540  006538  20F4               	addwfc	prodh,w,c
 20541  00653A  6EDA               	movwf	fsr2h,c
 20542  00653C  04DE               	decf	postinc2,w,c
 20543  00653E  A4D8               	btfss	status,2,c
 20544  006540  D003               	goto	l2361
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;lorawan.c: 1977: {
 20548                           ;lorawan.c: 1978: found = 1;
 20549  006542  0E01               	movlw	1
 20550  006544  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20551                           
 20552                           ;lorawan.c: 1979: break;
 20553  006546  D007               	goto	u16140
 20554  006548                     l2361:
 20555                           
 20556                           ; BSR set to: 0
 20557                           
 20558                           ; BSR set to: 0
 20559  006548  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20560  00654A                     l2359:
 20561                           
 20562                           ; BSR set to: 0
 20563                           
 20564                           ; BSR set to: 0
 20565  00654A  0102               	movlb	2	; () banked
 20566  00654C  51ED               	movf	(_loRa+237)& (0+255),w,b
 20567  00654E  0100               	movlb	0	; () banked
 20568  006550  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20569  006552  A0D8               	btfss	status,0,c
 20570  006554  D7BD               	goto	l2360
 20571  006556                     u16140:
 20572                           
 20573                           ; BSR set to: 0
 20574                           ;lorawan.c: 1980: }
 20575                           ;lorawan.c: 1981: }
 20576                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 20577                           
 20578                           ; BSR set to: 0
 20579  006556  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20580  006558  A4D8               	btfss	status,2,c
 20581  00655A  D008               	goto	l2363
 20582                           
 20583                           ; BSR set to: 0
 20584  00655C  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20585  00655E  0102               	movlb	2	; () banked
 20586  006560  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20587  006562  B0D8               	btfsc	status,0,c
 20588  006564  D003               	goto	l2363
 20589                           
 20590                           ; BSR set to: 2
 20591                           ;lorawan.c: 1983: {
 20592                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 20593  006566  0100               	movlb	0	; () banked
 20594  006568  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20595  00656A                     L13:
 20596  00656A  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20597  00656C                     l2363:
 20598                           
 20599                           ; BSR set to: 0
 20600                           
 20601                           ; BSR set to: 0
 20602  00656C  0100               	movlb	0	; () banked
 20603  00656E  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20604  006570  A4D8               	btfss	status,2,c
 20605  006572  D006               	goto	u16180
 20606                           
 20607                           ; BSR set to: 0
 20608  006574  0102               	movlb	2	; () banked
 20609  006576  51EB               	movf	(_loRa+235)& (0+255),w,b
 20610  006578  0100               	movlb	0	; () banked
 20611  00657A  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20612  00657C  B0D8               	btfsc	status,0,c
 20613  00657E  D7A5               	goto	l2358
 20614  006580                     u16180:
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;lorawan.c: 1985: }
 20618                           ;lorawan.c: 1986: }
 20619                           ;lorawan.c: 1988: if (found == 1)
 20620                           
 20621                           ; BSR set to: 0
 20622                           
 20623                           ; BSR set to: 0
 20624  006580  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20625  006582  B4D8               	btfsc	status,2,c
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;lorawan.c: 1989: {
 20629                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20630  006584  C063  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20631  006588                     l2367:
 20632                           
 20633                           ;lorawan.c: 1991: }
 20634                           ;lorawan.c: 1992: }
 20635                           ;lorawan.c: 1994: return found;
 20636                           
 20637                           ; BSR set to: 0
 20638                           
 20639                           ; BSR set to: 0
 20640  006588  0100               	movlb	0	; () banked
 20641  00658A  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20642  00658C  0012               	return	
 20643  00658E                     __end_of_FindSmallestDataRate:
 20644                           	opt stack 0
 20645                           tosu	equ	0xFFF
 20646                           tosh	equ	0xFFE
 20647                           tosl	equ	0xFFD
 20648                           pclath	equ	0xFFA
 20649                           tblptru	equ	0xFF8
 20650                           tblptrh	equ	0xFF7
 20651                           tblptrl	equ	0xFF6
 20652                           tablat	equ	0xFF5
 20653                           prodh	equ	0xFF4
 20654                           prodl	equ	0xFF3
 20655                           intcon	equ	0xFF2
 20656                           intcon2	equ	0xFF1
 20657                           intcon3	equ	0xFF0
 20658                           indf0	equ	0xFEF
 20659                           postinc0	equ	0xFEE
 20660                           fsr0h	equ	0xFEA
 20661                           fsr0l	equ	0xFE9
 20662                           wreg	equ	0xFE8
 20663                           postinc1	equ	0xFE6
 20664                           postdec1	equ	0xFE5
 20665                           plusw1	equ	0xFE3
 20666                           fsr1h	equ	0xFE2
 20667                           fsr1l	equ	0xFE1
 20668                           indf2	equ	0xFDF
 20669                           postinc2	equ	0xFDE
 20670                           postdec2	equ	0xFDD
 20671                           plusw2	equ	0xFDB
 20672                           fsr2h	equ	0xFDA
 20673                           fsr2l	equ	0xFD9
 20674                           status	equ	0xFD8
 20675                           
 20676 ;; *************** function _EncryptFRMPayload *****************
 20677 ;; Defined at:
 20678 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20679 ;; Parameters:    Size  Location     Type
 20680 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 20681 ;;		 -> STR_1(6), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20682 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 20683 ;;  dir             1   52[BANK0 ] unsigned char 
 20684 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 20685 ;;  key             2   57[BANK0 ] PTR unsigned char 
 20686 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20687 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 20688 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 20689 ;;		 -> macBuffer(271), radioBuffer(271), 
 20690 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 20691 ;; Auto vars:     Size  Location     Type
 20692 ;;  j               1   72[BANK0 ] unsigned char 
 20693 ;;  i               1   71[BANK0 ] unsigned char 
 20694 ;;  k               1   70[BANK0 ] unsigned char 
 20695 ;; Return value:  Size  Location     Type
 20696 ;;                  1    wreg      void 
 20697 ;; Registers used:
 20698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20699 ;; Tracked objects:
 20700 ;;		On entry : 0/0
 20701 ;;		On exit  : 0/0
 20702 ;;		Unchanged: 0/0
 20703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20704 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20705 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20706 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20707 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;Total ram usage:       24 bytes
 20709 ;; Hardware stack levels used:    1
 20710 ;; Hardware stack levels required when called:   10
 20711 ;; This function calls:
 20712 ;;		_AESEncodeLoRa
 20713 ;;		_AssembleEncryptionBlock
 20714 ;;		___awdiv
 20715 ;; This function is called by:
 20716 ;;		_LORAWAN_RxDone
 20717 ;;		_AssemblePacket
 20718 ;; This function uses a non-reentrant model
 20719 ;;
 20720                           
 20721                           	psect	text93
 20722  00428A                     __ptext93:
 20723                           	opt stack 0
 20724  00428A                     _EncryptFRMPayload:
 20725                           	opt stack 18
 20726                           
 20727                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 20728                           
 20729                           ; BSR set to: 0
 20730                           ;incstack = 0
 20731  00428A  0E00               	movlw	0
 20732  00428C  0100               	movlb	0	; () banked
 20733  00428E  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 20734  004290  0E00               	movlw	0
 20735  004292  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 20736  004294  0E00               	movlw	0
 20737  004296  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;lorawan.c: 2209: k = bufferLength / 16;
 20741  004298  C093  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20742  00429C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 20743  00429E  0E00               	movlw	0
 20744  0042A0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 20745  0042A2  0E10               	movlw	16
 20746  0042A4  6F62               	movwf	___awdiv@divisor& (0+255),b
 20747  0042A6  EC09  F039         	call	___awdiv	;wreg free
 20748  0042AA  0100               	movlb	0	; () banked
 20749  0042AC  5160               	movf	?___awdiv& (0+255),w,b
 20750  0042AE  6FA6               	movwf	EncryptFRMPayload@k& (0+255),b
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20754  0042B0  0E01               	movlw	1
 20755  0042B2  6FA7               	movwf	EncryptFRMPayload@i& (0+255),b
 20756  0042B4  D06D               	goto	l2432
 20757  0042B6                     
 20758                           ; BSR set to: 0
 20759                           ;lorawan.c: 2211: {
 20760                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20761                           
 20762                           ; BSR set to: 0
 20763  0042B6  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20764  0042BA  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20765  0042BE  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20766  0042C2  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20767  0042C6  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20768  0042CA  0E01               	movlw	1
 20769  0042CC  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20770  0042CE  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20771  0042D2  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20772  0042D4  EC09  F030         	call	_AssembleEncryptionBlock
 20773                           
 20774                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20775  0042D8  0EB0               	movlw	low _aesBuffer
 20776  0042DA  0100               	movlb	0	; () banked
 20777  0042DC  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 20778  0042DE  0E01               	movlw	high _aesBuffer
 20779  0042E0  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20780  0042E2  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20781  0042E6  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20782  0042EA  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 20783                           
 20784                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20785  0042EE  0E00               	movlw	0
 20786  0042F0  0100               	movlb	0	; () banked
 20787  0042F2  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 20788  0042F4                     l13907:
 20789                           
 20790                           ; BSR set to: 0
 20791  0042F4  0E0F               	movlw	15
 20792  0042F6  65A8               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20793  0042F8  D001               	goto	l2434
 20794  0042FA  D049               	goto	u16230
 20795  0042FC                     l2434:
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;lorawan.c: 2216: {
 20799                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 20800                           
 20801                           ; BSR set to: 0
 20802  0042FC  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20803  0042FE  0D01               	mullw	1
 20804  004300  50F3               	movf	prodl,w,c
 20805  004302  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20806  004304  6ED9               	movwf	fsr2l,c
 20807  004306  50F4               	movf	prodh,w,c
 20808  004308  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20809  00430A  6EDA               	movwf	fsr2h,c
 20810  00430C  0EF0               	movlw	240
 20811  00430E  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 20812  004310  0EFF               	movlw	255
 20813  004312  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 20814  004314  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 20815  004316  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20816  004318  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 20817  00431A  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20818  00431C  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20819  00431E  0EF0               	movlw	240
 20820  004320  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20821  004322  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20822  004324  0B0F               	andlw	15
 20823  004326  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 20824  004328  0EF0               	movlw	240
 20825  00432A  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20826  00432C  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 20827  00432E  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20828  004330  0E00               	movlw	0
 20829  004332  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20830  004334  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 20831  004336  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20832  004338  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20833  00433A  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20834  00433C  C091  F0A3         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+4
 20835  004340  C092  F0A4         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+5
 20836  004344  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20837  004346  27A3               	addwf	(??_EncryptFRMPayload+4)& (0+255),f,b
 20838  004348  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 20839  00434A  23A4               	addwfc	(??_EncryptFRMPayload+5)& (0+255),f,b
 20840  00434C  C0A3  FFF6         	movff	??_EncryptFRMPayload+4,tblptrl
 20841  004350  C0A4  FFF7         	movff	??_EncryptFRMPayload+5,tblptrh
 20842  004354  0E00               	movlw	low (__mediumconst shr (0+16))
 20843  004356  6EF8               	movwf	tblptru,c
 20844  004358  0E0F               	movlw	(high __ramtop+-1)
 20845  00435A  64F7               	cpfsgt	tblptrh,c
 20846  00435C  D003               	bra	u16227
 20847  00435E  0008               	tblrd		*
 20848  004360  50F5               	movf	tablat,w,c
 20849  004362  D005               	bra	u16220
 20850  004364                     u16227:
 20851  004364  CFF6 FFE9          	movff	tblptrl,fsr0l
 20852  004368  CFF7 FFEA          	movff	tblptrh,fsr0h
 20853  00436C  50EF               	movf	indf0,w,c
 20854  00436E                     u16220:
 20855  00436E  0100               	movlb	0	; () banked
 20856  004370  6FA5               	movwf	(??_EncryptFRMPayload+6)& (0+255),b
 20857  004372  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 20858  004374  0D01               	mullw	1
 20859  004376  0EB0               	movlw	low _aesBuffer
 20860  004378  24F3               	addwf	prodl,w,c
 20861  00437A  6EE9               	movwf	fsr0l,c
 20862  00437C  0E01               	movlw	high _aesBuffer
 20863  00437E  20F4               	addwfc	prodh,w,c
 20864  004380  6EEA               	movwf	fsr0h,c
 20865  004382  50EF               	movf	indf0,w,c
 20866  004384  19A5               	xorwf	(??_EncryptFRMPayload+6)& (0+255),w,b
 20867  004386  6EDF               	movwf	indf2,c
 20868                           
 20869                           ; BSR set to: 0
 20870  004388  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20871                           
 20872                           ; BSR set to: 0
 20873  00438A  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 20874  00438C  D7B3               	goto	l13907
 20875  00438E                     u16230:
 20876                           
 20877                           ; BSR set to: 0
 20878                           
 20879                           ; BSR set to: 0
 20880  00438E  2BA7               	incf	EncryptFRMPayload@i& (0+255),f,b
 20881  004390                     l2432:
 20882                           
 20883                           ; BSR set to: 0
 20884                           
 20885                           ; BSR set to: 0
 20886  004390  51A7               	movf	EncryptFRMPayload@i& (0+255),w,b
 20887  004392  5DA6               	subwf	EncryptFRMPayload@k& (0+255),w,b
 20888  004394  B0D8               	btfsc	status,0,c
 20889  004396  D78F               	goto	l2433
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;lorawan.c: 2218: }
 20893                           ;lorawan.c: 2219: }
 20894                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 20895                           
 20896                           ; BSR set to: 0
 20897  004398  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20898  00439C  0E0F               	movlw	15
 20899  00439E  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20900  0043A0  B4D8               	btfsc	status,2,c
 20901  0043A2  0012               	return	
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;lorawan.c: 2222: {
 20905                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20906  0043A4  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20907  0043A8  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20908  0043AC  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20909  0043B0  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20910  0043B4  C0A7  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20911  0043B8  0E01               	movlw	1
 20912  0043BA  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20913  0043BC  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20914  0043C0  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20915  0043C2  EC09  F030         	call	_AssembleEncryptionBlock
 20916                           
 20917                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 20918  0043C6  0EB0               	movlw	low _aesBuffer
 20919  0043C8  0100               	movlb	0	; () banked
 20920  0043CA  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 20921  0043CC  0E01               	movlw	high _aesBuffer
 20922  0043CE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20923  0043D0  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20924  0043D4  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20925  0043D8  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 20926                           
 20927                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 20928  0043DC  0E00               	movlw	0
 20929  0043DE  0100               	movlb	0	; () banked
 20930  0043E0  6FA8               	movwf	EncryptFRMPayload@j& (0+255),b
 20931  0043E2  D036               	goto	l2438
 20932  0043E4                     
 20933                           ; BSR set to: 0
 20934                           ;lorawan.c: 2227: {
 20935                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 20936                           
 20937                           ; BSR set to: 0
 20938  0043E4  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20939  0043E6  0D01               	mullw	1
 20940  0043E8  50F3               	movf	prodl,w,c
 20941  0043EA  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20942  0043EC  6ED9               	movwf	fsr2l,c
 20943  0043EE  50F4               	movf	prodh,w,c
 20944  0043F0  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20945  0043F2  6EDA               	movwf	fsr2h,c
 20946  0043F4  51A6               	movf	EncryptFRMPayload@k& (0+255),w,b
 20947  0043F6  0D10               	mullw	16
 20948  0043F8  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 20949  0043FA  26F3               	addwf	prodl,f,c
 20950  0043FC  0E00               	movlw	0
 20951  0043FE  22F4               	addwfc	prodh,f,c
 20952  004400  C091  F09F         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 20953  004404  C092  F0A0         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 20954  004408  50F3               	movf	prodl,w,c
 20955  00440A  279F               	addwf	??_EncryptFRMPayload& (0+255),f,b
 20956  00440C  50F4               	movf	prodh,w,c
 20957  00440E  23A0               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 20958  004410  C09F  FFF6         	movff	??_EncryptFRMPayload,tblptrl
 20959  004414  C0A0  FFF7         	movff	??_EncryptFRMPayload+1,tblptrh
 20960  004418  0E00               	movlw	low (__mediumconst shr (0+16))
 20961  00441A  6EF8               	movwf	tblptru,c
 20962  00441C  0E0F               	movlw	(high __ramtop+-1)
 20963  00441E  64F7               	cpfsgt	tblptrh,c
 20964  004420  D003               	bra	u16267
 20965  004422  0008               	tblrd		*
 20966  004424  50F5               	movf	tablat,w,c
 20967  004426  D005               	bra	u16260
 20968  004428                     u16267:
 20969  004428  CFF6 FFE9          	movff	tblptrl,fsr0l
 20970  00442C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20971  004430  50EF               	movf	indf0,w,c
 20972  004432                     u16260:
 20973  004432  0100               	movlb	0	; () banked
 20974  004434  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20975  004436  51A8               	movf	EncryptFRMPayload@j& (0+255),w,b
 20976  004438  0D01               	mullw	1
 20977  00443A  0EB0               	movlw	low _aesBuffer
 20978  00443C  24F3               	addwf	prodl,w,c
 20979  00443E  6EE9               	movwf	fsr0l,c
 20980  004440  0E01               	movlw	high _aesBuffer
 20981  004442  20F4               	addwfc	prodh,w,c
 20982  004444  6EEA               	movwf	fsr0h,c
 20983  004446  50EF               	movf	indf0,w,c
 20984  004448  19A1               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20985  00444A  6EDF               	movwf	indf2,c
 20986                           
 20987                           ; BSR set to: 0
 20988  00444C  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20989                           
 20990                           ; BSR set to: 0
 20991  00444E  2BA8               	incf	EncryptFRMPayload@j& (0+255),f,b
 20992  004450                     l2438:
 20993                           
 20994                           ; BSR set to: 0
 20995                           
 20996                           ; BSR set to: 0
 20997  004450  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20998  004454  0E0F               	movlw	15
 20999  004456  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 21000  004458  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 21001  00445A  5DA8               	subwf	EncryptFRMPayload@j& (0+255),w,b
 21002  00445C  B0D8               	btfsc	status,0,c
 21003  00445E  0012               	return	
 21004  004460  D7C1               	goto	l2439
 21005  004462                     __end_of_EncryptFRMPayload:
 21006                           	opt stack 0
 21007                           tosu	equ	0xFFF
 21008                           tosh	equ	0xFFE
 21009                           tosl	equ	0xFFD
 21010                           pclath	equ	0xFFA
 21011                           tblptru	equ	0xFF8
 21012                           tblptrh	equ	0xFF7
 21013                           tblptrl	equ	0xFF6
 21014                           tablat	equ	0xFF5
 21015                           prodh	equ	0xFF4
 21016                           prodl	equ	0xFF3
 21017                           intcon	equ	0xFF2
 21018                           intcon2	equ	0xFF1
 21019                           intcon3	equ	0xFF0
 21020                           indf0	equ	0xFEF
 21021                           postinc0	equ	0xFEE
 21022                           fsr0h	equ	0xFEA
 21023                           fsr0l	equ	0xFE9
 21024                           wreg	equ	0xFE8
 21025                           postinc1	equ	0xFE6
 21026                           postdec1	equ	0xFE5
 21027                           plusw1	equ	0xFE3
 21028                           fsr1h	equ	0xFE2
 21029                           fsr1l	equ	0xFE1
 21030                           indf2	equ	0xFDF
 21031                           postinc2	equ	0xFDE
 21032                           postdec2	equ	0xFDD
 21033                           plusw2	equ	0xFDB
 21034                           fsr2h	equ	0xFDA
 21035                           fsr2l	equ	0xFD9
 21036                           status	equ	0xFD8
 21037                           
 21038 ;; *************** function ___awdiv *****************
 21039 ;; Defined at:
 21040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;  dividend        2    0[BANK0 ] int 
 21043 ;;  divisor         2    2[BANK0 ] int 
 21044 ;; Auto vars:     Size  Location     Type
 21045 ;;  quotient        2    6[BANK0 ] int 
 21046 ;;  sign            1    5[BANK0 ] unsigned char 
 21047 ;;  counter         1    4[BANK0 ] unsigned char 
 21048 ;; Return value:  Size  Location     Type
 21049 ;;                  2    0[BANK0 ] int 
 21050 ;; Registers used:
 21051 ;;		wreg, status,2, status,0
 21052 ;; Tracked objects:
 21053 ;;		On entry : 0/0
 21054 ;;		On exit  : 0/0
 21055 ;;		Unchanged: 0/0
 21056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21058 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21060 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21061 ;;Total ram usage:        8 bytes
 21062 ;; Hardware stack levels used:    1
 21063 ;; Hardware stack levels required when called:    7
 21064 ;; This function calls:
 21065 ;;		Nothing
 21066 ;; This function is called by:
 21067 ;;		_EncryptFRMPayload
 21068 ;; This function uses a non-reentrant model
 21069 ;;
 21070                           
 21071                           	psect	text94
 21072  007212                     __ptext94:
 21073                           	opt stack 0
 21074  007212                     ___awdiv:
 21075                           	opt stack 20
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;incstack = 0
 21079  007212  0E00               	movlw	0
 21080  007214  0100               	movlb	0	; () banked
 21081  007216  6F65               	movwf	___awdiv@sign& (0+255),b
 21082                           
 21083                           ; BSR set to: 0
 21084  007218  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21085  00721A  D006               	goto	l2663
 21086                           
 21087                           ; BSR set to: 0
 21088  00721C  6D62               	negf	___awdiv@divisor& (0+255),b
 21089  00721E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 21090  007220  B0D8               	btfsc	status,0,c
 21091  007222  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 21092                           
 21093                           ; BSR set to: 0
 21094  007224  0E01               	movlw	1
 21095  007226  6F65               	movwf	___awdiv@sign& (0+255),b
 21096  007228                     l2663:
 21097                           
 21098                           ; BSR set to: 0
 21099                           
 21100                           ; BSR set to: 0
 21101  007228  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 21102  00722A  D006               	goto	l2664
 21103                           
 21104                           ; BSR set to: 0
 21105  00722C  6D60               	negf	___awdiv@dividend& (0+255),b
 21106  00722E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 21107  007230  B0D8               	btfsc	status,0,c
 21108  007232  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 0
 21111  007234  0E01               	movlw	1
 21112  007236  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 21113  007238                     l2664:
 21114                           
 21115                           ; BSR set to: 0
 21116                           
 21117                           ; BSR set to: 0
 21118  007238  0E00               	movlw	0
 21119  00723A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 21120  00723C  0E00               	movlw	0
 21121  00723E  6F66               	movwf	___awdiv@quotient& (0+255),b
 21122                           
 21123                           ; BSR set to: 0
 21124  007240  5162               	movf	___awdiv@divisor& (0+255),w,b
 21125  007242  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 21126  007244  B4D8               	btfsc	status,2,c
 21127  007246  D01C               	goto	l2671
 21128                           
 21129                           ; BSR set to: 0
 21130  007248  0E01               	movlw	1
 21131  00724A  6F64               	movwf	___awdiv@counter& (0+255),b
 21132  00724C  D004               	goto	l2666
 21133  00724E                     
 21134                           ; BSR set to: 0
 21135                           
 21136                           ; BSR set to: 0
 21137  00724E  90D8               	bcf	status,0,c
 21138  007250  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 21139  007252  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 21140  007254  2B64               	incf	___awdiv@counter& (0+255),f,b
 21141  007256                     l2666:
 21142                           
 21143                           ; BSR set to: 0
 21144                           
 21145                           ; BSR set to: 0
 21146  007256  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21147  007258  D7FA               	goto	l2667
 21148  00725A                     u15380:
 21149                           
 21150                           ; BSR set to: 0
 21151                           
 21152                           ; BSR set to: 0
 21153                           
 21154                           ; BSR set to: 0
 21155  00725A  90D8               	bcf	status,0,c
 21156  00725C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 21157  00725E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 21158                           
 21159                           ; BSR set to: 0
 21160  007260  5162               	movf	___awdiv@divisor& (0+255),w,b
 21161  007262  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 21162  007264  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21163  007266  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 21164  007268  A0D8               	btfss	status,0,c
 21165  00726A  D005               	goto	l2670
 21166                           
 21167                           ; BSR set to: 0
 21168  00726C  5162               	movf	___awdiv@divisor& (0+255),w,b
 21169  00726E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 21170  007270  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21171  007272  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 21172                           
 21173                           ; BSR set to: 0
 21174  007274  8166               	bsf	___awdiv@quotient& (0+255),0,b
 21175  007276                     l2670:
 21176                           
 21177                           ; BSR set to: 0
 21178                           
 21179                           ; BSR set to: 0
 21180  007276  90D8               	bcf	status,0,c
 21181  007278  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 21182  00727A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 21183                           
 21184                           ; BSR set to: 0
 21185  00727C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 21186  00727E  D7ED               	goto	u15380
 21187  007280                     l2671:
 21188                           
 21189                           ; BSR set to: 0
 21190                           
 21191                           ; BSR set to: 0
 21192                           
 21193                           ; BSR set to: 0
 21194  007280  5165               	movf	___awdiv@sign& (0+255),w,b
 21195  007282  B4D8               	btfsc	status,2,c
 21196  007284  D004               	goto	l2672
 21197                           
 21198                           ; BSR set to: 0
 21199  007286  6D66               	negf	___awdiv@quotient& (0+255),b
 21200  007288  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 21201  00728A  B0D8               	btfsc	status,0,c
 21202  00728C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 21203  00728E                     l2672:
 21204                           
 21205                           ; BSR set to: 0
 21206                           
 21207                           ; BSR set to: 0
 21208  00728E  C066  F060         	movff	___awdiv@quotient,?___awdiv
 21209  007292  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 21210  007296  0012               	return	
 21211  007298                     __end_of___awdiv:
 21212                           	opt stack 0
 21213                           tosu	equ	0xFFF
 21214                           tosh	equ	0xFFE
 21215                           tosl	equ	0xFFD
 21216                           pclath	equ	0xFFA
 21217                           tblptru	equ	0xFF8
 21218                           tblptrh	equ	0xFF7
 21219                           tblptrl	equ	0xFF6
 21220                           tablat	equ	0xFF5
 21221                           prodh	equ	0xFF4
 21222                           prodl	equ	0xFF3
 21223                           intcon	equ	0xFF2
 21224                           intcon2	equ	0xFF1
 21225                           intcon3	equ	0xFF0
 21226                           indf0	equ	0xFEF
 21227                           postinc0	equ	0xFEE
 21228                           fsr0h	equ	0xFEA
 21229                           fsr0l	equ	0xFE9
 21230                           wreg	equ	0xFE8
 21231                           postinc1	equ	0xFE6
 21232                           postdec1	equ	0xFE5
 21233                           plusw1	equ	0xFE3
 21234                           fsr1h	equ	0xFE2
 21235                           fsr1l	equ	0xFE1
 21236                           indf2	equ	0xFDF
 21237                           postinc2	equ	0xFDE
 21238                           postdec2	equ	0xFDD
 21239                           plusw2	equ	0xFDB
 21240                           fsr2h	equ	0xFDA
 21241                           fsr2l	equ	0xFD9
 21242                           status	equ	0xFD8
 21243                           
 21244 ;; *************** function _AssembleEncryptionBlock *****************
 21245 ;; Defined at:
 21246 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21247 ;; Parameters:    Size  Location     Type
 21248 ;;  dir             1    wreg     unsigned char 
 21249 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 21250 ;;  blockId         1   15[BANK0 ] unsigned char 
 21251 ;;  firstByte       1   16[BANK0 ] unsigned char 
 21252 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 21253 ;; Auto vars:     Size  Location     Type
 21254 ;;  dir             1   18[BANK0 ] unsigned char 
 21255 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 21256 ;; Return value:  Size  Location     Type
 21257 ;;                  1    wreg      void 
 21258 ;; Registers used:
 21259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21260 ;; Tracked objects:
 21261 ;;		On entry : 0/0
 21262 ;;		On exit  : 0/0
 21263 ;;		Unchanged: 0/0
 21264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21265 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21268 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21269 ;;Total ram usage:        9 bytes
 21270 ;; Hardware stack levels used:    1
 21271 ;; Hardware stack levels required when called:    8
 21272 ;; This function calls:
 21273 ;;		_memcpy
 21274 ;;		_memset
 21275 ;; This function is called by:
 21276 ;;		_LORAWAN_RxDone
 21277 ;;		_AssemblePacket
 21278 ;;		_EncryptFRMPayload
 21279 ;; This function uses a non-reentrant model
 21280 ;;
 21281                           
 21282                           	psect	text95
 21283  006012                     __ptext95:
 21284                           	opt stack 0
 21285  006012                     _AssembleEncryptionBlock:
 21286                           	opt stack 19
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;incstack = 0
 21290                           ;AssembleEncryptionBlock@dir stored from wreg
 21291  006012  0100               	movlb	0	; () banked
 21292  006014  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 21293                           
 21294                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 21295  006016  0E00               	movlw	0
 21296  006018  0100               	movlb	0	; () banked
 21297  00601A  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 21301  00601C  0EB0               	movlw	low _aesBuffer
 21302  00601E  6F60               	movwf	memset@p1& (0+255),b
 21303  006020  0E01               	movlw	high _aesBuffer
 21304  006022  6F61               	movwf	(memset@p1+1)& (0+255),b
 21305  006024  0E00               	movlw	0
 21306  006026  6F63               	movwf	(memset@c+1)& (0+255),b
 21307  006028  0E00               	movlw	0
 21308  00602A  6F62               	movwf	memset@c& (0+255),b
 21309  00602C  0E00               	movlw	0
 21310  00602E  6F65               	movwf	(memset@n+1)& (0+255),b
 21311  006030  0E10               	movlw	16
 21312  006032  6F64               	movwf	memset@n& (0+255),b
 21313  006034  EC6B  F042         	call	_memset	;wreg free
 21314                           
 21315                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 21316  006038  0100               	movlb	0	; () banked
 21317  00603A  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21318  00603C  0D01               	mullw	1
 21319  00603E  0EB0               	movlw	low _aesBuffer
 21320  006040  24F3               	addwf	prodl,w,c
 21321  006042  6ED9               	movwf	fsr2l,c
 21322  006044  0E01               	movlw	high _aesBuffer
 21323  006046  20F4               	addwfc	prodh,w,c
 21324  006048  6EDA               	movwf	fsr2h,c
 21325  00604A  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 21329  00604E  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21330  006050  0F05               	addlw	5
 21331  006052  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 21335  006054  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21336  006056  0D01               	mullw	1
 21337  006058  0EB0               	movlw	low _aesBuffer
 21338  00605A  24F3               	addwf	prodl,w,c
 21339  00605C  6ED9               	movwf	fsr2l,c
 21340  00605E  0E01               	movlw	high _aesBuffer
 21341  006060  20F4               	addwfc	prodh,w,c
 21342  006062  6EDA               	movwf	fsr2h,c
 21343  006064  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 21344                           
 21345                           ; BSR set to: 0
 21346  006068  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21347                           
 21348                           ; BSR set to: 0
 21349                           ;lorawan.c: 2168: if (0 == multicastStatus)
 21350  00606A  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 21351  00606C  A4D8               	btfss	status,2,c
 21352  00606E  D013               	goto	l2421
 21353                           
 21354                           ; BSR set to: 0
 21355                           ;lorawan.c: 2169: {
 21356                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 21357  006070  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21358  006072  0D01               	mullw	1
 21359  006074  0EB0               	movlw	low _aesBuffer
 21360  006076  24F3               	addwf	prodl,w,c
 21361  006078  6F60               	movwf	memcpy@d1& (0+255),b
 21362  00607A  0E01               	movlw	high _aesBuffer
 21363  00607C  20F4               	addwfc	prodh,w,c
 21364  00607E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21365  006080  0E1E               	movlw	low (_loRa+30)
 21366  006082  6F62               	movwf	memcpy@s1& (0+255),b
 21367  006084  0E02               	movlw	high (_loRa+30)
 21368  006086  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21369  006088  0E00               	movlw	0
 21370  00608A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21371  00608C  0E04               	movlw	4
 21372  00608E  6F64               	movwf	memcpy@n& (0+255),b
 21373  006090  EC37  F03D         	call	_memcpy	;wreg free
 21374  006094  D012               	goto	l13397
 21375  006096                     l2421:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;lorawan.c: 2173: else
 21379                           ;lorawan.c: 2174: {
 21380                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 21381                           
 21382                           ; BSR set to: 0
 21383  006096  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21384  006098  0D01               	mullw	1
 21385  00609A  0EB0               	movlw	low _aesBuffer
 21386  00609C  24F3               	addwf	prodl,w,c
 21387  00609E  6F60               	movwf	memcpy@d1& (0+255),b
 21388  0060A0  0E01               	movlw	high _aesBuffer
 21389  0060A2  20F4               	addwfc	prodh,w,c
 21390  0060A4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21391  0060A6  0E62               	movlw	low (_loRa+98)
 21392  0060A8  6F62               	movwf	memcpy@s1& (0+255),b
 21393  0060AA  0E02               	movlw	high (_loRa+98)
 21394  0060AC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21395  0060AE  0E00               	movlw	0
 21396  0060B0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21397  0060B2  0E04               	movlw	4
 21398  0060B4  6F64               	movwf	memcpy@n& (0+255),b
 21399  0060B6  EC37  F03D         	call	_memcpy	;wreg free
 21400  0060BA                     l13397:
 21401                           
 21402                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 21403  0060BA  0100               	movlb	0	; () banked
 21404  0060BC  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21405  0060BE  0F04               	addlw	4
 21406  0060C0  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;lorawan.c: 2177: }
 21410                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 21411                           
 21412                           ; BSR set to: 0
 21413  0060C2  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21414  0060C4  0D01               	mullw	1
 21415  0060C6  0EB0               	movlw	low _aesBuffer
 21416  0060C8  24F3               	addwf	prodl,w,c
 21417  0060CA  6F60               	movwf	memcpy@d1& (0+255),b
 21418  0060CC  0E01               	movlw	high _aesBuffer
 21419  0060CE  20F4               	addwfc	prodh,w,c
 21420  0060D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21421  0060D2  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 21422  0060D4  6F62               	movwf	memcpy@s1& (0+255),b
 21423  0060D6  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 21424  0060D8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21425  0060DA  0E00               	movlw	0
 21426  0060DC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21427  0060DE  0E04               	movlw	4
 21428  0060E0  6F64               	movwf	memcpy@n& (0+255),b
 21429  0060E2  EC37  F03D         	call	_memcpy	;wreg free
 21430                           
 21431                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 21432  0060E6  0100               	movlb	0	; () banked
 21433  0060E8  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21434  0060EA  0F04               	addlw	4
 21435  0060EC  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;lorawan.c: 2182: bufferIndex ++;
 21439  0060EE  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 21443  0060F0  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21444  0060F2  0D01               	mullw	1
 21445  0060F4  0EB0               	movlw	low _aesBuffer
 21446  0060F6  24F3               	addwf	prodl,w,c
 21447  0060F8  6ED9               	movwf	fsr2l,c
 21448  0060FA  0E01               	movlw	high _aesBuffer
 21449  0060FC  20F4               	addwfc	prodh,w,c
 21450  0060FE  6EDA               	movwf	fsr2h,c
 21451  006100  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 21452                           
 21453                           ; BSR set to: 0
 21454  006104  0012               	return		;funcret
 21455  006106                     __end_of_AssembleEncryptionBlock:
 21456                           	opt stack 0
 21457                           tosu	equ	0xFFF
 21458                           tosh	equ	0xFFE
 21459                           tosl	equ	0xFFD
 21460                           pclath	equ	0xFFA
 21461                           tblptru	equ	0xFF8
 21462                           tblptrh	equ	0xFF7
 21463                           tblptrl	equ	0xFF6
 21464                           tablat	equ	0xFF5
 21465                           prodh	equ	0xFF4
 21466                           prodl	equ	0xFF3
 21467                           intcon	equ	0xFF2
 21468                           intcon2	equ	0xFF1
 21469                           intcon3	equ	0xFF0
 21470                           indf0	equ	0xFEF
 21471                           postinc0	equ	0xFEE
 21472                           fsr0h	equ	0xFEA
 21473                           fsr0l	equ	0xFE9
 21474                           wreg	equ	0xFE8
 21475                           postinc1	equ	0xFE6
 21476                           postdec1	equ	0xFE5
 21477                           plusw1	equ	0xFE3
 21478                           fsr1h	equ	0xFE2
 21479                           fsr1l	equ	0xFE1
 21480                           indf2	equ	0xFDF
 21481                           postinc2	equ	0xFDE
 21482                           postdec2	equ	0xFDD
 21483                           plusw2	equ	0xFDB
 21484                           fsr2h	equ	0xFDA
 21485                           fsr2l	equ	0xFD9
 21486                           status	equ	0xFD8
 21487                           
 21488 ;; *************** function _CountfOptsLength *****************
 21489 ;; Defined at:
 21490 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;		None
 21493 ;; Auto vars:     Size  Location     Type
 21494 ;;  i               1    7[BANK0 ] unsigned char 
 21495 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 21496 ;; Return value:  Size  Location     Type
 21497 ;;                  1    wreg      unsigned char 
 21498 ;; Registers used:
 21499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21500 ;; Tracked objects:
 21501 ;;		On entry : 0/0
 21502 ;;		On exit  : 0/0
 21503 ;;		Unchanged: 0/0
 21504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21507 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21508 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21509 ;;Total ram usage:        8 bytes
 21510 ;; Hardware stack levels used:    1
 21511 ;; Hardware stack levels required when called:    7
 21512 ;; This function calls:
 21513 ;;		Nothing
 21514 ;; This function is called by:
 21515 ;;		_LORAWAN_GetMaxPayloadSize
 21516 ;;		_AssemblePacket
 21517 ;; This function uses a non-reentrant model
 21518 ;;
 21519                           
 21520                           	psect	text96
 21521  006816                     __ptext96:
 21522                           	opt stack 0
 21523  006816                     _CountfOptsLength:
 21524                           	opt stack 21
 21525                           
 21526                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;incstack = 0
 21530  006816  0E00               	movlw	0
 21531  006818  0100               	movlb	0	; () banked
 21532  00681A  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 21533                           
 21534                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21535  00681C  0E00               	movlw	0
 21536  00681E  6F67               	movwf	CountfOptsLength@i& (0+255),b
 21537  006820  D057               	goto	l2412
 21538  006822                     
 21539                           ; BSR set to: 0
 21540                           ;lorawan.c: 2139: {
 21541                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21542                           
 21543                           ; BSR set to: 0
 21544  006822  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21545  006824  0D02               	mullw	2
 21546  006826  0EA8               	movlw	low (_loRa+168)
 21547  006828  24F3               	addwf	prodl,w,c
 21548  00682A  6ED9               	movwf	fsr2l,c
 21549  00682C  0E02               	movlw	high (_loRa+168)
 21550  00682E  20F4               	addwfc	prodh,w,c
 21551  006830  6EDA               	movwf	fsr2h,c
 21552  006832  28DE               	incf	postinc2,w,c
 21553  006834  B4D8               	btfsc	status,2,c
 21554  006836  D04B               	goto	l2416
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;lorawan.c: 2141: {
 21558                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 21559  006838  0EFE               	movlw	254
 21560  00683A  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21561  00683C  0EFF               	movlw	255
 21562  00683E  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21563  006840  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21564  006842  0D02               	mullw	2
 21565  006844  0EA8               	movlw	low (_loRa+168)
 21566  006846  24F3               	addwf	prodl,w,c
 21567  006848  6ED9               	movwf	fsr2l,c
 21568  00684A  0E02               	movlw	high (_loRa+168)
 21569  00684C  20F4               	addwfc	prodh,w,c
 21570  00684E  6EDA               	movwf	fsr2h,c
 21571  006850  50DF               	movf	indf2,w,c
 21572  006852  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21573  006854  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21574  006856  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21575  006858  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21576  00685A  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21577  00685C  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21578  00685E  0E81               	movlw	low _macEndDevCmdReplyLen
 21579  006860  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21580  006862  6EF6               	movwf	tblptrl,c
 21581  006864  0EFF               	movlw	high _macEndDevCmdReplyLen
 21582  006866  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21583  006868  6EF7               	movwf	tblptrh,c
 21584  00686A                     	if	1	;There are 3 active tblptr bytes
 21585  00686A  6AF8               	clrf	tblptru,c
 21586  00686C  0E00               	movlw	low (__mediumconst shr (0+16))
 21587  00686E  22F8               	addwfc	tblptru,f,c
 21588  006870                     	endif
 21589  006870  0008               	tblrd		*
 21590  006872  50F5               	movf	tablat,w,c
 21591  006874  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21592  006878  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 21593  00687A  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21594  00687C  0E00               	movlw	0
 21595  00687E  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21596  006880  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21597  006882  D006               	goto	u16290
 21598  006884  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21599  006886  E12A               	bnz	l13949
 21600  006888  0E10               	movlw	16
 21601  00688A  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21602  00688C  B0D8               	btfsc	status,0,c
 21603  00688E  D026               	goto	u16300
 21604  006890                     u16290:
 21605                           
 21606                           ; BSR set to: 0
 21607                           ;lorawan.c: 2143: {
 21608                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 21609  006890  0EFE               	movlw	254
 21610  006892  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21611  006894  0EFF               	movlw	255
 21612  006896  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21613  006898  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21614  00689A  0D02               	mullw	2
 21615  00689C  0EA8               	movlw	low (_loRa+168)
 21616  00689E  24F3               	addwf	prodl,w,c
 21617  0068A0  6ED9               	movwf	fsr2l,c
 21618  0068A2  0E02               	movlw	high (_loRa+168)
 21619  0068A4  20F4               	addwfc	prodh,w,c
 21620  0068A6  6EDA               	movwf	fsr2h,c
 21621  0068A8  50DF               	movf	indf2,w,c
 21622  0068AA  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21623  0068AC  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21624  0068AE  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21625  0068B0  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21626  0068B2  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21627  0068B4  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21628  0068B6  0E81               	movlw	low _macEndDevCmdReplyLen
 21629  0068B8  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21630  0068BA  6EF6               	movwf	tblptrl,c
 21631  0068BC  0EFF               	movlw	high _macEndDevCmdReplyLen
 21632  0068BE  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21633  0068C0  6EF7               	movwf	tblptrh,c
 21634  0068C2                     	if	1	;There are 3 active tblptr bytes
 21635  0068C2  6AF8               	clrf	tblptru,c
 21636  0068C4  0E00               	movlw	low (__mediumconst shr (0+16))
 21637  0068C6  22F8               	addwfc	tblptru,f,c
 21638  0068C8                     	endif
 21639  0068C8  0008               	tblrd		*
 21640  0068CA  50F5               	movf	tablat,w,c
 21641  0068CC  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21642  0068CE                     l2416:
 21643                           
 21644                           ; BSR set to: 0
 21645                           
 21646                           ; BSR set to: 0
 21647                           
 21648                           ; BSR set to: 0
 21649  0068CE  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21650  0068D0                     l2412:
 21651                           
 21652                           ; BSR set to: 0
 21653                           
 21654                           ; BSR set to: 0
 21655  0068D0  0102               	movlb	2	; () banked
 21656  0068D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 21657  0068D4  0100               	movlb	0	; () banked
 21658  0068D6  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21659  0068D8  A0D8               	btfss	status,0,c
 21660  0068DA  D7A3               	goto	l2413
 21661  0068DC                     u16300:
 21662  0068DC                     l13949:
 21663                           
 21664                           ; BSR set to: 0
 21665                           ;lorawan.c: 2149: }
 21666                           ;lorawan.c: 2150: }
 21667                           ;lorawan.c: 2151: }
 21668                           ;lorawan.c: 2153: return macCommandLength;
 21669  0068DC  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21670  0068DE  0012               	return	
 21671  0068E0                     __end_of_CountfOptsLength:
 21672                           	opt stack 0
 21673                           tosu	equ	0xFFF
 21674                           tosh	equ	0xFFE
 21675                           tosl	equ	0xFFD
 21676                           pclath	equ	0xFFA
 21677                           tblptru	equ	0xFF8
 21678                           tblptrh	equ	0xFF7
 21679                           tblptrl	equ	0xFF6
 21680                           tablat	equ	0xFF5
 21681                           prodh	equ	0xFF4
 21682                           prodl	equ	0xFF3
 21683                           intcon	equ	0xFF2
 21684                           intcon2	equ	0xFF1
 21685                           intcon3	equ	0xFF0
 21686                           indf0	equ	0xFEF
 21687                           postinc0	equ	0xFEE
 21688                           fsr0h	equ	0xFEA
 21689                           fsr0l	equ	0xFE9
 21690                           wreg	equ	0xFE8
 21691                           postinc1	equ	0xFE6
 21692                           postdec1	equ	0xFE5
 21693                           plusw1	equ	0xFE3
 21694                           fsr1h	equ	0xFE2
 21695                           fsr1l	equ	0xFE1
 21696                           indf2	equ	0xFDF
 21697                           postinc2	equ	0xFDE
 21698                           postdec2	equ	0xFDD
 21699                           plusw2	equ	0xFDB
 21700                           fsr2h	equ	0xFDA
 21701                           fsr2l	equ	0xFD9
 21702                           status	equ	0xFD8
 21703                           
 21704 ;; *************** function _ExtractMic *****************
 21705 ;; Defined at:
 21706 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21707 ;; Parameters:    Size  Location     Type
 21708 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21709 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21710 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21711 ;; Auto vars:     Size  Location     Type
 21712 ;;  mic             4   19[BANK0 ] unsigned long 
 21713 ;; Return value:  Size  Location     Type
 21714 ;;                  4   11[BANK0 ] unsigned long 
 21715 ;; Registers used:
 21716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21717 ;; Tracked objects:
 21718 ;;		On entry : 0/0
 21719 ;;		On exit  : 0/0
 21720 ;;		Unchanged: 0/0
 21721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21723 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21724 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21725 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21726 ;;Total ram usage:       12 bytes
 21727 ;; Hardware stack levels used:    1
 21728 ;; Hardware stack levels required when called:    8
 21729 ;; This function calls:
 21730 ;;		_memcpy
 21731 ;; This function is called by:
 21732 ;;		_LORAWAN_RxDone
 21733 ;; This function uses a non-reentrant model
 21734 ;;
 21735                           
 21736                           	psect	text97
 21737  007C40                     __ptext97:
 21738                           	opt stack 0
 21739  007C40                     _ExtractMic:
 21740                           	opt stack 18
 21741                           
 21742                           ;lorawan.c: 2189: uint32_t mic = 0;
 21743                           
 21744                           ; BSR set to: 0
 21745                           ;incstack = 0
 21746  007C40  0E00               	movlw	0
 21747  007C42  0100               	movlb	0	; () banked
 21748  007C44  6F73               	movwf	ExtractMic@mic& (0+255),b
 21749  007C46  0E00               	movlw	0
 21750  007C48  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 21751  007C4A  0E00               	movlw	0
 21752  007C4C  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 21753  007C4E  0E00               	movlw	0
 21754  007C50  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 21755                           
 21756                           ; BSR set to: 0
 21757                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21758  007C52  0E73               	movlw	low ExtractMic@mic
 21759  007C54  6F60               	movwf	memcpy@d1& (0+255),b
 21760  007C56  0E00               	movlw	high ExtractMic@mic
 21761  007C58  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21762  007C5A  0EFC               	movlw	252
 21763  007C5C  6F6F               	movwf	??_ExtractMic& (0+255),b
 21764  007C5E  0EFF               	movlw	255
 21765  007C60  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 21766  007C62  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 21767  007C64  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 21768  007C66  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 21769  007C68  516F               	movf	??_ExtractMic& (0+255),w,b
 21770  007C6A  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 21771  007C6C  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 21772  007C6E  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 21773  007C70  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 21774  007C72  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 21775  007C74  6F62               	movwf	memcpy@s1& (0+255),b
 21776  007C76  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 21777  007C78  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21778  007C7A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21779  007C7C  0E00               	movlw	0
 21780  007C7E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21781  007C80  0E04               	movlw	4
 21782  007C82  6F64               	movwf	memcpy@n& (0+255),b
 21783  007C84  EC37  F03D         	call	_memcpy	;wreg free
 21784                           
 21785                           ;lorawan.c: 2191: return mic;
 21786  007C88  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 21787  007C8C  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21788  007C90  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21789  007C94  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21790  007C98  0012               	return	
 21791  007C9A                     __end_of_ExtractMic:
 21792                           	opt stack 0
 21793                           tosu	equ	0xFFF
 21794                           tosh	equ	0xFFE
 21795                           tosl	equ	0xFFD
 21796                           pclath	equ	0xFFA
 21797                           tblptru	equ	0xFF8
 21798                           tblptrh	equ	0xFF7
 21799                           tblptrl	equ	0xFF6
 21800                           tablat	equ	0xFF5
 21801                           prodh	equ	0xFF4
 21802                           prodl	equ	0xFF3
 21803                           intcon	equ	0xFF2
 21804                           intcon2	equ	0xFF1
 21805                           intcon3	equ	0xFF0
 21806                           indf0	equ	0xFEF
 21807                           postinc0	equ	0xFEE
 21808                           fsr0h	equ	0xFEA
 21809                           fsr0l	equ	0xFE9
 21810                           wreg	equ	0xFE8
 21811                           postinc1	equ	0xFE6
 21812                           postdec1	equ	0xFE5
 21813                           plusw1	equ	0xFE3
 21814                           fsr1h	equ	0xFE2
 21815                           fsr1l	equ	0xFE1
 21816                           indf2	equ	0xFDF
 21817                           postinc2	equ	0xFDE
 21818                           postdec2	equ	0xFDD
 21819                           plusw2	equ	0xFDB
 21820                           fsr2h	equ	0xFDA
 21821                           fsr2l	equ	0xFD9
 21822                           status	equ	0xFD8
 21823                           
 21824 ;; *************** function _ComputeSessionKeys *****************
 21825 ;; Defined at:
 21826 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21827 ;; Parameters:    Size  Location     Type
 21828 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 21829 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21830 ;; Auto vars:     Size  Location     Type
 21831 ;;		None
 21832 ;; Return value:  Size  Location     Type
 21833 ;;                  1    wreg      void 
 21834 ;; Registers used:
 21835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21836 ;; Tracked objects:
 21837 ;;		On entry : 0/0
 21838 ;;		On exit  : 0/0
 21839 ;;		Unchanged: 0/0
 21840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21845 ;;Total ram usage:        2 bytes
 21846 ;; Hardware stack levels used:    1
 21847 ;; Hardware stack levels required when called:   10
 21848 ;; This function calls:
 21849 ;;		_AESEncodeLoRa
 21850 ;;		_PrepareSessionKeys
 21851 ;; This function is called by:
 21852 ;;		_LORAWAN_RxDone
 21853 ;; This function uses a non-reentrant model
 21854 ;;
 21855                           
 21856                           	psect	text98
 21857  007298                     __ptext98:
 21858                           	opt stack 0
 21859  007298                     _ComputeSessionKeys:
 21860                           	opt stack 16
 21861                           
 21862                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21863                           
 21864                           ;incstack = 0
 21865  007298  0E32               	movlw	low (_loRa+50)
 21866  00729A  0100               	movlb	0	; () banked
 21867  00729C  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21868  00729E  0E02               	movlw	high (_loRa+50)
 21869  0072A0  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21870  0072A2  0E01               	movlw	1
 21871  0072A4  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21872  0072A6  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21873  0072A8  0E00               	movlw	0
 21874  0072AA  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21875  0072AC  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21876  0072AE  0E04               	movlw	4
 21877  0072B0  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21878  0072B2  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21879  0072B4  0E00               	movlw	0
 21880  0072B6  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21881  0072B8  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21882  0072BA  EC83  F035         	call	_PrepareSessionKeys	;wreg free
 21883                           
 21884                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21885  0072BE  0E02               	movlw	2
 21886  0072C0  0102               	movlb	2	; () banked
 21887  0072C2  6F32               	movwf	(_loRa+50)& (0+255),b
 21888                           
 21889                           ; BSR set to: 2
 21890                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 21891  0072C4  0E32               	movlw	low (_loRa+50)
 21892  0072C6  0100               	movlb	0	; () banked
 21893  0072C8  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21894  0072CA  0E02               	movlw	high (_loRa+50)
 21895  0072CC  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21896  0072CE  0E42               	movlw	low (_loRa+66)
 21897  0072D0  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 21898  0072D2  0E02               	movlw	high (_loRa+66)
 21899  0072D4  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21900  0072D6  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 21901                           
 21902                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21903  0072DA  0E22               	movlw	low (_loRa+34)
 21904  0072DC  0100               	movlb	0	; () banked
 21905  0072DE  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21906  0072E0  0E02               	movlw	high (_loRa+34)
 21907  0072E2  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21908  0072E4  0E01               	movlw	1
 21909  0072E6  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21910  0072E8  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21911  0072EA  0E00               	movlw	0
 21912  0072EC  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21913  0072EE  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21914  0072F0  0E04               	movlw	4
 21915  0072F2  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21916  0072F4  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21917  0072F6  0E00               	movlw	0
 21918  0072F8  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21919  0072FA  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21920  0072FC  EC83  F035         	call	_PrepareSessionKeys	;wreg free
 21921                           
 21922                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 21923  007300  0E01               	movlw	1
 21924  007302  0102               	movlb	2	; () banked
 21925  007304  6F22               	movwf	(_loRa+34)& (0+255),b
 21926                           
 21927                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 21928  007306  0E22               	movlw	low (_loRa+34)
 21929  007308  0100               	movlb	0	; () banked
 21930  00730A  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 21931  00730C  0E02               	movlw	high (_loRa+34)
 21932  00730E  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21933  007310  0E42               	movlw	low (_loRa+66)
 21934  007312  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 21935  007314  0E02               	movlw	high (_loRa+66)
 21936  007316  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21937  007318  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 21938  00731C  0012               	return		;funcret
 21939  00731E                     __end_of_ComputeSessionKeys:
 21940                           	opt stack 0
 21941                           tosu	equ	0xFFF
 21942                           tosh	equ	0xFFE
 21943                           tosl	equ	0xFFD
 21944                           pclath	equ	0xFFA
 21945                           tblptru	equ	0xFF8
 21946                           tblptrh	equ	0xFF7
 21947                           tblptrl	equ	0xFF6
 21948                           tablat	equ	0xFF5
 21949                           prodh	equ	0xFF4
 21950                           prodl	equ	0xFF3
 21951                           intcon	equ	0xFF2
 21952                           intcon2	equ	0xFF1
 21953                           intcon3	equ	0xFF0
 21954                           indf0	equ	0xFEF
 21955                           postinc0	equ	0xFEE
 21956                           fsr0h	equ	0xFEA
 21957                           fsr0l	equ	0xFE9
 21958                           wreg	equ	0xFE8
 21959                           postinc1	equ	0xFE6
 21960                           postdec1	equ	0xFE5
 21961                           plusw1	equ	0xFE3
 21962                           fsr1h	equ	0xFE2
 21963                           fsr1l	equ	0xFE1
 21964                           indf2	equ	0xFDF
 21965                           postinc2	equ	0xFDE
 21966                           postdec2	equ	0xFDD
 21967                           plusw2	equ	0xFDB
 21968                           fsr2h	equ	0xFDA
 21969                           fsr2l	equ	0xFD9
 21970                           status	equ	0xFD8
 21971                           
 21972 ;; *************** function _PrepareSessionKeys *****************
 21973 ;; Defined at:
 21974 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21975 ;; Parameters:    Size  Location     Type
 21976 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 21977 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21978 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 21979 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21980 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 21981 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21982 ;; Auto vars:     Size  Location     Type
 21983 ;;  index           1   17[BANK0 ] unsigned char 
 21984 ;; Return value:  Size  Location     Type
 21985 ;;                  1    wreg      void 
 21986 ;; Registers used:
 21987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21988 ;; Tracked objects:
 21989 ;;		On entry : 0/0
 21990 ;;		On exit  : 0/0
 21991 ;;		Unchanged: 0/0
 21992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21996 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21997 ;;Total ram usage:        7 bytes
 21998 ;; Hardware stack levels used:    1
 21999 ;; Hardware stack levels required when called:    8
 22000 ;; This function calls:
 22001 ;;		_memcpy
 22002 ;;		_memset
 22003 ;; This function is called by:
 22004 ;;		_ComputeSessionKeys
 22005 ;; This function uses a non-reentrant model
 22006 ;;
 22007                           
 22008                           	psect	text99
 22009  006B06                     __ptext99:
 22010                           	opt stack 0
 22011  006B06                     _PrepareSessionKeys:
 22012                           	opt stack 17
 22013                           
 22014                           ;lorawan.c: 2047: uint8_t index = 0;
 22015                           
 22016                           ;incstack = 0
 22017  006B06  0E00               	movlw	0
 22018  006B08  0100               	movlb	0	; () banked
 22019  006B0A  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 22023  006B0C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22024  006B0E  0D01               	mullw	1
 22025  006B10  50F3               	movf	prodl,w,c
 22026  006B12  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22027  006B14  6F60               	movwf	memset@p1& (0+255),b
 22028  006B16  50F4               	movf	prodh,w,c
 22029  006B18  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22030  006B1A  6F61               	movwf	(memset@p1+1)& (0+255),b
 22031  006B1C  0E00               	movlw	0
 22032  006B1E  6F63               	movwf	(memset@c+1)& (0+255),b
 22033  006B20  0E00               	movlw	0
 22034  006B22  6F62               	movwf	memset@c& (0+255),b
 22035  006B24  0E00               	movlw	0
 22036  006B26  6F65               	movwf	(memset@n+1)& (0+255),b
 22037  006B28  0E10               	movlw	16
 22038  006B2A  6F64               	movwf	memset@n& (0+255),b
 22039  006B2C  EC6B  F042         	call	_memset	;wreg free
 22040                           
 22041                           ;lorawan.c: 2050: index ++;
 22042  006B30  0100               	movlb	0	; () banked
 22043  006B32  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 22047  006B34  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22048  006B36  0D01               	mullw	1
 22049  006B38  50F3               	movf	prodl,w,c
 22050  006B3A  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22051  006B3C  6F60               	movwf	memcpy@d1& (0+255),b
 22052  006B3E  50F4               	movf	prodh,w,c
 22053  006B40  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22054  006B42  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22055  006B44  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 22056  006B48  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 22057  006B4C  0E00               	movlw	0
 22058  006B4E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22059  006B50  0E03               	movlw	3
 22060  006B52  6F64               	movwf	memcpy@n& (0+255),b
 22061  006B54  EC37  F03D         	call	_memcpy	;wreg free
 22062                           
 22063                           ;lorawan.c: 2053: index = index + 3;
 22064  006B58  0100               	movlb	0	; () banked
 22065  006B5A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22066  006B5C  0F03               	addlw	3
 22067  006B5E  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22068                           
 22069                           ; BSR set to: 0
 22070                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 22071  006B60  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22072  006B62  0D01               	mullw	1
 22073  006B64  50F3               	movf	prodl,w,c
 22074  006B66  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22075  006B68  6F60               	movwf	memcpy@d1& (0+255),b
 22076  006B6A  50F4               	movf	prodh,w,c
 22077  006B6C  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22078  006B6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22079  006B70  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 22080  006B74  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 22081  006B78  0E00               	movlw	0
 22082  006B7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22083  006B7C  0E03               	movlw	3
 22084  006B7E  6F64               	movwf	memcpy@n& (0+255),b
 22085  006B80  EC37  F03D         	call	_memcpy	;wreg free
 22086                           
 22087                           ;lorawan.c: 2056: index = index + 3;
 22088  006B84  0100               	movlb	0	; () banked
 22089  006B86  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22090  006B88  0F03               	addlw	3
 22091  006B8A  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 22092                           
 22093                           ; BSR set to: 0
 22094                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 22095  006B8C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 22096  006B8E  0D01               	mullw	1
 22097  006B90  50F3               	movf	prodl,w,c
 22098  006B92  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 22099  006B94  6F60               	movwf	memcpy@d1& (0+255),b
 22100  006B96  50F4               	movf	prodh,w,c
 22101  006B98  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 22102  006B9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 22103  006B9C  0ED2               	movlw	low (_loRa+210)
 22104  006B9E  6F62               	movwf	memcpy@s1& (0+255),b
 22105  006BA0  0E02               	movlw	high (_loRa+210)
 22106  006BA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 22107  006BA4  0E00               	movlw	0
 22108  006BA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 22109  006BA8  0E02               	movlw	2
 22110  006BAA  6F64               	movwf	memcpy@n& (0+255),b
 22111  006BAC  EC37  F03D         	call	_memcpy	;wreg free
 22112  006BB0  0012               	return		;funcret
 22113  006BB2                     __end_of_PrepareSessionKeys:
 22114                           	opt stack 0
 22115                           tosu	equ	0xFFF
 22116                           tosh	equ	0xFFE
 22117                           tosl	equ	0xFFD
 22118                           pclath	equ	0xFFA
 22119                           tblptru	equ	0xFF8
 22120                           tblptrh	equ	0xFF7
 22121                           tblptrl	equ	0xFF6
 22122                           tablat	equ	0xFF5
 22123                           prodh	equ	0xFF4
 22124                           prodl	equ	0xFF3
 22125                           intcon	equ	0xFF2
 22126                           intcon2	equ	0xFF1
 22127                           intcon3	equ	0xFF0
 22128                           indf0	equ	0xFEF
 22129                           postinc0	equ	0xFEE
 22130                           fsr0h	equ	0xFEA
 22131                           fsr0l	equ	0xFE9
 22132                           wreg	equ	0xFE8
 22133                           postinc1	equ	0xFE6
 22134                           postdec1	equ	0xFE5
 22135                           plusw1	equ	0xFE3
 22136                           fsr1h	equ	0xFE2
 22137                           fsr1l	equ	0xFE1
 22138                           indf2	equ	0xFDF
 22139                           postinc2	equ	0xFDE
 22140                           postdec2	equ	0xFDD
 22141                           plusw2	equ	0xFDB
 22142                           fsr2h	equ	0xFDA
 22143                           fsr2l	equ	0xFD9
 22144                           status	equ	0xFD8
 22145                           
 22146 ;; *************** function _CheckMcastFlags *****************
 22147 ;; Defined at:
 22148 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22149 ;; Parameters:    Size  Location     Type
 22150 ;;  hdr             2    0[BANK0 ] PTR struct .
 22151 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;		None
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  1    wreg      unsigned char 
 22156 ;; Registers used:
 22157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22167 ;;Total ram usage:        2 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:    7
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_LORAWAN_RxDone
 22174 ;; This function uses a non-reentrant model
 22175 ;;
 22176                           
 22177                           	psect	text100
 22178  0073A2                     __ptext100:
 22179                           	opt stack 0
 22180  0073A2                     _CheckMcastFlags:
 22181                           	opt stack 19
 22182                           
 22183                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 22184                           
 22185                           ;incstack = 0
 22186  0073A2  0100               	movlb	0	; () banked
 22187  0073A4  EE20 F005          	lfsr	2,5
 22188  0073A8  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22189  0073AA  26D9               	addwf	fsr2l,f,c
 22190  0073AC  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22191  0073AE  22DA               	addwfc	fsr2h,f,c
 22192  0073B0  BADF               	btfsc	indf2,5,c
 22193  0073B2  D012               	goto	u17490
 22194                           
 22195                           ; BSR set to: 0
 22196  0073B4  EE20 F005          	lfsr	2,5
 22197  0073B8  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22198  0073BA  26D9               	addwf	fsr2l,f,c
 22199  0073BC  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22200  0073BE  22DA               	addwfc	fsr2h,f,c
 22201  0073C0  BCDF               	btfsc	indf2,6,c
 22202  0073C2  D00A               	goto	u17490
 22203                           
 22204                           ; BSR set to: 0
 22205  0073C4  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 22206  0073C8  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 22207  0073CC  38DF               	swapf	223,w,c
 22208  0073CE  32E8               	rrcf	wreg,f,c
 22209  0073D0  0B07               	andlw	7
 22210  0073D2  0A03               	xorlw	3
 22211  0073D4  B4D8               	btfsc	status,2,c
 22212  0073D6  D002               	goto	l2402
 22213  0073D8                     u17490:
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;lorawan.c: 2110: {
 22217                           ;lorawan.c: 2111: return 0;
 22218                           
 22219                           ; BSR set to: 0
 22220  0073D8  0E00               	movlw	0
 22221                           
 22222                           ; BSR set to: 0
 22223  0073DA  0012               	return	
 22224  0073DC                     l2402:
 22225                           
 22226                           ; BSR set to: 0
 22227                           ;lorawan.c: 2112: }
 22228                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 22229                           
 22230                           ; BSR set to: 0
 22231  0073DC  EE20 F005          	lfsr	2,5
 22232  0073E0  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22233  0073E2  26D9               	addwf	fsr2l,f,c
 22234  0073E4  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22235  0073E6  22DA               	addwfc	fsr2h,f,c
 22236  0073E8  50DF               	movf	223,w,c
 22237  0073EA  0B0F               	andlw	15
 22238  0073EC  0900               	iorlw	0
 22239  0073EE  B4D8               	btfsc	status,2,c
 22240  0073F0  D002               	goto	l2406
 22241                           
 22242                           ; BSR set to: 0
 22243                           ;lorawan.c: 2115: {
 22244                           ;lorawan.c: 2116: return 0;
 22245  0073F2  0E00               	movlw	0
 22246                           
 22247                           ; BSR set to: 0
 22248  0073F4  0012               	return	
 22249  0073F6                     l2406:
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;lorawan.c: 2118: else
 22253                           ;lorawan.c: 2119: {
 22254                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 22255                           
 22256                           ; BSR set to: 0
 22257  0073F6  EE20 F008          	lfsr	2,8
 22258  0073FA  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22259  0073FC  26D9               	addwf	fsr2l,f,c
 22260  0073FE  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22261  007400  22DA               	addwfc	fsr2h,f,c
 22262  007402  50DF               	movf	indf2,w,c
 22263  007404  A4D8               	btfss	status,2,c
 22264  007406  D002               	goto	l2408
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;lorawan.c: 2121: {
 22268                           ;lorawan.c: 2122: return 0;
 22269  007408  0E00               	movlw	0
 22270                           
 22271                           ; BSR set to: 0
 22272  00740A  0012               	return	
 22273  00740C                     l2408:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;lorawan.c: 2123: }
 22277                           ;lorawan.c: 2124: }
 22278                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 22279                           
 22280                           ; BSR set to: 0
 22281                           
 22282                           ; BSR set to: 0
 22283  00740C  EE20 F005          	lfsr	2,5
 22284  007410  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 22285  007412  26D9               	addwf	fsr2l,f,c
 22286  007414  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 22287  007416  22DA               	addwfc	fsr2h,f,c
 22288  007418  A8DF               	btfss	indf2,4,c
 22289  00741A  D002               	goto	l2409
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;lorawan.c: 2127: {
 22293                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 22294  00741C  0102               	movlb	2	; () banked
 22295  00741E  8700               	bsf	_loRa& (0+255),3,b
 22296  007420                     l2409:
 22297                           
 22298                           ;lorawan.c: 2129: }
 22299                           ;lorawan.c: 2131: return 1;
 22300                           
 22301                           ; BSR set to: 2
 22302  007420  0E01               	movlw	1
 22303  007422  0012               	return	
 22304  007424                     __end_of_CheckMcastFlags:
 22305                           	opt stack 0
 22306                           tosu	equ	0xFFF
 22307                           tosh	equ	0xFFE
 22308                           tosl	equ	0xFFD
 22309                           pclath	equ	0xFFA
 22310                           tblptru	equ	0xFF8
 22311                           tblptrh	equ	0xFF7
 22312                           tblptrl	equ	0xFF6
 22313                           tablat	equ	0xFF5
 22314                           prodh	equ	0xFF4
 22315                           prodl	equ	0xFF3
 22316                           intcon	equ	0xFF2
 22317                           intcon2	equ	0xFF1
 22318                           intcon3	equ	0xFF0
 22319                           indf0	equ	0xFEF
 22320                           postinc0	equ	0xFEE
 22321                           fsr0h	equ	0xFEA
 22322                           fsr0l	equ	0xFE9
 22323                           wreg	equ	0xFE8
 22324                           postinc1	equ	0xFE6
 22325                           postdec1	equ	0xFE5
 22326                           plusw1	equ	0xFE3
 22327                           fsr1h	equ	0xFE2
 22328                           fsr1l	equ	0xFE1
 22329                           indf2	equ	0xFDF
 22330                           postinc2	equ	0xFDE
 22331                           postdec2	equ	0xFDD
 22332                           plusw2	equ	0xFDB
 22333                           fsr2h	equ	0xFDA
 22334                           fsr2l	equ	0xFD9
 22335                           status	equ	0xFD8
 22336                           
 22337 ;; *************** function _CheckFlags *****************
 22338 ;; Defined at:
 22339 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22340 ;; Parameters:    Size  Location     Type
 22341 ;;  hdr             2    0[BANK0 ] PTR struct .
 22342 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;		None
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  1    wreg      void 
 22347 ;; Registers used:
 22348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 0/0
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22358 ;;Total ram usage:        2 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; Hardware stack levels required when called:    7
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_LORAWAN_RxDone
 22365 ;; This function uses a non-reentrant model
 22366 ;;
 22367                           
 22368                           	psect	text101
 22369  007B2C                     __ptext101:
 22370                           	opt stack 0
 22371  007B2C                     _CheckFlags:
 22372                           	opt stack 19
 22373                           
 22374                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 22375                           
 22376                           ;incstack = 0
 22377  007B2C  0100               	movlb	0	; () banked
 22378  007B2E  EE20 F005          	lfsr	2,5
 22379  007B32  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22380  007B34  26D9               	addwf	fsr2l,f,c
 22381  007B36  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22382  007B38  22DA               	addwfc	fsr2h,f,c
 22383  007B3A  AEDF               	btfss	indf2,7,c
 22384  007B3C  D002               	goto	l2395
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;lorawan.c: 2077: {
 22388                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 22389  007B3E  0102               	movlb	2	; () banked
 22390  007B40  8D02               	bsf	(_loRa+2)& (0+255),6,b
 22391  007B42                     l2395:
 22392                           
 22393                           ;lorawan.c: 2079: }
 22394                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 22395                           
 22396                           ; BSR set to: 2
 22397  007B42  0100               	movlb	0	; () banked
 22398  007B44  EE20 F005          	lfsr	2,5
 22399  007B48  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22400  007B4A  26D9               	addwf	fsr2l,f,c
 22401  007B4C  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22402  007B4E  22DA               	addwfc	fsr2h,f,c
 22403  007B50  A8DF               	btfss	indf2,4,c
 22404  007B52  D002               	goto	l2396
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;lorawan.c: 2082: {
 22408                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 22409  007B54  0102               	movlb	2	; () banked
 22410  007B56  8700               	bsf	_loRa& (0+255),3,b
 22411  007B58                     l2396:
 22412                           
 22413                           ;lorawan.c: 2084: }
 22414                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 22415                           
 22416                           ; BSR set to: 2
 22417  007B58  0100               	movlb	0	; () banked
 22418  007B5A  EE20 F005          	lfsr	2,5
 22419  007B5E  5160               	movf	CheckFlags@hdr& (0+255),w,b
 22420  007B60  26D9               	addwf	fsr2l,f,c
 22421  007B62  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 22422  007B64  22DA               	addwfc	fsr2h,f,c
 22423  007B66  ACDF               	btfss	indf2,6,c
 22424  007B68  D002               	goto	l2397
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;lorawan.c: 2087: {
 22428                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 22429  007B6A  0102               	movlb	2	; () banked
 22430  007B6C  8900               	bsf	_loRa& (0+255),4,b
 22431  007B6E                     l2397:
 22432                           
 22433                           ;lorawan.c: 2089: }
 22434                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 22435                           
 22436                           ; BSR set to: 2
 22437  007B6E  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 22438  007B72  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 22439  007B76  0100               	movlb	0	; () banked
 22440  007B78  38DF               	swapf	223,w,c
 22441  007B7A  32E8               	rrcf	wreg,f,c
 22442  007B7C  0B07               	andlw	7
 22443  007B7E  0A05               	xorlw	5
 22444  007B80  A4D8               	btfss	status,2,c
 22445  007B82  0012               	return	
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;lorawan.c: 2092: {
 22449                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 22450  007B84  0102               	movlb	2	; () banked
 22451  007B86  8300               	bsf	_loRa& (0+255),1,b
 22452  007B88  0012               	return	
 22453  007B8A                     __end_of_CheckFlags:
 22454                           	opt stack 0
 22455                           tosu	equ	0xFFF
 22456                           tosh	equ	0xFFE
 22457                           tosl	equ	0xFFD
 22458                           pclath	equ	0xFFA
 22459                           tblptru	equ	0xFF8
 22460                           tblptrh	equ	0xFF7
 22461                           tblptrl	equ	0xFF6
 22462                           tablat	equ	0xFF5
 22463                           prodh	equ	0xFF4
 22464                           prodl	equ	0xFF3
 22465                           intcon	equ	0xFF2
 22466                           intcon2	equ	0xFF1
 22467                           intcon3	equ	0xFF0
 22468                           indf0	equ	0xFEF
 22469                           postinc0	equ	0xFEE
 22470                           fsr0h	equ	0xFEA
 22471                           fsr0l	equ	0xFE9
 22472                           wreg	equ	0xFE8
 22473                           postinc1	equ	0xFE6
 22474                           postdec1	equ	0xFE5
 22475                           plusw1	equ	0xFE3
 22476                           fsr1h	equ	0xFE2
 22477                           fsr1l	equ	0xFE1
 22478                           indf2	equ	0xFDF
 22479                           postinc2	equ	0xFDE
 22480                           postdec2	equ	0xFDD
 22481                           plusw2	equ	0xFDB
 22482                           fsr2h	equ	0xFDA
 22483                           fsr2l	equ	0xFD9
 22484                           status	equ	0xFD8
 22485                           
 22486 ;; *************** function _RADIO_FSKPacketSent *****************
 22487 ;; Defined at:
 22488 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22489 ;; Parameters:    Size  Location     Type
 22490 ;;		None
 22491 ;; Auto vars:     Size  Location     Type
 22492 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 22493 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 22494 ;; Return value:  Size  Location     Type
 22495 ;;                  1    wreg      void 
 22496 ;; Registers used:
 22497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22498 ;; Tracked objects:
 22499 ;;		On entry : 0/0
 22500 ;;		On exit  : 0/0
 22501 ;;		Unchanged: 0/0
 22502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22504 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22505 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22506 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22507 ;;Total ram usage:       13 bytes
 22508 ;; Hardware stack levels used:    1
 22509 ;; Hardware stack levels required when called:   15
 22510 ;; This function calls:
 22511 ;;		_LORAWAN_TxDone
 22512 ;;		_RADIO_RegisterRead
 22513 ;;		_RADIO_WriteMode
 22514 ;;		_SwTimerReadValue
 22515 ;;		_SwTimerStop
 22516 ;;		___lmul
 22517 ;; This function is called by:
 22518 ;;		_RADIO_DIO0
 22519 ;; This function uses a non-reentrant model
 22520 ;;
 22521                           
 22522                           	psect	text102
 22523  00577C                     __ptext102:
 22524                           	opt stack 0
 22525  00577C                     _RADIO_FSKPacketSent:
 22526                           	opt stack 13
 22527                           
 22528                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 22529                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 22530                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 22531                           
 22532                           ;incstack = 0
 22533  00577C  0E3F               	movlw	63
 22534  00577E  EC82  F043         	call	_RADIO_RegisterRead
 22535  005782  0100               	movlb	0	; () banked
 22536  005784  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 22540  005786  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 22541  005788  0012               	return	
 22542                           
 22543                           ; BSR set to: 0
 22544                           ;radio_driver_SX1276.c: 1100: {
 22545                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 22546  00578A  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 22547  00578E  0E00               	movlw	0
 22548  005790  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 22549  005792  0E00               	movlw	0
 22550  005794  EC0D  F02F         	call	_RADIO_WriteMode
 22551                           
 22552                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 22553  005798  0101               	movlb	1	; () banked
 22554  00579A  919D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 22555                           
 22556                           ; BSR set to: 1
 22557                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 22558  00579C  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 22559  00579E  EC96  F043         	call	_SwTimerStop
 22560                           
 22561                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 22562  0057A2  0101               	movlb	1	; () banked
 22563  0057A4  B99D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 22564  0057A6  0012               	return	
 22565                           
 22566                           ; BSR set to: 1
 22567                           ;radio_driver_SX1276.c: 1107: {
 22568                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 22569  0057A8  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22570  0057AA  EC60  F041         	call	_SwTimerReadValue
 22571  0057AE  0100               	movlb	0	; () banked
 22572  0057B0  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 22573  0057B2  E108               	bnz	u19200
 22574  0057B4  0E1F               	movlw	31
 22575  0057B6  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 22576  0057B8  0EAC               	movlw	172
 22577  0057BA  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 22578  0057BC  0EDF               	movlw	223
 22579  0057BE  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 22580  0057C0  A0D8               	btfss	status,0,c
 22581  0057C2  D021               	goto	l625
 22582  0057C4                     u19200:
 22583                           
 22584                           ; BSR set to: 0
 22585  0057C4  0101               	movlb	1	; () banked
 22586  0057C6  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22587  0057C8  EC60  F041         	call	_SwTimerReadValue
 22588  0057CC  0E0D               	movlw	13
 22589  0057CE  D006               	goto	u19210
 22590  0057D0                     u19215:
 22591  0057D0  0100               	movlb	0	; () banked
 22592  0057D2  90D8               	bcf	status,0,c
 22593  0057D4  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 22594  0057D6  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 22595  0057D8  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 22596  0057DA  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 22597  0057DC                     u19210:
 22598  0057DC  2EE8               	decfsz	wreg,f,c
 22599  0057DE  D7F8               	goto	u19215
 22600  0057E0  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22601  0057E4  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22602  0057E8  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22603  0057EC  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22604  0057F0  0E7D               	movlw	125
 22605  0057F2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22606  0057F4  0E00               	movlw	0
 22607  0057F6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22608  0057F8  0E00               	movlw	0
 22609  0057FA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22610  0057FC  0E00               	movlw	0
 22611  0057FE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22612  005800  EC4D  F03E         	call	___lmul	;wreg free
 22613  005804  D021               	goto	L14
 22614  005806                     l625:
 22615  005806  0101               	movlb	1	; () banked
 22616  005808  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22617  00580A  EC60  F041         	call	_SwTimerReadValue
 22618  00580E  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 22619  005812  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 22620  005816  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 22621  00581A  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 22622  00581E  0E7D               	movlw	125
 22623  005820  0100               	movlb	0	; () banked
 22624  005822  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22625  005824  0E00               	movlw	0
 22626  005826  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22627  005828  0E00               	movlw	0
 22628  00582A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22629  00582C  0E00               	movlw	0
 22630  00582E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22631  005830  EC4D  F03E         	call	___lmul	;wreg free
 22632  005834  0E0D               	movlw	13
 22633  005836  D006               	goto	u19220
 22634  005838                     u19225:
 22635  005838  0100               	movlb	0	; () banked
 22636  00583A  90D8               	bcf	status,0,c
 22637  00583C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 22638  00583E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 22639  005840  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 22640  005842  339A               	rrcf	?___lmul& (0+255),f,b
 22641  005844                     u19220:
 22642  005844  2EE8               	decfsz	wreg,f,c
 22643  005846  D7F8               	goto	u19225
 22644  005848                     L14:
 22645  005848  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$1098
 22646  00584C  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$1098+1
 22647  005850  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$1098+2
 22648  005854  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$1098+3
 22649                           
 22650                           ; BSR set to: 0
 22651  005858  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$1098,??_RADIO_FSKPacketSent
 22652  00585C  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$1098+1,??_RADIO_FSKPacketSent+1
 22653  005860  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$1098+2,??_RADIO_FSKPacketSent+2
 22654  005864  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$1098+3,??_RADIO_FSKPacketSent+3
 22655  005868  0100               	movlb	0	; () banked
 22656  00586A  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 22657  00586C  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22658  00586E  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22659  005870  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22660  005872  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 22661  005874  0E00               	movlw	0
 22662  005876  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22663  005878  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22664  00587A  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22665  00587C  0E20               	movlw	32
 22666  00587E  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 22667  005880  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 22668  005882  0E4E               	movlw	78
 22669  005884  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 22670  005886  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 22671  005888  0E00               	movlw	0
 22672  00588A  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 22673  00588C  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 22674  00588E  0E00               	movlw	0
 22675  005890  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 22676  005892  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 22680  005894  0101               	movlb	1	; () banked
 22681  005896  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22682  005898  EC96  F043         	call	_SwTimerStop
 22683                           
 22684                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 22685  00589C  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 22686  0058A0  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 22687  0058A4  EC96  F006         	call	_LORAWAN_TxDone	;wreg free
 22688  0058A8  0012               	return	
 22689  0058AA                     __end_of_RADIO_FSKPacketSent:
 22690                           	opt stack 0
 22691                           tosu	equ	0xFFF
 22692                           tosh	equ	0xFFE
 22693                           tosl	equ	0xFFD
 22694                           pclath	equ	0xFFA
 22695                           tblptru	equ	0xFF8
 22696                           tblptrh	equ	0xFF7
 22697                           tblptrl	equ	0xFF6
 22698                           tablat	equ	0xFF5
 22699                           prodh	equ	0xFF4
 22700                           prodl	equ	0xFF3
 22701                           intcon	equ	0xFF2
 22702                           intcon2	equ	0xFF1
 22703                           intcon3	equ	0xFF0
 22704                           indf0	equ	0xFEF
 22705                           postinc0	equ	0xFEE
 22706                           fsr0h	equ	0xFEA
 22707                           fsr0l	equ	0xFE9
 22708                           wreg	equ	0xFE8
 22709                           postinc1	equ	0xFE6
 22710                           postdec1	equ	0xFE5
 22711                           plusw1	equ	0xFE3
 22712                           fsr1h	equ	0xFE2
 22713                           fsr1l	equ	0xFE1
 22714                           indf2	equ	0xFDF
 22715                           postinc2	equ	0xFDE
 22716                           postdec2	equ	0xFDD
 22717                           plusw2	equ	0xFDB
 22718                           fsr2h	equ	0xFDA
 22719                           fsr2l	equ	0xFD9
 22720                           status	equ	0xFD8
 22721                           
 22722 ;; *************** function _LORAWAN_TxDone *****************
 22723 ;; Defined at:
 22724 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 22725 ;; Parameters:    Size  Location     Type
 22726 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 22727 ;; Auto vars:     Size  Location     Type
 22728 ;;  minim           4  126[BANK0 ] unsigned long 
 22729 ;;  ticks           4  122[BANK0 ] unsigned long 
 22730 ;;  delta           4  114[BANK0 ] unsigned long 
 22731 ;;  i               1  130[BANK0 ] unsigned char 
 22732 ;;  found           1  113[BANK0 ] unsigned char 
 22733 ;; Return value:  Size  Location     Type
 22734 ;;                  1    wreg      void 
 22735 ;; Registers used:
 22736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22743 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22744 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22745 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22746 ;;Total ram usage:       40 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:   14
 22749 ;; This function calls:
 22750 ;;		_LORAWAN_EnterContinuousReceive
 22751 ;;		_RADIO_GetStatus
 22752 ;;		_RxData
 22753 ;;		_SwTimerIsRunning
 22754 ;;		_SwTimerReadValue
 22755 ;;		_SwTimerSetTimeout
 22756 ;;		_SwTimerStart
 22757 ;;		_SwTimerStop
 22758 ;;		___lldiv
 22759 ;;		___lmul
 22760 ;; This function is called by:
 22761 ;;		_RADIO_TxDone
 22762 ;;		_RADIO_FSKPacketSent
 22763 ;;		_RADIO_WatchdogTimeout
 22764 ;; This function uses a non-reentrant model
 22765 ;;
 22766                           
 22767                           	psect	text103
 22768  000D2C                     __ptext103:
 22769                           	opt stack 0
 22770  000D2C                     _LORAWAN_TxDone:
 22771                           	opt stack 13
 22772                           
 22773                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 22774                           
 22775                           ;incstack = 0
 22776  000D2C  0102               	movlb	2	; () banked
 22777  000D2E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 22778  000D30  D3A2               	goto	l1073
 22779                           
 22780                           ; BSR set to: 2
 22781                           ;lorawan_eu.c: 368: {
 22782                           ;lorawan_eu.c: 369: bool found = 0;
 22783  000D32  0E00               	movlw	0
 22784  000D34  0100               	movlb	0	; () banked
 22785  000D36  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 22786                           
 22787                           ;lorawan_eu.c: 370: uint8_t i;
 22788                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 22789  000D38  0E00               	movlw	0
 22790  000D3A  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22791  000D3C  0E00               	movlw	0
 22792  000D3E  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22793  000D40  0E00               	movlw	0
 22794  000D42  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22795  000D44  0E00               	movlw	0
 22796  000D46  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22797                           
 22798                           ; BSR set to: 0
 22799  000D48  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 22800  000D4A  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 22801  000D4C  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 22802  000D4E  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 22803                           
 22804                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 22805  000D50  0E00               	movlw	0
 22806  000D52  0102               	movlb	2	; () banked
 22807  000D54  6FF1               	movwf	(_loRa+241)& (0+255),b
 22808                           
 22809                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 22810  000D56  5102               	movf	(_loRa+2)& (0+255),w,b
 22811  000D58  0BF0               	andlw	-16
 22812  000D5A  0902               	iorlw	2
 22813  000D5C  6F02               	movwf	(_loRa+2)& (0+255),b
 22814                           
 22815                           ; BSR set to: 2
 22816                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 22817  000D5E  C2DA  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 22818                           
 22819                           ; BSR set to: 2
 22820                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 22821  000D62  A500               	btfss	_loRa& (0+255),2,b
 22822  000D64  D0BA               	goto	l1074
 22823                           
 22824                           ; BSR set to: 2
 22825                           ;lorawan_eu.c: 382: {
 22826                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22827  000D66  5117               	movf	(_loRa+23)& (0+255),w,b
 22828  000D68  0D01               	mullw	1
 22829  000D6A  0E69               	movlw	low _rxWindowOffset
 22830  000D6C  24F3               	addwf	prodl,w,c
 22831  000D6E  6EF6               	movwf	tblptrl,c
 22832  000D70  0EFF               	movlw	high _rxWindowOffset
 22833  000D72  20F4               	addwfc	prodh,w,c
 22834  000D74  6EF7               	movwf	tblptrh,c
 22835  000D76                     	if	1	;There are 3 active tblptr bytes
 22836  000D76  6AF8               	clrf	tblptru,c
 22837  000D78  0E00               	movlw	low (__mediumconst shr (0+16))
 22838  000D7A  22F8               	addwfc	tblptru,f,c
 22839  000D7C                     	endif
 22840  000D7C  0008               	tblrd		*
 22841  000D7E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 22842  000D82  5198               	movf	(_loRa+152)& (0+255),w,b
 22843  000D84  0100               	movlb	0	; () banked
 22844  000D86  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22845  000D88  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22846  000D8A  0E00               	movlw	0
 22847  000D8C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22848  000D8E  0EFF               	movlw	255
 22849  000D90  0102               	movlb	2	; () banked
 22850  000D92  2199               	addwfc	(_loRa+153)& (0+255),w,b
 22851  000D94  0100               	movlb	0	; () banked
 22852  000D96  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22853  000D98  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22854  000D9A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22855  000D9C  0E0C               	movlw	12
 22856  000D9E                     u18705:
 22857  000D9E  90D8               	bcf	status,0,c
 22858  000DA0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22859  000DA2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22860  000DA4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22861  000DA6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22862  000DA8  2EE8               	decfsz	wreg,f,c
 22863  000DAA  D7F9               	goto	u18705
 22864  000DAC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22865  000DB0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22866  000DB4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22867  000DB8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22868  000DBC  0E7D               	movlw	125
 22869  000DBE  6F64               	movwf	___lldiv@divisor& (0+255),b
 22870  000DC0  0E00               	movlw	0
 22871  000DC2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22872  000DC4  0E00               	movlw	0
 22873  000DC6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22874  000DC8  0E00               	movlw	0
 22875  000DCA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22876  000DCC  EC8F  F039         	call	___lldiv	;wreg free
 22877  000DD0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22878  000DD4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22879  000DD8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22880  000DDC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22881  000DE0  0102               	movlb	2	; () banked
 22882  000DE2  51E2               	movf	(_loRa+226)& (0+255),w,b
 22883  000DE4  ECDB  F040         	call	_SwTimerSetTimeout
 22884                           
 22885                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22886  000DE8  0102               	movlb	2	; () banked
 22887  000DEA  511C               	movf	(_loRa+28)& (0+255),w,b
 22888  000DEC  0D01               	mullw	1
 22889  000DEE  0E69               	movlw	low _rxWindowOffset
 22890  000DF0  24F3               	addwf	prodl,w,c
 22891  000DF2  6EF6               	movwf	tblptrl,c
 22892  000DF4  0EFF               	movlw	high _rxWindowOffset
 22893  000DF6  20F4               	addwfc	prodh,w,c
 22894  000DF8  6EF7               	movwf	tblptrh,c
 22895  000DFA                     	if	1	;There are 3 active tblptr bytes
 22896  000DFA  6AF8               	clrf	tblptru,c
 22897  000DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 22898  000DFE  22F8               	addwfc	tblptru,f,c
 22899  000E00                     	endif
 22900  000E00  0008               	tblrd		*
 22901  000E02  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 22902  000E06  519A               	movf	(_loRa+154)& (0+255),w,b
 22903  000E08  0100               	movlb	0	; () banked
 22904  000E0A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22905  000E0C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22906  000E0E  0E00               	movlw	0
 22907  000E10  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22908  000E12  0EFF               	movlw	255
 22909  000E14  0102               	movlb	2	; () banked
 22910  000E16  219B               	addwfc	(_loRa+155)& (0+255),w,b
 22911  000E18  0100               	movlb	0	; () banked
 22912  000E1A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22913  000E1C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22914  000E1E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22915  000E20  0E0C               	movlw	12
 22916  000E22                     u18715:
 22917  000E22  90D8               	bcf	status,0,c
 22918  000E24  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22919  000E26  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22920  000E28  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22921  000E2A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22922  000E2C  2EE8               	decfsz	wreg,f,c
 22923  000E2E  D7F9               	goto	u18715
 22924  000E30  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22925  000E34  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22926  000E38  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22927  000E3C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22928  000E40  0E7D               	movlw	125
 22929  000E42  6F64               	movwf	___lldiv@divisor& (0+255),b
 22930  000E44  0E00               	movlw	0
 22931  000E46  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22932  000E48  0E00               	movlw	0
 22933  000E4A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22934  000E4C  0E00               	movlw	0
 22935  000E4E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22936  000E50  EC8F  F039         	call	___lldiv	;wreg free
 22937  000E54  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22938  000E58  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22939  000E5C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22940  000E60  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22941  000E64  0102               	movlb	2	; () banked
 22942  000E66  51E3               	movf	(_loRa+227)& (0+255),w,b
 22943  000E68  ECDB  F040         	call	_SwTimerSetTimeout
 22944                           
 22945                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 22946  000E6C  0102               	movlb	2	; () banked
 22947  000E6E  51E2               	movf	(_loRa+226)& (0+255),w,b
 22948  000E70  ECD1  F036         	call	_SwTimerStart
 22949                           
 22950                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 22951  000E74  0102               	movlb	2	; () banked
 22952  000E76  51E3               	movf	(_loRa+227)& (0+255),w,b
 22953  000E78  ECD1  F036         	call	_SwTimerStart
 22954                           
 22955                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22956  000E7C  C2DB  F09A         	movff	_loRa+219,___lmul@multiplier
 22957  000E80  C2DC  F09B         	movff	_loRa+220,___lmul@multiplier+1
 22958  000E84  0100               	movlb	0	; () banked
 22959  000E86  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 22960  000E88  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 22961  000E8A  0ED6               	movlw	214
 22962  000E8C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 22963  000E8E  0E0B               	movlw	11
 22964  000E90  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22965  000E92  0E00               	movlw	0
 22966  000E94  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22967  000E96  0E00               	movlw	0
 22968  000E98  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22969  000E9A  EC4D  F03E         	call	___lmul	;wreg free
 22970  000E9E  0EFF               	movlw	255
 22971  000EA0  0100               	movlb	0	; () banked
 22972  000EA2  259A               	addwf	?___lmul& (0+255),w,b
 22973  000EA4  6FD6               	movwf	_LORAWAN_TxDone$4999& (0+255),b
 22974  000EA6  0EFF               	movlw	255
 22975  000EA8  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 22976  000EAA  6FD7               	movwf	(_LORAWAN_TxDone$4999+1)& (0+255),b
 22977  000EAC  0EFF               	movlw	255
 22978  000EAE  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 22979  000EB0  6FD8               	movwf	(_LORAWAN_TxDone$4999+2)& (0+255),b
 22980  000EB2  0EFF               	movlw	255
 22981  000EB4  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 22982  000EB6  6FD9               	movwf	(_LORAWAN_TxDone$4999+3)& (0+255),b
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22986  000EB8  C0D6  F09A         	movff	_LORAWAN_TxDone$4999,___lmul@multiplier
 22987  000EBC  C0D7  F09B         	movff	_LORAWAN_TxDone$4999+1,___lmul@multiplier+1
 22988  000EC0  C0D8  F09C         	movff	_LORAWAN_TxDone$4999+2,___lmul@multiplier+2
 22989  000EC4  C0D9  F09D         	movff	_LORAWAN_TxDone$4999+3,___lmul@multiplier+3
 22990  000EC8  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22991  000ECC  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22992  000ED0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22993  000ED2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22994  000ED4  EC4D  F03E         	call	___lmul	;wreg free
 22995  000ED8  D0D7               	goto	L15
 22996  000EDA                     l1074:
 22997                           
 22998                           ;lorawan_eu.c: 390: else
 22999                           ;lorawan_eu.c: 391: {
 23000                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23001                           
 23002                           ; BSR set to: 0
 23003  000EDA  0102               	movlb	2	; () banked
 23004  000EDC  5117               	movf	(_loRa+23)& (0+255),w,b
 23005  000EDE  0D01               	mullw	1
 23006  000EE0  0E69               	movlw	low _rxWindowOffset
 23007  000EE2  24F3               	addwf	prodl,w,c
 23008  000EE4  6EF6               	movwf	tblptrl,c
 23009  000EE6  0EFF               	movlw	high _rxWindowOffset
 23010  000EE8  20F4               	addwfc	prodh,w,c
 23011  000EEA  6EF7               	movwf	tblptrh,c
 23012  000EEC                     	if	1	;There are 3 active tblptr bytes
 23013  000EEC  6AF8               	clrf	tblptru,c
 23014  000EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 23015  000EF0  22F8               	addwfc	tblptru,f,c
 23016  000EF2                     	endif
 23017  000EF2  0008               	tblrd		*
 23018  000EF4  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23019  000EF8  5194               	movf	(_loRa+148)& (0+255),w,b
 23020  000EFA  0100               	movlb	0	; () banked
 23021  000EFC  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23022  000EFE  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23023  000F00  0E00               	movlw	0
 23024  000F02  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23025  000F04  0EFF               	movlw	255
 23026  000F06  0102               	movlb	2	; () banked
 23027  000F08  2195               	addwfc	(_loRa+149)& (0+255),w,b
 23028  000F0A  0100               	movlb	0	; () banked
 23029  000F0C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23030  000F0E  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23031  000F10  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23032  000F12  0E0C               	movlw	12
 23033  000F14                     u18725:
 23034  000F14  90D8               	bcf	status,0,c
 23035  000F16  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23036  000F18  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23037  000F1A  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23038  000F1C  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23039  000F1E  2EE8               	decfsz	wreg,f,c
 23040  000F20  D7F9               	goto	u18725
 23041  000F22  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23042  000F26  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23043  000F2A  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23044  000F2E  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23045  000F32  0E7D               	movlw	125
 23046  000F34  6F64               	movwf	___lldiv@divisor& (0+255),b
 23047  000F36  0E00               	movlw	0
 23048  000F38  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23049  000F3A  0E00               	movlw	0
 23050  000F3C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23051  000F3E  0E00               	movlw	0
 23052  000F40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23053  000F42  EC8F  F039         	call	___lldiv	;wreg free
 23054  000F46  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23055  000F4A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23056  000F4E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23057  000F52  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23058  000F56  0102               	movlb	2	; () banked
 23059  000F58  51E4               	movf	(_loRa+228)& (0+255),w,b
 23060  000F5A  ECDB  F040         	call	_SwTimerSetTimeout
 23061                           
 23062                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 23063  000F5E  0102               	movlb	2	; () banked
 23064  000F60  511C               	movf	(_loRa+28)& (0+255),w,b
 23065  000F62  0D01               	mullw	1
 23066  000F64  0E69               	movlw	low _rxWindowOffset
 23067  000F66  24F3               	addwf	prodl,w,c
 23068  000F68  6EF6               	movwf	tblptrl,c
 23069  000F6A  0EFF               	movlw	high _rxWindowOffset
 23070  000F6C  20F4               	addwfc	prodh,w,c
 23071  000F6E  6EF7               	movwf	tblptrh,c
 23072  000F70                     	if	1	;There are 3 active tblptr bytes
 23073  000F70  6AF8               	clrf	tblptru,c
 23074  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 23075  000F74  22F8               	addwfc	tblptru,f,c
 23076  000F76                     	endif
 23077  000F76  0008               	tblrd		*
 23078  000F78  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 23079  000F7C  5196               	movf	(_loRa+150)& (0+255),w,b
 23080  000F7E  0100               	movlb	0	; () banked
 23081  000F80  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23082  000F82  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23083  000F84  0E00               	movlw	0
 23084  000F86  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 23085  000F88  0EFF               	movlw	255
 23086  000F8A  0102               	movlb	2	; () banked
 23087  000F8C  2197               	addwfc	(_loRa+151)& (0+255),w,b
 23088  000F8E  0100               	movlb	0	; () banked
 23089  000F90  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23090  000F92  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 23091  000F94  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23092  000F96  0E0C               	movlw	12
 23093  000F98                     u18735:
 23094  000F98  90D8               	bcf	status,0,c
 23095  000F9A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23096  000F9C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23097  000F9E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23098  000FA0  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23099  000FA2  2EE8               	decfsz	wreg,f,c
 23100  000FA4  D7F9               	goto	u18735
 23101  000FA6  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 23102  000FAA  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 23103  000FAE  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 23104  000FB2  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 23105  000FB6  0E7D               	movlw	125
 23106  000FB8  6F64               	movwf	___lldiv@divisor& (0+255),b
 23107  000FBA  0E00               	movlw	0
 23108  000FBC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23109  000FBE  0E00               	movlw	0
 23110  000FC0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23111  000FC2  0E00               	movlw	0
 23112  000FC4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23113  000FC6  EC8F  F039         	call	___lldiv	;wreg free
 23114  000FCA  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23115  000FCE  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23116  000FD2  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23117  000FD6  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23118  000FDA  0102               	movlb	2	; () banked
 23119  000FDC  51E5               	movf	(_loRa+229)& (0+255),w,b
 23120  000FDE  ECDB  F040         	call	_SwTimerSetTimeout
 23121                           
 23122                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 23123  000FE2  0102               	movlb	2	; () banked
 23124  000FE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 23125  000FE6  ECD1  F036         	call	_SwTimerStart
 23126                           
 23127                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 23128  000FEA  0102               	movlb	2	; () banked
 23129  000FEC  5112               	movf	(_loRa+18)& (0+255),w,b
 23130  000FEE  A4D8               	btfss	status,2,c
 23131  000FF0  D003               	goto	l1076
 23132                           
 23133                           ; BSR set to: 2
 23134                           ;lorawan_eu.c: 396: {
 23135                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 23136  000FF2  51E5               	movf	(_loRa+229)& (0+255),w,b
 23137  000FF4  ECD1  F036         	call	_SwTimerStart
 23138  000FF8                     l1076:
 23139                           
 23140                           ;lorawan_eu.c: 398: }
 23141                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23142  000FF8  0100               	movlb	0	; () banked
 23143  000FFA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23144  000FFC  0D0E               	mullw	14
 23145  000FFE  0E06               	movlw	6
 23146  001000  26F3               	addwf	prodl,f,c
 23147  001002  0E00               	movlw	0
 23148  001004  22F4               	addwfc	prodh,f,c
 23149  001006  0E00               	movlw	low _Channels
 23150  001008  24F3               	addwf	prodl,w,c
 23151  00100A  6ED9               	movwf	fsr2l,c
 23152  00100C  0E04               	movlw	high _Channels
 23153  00100E  20F4               	addwfc	prodh,w,c
 23154  001010  6EDA               	movwf	fsr2h,c
 23155  001012  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 23156  001016  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 23157  00101A  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 23158  00101C  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23159  00101E  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23160  001020  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 23161  001022  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 23162  001024  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 23163  001026  0E01               	movlw	1
 23164  001028  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23165  00102A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 23166  00102C  0E00               	movlw	0
 23167  00102E  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23168  001030  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 23169  001032  0E00               	movlw	0
 23170  001034  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23171  001036  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 23172  001038  0E00               	movlw	0
 23173  00103A  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23174  00103C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 23175  00103E  C2DB  F09E         	movff	_loRa+219,___lmul@multiplicand
 23176  001042  C2DC  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 23177  001046  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 23178  001048  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 23179  00104A  EC4D  F03E         	call	___lmul	;wreg free
 23180  00104E  0EFF               	movlw	255
 23181  001050  0100               	movlb	0	; () banked
 23182  001052  259A               	addwf	?___lmul& (0+255),w,b
 23183  001054  6FD6               	movwf	_LORAWAN_TxDone$4999& (0+255),b
 23184  001056  0EFF               	movlw	255
 23185  001058  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 23186  00105A  6FD7               	movwf	(_LORAWAN_TxDone$4999+1)& (0+255),b
 23187  00105C  0EFF               	movlw	255
 23188  00105E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 23189  001060  6FD8               	movwf	(_LORAWAN_TxDone$4999+2)& (0+255),b
 23190  001062  0EFF               	movlw	255
 23191  001064  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 23192  001066  6FD9               	movwf	(_LORAWAN_TxDone$4999+3)& (0+255),b
 23193                           
 23194                           ;lorawan_eu.c: 398: }
 23195                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 23196  001068  C0D6  F09A         	movff	_LORAWAN_TxDone$4999,___lmul@multiplier
 23197  00106C  C0D7  F09B         	movff	_LORAWAN_TxDone$4999+1,___lmul@multiplier+1
 23198  001070  C0D8  F09C         	movff	_LORAWAN_TxDone$4999+2,___lmul@multiplier+2
 23199  001074  C0D9  F09D         	movff	_LORAWAN_TxDone$4999+3,___lmul@multiplier+3
 23200  001078  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 23201  00107C  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 23202  001080  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 23203  001082  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 23204  001084  EC4D  F03E         	call	___lmul	;wreg free
 23205  001088                     L15:
 23206  001088  0100               	movlb	0	; () banked
 23207  00108A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23208  00108C  0D0E               	mullw	14
 23209  00108E  0E08               	movlw	8
 23210  001090  26F3               	addwf	prodl,f,c
 23211  001092  0E00               	movlw	0
 23212  001094  22F4               	addwfc	prodh,f,c
 23213  001096  0E00               	movlw	low _Channels
 23214  001098  24F3               	addwf	prodl,w,c
 23215  00109A  6ED9               	movwf	fsr2l,c
 23216  00109C  0E04               	movlw	high _Channels
 23217  00109E  20F4               	addwfc	prodh,w,c
 23218  0010A0  6EDA               	movwf	fsr2h,c
 23219  0010A2  C09A  FFDE         	movff	?___lmul,postinc2
 23220  0010A6  C09B  FFDE         	movff	?___lmul+1,postinc2
 23221  0010AA  C09C  FFDE         	movff	?___lmul+2,postinc2
 23222  0010AE  C09D  FFDE         	movff	?___lmul+3,postinc2
 23223                           
 23224                           ; BSR set to: 0
 23225                           ;lorawan_eu.c: 401: }
 23226                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 23227  0010B2  0102               	movlb	2	; () banked
 23228  0010B4  51E9               	movf	(_loRa+233)& (0+255),w,b
 23229  0010B6  EC08  F043         	call	_SwTimerIsRunning
 23230  0010BA  0900               	iorlw	0
 23231  0010BC  B4D8               	btfsc	status,2,c
 23232  0010BE  D08A               	goto	l1077
 23233                           
 23234                           ;lorawan_eu.c: 404: {
 23235                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 23236  0010C0  0102               	movlb	2	; () banked
 23237  0010C2  51E9               	movf	(_loRa+233)& (0+255),w,b
 23238  0010C4  EC96  F043         	call	_SwTimerStop
 23239                           
 23240                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 23241  0010C8  0102               	movlb	2	; () banked
 23242  0010CA  51E9               	movf	(_loRa+233)& (0+255),w,b
 23243  0010CC  EC60  F041         	call	_SwTimerReadValue
 23244  0010D0  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 23245  0010D4  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 23246  0010D8  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 23247  0010DC  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 23248                           
 23249                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 23250  0010E0  0100               	movlb	0	; () banked
 23251  0010E2  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 23252  0010E4  E108               	bnz	u18760
 23253  0010E6  0E1F               	movlw	31
 23254  0010E8  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 23255  0010EA  0EAC               	movlw	172
 23256  0010EC  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 23257  0010EE  0EDF               	movlw	223
 23258  0010F0  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 23259  0010F2  A0D8               	btfss	status,0,c
 23260  0010F4  D024               	goto	l1079
 23261  0010F6                     u18760:
 23262                           
 23263                           ; BSR set to: 0
 23264  0010F6  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 23265  0010FA  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 23266  0010FE  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 23267  001102  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 23268  001106  0E0D               	movlw	13
 23269  001108  D005               	goto	u18770
 23270  00110A                     u18775:
 23271  00110A  90D8               	bcf	status,0,c
 23272  00110C  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23273  00110E  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23274  001110  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23275  001112  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 23276  001114                     u18770:
 23277  001114  2EE8               	decfsz	wreg,f,c
 23278  001116  D7F9               	goto	u18775
 23279  001118  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 23280  00111C  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 23281  001120  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 23282  001124  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 23283  001128  0E7D               	movlw	125
 23284  00112A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23285  00112C  0E00               	movlw	0
 23286  00112E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23287  001130  0E00               	movlw	0
 23288  001132  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23289  001134  0E00               	movlw	0
 23290  001136  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23291  001138  EC4D  F03E         	call	___lmul	;wreg free
 23292  00113C  D01D               	goto	L16
 23293  00113E                     l1079:
 23294  00113E  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 23295  001142  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 23296  001146  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 23297  00114A  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 23298  00114E  0E7D               	movlw	125
 23299  001150  0100               	movlb	0	; () banked
 23300  001152  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 23301  001154  0E00               	movlw	0
 23302  001156  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23303  001158  0E00               	movlw	0
 23304  00115A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23305  00115C  0E00               	movlw	0
 23306  00115E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23307  001160  EC4D  F03E         	call	___lmul	;wreg free
 23308  001164  0E0D               	movlw	13
 23309  001166  D006               	goto	u18780
 23310  001168                     u18785:
 23311  001168  0100               	movlb	0	; () banked
 23312  00116A  90D8               	bcf	status,0,c
 23313  00116C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 23314  00116E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 23315  001170  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 23316  001172  339A               	rrcf	?___lmul& (0+255),f,b
 23317  001174                     u18780:
 23318  001174  2EE8               	decfsz	wreg,f,c
 23319  001176  D7F8               	goto	u18785
 23320  001178                     L16:
 23321  001178  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$1971
 23322  00117C  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$1971+1
 23323  001180  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$1971+2
 23324  001184  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$1971+3
 23325                           
 23326                           ; BSR set to: 0
 23327  001188  C0C9  F0BD         	movff	_LORAWAN_TxDone$1971,??_LORAWAN_TxDone
 23328  00118C  C0CA  F0BE         	movff	_LORAWAN_TxDone$1971+1,??_LORAWAN_TxDone+1
 23329  001190  C0CB  F0BF         	movff	_LORAWAN_TxDone$1971+2,??_LORAWAN_TxDone+2
 23330  001194  C0CC  F0C0         	movff	_LORAWAN_TxDone$1971+3,??_LORAWAN_TxDone+3
 23331  001198  0100               	movlb	0	; () banked
 23332  00119A  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 23333  00119C  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23334  00119E  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23335  0011A0  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23336  0011A2  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 23337  0011A4  0E00               	movlw	0
 23338  0011A6  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23339  0011A8  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23340  0011AA  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23341  0011AC  0102               	movlb	2	; () banked
 23342  0011AE  51C8               	movf	(_loRa+200)& (0+255),w,b
 23343  0011B0  0100               	movlb	0	; () banked
 23344  0011B2  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 23345  0011B4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23346  0011B6  0102               	movlb	2	; () banked
 23347  0011B8  51C9               	movf	(_loRa+201)& (0+255),w,b
 23348  0011BA  0100               	movlb	0	; () banked
 23349  0011BC  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23350  0011BE  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23351  0011C0  0102               	movlb	2	; () banked
 23352  0011C2  51CA               	movf	(_loRa+202)& (0+255),w,b
 23353  0011C4  0100               	movlb	0	; () banked
 23354  0011C6  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23355  0011C8  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23356  0011CA  0102               	movlb	2	; () banked
 23357  0011CC  51CB               	movf	(_loRa+203)& (0+255),w,b
 23358  0011CE  0100               	movlb	0	; () banked
 23359  0011D0  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23360  0011D2  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23361  0011D4                     l1077:
 23362                           
 23363                           ;lorawan_eu.c: 409: }
 23364                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 23365                           
 23366                           ; BSR set to: 0
 23367  0011D4  0E00               	movlw	0
 23368  0011D6  0100               	movlb	0	; () banked
 23369  0011D8  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 23370  0011DA                     l15395:
 23371                           
 23372                           ; BSR set to: 0
 23373  0011DA  0E0F               	movlw	15
 23374  0011DC  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 23375  0011DE  D001               	goto	l1082
 23376  0011E0  D0D4               	goto	u18860
 23377  0011E2                     l1082:
 23378                           
 23379                           ; BSR set to: 0
 23380                           ;lorawan_eu.c: 412: {
 23381                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 23382                           
 23383                           ; BSR set to: 0
 23384  0011E2  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23385  0011E4  0D0E               	mullw	14
 23386  0011E6  0E04               	movlw	4
 23387  0011E8  26F3               	addwf	prodl,f,c
 23388  0011EA  0E00               	movlw	0
 23389  0011EC  22F4               	addwfc	prodh,f,c
 23390  0011EE  0E00               	movlw	low _Channels
 23391  0011F0  24F3               	addwf	prodl,w,c
 23392  0011F2  6ED9               	movwf	fsr2l,c
 23393  0011F4  0E04               	movlw	high _Channels
 23394  0011F6  20F4               	addwfc	prodh,w,c
 23395  0011F8  6EDA               	movwf	fsr2h,c
 23396  0011FA  04DE               	decf	postinc2,w,c
 23397  0011FC  A4D8               	btfss	status,2,c
 23398  0011FE  D0C3               	goto	l1088
 23399                           
 23400                           ; BSR set to: 0
 23401  001200  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23402  001202  0D0E               	mullw	14
 23403  001204  0E08               	movlw	8
 23404  001206  26F3               	addwf	prodl,f,c
 23405  001208  0E00               	movlw	0
 23406  00120A  22F4               	addwfc	prodh,f,c
 23407  00120C  0E00               	movlw	low _Channels
 23408  00120E  24F3               	addwf	prodl,w,c
 23409  001210  6ED9               	movwf	fsr2l,c
 23410  001212  0E04               	movlw	high _Channels
 23411  001214  20F4               	addwfc	prodh,w,c
 23412  001216  6EDA               	movwf	fsr2h,c
 23413  001218  50DE               	movf	postinc2,w,c
 23414  00121A  10DE               	iorwf	postinc2,w,c
 23415  00121C  10DE               	iorwf	postinc2,w,c
 23416  00121E  10DE               	iorwf	postinc2,w,c
 23417  001220  B4D8               	btfsc	status,2,c
 23418  001222  D0B1               	goto	l1088
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;lorawan_eu.c: 414: {
 23422                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 23423  001224  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23424  001226  0102               	movlb	2	; () banked
 23425  001228  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 23426  00122A  B4D8               	btfsc	status,2,c
 23427  00122C  D06D               	goto	l1087
 23428                           
 23429                           ; BSR set to: 2
 23430                           ;lorawan_eu.c: 416: {
 23431                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 23432  00122E  0100               	movlb	0	; () banked
 23433  001230  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23434  001232  0D0E               	mullw	14
 23435  001234  0E08               	movlw	8
 23436  001236  26F3               	addwf	prodl,f,c
 23437  001238  0E00               	movlw	0
 23438  00123A  22F4               	addwfc	prodh,f,c
 23439  00123C  0E00               	movlw	low _Channels
 23440  00123E  24F3               	addwf	prodl,w,c
 23441  001240  6ED9               	movwf	fsr2l,c
 23442  001242  0E04               	movlw	high _Channels
 23443  001244  20F4               	addwfc	prodh,w,c
 23444  001246  6EDA               	movwf	fsr2h,c
 23445  001248  50DE               	movf	postinc2,w,c
 23446  00124A  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 23447  00124C  50DE               	movf	postinc2,w,c
 23448  00124E  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 23449  001250  50DE               	movf	postinc2,w,c
 23450  001252  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 23451  001254  50DE               	movf	postinc2,w,c
 23452  001256  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 23453  001258  B0D8               	btfsc	status,0,c
 23454  00125A  D046               	goto	l1086
 23455                           
 23456                           ; BSR set to: 0
 23457                           ;lorawan_eu.c: 418: {
 23458                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 23459  00125C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23460  00125E  0D0E               	mullw	14
 23461  001260  0E08               	movlw	8
 23462  001262  26F3               	addwf	prodl,f,c
 23463  001264  0E00               	movlw	0
 23464  001266  22F4               	addwfc	prodh,f,c
 23465  001268  0E00               	movlw	low _Channels
 23466  00126A  24F3               	addwf	prodl,w,c
 23467  00126C  6ED9               	movwf	fsr2l,c
 23468  00126E  0E04               	movlw	high _Channels
 23469  001270  20F4               	addwfc	prodh,w,c
 23470  001272  6EDA               	movwf	fsr2h,c
 23471  001274  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 23472  001278  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 23473  00127C  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 23474  001280  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 23475  001284  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 23476  001288  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 23477  00128C  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 23478  001290  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 23479  001294  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23480  001296  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23481  001298  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23482  00129A  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23483  00129C  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23484  00129E  0E00               	movlw	0
 23485  0012A0  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23486  0012A2  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23487  0012A4  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23488  0012A6  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 23489  0012A8  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 23490  0012AA  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 23491  0012AC  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23492  0012AE  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 23493  0012B0  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 23494  0012B2  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23495  0012B4  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 23496  0012B6  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 23497  0012B8  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23498  0012BA  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 23499  0012BC  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 23500  0012BE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23501  0012C0  0D0E               	mullw	14
 23502  0012C2  0E08               	movlw	8
 23503  0012C4  26F3               	addwf	prodl,f,c
 23504  0012C6  0E00               	movlw	0
 23505  0012C8  22F4               	addwfc	prodh,f,c
 23506  0012CA  0E00               	movlw	low _Channels
 23507  0012CC  24F3               	addwf	prodl,w,c
 23508  0012CE  6ED9               	movwf	fsr2l,c
 23509  0012D0  0E04               	movlw	high _Channels
 23510  0012D2  20F4               	addwfc	prodh,w,c
 23511  0012D4  6EDA               	movwf	fsr2h,c
 23512  0012D6  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 23513  0012DA  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 23514  0012DE  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 23515  0012E2  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 23516                           
 23517                           ;lorawan_eu.c: 420: }
 23518  0012E6  D010               	goto	l1087
 23519  0012E8                     l1086:
 23520                           
 23521                           ; BSR set to: 0
 23522                           ;lorawan_eu.c: 421: else
 23523                           ;lorawan_eu.c: 422: {
 23524                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 23525                           
 23526                           ; BSR set to: 0
 23527  0012E8  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23528  0012EA  0D0E               	mullw	14
 23529  0012EC  0E08               	movlw	8
 23530  0012EE  26F3               	addwf	prodl,f,c
 23531  0012F0  0E00               	movlw	0
 23532  0012F2  22F4               	addwfc	prodh,f,c
 23533  0012F4  0E00               	movlw	low _Channels
 23534  0012F6  24F3               	addwf	prodl,w,c
 23535  0012F8  6ED9               	movwf	fsr2l,c
 23536  0012FA  0E04               	movlw	high _Channels
 23537  0012FC  20F4               	addwfc	prodh,w,c
 23538  0012FE  6EDA               	movwf	fsr2h,c
 23539  001300  6ADE               	clrf	postinc2,c
 23540  001302  6ADE               	clrf	postinc2,c
 23541  001304  6ADE               	clrf	postinc2,c
 23542  001306  6ADD               	clrf	postdec2,c
 23543  001308                     l1087:
 23544                           
 23545                           ;lorawan_eu.c: 424: }
 23546                           ;lorawan_eu.c: 425: }
 23547                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 23548                           
 23549                           ; BSR set to: 0
 23550  001308  0100               	movlb	0	; () banked
 23551  00130A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23552  00130C  0D0E               	mullw	14
 23553  00130E  0E08               	movlw	8
 23554  001310  26F3               	addwf	prodl,f,c
 23555  001312  0E00               	movlw	0
 23556  001314  22F4               	addwfc	prodh,f,c
 23557  001316  0E00               	movlw	low _Channels
 23558  001318  24F3               	addwf	prodl,w,c
 23559  00131A  6ED9               	movwf	fsr2l,c
 23560  00131C  0E04               	movlw	high _Channels
 23561  00131E  20F4               	addwfc	prodh,w,c
 23562  001320  6EDA               	movwf	fsr2h,c
 23563  001322  50DE               	movf	postinc2,w,c
 23564  001324  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 23565  001326  50DE               	movf	postinc2,w,c
 23566  001328  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23567  00132A  50DE               	movf	postinc2,w,c
 23568  00132C  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23569  00132E  50DE               	movf	postinc2,w,c
 23570  001330  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23571  001332  A0D8               	btfss	status,0,c
 23572  001334  D028               	goto	l1088
 23573                           
 23574                           ; BSR set to: 0
 23575  001336  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23576  001338  0D0E               	mullw	14
 23577  00133A  0E08               	movlw	8
 23578  00133C  26F3               	addwf	prodl,f,c
 23579  00133E  0E00               	movlw	0
 23580  001340  22F4               	addwfc	prodh,f,c
 23581  001342  0E00               	movlw	low _Channels
 23582  001344  24F3               	addwf	prodl,w,c
 23583  001346  6ED9               	movwf	fsr2l,c
 23584  001348  0E04               	movlw	high _Channels
 23585  00134A  20F4               	addwfc	prodh,w,c
 23586  00134C  6EDA               	movwf	fsr2h,c
 23587  00134E  50DE               	movf	postinc2,w,c
 23588  001350  10DE               	iorwf	postinc2,w,c
 23589  001352  10DE               	iorwf	postinc2,w,c
 23590  001354  10DE               	iorwf	postinc2,w,c
 23591  001356  B4D8               	btfsc	status,2,c
 23592  001358  D016               	goto	l1088
 23593                           
 23594                           ; BSR set to: 0
 23595                           ;lorawan_eu.c: 427: {
 23596                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 23597  00135A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23598  00135C  0D0E               	mullw	14
 23599  00135E  0E08               	movlw	8
 23600  001360  26F3               	addwf	prodl,f,c
 23601  001362  0E00               	movlw	0
 23602  001364  22F4               	addwfc	prodh,f,c
 23603  001366  0E00               	movlw	low _Channels
 23604  001368  24F3               	addwf	prodl,w,c
 23605  00136A  6ED9               	movwf	fsr2l,c
 23606  00136C  0E04               	movlw	high _Channels
 23607  00136E  20F4               	addwfc	prodh,w,c
 23608  001370  6EDA               	movwf	fsr2h,c
 23609  001372  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 23610  001376  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 23611  00137A  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 23612  00137E  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 23613                           
 23614                           ; BSR set to: 0
 23615                           ;lorawan_eu.c: 429: found = 1;
 23616  001382  0E01               	movlw	1
 23617  001384  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 23618  001386                     l1088:
 23619                           
 23620                           ; BSR set to: 0
 23621                           
 23622                           ; BSR set to: 0
 23623                           
 23624                           ; BSR set to: 0
 23625  001386  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 23626  001388  D728               	goto	l15395
 23627  00138A                     u18860:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;lorawan_eu.c: 430: }
 23631                           ;lorawan_eu.c: 431: }
 23632                           ;lorawan_eu.c: 432: }
 23633                           ;lorawan_eu.c: 433: if (found == 1)
 23634                           
 23635                           ; BSR set to: 0
 23636  00138A  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 23637  00138C  A4D8               	btfss	status,2,c
 23638  00138E  D067               	goto	l1089
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;lorawan_eu.c: 434: {
 23642                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 23643  001390  C0DE  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 23644  001394  C0DF  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 23645  001398  C0E0  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 23646  00139C  C0E1  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 23647                           
 23648                           ; BSR set to: 0
 23649                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 23650  0013A0  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23651  0013A2  E107               	bnz	u18880
 23652  0013A4  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 23653  0013A6  0EFF               	movlw	255
 23654  0013A8  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23655  0013AA  0E0F               	movlw	15
 23656  0013AC  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23657  0013AE  A0D8               	btfss	status,0,c
 23658  0013B0  D01C               	goto	l1091
 23659  0013B2                     u18880:
 23660                           
 23661                           ; BSR set to: 0
 23662  0013B2  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 23663  0013B6  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 23664  0013BA  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 23665  0013BE  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 23666  0013C2  0E7D               	movlw	125
 23667  0013C4  6F64               	movwf	___lldiv@divisor& (0+255),b
 23668  0013C6  0E00               	movlw	0
 23669  0013C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23670  0013CA  0E00               	movlw	0
 23671  0013CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23672  0013CE  0E00               	movlw	0
 23673  0013D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23674  0013D2  EC8F  F039         	call	___lldiv	;wreg free
 23675  0013D6  0E0C               	movlw	12
 23676  0013D8                     u18895:
 23677  0013D8  90D8               	bcf	status,0,c
 23678  0013DA  0100               	movlb	0	; () banked
 23679  0013DC  3760               	rlcf	?___lldiv& (0+255),f,b
 23680  0013DE  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 23681  0013E0  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 23682  0013E2  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 23683  0013E4  2EE8               	decfsz	wreg,f,c
 23684  0013E6  D7F8               	goto	u18895
 23685  0013E8  D022               	goto	L17
 23686  0013EA                     l1091:
 23687                           
 23688                           ; BSR set to: 0
 23689                           
 23690                           ; BSR set to: 0
 23691  0013EA  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 23692  0013EE  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 23693  0013F2  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 23694  0013F6  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 23695  0013FA  0E0C               	movlw	12
 23696  0013FC                     u18905:
 23697  0013FC  90D8               	bcf	status,0,c
 23698  0013FE  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 23699  001400  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23700  001402  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23701  001404  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23702  001406  2EE8               	decfsz	wreg,f,c
 23703  001408  D7F9               	goto	u18905
 23704  00140A  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 23705  00140E  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 23706  001412  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 23707  001416  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 23708  00141A  0E7D               	movlw	125
 23709  00141C  6F64               	movwf	___lldiv@divisor& (0+255),b
 23710  00141E  0E00               	movlw	0
 23711  001420  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23712  001422  0E00               	movlw	0
 23713  001424  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23714  001426  0E00               	movlw	0
 23715  001428  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23716  00142A  EC8F  F039         	call	___lldiv	;wreg free
 23717  00142E                     L17:
 23718  00142E  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$1972
 23719  001432  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$1972+1
 23720  001436  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$1972+2
 23721  00143A  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$1972+3
 23722  00143E  C0CD  F06D         	movff	_LORAWAN_TxDone$1972,SwTimerSetTimeout@timeout
 23723  001442  C0CE  F06E         	movff	_LORAWAN_TxDone$1972+1,SwTimerSetTimeout@timeout+1
 23724  001446  C0CF  F06F         	movff	_LORAWAN_TxDone$1972+2,SwTimerSetTimeout@timeout+2
 23725  00144A  C0D0  F070         	movff	_LORAWAN_TxDone$1972+3,SwTimerSetTimeout@timeout+3
 23726  00144E  0102               	movlb	2	; () banked
 23727  001450  51E9               	movf	(_loRa+233)& (0+255),w,b
 23728  001452  ECDB  F040         	call	_SwTimerSetTimeout
 23729                           
 23730                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 23731  001456  0102               	movlb	2	; () banked
 23732  001458  51E9               	movf	(_loRa+233)& (0+255),w,b
 23733  00145A  ECD1  F036         	call	_SwTimerStart
 23734  00145E                     l1089:
 23735                           
 23736                           ;lorawan_eu.c: 438: }
 23737                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 23738  00145E  0E02               	movlw	2
 23739  001460  0102               	movlb	2	; () banked
 23740  001462  1912               	xorwf	(_loRa+18)& (0+255),w,b
 23741  001464  A4D8               	btfss	status,2,c
 23742  001466  0012               	return	
 23743                           
 23744                           ; BSR set to: 2
 23745                           ;lorawan_eu.c: 440: {
 23746                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 23747  001468  5102               	movf	(_loRa+2)& (0+255),w,b
 23748  00146A  0BF0               	andlw	-16
 23749  00146C  0908               	iorlw	8
 23750  00146E  6F02               	movwf	(_loRa+2)& (0+255),b
 23751                           
 23752                           ; BSR set to: 2
 23753                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 23754  001470  EC51  F03A         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 23755                           
 23756                           ;lorawan_eu.c: 443: }
 23757                           ;lorawan_eu.c: 444: }
 23758  001474  0012               	return	
 23759  001476                     l1073:
 23760                           
 23761                           ;lorawan_eu.c: 445: else
 23762                           ;lorawan_eu.c: 446: {
 23763                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 23764  001476  EC08  F046         	call	_RADIO_GetStatus	;wreg free
 23765  00147A  0100               	movlb	0	; () banked
 23766  00147C  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 23767  00147E  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 23768  001480  D014               	goto	l1096
 23769                           
 23770                           ; BSR set to: 0
 23771                           ;lorawan_eu.c: 448: {
 23772                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 23773  001482  0E00               	movlw	0
 23774  001484  6F60               	movwf	RxData@pData& (0+255),b
 23775  001486  0E00               	movlw	0
 23776  001488  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23777  00148A  0E00               	movlw	0
 23778  00148C  6F62               	movwf	RxData@dataLength& (0+255),b
 23779  00148E  0E02               	movlw	2
 23780  001490  6F63               	movwf	RxData@status& (0+255),b
 23781  001492  D801               	call	u18938
 23782  001494  0012               	return	
 23783  001496                     u18938:
 23784  001496  0005               	push	
 23785  001498  6EFA               	movwf	pclath,c
 23786  00149A  0101               	movlb	1	; () banked
 23787  00149C  5169               	movf	_rxPayload& (0+255),w,b
 23788  00149E  6EFD               	movwf	tosl,c
 23789  0014A0  516A               	movf	(_rxPayload+1)& (0+255),w,b
 23790  0014A2  6EFE               	movwf	tosh,c
 23791  0014A4  6AFF               	clrf	tosu,c
 23792  0014A6  50FA               	movf	pclath,w,c
 23793  0014A8  0012               	return		;indir
 23794  0014AA                     l1096:
 23795                           
 23796                           ;lorawan_eu.c: 452: else
 23797                           ;lorawan_eu.c: 453: {
 23798                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 23799  0014AA  0101               	movlb	1	; () banked
 23800  0014AC  5169               	movf	_rxPayload& (0+255),w,b
 23801  0014AE  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 23802  0014B0  B4D8               	btfsc	status,2,c
 23803  0014B2  0012               	return	
 23804                           
 23805                           ; BSR set to: 1
 23806                           ;lorawan_eu.c: 456: {
 23807                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 23808  0014B4  0E00               	movlw	0
 23809  0014B6  0100               	movlb	0	; () banked
 23810  0014B8  6F60               	movwf	RxData@pData& (0+255),b
 23811  0014BA  0E00               	movlw	0
 23812  0014BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23813  0014BE  0E00               	movlw	0
 23814  0014C0  6F62               	movwf	RxData@dataLength& (0+255),b
 23815  0014C2  0E03               	movlw	3
 23816  0014C4  6F63               	movwf	RxData@status& (0+255),b
 23817  0014C6  D801               	call	u18958
 23818  0014C8  0012               	return	
 23819  0014CA                     u18958:
 23820  0014CA  0005               	push	
 23821  0014CC  6EFA               	movwf	pclath,c
 23822  0014CE  0101               	movlb	1	; () banked
 23823  0014D0  5169               	movf	_rxPayload& (0+255),w,b
 23824  0014D2  6EFD               	movwf	tosl,c
 23825  0014D4  516A               	movf	(_rxPayload+1)& (0+255),w,b
 23826  0014D6  6EFE               	movwf	tosh,c
 23827  0014D8  6AFF               	clrf	tosu,c
 23828  0014DA  50FA               	movf	pclath,w,c
 23829  0014DC  0012               	return		;indir
 23830  0014DE                     __end_of_LORAWAN_TxDone:
 23831                           	opt stack 0
 23832                           tosu	equ	0xFFF
 23833                           tosh	equ	0xFFE
 23834                           tosl	equ	0xFFD
 23835                           pclath	equ	0xFFA
 23836                           tblptru	equ	0xFF8
 23837                           tblptrh	equ	0xFF7
 23838                           tblptrl	equ	0xFF6
 23839                           tablat	equ	0xFF5
 23840                           prodh	equ	0xFF4
 23841                           prodl	equ	0xFF3
 23842                           intcon	equ	0xFF2
 23843                           intcon2	equ	0xFF1
 23844                           intcon3	equ	0xFF0
 23845                           indf0	equ	0xFEF
 23846                           postinc0	equ	0xFEE
 23847                           fsr0h	equ	0xFEA
 23848                           fsr0l	equ	0xFE9
 23849                           wreg	equ	0xFE8
 23850                           postinc1	equ	0xFE6
 23851                           postdec1	equ	0xFE5
 23852                           plusw1	equ	0xFE3
 23853                           fsr1h	equ	0xFE2
 23854                           fsr1l	equ	0xFE1
 23855                           indf2	equ	0xFDF
 23856                           postinc2	equ	0xFDE
 23857                           postdec2	equ	0xFDD
 23858                           plusw2	equ	0xFDB
 23859                           fsr2h	equ	0xFDA
 23860                           fsr2l	equ	0xFD9
 23861                           status	equ	0xFD8
 23862                           
 23863 ;; *************** function _SwTimerReadValue *****************
 23864 ;; Defined at:
 23865 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 23866 ;; Parameters:    Size  Location     Type
 23867 ;;  timerId         1    wreg     unsigned char 
 23868 ;; Auto vars:     Size  Location     Type
 23869 ;;  timerId         1   57[BANK0 ] unsigned char 
 23870 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 23871 ;; Return value:  Size  Location     Type
 23872 ;;                  4   49[BANK0 ] unsigned long 
 23873 ;; Registers used:
 23874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23875 ;; Tracked objects:
 23876 ;;		On entry : 0/0
 23877 ;;		On exit  : 0/0
 23878 ;;		Unchanged: 0/0
 23879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23881 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23883 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23884 ;;Total ram usage:        9 bytes
 23885 ;; Hardware stack levels used:    1
 23886 ;; Hardware stack levels required when called:   10
 23887 ;; This function calls:
 23888 ;;		_SwTimersInterrupt
 23889 ;; This function is called by:
 23890 ;;		_RADIO_TxDone
 23891 ;;		_RADIO_FSKPacketSent
 23892 ;;		_LORAWAN_TxDone
 23893 ;;		_LORAWAN_Pause
 23894 ;; This function uses a non-reentrant model
 23895 ;;
 23896                           
 23897                           	psect	text104
 23898  0082C0                     __ptext104:
 23899                           	opt stack 0
 23900  0082C0                     _SwTimerReadValue:
 23901                           	opt stack 16
 23902                           
 23903                           ;incstack = 0
 23904                           ;SwTimerReadValue@timerId stored from wreg
 23905  0082C0  0100               	movlb	0	; () banked
 23906  0082C2  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 23907                           
 23908                           ;sw_timer.c: 195: uint32_t ticksCount;
 23909                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 23910  0082C4  9EF2               	bcf	intcon,7,c	;volatile
 23911                           
 23912                           ;sw_timer.c: 200: SwTimersInterrupt();
 23913  0082C6  EC0C  F02E         	call	_SwTimersInterrupt	;wreg free
 23914                           
 23915                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 23916  0082CA  0100               	movlb	0	; () banked
 23917  0082CC  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 23918  0082CE  0D08               	mullw	8
 23919  0082D0  0E00               	movlw	low _swTimers
 23920  0082D2  24F3               	addwf	prodl,w,c
 23921  0082D4  6ED9               	movwf	fsr2l,c
 23922  0082D6  0E03               	movlw	high _swTimers
 23923  0082D8  20F4               	addwfc	prodh,w,c
 23924  0082DA  6EDA               	movwf	fsr2h,c
 23925  0082DC  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 23926  0082E0  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 23927  0082E4  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 23928  0082E8  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 23932  0082EC  8EF2               	bsf	intcon,7,c	;volatile
 23933                           
 23934                           ; BSR set to: 0
 23935                           ;sw_timer.c: 204: return ticksCount;
 23936  0082EE  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 23937  0082F2  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 23938  0082F6  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 23939  0082FA  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 23940  0082FE  0012               	return	
 23941  008300                     __end_of_SwTimerReadValue:
 23942                           	opt stack 0
 23943                           tosu	equ	0xFFF
 23944                           tosh	equ	0xFFE
 23945                           tosl	equ	0xFFD
 23946                           pclath	equ	0xFFA
 23947                           tblptru	equ	0xFF8
 23948                           tblptrh	equ	0xFF7
 23949                           tblptrl	equ	0xFF6
 23950                           tablat	equ	0xFF5
 23951                           prodh	equ	0xFF4
 23952                           prodl	equ	0xFF3
 23953                           intcon	equ	0xFF2
 23954                           intcon2	equ	0xFF1
 23955                           intcon3	equ	0xFF0
 23956                           indf0	equ	0xFEF
 23957                           postinc0	equ	0xFEE
 23958                           fsr0h	equ	0xFEA
 23959                           fsr0l	equ	0xFE9
 23960                           wreg	equ	0xFE8
 23961                           postinc1	equ	0xFE6
 23962                           postdec1	equ	0xFE5
 23963                           plusw1	equ	0xFE3
 23964                           fsr1h	equ	0xFE2
 23965                           fsr1l	equ	0xFE1
 23966                           indf2	equ	0xFDF
 23967                           postinc2	equ	0xFDE
 23968                           postdec2	equ	0xFDD
 23969                           plusw2	equ	0xFDB
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function _SwTimerIsRunning *****************
 23975 ;; Defined at:
 23976 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  timerId         1    wreg     unsigned char 
 23979 ;; Auto vars:     Size  Location     Type
 23980 ;;  timerId         1    0[BANK0 ] unsigned char 
 23981 ;;  isRunning       1    1[BANK0 ] unsigned char 
 23982 ;; Return value:  Size  Location     Type
 23983 ;;                  1    wreg      unsigned char 
 23984 ;; Registers used:
 23985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23986 ;; Tracked objects:
 23987 ;;		On entry : 0/0
 23988 ;;		On exit  : 0/0
 23989 ;;		Unchanged: 0/0
 23990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23995 ;;Total ram usage:        2 bytes
 23996 ;; Hardware stack levels used:    1
 23997 ;; Hardware stack levels required when called:    7
 23998 ;; This function calls:
 23999 ;;		Nothing
 24000 ;; This function is called by:
 24001 ;;		_LORAWAN_TxDone
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           
 24005                           	psect	text105
 24006  008610                     __ptext105:
 24007                           	opt stack 0
 24008  008610                     _SwTimerIsRunning:
 24009                           	opt stack 19
 24010                           
 24011                           ; BSR set to: 0
 24012                           ;incstack = 0
 24013                           ;SwTimerIsRunning@timerId stored from wreg
 24014  008610  0100               	movlb	0	; () banked
 24015  008612  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 24016                           
 24017                           ;sw_timer.c: 209: uint8_t isRunning;
 24018                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 24019  008614  9EF2               	bcf	intcon,7,c	;volatile
 24020                           
 24021                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 24022  008616  0100               	movlb	0	; () banked
 24023  008618  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 24024  00861A  0D08               	mullw	8
 24025  00861C  0E04               	movlw	4
 24026  00861E  26F3               	addwf	prodl,f,c
 24027  008620  0E00               	movlw	0
 24028  008622  22F4               	addwfc	prodh,f,c
 24029  008624  0E00               	movlw	low _swTimers
 24030  008626  24F3               	addwf	prodl,w,c
 24031  008628  6ED9               	movwf	fsr2l,c
 24032  00862A  0E03               	movlw	high _swTimers
 24033  00862C  20F4               	addwfc	prodh,w,c
 24034  00862E  6EDA               	movwf	fsr2h,c
 24035  008630  50DF               	movf	indf2,w,c
 24036  008632  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 24037                           
 24038                           ; BSR set to: 0
 24039                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 24040  008634  8EF2               	bsf	intcon,7,c	;volatile
 24041                           
 24042                           ; BSR set to: 0
 24043                           ;sw_timer.c: 215: return isRunning;
 24044  008636  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 24045  008638  0012               	return	
 24046  00863A                     __end_of_SwTimerIsRunning:
 24047                           	opt stack 0
 24048                           tosu	equ	0xFFF
 24049                           tosh	equ	0xFFE
 24050                           tosl	equ	0xFFD
 24051                           pclath	equ	0xFFA
 24052                           tblptru	equ	0xFF8
 24053                           tblptrh	equ	0xFF7
 24054                           tblptrl	equ	0xFF6
 24055                           tablat	equ	0xFF5
 24056                           prodh	equ	0xFF4
 24057                           prodl	equ	0xFF3
 24058                           intcon	equ	0xFF2
 24059                           intcon2	equ	0xFF1
 24060                           intcon3	equ	0xFF0
 24061                           indf0	equ	0xFEF
 24062                           postinc0	equ	0xFEE
 24063                           fsr0h	equ	0xFEA
 24064                           fsr0l	equ	0xFE9
 24065                           wreg	equ	0xFE8
 24066                           postinc1	equ	0xFE6
 24067                           postdec1	equ	0xFE5
 24068                           plusw1	equ	0xFE3
 24069                           fsr1h	equ	0xFE2
 24070                           fsr1l	equ	0xFE1
 24071                           indf2	equ	0xFDF
 24072                           postinc2	equ	0xFDE
 24073                           postdec2	equ	0xFDD
 24074                           plusw2	equ	0xFDB
 24075                           fsr2h	equ	0xFDA
 24076                           fsr2l	equ	0xFD9
 24077                           status	equ	0xFD8
 24078                           
 24079 ;; *************** function _RADIO_GetStatus *****************
 24080 ;; Defined at:
 24081 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24082 ;; Parameters:    Size  Location     Type
 24083 ;;		None
 24084 ;; Auto vars:     Size  Location     Type
 24085 ;;		None
 24086 ;; Return value:  Size  Location     Type
 24087 ;;                  1    wreg      unsigned char 
 24088 ;; Registers used:
 24089 ;;		wreg, status,2
 24090 ;; Tracked objects:
 24091 ;;		On entry : 0/0
 24092 ;;		On exit  : 0/0
 24093 ;;		Unchanged: 0/0
 24094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24099 ;;Total ram usage:        0 bytes
 24100 ;; Hardware stack levels used:    1
 24101 ;; Hardware stack levels required when called:    7
 24102 ;; This function calls:
 24103 ;;		Nothing
 24104 ;; This function is called by:
 24105 ;;		_LORAWAN_TxDone
 24106 ;;		_LORAWAN_ReceiveWindow2Callback
 24107 ;;		_LORAWAN_RxDone
 24108 ;; This function uses a non-reentrant model
 24109 ;;
 24110                           
 24111                           	psect	text106
 24112  008C10                     __ptext106:
 24113                           	opt stack 0
 24114  008C10                     _RADIO_GetStatus:
 24115                           	opt stack 19
 24116                           
 24117                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;incstack = 0
 24121  008C10  0101               	movlb	1	; () banked
 24122  008C12  519D               	movf	(_RadioConfiguration+35)& (0+255),w,b
 24123  008C14  0012               	return	
 24124  008C16                     __end_of_RADIO_GetStatus:
 24125                           	opt stack 0
 24126                           tosu	equ	0xFFF
 24127                           tosh	equ	0xFFE
 24128                           tosl	equ	0xFFD
 24129                           pclath	equ	0xFFA
 24130                           tblptru	equ	0xFF8
 24131                           tblptrh	equ	0xFF7
 24132                           tblptrl	equ	0xFF6
 24133                           tablat	equ	0xFF5
 24134                           prodh	equ	0xFF4
 24135                           prodl	equ	0xFF3
 24136                           intcon	equ	0xFF2
 24137                           intcon2	equ	0xFF1
 24138                           intcon3	equ	0xFF0
 24139                           indf0	equ	0xFEF
 24140                           postinc0	equ	0xFEE
 24141                           fsr0h	equ	0xFEA
 24142                           fsr0l	equ	0xFE9
 24143                           wreg	equ	0xFE8
 24144                           postinc1	equ	0xFE6
 24145                           postdec1	equ	0xFE5
 24146                           plusw1	equ	0xFE3
 24147                           fsr1h	equ	0xFE2
 24148                           fsr1l	equ	0xFE1
 24149                           indf2	equ	0xFDF
 24150                           postinc2	equ	0xFDE
 24151                           postdec2	equ	0xFDD
 24152                           plusw2	equ	0xFDB
 24153                           fsr2h	equ	0xFDA
 24154                           fsr2l	equ	0xFD9
 24155                           status	equ	0xFD8
 24156                           
 24157 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 24158 ;; Defined at:
 24159 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24160 ;; Parameters:    Size  Location     Type
 24161 ;;		None
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;		None
 24164 ;; Return value:  Size  Location     Type
 24165 ;;                  1    wreg      void 
 24166 ;; Registers used:
 24167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24168 ;; Tracked objects:
 24169 ;;		On entry : 0/0
 24170 ;;		On exit  : 0/0
 24171 ;;		Unchanged: 0/0
 24172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24177 ;;Total ram usage:        0 bytes
 24178 ;; Hardware stack levels used:    1
 24179 ;; Hardware stack levels required when called:   13
 24180 ;; This function calls:
 24181 ;;		_ConfigureRadioRx
 24182 ;;		_RADIO_ReceiveStart
 24183 ;;		_RADIO_ReceiveStop
 24184 ;;		_RADIO_ReleaseData
 24185 ;;		_ResetParametersForConfirmedTransmission
 24186 ;;		_ResetParametersForUnconfirmedTransmission
 24187 ;;		_RxData
 24188 ;; This function is called by:
 24189 ;;		_LORAWAN_TxDone
 24190 ;;		_LORAWAN_ReceiveWindow2Callback
 24191 ;;		_LORAWAN_RxDone
 24192 ;;		_SetReceptionNotOkState
 24193 ;; This function uses a non-reentrant model
 24194 ;;
 24195                           
 24196                           	psect	text107
 24197  0074A2                     __ptext107:
 24198                           	opt stack 0
 24199  0074A2                     _LORAWAN_EnterContinuousReceive:
 24200                           	opt stack 13
 24201                           
 24202                           ;lorawan.c: 917: RADIO_ReceiveStop();
 24203                           
 24204                           ; BSR set to: 1
 24205                           ;incstack = 0
 24206  0074A2  EC23  F044         	call	_RADIO_ReceiveStop	;wreg free
 24207                           
 24208                           ;lorawan.c: 918: RADIO_ReleaseData();
 24209  0074A6  EC0B  F046         	call	_RADIO_ReleaseData	;wreg free
 24210                           
 24211                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 24212  0074AA  C218  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 24213  0074AE  C219  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 24214  0074B2  C21A  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 24215  0074B6  C21B  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 24216  0074BA  0102               	movlb	2	; () banked
 24217  0074BC  511C               	movf	(_loRa+28)& (0+255),w,b
 24218  0074BE  EC1D  F043         	call	_ConfigureRadioRx
 24219                           
 24220                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 24221  0074C2  0E00               	movlw	0
 24222  0074C4  0100               	movlb	0	; () banked
 24223  0074C6  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 24224  0074C8  0E00               	movlw	0
 24225  0074CA  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 24226  0074CC  EC2C  F01E         	call	_RADIO_ReceiveStart	;wreg free
 24227  0074D0  0100               	movlb	0	; () banked
 24228  0074D2  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 24229  0074D4  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 24230  0074D6  B4D8               	btfsc	status,2,c
 24231  0074D8  0012               	return	
 24232                           
 24233                           ; BSR set to: 0
 24234                           ;lorawan.c: 923: {
 24235                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 24236  0074DA  EC4C  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
 24237                           
 24238                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 24239  0074DE  EC25  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 24240                           
 24241                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 24242  0074E2  0102               	movlb	2	; () banked
 24243  0074E4  9102               	bcf	(_loRa+2)& (0+255),0,b
 24244  0074E6  9302               	bcf	(_loRa+2)& (0+255),1,b
 24245  0074E8  9502               	bcf	(_loRa+2)& (0+255),2,b
 24246  0074EA  9702               	bcf	(_loRa+2)& (0+255),3,b
 24247                           
 24248                           ; BSR set to: 2
 24249                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 24250  0074EC  0101               	movlb	1	; () banked
 24251  0074EE  5169               	movf	_rxPayload& (0+255),w,b
 24252  0074F0  116A               	iorwf	(_rxPayload+1)& (0+255),w,b
 24253  0074F2  B4D8               	btfsc	status,2,c
 24254  0074F4  0012               	return	
 24255                           
 24256                           ; BSR set to: 1
 24257                           ;lorawan.c: 928: {
 24258                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 24259  0074F6  0E00               	movlw	0
 24260  0074F8  0100               	movlb	0	; () banked
 24261  0074FA  6F60               	movwf	RxData@pData& (0+255),b
 24262  0074FC  0E00               	movlw	0
 24263  0074FE  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24264  007500  0E00               	movlw	0
 24265  007502  6F62               	movwf	RxData@dataLength& (0+255),b
 24266  007504  0E00               	movlw	0
 24267  007506  6F63               	movwf	RxData@status& (0+255),b
 24268  007508  D801               	call	u16588
 24269  00750A  0012               	return	
 24270  00750C                     u16588:
 24271  00750C  0005               	push	
 24272  00750E  6EFA               	movwf	pclath,c
 24273  007510  0101               	movlb	1	; () banked
 24274  007512  5169               	movf	_rxPayload& (0+255),w,b
 24275  007514  6EFD               	movwf	tosl,c
 24276  007516  516A               	movf	(_rxPayload+1)& (0+255),w,b
 24277  007518  6EFE               	movwf	tosh,c
 24278  00751A  6AFF               	clrf	tosu,c
 24279  00751C  50FA               	movf	pclath,w,c
 24280  00751E  0012               	return		;indir
 24281  007520                     __end_of_LORAWAN_EnterContinuousReceive:
 24282                           	opt stack 0
 24283                           tosu	equ	0xFFF
 24284                           tosh	equ	0xFFE
 24285                           tosl	equ	0xFFD
 24286                           pclath	equ	0xFFA
 24287                           tblptru	equ	0xFF8
 24288                           tblptrh	equ	0xFF7
 24289                           tblptrl	equ	0xFF6
 24290                           tablat	equ	0xFF5
 24291                           prodh	equ	0xFF4
 24292                           prodl	equ	0xFF3
 24293                           intcon	equ	0xFF2
 24294                           intcon2	equ	0xFF1
 24295                           intcon3	equ	0xFF0
 24296                           indf0	equ	0xFEF
 24297                           postinc0	equ	0xFEE
 24298                           fsr0h	equ	0xFEA
 24299                           fsr0l	equ	0xFE9
 24300                           wreg	equ	0xFE8
 24301                           postinc1	equ	0xFE6
 24302                           postdec1	equ	0xFE5
 24303                           plusw1	equ	0xFE3
 24304                           fsr1h	equ	0xFE2
 24305                           fsr1l	equ	0xFE1
 24306                           indf2	equ	0xFDF
 24307                           postinc2	equ	0xFDE
 24308                           postdec2	equ	0xFDD
 24309                           plusw2	equ	0xFDB
 24310                           fsr2h	equ	0xFDA
 24311                           fsr2l	equ	0xFD9
 24312                           status	equ	0xFD8
 24313                           
 24314 ;; *************** function _RxData *****************
 24315 ;; Defined at:
 24316 ;;		line 55 in file "main.c"
 24317 ;; Parameters:    Size  Location     Type
 24318 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 24319 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 24320 ;;  dataLength      1    2[BANK0 ] unsigned char 
 24321 ;;  status          1    3[BANK0 ] enum E7320
 24322 ;; Auto vars:     Size  Location     Type
 24323 ;;		None
 24324 ;; Return value:  Size  Location     Type
 24325 ;;                  1    wreg      void 
 24326 ;; Registers used:
 24327 ;;		None
 24328 ;; Tracked objects:
 24329 ;;		On entry : 0/0
 24330 ;;		On exit  : 0/0
 24331 ;;		Unchanged: 0/0
 24332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24337 ;;Total ram usage:        4 bytes
 24338 ;; Hardware stack levels used:    1
 24339 ;; Hardware stack levels required when called:    7
 24340 ;; This function calls:
 24341 ;;		Nothing
 24342 ;; This function is called by:
 24343 ;;		_main
 24344 ;;		_LORAWAN_EnterContinuousReceive
 24345 ;;		_LORAWAN_ReceiveWindow2Callback
 24346 ;;		_SetReceptionNotOkState
 24347 ;;		_LORAWAN_RxDone
 24348 ;;		_LORAWAN_RxTimeout
 24349 ;;		_LORAWAN_TxDone
 24350 ;;		_AckRetransmissionCallback
 24351 ;;		_UnconfirmedTransmissionCallback
 24352 ;; This function uses a non-reentrant model
 24353 ;;
 24354                           
 24355                           	psect	text108
 24356  008C4E                     __ptext108:
 24357                           	opt stack 0
 24358  008C4E                     _RxData:
 24359                           	opt stack 20
 24360                           
 24361                           ;incstack = 0
 24362  008C4E  0012               	return		;funcret
 24363  008C50                     __end_of_RxData:
 24364                           	opt stack 0
 24365                           tosu	equ	0xFFF
 24366                           tosh	equ	0xFFE
 24367                           tosl	equ	0xFFD
 24368                           pclath	equ	0xFFA
 24369                           tblptru	equ	0xFF8
 24370                           tblptrh	equ	0xFF7
 24371                           tblptrl	equ	0xFF6
 24372                           tablat	equ	0xFF5
 24373                           prodh	equ	0xFF4
 24374                           prodl	equ	0xFF3
 24375                           intcon	equ	0xFF2
 24376                           intcon2	equ	0xFF1
 24377                           intcon3	equ	0xFF0
 24378                           indf0	equ	0xFEF
 24379                           postinc0	equ	0xFEE
 24380                           fsr0h	equ	0xFEA
 24381                           fsr0l	equ	0xFE9
 24382                           wreg	equ	0xFE8
 24383                           postinc1	equ	0xFE6
 24384                           postdec1	equ	0xFE5
 24385                           plusw1	equ	0xFE3
 24386                           fsr1h	equ	0xFE2
 24387                           fsr1l	equ	0xFE1
 24388                           indf2	equ	0xFDF
 24389                           postinc2	equ	0xFDE
 24390                           postdec2	equ	0xFDD
 24391                           plusw2	equ	0xFDB
 24392                           fsr2h	equ	0xFDA
 24393                           fsr2l	equ	0xFD9
 24394                           status	equ	0xFD8
 24395                           
 24396 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 24397 ;; Defined at:
 24398 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24399 ;; Parameters:    Size  Location     Type
 24400 ;;		None
 24401 ;; Auto vars:     Size  Location     Type
 24402 ;;		None
 24403 ;; Return value:  Size  Location     Type
 24404 ;;                  1    wreg      void 
 24405 ;; Registers used:
 24406 ;;		wreg, status,2
 24407 ;; Tracked objects:
 24408 ;;		On entry : 0/0
 24409 ;;		On exit  : 0/0
 24410 ;;		Unchanged: 0/0
 24411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24416 ;;Total ram usage:        0 bytes
 24417 ;; Hardware stack levels used:    1
 24418 ;; Hardware stack levels required when called:    7
 24419 ;; This function calls:
 24420 ;;		Nothing
 24421 ;; This function is called by:
 24422 ;;		_LORAWAN_RxTimeout
 24423 ;;		_LORAWAN_ReceiveWindow2Callback
 24424 ;;		_LORAWAN_EnterContinuousReceive
 24425 ;;		_UnconfirmedTransmissionCallback
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text109
 24430  008A4A                     __ptext109:
 24431                           	opt stack 0
 24432  008A4A                     _ResetParametersForUnconfirmedTransmission:
 24433                           	opt stack 20
 24434                           
 24435                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 24436                           
 24437                           ;incstack = 0
 24438  008A4A  0102               	movlb	2	; () banked
 24439  008A4C  9102               	bcf	(_loRa+2)& (0+255),0,b
 24440  008A4E  9302               	bcf	(_loRa+2)& (0+255),1,b
 24441  008A50  9502               	bcf	(_loRa+2)& (0+255),2,b
 24442  008A52  9702               	bcf	(_loRa+2)& (0+255),3,b
 24443                           
 24444                           ; BSR set to: 2
 24445                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 24446  008A54  0E01               	movlw	1
 24447  008A56  6FD8               	movwf	(_loRa+216)& (0+255),b
 24448                           
 24449                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 24450  008A58  0E00               	movlw	0
 24451  008A5A  6FA7               	movwf	(_loRa+167)& (0+255),b
 24452                           
 24453                           ; BSR set to: 2
 24454  008A5C  0012               	return		;funcret
 24455  008A5E                     __end_of_ResetParametersForUnconfirmedTransmission:
 24456                           	opt stack 0
 24457                           tosu	equ	0xFFF
 24458                           tosh	equ	0xFFE
 24459                           tosl	equ	0xFFD
 24460                           pclath	equ	0xFFA
 24461                           tblptru	equ	0xFF8
 24462                           tblptrh	equ	0xFF7
 24463                           tblptrl	equ	0xFF6
 24464                           tablat	equ	0xFF5
 24465                           prodh	equ	0xFF4
 24466                           prodl	equ	0xFF3
 24467                           intcon	equ	0xFF2
 24468                           intcon2	equ	0xFF1
 24469                           intcon3	equ	0xFF0
 24470                           indf0	equ	0xFEF
 24471                           postinc0	equ	0xFEE
 24472                           fsr0h	equ	0xFEA
 24473                           fsr0l	equ	0xFE9
 24474                           wreg	equ	0xFE8
 24475                           postinc1	equ	0xFE6
 24476                           postdec1	equ	0xFE5
 24477                           plusw1	equ	0xFE3
 24478                           fsr1h	equ	0xFE2
 24479                           fsr1l	equ	0xFE1
 24480                           indf2	equ	0xFDF
 24481                           postinc2	equ	0xFDE
 24482                           postdec2	equ	0xFDD
 24483                           plusw2	equ	0xFDB
 24484                           fsr2h	equ	0xFDA
 24485                           fsr2l	equ	0xFD9
 24486                           status	equ	0xFD8
 24487                           
 24488 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 24489 ;; Defined at:
 24490 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24491 ;; Parameters:    Size  Location     Type
 24492 ;;		None
 24493 ;; Auto vars:     Size  Location     Type
 24494 ;;		None
 24495 ;; Return value:  Size  Location     Type
 24496 ;;                  1    wreg      void 
 24497 ;; Registers used:
 24498 ;;		wreg, status,2
 24499 ;; Tracked objects:
 24500 ;;		On entry : 0/0
 24501 ;;		On exit  : 0/0
 24502 ;;		Unchanged: 0/0
 24503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24508 ;;Total ram usage:        0 bytes
 24509 ;; Hardware stack levels used:    1
 24510 ;; Hardware stack levels required when called:    7
 24511 ;; This function calls:
 24512 ;;		Nothing
 24513 ;; This function is called by:
 24514 ;;		_LORAWAN_RxTimeout
 24515 ;;		_LORAWAN_ReceiveWindow2Callback
 24516 ;;		_LORAWAN_EnterContinuousReceive
 24517 ;;		_AckRetransmissionCallback
 24518 ;; This function uses a non-reentrant model
 24519 ;;
 24520                           
 24521                           	psect	text110
 24522  008A98                     __ptext110:
 24523                           	opt stack 0
 24524  008A98                     _ResetParametersForConfirmedTransmission:
 24525                           	opt stack 18
 24526                           
 24527                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 24528                           
 24529                           ; BSR set to: 2
 24530                           ;incstack = 0
 24531  008A98  0102               	movlb	2	; () banked
 24532  008A9A  9102               	bcf	(_loRa+2)& (0+255),0,b
 24533  008A9C  9302               	bcf	(_loRa+2)& (0+255),1,b
 24534  008A9E  9502               	bcf	(_loRa+2)& (0+255),2,b
 24535  008AA0  9702               	bcf	(_loRa+2)& (0+255),3,b
 24536                           
 24537                           ; BSR set to: 2
 24538                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 24539  008AA2  0E01               	movlw	1
 24540  008AA4  6FD9               	movwf	(_loRa+217)& (0+255),b
 24541                           
 24542                           ; BSR set to: 2
 24543                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 24544  008AA6  9100               	bcf	_loRa& (0+255),0,b
 24545                           
 24546                           ; BSR set to: 2
 24547  008AA8  0012               	return		;funcret
 24548  008AAA                     __end_of_ResetParametersForConfirmedTransmission:
 24549                           	opt stack 0
 24550                           tosu	equ	0xFFF
 24551                           tosh	equ	0xFFE
 24552                           tosl	equ	0xFFD
 24553                           pclath	equ	0xFFA
 24554                           tblptru	equ	0xFF8
 24555                           tblptrh	equ	0xFF7
 24556                           tblptrl	equ	0xFF6
 24557                           tablat	equ	0xFF5
 24558                           prodh	equ	0xFF4
 24559                           prodl	equ	0xFF3
 24560                           intcon	equ	0xFF2
 24561                           intcon2	equ	0xFF1
 24562                           intcon3	equ	0xFF0
 24563                           indf0	equ	0xFEF
 24564                           postinc0	equ	0xFEE
 24565                           fsr0h	equ	0xFEA
 24566                           fsr0l	equ	0xFE9
 24567                           wreg	equ	0xFE8
 24568                           postinc1	equ	0xFE6
 24569                           postdec1	equ	0xFE5
 24570                           plusw1	equ	0xFE3
 24571                           fsr1h	equ	0xFE2
 24572                           fsr1l	equ	0xFE1
 24573                           indf2	equ	0xFDF
 24574                           postinc2	equ	0xFDE
 24575                           postdec2	equ	0xFDD
 24576                           plusw2	equ	0xFDB
 24577                           fsr2h	equ	0xFDA
 24578                           fsr2l	equ	0xFD9
 24579                           status	equ	0xFD8
 24580                           
 24581 ;; *************** function _RADIO_ReleaseData *****************
 24582 ;; Defined at:
 24583 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24584 ;; Parameters:    Size  Location     Type
 24585 ;;		None
 24586 ;; Auto vars:     Size  Location     Type
 24587 ;;		None
 24588 ;; Return value:  Size  Location     Type
 24589 ;;                  1    wreg      void 
 24590 ;; Registers used:
 24591 ;;		status,2, status,0
 24592 ;; Tracked objects:
 24593 ;;		On entry : 0/0
 24594 ;;		On exit  : 0/0
 24595 ;;		Unchanged: 0/0
 24596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24601 ;;Total ram usage:        0 bytes
 24602 ;; Hardware stack levels used:    1
 24603 ;; Hardware stack levels required when called:    7
 24604 ;; This function calls:
 24605 ;;		Nothing
 24606 ;; This function is called by:
 24607 ;;		_LORAWAN_ReceiveWindow1Callback
 24608 ;;		_LORAWAN_ReceiveWindow2Callback
 24609 ;;		_LORAWAN_EnterContinuousReceive
 24610 ;;		_LORAWAN_RxDone
 24611 ;; This function uses a non-reentrant model
 24612 ;;
 24613                           
 24614                           	psect	text111
 24615  008C16                     __ptext111:
 24616                           	opt stack 0
 24617  008C16                     _RADIO_ReleaseData:
 24618                           	opt stack 18
 24619                           
 24620                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 24621                           
 24622                           ; BSR set to: 2
 24623                           ;incstack = 0
 24624  008C16  0101               	movlb	1	; () banked
 24625  008C18  959D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 24626                           
 24627                           ; BSR set to: 1
 24628  008C1A  0012               	return		;funcret
 24629  008C1C                     __end_of_RADIO_ReleaseData:
 24630                           	opt stack 0
 24631                           tosu	equ	0xFFF
 24632                           tosh	equ	0xFFE
 24633                           tosl	equ	0xFFD
 24634                           pclath	equ	0xFFA
 24635                           tblptru	equ	0xFF8
 24636                           tblptrh	equ	0xFF7
 24637                           tblptrl	equ	0xFF6
 24638                           tablat	equ	0xFF5
 24639                           prodh	equ	0xFF4
 24640                           prodl	equ	0xFF3
 24641                           intcon	equ	0xFF2
 24642                           intcon2	equ	0xFF1
 24643                           intcon3	equ	0xFF0
 24644                           indf0	equ	0xFEF
 24645                           postinc0	equ	0xFEE
 24646                           fsr0h	equ	0xFEA
 24647                           fsr0l	equ	0xFE9
 24648                           wreg	equ	0xFE8
 24649                           postinc1	equ	0xFE6
 24650                           postdec1	equ	0xFE5
 24651                           plusw1	equ	0xFE3
 24652                           fsr1h	equ	0xFE2
 24653                           fsr1l	equ	0xFE1
 24654                           indf2	equ	0xFDF
 24655                           postinc2	equ	0xFDE
 24656                           postdec2	equ	0xFDD
 24657                           plusw2	equ	0xFDB
 24658                           fsr2h	equ	0xFDA
 24659                           fsr2l	equ	0xFD9
 24660                           status	equ	0xFD8
 24661                           
 24662 ;; *************** function _RADIO_ReceiveStop *****************
 24663 ;; Defined at:
 24664 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24665 ;; Parameters:    Size  Location     Type
 24666 ;;		None
 24667 ;; Auto vars:     Size  Location     Type
 24668 ;;		None
 24669 ;; Return value:  Size  Location     Type
 24670 ;;                  1    wreg      void 
 24671 ;; Registers used:
 24672 ;;		wreg, status,2, status,0, cstack
 24673 ;; Tracked objects:
 24674 ;;		On entry : 0/0
 24675 ;;		On exit  : 0/0
 24676 ;;		Unchanged: 0/0
 24677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24682 ;;Total ram usage:        0 bytes
 24683 ;; Hardware stack levels used:    1
 24684 ;; Hardware stack levels required when called:   11
 24685 ;; This function calls:
 24686 ;;		_RADIO_WriteMode
 24687 ;; This function is called by:
 24688 ;;		_LORAWAN_Send
 24689 ;;		_LORAWAN_ReceiveWindow1Callback
 24690 ;;		_LORAWAN_ReceiveWindow2Callback
 24691 ;;		_LORAWAN_EnterContinuousReceive
 24692 ;;		_LORAWAN_SetClass
 24693 ;; This function uses a non-reentrant model
 24694 ;;
 24695                           
 24696                           	psect	text112
 24697  008846                     __ptext112:
 24698                           	opt stack 0
 24699  008846                     _RADIO_ReceiveStop:
 24700                           	opt stack 18
 24701                           
 24702                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 24703                           
 24704                           ; BSR set to: 1
 24705                           ;incstack = 0
 24706  008846  0E02               	movlw	2
 24707  008848  0101               	movlb	1	; () banked
 24708  00884A  199D               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 24709  00884C  A4D8               	btfss	status,2,c
 24710  00884E  0012               	return	
 24711                           
 24712                           ; BSR set to: 1
 24713                           ;radio_driver_SX1276.c: 954: {
 24714                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 24715  008850  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24716  008854  0E00               	movlw	0
 24717  008856  0100               	movlb	0	; () banked
 24718  008858  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24719  00885A  0E00               	movlw	0
 24720  00885C  EC0D  F02F         	call	_RADIO_WriteMode
 24721                           
 24722                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 24723  008860  0101               	movlb	1	; () banked
 24724  008862  939D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24725  008864  0012               	return	
 24726  008866                     __end_of_RADIO_ReceiveStop:
 24727                           	opt stack 0
 24728                           tosu	equ	0xFFF
 24729                           tosh	equ	0xFFE
 24730                           tosl	equ	0xFFD
 24731                           pclath	equ	0xFFA
 24732                           tblptru	equ	0xFF8
 24733                           tblptrh	equ	0xFF7
 24734                           tblptrl	equ	0xFF6
 24735                           tablat	equ	0xFF5
 24736                           prodh	equ	0xFF4
 24737                           prodl	equ	0xFF3
 24738                           intcon	equ	0xFF2
 24739                           intcon2	equ	0xFF1
 24740                           intcon3	equ	0xFF0
 24741                           indf0	equ	0xFEF
 24742                           postinc0	equ	0xFEE
 24743                           fsr0h	equ	0xFEA
 24744                           fsr0l	equ	0xFE9
 24745                           wreg	equ	0xFE8
 24746                           postinc1	equ	0xFE6
 24747                           postdec1	equ	0xFE5
 24748                           plusw1	equ	0xFE3
 24749                           fsr1h	equ	0xFE2
 24750                           fsr1l	equ	0xFE1
 24751                           indf2	equ	0xFDF
 24752                           postinc2	equ	0xFDE
 24753                           postdec2	equ	0xFDD
 24754                           plusw2	equ	0xFDB
 24755                           fsr2h	equ	0xFDA
 24756                           fsr2l	equ	0xFD9
 24757                           status	equ	0xFD8
 24758                           
 24759 ;; *************** function _RADIO_ReceiveStart *****************
 24760 ;; Defined at:
 24761 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24762 ;; Parameters:    Size  Location     Type
 24763 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 24764 ;; Auto vars:     Size  Location     Type
 24765 ;;		None
 24766 ;; Return value:  Size  Location     Type
 24767 ;;                  2   81[BANK0 ] enum E7038
 24768 ;; Registers used:
 24769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24770 ;; Tracked objects:
 24771 ;;		On entry : 0/0
 24772 ;;		On exit  : 0/0
 24773 ;;		Unchanged: 0/0
 24774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24776 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24778 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24779 ;;Total ram usage:       10 bytes
 24780 ;; Hardware stack levels used:    1
 24781 ;; Hardware stack levels required when called:   12
 24782 ;; This function calls:
 24783 ;;		_RADIO_RegisterWrite
 24784 ;;		_RADIO_WriteConfiguration
 24785 ;;		_RADIO_WriteMode
 24786 ;;		_SwTimerSetTimeout
 24787 ;;		_SwTimerStart
 24788 ;;		___lldiv
 24789 ;; This function is called by:
 24790 ;;		_LORAWAN_ReceiveWindow1Callback
 24791 ;;		_LORAWAN_ReceiveWindow2Callback
 24792 ;;		_LORAWAN_EnterContinuousReceive
 24793 ;; This function uses a non-reentrant model
 24794 ;;
 24795                           
 24796                           	psect	text113
 24797  003C58                     __ptext113:
 24798                           	opt stack 0
 24799  003C58                     _RADIO_ReceiveStart:
 24800                           	opt stack 13
 24801                           
 24802                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 24803                           
 24804                           ; BSR set to: 1
 24805                           ;incstack = 0
 24806  003C58  0101               	movlb	1	; () banked
 24807  003C5A  A59D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 24808  003C5C  D006               	goto	l565
 24809                           
 24810                           ; BSR set to: 1
 24811                           ;radio_driver_SX1276.c: 878: {
 24812                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 24813  003C5E  0E80               	movlw	128
 24814  003C60  0100               	movlb	0	; () banked
 24815  003C62  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24816  003C64  0E03               	movlw	3
 24817  003C66  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 24818                           
 24819                           ; BSR set to: 0
 24820  003C68  0012               	return	
 24821  003C6A                     l565:
 24822                           
 24823                           ;radio_driver_SX1276.c: 880: }
 24824                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 24825                           
 24826                           ; BSR set to: 0
 24827  003C6A  C19D  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 24828  003C6E  0E03               	movlw	3
 24829  003C70  0100               	movlb	0	; () banked
 24830  003C72  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 24831  003C74  B4D8               	btfsc	status,2,c
 24832  003C76  D005               	goto	l567
 24833                           
 24834                           ; BSR set to: 0
 24835                           ;radio_driver_SX1276.c: 883: {
 24836                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 24837  003C78  0E80               	movlw	128
 24838  003C7A  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24839  003C7C  0E04               	movlw	4
 24840  003C7E  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 24841                           
 24842                           ; BSR set to: 0
 24843  003C80  0012               	return	
 24844  003C82                     l567:
 24845                           
 24846                           ; BSR set to: 0
 24847                           ;radio_driver_SX1276.c: 885: }
 24848                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 24849                           
 24850                           ; BSR set to: 0
 24851  003C82  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24852  003C84  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24853  003C86  A4D8               	btfss	status,2,c
 24854  003C88  D007               	goto	l568
 24855                           
 24856                           ; BSR set to: 0
 24857                           ;radio_driver_SX1276.c: 888: {
 24858                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 24859  003C8A  0E00               	movlw	0
 24860  003C8C  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 24861  003C8E  0E04               	movlw	4
 24862  003C90  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 24863  003C92  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 24864                           
 24865                           ;radio_driver_SX1276.c: 890: }
 24866  003C96  D006               	goto	l569
 24867  003C98                     l568:
 24868                           
 24869                           ;radio_driver_SX1276.c: 891: else
 24870                           ;radio_driver_SX1276.c: 892: {
 24871                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 24872  003C98  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 24873  003C9C  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 24874  003CA0  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 24875  003CA4                     l569:
 24876                           
 24877                           ;radio_driver_SX1276.c: 894: }
 24878                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 24879  003CA4  0101               	movlb	1	; () banked
 24880  003CA6  0592               	decf	(_RadioConfiguration+24)& (0+255),w,b
 24881  003CA8  A4D8               	btfss	status,2,c
 24882  003CAA  D013               	goto	l570
 24883                           
 24884                           ; BSR set to: 1
 24885                           ;radio_driver_SX1276.c: 897: {
 24886                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 24887  003CAC  0E01               	movlw	1
 24888  003CAE  0100               	movlb	0	; () banked
 24889  003CB0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24890  003CB2  0E22               	movlw	34
 24891  003CB4  EC33  F044         	call	_RADIO_RegisterWrite
 24892                           
 24893                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 24894  003CB8  0E00               	movlw	0
 24895  003CBA  0100               	movlb	0	; () banked
 24896  003CBC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24897  003CBE  0E40               	movlw	64
 24898  003CC0  EC33  F044         	call	_RADIO_RegisterWrite
 24899                           
 24900                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 24901  003CC4  0E00               	movlw	0
 24902  003CC6  0100               	movlb	0	; () banked
 24903  003CC8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24904  003CCA  0E41               	movlw	65
 24905  003CCC  EC33  F044         	call	_RADIO_RegisterWrite
 24906                           
 24907                           ;radio_driver_SX1276.c: 908: }
 24908  003CD0  D016               	goto	l571
 24909  003CD2                     l570:
 24910                           
 24911                           ;radio_driver_SX1276.c: 909: else
 24912                           ;radio_driver_SX1276.c: 910: {
 24913                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 24914  003CD2  C1AE  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 24915  003CD6  0E12               	movlw	18
 24916  003CD8  EC33  F044         	call	_RADIO_RegisterWrite
 24917                           
 24918                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 24919  003CDC  C1AF  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 24920  003CE0  0E13               	movlw	19
 24921  003CE2  EC33  F044         	call	_RADIO_RegisterWrite
 24922                           
 24923                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 24924  003CE6  0E00               	movlw	0
 24925  003CE8  0100               	movlb	0	; () banked
 24926  003CEA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24927  003CEC  0E40               	movlw	64
 24928  003CEE  EC33  F044         	call	_RADIO_RegisterWrite
 24929                           
 24930                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 24931  003CF2  0E00               	movlw	0
 24932  003CF4  0100               	movlb	0	; () banked
 24933  003CF6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24934  003CF8  0E41               	movlw	65
 24935  003CFA  EC33  F044         	call	_RADIO_RegisterWrite
 24936  003CFE                     l571:
 24937                           
 24938                           ;radio_driver_SX1276.c: 917: }
 24939                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 24940  003CFE  0101               	movlb	1	; () banked
 24941  003D00  839D               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 24942                           
 24943                           ; BSR set to: 1
 24944                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 24945  003D02  0EE7               	movlw	231
 24946  003D04  179D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 24947                           
 24948                           ; BSR set to: 1
 24949                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 24950  003D06  0100               	movlb	0	; () banked
 24951  003D08  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24952  003D0A  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24953  003D0C  A4D8               	btfss	status,2,c
 24954  003D0E  D008               	goto	l572
 24955                           
 24956                           ; BSR set to: 0
 24957                           ;radio_driver_SX1276.c: 925: {
 24958                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 24959  003D10  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24960  003D14  0E00               	movlw	0
 24961  003D16  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24962  003D18  0E05               	movlw	5
 24963  003D1A  EC0D  F02F         	call	_RADIO_WriteMode
 24964                           
 24965                           ;radio_driver_SX1276.c: 927: }
 24966  003D1E  D046               	goto	l575
 24967  003D20                     l572:
 24968                           
 24969                           ;radio_driver_SX1276.c: 928: else
 24970                           ;radio_driver_SX1276.c: 929: {
 24971                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 24972  003D20  0101               	movlb	1	; () banked
 24973  003D22  0592               	decf	(_RadioConfiguration+24)& (0+255),w,b
 24974  003D24  A4D8               	btfss	status,2,c
 24975  003D26  D009               	goto	l574
 24976                           
 24977                           ; BSR set to: 1
 24978                           ;radio_driver_SX1276.c: 931: {
 24979                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 24980  003D28  0E01               	movlw	1
 24981  003D2A  0100               	movlb	0	; () banked
 24982  003D2C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 24983  003D2E  0E00               	movlw	0
 24984  003D30  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24985  003D32  0E06               	movlw	6
 24986  003D34  EC0D  F02F         	call	_RADIO_WriteMode
 24987                           
 24988                           ;radio_driver_SX1276.c: 933: }
 24989  003D38  D039               	goto	l575
 24990  003D3A                     l574:
 24991                           
 24992                           ;radio_driver_SX1276.c: 934: else
 24993                           ;radio_driver_SX1276.c: 935: {
 24994                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 24995  003D3A  0E00               	movlw	0
 24996  003D3C  0100               	movlb	0	; () banked
 24997  003D3E  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 24998  003D40  0E00               	movlw	0
 24999  003D42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25000  003D44  0E05               	movlw	5
 25001  003D46  EC0D  F02F         	call	_RADIO_WriteMode
 25002                           
 25003                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 25004  003D4A  0100               	movlb	0	; () banked
 25005  003D4C  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 25006  003D4E  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 25007  003D50  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 25008  003D52  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 25009  003D54  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 25010  003D56  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 25011  003D58  0E0C               	movlw	12
 25012  003D5A                     u15645:
 25013  003D5A  90D8               	bcf	status,0,c
 25014  003D5C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25015  003D5E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25016  003D60  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25017  003D62  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25018  003D64  2EE8               	decfsz	wreg,f,c
 25019  003D66  D7F9               	goto	u15645
 25020  003D68  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25021  003D6C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25022  003D70  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25023  003D74  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25024  003D78  0E7D               	movlw	125
 25025  003D7A  6F64               	movwf	___lldiv@divisor& (0+255),b
 25026  003D7C  0E00               	movlw	0
 25027  003D7E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25028  003D80  0E00               	movlw	0
 25029  003D82  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25030  003D84  0E00               	movlw	0
 25031  003D86  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25032  003D88  EC8F  F039         	call	___lldiv	;wreg free
 25033  003D8C  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25034  003D90  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25035  003D94  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25036  003D98  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25037  003D9C  0101               	movlb	1	; () banked
 25038  003D9E  51A2               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25039  003DA0  ECDB  F040         	call	_SwTimerSetTimeout
 25040                           
 25041                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 25042  003DA4  0101               	movlb	1	; () banked
 25043  003DA6  51A2               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25044  003DA8  ECD1  F036         	call	_SwTimerStart
 25045  003DAC                     l575:
 25046                           
 25047                           ;radio_driver_SX1276.c: 939: }
 25048                           ;radio_driver_SX1276.c: 940: }
 25049                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 25050  003DAC  0101               	movlb	1	; () banked
 25051  003DAE  51A4               	movf	(_RadioConfiguration+42)& (0+255),w,b
 25052  003DB0  11A5               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 25053  003DB2  11A6               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 25054  003DB4  11A7               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 25055  003DB6  B4D8               	btfsc	status,2,c
 25056  003DB8  D061               	goto	l576
 25057                           
 25058                           ; BSR set to: 1
 25059                           ;radio_driver_SX1276.c: 943: {
 25060                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 25061  003DBA  51A7               	movf	(_RadioConfiguration+45)& (0+255),w,b
 25062  003DBC  E107               	bnz	u15660
 25063  003DBE  29A4               	incf	(_RadioConfiguration+42)& (0+255),w,b
 25064  003DC0  0EFF               	movlw	255
 25065  003DC2  59A5               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 25066  003DC4  0E0F               	movlw	15
 25067  003DC6  59A6               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 25068  003DC8  A0D8               	btfss	status,0,c
 25069  003DCA  D01D               	goto	l578
 25070  003DCC                     u15660:
 25071                           
 25072                           ; BSR set to: 1
 25073  003DCC  C1A4  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 25074  003DD0  C1A5  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 25075  003DD4  C1A6  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 25076  003DD8  C1A7  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 25077  003DDC  0E7D               	movlw	125
 25078  003DDE  0100               	movlb	0	; () banked
 25079  003DE0  6F64               	movwf	___lldiv@divisor& (0+255),b
 25080  003DE2  0E00               	movlw	0
 25081  003DE4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25082  003DE6  0E00               	movlw	0
 25083  003DE8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25084  003DEA  0E00               	movlw	0
 25085  003DEC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25086  003DEE  EC8F  F039         	call	___lldiv	;wreg free
 25087  003DF2  0E0C               	movlw	12
 25088  003DF4                     u15675:
 25089  003DF4  90D8               	bcf	status,0,c
 25090  003DF6  0100               	movlb	0	; () banked
 25091  003DF8  3760               	rlcf	?___lldiv& (0+255),f,b
 25092  003DFA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 25093  003DFC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 25094  003DFE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 25095  003E00  2EE8               	decfsz	wreg,f,c
 25096  003E02  D7F8               	goto	u15675
 25097  003E04  D023               	goto	L18
 25098  003E06                     l578:
 25099                           
 25100                           ; BSR set to: 0
 25101  003E06  C1A4  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 25102  003E0A  C1A5  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 25103  003E0E  C1A6  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 25104  003E12  C1A7  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 25105  003E16  0E0C               	movlw	12
 25106  003E18                     u15685:
 25107  003E18  90D8               	bcf	status,0,c
 25108  003E1A  0100               	movlb	0	; () banked
 25109  003E1C  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 25110  003E1E  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 25111  003E20  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 25112  003E22  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 25113  003E24  2EE8               	decfsz	wreg,f,c
 25114  003E26  D7F8               	goto	u15685
 25115  003E28  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 25116  003E2C  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 25117  003E30  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 25118  003E34  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 25119  003E38  0E7D               	movlw	125
 25120  003E3A  6F64               	movwf	___lldiv@divisor& (0+255),b
 25121  003E3C  0E00               	movlw	0
 25122  003E3E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 25123  003E40  0E00               	movlw	0
 25124  003E42  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 25125  003E44  0E00               	movlw	0
 25126  003E46  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 25127  003E48  EC8F  F039         	call	___lldiv	;wreg free
 25128  003E4C                     L18:
 25129  003E4C  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$1082
 25130  003E50  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$1082+1
 25131  003E54  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$1082+2
 25132  003E58  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$1082+3
 25133  003E5C  C0B7  F06D         	movff	_RADIO_ReceiveStart$1082,SwTimerSetTimeout@timeout
 25134  003E60  C0B8  F06E         	movff	_RADIO_ReceiveStart$1082+1,SwTimerSetTimeout@timeout+1
 25135  003E64  C0B9  F06F         	movff	_RADIO_ReceiveStart$1082+2,SwTimerSetTimeout@timeout+2
 25136  003E68  C0BA  F070         	movff	_RADIO_ReceiveStart$1082+3,SwTimerSetTimeout@timeout+3
 25137  003E6C  0101               	movlb	1	; () banked
 25138  003E6E  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25139  003E70  ECDB  F040         	call	_SwTimerSetTimeout
 25140                           
 25141                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 25142  003E74  0101               	movlb	1	; () banked
 25143  003E76  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25144  003E78  ECD1  F036         	call	_SwTimerStart
 25145  003E7C                     l576:
 25146                           
 25147                           ;radio_driver_SX1276.c: 946: }
 25148                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 25149  003E7C  0E00               	movlw	0
 25150  003E7E  0100               	movlb	0	; () banked
 25151  003E80  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 25152  003E82  0E00               	movlw	0
 25153  003E84  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 25154  003E86  0012               	return	
 25155  003E88                     __end_of_RADIO_ReceiveStart:
 25156                           	opt stack 0
 25157                           tosu	equ	0xFFF
 25158                           tosh	equ	0xFFE
 25159                           tosl	equ	0xFFD
 25160                           pclath	equ	0xFFA
 25161                           tblptru	equ	0xFF8
 25162                           tblptrh	equ	0xFF7
 25163                           tblptrl	equ	0xFF6
 25164                           tablat	equ	0xFF5
 25165                           prodh	equ	0xFF4
 25166                           prodl	equ	0xFF3
 25167                           intcon	equ	0xFF2
 25168                           intcon2	equ	0xFF1
 25169                           intcon3	equ	0xFF0
 25170                           indf0	equ	0xFEF
 25171                           postinc0	equ	0xFEE
 25172                           fsr0h	equ	0xFEA
 25173                           fsr0l	equ	0xFE9
 25174                           wreg	equ	0xFE8
 25175                           postinc1	equ	0xFE6
 25176                           postdec1	equ	0xFE5
 25177                           plusw1	equ	0xFE3
 25178                           fsr1h	equ	0xFE2
 25179                           fsr1l	equ	0xFE1
 25180                           indf2	equ	0xFDF
 25181                           postinc2	equ	0xFDE
 25182                           postdec2	equ	0xFDD
 25183                           plusw2	equ	0xFDB
 25184                           fsr2h	equ	0xFDA
 25185                           fsr2l	equ	0xFD9
 25186                           status	equ	0xFD8
 25187                           
 25188 ;; *************** function _ConfigureRadioRx *****************
 25189 ;; Defined at:
 25190 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25191 ;; Parameters:    Size  Location     Type
 25192 ;;  dataRate        1    wreg     unsigned char 
 25193 ;;  freq            4   19[BANK0 ] unsigned long 
 25194 ;; Auto vars:     Size  Location     Type
 25195 ;;  dataRate        1   23[BANK0 ] unsigned char 
 25196 ;; Return value:  Size  Location     Type
 25197 ;;                  1    wreg      void 
 25198 ;; Registers used:
 25199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25200 ;; Tracked objects:
 25201 ;;		On entry : 0/0
 25202 ;;		On exit  : 0/0
 25203 ;;		Unchanged: 0/0
 25204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25208 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25209 ;;Total ram usage:        5 bytes
 25210 ;; Hardware stack levels used:    1
 25211 ;; Hardware stack levels required when called:   10
 25212 ;; This function calls:
 25213 ;;		_ConfigureRadio
 25214 ;;		_RADIO_SetCRC
 25215 ;;		_RADIO_SetIQInverted
 25216 ;; This function is called by:
 25217 ;;		_LORAWAN_ReceiveWindow1Callback
 25218 ;;		_LORAWAN_ReceiveWindow2Callback
 25219 ;;		_LORAWAN_EnterContinuousReceive
 25220 ;; This function uses a non-reentrant model
 25221 ;;
 25222                           
 25223                           	psect	text114
 25224  00863A                     __ptext114:
 25225                           	opt stack 0
 25226  00863A                     _ConfigureRadioRx:
 25227                           	opt stack 15
 25228                           
 25229                           ; BSR set to: 0
 25230                           ;incstack = 0
 25231                           ;ConfigureRadioRx@dataRate stored from wreg
 25232  00863A  0100               	movlb	0	; () banked
 25233  00863C  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 25234                           
 25235                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 25236  00863E  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 25237  008642  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 25238  008646  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 25239  00864A  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 25240  00864E  0100               	movlb	0	; () banked
 25241  008650  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 25242  008652  ECD9  F035         	call	_ConfigureRadio
 25243                           
 25244                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 25245  008656  0E00               	movlw	0
 25246  008658  ECD6  F045         	call	_RADIO_SetCRC
 25247                           
 25248                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 25249  00865C  0E01               	movlw	1
 25250  00865E  ECD1  F045         	call	_RADIO_SetIQInverted
 25251  008662  0012               	return		;funcret
 25252  008664                     __end_of_ConfigureRadioRx:
 25253                           	opt stack 0
 25254                           tosu	equ	0xFFF
 25255                           tosh	equ	0xFFE
 25256                           tosl	equ	0xFFD
 25257                           pclath	equ	0xFFA
 25258                           tblptru	equ	0xFF8
 25259                           tblptrh	equ	0xFF7
 25260                           tblptrl	equ	0xFF6
 25261                           tablat	equ	0xFF5
 25262                           prodh	equ	0xFF4
 25263                           prodl	equ	0xFF3
 25264                           intcon	equ	0xFF2
 25265                           intcon2	equ	0xFF1
 25266                           intcon3	equ	0xFF0
 25267                           indf0	equ	0xFEF
 25268                           postinc0	equ	0xFEE
 25269                           fsr0h	equ	0xFEA
 25270                           fsr0l	equ	0xFE9
 25271                           wreg	equ	0xFE8
 25272                           postinc1	equ	0xFE6
 25273                           postdec1	equ	0xFE5
 25274                           plusw1	equ	0xFE3
 25275                           fsr1h	equ	0xFE2
 25276                           fsr1l	equ	0xFE1
 25277                           indf2	equ	0xFDF
 25278                           postinc2	equ	0xFDE
 25279                           postdec2	equ	0xFDD
 25280                           plusw2	equ	0xFDB
 25281                           fsr2h	equ	0xFDA
 25282                           fsr2l	equ	0xFD9
 25283                           status	equ	0xFD8
 25284                           
 25285 ;; *************** function _INTERRUPT_GetDioStatus *****************
 25286 ;; Defined at:
 25287 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 25288 ;; Parameters:    Size  Location     Type
 25289 ;;		None
 25290 ;; Auto vars:     Size  Location     Type
 25291 ;;  a               1    0[BANK0 ] unsigned char 
 25292 ;; Return value:  Size  Location     Type
 25293 ;;                  1    wreg      unsigned char 
 25294 ;; Registers used:
 25295 ;;		wreg, status,2
 25296 ;; Tracked objects:
 25297 ;;		On entry : 0/0
 25298 ;;		On exit  : 0/0
 25299 ;;		Unchanged: 0/0
 25300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25305 ;;Total ram usage:        1 bytes
 25306 ;; Hardware stack levels used:    1
 25307 ;; Hardware stack levels required when called:    7
 25308 ;; This function calls:
 25309 ;;		Nothing
 25310 ;; This function is called by:
 25311 ;;		_LORAWAN_Mainloop
 25312 ;; This function uses a non-reentrant model
 25313 ;;
 25314                           
 25315                           	psect	text115
 25316  008A5E                     __ptext115:
 25317                           	opt stack 0
 25318  008A5E                     _INTERRUPT_GetDioStatus:
 25319                           	opt stack 22
 25320                           
 25321                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 25322                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 25323                           
 25324                           ;incstack = 0
 25325  008A5E  9EF2               	bcf	intcon,7,c	;volatile
 25326                           
 25327                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 25328  008A60  C179  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 25329                           
 25330                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 25331  008A64  0E00               	movlw	0
 25332  008A66  0101               	movlb	1	; () banked
 25333  008A68  6F79               	movwf	_dioStatus& (0+255),b	;volatile
 25334                           
 25335                           ; BSR set to: 1
 25336                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 25337  008A6A  8EF2               	bsf	intcon,7,c	;volatile
 25338                           
 25339                           ;interrupt_manager_lora_addons.c: 55: return a;
 25340  008A6C  0100               	movlb	0	; () banked
 25341  008A6E  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 25342  008A70  0012               	return	
 25343  008A72                     __end_of_INTERRUPT_GetDioStatus:
 25344                           	opt stack 0
 25345                           tosu	equ	0xFFF
 25346                           tosh	equ	0xFFE
 25347                           tosl	equ	0xFFD
 25348                           pclath	equ	0xFFA
 25349                           tblptru	equ	0xFF8
 25350                           tblptrh	equ	0xFF7
 25351                           tblptrl	equ	0xFF6
 25352                           tablat	equ	0xFF5
 25353                           prodh	equ	0xFF4
 25354                           prodl	equ	0xFF3
 25355                           intcon	equ	0xFF2
 25356                           intcon2	equ	0xFF1
 25357                           intcon3	equ	0xFF0
 25358                           indf0	equ	0xFEF
 25359                           postinc0	equ	0xFEE
 25360                           fsr0h	equ	0xFEA
 25361                           fsr0l	equ	0xFE9
 25362                           wreg	equ	0xFE8
 25363                           postinc1	equ	0xFE6
 25364                           postdec1	equ	0xFE5
 25365                           plusw1	equ	0xFE3
 25366                           fsr1h	equ	0xFE2
 25367                           fsr1l	equ	0xFE1
 25368                           indf2	equ	0xFDF
 25369                           postinc2	equ	0xFDE
 25370                           postdec2	equ	0xFDD
 25371                           plusw2	equ	0xFDB
 25372                           fsr2h	equ	0xFDA
 25373                           fsr2l	equ	0xFD9
 25374                           status	equ	0xFD8
 25375                           
 25376 ;; *************** function _LORAWAN_Join *****************
 25377 ;; Defined at:
 25378 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25379 ;; Parameters:    Size  Location     Type
 25380 ;;  activationTy    1    wreg     enum E7213
 25381 ;; Auto vars:     Size  Location     Type
 25382 ;;  activationTy    1  125[BANK0 ] enum E7213
 25383 ;;  result          1  124[BANK0 ] enum E7190
 25384 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 25385 ;; Return value:  Size  Location     Type
 25386 ;;                  1    wreg      enum E7190
 25387 ;; Registers used:
 25388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25389 ;; Tracked objects:
 25390 ;;		On entry : 0/0
 25391 ;;		On exit  : 0/0
 25392 ;;		Unchanged: 0/0
 25393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25395 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25397 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25398 ;;Total ram usage:        3 bytes
 25399 ;; Hardware stack levels used:    1
 25400 ;; Hardware stack levels required when called:   14
 25401 ;; This function calls:
 25402 ;;		_PrepareJoinRequestFrame
 25403 ;;		_RADIO_Transmit
 25404 ;;		_SelectChannelForTransmission
 25405 ;;		_SwTimerSetTimeout
 25406 ;;		_SwTimerStart
 25407 ;;		_UpdateJoinInProgress
 25408 ;; This function is called by:
 25409 ;;		_main
 25410 ;; This function uses a non-reentrant model
 25411 ;;
 25412                           
 25413                           	psect	text116
 25414  006C5A                     __ptext116:
 25415                           	opt stack 0
 25416  006C5A                     _LORAWAN_Join:
 25417                           	opt stack 16
 25418                           
 25419                           ; BSR set to: 0
 25420                           ;incstack = 0
 25421                           ;LORAWAN_Join@activationTypeNew stored from wreg
 25422  006C5A  0100               	movlb	0	; () banked
 25423  006C5C  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 25424                           
 25425                           ;lorawan.c: 117: uint8_t bufferIndex;
 25426                           ;lorawan.c: 118: LorawanError_t result;
 25427                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 25428  006C5E  0102               	movlb	2	; () banked
 25429  006C60  B103               	btfsc	(_loRa+3)& (0+255),0,b
 25430  006C62  0012               	return	
 25431                           
 25432                           ; BSR set to: 2
 25433                           ;lorawan.c: 123: }
 25434                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 25435                           
 25436                           ; BSR set to: 2
 25437                           ;lorawan.c: 121: {
 25438                           ;lorawan.c: 122: return MAC_PAUSED;
 25439                           ;	Return value of _LORAWAN_Join is never used
 25440  006C64  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 25441  006C66  0012               	return	
 25442                           
 25443                           ; BSR set to: 2
 25444                           ;lorawan.c: 128: }
 25445                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 25446                           
 25447                           ; BSR set to: 2
 25448                           
 25449                           ; BSR set to: 2
 25450                           ;lorawan.c: 126: {
 25451                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 25452                           ;	Return value of _LORAWAN_Join is never used
 25453  006C68  5102               	movf	(_loRa+2)& (0+255),w,b
 25454  006C6A  0B0F               	andlw	15
 25455  006C6C  0900               	iorlw	0
 25456  006C6E  A4D8               	btfss	status,2,c
 25457  006C70  0012               	return	
 25458                           
 25459                           ; BSR set to: 2
 25460                           ;lorawan.c: 133: }
 25461                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 25462                           
 25463                           ; BSR set to: 2
 25464                           ;lorawan.c: 131: {
 25465                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25466                           ;	Return value of _LORAWAN_Join is never used
 25467  006C72  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 25468                           
 25469                           ; BSR set to: 2
 25470                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 25471  006C76  0100               	movlb	0	; () banked
 25472  006C78  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 25473  006C7A  A4D8               	btfss	status,2,c
 25474  006C7C  D024               	goto	l1784
 25475                           
 25476                           ; BSR set to: 0
 25477                           ;lorawan.c: 138: {
 25478                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 25479  006C7E  0102               	movlb	2	; () banked
 25480  006C80  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 25481  006C82  0012               	return	
 25482                           
 25483                           ; BSR set to: 2
 25484  006C84  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 25485  006C86  0012               	return	
 25486                           
 25487                           ; BSR set to: 2
 25488  006C88  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 25489  006C8A  0012               	return	
 25490                           
 25491                           ; BSR set to: 2
 25492                           ;lorawan.c: 144: else
 25493                           ;lorawan.c: 145: {
 25494                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 25495                           
 25496                           ; BSR set to: 2
 25497                           
 25498                           ; BSR set to: 2
 25499                           ;lorawan.c: 143: }
 25500                           
 25501                           ; BSR set to: 2
 25502                           ;lorawan.c: 141: {
 25503                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 25504                           ;	Return value of _LORAWAN_Join is never used
 25505  006C8C  ECC9  F024         	call	_PrepareJoinRequestFrame	;wreg free
 25506  006C90  0100               	movlb	0	; () banked
 25507  006C92  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 25508                           
 25509                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 25510  006C94  0E00               	movlw	0
 25511  006C96  EC3B  F03B         	call	_SelectChannelForTransmission
 25512  006C9A  0100               	movlb	0	; () banked
 25513  006C9C  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 25514                           
 25515                           ; BSR set to: 0
 25516                           ;lorawan.c: 149: if (result == OK)
 25517  006C9E  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 25518  006CA0  A4D8               	btfss	status,2,c
 25519  006CA2  0012               	return	
 25520                           
 25521                           ; BSR set to: 0
 25522                           ;lorawan.c: 150: {
 25523                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 25524  006CA4  0EE0               	movlw	low _macBuffer
 25525  006CA6  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 25526  006CA8  0E04               	movlw	high _macBuffer
 25527  006CAA  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 25528  006CAC  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 25529  006CB0  EC10  F01D         	call	_RADIO_Transmit	;wreg free
 25530  006CB4  0100               	movlb	0	; () banked
 25531  006CB6  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 25532  006CB8  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 25533  006CBA  A4D8               	btfss	status,2,c
 25534  006CBC  0012               	return	
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;lorawan.c: 152: {
 25538                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 25539  006CBE  0E01               	movlw	1
 25540  006CC0  ECDC  F044         	call	_UpdateJoinInProgress
 25541                           
 25542                           ;lorawan.c: 164: }
 25543                           ;lorawan.c: 165: }
 25544                           ;lorawan.c: 166: }
 25545                           
 25546                           ;lorawan.c: 161: else
 25547                           ;lorawan.c: 162: {
 25548                           ;lorawan.c: 163: return result;
 25549                           ;	Return value of _LORAWAN_Join is never used
 25550                           
 25551                           ;lorawan.c: 159: }
 25552                           ;lorawan.c: 160: }
 25553                           
 25554                           ;lorawan.c: 156: else
 25555                           ;lorawan.c: 157: {
 25556                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 25557                           ;	Return value of _LORAWAN_Join is never used
 25558                           
 25559                           ;lorawan.c: 155: }
 25560                           
 25561                           ;lorawan.c: 154: return OK;
 25562                           ;	Return value of _LORAWAN_Join is never used
 25563  006CC4  0012               	return	
 25564  006CC6                     l1784:
 25565                           
 25566                           ; BSR set to: 0
 25567                           ;lorawan.c: 167: else
 25568                           ;lorawan.c: 168: {
 25569                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 25570  006CC6  0102               	movlb	2	; () banked
 25571  006CC8  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 25572  006CCA  0012               	return	
 25573                           
 25574                           ; BSR set to: 2
 25575  006CCC  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 25576  006CCE  0012               	return	
 25577                           
 25578                           ; BSR set to: 2
 25579  006CD0  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 25580  006CD2  0012               	return	
 25581                           
 25582                           ; BSR set to: 2
 25583                           ;lorawan.c: 174: else
 25584                           ;lorawan.c: 175: {
 25585                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 25586                           
 25587                           ; BSR set to: 2
 25588                           
 25589                           ; BSR set to: 2
 25590                           ;lorawan.c: 173: }
 25591                           
 25592                           ; BSR set to: 2
 25593                           ;lorawan.c: 171: {
 25594                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 25595                           ;	Return value of _LORAWAN_Join is never used
 25596  006CD4  0E07               	movlw	7
 25597  006CD6  ECDC  F044         	call	_UpdateJoinInProgress
 25598                           
 25599                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 25600  006CDA  0E8F               	movlw	143
 25601  006CDC  0100               	movlb	0	; () banked
 25602  006CDE  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 25603  006CE0  0E02               	movlw	2
 25604  006CE2  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 25605  006CE4  0E00               	movlw	0
 25606  006CE6  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 25607  006CE8  0E00               	movlw	0
 25608  006CEA  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 25609  006CEC  0102               	movlb	2	; () banked
 25610  006CEE  51F3               	movf	(_loRa+243)& (0+255),w,b
 25611  006CF0  ECDB  F040         	call	_SwTimerSetTimeout
 25612                           
 25613                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 25614  006CF4  0102               	movlb	2	; () banked
 25615  006CF6  51F3               	movf	(_loRa+243)& (0+255),w,b
 25616  006CF8  ECD1  F036         	call	_SwTimerStart
 25617                           
 25618                           ;lorawan.c: 180: return OK;
 25619                           ;	Return value of _LORAWAN_Join is never used
 25620  006CFC  0012               	return	
 25621  006CFE                     __end_of_LORAWAN_Join:
 25622                           	opt stack 0
 25623                           tosu	equ	0xFFF
 25624                           tosh	equ	0xFFE
 25625                           tosl	equ	0xFFD
 25626                           pclath	equ	0xFFA
 25627                           tblptru	equ	0xFF8
 25628                           tblptrh	equ	0xFF7
 25629                           tblptrl	equ	0xFF6
 25630                           tablat	equ	0xFF5
 25631                           prodh	equ	0xFF4
 25632                           prodl	equ	0xFF3
 25633                           intcon	equ	0xFF2
 25634                           intcon2	equ	0xFF1
 25635                           intcon3	equ	0xFF0
 25636                           indf0	equ	0xFEF
 25637                           postinc0	equ	0xFEE
 25638                           fsr0h	equ	0xFEA
 25639                           fsr0l	equ	0xFE9
 25640                           wreg	equ	0xFE8
 25641                           postinc1	equ	0xFE6
 25642                           postdec1	equ	0xFE5
 25643                           plusw1	equ	0xFE3
 25644                           fsr1h	equ	0xFE2
 25645                           fsr1l	equ	0xFE1
 25646                           indf2	equ	0xFDF
 25647                           postinc2	equ	0xFDE
 25648                           postdec2	equ	0xFDD
 25649                           plusw2	equ	0xFDB
 25650                           fsr2h	equ	0xFDA
 25651                           fsr2l	equ	0xFD9
 25652                           status	equ	0xFD8
 25653                           
 25654 ;; *************** function _UpdateJoinInProgress *****************
 25655 ;; Defined at:
 25656 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25657 ;; Parameters:    Size  Location     Type
 25658 ;;  state           1    wreg     unsigned char 
 25659 ;; Auto vars:     Size  Location     Type
 25660 ;;  state           1    0[BANK0 ] unsigned char 
 25661 ;; Return value:  Size  Location     Type
 25662 ;;                  1    wreg      void 
 25663 ;; Registers used:
 25664 ;;		wreg, status,2, status,0
 25665 ;; Tracked objects:
 25666 ;;		On entry : 0/0
 25667 ;;		On exit  : 0/0
 25668 ;;		Unchanged: 0/0
 25669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25674 ;;Total ram usage:        1 bytes
 25675 ;; Hardware stack levels used:    1
 25676 ;; Hardware stack levels required when called:    7
 25677 ;; This function calls:
 25678 ;;		Nothing
 25679 ;; This function is called by:
 25680 ;;		_LORAWAN_Join
 25681 ;; This function uses a non-reentrant model
 25682 ;;
 25683                           
 25684                           	psect	text117
 25685  0089B8                     __ptext117:
 25686                           	opt stack 0
 25687  0089B8                     _UpdateJoinInProgress:
 25688                           	opt stack 22
 25689                           
 25690                           ;incstack = 0
 25691                           ;UpdateJoinInProgress@state stored from wreg
 25692  0089B8  0100               	movlb	0	; () banked
 25693  0089BA  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 25694                           
 25695                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 25696  0089BC  0102               	movlb	2	; () banked
 25697  0089BE  9902               	bcf	(_loRa+2)& (0+255),4,b
 25698                           
 25699                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 25700  0089C0  8500               	bsf	_loRa& (0+255),2,b
 25701                           
 25702                           ; BSR set to: 2
 25703                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 25704  0089C2  5102               	movf	(_loRa+2)& (0+255),w,b
 25705  0089C4  0100               	movlb	0	; () banked
 25706  0089C6  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25707  0089C8  0BF0               	andlw	-16
 25708  0089CA  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25709  0089CC  0102               	movlb	2	; () banked
 25710  0089CE  6F02               	movwf	(_loRa+2)& (0+255),b
 25711                           
 25712                           ; BSR set to: 2
 25713  0089D0  0012               	return		;funcret
 25714  0089D2                     __end_of_UpdateJoinInProgress:
 25715                           	opt stack 0
 25716                           tosu	equ	0xFFF
 25717                           tosh	equ	0xFFE
 25718                           tosl	equ	0xFFD
 25719                           pclath	equ	0xFFA
 25720                           tblptru	equ	0xFF8
 25721                           tblptrh	equ	0xFF7
 25722                           tblptrl	equ	0xFF6
 25723                           tablat	equ	0xFF5
 25724                           prodh	equ	0xFF4
 25725                           prodl	equ	0xFF3
 25726                           intcon	equ	0xFF2
 25727                           intcon2	equ	0xFF1
 25728                           intcon3	equ	0xFF0
 25729                           indf0	equ	0xFEF
 25730                           postinc0	equ	0xFEE
 25731                           fsr0h	equ	0xFEA
 25732                           fsr0l	equ	0xFE9
 25733                           wreg	equ	0xFE8
 25734                           postinc1	equ	0xFE6
 25735                           postdec1	equ	0xFE5
 25736                           plusw1	equ	0xFE3
 25737                           fsr1h	equ	0xFE2
 25738                           fsr1l	equ	0xFE1
 25739                           indf2	equ	0xFDF
 25740                           postinc2	equ	0xFDE
 25741                           postdec2	equ	0xFDD
 25742                           plusw2	equ	0xFDB
 25743                           fsr2h	equ	0xFDA
 25744                           fsr2l	equ	0xFD9
 25745                           status	equ	0xFD8
 25746                           
 25747 ;; *************** function _SelectChannelForTransmission *****************
 25748 ;; Defined at:
 25749 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25750 ;; Parameters:    Size  Location     Type
 25751 ;;  transmission    1    wreg     unsigned char 
 25752 ;; Auto vars:     Size  Location     Type
 25753 ;;  transmission    1   91[BANK0 ] unsigned char 
 25754 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 25755 ;;  result          1   92[BANK0 ] enum E7249
 25756 ;; Return value:  Size  Location     Type
 25757 ;;                  1    wreg      enum E7249
 25758 ;; Registers used:
 25759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25760 ;; Tracked objects:
 25761 ;;		On entry : 0/0
 25762 ;;		On exit  : 0/0
 25763 ;;		Unchanged: 0/0
 25764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25766 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25768 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25769 ;;Total ram usage:        3 bytes
 25770 ;; Hardware stack levels used:    1
 25771 ;; Hardware stack levels required when called:   11
 25772 ;; This function calls:
 25773 ;;		_ConfigureRadioTx
 25774 ;;		_SearchAvailableChannel
 25775 ;; This function is called by:
 25776 ;;		_LORAWAN_RxTimeout
 25777 ;;		_LORAWAN_Join
 25778 ;;		_LORAWAN_Send
 25779 ;;		_AckRetransmissionCallback
 25780 ;;		_UnconfirmedTransmissionCallback
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text118
 25785  007676                     __ptext118:
 25786                           	opt stack 0
 25787  007676                     _SelectChannelForTransmission:
 25788                           	opt stack 18
 25789                           
 25790                           ; BSR set to: 2
 25791                           ;incstack = 0
 25792                           ;SelectChannelForTransmission@transmissionType stored from wreg
 25793  007676  0100               	movlb	0	; () banked
 25794  007678  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 25795                           
 25796                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 25797  00767A  0E00               	movlw	0
 25798  00767C  0100               	movlb	0	; () banked
 25799  00767E  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 25800                           
 25801                           ; BSR set to: 0
 25802                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 25803                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 25804  007680  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 25805  007684  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 25806  007686  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 25807  007688  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 25808  00768A  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 25809  00768C  0E10               	movlw	16
 25810  00768E  EC55  F02C         	call	_SearchAvailableChannel
 25811  007692  0100               	movlb	0	; () banked
 25812  007694  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 25813                           
 25814                           ; BSR set to: 0
 25815                           ;lorawan_eu.c: 926: if (result == OK)
 25816  007696  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 25817  007698  A4D8               	btfss	status,2,c
 25818  00769A  D020               	goto	l1233
 25819                           
 25820                           ; BSR set to: 0
 25821                           ;lorawan_eu.c: 927: {
 25822                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 25823  00769C  C0BD  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 25827  0076A0  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 25828  0076A2  0D0E               	mullw	14
 25829  0076A4  0E00               	movlw	low _Channels
 25830  0076A6  24F3               	addwf	prodl,w,c
 25831  0076A8  6ED9               	movwf	fsr2l,c
 25832  0076AA  0E04               	movlw	high _Channels
 25833  0076AC  20F4               	addwfc	prodh,w,c
 25834  0076AE  6EDA               	movwf	fsr2h,c
 25835  0076B0  CFDE F213          	movff	postinc2,_loRa+19
 25836  0076B4  CFDE F214          	movff	postinc2,_loRa+20
 25837  0076B8  CFDE F215          	movff	postinc2,_loRa+21
 25838  0076BC  CFDE F216          	movff	postinc2,_loRa+22
 25839                           
 25840                           ; BSR set to: 0
 25841                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 25842  0076C0  C2DF  F217         	movff	_loRa+223,_loRa+23
 25843                           
 25844                           ; BSR set to: 0
 25845                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 25846  0076C4  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 25847  0076C8  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 25848  0076CC  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 25849  0076D0  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 25850  0076D4  0102               	movlb	2	; () banked
 25851  0076D6  5117               	movf	(_loRa+23)& (0+255),w,b
 25852  0076D8  EC23  F03F         	call	_ConfigureRadioTx
 25853  0076DC                     l1233:
 25854                           
 25855                           ;lorawan_eu.c: 933: }
 25856                           ;lorawan_eu.c: 934: return result;
 25857  0076DC  0100               	movlb	0	; () banked
 25858  0076DE  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 25859  0076E0  0012               	return	
 25860  0076E2                     __end_of_SelectChannelForTransmission:
 25861                           	opt stack 0
 25862                           tosu	equ	0xFFF
 25863                           tosh	equ	0xFFE
 25864                           tosl	equ	0xFFD
 25865                           pclath	equ	0xFFA
 25866                           tblptru	equ	0xFF8
 25867                           tblptrh	equ	0xFF7
 25868                           tblptrl	equ	0xFF6
 25869                           tablat	equ	0xFF5
 25870                           prodh	equ	0xFF4
 25871                           prodl	equ	0xFF3
 25872                           intcon	equ	0xFF2
 25873                           intcon2	equ	0xFF1
 25874                           intcon3	equ	0xFF0
 25875                           indf0	equ	0xFEF
 25876                           postinc0	equ	0xFEE
 25877                           fsr0h	equ	0xFEA
 25878                           fsr0l	equ	0xFE9
 25879                           wreg	equ	0xFE8
 25880                           postinc1	equ	0xFE6
 25881                           postdec1	equ	0xFE5
 25882                           plusw1	equ	0xFE3
 25883                           fsr1h	equ	0xFE2
 25884                           fsr1l	equ	0xFE1
 25885                           indf2	equ	0xFDF
 25886                           postinc2	equ	0xFDE
 25887                           postdec2	equ	0xFDD
 25888                           plusw2	equ	0xFDB
 25889                           fsr2h	equ	0xFDA
 25890                           fsr2l	equ	0xFD9
 25891                           status	equ	0xFD8
 25892                           
 25893 ;; *************** function _SearchAvailableChannel *****************
 25894 ;; Defined at:
 25895 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25896 ;; Parameters:    Size  Location     Type
 25897 ;;  maxChannels     1    wreg     unsigned char 
 25898 ;;  transmission    1   79[BANK0 ] unsigned char 
 25899 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 25900 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 25901 ;; Auto vars:     Size  Location     Type
 25902 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 25903 ;;  i               1   90[BANK0 ] unsigned char 
 25904 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 25905 ;;  result          1   87[BANK0 ] enum E7249
 25906 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 25907 ;; Return value:  Size  Location     Type
 25908 ;;                  1    wreg      enum E7249
 25909 ;; Registers used:
 25910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25911 ;; Tracked objects:
 25912 ;;		On entry : 0/0
 25913 ;;		On exit  : 0/0
 25914 ;;		Unchanged: 0/0
 25915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25917 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25919 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25920 ;;Total ram usage:       12 bytes
 25921 ;; Hardware stack levels used:    1
 25922 ;; Hardware stack levels required when called:   10
 25923 ;; This function calls:
 25924 ;;		_Random
 25925 ;; This function is called by:
 25926 ;;		_SelectChannelForTransmission
 25927 ;;		_LORAWAN_RxDone
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text119
 25932  0058AA                     __ptext119:
 25933                           	opt stack 0
 25934  0058AA                     _SearchAvailableChannel:
 25935                           	opt stack 18
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;incstack = 0
 25939                           ;SearchAvailableChannel@maxChannels stored from wreg
 25940  0058AA  0100               	movlb	0	; () banked
 25941  0058AC  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 25942                           
 25943                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 25944                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 25945  0058AE  0E00               	movlw	0
 25946  0058B0  0100               	movlb	0	; () banked
 25947  0058B2  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 25951  0058B4  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 25952  0058B8  6BAE               	clrf	(Random@max+1)& (0+255),b
 25953  0058BA  ECF1  F043         	call	_Random	;wreg free
 25954  0058BE  0100               	movlb	0	; () banked
 25955  0058C0  29AD               	incf	?_Random& (0+255),w,b
 25956  0058C2  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 25957                           
 25958                           ; BSR set to: 0
 25959                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 25960  0058C4  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 25961                           
 25962                           ;lorawan_eu.c: 786: while (randomNumber)
 25963  0058C8  D074               	goto	l1197
 25964  0058CA                     
 25965                           ; BSR set to: 0
 25966                           ;lorawan_eu.c: 787: {
 25967                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 25968                           
 25969                           ; BSR set to: 0
 25970  0058CA  0E00               	movlw	0
 25971  0058CC  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 25972  0058CE  D063               	goto	l1188
 25973  0058D0                     
 25974                           ; BSR set to: 0
 25975                           ;lorawan_eu.c: 789: {
 25976                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 25977                           
 25978                           ; BSR set to: 0
 25979  0058D0  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 25980  0058D2  0D0E               	mullw	14
 25981  0058D4  0E04               	movlw	4
 25982  0058D6  26F3               	addwf	prodl,f,c
 25983  0058D8  0E00               	movlw	0
 25984  0058DA  22F4               	addwfc	prodh,f,c
 25985  0058DC  0E00               	movlw	low _Channels
 25986  0058DE  24F3               	addwf	prodl,w,c
 25987  0058E0  6ED9               	movwf	fsr2l,c
 25988  0058E2  0E04               	movlw	high _Channels
 25989  0058E4  20F4               	addwfc	prodh,w,c
 25990  0058E6  6EDA               	movwf	fsr2h,c
 25991  0058E8  04DE               	decf	postinc2,w,c
 25992  0058EA  A4D8               	btfss	status,2,c
 25993  0058EC  D052               	goto	l1193
 25994                           
 25995                           ; BSR set to: 0
 25996  0058EE  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 25997  0058F0  0D0E               	mullw	14
 25998  0058F2  0E08               	movlw	8
 25999  0058F4  26F3               	addwf	prodl,f,c
 26000  0058F6  0E00               	movlw	0
 26001  0058F8  22F4               	addwfc	prodh,f,c
 26002  0058FA  0E00               	movlw	low _Channels
 26003  0058FC  24F3               	addwf	prodl,w,c
 26004  0058FE  6ED9               	movwf	fsr2l,c
 26005  005900  0E04               	movlw	high _Channels
 26006  005902  20F4               	addwfc	prodh,w,c
 26007  005904  6EDA               	movwf	fsr2h,c
 26008  005906  50DE               	movf	postinc2,w,c
 26009  005908  10DE               	iorwf	postinc2,w,c
 26010  00590A  10DE               	iorwf	postinc2,w,c
 26011  00590C  10DE               	iorwf	postinc2,w,c
 26012  00590E  A4D8               	btfss	status,2,c
 26013  005910  D040               	goto	l1193
 26014                           
 26015                           ; BSR set to: 0
 26016  005912  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26017  005914  0D0E               	mullw	14
 26018  005916  0E05               	movlw	5
 26019  005918  26F3               	addwf	prodl,f,c
 26020  00591A  0E00               	movlw	0
 26021  00591C  22F4               	addwfc	prodh,f,c
 26022  00591E  0E00               	movlw	low _Channels
 26023  005920  24F3               	addwf	prodl,w,c
 26024  005922  6ED9               	movwf	fsr2l,c
 26025  005924  0E04               	movlw	high _Channels
 26026  005926  20F4               	addwfc	prodh,w,c
 26027  005928  6EDA               	movwf	fsr2h,c
 26028  00592A  0104               	movlb	4	; () banked
 26029  00592C  50DF               	movf	223,w,c
 26030  00592E  0B0F               	andlw	15
 26031  005930  0100               	movlb	0	; () banked
 26032  005932  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 26033  005934  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 26034  005936  0102               	movlb	2	; () banked
 26035  005938  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 26036  00593A  A0D8               	btfss	status,0,c
 26037  00593C  D02A               	goto	l1193
 26038                           
 26039                           ; BSR set to: 2
 26040  00593E  0100               	movlb	0	; () banked
 26041  005940  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26042  005942  0D0E               	mullw	14
 26043  005944  0E05               	movlw	5
 26044  005946  26F3               	addwf	prodl,f,c
 26045  005948  0E00               	movlw	0
 26046  00594A  22F4               	addwfc	prodh,f,c
 26047  00594C  0E00               	movlw	low _Channels
 26048  00594E  24F3               	addwf	prodl,w,c
 26049  005950  6ED9               	movwf	fsr2l,c
 26050  005952  0E04               	movlw	high _Channels
 26051  005954  20F4               	addwfc	prodh,w,c
 26052  005956  6EDA               	movwf	fsr2h,c
 26053  005958  0104               	movlb	4	; () banked
 26054  00595A  38DF               	swapf	223,w,c
 26055  00595C  0B0F               	andlw	15
 26056  00595E  0100               	movlb	0	; () banked
 26057  005960  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 26058  005962  0102               	movlb	2	; () banked
 26059  005964  51DF               	movf	(_loRa+223)& (0+255),w,b
 26060  005966  0100               	movlb	0	; () banked
 26061  005968  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 26062  00596A  A0D8               	btfss	status,0,c
 26063  00596C  D012               	goto	l1193
 26064                           
 26065                           ; BSR set to: 0
 26066                           ;lorawan_eu.c: 791: {
 26067                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 26068  00596E  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 26069  005970  A4D8               	btfss	status,2,c
 26070  005972  D00E               	goto	l1191
 26071                           
 26072                           ; BSR set to: 0
 26073                           ;lorawan_eu.c: 793: {
 26074                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 26075  005974  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26076  005976  0D0E               	mullw	14
 26077  005978  0E0C               	movlw	12
 26078  00597A  26F3               	addwf	prodl,f,c
 26079  00597C  0E00               	movlw	0
 26080  00597E  22F4               	addwfc	prodh,f,c
 26081  005980  0E00               	movlw	low _Channels
 26082  005982  24F3               	addwf	prodl,w,c
 26083  005984  6ED9               	movwf	fsr2l,c
 26084  005986  0E04               	movlw	high _Channels
 26085  005988  20F4               	addwfc	prodh,w,c
 26086  00598A  6EDA               	movwf	fsr2h,c
 26087  00598C  04DE               	decf	postinc2,w,c
 26088  00598E  B4D8               	btfsc	status,2,c
 26089  005990                     l1191:
 26090                           
 26091                           ; BSR set to: 0
 26092                           ;lorawan_eu.c: 799: else
 26093                           ;lorawan_eu.c: 800: {
 26094                           ;lorawan_eu.c: 801: randomNumber --;
 26095                           
 26096                           ; BSR set to: 0
 26097  005990  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 26098  005992                     l1193:
 26099                           
 26100                           ; BSR set to: 0
 26101  005992  0100               	movlb	0	; () banked
 26102  005994  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 26103  005996                     l1188:
 26104                           
 26105                           ; BSR set to: 0
 26106                           
 26107                           ; BSR set to: 0
 26108  005996  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 26109  005998  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 26110  00599A  B0D8               	btfsc	status,0,c
 26111  00599C  D003               	goto	u16050
 26112                           
 26113                           ; BSR set to: 0
 26114  00599E  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26115  0059A0  A4D8               	btfss	status,2,c
 26116  0059A2  D796               	goto	l1189
 26117  0059A4                     u16050:
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;lorawan_eu.c: 802: }
 26121                           ;lorawan_eu.c: 803: }
 26122                           ;lorawan_eu.c: 804: }
 26123                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 26124                           
 26125                           ; BSR set to: 0
 26126                           
 26127                           ; BSR set to: 0
 26128  0059A4  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 26129  0059A6  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26130  0059A8  A4D8               	btfss	status,2,c
 26131  0059AA  D003               	goto	l1197
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;lorawan_eu.c: 807: {
 26135                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 26136  0059AC  0E09               	movlw	9
 26137  0059AE  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26138                           
 26139                           ;lorawan_eu.c: 809: break;
 26140  0059B0  D003               	goto	u16070
 26141  0059B2                     l1197:
 26142                           
 26143                           ; BSR set to: 0
 26144                           
 26145                           ; BSR set to: 0
 26146                           
 26147                           ; BSR set to: 0
 26148  0059B2  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 26149  0059B4  A4D8               	btfss	status,2,c
 26150  0059B6  D789               	goto	l1187
 26151  0059B8                     u16070:
 26152                           
 26153                           ; BSR set to: 0
 26154                           ;lorawan_eu.c: 810: }
 26155                           ;lorawan_eu.c: 811: }
 26156                           ;lorawan_eu.c: 813: if ( i != 0)
 26157                           
 26158                           ; BSR set to: 0
 26159  0059B8  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 26160  0059BA  B4D8               	btfsc	status,2,c
 26161  0059BC  D007               	goto	l1199
 26162                           
 26163                           ; BSR set to: 0
 26164                           ;lorawan_eu.c: 814: {
 26165                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 26166  0059BE  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 26167  0059C0  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 26168  0059C4  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 26169  0059C8  6EDF               	movwf	indf2,c
 26170                           
 26171                           ;lorawan_eu.c: 816: }
 26172  0059CA  D002               	goto	l1200
 26173  0059CC                     l1199:
 26174                           
 26175                           ; BSR set to: 0
 26176                           ;lorawan_eu.c: 817: else
 26177                           ;lorawan_eu.c: 818: {
 26178                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 26179                           
 26180                           ; BSR set to: 0
 26181  0059CC  0E09               	movlw	9
 26182  0059CE  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 26183  0059D0                     l1200:
 26184                           
 26185                           ; BSR set to: 0
 26186                           ;lorawan_eu.c: 820: }
 26187                           ;lorawan_eu.c: 821: return result;
 26188  0059D0  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 26189  0059D2  0012               	return	
 26190  0059D4                     __end_of_SearchAvailableChannel:
 26191                           	opt stack 0
 26192                           tosu	equ	0xFFF
 26193                           tosh	equ	0xFFE
 26194                           tosl	equ	0xFFD
 26195                           pclath	equ	0xFFA
 26196                           tblptru	equ	0xFF8
 26197                           tblptrh	equ	0xFF7
 26198                           tblptrl	equ	0xFF6
 26199                           tablat	equ	0xFF5
 26200                           prodh	equ	0xFF4
 26201                           prodl	equ	0xFF3
 26202                           intcon	equ	0xFF2
 26203                           intcon2	equ	0xFF1
 26204                           intcon3	equ	0xFF0
 26205                           indf0	equ	0xFEF
 26206                           postinc0	equ	0xFEE
 26207                           fsr0h	equ	0xFEA
 26208                           fsr0l	equ	0xFE9
 26209                           wreg	equ	0xFE8
 26210                           postinc1	equ	0xFE6
 26211                           postdec1	equ	0xFE5
 26212                           plusw1	equ	0xFE3
 26213                           fsr1h	equ	0xFE2
 26214                           fsr1l	equ	0xFE1
 26215                           indf2	equ	0xFDF
 26216                           postinc2	equ	0xFDE
 26217                           postdec2	equ	0xFDD
 26218                           plusw2	equ	0xFDB
 26219                           fsr2h	equ	0xFDA
 26220                           fsr2l	equ	0xFD9
 26221                           status	equ	0xFD8
 26222                           
 26223 ;; *************** function _ConfigureRadioTx *****************
 26224 ;; Defined at:
 26225 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26226 ;; Parameters:    Size  Location     Type
 26227 ;;  dataRate        1    wreg     unsigned char 
 26228 ;;  freq            4   19[BANK0 ] unsigned long 
 26229 ;; Auto vars:     Size  Location     Type
 26230 ;;  dataRate        1   23[BANK0 ] unsigned char 
 26231 ;;  txPower         1   24[BANK0 ] char 
 26232 ;; Return value:  Size  Location     Type
 26233 ;;                  1    wreg      void 
 26234 ;; Registers used:
 26235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26236 ;; Tracked objects:
 26237 ;;		On entry : 0/0
 26238 ;;		On exit  : 0/0
 26239 ;;		Unchanged: 0/0
 26240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26245 ;;Total ram usage:        6 bytes
 26246 ;; Hardware stack levels used:    1
 26247 ;; Hardware stack levels required when called:   10
 26248 ;; This function calls:
 26249 ;;		_ConfigureRadio
 26250 ;;		_RADIO_SetCRC
 26251 ;;		_RADIO_SetIQInverted
 26252 ;;		_RADIO_SetOutputPower
 26253 ;; This function is called by:
 26254 ;;		_SelectChannelForTransmission
 26255 ;; This function uses a non-reentrant model
 26256 ;;
 26257                           
 26258                           	psect	text120
 26259  007E46                     __ptext120:
 26260                           	opt stack 0
 26261  007E46                     _ConfigureRadioTx:
 26262                           	opt stack 18
 26263                           
 26264                           ; BSR set to: 0
 26265                           ;incstack = 0
 26266                           ;ConfigureRadioTx@dataRate stored from wreg
 26267  007E46  0100               	movlb	0	; () banked
 26268  007E48  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 26269                           
 26270                           ;lorawan_eu.c: 1257: int8_t txPower;
 26271                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 26272  007E4A  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 26273  007E4E  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 26274  007E52  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 26275  007E56  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 26276  007E5A  0100               	movlb	0	; () banked
 26277  007E5C  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 26278  007E5E  ECD9  F035         	call	_ConfigureRadio
 26279                           
 26280                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 26281  007E62  0102               	movlb	2	; () banked
 26282  007E64  51A4               	movf	(_loRa+164)& (0+255),w,b
 26283                           
 26284                           ; BSR set to: 2
 26285                           ;lorawan_eu.c: 1265: else
 26286                           ;lorawan_eu.c: 1266: {
 26287                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 26288                           
 26289                           ; BSR set to: 2
 26290                           
 26291                           ;lorawan_eu.c: 1264: }
 26292                           
 26293                           ; BSR set to: 2
 26294                           ;lorawan_eu.c: 1262: {
 26295                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 26296  007E66  51E1               	movf	(_loRa+225)& (0+255),w,b
 26297  007E68  0D01               	mullw	1
 26298  007E6A  0E9C               	movlw	low _txPower868
 26299  007E6C  24F3               	addwf	prodl,w,c
 26300  007E6E  6EF6               	movwf	tblptrl,c
 26301  007E70  0EFF               	movlw	high _txPower868
 26302  007E72  20F4               	addwfc	prodh,w,c
 26303  007E74  6EF7               	movwf	tblptrh,c
 26304  007E76                     	if	1	;There are 3 active tblptr bytes
 26305  007E76  6AF8               	clrf	tblptru,c
 26306  007E78  0E00               	movlw	low (__mediumconst shr (0+16))
 26307  007E7A  22F8               	addwfc	tblptru,f,c
 26308  007E7C                     	endif
 26309  007E7C  0008               	tblrd		*
 26310  007E7E  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 26311                           
 26312                           ; BSR set to: 2
 26313                           ;lorawan_eu.c: 1268: }
 26314                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 26315                           
 26316                           ; BSR set to: 2
 26317  007E82  0100               	movlb	0	; () banked
 26318  007E84  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 26319  007E86  ECCC  F045         	call	_RADIO_SetOutputPower
 26320                           
 26321                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 26322  007E8A  0E01               	movlw	1
 26323  007E8C  ECD6  F045         	call	_RADIO_SetCRC
 26324                           
 26325                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 26326  007E90  0E00               	movlw	0
 26327  007E92  ECD1  F045         	call	_RADIO_SetIQInverted
 26328  007E96  0012               	return		;funcret
 26329  007E98                     __end_of_ConfigureRadioTx:
 26330                           	opt stack 0
 26331                           tosu	equ	0xFFF
 26332                           tosh	equ	0xFFE
 26333                           tosl	equ	0xFFD
 26334                           pclath	equ	0xFFA
 26335                           tblptru	equ	0xFF8
 26336                           tblptrh	equ	0xFF7
 26337                           tblptrl	equ	0xFF6
 26338                           tablat	equ	0xFF5
 26339                           prodh	equ	0xFF4
 26340                           prodl	equ	0xFF3
 26341                           intcon	equ	0xFF2
 26342                           intcon2	equ	0xFF1
 26343                           intcon3	equ	0xFF0
 26344                           indf0	equ	0xFEF
 26345                           postinc0	equ	0xFEE
 26346                           fsr0h	equ	0xFEA
 26347                           fsr0l	equ	0xFE9
 26348                           wreg	equ	0xFE8
 26349                           postinc1	equ	0xFE6
 26350                           postdec1	equ	0xFE5
 26351                           plusw1	equ	0xFE3
 26352                           fsr1h	equ	0xFE2
 26353                           fsr1l	equ	0xFE1
 26354                           indf2	equ	0xFDF
 26355                           postinc2	equ	0xFDE
 26356                           postdec2	equ	0xFDD
 26357                           plusw2	equ	0xFDB
 26358                           fsr2h	equ	0xFDA
 26359                           fsr2l	equ	0xFD9
 26360                           status	equ	0xFD8
 26361                           
 26362 ;; *************** function _RADIO_SetOutputPower *****************
 26363 ;; Defined at:
 26364 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26365 ;; Parameters:    Size  Location     Type
 26366 ;;  power           1    wreg     char 
 26367 ;; Auto vars:     Size  Location     Type
 26368 ;;  power           1    0[BANK0 ] char 
 26369 ;; Return value:  Size  Location     Type
 26370 ;;                  1    wreg      void 
 26371 ;; Registers used:
 26372 ;;		wreg
 26373 ;; Tracked objects:
 26374 ;;		On entry : 0/0
 26375 ;;		On exit  : 0/0
 26376 ;;		Unchanged: 0/0
 26377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26382 ;;Total ram usage:        1 bytes
 26383 ;; Hardware stack levels used:    1
 26384 ;; Hardware stack levels required when called:    7
 26385 ;; This function calls:
 26386 ;;		Nothing
 26387 ;; This function is called by:
 26388 ;;		_ConfigureRadioTx
 26389 ;; This function uses a non-reentrant model
 26390 ;;
 26391                           
 26392                           	psect	text121
 26393  008B98                     __ptext121:
 26394                           	opt stack 0
 26395  008B98                     _RADIO_SetOutputPower:
 26396                           	opt stack 20
 26397                           
 26398                           ;incstack = 0
 26399                           ;RADIO_SetOutputPower@power stored from wreg
 26400  008B98  0100               	movlb	0	; () banked
 26401  008B9A  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 26402                           
 26403                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 26404  008B9C  C060  F195         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 26405  008BA0  0012               	return		;funcret
 26406  008BA2                     __end_of_RADIO_SetOutputPower:
 26407                           	opt stack 0
 26408                           tosu	equ	0xFFF
 26409                           tosh	equ	0xFFE
 26410                           tosl	equ	0xFFD
 26411                           pclath	equ	0xFFA
 26412                           tblptru	equ	0xFF8
 26413                           tblptrh	equ	0xFF7
 26414                           tblptrl	equ	0xFF6
 26415                           tablat	equ	0xFF5
 26416                           prodh	equ	0xFF4
 26417                           prodl	equ	0xFF3
 26418                           intcon	equ	0xFF2
 26419                           intcon2	equ	0xFF1
 26420                           intcon3	equ	0xFF0
 26421                           indf0	equ	0xFEF
 26422                           postinc0	equ	0xFEE
 26423                           fsr0h	equ	0xFEA
 26424                           fsr0l	equ	0xFE9
 26425                           wreg	equ	0xFE8
 26426                           postinc1	equ	0xFE6
 26427                           postdec1	equ	0xFE5
 26428                           plusw1	equ	0xFE3
 26429                           fsr1h	equ	0xFE2
 26430                           fsr1l	equ	0xFE1
 26431                           indf2	equ	0xFDF
 26432                           postinc2	equ	0xFDE
 26433                           postdec2	equ	0xFDD
 26434                           plusw2	equ	0xFDB
 26435                           fsr2h	equ	0xFDA
 26436                           fsr2l	equ	0xFD9
 26437                           status	equ	0xFD8
 26438                           
 26439 ;; *************** function _RADIO_SetIQInverted *****************
 26440 ;; Defined at:
 26441 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26442 ;; Parameters:    Size  Location     Type
 26443 ;;  iqInverted      1    wreg     unsigned char 
 26444 ;; Auto vars:     Size  Location     Type
 26445 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 26446 ;; Return value:  Size  Location     Type
 26447 ;;                  1    wreg      void 
 26448 ;; Registers used:
 26449 ;;		wreg
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26459 ;;Total ram usage:        1 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:    7
 26462 ;; This function calls:
 26463 ;;		Nothing
 26464 ;; This function is called by:
 26465 ;;		_ConfigureRadioTx
 26466 ;;		_ConfigureRadioRx
 26467 ;; This function uses a non-reentrant model
 26468 ;;
 26469                           
 26470                           	psect	text122
 26471  008BA2                     __ptext122:
 26472                           	opt stack 0
 26473  008BA2                     _RADIO_SetIQInverted:
 26474                           	opt stack 20
 26475                           
 26476                           ;incstack = 0
 26477                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 26478  008BA2  0100               	movlb	0	; () banked
 26479  008BA4  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 26480                           
 26481                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 26482  008BA6  C060  F19A         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 26483  008BAA  0012               	return		;funcret
 26484  008BAC                     __end_of_RADIO_SetIQInverted:
 26485                           	opt stack 0
 26486                           tosu	equ	0xFFF
 26487                           tosh	equ	0xFFE
 26488                           tosl	equ	0xFFD
 26489                           pclath	equ	0xFFA
 26490                           tblptru	equ	0xFF8
 26491                           tblptrh	equ	0xFF7
 26492                           tblptrl	equ	0xFF6
 26493                           tablat	equ	0xFF5
 26494                           prodh	equ	0xFF4
 26495                           prodl	equ	0xFF3
 26496                           intcon	equ	0xFF2
 26497                           intcon2	equ	0xFF1
 26498                           intcon3	equ	0xFF0
 26499                           indf0	equ	0xFEF
 26500                           postinc0	equ	0xFEE
 26501                           fsr0h	equ	0xFEA
 26502                           fsr0l	equ	0xFE9
 26503                           wreg	equ	0xFE8
 26504                           postinc1	equ	0xFE6
 26505                           postdec1	equ	0xFE5
 26506                           plusw1	equ	0xFE3
 26507                           fsr1h	equ	0xFE2
 26508                           fsr1l	equ	0xFE1
 26509                           indf2	equ	0xFDF
 26510                           postinc2	equ	0xFDE
 26511                           postdec2	equ	0xFDD
 26512                           plusw2	equ	0xFDB
 26513                           fsr2h	equ	0xFDA
 26514                           fsr2l	equ	0xFD9
 26515                           status	equ	0xFD8
 26516                           
 26517 ;; *************** function _RADIO_SetCRC *****************
 26518 ;; Defined at:
 26519 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;  crc             1    wreg     unsigned char 
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;  crc             1    0[BANK0 ] unsigned char 
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1    wreg      void 
 26526 ;; Registers used:
 26527 ;;		wreg
 26528 ;; Tracked objects:
 26529 ;;		On entry : 0/0
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26536 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26537 ;;Total ram usage:        1 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; Hardware stack levels required when called:    7
 26540 ;; This function calls:
 26541 ;;		Nothing
 26542 ;; This function is called by:
 26543 ;;		_ConfigureRadioTx
 26544 ;;		_ConfigureRadioRx
 26545 ;; This function uses a non-reentrant model
 26546 ;;
 26547                           
 26548                           	psect	text123
 26549  008BAC                     __ptext123:
 26550                           	opt stack 0
 26551  008BAC                     _RADIO_SetCRC:
 26552                           	opt stack 20
 26553                           
 26554                           ;incstack = 0
 26555                           ;RADIO_SetCRC@crc stored from wreg
 26556  008BAC  0100               	movlb	0	; () banked
 26557  008BAE  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 26558                           
 26559                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 26560  008BB0  C060  F196         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 26561  008BB4  0012               	return		;funcret
 26562  008BB6                     __end_of_RADIO_SetCRC:
 26563                           	opt stack 0
 26564                           tosu	equ	0xFFF
 26565                           tosh	equ	0xFFE
 26566                           tosl	equ	0xFFD
 26567                           pclath	equ	0xFFA
 26568                           tblptru	equ	0xFF8
 26569                           tblptrh	equ	0xFF7
 26570                           tblptrl	equ	0xFF6
 26571                           tablat	equ	0xFF5
 26572                           prodh	equ	0xFF4
 26573                           prodl	equ	0xFF3
 26574                           intcon	equ	0xFF2
 26575                           intcon2	equ	0xFF1
 26576                           intcon3	equ	0xFF0
 26577                           indf0	equ	0xFEF
 26578                           postinc0	equ	0xFEE
 26579                           fsr0h	equ	0xFEA
 26580                           fsr0l	equ	0xFE9
 26581                           wreg	equ	0xFE8
 26582                           postinc1	equ	0xFE6
 26583                           postdec1	equ	0xFE5
 26584                           plusw1	equ	0xFE3
 26585                           fsr1h	equ	0xFE2
 26586                           fsr1l	equ	0xFE1
 26587                           indf2	equ	0xFDF
 26588                           postinc2	equ	0xFDE
 26589                           postdec2	equ	0xFDD
 26590                           plusw2	equ	0xFDB
 26591                           fsr2h	equ	0xFDA
 26592                           fsr2l	equ	0xFD9
 26593                           status	equ	0xFD8
 26594                           
 26595 ;; *************** function _ConfigureRadio *****************
 26596 ;; Defined at:
 26597 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26598 ;; Parameters:    Size  Location     Type
 26599 ;;  dataRate        1    wreg     unsigned char 
 26600 ;;  freq            4   14[BANK0 ] unsigned long 
 26601 ;; Auto vars:     Size  Location     Type
 26602 ;;  dataRate        1   18[BANK0 ] unsigned char 
 26603 ;; Return value:  Size  Location     Type
 26604 ;;                  1    wreg      void 
 26605 ;; Registers used:
 26606 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26607 ;; Tracked objects:
 26608 ;;		On entry : 0/0
 26609 ;;		On exit  : 0/0
 26610 ;;		Unchanged: 0/0
 26611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26615 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26616 ;;Total ram usage:        5 bytes
 26617 ;; Hardware stack levels used:    1
 26618 ;; Hardware stack levels required when called:    9
 26619 ;; This function calls:
 26620 ;;		_RADIO_SetBandwidth
 26621 ;;		_RADIO_SetChannelFrequency
 26622 ;;		_RADIO_SetFSKSyncWord
 26623 ;;		_RADIO_SetFrequencyHopPeriod
 26624 ;;		_RADIO_SetLoRaSyncWord
 26625 ;;		_RADIO_SetModulation
 26626 ;;		_RADIO_SetSpreadingFactor
 26627 ;; This function is called by:
 26628 ;;		_ConfigureRadioTx
 26629 ;;		_ConfigureRadioRx
 26630 ;; This function uses a non-reentrant model
 26631 ;;
 26632                           
 26633                           	psect	text124
 26634  006BB2                     __ptext124:
 26635                           	opt stack 0
 26636  006BB2                     _ConfigureRadio:
 26637                           	opt stack 18
 26638                           
 26639                           ;incstack = 0
 26640                           ;ConfigureRadio@dataRate stored from wreg
 26641  006BB2  0100               	movlb	0	; () banked
 26642  006BB4  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 26643                           
 26644                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 26645  006BB6  0100               	movlb	0	; () banked
 26646  006BB8  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 26647  006BBA  0D01               	mullw	1
 26648  006BBC  0E61               	movlw	low _modulation
 26649  006BBE  24F3               	addwf	prodl,w,c
 26650  006BC0  6EF6               	movwf	tblptrl,c
 26651  006BC2  0EFF               	movlw	high _modulation
 26652  006BC4  20F4               	addwfc	prodh,w,c
 26653  006BC6  6EF7               	movwf	tblptrh,c
 26654  006BC8                     	if	1	;There are 3 active tblptr bytes
 26655  006BC8  6AF8               	clrf	tblptru,c
 26656  006BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 26657  006BCC  22F8               	addwfc	tblptru,f,c
 26658  006BCE                     	endif
 26659  006BCE  0008               	tblrd		*
 26660  006BD0  50F5               	movf	tablat,w,c
 26661  006BD2  ECE0  F045         	call	_RADIO_SetModulation
 26662                           
 26663                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 26664  006BD6  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 26665  006BDA  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 26666  006BDE  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 26667  006BE2  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 26668  006BE6  EC3A  F038         	call	_RADIO_SetChannelFrequency	;wreg free
 26669                           
 26670                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 26671  006BEA  0E00               	movlw	0
 26672  006BEC  0100               	movlb	0	; () banked
 26673  006BEE  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 26674  006BF0  0E00               	movlw	0
 26675  006BF2  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 26676  006BF4  ECE5  F045         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 26677                           
 26678                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 26679  006BF8  0E07               	movlw	7
 26680  006BFA  0100               	movlb	0	; () banked
 26681  006BFC  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 26682  006BFE  D024               	goto	l1213
 26683                           
 26684                           ; BSR set to: 0
 26685                           ;lorawan_eu.c: 870: {
 26686                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 26687  006C00  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 26688  006C02  0D01               	mullw	1
 26689  006C04  0E8F               	movlw	low _spreadingFactor
 26690  006C06  24F3               	addwf	prodl,w,c
 26691  006C08  6EF6               	movwf	tblptrl,c
 26692  006C0A  0EFF               	movlw	high _spreadingFactor
 26693  006C0C  20F4               	addwfc	prodh,w,c
 26694  006C0E  6EF7               	movwf	tblptrh,c
 26695  006C10                     	if	1	;There are 3 active tblptr bytes
 26696  006C10  6AF8               	clrf	tblptru,c
 26697  006C12  0E00               	movlw	low (__mediumconst shr (0+16))
 26698  006C14  22F8               	addwfc	tblptru,f,c
 26699  006C16                     	endif
 26700  006C16  0008               	tblrd		*
 26701  006C18  50F5               	movf	tablat,w,c
 26702  006C1A  ECDB  F045         	call	_RADIO_SetSpreadingFactor
 26703                           
 26704                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 26705  006C1E  0100               	movlb	0	; () banked
 26706  006C20  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 26707  006C22  0D01               	mullw	1
 26708  006C24  0E88               	movlw	low _bandwidth
 26709  006C26  24F3               	addwf	prodl,w,c
 26710  006C28  6EF6               	movwf	tblptrl,c
 26711  006C2A  0EFF               	movlw	high _bandwidth
 26712  006C2C  20F4               	addwfc	prodh,w,c
 26713  006C2E  6EF7               	movwf	tblptrh,c
 26714  006C30                     	if	1	;There are 3 active tblptr bytes
 26715  006C30  6AF8               	clrf	tblptru,c
 26716  006C32  0E00               	movlw	low (__mediumconst shr (0+16))
 26717  006C34  22F8               	addwfc	tblptru,f,c
 26718  006C36                     	endif
 26719  006C36  0008               	tblrd		*
 26720  006C38  50F5               	movf	tablat,w,c
 26721  006C3A  ECEA  F045         	call	_RADIO_SetBandwidth
 26722                           
 26723                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 26724  006C3E  0102               	movlb	2	; () banked
 26725  006C40  51F4               	movf	(_loRa+244)& (0+255),w,b
 26726  006C42  ECEF  F045         	call	_RADIO_SetLoRaSyncWord
 26727                           
 26728                           ;lorawan_eu.c: 875: }
 26729  006C46  0012               	return	
 26730  006C48                     l1213:
 26731                           
 26732                           ;lorawan_eu.c: 876: else
 26733                           ;lorawan_eu.c: 877: {
 26734                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 26735  006C48  0EF6               	movlw	low _FskSyncWordBuff
 26736  006C4A  0100               	movlb	0	; () banked
 26737  006C4C  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 26738  006C4E  0EFF               	movlw	high _FskSyncWordBuff
 26739  006C50  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 26740  006C52  0E03               	movlw	3
 26741  006C54  EC3B  F042         	call	_RADIO_SetFSKSyncWord
 26742  006C58  0012               	return	
 26743  006C5A                     __end_of_ConfigureRadio:
 26744                           	opt stack 0
 26745                           tosu	equ	0xFFF
 26746                           tosh	equ	0xFFE
 26747                           tosl	equ	0xFFD
 26748                           pclath	equ	0xFFA
 26749                           tblptru	equ	0xFF8
 26750                           tblptrh	equ	0xFF7
 26751                           tblptrl	equ	0xFF6
 26752                           tablat	equ	0xFF5
 26753                           prodh	equ	0xFF4
 26754                           prodl	equ	0xFF3
 26755                           intcon	equ	0xFF2
 26756                           intcon2	equ	0xFF1
 26757                           intcon3	equ	0xFF0
 26758                           indf0	equ	0xFEF
 26759                           postinc0	equ	0xFEE
 26760                           fsr0h	equ	0xFEA
 26761                           fsr0l	equ	0xFE9
 26762                           wreg	equ	0xFE8
 26763                           postinc1	equ	0xFE6
 26764                           postdec1	equ	0xFE5
 26765                           plusw1	equ	0xFE3
 26766                           fsr1h	equ	0xFE2
 26767                           fsr1l	equ	0xFE1
 26768                           indf2	equ	0xFDF
 26769                           postinc2	equ	0xFDE
 26770                           postdec2	equ	0xFDD
 26771                           plusw2	equ	0xFDB
 26772                           fsr2h	equ	0xFDA
 26773                           fsr2l	equ	0xFD9
 26774                           status	equ	0xFD8
 26775                           
 26776 ;; *************** function _RADIO_SetSpreadingFactor *****************
 26777 ;; Defined at:
 26778 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;  spreadingFac    1    wreg     enum E6994
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  1    wreg      void 
 26785 ;; Registers used:
 26786 ;;		wreg
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26795 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26796 ;;Total ram usage:        1 bytes
 26797 ;; Hardware stack levels used:    1
 26798 ;; Hardware stack levels required when called:    7
 26799 ;; This function calls:
 26800 ;;		Nothing
 26801 ;; This function is called by:
 26802 ;;		_ConfigureRadio
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text125
 26807  008BB6                     __ptext125:
 26808                           	opt stack 0
 26809  008BB6                     _RADIO_SetSpreadingFactor:
 26810                           	opt stack 19
 26811                           
 26812                           ;incstack = 0
 26813                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 26814  008BB6  0100               	movlb	0	; () banked
 26815  008BB8  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 26816                           
 26817                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 26818  008BBA  C060  F193         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 26819  008BBE  0012               	return		;funcret
 26820  008BC0                     __end_of_RADIO_SetSpreadingFactor:
 26821                           	opt stack 0
 26822                           tosu	equ	0xFFF
 26823                           tosh	equ	0xFFE
 26824                           tosl	equ	0xFFD
 26825                           pclath	equ	0xFFA
 26826                           tblptru	equ	0xFF8
 26827                           tblptrh	equ	0xFF7
 26828                           tblptrl	equ	0xFF6
 26829                           tablat	equ	0xFF5
 26830                           prodh	equ	0xFF4
 26831                           prodl	equ	0xFF3
 26832                           intcon	equ	0xFF2
 26833                           intcon2	equ	0xFF1
 26834                           intcon3	equ	0xFF0
 26835                           indf0	equ	0xFEF
 26836                           postinc0	equ	0xFEE
 26837                           fsr0h	equ	0xFEA
 26838                           fsr0l	equ	0xFE9
 26839                           wreg	equ	0xFE8
 26840                           postinc1	equ	0xFE6
 26841                           postdec1	equ	0xFE5
 26842                           plusw1	equ	0xFE3
 26843                           fsr1h	equ	0xFE2
 26844                           fsr1l	equ	0xFE1
 26845                           indf2	equ	0xFDF
 26846                           postinc2	equ	0xFDE
 26847                           postdec2	equ	0xFDD
 26848                           plusw2	equ	0xFDB
 26849                           fsr2h	equ	0xFDA
 26850                           fsr2l	equ	0xFD9
 26851                           status	equ	0xFD8
 26852                           
 26853 ;; *************** function _RADIO_SetModulation *****************
 26854 ;; Defined at:
 26855 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;  modulation      1    wreg     enum E6984
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;  modulation      1    0[BANK0 ] enum E6984
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1    wreg      void 
 26862 ;; Registers used:
 26863 ;;		wreg
 26864 ;; Tracked objects:
 26865 ;;		On entry : 0/0
 26866 ;;		On exit  : 0/0
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26873 ;;Total ram usage:        1 bytes
 26874 ;; Hardware stack levels used:    1
 26875 ;; Hardware stack levels required when called:    7
 26876 ;; This function calls:
 26877 ;;		Nothing
 26878 ;; This function is called by:
 26879 ;;		_ConfigureRadio
 26880 ;; This function uses a non-reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text126
 26884  008BC0                     __ptext126:
 26885                           	opt stack 0
 26886  008BC0                     _RADIO_SetModulation:
 26887                           	opt stack 19
 26888                           
 26889                           ;incstack = 0
 26890                           ;RADIO_SetModulation@modulation stored from wreg
 26891  008BC0  0100               	movlb	0	; () banked
 26892  008BC2  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 26893                           
 26894                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 26895  008BC4  C060  F192         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 26896  008BC8  0012               	return		;funcret
 26897  008BCA                     __end_of_RADIO_SetModulation:
 26898                           	opt stack 0
 26899                           tosu	equ	0xFFF
 26900                           tosh	equ	0xFFE
 26901                           tosl	equ	0xFFD
 26902                           pclath	equ	0xFFA
 26903                           tblptru	equ	0xFF8
 26904                           tblptrh	equ	0xFF7
 26905                           tblptrl	equ	0xFF6
 26906                           tablat	equ	0xFF5
 26907                           prodh	equ	0xFF4
 26908                           prodl	equ	0xFF3
 26909                           intcon	equ	0xFF2
 26910                           intcon2	equ	0xFF1
 26911                           intcon3	equ	0xFF0
 26912                           indf0	equ	0xFEF
 26913                           postinc0	equ	0xFEE
 26914                           fsr0h	equ	0xFEA
 26915                           fsr0l	equ	0xFE9
 26916                           wreg	equ	0xFE8
 26917                           postinc1	equ	0xFE6
 26918                           postdec1	equ	0xFE5
 26919                           plusw1	equ	0xFE3
 26920                           fsr1h	equ	0xFE2
 26921                           fsr1l	equ	0xFE1
 26922                           indf2	equ	0xFDF
 26923                           postinc2	equ	0xFDE
 26924                           postdec2	equ	0xFDD
 26925                           plusw2	equ	0xFDB
 26926                           fsr2h	equ	0xFDA
 26927                           fsr2l	equ	0xFD9
 26928                           status	equ	0xFD8
 26929                           
 26930 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 26931 ;; Defined at:
 26932 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26933 ;; Parameters:    Size  Location     Type
 26934 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 26935 ;; Auto vars:     Size  Location     Type
 26936 ;;		None
 26937 ;; Return value:  Size  Location     Type
 26938 ;;                  1    wreg      void 
 26939 ;; Registers used:
 26940 ;;		None
 26941 ;; Tracked objects:
 26942 ;;		On entry : 0/0
 26943 ;;		On exit  : 0/0
 26944 ;;		Unchanged: 0/0
 26945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26950 ;;Total ram usage:        2 bytes
 26951 ;; Hardware stack levels used:    1
 26952 ;; Hardware stack levels required when called:    7
 26953 ;; This function calls:
 26954 ;;		Nothing
 26955 ;; This function is called by:
 26956 ;;		_ConfigureRadio
 26957 ;; This function uses a non-reentrant model
 26958 ;;
 26959                           
 26960                           	psect	text127
 26961  008BCA                     __ptext127:
 26962                           	opt stack 0
 26963  008BCA                     _RADIO_SetFrequencyHopPeriod:
 26964                           	opt stack 19
 26965                           
 26966                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 26967                           
 26968                           ;incstack = 0
 26969  008BCA  C060  F198         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 26970  008BCE  C061  F199         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 26971  008BD2  0012               	return		;funcret
 26972  008BD4                     __end_of_RADIO_SetFrequencyHopPeriod:
 26973                           	opt stack 0
 26974                           tosu	equ	0xFFF
 26975                           tosh	equ	0xFFE
 26976                           tosl	equ	0xFFD
 26977                           pclath	equ	0xFFA
 26978                           tblptru	equ	0xFF8
 26979                           tblptrh	equ	0xFF7
 26980                           tblptrl	equ	0xFF6
 26981                           tablat	equ	0xFF5
 26982                           prodh	equ	0xFF4
 26983                           prodl	equ	0xFF3
 26984                           intcon	equ	0xFF2
 26985                           intcon2	equ	0xFF1
 26986                           intcon3	equ	0xFF0
 26987                           indf0	equ	0xFEF
 26988                           postinc0	equ	0xFEE
 26989                           fsr0h	equ	0xFEA
 26990                           fsr0l	equ	0xFE9
 26991                           wreg	equ	0xFE8
 26992                           postinc1	equ	0xFE6
 26993                           postdec1	equ	0xFE5
 26994                           plusw1	equ	0xFE3
 26995                           fsr1h	equ	0xFE2
 26996                           fsr1l	equ	0xFE1
 26997                           indf2	equ	0xFDF
 26998                           postinc2	equ	0xFDE
 26999                           postdec2	equ	0xFDD
 27000                           plusw2	equ	0xFDB
 27001                           fsr2h	equ	0xFDA
 27002                           fsr2l	equ	0xFD9
 27003                           status	equ	0xFD8
 27004                           
 27005 ;; *************** function _RADIO_SetFSKSyncWord *****************
 27006 ;; Defined at:
 27007 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27008 ;; Parameters:    Size  Location     Type
 27009 ;;  syncWordLen     1    wreg     unsigned char 
 27010 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 27011 ;;		 -> FskSyncWordBuff(3), 
 27012 ;; Auto vars:     Size  Location     Type
 27013 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 27014 ;; Return value:  Size  Location     Type
 27015 ;;                  1    wreg      void 
 27016 ;; Registers used:
 27017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27018 ;; Tracked objects:
 27019 ;;		On entry : 0/0
 27020 ;;		On exit  : 0/0
 27021 ;;		Unchanged: 0/0
 27022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27026 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27027 ;;Total ram usage:        3 bytes
 27028 ;; Hardware stack levels used:    1
 27029 ;; Hardware stack levels required when called:    8
 27030 ;; This function calls:
 27031 ;;		_memcpy
 27032 ;; This function is called by:
 27033 ;;		_ConfigureRadio
 27034 ;; This function uses a non-reentrant model
 27035 ;;
 27036                           
 27037                           	psect	text128
 27038  008476                     __ptext128:
 27039                           	opt stack 0
 27040  008476                     _RADIO_SetFSKSyncWord:
 27041                           	opt stack 18
 27042                           
 27043                           ;incstack = 0
 27044                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 27045  008476  0100               	movlb	0	; () banked
 27046  008478  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27047                           
 27048                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 27049  00847A  0E08               	movlw	8
 27050  00847C  0100               	movlb	0	; () banked
 27051  00847E  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27052  008480  D002               	goto	l849
 27053                           
 27054                           ; BSR set to: 0
 27055                           ;radio_driver_SX1276.c: 1627: {
 27056                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 27057  008482  0E08               	movlw	8
 27058  008484  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 27059  008486                     l849:
 27060                           
 27061                           ; BSR set to: 0
 27062                           ;radio_driver_SX1276.c: 1629: }
 27063                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 27064                           
 27065                           ; BSR set to: 0
 27066  008486  0E89               	movlw	low (_RadioConfiguration+15)
 27067  008488  6F60               	movwf	memcpy@d1& (0+255),b
 27068  00848A  0E01               	movlw	high (_RadioConfiguration+15)
 27069  00848C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27070  00848E  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 27071  008492  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 27072  008496  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 27073  00849A  6B65               	clrf	(memcpy@n+1)& (0+255),b
 27074  00849C  EC37  F03D         	call	_memcpy	;wreg free
 27075                           
 27076                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 27077  0084A0  C06D  F191         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 27078  0084A4  0012               	return		;funcret
 27079  0084A6                     __end_of_RADIO_SetFSKSyncWord:
 27080                           	opt stack 0
 27081                           tosu	equ	0xFFF
 27082                           tosh	equ	0xFFE
 27083                           tosl	equ	0xFFD
 27084                           pclath	equ	0xFFA
 27085                           tblptru	equ	0xFF8
 27086                           tblptrh	equ	0xFF7
 27087                           tblptrl	equ	0xFF6
 27088                           tablat	equ	0xFF5
 27089                           prodh	equ	0xFF4
 27090                           prodl	equ	0xFF3
 27091                           intcon	equ	0xFF2
 27092                           intcon2	equ	0xFF1
 27093                           intcon3	equ	0xFF0
 27094                           indf0	equ	0xFEF
 27095                           postinc0	equ	0xFEE
 27096                           fsr0h	equ	0xFEA
 27097                           fsr0l	equ	0xFE9
 27098                           wreg	equ	0xFE8
 27099                           postinc1	equ	0xFE6
 27100                           postdec1	equ	0xFE5
 27101                           plusw1	equ	0xFE3
 27102                           fsr1h	equ	0xFE2
 27103                           fsr1l	equ	0xFE1
 27104                           indf2	equ	0xFDF
 27105                           postinc2	equ	0xFDE
 27106                           postdec2	equ	0xFDD
 27107                           plusw2	equ	0xFDB
 27108                           fsr2h	equ	0xFDA
 27109                           fsr2l	equ	0xFD9
 27110                           status	equ	0xFD8
 27111                           
 27112 ;; *************** function _RADIO_SetChannelFrequency *****************
 27113 ;; Defined at:
 27114 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27115 ;; Parameters:    Size  Location     Type
 27116 ;;  frequency       4    0[BANK0 ] unsigned long 
 27117 ;; Auto vars:     Size  Location     Type
 27118 ;;		None
 27119 ;; Return value:  Size  Location     Type
 27120 ;;                  2    0[BANK0 ] enum E7038
 27121 ;; Registers used:
 27122 ;;		wreg, status,2, status,0
 27123 ;; Tracked objects:
 27124 ;;		On entry : 0/0
 27125 ;;		On exit  : 0/0
 27126 ;;		Unchanged: 0/0
 27127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27131 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27132 ;;Total ram usage:        4 bytes
 27133 ;; Hardware stack levels used:    1
 27134 ;; Hardware stack levels required when called:    7
 27135 ;; This function calls:
 27136 ;;		Nothing
 27137 ;; This function is called by:
 27138 ;;		_ConfigureRadio
 27139 ;; This function uses a non-reentrant model
 27140 ;;
 27141                           
 27142                           	psect	text129
 27143  007074                     __ptext129:
 27144                           	opt stack 0
 27145  007074                     _RADIO_SetChannelFrequency:
 27146                           	opt stack 19
 27147                           
 27148                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 27149                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 27150                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 27151                           
 27152                           ;incstack = 0
 27153  007074  0E40               	movlw	64
 27154  007076  0100               	movlb	0	; () banked
 27155  007078  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27156  00707A  0E74               	movlw	116
 27157  00707C  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27158  00707E  0E2A               	movlw	42
 27159  007080  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27160  007082  0E08               	movlw	8
 27161  007084  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27162  007086  A0D8               	btfss	status,0,c
 27163  007088  D00A               	goto	u14740
 27164                           
 27165                           ; BSR set to: 0
 27166  00708A  0EC1               	movlw	193
 27167  00708C  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27168  00708E  0E49               	movlw	73
 27169  007090  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27170  007092  0E6E               	movlw	110
 27171  007094  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27172  007096  0E0A               	movlw	10
 27173  007098  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27174  00709A  A0D8               	btfss	status,0,c
 27175  00709C  D027               	goto	u14780
 27176  00709E                     u14740:
 27177                           
 27178                           ; BSR set to: 0
 27179                           
 27180                           ; BSR set to: 0
 27181  00709E  0E80               	movlw	128
 27182  0070A0  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27183  0070A2  0E1A               	movlw	26
 27184  0070A4  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27185  0070A6  0E70               	movlw	112
 27186  0070A8  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27187  0070AA  0E18               	movlw	24
 27188  0070AC  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27189  0070AE  A0D8               	btfss	status,0,c
 27190  0070B0  D00A               	goto	u14760
 27191                           
 27192                           ; BSR set to: 0
 27193  0070B2  0E41               	movlw	65
 27194  0070B4  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27195  0070B6  0EDD               	movlw	221
 27196  0070B8  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27197  0070BA  0E4A               	movlw	74
 27198  0070BC  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27199  0070BE  0E1F               	movlw	31
 27200  0070C0  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27201  0070C2  A0D8               	btfss	status,0,c
 27202  0070C4  D013               	goto	u14780
 27203  0070C6                     u14760:
 27204                           
 27205                           ; BSR set to: 0
 27206                           
 27207                           ; BSR set to: 0
 27208  0070C6  0E80               	movlw	128
 27209  0070C8  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27210  0070CA  0E13               	movlw	19
 27211  0070CC  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27212  0070CE  0E61               	movlw	97
 27213  0070D0  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27214  0070D2  0E33               	movlw	51
 27215  0070D4  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27216  0070D6  A0D8               	btfss	status,0,c
 27217  0070D8  0012               	return	
 27218                           
 27219                           ; BSR set to: 0
 27220  0070DA  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 27221  0070DC  0EF7               	movlw	247
 27222  0070DE  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 27223  0070E0  0ECB               	movlw	203
 27224  0070E2  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 27225  0070E4  0E3C               	movlw	60
 27226  0070E6  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 27227  0070E8  B0D8               	btfsc	status,0,c
 27228  0070EA  0012               	return	
 27229  0070EC                     u14780:
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;radio_driver_SX1276.c: 1449: {
 27233                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 27234  0070EC  C060  F17A         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 27235  0070F0  C061  F17B         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 27236  0070F4  C062  F17C         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 27237  0070F8  C063  F17D         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 27238                           
 27239                           ; BSR set to: 0
 27240                           ;radio_driver_SX1276.c: 1453: else
 27241                           ;radio_driver_SX1276.c: 1454: {
 27242                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 27243                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27244                           
 27245                           ; BSR set to: 0
 27246                           ;radio_driver_SX1276.c: 1452: }
 27247                           
 27248                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 27249                           ;	Return value of _RADIO_SetChannelFrequency is never used
 27250  0070FC  0012               	return	
 27251  0070FE                     __end_of_RADIO_SetChannelFrequency:
 27252                           	opt stack 0
 27253                           tosu	equ	0xFFF
 27254                           tosh	equ	0xFFE
 27255                           tosl	equ	0xFFD
 27256                           pclath	equ	0xFFA
 27257                           tblptru	equ	0xFF8
 27258                           tblptrh	equ	0xFF7
 27259                           tblptrl	equ	0xFF6
 27260                           tablat	equ	0xFF5
 27261                           prodh	equ	0xFF4
 27262                           prodl	equ	0xFF3
 27263                           intcon	equ	0xFF2
 27264                           intcon2	equ	0xFF1
 27265                           intcon3	equ	0xFF0
 27266                           indf0	equ	0xFEF
 27267                           postinc0	equ	0xFEE
 27268                           fsr0h	equ	0xFEA
 27269                           fsr0l	equ	0xFE9
 27270                           wreg	equ	0xFE8
 27271                           postinc1	equ	0xFE6
 27272                           postdec1	equ	0xFE5
 27273                           plusw1	equ	0xFE3
 27274                           fsr1h	equ	0xFE2
 27275                           fsr1l	equ	0xFE1
 27276                           indf2	equ	0xFDF
 27277                           postinc2	equ	0xFDE
 27278                           postdec2	equ	0xFDD
 27279                           plusw2	equ	0xFDB
 27280                           fsr2h	equ	0xFDA
 27281                           fsr2l	equ	0xFD9
 27282                           status	equ	0xFD8
 27283                           
 27284 ;; *************** function _RADIO_SetBandwidth *****************
 27285 ;; Defined at:
 27286 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27287 ;; Parameters:    Size  Location     Type
 27288 ;;  bandwidth       1    wreg     enum E7002
 27289 ;; Auto vars:     Size  Location     Type
 27290 ;;  bandwidth       1    0[BANK0 ] enum E7002
 27291 ;; Return value:  Size  Location     Type
 27292 ;;                  1    wreg      void 
 27293 ;; Registers used:
 27294 ;;		wreg
 27295 ;; Tracked objects:
 27296 ;;		On entry : 0/0
 27297 ;;		On exit  : 0/0
 27298 ;;		Unchanged: 0/0
 27299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27303 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27304 ;;Total ram usage:        1 bytes
 27305 ;; Hardware stack levels used:    1
 27306 ;; Hardware stack levels required when called:    7
 27307 ;; This function calls:
 27308 ;;		Nothing
 27309 ;; This function is called by:
 27310 ;;		_ConfigureRadio
 27311 ;; This function uses a non-reentrant model
 27312 ;;
 27313                           
 27314                           	psect	text130
 27315  008BD4                     __ptext130:
 27316                           	opt stack 0
 27317  008BD4                     _RADIO_SetBandwidth:
 27318                           	opt stack 19
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;incstack = 0
 27322                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 27323  008BD4  0100               	movlb	0	; () banked
 27324  008BD6  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 27325                           
 27326                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 27327  008BD8  C060  F194         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 27328  008BDC  0012               	return		;funcret
 27329  008BDE                     __end_of_RADIO_SetBandwidth:
 27330                           	opt stack 0
 27331                           tosu	equ	0xFFF
 27332                           tosh	equ	0xFFE
 27333                           tosl	equ	0xFFD
 27334                           pclath	equ	0xFFA
 27335                           tblptru	equ	0xFF8
 27336                           tblptrh	equ	0xFF7
 27337                           tblptrl	equ	0xFF6
 27338                           tablat	equ	0xFF5
 27339                           prodh	equ	0xFF4
 27340                           prodl	equ	0xFF3
 27341                           intcon	equ	0xFF2
 27342                           intcon2	equ	0xFF1
 27343                           intcon3	equ	0xFF0
 27344                           indf0	equ	0xFEF
 27345                           postinc0	equ	0xFEE
 27346                           fsr0h	equ	0xFEA
 27347                           fsr0l	equ	0xFE9
 27348                           wreg	equ	0xFE8
 27349                           postinc1	equ	0xFE6
 27350                           postdec1	equ	0xFE5
 27351                           plusw1	equ	0xFE3
 27352                           fsr1h	equ	0xFE2
 27353                           fsr1l	equ	0xFE1
 27354                           indf2	equ	0xFDF
 27355                           postinc2	equ	0xFDE
 27356                           postdec2	equ	0xFDD
 27357                           plusw2	equ	0xFDB
 27358                           fsr2h	equ	0xFDA
 27359                           fsr2l	equ	0xFD9
 27360                           status	equ	0xFD8
 27361                           
 27362 ;; *************** function _RADIO_Transmit *****************
 27363 ;; Defined at:
 27364 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27365 ;; Parameters:    Size  Location     Type
 27366 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 27367 ;;		 -> macBuffer(271), 
 27368 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 27369 ;; Auto vars:     Size  Location     Type
 27370 ;;  i               1   97[BANK0 ] unsigned char 
 27371 ;;  regValue        1   96[BANK0 ] unsigned char 
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  2   81[BANK0 ] enum E7038
 27374 ;; Registers used:
 27375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27376 ;; Tracked objects:
 27377 ;;		On entry : 0/0
 27378 ;;		On exit  : 0/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27381 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27382 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27383 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27384 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27385 ;;Total ram usage:       17 bytes
 27386 ;; Hardware stack levels used:    1
 27387 ;; Hardware stack levels required when called:   12
 27388 ;; This function calls:
 27389 ;;		_HALSPICSAssert
 27390 ;;		_HALSPICSDeassert
 27391 ;;		_HALSPISend
 27392 ;;		_RADIO_RegisterRead
 27393 ;;		_RADIO_RegisterWrite
 27394 ;;		_RADIO_WriteConfiguration
 27395 ;;		_RADIO_WriteMode
 27396 ;;		_SwTimerSetTimeout
 27397 ;;		_SwTimerStart
 27398 ;;		_SwTimerStop
 27399 ;;		___lldiv
 27400 ;; This function is called by:
 27401 ;;		_LORAWAN_RxTimeout
 27402 ;;		_LORAWAN_Join
 27403 ;;		_LORAWAN_Send
 27404 ;;		_AckRetransmissionCallback
 27405 ;;		_UnconfirmedTransmissionCallback
 27406 ;; This function uses a non-reentrant model
 27407 ;;
 27408                           
 27409                           	psect	text131
 27410  003A20                     __ptext131:
 27411                           	opt stack 0
 27412  003A20                     _RADIO_Transmit:
 27413                           	opt stack 17
 27414                           
 27415                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 27416                           ;radio_driver_SX1276.c: 789: uint8_t i;
 27417                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27418                           
 27419                           ;incstack = 0
 27420  003A20  0101               	movlb	1	; () banked
 27421  003A22  A59D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27422  003A24  D006               	goto	l544
 27423                           
 27424                           ; BSR set to: 1
 27425                           ;radio_driver_SX1276.c: 792: {
 27426                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 27427  003A26  0E80               	movlw	128
 27428  003A28  0100               	movlb	0	; () banked
 27429  003A2A  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27430  003A2C  0E03               	movlw	3
 27431  003A2E  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27432                           
 27433                           ; BSR set to: 0
 27434  003A30  0012               	return	
 27435  003A32                     l544:
 27436                           
 27437                           ;radio_driver_SX1276.c: 794: }
 27438                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27439                           
 27440                           ; BSR set to: 0
 27441  003A32  C19D  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 27442  003A36  0E03               	movlw	3
 27443  003A38  0100               	movlb	0	; () banked
 27444  003A3A  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 27445  003A3C  B4D8               	btfsc	status,2,c
 27446  003A3E  D005               	goto	l546
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;radio_driver_SX1276.c: 797: {
 27450                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 27451  003A40  0E80               	movlw	128
 27452  003A42  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27453  003A44  0E04               	movlw	4
 27454  003A46  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27455                           
 27456                           ; BSR set to: 0
 27457  003A48  0012               	return	
 27458  003A4A                     l546:
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;radio_driver_SX1276.c: 799: }
 27462                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 27463                           
 27464                           ; BSR set to: 0
 27465  003A4A  0101               	movlb	1	; () banked
 27466  003A4C  5192               	movf	(_RadioConfiguration+24)& (0+255),w,b
 27467  003A4E  A4D8               	btfss	status,2,c
 27468  003A50  D009               	goto	l547
 27469                           
 27470                           ; BSR set to: 1
 27471  003A52  0E40               	movlw	64
 27472  003A54  0100               	movlb	0	; () banked
 27473  003A56  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 27474  003A58  D005               	goto	l547
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;radio_driver_SX1276.c: 802: {
 27478                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 27479  003A5A  0E80               	movlw	128
 27480  003A5C  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27481  003A5E  0E02               	movlw	2
 27482  003A60  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27483                           
 27484                           ; BSR set to: 0
 27485  003A62  0012               	return	
 27486  003A64                     l547:
 27487                           
 27488                           ;radio_driver_SX1276.c: 804: }
 27489                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 27490                           
 27491                           ; BSR set to: 0
 27492  003A64  0101               	movlb	1	; () banked
 27493  003A66  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27494  003A68  EC96  F043         	call	_SwTimerStop
 27495                           
 27496                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 27497  003A6C  0E00               	movlw	0
 27498  003A6E  0100               	movlb	0	; () banked
 27499  003A70  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27500  003A72  0E04               	movlw	4
 27501  003A74  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27502  003A76  EC6F  F00A         	call	_RADIO_WriteConfiguration	;wreg free
 27503                           
 27504                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 27505  003A7A  0101               	movlb	1	; () banked
 27506  003A7C  0592               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27507  003A7E  A4D8               	btfss	status,2,c
 27508  003A80  D027               	goto	l548
 27509                           
 27510                           ; BSR set to: 1
 27511                           ;radio_driver_SX1276.c: 813: {
 27512                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 27513  003A82  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27514  003A86  0E22               	movlw	34
 27515  003A88  EC33  F044         	call	_RADIO_RegisterWrite
 27516                           
 27517                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 27518  003A8C  0E0A               	movlw	10
 27519  003A8E  EC82  F043         	call	_RADIO_RegisterRead
 27520  003A92  0100               	movlb	0	; () banked
 27521  003A94  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 27522                           
 27523                           ; BSR set to: 0
 27524                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 27525  003A96  0EF0               	movlw	240
 27526  003A98  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 27527                           
 27528                           ; BSR set to: 0
 27529                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 27530  003A9A  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 27531                           
 27532                           ; BSR set to: 0
 27533                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 27534  003A9C  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 27535  003AA0  0E0A               	movlw	10
 27536  003AA2  EC33  F044         	call	_RADIO_RegisterWrite
 27537                           
 27538                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 27539  003AA6  0E40               	movlw	64
 27540  003AA8  0100               	movlb	0	; () banked
 27541  003AAA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27542  003AAC  0E40               	movlw	64
 27543  003AAE  EC33  F044         	call	_RADIO_RegisterWrite
 27544                           
 27545                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 27546  003AB2  0E00               	movlw	0
 27547  003AB4  0100               	movlb	0	; () banked
 27548  003AB6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27549  003AB8  0E41               	movlw	65
 27550  003ABA  EC33  F044         	call	_RADIO_RegisterWrite
 27551                           
 27552                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 27553  003ABE  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27554  003AC2  0E01               	movlw	1
 27555  003AC4  0100               	movlb	0	; () banked
 27556  003AC6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27557  003AC8  0E01               	movlw	1
 27558  003ACA  EC0D  F02F         	call	_RADIO_WriteMode
 27559                           
 27560                           ;radio_driver_SX1276.c: 828: }
 27561  003ACE  D00C               	goto	l549
 27562  003AD0                     l548:
 27563                           
 27564                           ;radio_driver_SX1276.c: 829: else
 27565                           ;radio_driver_SX1276.c: 830: {
 27566                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 27567  003AD0  0E00               	movlw	0
 27568  003AD2  0100               	movlb	0	; () banked
 27569  003AD4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27570  003AD6  0E40               	movlw	64
 27571  003AD8  EC33  F044         	call	_RADIO_RegisterWrite
 27572                           
 27573                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 27574  003ADC  0E00               	movlw	0
 27575  003ADE  0100               	movlb	0	; () banked
 27576  003AE0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27577  003AE2  0E41               	movlw	65
 27578  003AE4  EC33  F044         	call	_RADIO_RegisterWrite
 27579  003AE8                     l549:
 27580                           
 27581                           ;radio_driver_SX1276.c: 834: }
 27582                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 27583  003AE8  0101               	movlb	1	; () banked
 27584  003AEA  5192               	movf	(_RadioConfiguration+24)& (0+255),w,b
 27585  003AEC  A4D8               	btfss	status,2,c
 27586  003AEE  D005               	goto	l550
 27587                           
 27588                           ; BSR set to: 1
 27589                           ;radio_driver_SX1276.c: 837: {
 27590                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 27591  003AF0  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27592  003AF4  0E00               	movlw	0
 27593  003AF6  EC33  F044         	call	_RADIO_RegisterWrite
 27594  003AFA                     l550:
 27595                           
 27596                           ;radio_driver_SX1276.c: 840: }
 27597                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 27598  003AFA  EC1D  F046         	call	_HALSPICSAssert	;wreg free
 27599                           
 27600                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 27601  003AFE  0E80               	movlw	128
 27602  003B00  EC9C  F045         	call	_HALSPISend
 27603                           
 27604                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 27605  003B04  0E00               	movlw	0
 27606  003B06  0100               	movlb	0	; () banked
 27607  003B08  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 27608  003B0A  D00D               	goto	l551
 27609  003B0C                     
 27610                           ; BSR set to: 0
 27611                           ;radio_driver_SX1276.c: 846: {
 27612                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 27613                           
 27614                           ; BSR set to: 0
 27615  003B0C  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 27616  003B0E  0D01               	mullw	1
 27617  003B10  50F3               	movf	prodl,w,c
 27618  003B12  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 27619  003B14  6ED9               	movwf	fsr2l,c
 27620  003B16  50F4               	movf	prodh,w,c
 27621  003B18  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 27622  003B1A  6EDA               	movwf	fsr2h,c
 27623  003B1C  50DF               	movf	indf2,w,c
 27624  003B1E  EC9C  F045         	call	_HALSPISend
 27625  003B22  0100               	movlb	0	; () banked
 27626  003B24  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 27627  003B26                     l551:
 27628                           
 27629                           ; BSR set to: 0
 27630                           
 27631                           ; BSR set to: 0
 27632  003B26  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 27633  003B28  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 27634  003B2A  A0D8               	btfss	status,0,c
 27635  003B2C  D7EF               	goto	l552
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;radio_driver_SX1276.c: 848: }
 27639                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 27640                           
 27641                           ; BSR set to: 0
 27642  003B2E  EC1B  F046         	call	_HALSPICSDeassert	;wreg free
 27643                           
 27644                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 27645  003B32  0101               	movlb	1	; () banked
 27646  003B34  819D               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 27647                           
 27648                           ; BSR set to: 1
 27649                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27650  003B36  0EE7               	movlw	231
 27651  003B38  179D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27652                           
 27653                           ; BSR set to: 1
 27654                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 27655  003B3A  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27656  003B3E  0E00               	movlw	0
 27657  003B40  0100               	movlb	0	; () banked
 27658  003B42  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27659  003B44  0E03               	movlw	3
 27660  003B46  EC0D  F02F         	call	_RADIO_WriteMode
 27661                           
 27662                           ; BSR set to: 0
 27663                           
 27664                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 27665  003B4A  0E00               	movlw	0
 27666  003B4C  0100               	movlb	0	; () banked
 27667  003B4E  6FB8               	movwf	_RADIO_Transmit$1077& (0+255),b
 27668  003B50  0E00               	movlw	0
 27669  003B52  6FB9               	movwf	(_RADIO_Transmit$1077+1)& (0+255),b
 27670  003B54  0E0A               	movlw	10
 27671  003B56  6FBA               	movwf	(_RADIO_Transmit$1077+2)& (0+255),b
 27672  003B58  0E00               	movlw	0
 27673  003B5A  6FBB               	movwf	(_RADIO_Transmit$1077+3)& (0+255),b
 27674                           
 27675                           ; BSR set to: 0
 27676                           
 27677                           ; BSR set to: 0
 27678  003B5C  C0B8  F06D         	movff	_RADIO_Transmit$1077,SwTimerSetTimeout@timeout
 27679  003B60  C0B9  F06E         	movff	_RADIO_Transmit$1077+1,SwTimerSetTimeout@timeout+1
 27680  003B64  C0BA  F06F         	movff	_RADIO_Transmit$1077+2,SwTimerSetTimeout@timeout+2
 27681  003B68  C0BB  F070         	movff	_RADIO_Transmit$1077+3,SwTimerSetTimeout@timeout+3
 27682  003B6C  0101               	movlb	1	; () banked
 27683  003B6E  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27684  003B70  ECDB  F040         	call	_SwTimerSetTimeout
 27685                           
 27686                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 27687  003B74  0101               	movlb	1	; () banked
 27688  003B76  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27689  003B78  ECD1  F036         	call	_SwTimerStart
 27690                           
 27691                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27692  003B7C  0101               	movlb	1	; () banked
 27693  003B7E  51A4               	movf	(_RadioConfiguration+42)& (0+255),w,b
 27694  003B80  11A5               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27695  003B82  11A6               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27696  003B84  11A7               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27697  003B86  B4D8               	btfsc	status,2,c
 27698  003B88  D061               	goto	l558
 27699                           
 27700                           ; BSR set to: 1
 27701                           ;radio_driver_SX1276.c: 866: {
 27702                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27703  003B8A  51A7               	movf	(_RadioConfiguration+45)& (0+255),w,b
 27704  003B8C  E107               	bnz	u16530
 27705  003B8E  29A4               	incf	(_RadioConfiguration+42)& (0+255),w,b
 27706  003B90  0EFF               	movlw	255
 27707  003B92  59A5               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27708  003B94  0E0F               	movlw	15
 27709  003B96  59A6               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27710  003B98  A0D8               	btfss	status,0,c
 27711  003B9A  D01D               	goto	l560
 27712  003B9C                     u16530:
 27713                           
 27714                           ; BSR set to: 1
 27715  003B9C  C1A4  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 27716  003BA0  C1A5  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27717  003BA4  C1A6  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27718  003BA8  C1A7  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27719  003BAC  0E7D               	movlw	125
 27720  003BAE  0100               	movlb	0	; () banked
 27721  003BB0  6F64               	movwf	___lldiv@divisor& (0+255),b
 27722  003BB2  0E00               	movlw	0
 27723  003BB4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27724  003BB6  0E00               	movlw	0
 27725  003BB8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27726  003BBA  0E00               	movlw	0
 27727  003BBC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27728  003BBE  EC8F  F039         	call	___lldiv	;wreg free
 27729  003BC2  0E0C               	movlw	12
 27730  003BC4                     u16545:
 27731  003BC4  90D8               	bcf	status,0,c
 27732  003BC6  0100               	movlb	0	; () banked
 27733  003BC8  3760               	rlcf	?___lldiv& (0+255),f,b
 27734  003BCA  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 27735  003BCC  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 27736  003BCE  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 27737  003BD0  2EE8               	decfsz	wreg,f,c
 27738  003BD2  D7F8               	goto	u16545
 27739  003BD4  D023               	goto	L19
 27740  003BD6                     l560:
 27741                           
 27742                           ; BSR set to: 0
 27743  003BD6  C1A4  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 27744  003BDA  C1A5  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 27745  003BDE  C1A6  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 27746  003BE2  C1A7  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 27747  003BE6  0E0C               	movlw	12
 27748  003BE8                     u16555:
 27749  003BE8  90D8               	bcf	status,0,c
 27750  003BEA  0100               	movlb	0	; () banked
 27751  003BEC  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 27752  003BEE  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 27753  003BF0  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 27754  003BF2  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 27755  003BF4  2EE8               	decfsz	wreg,f,c
 27756  003BF6  D7F8               	goto	u16555
 27757  003BF8  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 27758  003BFC  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 27759  003C00  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 27760  003C04  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 27761  003C08  0E7D               	movlw	125
 27762  003C0A  6F64               	movwf	___lldiv@divisor& (0+255),b
 27763  003C0C  0E00               	movlw	0
 27764  003C0E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 27765  003C10  0E00               	movlw	0
 27766  003C12  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 27767  003C14  0E00               	movlw	0
 27768  003C16  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 27769  003C18  EC8F  F039         	call	___lldiv	;wreg free
 27770  003C1C                     L19:
 27771  003C1C  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$1079
 27772  003C20  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$1079+1
 27773  003C24  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$1079+2
 27774  003C28  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$1079+3
 27775  003C2C  C0BC  F06D         	movff	_RADIO_Transmit$1079,SwTimerSetTimeout@timeout
 27776  003C30  C0BD  F06E         	movff	_RADIO_Transmit$1079+1,SwTimerSetTimeout@timeout+1
 27777  003C34  C0BE  F06F         	movff	_RADIO_Transmit$1079+2,SwTimerSetTimeout@timeout+2
 27778  003C38  C0BF  F070         	movff	_RADIO_Transmit$1079+3,SwTimerSetTimeout@timeout+3
 27779  003C3C  0101               	movlb	1	; () banked
 27780  003C3E  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27781  003C40  ECDB  F040         	call	_SwTimerSetTimeout
 27782                           
 27783                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27784  003C44  0101               	movlb	1	; () banked
 27785  003C46  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27786  003C48  ECD1  F036         	call	_SwTimerStart
 27787  003C4C                     l558:
 27788                           
 27789                           ;radio_driver_SX1276.c: 869: }
 27790                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 27791  003C4C  0E00               	movlw	0
 27792  003C4E  0100               	movlb	0	; () banked
 27793  003C50  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 27794  003C52  0E00               	movlw	0
 27795  003C54  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 27796  003C56  0012               	return	
 27797  003C58                     __end_of_RADIO_Transmit:
 27798                           	opt stack 0
 27799                           tosu	equ	0xFFF
 27800                           tosh	equ	0xFFE
 27801                           tosl	equ	0xFFD
 27802                           pclath	equ	0xFFA
 27803                           tblptru	equ	0xFF8
 27804                           tblptrh	equ	0xFF7
 27805                           tblptrl	equ	0xFF6
 27806                           tablat	equ	0xFF5
 27807                           prodh	equ	0xFF4
 27808                           prodl	equ	0xFF3
 27809                           intcon	equ	0xFF2
 27810                           intcon2	equ	0xFF1
 27811                           intcon3	equ	0xFF0
 27812                           indf0	equ	0xFEF
 27813                           postinc0	equ	0xFEE
 27814                           fsr0h	equ	0xFEA
 27815                           fsr0l	equ	0xFE9
 27816                           wreg	equ	0xFE8
 27817                           postinc1	equ	0xFE6
 27818                           postdec1	equ	0xFE5
 27819                           plusw1	equ	0xFE3
 27820                           fsr1h	equ	0xFE2
 27821                           fsr1l	equ	0xFE1
 27822                           indf2	equ	0xFDF
 27823                           postinc2	equ	0xFDE
 27824                           postdec2	equ	0xFDD
 27825                           plusw2	equ	0xFDB
 27826                           fsr2h	equ	0xFDA
 27827                           fsr2l	equ	0xFD9
 27828                           status	equ	0xFD8
 27829                           
 27830 ;; *************** function _RADIO_WriteConfiguration *****************
 27831 ;; Defined at:
 27832 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27833 ;; Parameters:    Size  Location     Type
 27834 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 27835 ;; Auto vars:     Size  Location     Type
 27836 ;;  tempValue       4   76[BANK0 ] unsigned long 
 27837 ;;  regValue        1   80[BANK0 ] unsigned char 
 27838 ;;  i               1   75[BANK0 ] unsigned char 
 27839 ;; Return value:  Size  Location     Type
 27840 ;;                  1    wreg      void 
 27841 ;; Registers used:
 27842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27843 ;; Tracked objects:
 27844 ;;		On entry : 0/0
 27845 ;;		On exit  : 0/0
 27846 ;;		Unchanged: 0/0
 27847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27849 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27850 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27851 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27852 ;;Total ram usage:       11 bytes
 27853 ;; Hardware stack levels used:    1
 27854 ;; Hardware stack levels required when called:   11
 27855 ;; This function calls:
 27856 ;;		_RADIO_RegisterRead
 27857 ;;		_RADIO_RegisterWrite
 27858 ;;		_RADIO_WriteFSKBitRate
 27859 ;;		_RADIO_WriteFSKFrequencyDeviation
 27860 ;;		_RADIO_WriteFrequency
 27861 ;;		_RADIO_WriteMode
 27862 ;;		_RADIO_WritePower
 27863 ;;		___lmul
 27864 ;; This function is called by:
 27865 ;;		_RADIO_Transmit
 27866 ;;		_RADIO_ReceiveStart
 27867 ;;		_RADIO_TransmitCW
 27868 ;; This function uses a non-reentrant model
 27869 ;;
 27870                           
 27871                           	psect	text132
 27872  0014DE                     __ptext132:
 27873                           	opt stack 0
 27874  0014DE                     _RADIO_WriteConfiguration:
 27875                           	opt stack 17
 27876                           
 27877                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 27878                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 27879                           ;radio_driver_SX1276.c: 537: uint8_t i;
 27880                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27881                           
 27882                           ; BSR set to: 0
 27883                           ;incstack = 0
 27884  0014DE  C192  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27885  0014E2  0E00               	movlw	0
 27886  0014E4  0100               	movlb	0	; () banked
 27887  0014E6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27888  0014E8  0E00               	movlw	0
 27889  0014EA  EC0D  F02F         	call	_RADIO_WriteMode
 27890                           
 27891                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 27892  0014EE  C17A  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 27893  0014F2  C17B  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 27894  0014F6  C17C  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 27895  0014FA  C17D  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 27896  0014FE  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
 27897                           
 27898                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 27899  001502  0101               	movlb	1	; () banked
 27900  001504  5195               	movf	(_RadioConfiguration+27)& (0+255),w,b
 27901  001506  EC83  F030         	call	_RADIO_WritePower
 27902                           
 27903                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 27904  00150A  0101               	movlb	1	; () banked
 27905  00150C  0592               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27906  00150E  A4D8               	btfss	status,2,c
 27907  001510  D1ED               	goto	l500
 27908                           
 27909                           ; BSR set to: 1
 27910                           ;radio_driver_SX1276.c: 545: {
 27911                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 27912  001512  C188  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 27913  001516  0E39               	movlw	57
 27914  001518  EC33  F044         	call	_RADIO_RegisterWrite
 27915                           
 27916                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 27917                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 27918                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 27919                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 27920  00151C  C19C  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 27921  001520  0E01               	movlw	1
 27922  001522  0100               	movlb	0	; () banked
 27923  001524  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27924  001526  0101               	movlb	1	; () banked
 27925  001528  90D8               	bcf	status,0,c
 27926  00152A  359B               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 27927  00152C  0100               	movlb	0	; () banked
 27928  00152E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 27929  001530  0101               	movlb	1	; () banked
 27930  001532  3994               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 27931  001534  0BF0               	andlw	240
 27932  001536  0100               	movlb	0	; () banked
 27933  001538  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 27934  00153A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 27935  00153C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27936  00153E  0E1D               	movlw	29
 27937  001540  EC33  F044         	call	_RADIO_RegisterWrite
 27938                           
 27939                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 27940                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 27941                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 27942                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 27943  001544  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 27944  001548  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 27945  00154C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 27946  001550  0100               	movlb	0	; () banked
 27947  001552  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 27948  001554  0E03               	movlw	3
 27949  001556  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27950  001558  C196  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 27951  00155C  0E01               	movlw	1
 27952  00155E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 27953  001560  90D8               	bcf	status,0,c
 27954  001562  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 27955  001564  90D8               	bcf	status,0,c
 27956  001566  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 27957  001568  0101               	movlb	1	; () banked
 27958  00156A  3993               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 27959  00156C  0BF0               	andlw	240
 27960  00156E  0100               	movlb	0	; () banked
 27961  001570  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 27962  001572  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 27963  001574  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27964  001576  0E1E               	movlw	30
 27965  001578  EC33  F044         	call	_RADIO_RegisterWrite
 27966                           
 27967                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 27968  00157C  0101               	movlb	1	; () banked
 27969  00157E  5198               	movf	(_RadioConfiguration+30)& (0+255),w,b
 27970  001580  1199               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 27971  001582  B4D8               	btfsc	status,2,c
 27972  001584  D06F               	goto	l501
 27973                           
 27974                           ; BSR set to: 1
 27975                           ;radio_driver_SX1276.c: 561: {
 27976                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 27977  001586  C198  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 27978  00158A  C199  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 27979  00158E  0100               	movlb	0	; () banked
 27980  001590  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 27981  001592  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 27982                           
 27983                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 27984  001594  D04E               	goto	l502
 27985  001596                     
 27986                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 27987                           
 27988                           ; BSR set to: 0
 27989  001596  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 27990  00159A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 27991  00159E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 27992  0015A2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 27993  0015A6  0E7D               	movlw	125
 27994  0015A8  0100               	movlb	0	; () banked
 27995  0015AA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 27996  0015AC  0E00               	movlw	0
 27997  0015AE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27998  0015B0  0E00               	movlw	0
 27999  0015B2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28000  0015B4  0E00               	movlw	0
 28001  0015B6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28002  0015B8  EC4D  F03E         	call	___lmul	;wreg free
 28003  0015BC  D027               	goto	L21
 28004  0015BE                     
 28005                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 28006  0015BE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28007  0015C2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28008  0015C6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28009  0015CA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28010  0015CE  0EFA               	movlw	250
 28011  0015D0  0100               	movlb	0	; () banked
 28012  0015D2  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28013  0015D4  0E00               	movlw	0
 28014  0015D6  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28015  0015D8  0E00               	movlw	0
 28016  0015DA  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28017  0015DC  0E00               	movlw	0
 28018  0015DE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28019  0015E0  EC4D  F03E         	call	___lmul	;wreg free
 28020  0015E4  D013               	goto	L21
 28021  0015E6                     
 28022                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 28023  0015E6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 28024  0015EA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 28025  0015EE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 28026  0015F2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 28027  0015F6  0EF4               	movlw	244
 28028  0015F8  0100               	movlb	0	; () banked
 28029  0015FA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 28030  0015FC  0E01               	movlw	1
 28031  0015FE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28032  001600  0E00               	movlw	0
 28033  001602  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28034  001604  0E00               	movlw	0
 28035  001606  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28036  001608  EC4D  F03E         	call	___lmul	;wreg free
 28037  00160C                     L21:
 28038  00160C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 28039  001610  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 28040  001614  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 28041  001618  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 28042                           
 28043                           ;radio_driver_SX1276.c: 574: break;
 28044  00161C  D016               	goto	l504
 28045  00161E                     
 28046                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 28047  00161E  0E00               	movlw	0
 28048  001620  0100               	movlb	0	; () banked
 28049  001622  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28050  001624  0E00               	movlw	0
 28051  001626  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28052  001628  0E00               	movlw	0
 28053  00162A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28054  00162C  0E00               	movlw	0
 28055  00162E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;radio_driver_SX1276.c: 579: }
 28059                           
 28060                           ;radio_driver_SX1276.c: 578: break;
 28061  001630  D00C               	goto	l504
 28062  001632                     l502:
 28063                           
 28064                           ; BSR set to: 0
 28065                           
 28066                           ; BSR set to: 0
 28067  001632  0101               	movlb	1	; () banked
 28068  001634  5194               	movf	(_RadioConfiguration+26)& (0+255),w,b
 28069                           
 28070                           ; Switch size 1, requested type "space"
 28071                           ; Number of cases is 3, Range of values is 7 to 9
 28072                           ; switch strategies available:
 28073                           ; Name         Instructions Cycles
 28074                           ; simple_byte           10     6 (average)
 28075                           ;	Chosen strategy is simple_byte
 28076  001636  0A07               	xorlw	7	; case 7
 28077  001638  B4D8               	btfsc	status,2,c
 28078  00163A  D7AD               	goto	l503
 28079  00163C  0A0F               	xorlw	15	; case 8
 28080  00163E  B4D8               	btfsc	status,2,c
 28081  001640  D7BE               	goto	l505
 28082  001642  0A01               	xorlw	1	; case 9
 28083  001644  B4D8               	btfsc	status,2,c
 28084  001646  D7CF               	goto	l506
 28085  001648  D7EA               	goto	l507
 28086  00164A                     l504:
 28087                           
 28088                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 28089                           
 28090                           ; BSR set to: 1
 28091  00164A  0101               	movlb	1	; () banked
 28092  00164C  2993               	incf	(_RadioConfiguration+25)& (0+255),w,b
 28093  00164E  0100               	movlb	0	; () banked
 28094  001650  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 28095  001652  D005               	goto	u15010
 28096  001654                     u15015:
 28097  001654  90D8               	bcf	status,0,c
 28098  001656  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 28099  001658  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 28100  00165A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 28101  00165C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 28102  00165E                     u15010:
 28103  00165E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 28104  001660  D7F9               	goto	u15015
 28105                           
 28106                           ;radio_driver_SX1276.c: 582: }
 28107  001662  D009               	goto	l508
 28108  001664                     l501:
 28109                           
 28110                           ;radio_driver_SX1276.c: 583: else
 28111                           ;radio_driver_SX1276.c: 584: {
 28112                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 28113  001664  0E00               	movlw	0
 28114  001666  0100               	movlb	0	; () banked
 28115  001668  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 28116  00166A  0E00               	movlw	0
 28117  00166C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 28118  00166E  0E00               	movlw	0
 28119  001670  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 28120  001672  0E00               	movlw	0
 28121  001674  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 28122  001676                     l508:
 28123                           
 28124                           ;radio_driver_SX1276.c: 586: }
 28125                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 28126                           
 28127                           ; BSR set to: 0
 28128  001676  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 28129  00167A  0E24               	movlw	36
 28130  00167C  EC33  F044         	call	_RADIO_RegisterWrite
 28131                           
 28132                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 28133  001680  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 28134  001684  0E1F               	movlw	31
 28135  001686  EC33  F044         	call	_RADIO_RegisterWrite
 28136                           
 28137                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 28138  00168A  0E26               	movlw	38
 28139  00168C  EC82  F043         	call	_RADIO_RegisterRead
 28140  001690  0100               	movlb	0	; () banked
 28141  001692  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28142                           
 28143                           ; BSR set to: 0
 28144                           ;radio_driver_SX1276.c: 596: if (
 28145                           ;radio_driver_SX1276.c: 597: (
 28146                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 28147                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 28148                           ;radio_driver_SX1276.c: 600: ) ||
 28149                           ;radio_driver_SX1276.c: 601: (
 28150                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 28151                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 28152                           ;radio_driver_SX1276.c: 604: )
 28153                           ;radio_driver_SX1276.c: 605: )
 28154  001694  0E0C               	movlw	12
 28155  001696  0101               	movlb	1	; () banked
 28156  001698  1993               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28157  00169A  A4D8               	btfss	status,2,c
 28158  00169C  D008               	goto	u15040
 28159                           
 28160                           ; BSR set to: 1
 28161  00169E  0E07               	movlw	7
 28162  0016A0  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28163  0016A2  B4D8               	btfsc	status,2,c
 28164  0016A4  D00C               	goto	u15060
 28165                           
 28166                           ; BSR set to: 1
 28167  0016A6  0E08               	movlw	8
 28168  0016A8  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28169  0016AA  B4D8               	btfsc	status,2,c
 28170  0016AC  D008               	goto	u15060
 28171  0016AE                     u15040:
 28172                           
 28173                           ; BSR set to: 1
 28174                           
 28175                           ; BSR set to: 1
 28176  0016AE  0E0B               	movlw	11
 28177  0016B0  1993               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 28178  0016B2  A4D8               	btfss	status,2,c
 28179  0016B4  D007               	goto	l509
 28180                           
 28181                           ; BSR set to: 1
 28182  0016B6  0E07               	movlw	7
 28183  0016B8  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28184  0016BA  A4D8               	btfss	status,2,c
 28185  0016BC  D003               	goto	l509
 28186  0016BE                     u15060:
 28187                           
 28188                           ; BSR set to: 1
 28189                           ;radio_driver_SX1276.c: 606: {
 28190                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 28191                           
 28192                           ; BSR set to: 1
 28193  0016BE  0100               	movlb	0	; () banked
 28194  0016C0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28195                           
 28196                           ;radio_driver_SX1276.c: 608: }
 28197  0016C2  D002               	goto	l514
 28198  0016C4                     l509:
 28199                           
 28200                           ;radio_driver_SX1276.c: 609: else
 28201                           ;radio_driver_SX1276.c: 610: {
 28202                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 28203                           
 28204                           ; BSR set to: 0
 28205  0016C4  0100               	movlb	0	; () banked
 28206  0016C6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 28207  0016C8                     l514:
 28208                           
 28209                           ; BSR set to: 0
 28210                           ;radio_driver_SX1276.c: 612: }
 28211                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 28212  0016C8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 28216  0016CA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28217  0016CE  0E26               	movlw	38
 28218  0016D0  EC33  F044         	call	_RADIO_RegisterWrite
 28219                           
 28220                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 28221  0016D4  0E31               	movlw	49
 28222  0016D6  EC82  F043         	call	_RADIO_RegisterRead
 28223  0016DA  0100               	movlb	0	; () banked
 28224  0016DC  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 28228  0016DE  0EF8               	movlw	248
 28229  0016E0  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28230                           
 28231                           ; BSR set to: 0
 28232                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 28233  0016E2  0E03               	movlw	3
 28234  0016E4  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28235                           
 28236                           ; BSR set to: 0
 28237                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 28238  0016E6  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28239  0016EA  0E31               	movlw	49
 28240  0016EC  EC33  F044         	call	_RADIO_RegisterWrite
 28241                           
 28242                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 28243  0016F0  0E0A               	movlw	10
 28244  0016F2  0100               	movlb	0	; () banked
 28245  0016F4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28246  0016F6  0E37               	movlw	55
 28247  0016F8  EC33  F044         	call	_RADIO_RegisterWrite
 28248                           
 28249                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 28250  0016FC  0E12               	movlw	18
 28251  0016FE  0101               	movlb	1	; () banked
 28252  001700  19AB               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28253  001702  A4D8               	btfss	status,2,c
 28254  001704  D02F               	goto	l519
 28255                           
 28256                           ; BSR set to: 1
 28257                           ;radio_driver_SX1276.c: 626: {
 28258                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 28259                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 28260  001706  0E07               	movlw	7
 28261  001708  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28262  00170A  B4D8               	btfsc	status,2,c
 28263  00170C  D004               	goto	u15090
 28264                           
 28265                           ; BSR set to: 1
 28266  00170E  0E08               	movlw	8
 28267  001710  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28268  001712  A4D8               	btfss	status,2,c
 28269  001714  D017               	goto	l516
 28270  001716                     u15090:
 28271                           
 28272                           ; BSR set to: 1
 28273                           ;radio_driver_SX1276.c: 631: {
 28274                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 28275                           
 28276                           ; BSR set to: 1
 28277  001716  0E31               	movlw	49
 28278  001718  EC82  F043         	call	_RADIO_RegisterRead
 28279  00171C  0100               	movlb	0	; () banked
 28280  00171E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28281                           
 28282                           ; BSR set to: 0
 28283                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 28284  001720  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 28288  001722  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28289  001726  0E31               	movlw	49
 28290  001728  EC33  F044         	call	_RADIO_RegisterWrite
 28291                           
 28292                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 28293  00172C  0E40               	movlw	64
 28294  00172E  0100               	movlb	0	; () banked
 28295  001730  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28296  001732  0E2F               	movlw	47
 28297  001734  EC33  F044         	call	_RADIO_RegisterWrite
 28298                           
 28299                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 28300  001738  0E00               	movlw	0
 28301  00173A  0100               	movlb	0	; () banked
 28302  00173C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28303  00173E  0E30               	movlw	48
 28304  001740  EC33  F044         	call	_RADIO_RegisterWrite
 28305  001744                     l516:
 28306                           
 28307                           ;radio_driver_SX1276.c: 637: }
 28308                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 28309  001744  0E09               	movlw	9
 28310  001746  0101               	movlb	1	; () banked
 28311  001748  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28312  00174A  A4D8               	btfss	status,2,c
 28313  00174C  D00B               	goto	l519
 28314                           
 28315                           ; BSR set to: 1
 28316                           ;radio_driver_SX1276.c: 640: {
 28317                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 28318  00174E  0E31               	movlw	49
 28319  001750  EC82  F043         	call	_RADIO_RegisterRead
 28320  001754  0100               	movlb	0	; () banked
 28321  001756  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 28325  001758  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 28329  00175A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28330  00175E  0E31               	movlw	49
 28331  001760  EC33  F044         	call	_RADIO_RegisterWrite
 28332  001764                     l519:
 28333                           
 28334                           ;radio_driver_SX1276.c: 644: }
 28335                           ;radio_driver_SX1276.c: 645: }
 28336                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 28337  001764  0E33               	movlw	51
 28338  001766  EC82  F043         	call	_RADIO_RegisterRead
 28339  00176A  0100               	movlb	0	; () banked
 28340  00176C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28341                           
 28342                           ; BSR set to: 0
 28343                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 28344  00176E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 28348  001770  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 28352  001772  C19A  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28353  001776  0E01               	movlw	1
 28354  001778  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28355  00177A  0E06               	movlw	6
 28356  00177C  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 28357  00177E                     u15115:
 28358  00177E  90D8               	bcf	status,0,c
 28359  001780  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28360  001782  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 28361  001784  D7FC               	goto	u15115
 28362  001786  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 28363  001788  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28364                           
 28365                           ; BSR set to: 0
 28366                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 28367  00178A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28368  00178E  0E33               	movlw	51
 28369  001790  EC33  F044         	call	_RADIO_RegisterWrite
 28370                           
 28371                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 28372  001794  C19A  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 28373  001798  0E01               	movlw	1
 28374  00179A  0100               	movlb	0	; () banked
 28375  00179C  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 28376  00179E  90D8               	bcf	status,0,c
 28377  0017A0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 28378  0017A2  90D8               	bcf	status,0,c
 28379  0017A4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 28380  0017A6  0AFF               	xorlw	255
 28381  0017A8  0B1D               	andlw	29
 28382  0017AA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28383                           
 28384                           ; BSR set to: 0
 28385                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 28386  0017AC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28387  0017B0  0E3B               	movlw	59
 28388  0017B2  EC33  F044         	call	_RADIO_RegisterWrite
 28389                           
 28390                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 28391  0017B6  0101               	movlb	1	; () banked
 28392  0017B8  5187               	movf	(_RadioConfiguration+13)& (0+255),w,b
 28393  0017BA  0100               	movlb	0	; () banked
 28394  0017BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28395  0017BE  0E20               	movlw	32
 28396  0017C0  EC33  F044         	call	_RADIO_RegisterWrite
 28397                           
 28398                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28399  0017C4  C186  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28400  0017C8  0E21               	movlw	33
 28401  0017CA  EC33  F044         	call	_RADIO_RegisterWrite
 28402                           
 28403                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 28404  0017CE  0E00               	movlw	0
 28405  0017D0  0100               	movlb	0	; () banked
 28406  0017D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28407  0017D4  0E0D               	movlw	13
 28408  0017D6  EC33  F044         	call	_RADIO_RegisterWrite
 28409                           
 28410                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 28411  0017DA  0E00               	movlw	0
 28412  0017DC  0100               	movlb	0	; () banked
 28413  0017DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28414  0017E0  0E0E               	movlw	14
 28415  0017E2  EC33  F044         	call	_RADIO_RegisterWrite
 28416                           
 28417                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 28418  0017E6  0E00               	movlw	0
 28419  0017E8  0100               	movlb	0	; () banked
 28420  0017EA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28421  0017EC  0E0F               	movlw	15
 28422  0017EE  EC33  F044         	call	_RADIO_RegisterWrite
 28423                           
 28424                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 28425  0017F2  0E12               	movlw	18
 28426  0017F4  0101               	movlb	1	; () banked
 28427  0017F6  19AB               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 28428  0017F8  A4D8               	btfss	status,2,c
 28429  0017FA  D071               	goto	l526
 28430                           
 28431                           ; BSR set to: 1
 28432                           ;radio_driver_SX1276.c: 665: {
 28433                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28434                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 28435                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 28436                           ;radio_driver_SX1276.c: 669: )
 28437  0017FC  0E09               	movlw	9
 28438  0017FE  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28439  001800  A4D8               	btfss	status,2,c
 28440  001802  D020               	goto	l521
 28441                           
 28442                           ; BSR set to: 1
 28443  001804  0E80               	movlw	128
 28444  001806  5D7A               	subwf	_RadioConfiguration& (0+255),w,b
 28445  001808  0E13               	movlw	19
 28446  00180A  597B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28447  00180C  0E61               	movlw	97
 28448  00180E  597C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28449  001810  0E33               	movlw	51
 28450  001812  597D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28451  001814  A0D8               	btfss	status,0,c
 28452  001816  D016               	goto	l521
 28453                           
 28454                           ; BSR set to: 1
 28455  001818  057A               	decf	_RadioConfiguration& (0+255),w,b
 28456  00181A  0EF7               	movlw	247
 28457  00181C  597B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28458  00181E  0ECB               	movlw	203
 28459  001820  597C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28460  001822  0E3C               	movlw	60
 28461  001824  597D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28462  001826  B0D8               	btfsc	status,0,c
 28463  001828  D00D               	goto	l521
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;radio_driver_SX1276.c: 670: {
 28467                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 28468  00182A  0E02               	movlw	2
 28469  00182C  0100               	movlb	0	; () banked
 28470  00182E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28471  001830  0E36               	movlw	54
 28472  001832  EC33  F044         	call	_RADIO_RegisterWrite
 28473                           
 28474                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 28475  001836  0E64               	movlw	100
 28476  001838  0100               	movlb	0	; () banked
 28477  00183A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28478  00183C  0E3A               	movlw	58
 28479  00183E  EC33  F044         	call	_RADIO_RegisterWrite
 28480                           
 28481                           ;radio_driver_SX1276.c: 673: }
 28482  001842  D02C               	goto	l524
 28483  001844                     l521:
 28484                           
 28485                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 28486                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 28487                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 28488                           ;radio_driver_SX1276.c: 677: )
 28489  001844  0E09               	movlw	9
 28490  001846  0101               	movlb	1	; () banked
 28491  001848  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28492  00184A  A4D8               	btfss	status,2,c
 28493  00184C  D021               	goto	l523
 28494                           
 28495                           ; BSR set to: 1
 28496  00184E  0E80               	movlw	128
 28497  001850  5D7A               	subwf	_RadioConfiguration& (0+255),w,b
 28498  001852  0E1A               	movlw	26
 28499  001854  597B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28500  001856  0E70               	movlw	112
 28501  001858  597C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28502  00185A  0E18               	movlw	24
 28503  00185C  597D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28504  00185E  A0D8               	btfss	status,0,c
 28505  001860  D017               	goto	l523
 28506                           
 28507                           ; BSR set to: 1
 28508  001862  0E41               	movlw	65
 28509  001864  5D7A               	subwf	_RadioConfiguration& (0+255),w,b
 28510  001866  0EDD               	movlw	221
 28511  001868  597B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 28512  00186A  0E4A               	movlw	74
 28513  00186C  597C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 28514  00186E  0E1F               	movlw	31
 28515  001870  597D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 28516  001872  B0D8               	btfsc	status,0,c
 28517  001874  D00D               	goto	l523
 28518                           
 28519                           ; BSR set to: 1
 28520                           ;radio_driver_SX1276.c: 678: {
 28521                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 28522  001876  0E02               	movlw	2
 28523  001878  0100               	movlb	0	; () banked
 28524  00187A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28525  00187C  0E36               	movlw	54
 28526  00187E  EC33  F044         	call	_RADIO_RegisterWrite
 28527                           
 28528                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 28529  001882  0E7F               	movlw	127
 28530  001884  0100               	movlb	0	; () banked
 28531  001886  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28532  001888  0E3A               	movlw	58
 28533  00188A  EC33  F044         	call	_RADIO_RegisterWrite
 28534                           
 28535                           ;radio_driver_SX1276.c: 681: }
 28536  00188E  D006               	goto	l524
 28537  001890                     l523:
 28538                           
 28539                           ;radio_driver_SX1276.c: 682: else
 28540                           ;radio_driver_SX1276.c: 683: {
 28541                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 28542  001890  0E03               	movlw	3
 28543  001892  0100               	movlb	0	; () banked
 28544  001894  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28545  001896  0E36               	movlw	54
 28546  001898  EC33  F044         	call	_RADIO_RegisterWrite
 28547  00189C                     l524:
 28548                           
 28549                           ;radio_driver_SX1276.c: 685: }
 28550                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 28551  00189C  0E09               	movlw	9
 28552  00189E  0101               	movlb	1	; () banked
 28553  0018A0  1994               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 28554  0018A2  A4D8               	btfss	status,2,c
 28555  0018A4  D010               	goto	l525
 28556                           
 28557                           ; BSR set to: 1
 28558  0018A6  059A               	decf	(_RadioConfiguration+32)& (0+255),w,b
 28559  0018A8  A4D8               	btfss	status,2,c
 28560  0018AA  D00D               	goto	l525
 28561                           
 28562                           ; BSR set to: 1
 28563                           ;radio_driver_SX1276.c: 689: {
 28564                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 28565  0018AC  0E65               	movlw	101
 28566  0018AE  0100               	movlb	0	; () banked
 28567  0018B0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28568  0018B2  0E3A               	movlw	58
 28569  0018B4  EC33  F044         	call	_RADIO_RegisterWrite
 28570                           
 28571                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 28572  0018B8  0E19               	movlw	25
 28573  0018BA  0100               	movlb	0	; () banked
 28574  0018BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28575  0018BE  0E3B               	movlw	59
 28576  0018C0  EC33  F044         	call	_RADIO_RegisterWrite
 28577                           
 28578                           ;radio_driver_SX1276.c: 692: }
 28579  0018C4  D00C               	goto	l526
 28580  0018C6                     l525:
 28581                           
 28582                           ;radio_driver_SX1276.c: 693: else
 28583                           ;radio_driver_SX1276.c: 694: {
 28584                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 28585  0018C6  0E65               	movlw	101
 28586  0018C8  0100               	movlb	0	; () banked
 28587  0018CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28588  0018CC  0E3A               	movlw	58
 28589  0018CE  EC33  F044         	call	_RADIO_RegisterWrite
 28590                           
 28591                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 28592  0018D2  0E1D               	movlw	29
 28593  0018D4  0100               	movlb	0	; () banked
 28594  0018D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28595  0018D8  0E3B               	movlw	59
 28596  0018DA  EC33  F044         	call	_RADIO_RegisterWrite
 28597  0018DE                     l526:
 28598                           
 28599                           ;radio_driver_SX1276.c: 697: }
 28600                           ;radio_driver_SX1276.c: 698: }
 28601                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 28602  0018DE  0EFF               	movlw	255
 28603  0018E0  0100               	movlb	0	; () banked
 28604  0018E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28605  0018E4  0E12               	movlw	18
 28606  0018E6  EC33  F044         	call	_RADIO_RegisterWrite
 28607                           
 28608                           ;radio_driver_SX1276.c: 702: }
 28609  0018EA  0012               	return	
 28610  0018EC                     l500:
 28611                           
 28612                           ;radio_driver_SX1276.c: 703: else
 28613                           ;radio_driver_SX1276.c: 704: {
 28614                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 28615  0018EC  C17E  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 28616  0018F0  C17F  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 28617  0018F4  C180  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 28618  0018F8  C181  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 28619  0018FC  EC71  F03B         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 28620                           
 28621                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 28622  001900  C182  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 28623  001904  C183  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 28624  001908  C184  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 28625  00190C  C185  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 28626  001910  ECA6  F03B         	call	_RADIO_WriteFSKBitRate	;wreg free
 28627                           
 28628                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 28629  001914  0101               	movlb	1	; () banked
 28630  001916  5187               	movf	(_RadioConfiguration+13)& (0+255),w,b
 28631  001918  0100               	movlb	0	; () banked
 28632  00191A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28633  00191C  0E25               	movlw	37
 28634  00191E  EC33  F044         	call	_RADIO_RegisterWrite
 28635                           
 28636                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 28637  001922  C186  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 28638  001926  0E26               	movlw	38
 28639  001928  EC33  F044         	call	_RADIO_RegisterWrite
 28640                           
 28641                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 28642  00192C  0E0A               	movlw	10
 28643  00192E  EC82  F043         	call	_RADIO_RegisterRead
 28644  001932  0100               	movlb	0	; () banked
 28645  001934  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28646                           
 28647                           ; BSR set to: 0
 28648                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 28649  001936  0E9F               	movlw	159
 28650  001938  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 28654  00193A  0101               	movlb	1	; () banked
 28655  00193C  39AD               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 28656  00193E  46E8               	rlncf	wreg,f,c
 28657  001940  0BE0               	andlw	224
 28658  001942  0100               	movlb	0	; () banked
 28659  001944  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28660                           
 28661                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 28662  001946  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28663  00194A  0E0A               	movlw	10
 28664  00194C  EC33  F044         	call	_RADIO_RegisterWrite
 28665                           
 28666                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 28667  001950  0EC8               	movlw	200
 28668  001952  0100               	movlb	0	; () banked
 28669  001954  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28670                           
 28671                           ; BSR set to: 0
 28672                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 28673  001956  0101               	movlb	1	; () banked
 28674  001958  5196               	movf	(_RadioConfiguration+28)& (0+255),w,b
 28675  00195A  B4D8               	btfsc	status,2,c
 28676  00195C  D002               	goto	l528
 28677                           
 28678                           ; BSR set to: 1
 28679                           ;radio_driver_SX1276.c: 722: {
 28680                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 28681  00195E  0100               	movlb	0	; () banked
 28682  001960  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 28683  001962                     l528:
 28684                           
 28685                           ;radio_driver_SX1276.c: 724: }
 28686                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 28687                           
 28688                           ; BSR set to: 0
 28689  001962  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28690  001966  0E30               	movlw	48
 28691  001968  EC33  F044         	call	_RADIO_RegisterWrite
 28692                           
 28693                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 28694  00196C  0E00               	movlw	0
 28695  00196E  0100               	movlb	0	; () banked
 28696  001970  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 28697  001972  D010               	goto	l529
 28698  001974                     
 28699                           ; BSR set to: 0
 28700                           ;radio_driver_SX1276.c: 729: {
 28701                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 28702                           
 28703                           ; BSR set to: 0
 28704  001974  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 28705  001976  0D01               	mullw	1
 28706  001978  0E89               	movlw	low (_RadioConfiguration+15)
 28707  00197A  24F3               	addwf	prodl,w,c
 28708  00197C  6ED9               	movwf	fsr2l,c
 28709  00197E  0E01               	movlw	high (_RadioConfiguration+15)
 28710  001980  20F4               	addwfc	prodh,w,c
 28711  001982  6EDA               	movwf	fsr2h,c
 28712  001984  50DF               	movf	indf2,w,c
 28713  001986  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28714  001988  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 28715  00198A  0F28               	addlw	40
 28716  00198C  EC33  F044         	call	_RADIO_RegisterWrite
 28717  001990  0100               	movlb	0	; () banked
 28718  001992  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 28719  001994                     l529:
 28720                           
 28721                           ; BSR set to: 0
 28722                           
 28723                           ; BSR set to: 0
 28724  001994  0101               	movlb	1	; () banked
 28725  001996  5191               	movf	(_RadioConfiguration+23)& (0+255),w,b
 28726  001998  0100               	movlb	0	; () banked
 28727  00199A  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 28728  00199C  A0D8               	btfss	status,0,c
 28729  00199E  D7EA               	goto	l530
 28730                           
 28731                           ; BSR set to: 0
 28732                           ;radio_driver_SX1276.c: 733: }
 28733                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 28734                           
 28735                           ; BSR set to: 0
 28736  0019A0  0101               	movlb	1	; () banked
 28737  0019A2  5191               	movf	(_RadioConfiguration+23)& (0+255),w,b
 28738  0019A4  B4D8               	btfsc	status,2,c
 28739  0019A6  D008               	goto	l532
 28740                           
 28741                           ; BSR set to: 1
 28742                           ;radio_driver_SX1276.c: 737: {
 28743                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 28744  0019A8  0591               	decf	(_RadioConfiguration+23)& (0+255),w,b
 28745  0019AA  0910               	iorlw	16
 28746  0019AC  0100               	movlb	0	; () banked
 28747  0019AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28748  0019B0  0E27               	movlw	39
 28749  0019B2  EC33  F044         	call	_RADIO_RegisterWrite
 28750                           
 28751                           ;radio_driver_SX1276.c: 739: }
 28752  0019B6  D006               	goto	l533
 28753  0019B8                     l532:
 28754                           
 28755                           ;radio_driver_SX1276.c: 740: else
 28756                           ;radio_driver_SX1276.c: 741: {
 28757                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 28758  0019B8  0E00               	movlw	0
 28759  0019BA  0100               	movlb	0	; () banked
 28760  0019BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28761  0019BE  0E27               	movlw	39
 28762  0019C0  EC33  F044         	call	_RADIO_RegisterWrite
 28763  0019C4                     l533:
 28764                           
 28765                           ;radio_driver_SX1276.c: 743: }
 28766                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 28767  0019C4  0EFF               	movlw	255
 28768  0019C6  0100               	movlb	0	; () banked
 28769  0019C8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28770  0019CA  0E3E               	movlw	62
 28771  0019CC  EC33  F044         	call	_RADIO_RegisterWrite
 28772                           
 28773                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 28774  0019D0  0EFF               	movlw	255
 28775  0019D2  0100               	movlb	0	; () banked
 28776  0019D4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28777  0019D6  0E3F               	movlw	63
 28778  0019D8  EC33  F044         	call	_RADIO_RegisterWrite
 28779  0019DC  0012               	return	
 28780  0019DE                     __end_of_RADIO_WriteConfiguration:
 28781                           	opt stack 0
 28782                           tosu	equ	0xFFF
 28783                           tosh	equ	0xFFE
 28784                           tosl	equ	0xFFD
 28785                           pclath	equ	0xFFA
 28786                           tblptru	equ	0xFF8
 28787                           tblptrh	equ	0xFF7
 28788                           tblptrl	equ	0xFF6
 28789                           tablat	equ	0xFF5
 28790                           prodh	equ	0xFF4
 28791                           prodl	equ	0xFF3
 28792                           intcon	equ	0xFF2
 28793                           intcon2	equ	0xFF1
 28794                           intcon3	equ	0xFF0
 28795                           indf0	equ	0xFEF
 28796                           postinc0	equ	0xFEE
 28797                           fsr0h	equ	0xFEA
 28798                           fsr0l	equ	0xFE9
 28799                           wreg	equ	0xFE8
 28800                           postinc1	equ	0xFE6
 28801                           postdec1	equ	0xFE5
 28802                           plusw1	equ	0xFE3
 28803                           fsr1h	equ	0xFE2
 28804                           fsr1l	equ	0xFE1
 28805                           indf2	equ	0xFDF
 28806                           postinc2	equ	0xFDE
 28807                           postdec2	equ	0xFDD
 28808                           plusw2	equ	0xFDB
 28809                           fsr2h	equ	0xFDA
 28810                           fsr2l	equ	0xFD9
 28811                           status	equ	0xFD8
 28812                           
 28813 ;; *************** function _RADIO_WritePower *****************
 28814 ;; Defined at:
 28815 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28816 ;; Parameters:    Size  Location     Type
 28817 ;;  power           1    wreg     char 
 28818 ;; Auto vars:     Size  Location     Type
 28819 ;;  power           1    6[BANK0 ] char 
 28820 ;;  paDac           1    5[BANK0 ] unsigned char 
 28821 ;;  ocp             1    4[BANK0 ] unsigned char 
 28822 ;; Return value:  Size  Location     Type
 28823 ;;                  1    wreg      void 
 28824 ;; Registers used:
 28825 ;;		wreg, status,2, status,0, cstack
 28826 ;; Tracked objects:
 28827 ;;		On entry : 0/0
 28828 ;;		On exit  : 0/0
 28829 ;;		Unchanged: 0/0
 28830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28832 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28835 ;;Total ram usage:        3 bytes
 28836 ;; Hardware stack levels used:    1
 28837 ;; Hardware stack levels required when called:   10
 28838 ;; This function calls:
 28839 ;;		_RADIO_RegisterRead
 28840 ;;		_RADIO_RegisterWrite
 28841 ;; This function is called by:
 28842 ;;		_RADIO_WriteConfiguration
 28843 ;; This function uses a non-reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text133
 28847  006106                     __ptext133:
 28848                           	opt stack 0
 28849  006106                     _RADIO_WritePower:
 28850                           	opt stack 17
 28851                           
 28852                           ;incstack = 0
 28853                           ;RADIO_WritePower@power stored from wreg
 28854  006106  0100               	movlb	0	; () banked
 28855  006108  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 28856                           
 28857                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 28858                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 28859                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 28860  00610A  0101               	movlb	1	; () banked
 28861  00610C  5197               	movf	(_RadioConfiguration+29)& (0+255),w,b
 28862  00610E  A4D8               	btfss	status,2,c
 28863  006110  D030               	goto	l471
 28864                           
 28865                           ; BSR set to: 1
 28866                           ;radio_driver_SX1276.c: 348: {
 28867                           ;radio_driver_SX1276.c: 350: if (power < -3)
 28868  006112  0100               	movlb	0	; () banked
 28869  006114  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28870  006116  0A80               	xorlw	128
 28871  006118  0F83               	addlw	131
 28872  00611A  B0D8               	btfsc	status,0,c
 28873  00611C  D002               	goto	l472
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;radio_driver_SX1276.c: 351: {
 28877                           ;radio_driver_SX1276.c: 352: power = -3;
 28878  00611E  0EFD               	movlw	253
 28879  006120  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 28880  006122                     l472:
 28881                           
 28882                           ; BSR set to: 0
 28883                           ;radio_driver_SX1276.c: 353: }
 28884                           ;radio_driver_SX1276.c: 354: if (power > 15)
 28885                           
 28886                           ; BSR set to: 0
 28887  006122  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28888  006124  0A80               	xorlw	128
 28889  006126  0F70               	addlw	-144
 28890  006128  A0D8               	btfss	status,0,c
 28891  00612A  D002               	goto	l473
 28892                           
 28893                           ; BSR set to: 0
 28894                           ;radio_driver_SX1276.c: 355: {
 28895                           ;radio_driver_SX1276.c: 356: power = 15;
 28896  00612C  0E0F               	movlw	15
 28897  00612E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 28898  006130                     l473:
 28899                           
 28900                           ; BSR set to: 0
 28901                           ;radio_driver_SX1276.c: 357: }
 28902                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 28903                           
 28904                           ; BSR set to: 0
 28905  006130  0E4D               	movlw	77
 28906  006132  EC82  F043         	call	_RADIO_RegisterRead
 28907  006136  0100               	movlb	0	; () banked
 28908  006138  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 28912  00613A  0EF8               	movlw	248
 28913  00613C  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 28917  00613E  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 28918                           
 28919                           ; BSR set to: 0
 28920                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 28921  006140  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 28922  006144  0E4D               	movlw	77
 28923  006146  EC33  F044         	call	_RADIO_RegisterWrite
 28924                           
 28925                           ;radio_driver_SX1276.c: 364: if (power < 0)
 28926  00614A  0100               	movlb	0	; () banked
 28927  00614C  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 28928  00614E  D009               	goto	l474
 28929                           
 28930                           ; BSR set to: 0
 28931                           ;radio_driver_SX1276.c: 365: {
 28932                           ;radio_driver_SX1276.c: 369: power += 3;
 28933  006150  0E03               	movlw	3
 28934  006152  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 28935                           
 28936                           ; BSR set to: 0
 28937                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 28938  006154  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28939  006156  0920               	iorlw	32
 28940  006158  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28941  00615A  0E09               	movlw	9
 28942  00615C  EC33  F044         	call	_RADIO_RegisterWrite
 28943                           
 28944                           ;radio_driver_SX1276.c: 371: }
 28945  006160  0012               	return	
 28946  006162                     l474:
 28947                           
 28948                           ;radio_driver_SX1276.c: 372: else
 28949                           ;radio_driver_SX1276.c: 373: {
 28950                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 28951  006162  0100               	movlb	0	; () banked
 28952  006164  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28953  006166  0970               	iorlw	112
 28954  006168  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28955  00616A  0E09               	movlw	9
 28956  00616C  EC33  F044         	call	_RADIO_RegisterWrite
 28957                           
 28958                           ;radio_driver_SX1276.c: 378: }
 28959                           ;radio_driver_SX1276.c: 379: }
 28960  006170  0012               	return	
 28961  006172                     l471:
 28962                           
 28963                           ;radio_driver_SX1276.c: 380: else
 28964                           ;radio_driver_SX1276.c: 381: {
 28965                           ;radio_driver_SX1276.c: 385: if (power < 2)
 28966  006172  0100               	movlb	0	; () banked
 28967  006174  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28968  006176  0A80               	xorlw	128
 28969  006178  0F7E               	addlw	-130
 28970  00617A  B0D8               	btfsc	status,0,c
 28971  00617C  D002               	goto	l477
 28972                           
 28973                           ; BSR set to: 0
 28974                           ;radio_driver_SX1276.c: 386: {
 28975                           ;radio_driver_SX1276.c: 387: power = 2;
 28976  00617E  0E02               	movlw	2
 28977  006180  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 28978  006182                     l477:
 28979                           
 28980                           ; BSR set to: 0
 28981                           ;radio_driver_SX1276.c: 388: }
 28982                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 28983                           
 28984                           ; BSR set to: 0
 28985  006182  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 28986  006184  0A80               	xorlw	128
 28987  006186  0F6C               	addlw	-148
 28988  006188  A0D8               	btfss	status,0,c
 28989  00618A  D002               	goto	l478
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;radio_driver_SX1276.c: 392: {
 28993                           ;radio_driver_SX1276.c: 393: power = 20;
 28994  00618C  0E14               	movlw	20
 28995  00618E  D006               	goto	L22
 28996  006190                     l478:
 28997                           
 28998                           ; BSR set to: 0
 28999                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 29000                           
 29001                           ; BSR set to: 0
 29002  006190  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29003  006192  0A80               	xorlw	128
 29004  006194  0F6E               	addlw	-146
 29005  006196  A0D8               	btfss	status,0,c
 29006  006198  D002               	goto	l480
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;radio_driver_SX1276.c: 396: {
 29010                           ;radio_driver_SX1276.c: 397: power = 17;
 29011  00619A  0E11               	movlw	17
 29012  00619C                     L22:
 29013  00619C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29014  00619E                     l480:
 29015                           
 29016                           ; BSR set to: 0
 29017                           ;radio_driver_SX1276.c: 398: }
 29018                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 29019                           
 29020                           ; BSR set to: 0
 29021                           
 29022                           ; BSR set to: 0
 29023  00619E  0E0B               	movlw	11
 29024  0061A0  EC82  F043         	call	_RADIO_RegisterRead
 29025  0061A4  0100               	movlb	0	; () banked
 29026  0061A6  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 29027                           
 29028                           ; BSR set to: 0
 29029                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 29030  0061A8  0E4D               	movlw	77
 29031  0061AA  EC82  F043         	call	_RADIO_RegisterRead
 29032  0061AE  0100               	movlb	0	; () banked
 29033  0061B0  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 29037  0061B2  0EF8               	movlw	248
 29038  0061B4  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 29039                           
 29040                           ; BSR set to: 0
 29041                           ;radio_driver_SX1276.c: 403: if (power == 20)
 29042  0061B6  0E14               	movlw	20
 29043  0061B8  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 29044  0061BA  A4D8               	btfss	status,2,c
 29045  0061BC  D006               	goto	l481
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;radio_driver_SX1276.c: 404: {
 29049                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 29050  0061BE  0E07               	movlw	7
 29051  0061C0  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;radio_driver_SX1276.c: 406: power = 15;
 29055  0061C2  0E0F               	movlw	15
 29056  0061C4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 29057                           
 29058                           ; BSR set to: 0
 29059                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 29060  0061C6  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 29061                           
 29062                           ;radio_driver_SX1276.c: 408: }
 29063  0061C8  D004               	goto	l482
 29064  0061CA                     l481:
 29065                           
 29066                           ; BSR set to: 0
 29067                           ;radio_driver_SX1276.c: 409: else
 29068                           ;radio_driver_SX1276.c: 410: {
 29069                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 29070                           
 29071                           ; BSR set to: 0
 29072  0061CA  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 29073                           
 29074                           ; BSR set to: 0
 29075                           ;radio_driver_SX1276.c: 412: power -= 2;
 29076  0061CC  0EFE               	movlw	254
 29077  0061CE  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 29078                           
 29079                           ; BSR set to: 0
 29080                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 29081  0061D0  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 29082  0061D2                     l482:
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;radio_driver_SX1276.c: 414: }
 29086                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 29087                           
 29088                           ; BSR set to: 0
 29089  0061D2  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 29090  0061D6  0E4D               	movlw	77
 29091  0061D8  EC33  F044         	call	_RADIO_RegisterWrite
 29092                           
 29093                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 29094  0061DC  0100               	movlb	0	; () banked
 29095  0061DE  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 29096  0061E0  0980               	iorlw	128
 29097  0061E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29098  0061E4  0E09               	movlw	9
 29099  0061E6  EC33  F044         	call	_RADIO_RegisterWrite
 29100                           
 29101                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 29102  0061EA  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 29103  0061EE  0E0B               	movlw	11
 29104  0061F0  EC33  F044         	call	_RADIO_RegisterWrite
 29105  0061F4  0012               	return	
 29106  0061F6                     __end_of_RADIO_WritePower:
 29107                           	opt stack 0
 29108                           tosu	equ	0xFFF
 29109                           tosh	equ	0xFFE
 29110                           tosl	equ	0xFFD
 29111                           pclath	equ	0xFFA
 29112                           tblptru	equ	0xFF8
 29113                           tblptrh	equ	0xFF7
 29114                           tblptrl	equ	0xFF6
 29115                           tablat	equ	0xFF5
 29116                           prodh	equ	0xFF4
 29117                           prodl	equ	0xFF3
 29118                           intcon	equ	0xFF2
 29119                           intcon2	equ	0xFF1
 29120                           intcon3	equ	0xFF0
 29121                           indf0	equ	0xFEF
 29122                           postinc0	equ	0xFEE
 29123                           fsr0h	equ	0xFEA
 29124                           fsr0l	equ	0xFE9
 29125                           wreg	equ	0xFE8
 29126                           postinc1	equ	0xFE6
 29127                           postdec1	equ	0xFE5
 29128                           plusw1	equ	0xFE3
 29129                           fsr1h	equ	0xFE2
 29130                           fsr1l	equ	0xFE1
 29131                           indf2	equ	0xFDF
 29132                           postinc2	equ	0xFDE
 29133                           postdec2	equ	0xFDD
 29134                           plusw2	equ	0xFDB
 29135                           fsr2h	equ	0xFDA
 29136                           fsr2l	equ	0xFD9
 29137                           status	equ	0xFD8
 29138                           
 29139 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 29140 ;; Defined at:
 29141 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;  num             4   17[BANK0 ] unsigned long 
 29146 ;; Return value:  Size  Location     Type
 29147 ;;                  1    wreg      void 
 29148 ;; Registers used:
 29149 ;;		wreg, status,2, status,0, cstack
 29150 ;; Tracked objects:
 29151 ;;		On entry : 0/0
 29152 ;;		On exit  : 0/0
 29153 ;;		Unchanged: 0/0
 29154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29156 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29158 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29159 ;;Total ram usage:        8 bytes
 29160 ;; Hardware stack levels used:    1
 29161 ;; Hardware stack levels required when called:   10
 29162 ;; This function calls:
 29163 ;;		_RADIO_RegisterWrite
 29164 ;;		___lldiv
 29165 ;; This function is called by:
 29166 ;;		_RADIO_WriteConfiguration
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text134
 29171  0076E2                     __ptext134:
 29172                           	opt stack 0
 29173  0076E2                     _RADIO_WriteFSKFrequencyDeviation:
 29174                           	opt stack 17
 29175                           
 29176                           ;radio_driver_SX1276.c: 296: uint32_t num;
 29177                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 29178                           
 29179                           ;incstack = 0
 29180  0076E2  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 29181  0076E6  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 29182  0076EA  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 29183  0076EE  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 29184                           
 29185                           ;radio_driver_SX1276.c: 304: num <<= (8);
 29186  0076F2  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 29187  0076F6  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 29188  0076FA  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 29189  0076FE  0100               	movlb	0	; () banked
 29190  007700  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 29191                           
 29192                           ; BSR set to: 0
 29193                           ;radio_driver_SX1276.c: 305: num /= 15625;
 29194  007702  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 29195  007706  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 29196  00770A  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 29197  00770E  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 29198  007712  0E09               	movlw	9
 29199  007714  6F64               	movwf	___lldiv@divisor& (0+255),b
 29200  007716  0E3D               	movlw	61
 29201  007718  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 29202  00771A  0E00               	movlw	0
 29203  00771C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 29204  00771E  0E00               	movlw	0
 29205  007720  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 29206  007722  EC8F  F039         	call	___lldiv	;wreg free
 29207  007726  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 29208  00772A  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 29209  00772E  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 29210  007732  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 29211                           
 29212                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 29213  007736  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 29214  00773A  0E04               	movlw	4
 29215  00773C  EC33  F044         	call	_RADIO_RegisterWrite
 29216                           
 29217                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 29218  007740  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 29219  007744  0E05               	movlw	5
 29220  007746  EC33  F044         	call	_RADIO_RegisterWrite
 29221  00774A  0012               	return		;funcret
 29222  00774C                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 29223                           	opt stack 0
 29224                           tosu	equ	0xFFF
 29225                           tosh	equ	0xFFE
 29226                           tosl	equ	0xFFD
 29227                           pclath	equ	0xFFA
 29228                           tblptru	equ	0xFF8
 29229                           tblptrh	equ	0xFF7
 29230                           tblptrl	equ	0xFF6
 29231                           tablat	equ	0xFF5
 29232                           prodh	equ	0xFF4
 29233                           prodl	equ	0xFF3
 29234                           intcon	equ	0xFF2
 29235                           intcon2	equ	0xFF1
 29236                           intcon3	equ	0xFF0
 29237                           indf0	equ	0xFEF
 29238                           postinc0	equ	0xFEE
 29239                           fsr0h	equ	0xFEA
 29240                           fsr0l	equ	0xFE9
 29241                           wreg	equ	0xFE8
 29242                           postinc1	equ	0xFE6
 29243                           postdec1	equ	0xFE5
 29244                           plusw1	equ	0xFE3
 29245                           fsr1h	equ	0xFE2
 29246                           fsr1l	equ	0xFE1
 29247                           indf2	equ	0xFDF
 29248                           postinc2	equ	0xFDE
 29249                           postdec2	equ	0xFDD
 29250                           plusw2	equ	0xFDB
 29251                           fsr2h	equ	0xFDA
 29252                           fsr2l	equ	0xFD9
 29253                           status	equ	0xFD8
 29254                           
 29255 ;; *************** function _RADIO_WriteFSKBitRate *****************
 29256 ;; Defined at:
 29257 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29258 ;; Parameters:    Size  Location     Type
 29259 ;;  bitRate         4   13[BANK0 ] unsigned long 
 29260 ;; Auto vars:     Size  Location     Type
 29261 ;;  num             4   17[BANK0 ] unsigned long 
 29262 ;; Return value:  Size  Location     Type
 29263 ;;                  1    wreg      void 
 29264 ;; Registers used:
 29265 ;;		wreg, status,2, status,0, cstack
 29266 ;; Tracked objects:
 29267 ;;		On entry : 0/0
 29268 ;;		On exit  : 0/0
 29269 ;;		Unchanged: 0/0
 29270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29272 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29274 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29275 ;;Total ram usage:        8 bytes
 29276 ;; Hardware stack levels used:    1
 29277 ;; Hardware stack levels required when called:   10
 29278 ;; This function calls:
 29279 ;;		_RADIO_RegisterWrite
 29280 ;;		___lldiv
 29281 ;; This function is called by:
 29282 ;;		_RADIO_WriteConfiguration
 29283 ;; This function uses a non-reentrant model
 29284 ;;
 29285                           
 29286                           	psect	text135
 29287  00774C                     __ptext135:
 29288                           	opt stack 0
 29289  00774C                     _RADIO_WriteFSKBitRate:
 29290                           	opt stack 17
 29291                           
 29292                           ;radio_driver_SX1276.c: 318: uint32_t num;
 29293                           ;radio_driver_SX1276.c: 320: num = 32000000;
 29294                           
 29295                           ;incstack = 0
 29296  00774C  0E00               	movlw	0
 29297  00774E  0100               	movlb	0	; () banked
 29298  007750  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 29299  007752  0E48               	movlw	72
 29300  007754  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 29301  007756  0EE8               	movlw	232
 29302  007758  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 29303  00775A  0E01               	movlw	1
 29304  00775C  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 29305                           
 29306                           ; BSR set to: 0
 29307                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 29308  00775E  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 29309  007762  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 29310  007766  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 29311  00776A  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 29312  00776E  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 29313  007772  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 29314  007776  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 29315  00777A  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 29316  00777E  EC8F  F039         	call	___lldiv	;wreg free
 29317  007782  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 29318  007786  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 29319  00778A  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 29320  00778E  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 29321                           
 29322                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 29323  007792  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 29324  007796  0E02               	movlw	2
 29325  007798  EC33  F044         	call	_RADIO_RegisterWrite
 29326                           
 29327                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 29328  00779C  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 29329  0077A0  0E03               	movlw	3
 29330  0077A2  EC33  F044         	call	_RADIO_RegisterWrite
 29331                           
 29332                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 29333  0077A6  0E00               	movlw	0
 29334  0077A8  0100               	movlb	0	; () banked
 29335  0077AA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29336  0077AC  0E5D               	movlw	93
 29337  0077AE  EC33  F044         	call	_RADIO_RegisterWrite
 29338  0077B2  0012               	return		;funcret
 29339  0077B4                     __end_of_RADIO_WriteFSKBitRate:
 29340                           	opt stack 0
 29341                           tosu	equ	0xFFF
 29342                           tosh	equ	0xFFE
 29343                           tosl	equ	0xFFD
 29344                           pclath	equ	0xFFA
 29345                           tblptru	equ	0xFF8
 29346                           tblptrh	equ	0xFF7
 29347                           tblptrl	equ	0xFF6
 29348                           tablat	equ	0xFF5
 29349                           prodh	equ	0xFF4
 29350                           prodl	equ	0xFF3
 29351                           intcon	equ	0xFF2
 29352                           intcon2	equ	0xFF1
 29353                           intcon3	equ	0xFF0
 29354                           indf0	equ	0xFEF
 29355                           postinc0	equ	0xFEE
 29356                           fsr0h	equ	0xFEA
 29357                           fsr0l	equ	0xFE9
 29358                           wreg	equ	0xFE8
 29359                           postinc1	equ	0xFE6
 29360                           postdec1	equ	0xFE5
 29361                           plusw1	equ	0xFE3
 29362                           fsr1h	equ	0xFE2
 29363                           fsr1l	equ	0xFE1
 29364                           indf2	equ	0xFDF
 29365                           postinc2	equ	0xFDE
 29366                           postdec2	equ	0xFDD
 29367                           plusw2	equ	0xFDB
 29368                           fsr2h	equ	0xFDA
 29369                           fsr2l	equ	0xFD9
 29370                           status	equ	0xFD8
 29371                           
 29372 ;; *************** function _PrepareJoinRequestFrame *****************
 29373 ;; Defined at:
 29374 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29375 ;; Parameters:    Size  Location     Type
 29376 ;;		None
 29377 ;; Auto vars:     Size  Location     Type
 29378 ;;  mic             4  116[BANK0 ] unsigned long 
 29379 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 29380 ;;  iCtr            1  121[BANK0 ] unsigned char 
 29381 ;;  mhdr            1  120[BANK0 ] struct .
 29382 ;; Return value:  Size  Location     Type
 29383 ;;                  1    wreg      unsigned char 
 29384 ;; Registers used:
 29385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29386 ;; Tracked objects:
 29387 ;;		On entry : 0/0
 29388 ;;		On exit  : 0/0
 29389 ;;		Unchanged: 0/0
 29390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29392 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29394 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29395 ;;Total ram usage:       11 bytes
 29396 ;; Hardware stack levels used:    1
 29397 ;; Hardware stack levels required when called:   13
 29398 ;; This function calls:
 29399 ;;		_ComputeMic
 29400 ;;		_Random
 29401 ;;		_memcpy
 29402 ;;		_memset
 29403 ;; This function is called by:
 29404 ;;		_LORAWAN_Join
 29405 ;; This function uses a non-reentrant model
 29406 ;;
 29407                           
 29408                           	psect	text136
 29409  004992                     __ptext136:
 29410                           	opt stack 0
 29411  004992                     _PrepareJoinRequestFrame:
 29412                           	opt stack 16
 29413                           
 29414                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 29415                           
 29416                           ;incstack = 0
 29417  004992  0E00               	movlw	0
 29418  004994  0100               	movlb	0	; () banked
 29419  004996  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;lorawan.c: 1809: Mhdr_t mhdr;
 29423                           ;lorawan.c: 1810: uint32_t mic;
 29424                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 29425  004998  0EE0               	movlw	low _macBuffer
 29426  00499A  6F60               	movwf	memset@p1& (0+255),b
 29427  00499C  0E04               	movlw	high _macBuffer
 29428  00499E  6F61               	movwf	(memset@p1+1)& (0+255),b
 29429  0049A0  0E00               	movlw	0
 29430  0049A2  6F63               	movwf	(memset@c+1)& (0+255),b
 29431  0049A4  0E00               	movlw	0
 29432  0049A6  6F62               	movwf	memset@c& (0+255),b
 29433  0049A8  0E01               	movlw	1
 29434  0049AA  6F65               	movwf	(memset@n+1)& (0+255),b
 29435  0049AC  0E0F               	movlw	15
 29436  0049AE  6F64               	movwf	memset@n& (0+255),b
 29437  0049B0  EC6B  F042         	call	_memset	;wreg free
 29438                           
 29439                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 29440  0049B4  0100               	movlb	0	; () banked
 29441  0049B6  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 29442  0049B8  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 29443  0049BA  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 29444                           
 29445                           ; BSR set to: 0
 29446                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 29447  0049BC  0EFC               	movlw	-4
 29448  0049BE  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 29452  0049C0  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 29453  0049C2  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 29454  0049C4  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 29458  0049C6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29459  0049C8  0D01               	mullw	1
 29460  0049CA  0EE0               	movlw	low _macBuffer
 29461  0049CC  24F3               	addwf	prodl,w,c
 29462  0049CE  6ED9               	movwf	fsr2l,c
 29463  0049D0  0E04               	movlw	high _macBuffer
 29464  0049D2  20F4               	addwfc	prodh,w,c
 29465  0049D4  6EDA               	movwf	fsr2h,c
 29466  0049D6  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 29467                           
 29468                           ; BSR set to: 0
 29469  0049DA  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 29473  0049DC  0E00               	movlw	0
 29474  0049DE  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29475  0049E0                     l16217:
 29476                           
 29477                           ; BSR set to: 0
 29478  0049E0  0E07               	movlw	7
 29479  0049E2  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29480  0049E4  D001               	goto	l2319
 29481  0049E6  D022               	goto	u20090
 29482  0049E8                     l2319:
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;lorawan.c: 1821: {
 29486                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 29487                           
 29488                           ; BSR set to: 0
 29489  0049E8  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29490  0049EA  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29491  0049EC  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29492  0049EE  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29493  0049F0  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29494  0049F2  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29495  0049F4  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29496  0049F6  0E07               	movlw	7
 29497  0049F8  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29498  0049FA  0E00               	movlw	0
 29499  0049FC  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29500  0049FE  0E52               	movlw	low (_loRa+82)
 29501  004A00  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29502  004A02  6ED9               	movwf	fsr2l,c
 29503  004A04  0E02               	movlw	high (_loRa+82)
 29504  004A06  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29505  004A08  6EDA               	movwf	fsr2h,c
 29506  004A0A  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29507  004A0C  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29508  004A10  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29509  004A12  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29510  004A14  0E00               	movlw	0
 29511  004A16  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29512  004A18  0EE0               	movlw	low _macBuffer
 29513  004A1A  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29514  004A1C  6EE9               	movwf	fsr0l,c
 29515  004A1E  0E04               	movlw	high _macBuffer
 29516  004A20  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29517  004A22  6EEA               	movwf	fsr0h,c
 29518  004A24  CFDF FFEF          	movff	indf2,indf0
 29519                           
 29520                           ; BSR set to: 0
 29521  004A28  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29522  004A2A  D7DA               	goto	l16217
 29523  004A2C                     u20090:
 29524                           
 29525                           ; BSR set to: 0
 29526                           ;lorawan.c: 1823: }
 29527                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 29528                           
 29529                           ; BSR set to: 0
 29530  004A2C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29531  004A2E  0F08               	addlw	8
 29532  004A30  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29533                           
 29534                           ; BSR set to: 0
 29535                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 29536  004A32  0E00               	movlw	0
 29537  004A34  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 29538  004A36                     l16231:
 29539                           
 29540                           ; BSR set to: 0
 29541  004A36  0E07               	movlw	7
 29542  004A38  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 29543  004A3A  D001               	goto	l2321
 29544  004A3C  D022               	goto	u20110
 29545  004A3E                     l2321:
 29546                           
 29547                           ; BSR set to: 0
 29548                           ;lorawan.c: 1828: {
 29549                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 29550                           
 29551                           ; BSR set to: 0
 29552  004A3E  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29553  004A40  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 29554  004A42  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 29555  004A44  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 29556  004A46  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29557  004A48  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 29558  004A4A  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29559  004A4C  0E07               	movlw	7
 29560  004A4E  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 29561  004A50  0E00               	movlw	0
 29562  004A52  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 29563  004A54  0E5A               	movlw	low (_loRa+90)
 29564  004A56  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 29565  004A58  6ED9               	movwf	fsr2l,c
 29566  004A5A  0E02               	movlw	high (_loRa+90)
 29567  004A5C  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 29568  004A5E  6EDA               	movwf	fsr2h,c
 29569  004A60  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 29570  004A62  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 29571  004A66  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 29572  004A68  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 29573  004A6A  0E00               	movlw	0
 29574  004A6C  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 29575  004A6E  0EE0               	movlw	low _macBuffer
 29576  004A70  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 29577  004A72  6EE9               	movwf	fsr0l,c
 29578  004A74  0E04               	movlw	high _macBuffer
 29579  004A76  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 29580  004A78  6EEA               	movwf	fsr0h,c
 29581  004A7A  CFDF FFEF          	movff	indf2,indf0
 29582                           
 29583                           ; BSR set to: 0
 29584  004A7E  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 29585  004A80  D7DA               	goto	l16231
 29586  004A82                     u20110:
 29587                           
 29588                           ; BSR set to: 0
 29589                           ;lorawan.c: 1830: }
 29590                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 29591                           
 29592                           ; BSR set to: 0
 29593  004A82  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29594  004A84  0F08               	addlw	8
 29595  004A86  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29596                           
 29597                           ; BSR set to: 0
 29598                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 29599  004A88  0EFF               	movlw	255
 29600  004A8A  6FAE               	movwf	(Random@max+1)& (0+255),b
 29601  004A8C  69AD               	setf	Random@max& (0+255),b
 29602  004A8E  ECF1  F043         	call	_Random	;wreg free
 29603  004A92  C0AD  F2D2         	movff	?_Random,_loRa+210
 29604  004A96  C0AE  F2D3         	movff	?_Random+1,_loRa+211
 29605                           
 29606                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 29607  004A9A  0100               	movlb	0	; () banked
 29608  004A9C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29609  004A9E  0D01               	mullw	1
 29610  004AA0  0EE0               	movlw	low _macBuffer
 29611  004AA2  24F3               	addwf	prodl,w,c
 29612  004AA4  6F60               	movwf	memcpy@d1& (0+255),b
 29613  004AA6  0E04               	movlw	high _macBuffer
 29614  004AA8  20F4               	addwfc	prodh,w,c
 29615  004AAA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29616  004AAC  0ED2               	movlw	low (_loRa+210)
 29617  004AAE  6F62               	movwf	memcpy@s1& (0+255),b
 29618  004AB0  0E02               	movlw	high (_loRa+210)
 29619  004AB2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29620  004AB4  0E00               	movlw	0
 29621  004AB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29622  004AB8  0E02               	movlw	2
 29623  004ABA  6F64               	movwf	memcpy@n& (0+255),b
 29624  004ABC  EC37  F03D         	call	_memcpy	;wreg free
 29625                           
 29626                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 29627  004AC0  0100               	movlb	0	; () banked
 29628  004AC2  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29629  004AC4  0F02               	addlw	2
 29630  004AC6  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 29634  004AC8  0E42               	movlw	low (_loRa+66)
 29635  004ACA  6FC7               	movwf	ComputeMic@key& (0+255),b
 29636  004ACC  0E02               	movlw	high (_loRa+66)
 29637  004ACE  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 29638  004AD0  0EE0               	movlw	low _macBuffer
 29639  004AD2  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 29640  004AD4  0E04               	movlw	high _macBuffer
 29641  004AD6  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 29642  004AD8  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 29643  004ADC  EC74  F03C         	call	_ComputeMic	;wreg free
 29644  004AE0  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 29645  004AE4  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 29646  004AE8  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 29647  004AEC  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 29648                           
 29649                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 29650  004AF0  0100               	movlb	0	; () banked
 29651  004AF2  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29652  004AF4  0D01               	mullw	1
 29653  004AF6  0EE0               	movlw	low _macBuffer
 29654  004AF8  24F3               	addwf	prodl,w,c
 29655  004AFA  6F60               	movwf	memcpy@d1& (0+255),b
 29656  004AFC  0E04               	movlw	high _macBuffer
 29657  004AFE  20F4               	addwfc	prodh,w,c
 29658  004B00  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29659  004B02  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 29660  004B04  6F62               	movwf	memcpy@s1& (0+255),b
 29661  004B06  0E00               	movlw	high PrepareJoinRequestFrame@mic
 29662  004B08  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29663  004B0A  0E00               	movlw	0
 29664  004B0C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29665  004B0E  0E04               	movlw	4
 29666  004B10  6F64               	movwf	memcpy@n& (0+255),b
 29667  004B12  EC37  F03D         	call	_memcpy	;wreg free
 29668                           
 29669                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 29670  004B16  0100               	movlb	0	; () banked
 29671  004B18  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29672  004B1A  0F04               	addlw	4
 29673  004B1C  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 29674                           
 29675                           ; BSR set to: 0
 29676                           ;lorawan.c: 1842: return bufferIndex;
 29677  004B1E  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 29678  004B20  0012               	return	
 29679  004B22                     __end_of_PrepareJoinRequestFrame:
 29680                           	opt stack 0
 29681                           tosu	equ	0xFFF
 29682                           tosh	equ	0xFFE
 29683                           tosl	equ	0xFFD
 29684                           pclath	equ	0xFFA
 29685                           tblptru	equ	0xFF8
 29686                           tblptrh	equ	0xFF7
 29687                           tblptrl	equ	0xFF6
 29688                           tablat	equ	0xFF5
 29689                           prodh	equ	0xFF4
 29690                           prodl	equ	0xFF3
 29691                           intcon	equ	0xFF2
 29692                           intcon2	equ	0xFF1
 29693                           intcon3	equ	0xFF0
 29694                           indf0	equ	0xFEF
 29695                           postinc0	equ	0xFEE
 29696                           fsr0h	equ	0xFEA
 29697                           fsr0l	equ	0xFE9
 29698                           wreg	equ	0xFE8
 29699                           postinc1	equ	0xFE6
 29700                           postdec1	equ	0xFE5
 29701                           plusw1	equ	0xFE3
 29702                           fsr1h	equ	0xFE2
 29703                           fsr1l	equ	0xFE1
 29704                           indf2	equ	0xFDF
 29705                           postinc2	equ	0xFDE
 29706                           postdec2	equ	0xFDD
 29707                           plusw2	equ	0xFDB
 29708                           fsr2h	equ	0xFDA
 29709                           fsr2l	equ	0xFD9
 29710                           status	equ	0xFD8
 29711                           
 29712 ;; *************** function _Random *****************
 29713 ;; Defined at:
 29714 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;  max             2   77[BANK0 ] unsigned int 
 29717 ;; Auto vars:     Size  Location     Type
 29718 ;;		None
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  2   77[BANK0 ] unsigned int 
 29721 ;; Registers used:
 29722 ;;		wreg, status,2, status,0, cstack
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29732 ;;Total ram usage:        2 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; Hardware stack levels required when called:    9
 29735 ;; This function calls:
 29736 ;;		___lwmod
 29737 ;;		_rand
 29738 ;; This function is called by:
 29739 ;;		_SearchAvailableChannel
 29740 ;;		_PrepareJoinRequestFrame
 29741 ;; This function uses a non-reentrant model
 29742 ;;
 29743                           
 29744                           	psect	text137
 29745  0087E2                     __ptext137:
 29746                           	opt stack 0
 29747  0087E2                     _Random:
 29748                           	opt stack 18
 29749                           
 29750                           ;lorawan.c: 1118: return (rand () % max);
 29751                           
 29752                           ; BSR set to: 0
 29753                           ;incstack = 0
 29754  0087E2  ECC5  F03D         	call	_rand	;wreg free
 29755  0087E6  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 29756  0087EA  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 29757  0087EE  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 29758  0087F2  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 29759  0087F6  EC97  F040         	call	___lwmod	;wreg free
 29760  0087FA  C0A8  F0AD         	movff	?___lwmod,?_Random
 29761  0087FE  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 29762  008802  0012               	return	
 29763  008804                     __end_of_Random:
 29764                           	opt stack 0
 29765                           tosu	equ	0xFFF
 29766                           tosh	equ	0xFFE
 29767                           tosl	equ	0xFFD
 29768                           pclath	equ	0xFFA
 29769                           tblptru	equ	0xFF8
 29770                           tblptrh	equ	0xFF7
 29771                           tblptrl	equ	0xFF6
 29772                           tablat	equ	0xFF5
 29773                           prodh	equ	0xFF4
 29774                           prodl	equ	0xFF3
 29775                           intcon	equ	0xFF2
 29776                           intcon2	equ	0xFF1
 29777                           intcon3	equ	0xFF0
 29778                           indf0	equ	0xFEF
 29779                           postinc0	equ	0xFEE
 29780                           fsr0h	equ	0xFEA
 29781                           fsr0l	equ	0xFE9
 29782                           wreg	equ	0xFE8
 29783                           postinc1	equ	0xFE6
 29784                           postdec1	equ	0xFE5
 29785                           plusw1	equ	0xFE3
 29786                           fsr1h	equ	0xFE2
 29787                           fsr1l	equ	0xFE1
 29788                           indf2	equ	0xFDF
 29789                           postinc2	equ	0xFDE
 29790                           postdec2	equ	0xFDD
 29791                           plusw2	equ	0xFDB
 29792                           fsr2h	equ	0xFDA
 29793                           fsr2l	equ	0xFD9
 29794                           status	equ	0xFD8
 29795                           
 29796 ;; *************** function _rand *****************
 29797 ;; Defined at:
 29798 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 29799 ;; Parameters:    Size  Location     Type
 29800 ;;		None
 29801 ;; Auto vars:     Size  Location     Type
 29802 ;;		None
 29803 ;; Return value:  Size  Location     Type
 29804 ;;                  2   70[BANK0 ] int 
 29805 ;; Registers used:
 29806 ;;		wreg, status,2, status,0, cstack
 29807 ;; Tracked objects:
 29808 ;;		On entry : 0/0
 29809 ;;		On exit  : 0/0
 29810 ;;		Unchanged: 0/0
 29811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29816 ;;Total ram usage:        2 bytes
 29817 ;; Hardware stack levels used:    1
 29818 ;; Hardware stack levels required when called:    8
 29819 ;; This function calls:
 29820 ;;		___lmul
 29821 ;; This function is called by:
 29822 ;;		_Random
 29823 ;; This function uses a non-reentrant model
 29824 ;;
 29825                           
 29826                           	psect	text138
 29827  007B8A                     __ptext138:
 29828                           	opt stack 0
 29829  007B8A                     _rand:
 29830                           	opt stack 18
 29831                           
 29832                           ;incstack = 0
 29833  007B8A  C1D0  F09A         	movff	_randx,___lmul@multiplier
 29834  007B8E  C1D1  F09B         	movff	_randx+1,___lmul@multiplier+1
 29835  007B92  C1D2  F09C         	movff	_randx+2,___lmul@multiplier+2
 29836  007B96  C1D3  F09D         	movff	_randx+3,___lmul@multiplier+3
 29837  007B9A  0E6D               	movlw	109
 29838  007B9C  0100               	movlb	0	; () banked
 29839  007B9E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29840  007BA0  0E4E               	movlw	78
 29841  007BA2  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29842  007BA4  0EC6               	movlw	198
 29843  007BA6  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29844  007BA8  0E41               	movlw	65
 29845  007BAA  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29846  007BAC  EC4D  F03E         	call	___lmul	;wreg free
 29847  007BB0  C09A  F1D0         	movff	?___lmul,_randx
 29848  007BB4  C09B  F1D1         	movff	?___lmul+1,_randx+1
 29849  007BB8  C09C  F1D2         	movff	?___lmul+2,_randx+2
 29850  007BBC  C09D  F1D3         	movff	?___lmul+3,_randx+3
 29851  007BC0  0E39               	movlw	57
 29852  007BC2  0101               	movlb	1	; () banked
 29853  007BC4  27D0               	addwf	_randx& (0+255),f,b
 29854  007BC6  0E30               	movlw	48
 29855  007BC8  23D1               	addwfc	(_randx+1)& (0+255),f,b
 29856  007BCA  0E00               	movlw	0
 29857  007BCC  23D2               	addwfc	(_randx+2)& (0+255),f,b
 29858  007BCE  0E00               	movlw	0
 29859  007BD0  23D3               	addwfc	(_randx+3)& (0+255),f,b
 29860                           
 29861                           ; BSR set to: 1
 29862  007BD2  0EFF               	movlw	255
 29863  007BD4  15D2               	andwf	(_randx+2)& (0+255),w,b
 29864  007BD6  0100               	movlb	0	; () banked
 29865  007BD8  6FA6               	movwf	?_rand& (0+255),b
 29866  007BDA  0E7F               	movlw	127
 29867  007BDC  0101               	movlb	1	; () banked
 29868  007BDE  15D3               	andwf	(_randx+3)& (0+255),w,b
 29869  007BE0  0100               	movlb	0	; () banked
 29870  007BE2  6FA7               	movwf	(?_rand+1)& (0+255),b
 29871  007BE4  0012               	return	
 29872  007BE6                     __end_of_rand:
 29873                           	opt stack 0
 29874                           tosu	equ	0xFFF
 29875                           tosh	equ	0xFFE
 29876                           tosl	equ	0xFFD
 29877                           pclath	equ	0xFFA
 29878                           tblptru	equ	0xFF8
 29879                           tblptrh	equ	0xFF7
 29880                           tblptrl	equ	0xFF6
 29881                           tablat	equ	0xFF5
 29882                           prodh	equ	0xFF4
 29883                           prodl	equ	0xFF3
 29884                           intcon	equ	0xFF2
 29885                           intcon2	equ	0xFF1
 29886                           intcon3	equ	0xFF0
 29887                           indf0	equ	0xFEF
 29888                           postinc0	equ	0xFEE
 29889                           fsr0h	equ	0xFEA
 29890                           fsr0l	equ	0xFE9
 29891                           wreg	equ	0xFE8
 29892                           postinc1	equ	0xFE6
 29893                           postdec1	equ	0xFE5
 29894                           plusw1	equ	0xFE3
 29895                           fsr1h	equ	0xFE2
 29896                           fsr1l	equ	0xFE1
 29897                           indf2	equ	0xFDF
 29898                           postinc2	equ	0xFDE
 29899                           postdec2	equ	0xFDD
 29900                           plusw2	equ	0xFDB
 29901                           fsr2h	equ	0xFDA
 29902                           fsr2l	equ	0xFD9
 29903                           status	equ	0xFD8
 29904                           
 29905 ;; *************** function ___lwmod *****************
 29906 ;; Defined at:
 29907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 29908 ;; Parameters:    Size  Location     Type
 29909 ;;  dividend        2   72[BANK0 ] unsigned int 
 29910 ;;  divisor         2   74[BANK0 ] unsigned int 
 29911 ;; Auto vars:     Size  Location     Type
 29912 ;;  counter         1   76[BANK0 ] unsigned char 
 29913 ;; Return value:  Size  Location     Type
 29914 ;;                  2   72[BANK0 ] unsigned int 
 29915 ;; Registers used:
 29916 ;;		wreg, status,2, status,0
 29917 ;; Tracked objects:
 29918 ;;		On entry : 0/0
 29919 ;;		On exit  : 0/0
 29920 ;;		Unchanged: 0/0
 29921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29925 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29926 ;;Total ram usage:        5 bytes
 29927 ;; Hardware stack levels used:    1
 29928 ;; Hardware stack levels required when called:    7
 29929 ;; This function calls:
 29930 ;;		Nothing
 29931 ;; This function is called by:
 29932 ;;		_Random
 29933 ;; This function uses a non-reentrant model
 29934 ;;
 29935                           
 29936                           	psect	text139
 29937  00812E                     __ptext139:
 29938                           	opt stack 0
 29939  00812E                     ___lwmod:
 29940                           	opt stack 19
 29941                           
 29942                           ; BSR set to: 0
 29943                           ;incstack = 0
 29944  00812E  0100               	movlb	0	; () banked
 29945  008130  51AA               	movf	___lwmod@divisor& (0+255),w,b
 29946  008132  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 29947  008134  B4D8               	btfsc	status,2,c
 29948  008136  D018               	goto	l2914
 29949                           
 29950                           ; BSR set to: 0
 29951  008138  0E01               	movlw	1
 29952  00813A  6FAC               	movwf	___lwmod@counter& (0+255),b
 29953  00813C  D004               	goto	l2909
 29954  00813E                     
 29955                           ; BSR set to: 0
 29956                           
 29957                           ; BSR set to: 0
 29958  00813E  90D8               	bcf	status,0,c
 29959  008140  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 29960  008142  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 29961  008144  2BAC               	incf	___lwmod@counter& (0+255),f,b
 29962  008146                     l2909:
 29963                           
 29964                           ; BSR set to: 0
 29965                           
 29966                           ; BSR set to: 0
 29967  008146  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 29968  008148  D7FA               	goto	l2910
 29969  00814A                     u14890:
 29970                           
 29971                           ; BSR set to: 0
 29972                           
 29973                           ; BSR set to: 0
 29974                           
 29975                           ; BSR set to: 0
 29976  00814A  51AA               	movf	___lwmod@divisor& (0+255),w,b
 29977  00814C  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 29978  00814E  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29979  008150  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 29980  008152  A0D8               	btfss	status,0,c
 29981  008154  D004               	goto	l2913
 29982                           
 29983                           ; BSR set to: 0
 29984  008156  51AA               	movf	___lwmod@divisor& (0+255),w,b
 29985  008158  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 29986  00815A  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29987  00815C  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 29988  00815E                     l2913:
 29989                           
 29990                           ; BSR set to: 0
 29991                           
 29992                           ; BSR set to: 0
 29993  00815E  90D8               	bcf	status,0,c
 29994  008160  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 29995  008162  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 29996                           
 29997                           ; BSR set to: 0
 29998  008164  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 29999  008166  D7F1               	goto	u14890
 30000  008168                     l2914:
 30001                           
 30002                           ; BSR set to: 0
 30003                           
 30004                           ; BSR set to: 0
 30005  008168  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 30006  00816C  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 30007                           
 30008                           ; BSR set to: 0
 30009  008170  0012               	return		;funcret
 30010  008172                     __end_of___lwmod:
 30011                           	opt stack 0
 30012                           tosu	equ	0xFFF
 30013                           tosh	equ	0xFFE
 30014                           tosl	equ	0xFFD
 30015                           pclath	equ	0xFFA
 30016                           tblptru	equ	0xFF8
 30017                           tblptrh	equ	0xFF7
 30018                           tblptrl	equ	0xFF6
 30019                           tablat	equ	0xFF5
 30020                           prodh	equ	0xFF4
 30021                           prodl	equ	0xFF3
 30022                           intcon	equ	0xFF2
 30023                           intcon2	equ	0xFF1
 30024                           intcon3	equ	0xFF0
 30025                           indf0	equ	0xFEF
 30026                           postinc0	equ	0xFEE
 30027                           fsr0h	equ	0xFEA
 30028                           fsr0l	equ	0xFE9
 30029                           wreg	equ	0xFE8
 30030                           postinc1	equ	0xFE6
 30031                           postdec1	equ	0xFE5
 30032                           plusw1	equ	0xFE3
 30033                           fsr1h	equ	0xFE2
 30034                           fsr1l	equ	0xFE1
 30035                           indf2	equ	0xFDF
 30036                           postinc2	equ	0xFDE
 30037                           postdec2	equ	0xFDD
 30038                           plusw2	equ	0xFDB
 30039                           fsr2h	equ	0xFDA
 30040                           fsr2l	equ	0xFD9
 30041                           status	equ	0xFD8
 30042                           
 30043 ;; *************** function _ComputeMic *****************
 30044 ;; Defined at:
 30045 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30046 ;; Parameters:    Size  Location     Type
 30047 ;;  key             2  103[BANK0 ] PTR unsigned char 
 30048 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30049 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 30050 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30051 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 30052 ;; Auto vars:     Size  Location     Type
 30053 ;;  mic             4  108[BANK0 ] unsigned long 
 30054 ;; Return value:  Size  Location     Type
 30055 ;;                  4  103[BANK0 ] unsigned long 
 30056 ;; Registers used:
 30057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30058 ;; Tracked objects:
 30059 ;;		On entry : 0/0
 30060 ;;		On exit  : 0/0
 30061 ;;		Unchanged: 0/0
 30062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30063 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30064 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30066 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30067 ;;Total ram usage:        9 bytes
 30068 ;; Hardware stack levels used:    1
 30069 ;; Hardware stack levels required when called:   12
 30070 ;; This function calls:
 30071 ;;		_AESCmac
 30072 ;;		_memcpy
 30073 ;; This function is called by:
 30074 ;;		_LORAWAN_RxDone
 30075 ;;		_PrepareJoinRequestFrame
 30076 ;; This function uses a non-reentrant model
 30077 ;;
 30078                           
 30079                           	psect	text140
 30080  0078E8                     __ptext140:
 30081                           	opt stack 0
 30082  0078E8                     _ComputeMic:
 30083                           	opt stack 14
 30084                           
 30085                           ;lorawan.c: 2196: uint32_t mic = 0;
 30086                           
 30087                           ; BSR set to: 0
 30088                           ;incstack = 0
 30089  0078E8  0E00               	movlw	0
 30090  0078EA  0100               	movlb	0	; () banked
 30091  0078EC  6FCC               	movwf	ComputeMic@mic& (0+255),b
 30092  0078EE  0E00               	movlw	0
 30093  0078F0  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 30094  0078F2  0E00               	movlw	0
 30095  0078F4  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 30096  0078F6  0E00               	movlw	0
 30097  0078F8  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 30101  0078FA  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 30102  0078FE  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 30103  007902  0EB0               	movlw	low _aesBuffer
 30104  007904  6FBB               	movwf	AESCmac@output& (0+255),b
 30105  007906  0E01               	movlw	high _aesBuffer
 30106  007908  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 30107  00790A  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 30108  00790E  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 30109  007912  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 30110  007916  ECF8  F010         	call	_AESCmac	;wreg free
 30111                           
 30112                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 30113  00791A  0ECC               	movlw	low ComputeMic@mic
 30114  00791C  0100               	movlb	0	; () banked
 30115  00791E  6F60               	movwf	memcpy@d1& (0+255),b
 30116  007920  0E00               	movlw	high ComputeMic@mic
 30117  007922  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30118  007924  0EB0               	movlw	low _aesBuffer
 30119  007926  6F62               	movwf	memcpy@s1& (0+255),b
 30120  007928  0E01               	movlw	high _aesBuffer
 30121  00792A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30122  00792C  0E00               	movlw	0
 30123  00792E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30124  007930  0E04               	movlw	4
 30125  007932  6F64               	movwf	memcpy@n& (0+255),b
 30126  007934  EC37  F03D         	call	_memcpy	;wreg free
 30127                           
 30128                           ;lorawan.c: 2202: return mic;
 30129  007938  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 30130  00793C  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 30131  007940  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 30132  007944  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 30133  007948  0012               	return	
 30134  00794A                     __end_of_ComputeMic:
 30135                           	opt stack 0
 30136                           tosu	equ	0xFFF
 30137                           tosh	equ	0xFFE
 30138                           tosl	equ	0xFFD
 30139                           pclath	equ	0xFFA
 30140                           tblptru	equ	0xFF8
 30141                           tblptrh	equ	0xFF7
 30142                           tblptrl	equ	0xFF6
 30143                           tablat	equ	0xFF5
 30144                           prodh	equ	0xFF4
 30145                           prodl	equ	0xFF3
 30146                           intcon	equ	0xFF2
 30147                           intcon2	equ	0xFF1
 30148                           intcon3	equ	0xFF0
 30149                           indf0	equ	0xFEF
 30150                           postinc0	equ	0xFEE
 30151                           fsr0h	equ	0xFEA
 30152                           fsr0l	equ	0xFE9
 30153                           wreg	equ	0xFE8
 30154                           postinc1	equ	0xFE6
 30155                           postdec1	equ	0xFE5
 30156                           plusw1	equ	0xFE3
 30157                           fsr1h	equ	0xFE2
 30158                           fsr1l	equ	0xFE1
 30159                           indf2	equ	0xFDF
 30160                           postinc2	equ	0xFDE
 30161                           postdec2	equ	0xFDD
 30162                           plusw2	equ	0xFDB
 30163                           fsr2h	equ	0xFDA
 30164                           fsr2l	equ	0xFD9
 30165                           status	equ	0xFD8
 30166                           
 30167 ;; *************** function _AESCmac *****************
 30168 ;; Defined at:
 30169 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30170 ;; Parameters:    Size  Location     Type
 30171 ;;  key             2   89[BANK0 ] PTR unsigned char 
 30172 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30173 ;;  output          2   91[BANK0 ] PTR unsigned char 
 30174 ;;		 -> aesBuffer(16), 
 30175 ;;  input           2   93[BANK0 ] PTR unsigned char 
 30176 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 30177 ;;  size            1   95[BANK0 ] unsigned char 
 30178 ;; Auto vars:     Size  Location     Type
 30179 ;;  x              16   80[BANK1 ] unsigned char [16]
 30180 ;;  y              16   64[BANK1 ] unsigned char [16]
 30181 ;;  padded         16   48[BANK1 ] unsigned char [16]
 30182 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 30183 ;;  k1             16   16[BANK1 ] unsigned char [16]
 30184 ;;  k2             16    0[BANK1 ] unsigned char [16]
 30185 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 30186 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 30187 ;;  i               1  101[BANK1 ] unsigned char 
 30188 ;;  j               1  100[BANK1 ] unsigned char 
 30189 ;;  n               1   99[BANK1 ] unsigned char 
 30190 ;;  flag            1   98[BANK1 ] unsigned char 
 30191 ;; Return value:  Size  Location     Type
 30192 ;;                  1    wreg      void 
 30193 ;; Registers used:
 30194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30195 ;; Tracked objects:
 30196 ;;		On entry : 0/0
 30197 ;;		On exit  : 0/0
 30198 ;;		Unchanged: 0/0
 30199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30200 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30201 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30202 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30203 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30204 ;;Total ram usage:      116 bytes
 30205 ;; Hardware stack levels used:    1
 30206 ;; Hardware stack levels required when called:   11
 30207 ;; This function calls:
 30208 ;;		_AESEncodeLoRa
 30209 ;;		_GenerateSubkey
 30210 ;;		_memcpy
 30211 ;;		_memset
 30212 ;; This function is called by:
 30213 ;;		_LORAWAN_RxDone
 30214 ;;		_AssemblePacket
 30215 ;;		_ComputeMic
 30216 ;; This function uses a non-reentrant model
 30217 ;;
 30218                           
 30219                           	psect	text141
 30220  0021F0                     __ptext141:
 30221                           	opt stack 0
 30222  0021F0                     _AESCmac:
 30223                           	opt stack 17
 30224                           
 30225                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 30226                           
 30227                           ;incstack = 0
 30228  0021F0  0E00               	movlw	0
 30229  0021F2  0101               	movlb	1	; () banked
 30230  0021F4  6F63               	movwf	AESCmac@n& (0+255),b
 30231  0021F6  0E00               	movlw	0
 30232  0021F8  6F65               	movwf	AESCmac@i& (0+255),b
 30233  0021FA  0E00               	movlw	0
 30234  0021FC  6F64               	movwf	AESCmac@j& (0+255),b
 30235                           
 30236                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 30237  0021FE  0E00               	movlw	0
 30238  002200  6F62               	movwf	AESCmac@flag& (0+255),b
 30239                           
 30240                           ; BSR set to: 1
 30241                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 30242                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 30243                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 30244  002202  0E00               	movlw	0
 30245  002204  6F60               	movwf	AESCmac@ptr& (0+255),b
 30246  002206  0E00               	movlw	0
 30247  002208  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 30248                           
 30249                           ; BSR set to: 1
 30250                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 30251  00220A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 30252  00220E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 30253  002212  0E10               	movlw	low AESCmac@k1
 30254  002214  0100               	movlb	0	; () banked
 30255  002216  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 30256  002218  0E01               	movlw	high AESCmac@k1
 30257  00221A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 30258  00221C  0E00               	movlw	low AESCmac@k2
 30259  00221E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 30260  002220  0E01               	movlw	high AESCmac@k2
 30261  002222  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 30262  002224  EC79  F02A         	call	_GenerateSubkey	;wreg free
 30263                           
 30264                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 30265  002228  0100               	movlb	0	; () banked
 30266  00222A  51BF               	movf	AESCmac@size& (0+255),w,b
 30267  00222C  6FC0               	movwf	??_AESCmac& (0+255),b
 30268  00222E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30269  002230  0E0F               	movlw	15
 30270  002232  27C0               	addwf	??_AESCmac& (0+255),f,b
 30271  002234  0E00               	movlw	0
 30272  002236  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 30273  002238  0E04               	movlw	4
 30274  00223A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30275  00223C                     u15415:
 30276  00223C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 30277  00223E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 30278  002240  33C0               	rrcf	??_AESCmac& (0+255),f,b
 30279  002242  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 30280  002244  D7FB               	goto	u15415
 30281  002246  51C0               	movf	??_AESCmac& (0+255),w,b
 30282  002248  0101               	movlb	1	; () banked
 30283  00224A  6F63               	movwf	AESCmac@n& (0+255),b
 30284                           
 30285                           ; BSR set to: 1
 30286                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 30287  00224C  5163               	movf	AESCmac@n& (0+255),w,b
 30288  00224E  A4D8               	btfss	status,2,c
 30289  002250  D004               	goto	l86
 30290                           
 30291                           ; BSR set to: 1
 30292                           ;lorawan_aes_cmac.c: 53: {
 30293                           ;lorawan_aes_cmac.c: 54: n = 1;
 30294  002252  0E01               	movlw	1
 30295  002254  6F63               	movwf	AESCmac@n& (0+255),b
 30296                           
 30297                           ;lorawan_aes_cmac.c: 55: flag = 0;
 30298  002256  0E00               	movlw	0
 30299  002258  D00B               	goto	L23
 30300  00225A                     l86:
 30301                           
 30302                           ; BSR set to: 1
 30303                           ;lorawan_aes_cmac.c: 57: else
 30304                           ;lorawan_aes_cmac.c: 58: {
 30305                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 30306                           
 30307                           ; BSR set to: 1
 30308  00225A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 30309  00225E  0E0F               	movlw	15
 30310  002260  0100               	movlb	0	; () banked
 30311  002262  17C0               	andwf	??_AESCmac& (0+255),f,b
 30312  002264  A4D8               	btfss	status,2,c
 30313  002266  D002               	goto	u15430
 30314  002268  0E01               	movlw	1
 30315  00226A  D001               	goto	u15440
 30316  00226C                     u15430:
 30317  00226C  0E00               	movlw	0
 30318  00226E                     u15440:
 30319  00226E  0101               	movlb	1	; () banked
 30320  002270                     L23:
 30321  002270  6F62               	movwf	AESCmac@flag& (0+255),b
 30322                           
 30323                           ; BSR set to: 1
 30324                           ;lorawan_aes_cmac.c: 60: }
 30325                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 30326  002272  0562               	decf	AESCmac@flag& (0+255),w,b
 30327  002274  A4D8               	btfss	status,2,c
 30328  002276  D048               	goto	l88
 30329                           
 30330                           ; BSR set to: 1
 30331                           ;lorawan_aes_cmac.c: 63: {
 30332                           ;lorawan_aes_cmac.c: 64: j = 0;
 30333  002278  0E00               	movlw	0
 30334  00227A  6F64               	movwf	AESCmac@j& (0+255),b
 30335                           
 30336                           ; BSR set to: 1
 30337                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 30338  00227C  3963               	swapf	AESCmac@n& (0+255),w,b
 30339  00227E  0BF0               	andlw	240
 30340  002280  0FF0               	addlw	240
 30341  002282  6F65               	movwf	AESCmac@i& (0+255),b
 30342  002284  D024               	goto	l89
 30343  002286                     
 30344                           ;lorawan_aes_cmac.c: 66: {
 30345                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 30346                           
 30347                           ; BSR set to: 1
 30348  002286  0101               	movlb	1	; () banked
 30349  002288  5164               	movf	AESCmac@j& (0+255),w,b
 30350  00228A  0D01               	mullw	1
 30351  00228C  0E20               	movlw	low AESCmac@mLast
 30352  00228E  24F3               	addwf	prodl,w,c
 30353  002290  6ED9               	movwf	fsr2l,c
 30354  002292  0E01               	movlw	high AESCmac@mLast
 30355  002294  20F4               	addwfc	prodh,w,c
 30356  002296  6EDA               	movwf	fsr2h,c
 30357  002298  5164               	movf	AESCmac@j& (0+255),w,b
 30358  00229A  0D01               	mullw	1
 30359  00229C  0E10               	movlw	low AESCmac@k1
 30360  00229E  24F3               	addwf	prodl,w,c
 30361  0022A0  6EE9               	movwf	fsr0l,c
 30362  0022A2  0E01               	movlw	high AESCmac@k1
 30363  0022A4  20F4               	addwfc	prodh,w,c
 30364  0022A6  6EEA               	movwf	fsr0h,c
 30365  0022A8  50EF               	movf	indf0,w,c
 30366  0022AA  0100               	movlb	0	; () banked
 30367  0022AC  6FC0               	movwf	??_AESCmac& (0+255),b
 30368  0022AE  0101               	movlb	1	; () banked
 30369  0022B0  5165               	movf	AESCmac@i& (0+255),w,b
 30370  0022B2  0D01               	mullw	1
 30371  0022B4  50F3               	movf	prodl,w,c
 30372  0022B6  0100               	movlb	0	; () banked
 30373  0022B8  25BD               	addwf	AESCmac@input& (0+255),w,b
 30374  0022BA  6EE9               	movwf	fsr0l,c
 30375  0022BC  50F4               	movf	prodh,w,c
 30376  0022BE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 30377  0022C0  6EEA               	movwf	fsr0h,c
 30378  0022C2  50EF               	movf	indf0,w,c
 30379  0022C4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 30380  0022C6  6EDF               	movwf	indf2,c
 30381                           
 30382                           ; BSR set to: 0
 30383                           ;lorawan_aes_cmac.c: 68: j++;
 30384  0022C8  0101               	movlb	1	; () banked
 30385  0022CA  2B64               	incf	AESCmac@j& (0+255),f,b
 30386                           
 30387                           ; BSR set to: 1
 30388  0022CC  2B65               	incf	AESCmac@i& (0+255),f,b
 30389  0022CE                     l89:
 30390                           
 30391                           ; BSR set to: 1
 30392                           
 30393                           ; BSR set to: 1
 30394  0022CE  5163               	movf	AESCmac@n& (0+255),w,b
 30395  0022D0  0100               	movlb	0	; () banked
 30396  0022D2  6FC0               	movwf	??_AESCmac& (0+255),b
 30397  0022D4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30398  0022D6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 30399  0022D8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 30400  0022DA  0EF0               	movlw	240
 30401  0022DC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 30402  0022DE  51C0               	movf	??_AESCmac& (0+255),w,b
 30403  0022E0  0B0F               	andlw	15
 30404  0022E2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 30405  0022E4  0EF0               	movlw	240
 30406  0022E6  17C0               	andwf	??_AESCmac& (0+255),f,b
 30407  0022E8  0101               	movlb	1	; () banked
 30408  0022EA  5165               	movf	AESCmac@i& (0+255),w,b
 30409  0022EC  0100               	movlb	0	; () banked
 30410  0022EE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30411  0022F0  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 30412  0022F2  51C0               	movf	??_AESCmac& (0+255),w,b
 30413  0022F4  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 30414  0022F6  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 30415  0022F8  0A80               	xorlw	128
 30416  0022FA  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 30417  0022FC  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30418  0022FE  0A80               	xorlw	128
 30419  002300  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 30420  002302  B0D8               	btfsc	status,0,c
 30421  002304  D07F               	goto	u15520
 30422  002306  D7BF               	goto	l90
 30423  002308                     l88:
 30424                           
 30425                           ;lorawan_aes_cmac.c: 71: else
 30426                           ;lorawan_aes_cmac.c: 72: {
 30427                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 30428                           
 30429                           ; BSR set to: 0
 30430  002308  0100               	movlb	0	; () banked
 30431  00230A  51BF               	movf	AESCmac@size& (0+255),w,b
 30432  00230C  0B0F               	andlw	15
 30433  00230E  6FC0               	movwf	??_AESCmac& (0+255),b
 30434  002310  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30435  002312  1FC0               	comf	??_AESCmac& (0+255),f,b
 30436  002314  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 30437  002316  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 30438  002318  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 30439  00231A  51BF               	movf	AESCmac@size& (0+255),w,b
 30440  00231C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30441  00231E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 30442  002320  51C0               	movf	??_AESCmac& (0+255),w,b
 30443  002322  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 30444  002324  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30445  002326  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 30446  002328  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 30447  00232A  25BD               	addwf	AESCmac@input& (0+255),w,b
 30448  00232C  0101               	movlb	1	; () banked
 30449  00232E  6F60               	movwf	AESCmac@ptr& (0+255),b
 30450  002330  0100               	movlb	0	; () banked
 30451  002332  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 30452  002334  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 30453  002336  0101               	movlb	1	; () banked
 30454  002338  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 30455                           
 30456                           ; BSR set to: 1
 30457                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 30458  00233A  0E00               	movlw	0
 30459  00233C  6F65               	movwf	AESCmac@i& (0+255),b
 30460  00233E                     l13485:
 30461                           
 30462                           ; BSR set to: 1
 30463  00233E  0E0F               	movlw	15
 30464  002340  6565               	cpfsgt	AESCmac@i& (0+255),b
 30465  002342  D001               	goto	l93
 30466  002344  D036               	goto	u15500
 30467  002346                     l93:
 30468                           
 30469                           ; BSR set to: 1
 30470                           ;lorawan_aes_cmac.c: 76: {
 30471                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 30472                           
 30473                           ; BSR set to: 1
 30474  002346  0100               	movlb	0	; () banked
 30475  002348  51BF               	movf	AESCmac@size& (0+255),w,b
 30476  00234A  0B0F               	andlw	15
 30477  00234C  0101               	movlb	1	; () banked
 30478  00234E  6165               	cpfslt	AESCmac@i& (0+255),b
 30479  002350  D013               	goto	l95
 30480                           
 30481                           ; BSR set to: 1
 30482                           ;lorawan_aes_cmac.c: 78: {
 30483                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 30484  002352  5165               	movf	AESCmac@i& (0+255),w,b
 30485  002354  0D01               	mullw	1
 30486  002356  50F3               	movf	prodl,w,c
 30487  002358  2560               	addwf	AESCmac@ptr& (0+255),w,b
 30488  00235A  6ED9               	movwf	fsr2l,c
 30489  00235C  50F4               	movf	prodh,w,c
 30490  00235E  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 30491  002360  6EDA               	movwf	fsr2h,c
 30492  002362  5165               	movf	AESCmac@i& (0+255),w,b
 30493  002364  0D01               	mullw	1
 30494  002366  0E30               	movlw	low AESCmac@padded
 30495  002368  24F3               	addwf	prodl,w,c
 30496  00236A  6EE9               	movwf	fsr0l,c
 30497  00236C  0E01               	movlw	high AESCmac@padded
 30498  00236E  20F4               	addwfc	prodh,w,c
 30499  002370  6EEA               	movwf	fsr0h,c
 30500  002372  CFDF FFEF          	movff	indf2,indf0
 30501                           
 30502                           ;lorawan_aes_cmac.c: 80: }
 30503  002376  D01B               	goto	l98
 30504  002378                     l95:
 30505                           
 30506                           ; BSR set to: 1
 30507                           ;lorawan_aes_cmac.c: 81: else
 30508                           ;lorawan_aes_cmac.c: 82: {
 30509                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 30510                           
 30511                           ; BSR set to: 1
 30512  002378  0100               	movlb	0	; () banked
 30513  00237A  51BF               	movf	AESCmac@size& (0+255),w,b
 30514  00237C  0B0F               	andlw	15
 30515  00237E  0101               	movlb	1	; () banked
 30516  002380  1965               	xorwf	AESCmac@i& (0+255),w,b
 30517  002382  A4D8               	btfss	status,2,c
 30518  002384  D00A               	goto	l97
 30519                           
 30520                           ; BSR set to: 1
 30521                           ;lorawan_aes_cmac.c: 84: {
 30522                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 30523  002386  5165               	movf	AESCmac@i& (0+255),w,b
 30524  002388  0D01               	mullw	1
 30525  00238A  0E30               	movlw	low AESCmac@padded
 30526  00238C  24F3               	addwf	prodl,w,c
 30527  00238E  6ED9               	movwf	fsr2l,c
 30528  002390  0E01               	movlw	high AESCmac@padded
 30529  002392  20F4               	addwfc	prodh,w,c
 30530  002394  6EDA               	movwf	fsr2h,c
 30531  002396  0E80               	movlw	128
 30532  002398  D009               	goto	L24
 30533  00239A                     l97:
 30534                           
 30535                           ; BSR set to: 1
 30536                           ;lorawan_aes_cmac.c: 87: else
 30537                           ;lorawan_aes_cmac.c: 88: {
 30538                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 30539                           
 30540                           ; BSR set to: 1
 30541  00239A  5165               	movf	AESCmac@i& (0+255),w,b
 30542  00239C  0D01               	mullw	1
 30543  00239E  0E30               	movlw	low AESCmac@padded
 30544  0023A0  24F3               	addwf	prodl,w,c
 30545  0023A2  6ED9               	movwf	fsr2l,c
 30546  0023A4  0E01               	movlw	high AESCmac@padded
 30547  0023A6  20F4               	addwfc	prodh,w,c
 30548  0023A8  6EDA               	movwf	fsr2h,c
 30549  0023AA  0E00               	movlw	0
 30550  0023AC                     L24:
 30551  0023AC  6EDF               	movwf	indf2,c
 30552  0023AE                     l98:
 30553                           
 30554                           ; BSR set to: 1
 30555                           
 30556                           ; BSR set to: 1
 30557                           
 30558                           ; BSR set to: 1
 30559  0023AE  2B65               	incf	AESCmac@i& (0+255),f,b
 30560  0023B0  D7C6               	goto	l13485
 30561  0023B2                     u15500:
 30562                           
 30563                           ; BSR set to: 1
 30564                           ;lorawan_aes_cmac.c: 90: }
 30565                           ;lorawan_aes_cmac.c: 91: }
 30566                           ;lorawan_aes_cmac.c: 92: }
 30567                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 30568                           
 30569                           ; BSR set to: 1
 30570  0023B2  0E00               	movlw	0
 30571  0023B4  6F65               	movwf	AESCmac@i& (0+255),b
 30572  0023B6                     l13505:
 30573                           
 30574                           ; BSR set to: 1
 30575  0023B6  0E0F               	movlw	15
 30576  0023B8  6565               	cpfsgt	AESCmac@i& (0+255),b
 30577  0023BA  D001               	goto	l99
 30578  0023BC  D023               	goto	u15520
 30579  0023BE                     l99:
 30580                           
 30581                           ; BSR set to: 1
 30582                           ;lorawan_aes_cmac.c: 96: {
 30583                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 30584                           
 30585                           ; BSR set to: 1
 30586  0023BE  5165               	movf	AESCmac@i& (0+255),w,b
 30587  0023C0  0D01               	mullw	1
 30588  0023C2  0E20               	movlw	low AESCmac@mLast
 30589  0023C4  24F3               	addwf	prodl,w,c
 30590  0023C6  6ED9               	movwf	fsr2l,c
 30591  0023C8  0E01               	movlw	high AESCmac@mLast
 30592  0023CA  20F4               	addwfc	prodh,w,c
 30593  0023CC  6EDA               	movwf	fsr2h,c
 30594  0023CE  5165               	movf	AESCmac@i& (0+255),w,b
 30595  0023D0  0D01               	mullw	1
 30596  0023D2  0E00               	movlw	low AESCmac@k2
 30597  0023D4  24F3               	addwf	prodl,w,c
 30598  0023D6  6EE9               	movwf	fsr0l,c
 30599  0023D8  0E01               	movlw	high AESCmac@k2
 30600  0023DA  20F4               	addwfc	prodh,w,c
 30601  0023DC  6EEA               	movwf	fsr0h,c
 30602  0023DE  50EF               	movf	indf0,w,c
 30603  0023E0  0100               	movlb	0	; () banked
 30604  0023E2  6FC0               	movwf	??_AESCmac& (0+255),b
 30605  0023E4  0101               	movlb	1	; () banked
 30606  0023E6  5165               	movf	AESCmac@i& (0+255),w,b
 30607  0023E8  0D01               	mullw	1
 30608  0023EA  0E30               	movlw	low AESCmac@padded
 30609  0023EC  24F3               	addwf	prodl,w,c
 30610  0023EE  6EE9               	movwf	fsr0l,c
 30611  0023F0  0E01               	movlw	high AESCmac@padded
 30612  0023F2  20F4               	addwfc	prodh,w,c
 30613  0023F4  6EEA               	movwf	fsr0h,c
 30614  0023F6  50EF               	movf	indf0,w,c
 30615  0023F8  0100               	movlb	0	; () banked
 30616  0023FA  19C0               	xorwf	??_AESCmac& (0+255),w,b
 30617  0023FC  6EDF               	movwf	indf2,c
 30618                           
 30619                           ; BSR set to: 0
 30620  0023FE  0101               	movlb	1	; () banked
 30621  002400  2B65               	incf	AESCmac@i& (0+255),f,b
 30622  002402  D7D9               	goto	l13505
 30623  002404                     u15520:
 30624                           
 30625                           ;lorawan_aes_cmac.c: 98: }
 30626                           ;lorawan_aes_cmac.c: 99: }
 30627                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 30628                           
 30629                           ; BSR set to: 1
 30630                           
 30631                           ; BSR set to: 1
 30632  002404  0E50               	movlw	low AESCmac@x
 30633  002406  0100               	movlb	0	; () banked
 30634  002408  6F60               	movwf	memset@p1& (0+255),b
 30635  00240A  0E01               	movlw	high AESCmac@x
 30636  00240C  6F61               	movwf	(memset@p1+1)& (0+255),b
 30637  00240E  0E00               	movlw	0
 30638  002410  6F63               	movwf	(memset@c+1)& (0+255),b
 30639  002412  0E00               	movlw	0
 30640  002414  6F62               	movwf	memset@c& (0+255),b
 30641  002416  0E00               	movlw	0
 30642  002418  6F65               	movwf	(memset@n+1)& (0+255),b
 30643  00241A  0E10               	movlw	16
 30644  00241C  6F64               	movwf	memset@n& (0+255),b
 30645  00241E  EC6B  F042         	call	_memset	;wreg free
 30646                           
 30647                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 30648  002422  0E00               	movlw	0
 30649  002424  0101               	movlb	1	; () banked
 30650  002426  6F65               	movwf	AESCmac@i& (0+255),b
 30651  002428  D056               	goto	l101
 30652  00242A                     
 30653                           ;lorawan_aes_cmac.c: 104: {
 30654                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 30655                           
 30656                           ; BSR set to: 1
 30657  00242A  0E00               	movlw	0
 30658  00242C  0101               	movlb	1	; () banked
 30659  00242E  6F64               	movwf	AESCmac@j& (0+255),b
 30660  002430                     l13521:
 30661                           
 30662                           ; BSR set to: 1
 30663  002430  0E0F               	movlw	15
 30664  002432  6564               	cpfsgt	AESCmac@j& (0+255),b
 30665  002434  D001               	goto	l103
 30666  002436  D033               	goto	u15540
 30667  002438                     l103:
 30668                           
 30669                           ; BSR set to: 1
 30670                           ;lorawan_aes_cmac.c: 106: {
 30671                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 30672                           
 30673                           ; BSR set to: 1
 30674  002438  5164               	movf	AESCmac@j& (0+255),w,b
 30675  00243A  0D01               	mullw	1
 30676  00243C  0E40               	movlw	low AESCmac@y
 30677  00243E  24F3               	addwf	prodl,w,c
 30678  002440  6ED9               	movwf	fsr2l,c
 30679  002442  0E01               	movlw	high AESCmac@y
 30680  002444  20F4               	addwfc	prodh,w,c
 30681  002446  6EDA               	movwf	fsr2h,c
 30682  002448  5165               	movf	AESCmac@i& (0+255),w,b
 30683  00244A  0100               	movlb	0	; () banked
 30684  00244C  6FC0               	movwf	??_AESCmac& (0+255),b
 30685  00244E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 30686  002450  3BC0               	swapf	??_AESCmac& (0+255),f,b
 30687  002452  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 30688  002454  0EF0               	movlw	240
 30689  002456  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 30690  002458  51C0               	movf	??_AESCmac& (0+255),w,b
 30691  00245A  0B0F               	andlw	15
 30692  00245C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 30693  00245E  0EF0               	movlw	240
 30694  002460  17C0               	andwf	??_AESCmac& (0+255),f,b
 30695  002462  0101               	movlb	1	; () banked
 30696  002464  5164               	movf	AESCmac@j& (0+255),w,b
 30697  002466  0100               	movlb	0	; () banked
 30698  002468  27C0               	addwf	??_AESCmac& (0+255),f,b
 30699  00246A  0E00               	movlw	0
 30700  00246C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 30701  00246E  51C0               	movf	??_AESCmac& (0+255),w,b
 30702  002470  25BD               	addwf	AESCmac@input& (0+255),w,b
 30703  002472  6EE9               	movwf	fsr0l,c
 30704  002474  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30705  002476  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 30706  002478  6EEA               	movwf	fsr0h,c
 30707  00247A  50EF               	movf	indf0,w,c
 30708  00247C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30709  00247E  0101               	movlb	1	; () banked
 30710  002480  5164               	movf	AESCmac@j& (0+255),w,b
 30711  002482  0D01               	mullw	1
 30712  002484  0E50               	movlw	low AESCmac@x
 30713  002486  24F3               	addwf	prodl,w,c
 30714  002488  6EE9               	movwf	fsr0l,c
 30715  00248A  0E01               	movlw	high AESCmac@x
 30716  00248C  20F4               	addwfc	prodh,w,c
 30717  00248E  6EEA               	movwf	fsr0h,c
 30718  002490  50EF               	movf	indf0,w,c
 30719  002492  0100               	movlb	0	; () banked
 30720  002494  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 30721  002496  6EDF               	movwf	indf2,c
 30722                           
 30723                           ; BSR set to: 0
 30724  002498  0101               	movlb	1	; () banked
 30725  00249A  2B64               	incf	AESCmac@j& (0+255),f,b
 30726  00249C  D7C9               	goto	l13521
 30727  00249E                     u15540:
 30728                           
 30729                           ; BSR set to: 1
 30730                           ;lorawan_aes_cmac.c: 108: }
 30731                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 30732                           
 30733                           ; BSR set to: 1
 30734  00249E  0E50               	movlw	low AESCmac@x
 30735  0024A0  0100               	movlb	0	; () banked
 30736  0024A2  6F60               	movwf	memcpy@d1& (0+255),b
 30737  0024A4  0E01               	movlw	high AESCmac@x
 30738  0024A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30739  0024A8  0E40               	movlw	low AESCmac@y
 30740  0024AA  6F62               	movwf	memcpy@s1& (0+255),b
 30741  0024AC  0E01               	movlw	high AESCmac@y
 30742  0024AE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30743  0024B0  0E00               	movlw	0
 30744  0024B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30745  0024B4  0E10               	movlw	16
 30746  0024B6  6F64               	movwf	memcpy@n& (0+255),b
 30747  0024B8  EC37  F03D         	call	_memcpy	;wreg free
 30748                           
 30749                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 30750  0024BC  0E50               	movlw	low AESCmac@x
 30751  0024BE  0100               	movlb	0	; () banked
 30752  0024C0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 30753  0024C2  0E01               	movlw	high AESCmac@x
 30754  0024C4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30755  0024C6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 30756  0024CA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30757  0024CE  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 30758  0024D2  0101               	movlb	1	; () banked
 30759  0024D4  2B65               	incf	AESCmac@i& (0+255),f,b
 30760  0024D6                     l101:
 30761                           
 30762                           ; BSR set to: 1
 30763                           
 30764                           ; BSR set to: 1
 30765  0024D6  0EFF               	movlw	255
 30766  0024D8  0100               	movlb	0	; () banked
 30767  0024DA  6FC0               	movwf	??_AESCmac& (0+255),b
 30768  0024DC  0EFF               	movlw	255
 30769  0024DE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 30770  0024E0  0101               	movlb	1	; () banked
 30771  0024E2  5163               	movf	AESCmac@n& (0+255),w,b
 30772  0024E4  0100               	movlb	0	; () banked
 30773  0024E6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 30774  0024E8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 30775  0024EA  51C0               	movf	??_AESCmac& (0+255),w,b
 30776  0024EC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 30777  0024EE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 30778  0024F0  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 30779  0024F2  0101               	movlb	1	; () banked
 30780  0024F4  5165               	movf	AESCmac@i& (0+255),w,b
 30781  0024F6  0100               	movlb	0	; () banked
 30782  0024F8  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 30783  0024FA  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 30784  0024FC  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 30785  0024FE  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 30786  002500  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 30787  002502  0A80               	xorlw	128
 30788  002504  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 30789  002506  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 30790  002508  0A80               	xorlw	128
 30791  00250A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 30792  00250C  A0D8               	btfss	status,0,c
 30793  00250E  D78D               	goto	l102
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;lorawan_aes_cmac.c: 111: }
 30797                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 30798                           
 30799                           ; BSR set to: 0
 30800  002510  0E00               	movlw	0
 30801  002512  0101               	movlb	1	; () banked
 30802  002514  6F65               	movwf	AESCmac@i& (0+255),b
 30803  002516                     l13541:
 30804                           
 30805                           ; BSR set to: 1
 30806  002516  0E0F               	movlw	15
 30807  002518  6565               	cpfsgt	AESCmac@i& (0+255),b
 30808  00251A  D001               	goto	l106
 30809  00251C  D023               	goto	u15570
 30810  00251E                     l106:
 30811                           
 30812                           ; BSR set to: 1
 30813                           ;lorawan_aes_cmac.c: 114: {
 30814                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 30815                           
 30816                           ; BSR set to: 1
 30817  00251E  5165               	movf	AESCmac@i& (0+255),w,b
 30818  002520  0D01               	mullw	1
 30819  002522  0E40               	movlw	low AESCmac@y
 30820  002524  24F3               	addwf	prodl,w,c
 30821  002526  6ED9               	movwf	fsr2l,c
 30822  002528  0E01               	movlw	high AESCmac@y
 30823  00252A  20F4               	addwfc	prodh,w,c
 30824  00252C  6EDA               	movwf	fsr2h,c
 30825  00252E  5165               	movf	AESCmac@i& (0+255),w,b
 30826  002530  0D01               	mullw	1
 30827  002532  0E20               	movlw	low AESCmac@mLast
 30828  002534  24F3               	addwf	prodl,w,c
 30829  002536  6EE9               	movwf	fsr0l,c
 30830  002538  0E01               	movlw	high AESCmac@mLast
 30831  00253A  20F4               	addwfc	prodh,w,c
 30832  00253C  6EEA               	movwf	fsr0h,c
 30833  00253E  50EF               	movf	indf0,w,c
 30834  002540  0100               	movlb	0	; () banked
 30835  002542  6FC0               	movwf	??_AESCmac& (0+255),b
 30836  002544  0101               	movlb	1	; () banked
 30837  002546  5165               	movf	AESCmac@i& (0+255),w,b
 30838  002548  0D01               	mullw	1
 30839  00254A  0E50               	movlw	low AESCmac@x
 30840  00254C  24F3               	addwf	prodl,w,c
 30841  00254E  6EE9               	movwf	fsr0l,c
 30842  002550  0E01               	movlw	high AESCmac@x
 30843  002552  20F4               	addwfc	prodh,w,c
 30844  002554  6EEA               	movwf	fsr0h,c
 30845  002556  50EF               	movf	indf0,w,c
 30846  002558  0100               	movlb	0	; () banked
 30847  00255A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 30848  00255C  6EDF               	movwf	indf2,c
 30849                           
 30850                           ; BSR set to: 0
 30851  00255E  0101               	movlb	1	; () banked
 30852  002560  2B65               	incf	AESCmac@i& (0+255),f,b
 30853  002562  D7D9               	goto	l13541
 30854  002564                     u15570:
 30855                           
 30856                           ; BSR set to: 1
 30857                           ;lorawan_aes_cmac.c: 116: }
 30858                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 30859                           
 30860                           ; BSR set to: 1
 30861  002564  0E40               	movlw	low AESCmac@y
 30862  002566  0100               	movlb	0	; () banked
 30863  002568  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 30864  00256A  0E01               	movlw	high AESCmac@y
 30865  00256C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30866  00256E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 30867  002572  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30868  002576  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 30869                           
 30870                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 30871  00257A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 30872  00257E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 30873  002582  0E40               	movlw	low AESCmac@y
 30874  002584  0100               	movlb	0	; () banked
 30875  002586  6F62               	movwf	memcpy@s1& (0+255),b
 30876  002588  0E01               	movlw	high AESCmac@y
 30877  00258A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30878  00258C  0E00               	movlw	0
 30879  00258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30880  002590  0E10               	movlw	16
 30881  002592  6F64               	movwf	memcpy@n& (0+255),b
 30882  002594  EC37  F03D         	call	_memcpy	;wreg free
 30883  002598  0012               	return		;funcret
 30884  00259A                     __end_of_AESCmac:
 30885                           	opt stack 0
 30886                           tosu	equ	0xFFF
 30887                           tosh	equ	0xFFE
 30888                           tosl	equ	0xFFD
 30889                           pclath	equ	0xFFA
 30890                           tblptru	equ	0xFF8
 30891                           tblptrh	equ	0xFF7
 30892                           tblptrl	equ	0xFF6
 30893                           tablat	equ	0xFF5
 30894                           prodh	equ	0xFF4
 30895                           prodl	equ	0xFF3
 30896                           intcon	equ	0xFF2
 30897                           intcon2	equ	0xFF1
 30898                           intcon3	equ	0xFF0
 30899                           indf0	equ	0xFEF
 30900                           postinc0	equ	0xFEE
 30901                           fsr0h	equ	0xFEA
 30902                           fsr0l	equ	0xFE9
 30903                           wreg	equ	0xFE8
 30904                           postinc1	equ	0xFE6
 30905                           postdec1	equ	0xFE5
 30906                           plusw1	equ	0xFE3
 30907                           fsr1h	equ	0xFE2
 30908                           fsr1l	equ	0xFE1
 30909                           indf2	equ	0xFDF
 30910                           postinc2	equ	0xFDE
 30911                           postdec2	equ	0xFDD
 30912                           plusw2	equ	0xFDB
 30913                           fsr2h	equ	0xFDA
 30914                           fsr2l	equ	0xFD9
 30915                           status	equ	0xFD8
 30916                           
 30917 ;; *************** function _GenerateSubkey *****************
 30918 ;; Defined at:
 30919 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30920 ;; Parameters:    Size  Location     Type
 30921 ;;  key             2   49[BANK0 ] PTR unsigned char 
 30922 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30923 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 30924 ;;		 -> AESCmac@k1(16), 
 30925 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 30926 ;;		 -> AESCmac@k2(16), 
 30927 ;; Auto vars:     Size  Location     Type
 30928 ;;  l              16   72[BANK0 ] unsigned char [16]
 30929 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 30930 ;;  i               1   88[BANK0 ] unsigned char 
 30931 ;; Return value:  Size  Location     Type
 30932 ;;                  1    wreg      void 
 30933 ;; Registers used:
 30934 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30935 ;; Tracked objects:
 30936 ;;		On entry : 0/0
 30937 ;;		On exit  : 0/0
 30938 ;;		Unchanged: 0/0
 30939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30940 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30941 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30943 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30944 ;;Total ram usage:       40 bytes
 30945 ;; Hardware stack levels used:    1
 30946 ;; Hardware stack levels required when called:   10
 30947 ;; This function calls:
 30948 ;;		_AESEncodeLoRa
 30949 ;;		_FillSubKey
 30950 ;;		_memset
 30951 ;; This function is called by:
 30952 ;;		_AESCmac
 30953 ;; This function uses a non-reentrant model
 30954 ;;
 30955                           
 30956                           	psect	text142
 30957  0054F2                     __ptext142:
 30958                           	opt stack 0
 30959  0054F2                     _GenerateSubkey:
 30960                           	opt stack 17
 30961                           
 30962                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 30963                           
 30964                           ;incstack = 0
 30965  0054F2  0E00               	movlw	0
 30966  0054F4  0100               	movlb	0	; () banked
 30967  0054F6  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 30968                           
 30969                           ; BSR set to: 0
 30970                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 30971                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 30972                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 30973  0054F8  EE21  F0C0         	lfsr	2,GenerateSubkey@F7103
 30974  0054FC  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 30975  005500  0E0F               	movlw	15
 30976  005502                     u14911:
 30977  005502  CFDB FFEB          	movff	plusw2,plusw0
 30978  005506  06E8               	decf	wreg,f,c
 30979  005508  E2FC               	bc	u14911
 30980                           
 30981                           ; BSR set to: 0
 30982                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 30983  00550A  0EA8               	movlw	low GenerateSubkey@l
 30984  00550C  6F60               	movwf	memset@p1& (0+255),b
 30985  00550E  0E00               	movlw	high GenerateSubkey@l
 30986  005510  6F61               	movwf	(memset@p1+1)& (0+255),b
 30987  005512  0E00               	movlw	0
 30988  005514  6F63               	movwf	(memset@c+1)& (0+255),b
 30989  005516  0E00               	movlw	0
 30990  005518  6F62               	movwf	memset@c& (0+255),b
 30991  00551A  0E00               	movlw	0
 30992  00551C  6F65               	movwf	(memset@n+1)& (0+255),b
 30993  00551E  0E10               	movlw	16
 30994  005520  6F64               	movwf	memset@n& (0+255),b
 30995  005522  EC6B  F042         	call	_memset	;wreg free
 30996                           
 30997                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 30998  005526  0EA8               	movlw	low GenerateSubkey@l
 30999  005528  0100               	movlb	0	; () banked
 31000  00552A  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 31001  00552C  0E00               	movlw	high GenerateSubkey@l
 31002  00552E  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 31003  005530  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 31004  005534  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 31005  005538  ECBD  F041         	call	_AESEncodeLoRa	;wreg free
 31006                           
 31007                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 31008  00553C  0100               	movlb	0	; () banked
 31009  00553E  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 31010  005540  D00D               	goto	l113
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;lorawan_aes_cmac.c: 138: {
 31014                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 31015  005542  0EA8               	movlw	low GenerateSubkey@l
 31016  005544  6F60               	movwf	FillSubKey@source& (0+255),b
 31017  005546  0E00               	movlw	high GenerateSubkey@l
 31018  005548  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 31019  00554A  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 31020  00554E  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31021  005552  0E10               	movlw	16
 31022  005554  6F64               	movwf	FillSubKey@size& (0+255),b
 31023  005556  ECA5  F03C         	call	_FillSubKey	;wreg free
 31024                           
 31025                           ;lorawan_aes_cmac.c: 140: }
 31026  00555A  D02A               	goto	u14940
 31027  00555C                     l113:
 31028                           
 31029                           ;lorawan_aes_cmac.c: 141: else
 31030                           ;lorawan_aes_cmac.c: 142: {
 31031                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 31032  00555C  0EA8               	movlw	low GenerateSubkey@l
 31033  00555E  0100               	movlb	0	; () banked
 31034  005560  6F60               	movwf	FillSubKey@source& (0+255),b
 31035  005562  0E00               	movlw	high GenerateSubkey@l
 31036  005564  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 31037  005566  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 31038  00556A  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 31039  00556E  0E10               	movlw	16
 31040  005570  6F64               	movwf	FillSubKey@size& (0+255),b
 31041  005572  ECA5  F03C         	call	_FillSubKey	;wreg free
 31042                           
 31043                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 31044  005576  0E00               	movlw	0
 31045  005578  0100               	movlb	0	; () banked
 31046  00557A  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 31047  00557C                     l13095:
 31048                           
 31049                           ; BSR set to: 0
 31050  00557C  0E0F               	movlw	15
 31051  00557E  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 31052  005580  D001               	goto	l115
 31053  005582  D016               	goto	u14940
 31054  005584                     l115:
 31055                           
 31056                           ; BSR set to: 0
 31057                           ;lorawan_aes_cmac.c: 146: {
 31058                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 31059                           
 31060                           ; BSR set to: 0
 31061  005584  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31062  005586  0D01               	mullw	1
 31063  005588  0E98               	movlw	low GenerateSubkey@const_Rb
 31064  00558A  24F3               	addwf	prodl,w,c
 31065  00558C  6ED9               	movwf	fsr2l,c
 31066  00558E  0E00               	movlw	high GenerateSubkey@const_Rb
 31067  005590  20F4               	addwfc	prodh,w,c
 31068  005592  6EDA               	movwf	fsr2h,c
 31069  005594  50DF               	movf	indf2,w,c
 31070  005596  6F97               	movwf	??_GenerateSubkey& (0+255),b
 31071  005598  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31072  00559A  0D01               	mullw	1
 31073  00559C  50F3               	movf	prodl,w,c
 31074  00559E  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 31075  0055A0  6ED9               	movwf	fsr2l,c
 31076  0055A2  50F4               	movf	prodh,w,c
 31077  0055A4  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 31078  0055A6  6EDA               	movwf	fsr2h,c
 31079  0055A8  5197               	movf	??_GenerateSubkey& (0+255),w,b
 31080  0055AA  1ADF               	xorwf	indf2,f,c
 31081                           
 31082                           ; BSR set to: 0
 31083  0055AC  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 31084  0055AE  D7E6               	goto	l13095
 31085  0055B0                     u14940:
 31086                           
 31087                           ;lorawan_aes_cmac.c: 148: }
 31088                           ;lorawan_aes_cmac.c: 149: }
 31089                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 31090                           
 31091                           ; BSR set to: 0
 31092                           
 31093                           ; BSR set to: 0
 31094  0055B0  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 31095  0055B4  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 31096  0055B8  0100               	movlb	0	; () banked
 31097  0055BA  BEDF               	btfsc	indf2,7,c
 31098  0055BC  D00D               	goto	l117
 31099                           
 31100                           ; BSR set to: 0
 31101                           ;lorawan_aes_cmac.c: 153: {
 31102                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 31103  0055BE  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 31104  0055C2  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31105  0055C6  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 31106  0055CA  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31107  0055CE  0E10               	movlw	16
 31108  0055D0  6F64               	movwf	FillSubKey@size& (0+255),b
 31109  0055D2  ECA5  F03C         	call	_FillSubKey	;wreg free
 31110                           
 31111                           ;lorawan_aes_cmac.c: 155: }
 31112  0055D6  0012               	return	
 31113  0055D8                     l117:
 31114                           
 31115                           ;lorawan_aes_cmac.c: 156: else
 31116                           ;lorawan_aes_cmac.c: 157: {
 31117                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 31118  0055D8  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 31119  0055DC  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 31120  0055E0  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 31121  0055E4  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 31122  0055E8  0E10               	movlw	16
 31123  0055EA  0100               	movlb	0	; () banked
 31124  0055EC  6F64               	movwf	FillSubKey@size& (0+255),b
 31125  0055EE  ECA5  F03C         	call	_FillSubKey	;wreg free
 31126                           
 31127                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 31128  0055F2  0E00               	movlw	0
 31129  0055F4  0100               	movlb	0	; () banked
 31130  0055F6  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 31131  0055F8                     l13113:
 31132                           
 31133                           ; BSR set to: 0
 31134  0055F8  0E0F               	movlw	15
 31135  0055FA  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 31136  0055FC  D001               	goto	l119
 31137  0055FE  0012               	return	
 31138  005600                     l119:
 31139                           
 31140                           ; BSR set to: 0
 31141                           ;lorawan_aes_cmac.c: 161: {
 31142                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 31143                           
 31144                           ; BSR set to: 0
 31145  005600  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31146  005602  0D01               	mullw	1
 31147  005604  50F3               	movf	prodl,w,c
 31148  005606  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 31149  005608  6ED9               	movwf	fsr2l,c
 31150  00560A  50F4               	movf	prodh,w,c
 31151  00560C  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31152  00560E  6EDA               	movwf	fsr2h,c
 31153  005610  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31154  005612  0D01               	mullw	1
 31155  005614  0E98               	movlw	low GenerateSubkey@const_Rb
 31156  005616  24F3               	addwf	prodl,w,c
 31157  005618  6EE9               	movwf	fsr0l,c
 31158  00561A  0E00               	movlw	high GenerateSubkey@const_Rb
 31159  00561C  20F4               	addwfc	prodh,w,c
 31160  00561E  6EEA               	movwf	fsr0h,c
 31161  005620  50EF               	movf	indf0,w,c
 31162  005622  6F97               	movwf	??_GenerateSubkey& (0+255),b
 31163  005624  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 31164  005626  0D01               	mullw	1
 31165  005628  50F3               	movf	prodl,w,c
 31166  00562A  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 31167  00562C  6EE9               	movwf	fsr0l,c
 31168  00562E  50F4               	movf	prodh,w,c
 31169  005630  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 31170  005632  6EEA               	movwf	fsr0h,c
 31171  005634  50EF               	movf	indf0,w,c
 31172  005636  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 31173  005638  6EDF               	movwf	indf2,c
 31174                           
 31175                           ; BSR set to: 0
 31176  00563A  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 31177  00563C  D7DD               	goto	l13113
 31178  00563E                     __end_of_GenerateSubkey:
 31179                           	opt stack 0
 31180                           tosu	equ	0xFFF
 31181                           tosh	equ	0xFFE
 31182                           tosl	equ	0xFFD
 31183                           pclath	equ	0xFFA
 31184                           tblptru	equ	0xFF8
 31185                           tblptrh	equ	0xFF7
 31186                           tblptrl	equ	0xFF6
 31187                           tablat	equ	0xFF5
 31188                           prodh	equ	0xFF4
 31189                           prodl	equ	0xFF3
 31190                           intcon	equ	0xFF2
 31191                           intcon2	equ	0xFF1
 31192                           intcon3	equ	0xFF0
 31193                           indf0	equ	0xFEF
 31194                           postinc0	equ	0xFEE
 31195                           plusw0	equ	0xFEB
 31196                           fsr0h	equ	0xFEA
 31197                           fsr0l	equ	0xFE9
 31198                           wreg	equ	0xFE8
 31199                           postinc1	equ	0xFE6
 31200                           postdec1	equ	0xFE5
 31201                           plusw1	equ	0xFE3
 31202                           fsr1h	equ	0xFE2
 31203                           fsr1l	equ	0xFE1
 31204                           indf2	equ	0xFDF
 31205                           postinc2	equ	0xFDE
 31206                           postdec2	equ	0xFDD
 31207                           plusw2	equ	0xFDB
 31208                           fsr2h	equ	0xFDA
 31209                           fsr2l	equ	0xFD9
 31210                           status	equ	0xFD8
 31211                           
 31212 ;; *************** function _FillSubKey *****************
 31213 ;; Defined at:
 31214 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 31215 ;; Parameters:    Size  Location     Type
 31216 ;;  source          2    0[BANK0 ] PTR unsigned char 
 31217 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 31218 ;;  key             2    2[BANK0 ] PTR unsigned char 
 31219 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 31220 ;;  size            1    4[BANK0 ] unsigned char 
 31221 ;; Auto vars:     Size  Location     Type
 31222 ;;  i               1    7[BANK0 ] unsigned char 
 31223 ;;  carry           1    6[BANK0 ] unsigned char 
 31224 ;; Return value:  Size  Location     Type
 31225 ;;                  1    wreg      void 
 31226 ;; Registers used:
 31227 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31228 ;; Tracked objects:
 31229 ;;		On entry : 0/0
 31230 ;;		On exit  : 0/0
 31231 ;;		Unchanged: 0/0
 31232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31233 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31236 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31237 ;;Total ram usage:        8 bytes
 31238 ;; Hardware stack levels used:    1
 31239 ;; Hardware stack levels required when called:    7
 31240 ;; This function calls:
 31241 ;;		Nothing
 31242 ;; This function is called by:
 31243 ;;		_GenerateSubkey
 31244 ;; This function uses a non-reentrant model
 31245 ;;
 31246                           
 31247                           	psect	text143
 31248  00794A                     __ptext143:
 31249                           	opt stack 0
 31250  00794A                     _FillSubKey:
 31251                           	opt stack 19
 31252                           
 31253                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 31254                           
 31255                           ;incstack = 0
 31256  00794A  0E00               	movlw	0
 31257  00794C  0100               	movlb	0	; () banked
 31258  00794E  6F67               	movwf	FillSubKey@i& (0+255),b
 31259                           
 31260                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 31261  007950  0E00               	movlw	0
 31262  007952  6F66               	movwf	FillSubKey@carry& (0+255),b
 31263                           
 31264                           ; BSR set to: 0
 31265                           ;lorawan_aes_cmac.c: 172: i=size;
 31266  007954  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 31267                           
 31268                           ;lorawan_aes_cmac.c: 174: while(i--)
 31269  007958  D024               	goto	l124
 31270  00795A                     
 31271                           ; BSR set to: 0
 31272                           ;lorawan_aes_cmac.c: 175: {
 31273                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 31274                           
 31275                           ; BSR set to: 0
 31276  00795A  5167               	movf	FillSubKey@i& (0+255),w,b
 31277  00795C  0D01               	mullw	1
 31278  00795E  50F3               	movf	prodl,w,c
 31279  007960  2562               	addwf	FillSubKey@key& (0+255),w,b
 31280  007962  6ED9               	movwf	fsr2l,c
 31281  007964  50F4               	movf	prodh,w,c
 31282  007966  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 31283  007968  6EDA               	movwf	fsr2h,c
 31284  00796A  5167               	movf	FillSubKey@i& (0+255),w,b
 31285  00796C  0D01               	mullw	1
 31286  00796E  50F3               	movf	prodl,w,c
 31287  007970  2560               	addwf	FillSubKey@source& (0+255),w,b
 31288  007972  6EE9               	movwf	fsr0l,c
 31289  007974  50F4               	movf	prodh,w,c
 31290  007976  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31291  007978  6EEA               	movwf	fsr0h,c
 31292  00797A  50EF               	movf	indf0,w,c
 31293  00797C  6F65               	movwf	??_FillSubKey& (0+255),b
 31294  00797E  90D8               	bcf	status,0,c
 31295  007980  3565               	rlcf	??_FillSubKey& (0+255),w,b
 31296  007982  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 31297  007984  6EDF               	movwf	indf2,c
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 31301  007986  5167               	movf	FillSubKey@i& (0+255),w,b
 31302  007988  0D01               	mullw	1
 31303  00798A  50F3               	movf	prodl,w,c
 31304  00798C  2560               	addwf	FillSubKey@source& (0+255),w,b
 31305  00798E  6ED9               	movwf	fsr2l,c
 31306  007990  50F4               	movf	prodh,w,c
 31307  007992  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 31308  007994  6EDA               	movwf	fsr2h,c
 31309  007996  AEDF               	btfss	indf2,7,c
 31310  007998  D002               	goto	u14420
 31311  00799A  0E01               	movlw	1
 31312  00799C  D001               	goto	u14430
 31313  00799E                     u14420:
 31314  00799E  0E00               	movlw	0
 31315  0079A0                     u14430:
 31316  0079A0  6F66               	movwf	FillSubKey@carry& (0+255),b
 31317  0079A2                     l124:
 31318                           
 31319                           ; BSR set to: 0
 31320                           
 31321                           ; BSR set to: 0
 31322  0079A2  0767               	decf	FillSubKey@i& (0+255),f,b
 31323  0079A4  2967               	incf	FillSubKey@i& (0+255),w,b
 31324  0079A6  B4D8               	btfsc	status,2,c
 31325  0079A8  0012               	return	
 31326  0079AA  D7D7               	goto	l125
 31327  0079AC                     __end_of_FillSubKey:
 31328                           	opt stack 0
 31329                           tosu	equ	0xFFF
 31330                           tosh	equ	0xFFE
 31331                           tosl	equ	0xFFD
 31332                           pclath	equ	0xFFA
 31333                           tblptru	equ	0xFF8
 31334                           tblptrh	equ	0xFF7
 31335                           tblptrl	equ	0xFF6
 31336                           tablat	equ	0xFF5
 31337                           prodh	equ	0xFF4
 31338                           prodl	equ	0xFF3
 31339                           intcon	equ	0xFF2
 31340                           intcon2	equ	0xFF1
 31341                           intcon3	equ	0xFF0
 31342                           indf0	equ	0xFEF
 31343                           postinc0	equ	0xFEE
 31344                           plusw0	equ	0xFEB
 31345                           fsr0h	equ	0xFEA
 31346                           fsr0l	equ	0xFE9
 31347                           wreg	equ	0xFE8
 31348                           postinc1	equ	0xFE6
 31349                           postdec1	equ	0xFE5
 31350                           plusw1	equ	0xFE3
 31351                           fsr1h	equ	0xFE2
 31352                           fsr1l	equ	0xFE1
 31353                           indf2	equ	0xFDF
 31354                           postinc2	equ	0xFDE
 31355                           postdec2	equ	0xFDD
 31356                           plusw2	equ	0xFDB
 31357                           fsr2h	equ	0xFDA
 31358                           fsr2l	equ	0xFD9
 31359                           status	equ	0xFD8
 31360                           
 31361 ;; *************** function _AESEncodeLoRa *****************
 31362 ;; Defined at:
 31363 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 31364 ;; Parameters:    Size  Location     Type
 31365 ;;  block           2   29[BANK0 ] PTR unsigned char 
 31366 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31367 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31368 ;;  key             2   31[BANK0 ] PTR unsigned char 
 31369 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31370 ;; Auto vars:     Size  Location     Type
 31371 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 31372 ;; Return value:  Size  Location     Type
 31373 ;;                  1    wreg      void 
 31374 ;; Registers used:
 31375 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31376 ;; Tracked objects:
 31377 ;;		On entry : 0/0
 31378 ;;		On exit  : 0/0
 31379 ;;		Unchanged: 0/0
 31380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31382 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31384 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31385 ;;Total ram usage:       20 bytes
 31386 ;; Hardware stack levels used:    1
 31387 ;; Hardware stack levels required when called:    9
 31388 ;; This function calls:
 31389 ;;		_AESEncode
 31390 ;;		_memcpy
 31391 ;; This function is called by:
 31392 ;;		_AESCmac
 31393 ;;		_GenerateSubkey
 31394 ;;		_LORAWAN_RxDone
 31395 ;;		_ComputeSessionKeys
 31396 ;;		_EncryptFRMPayload
 31397 ;; This function uses a non-reentrant model
 31398 ;;
 31399                           
 31400                           	psect	text144
 31401  00837A                     __ptext144:
 31402                           	opt stack 0
 31403  00837A                     _AESEncodeLoRa:
 31404                           	opt stack 18
 31405                           
 31406                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 31407                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 31408                           
 31409                           ; BSR set to: 0
 31410                           ;incstack = 0
 31411  00837A  0E81               	movlw	low AESEncodeLoRa@useKey
 31412  00837C  0100               	movlb	0	; () banked
 31413  00837E  6F60               	movwf	memcpy@d1& (0+255),b
 31414  008380  0E00               	movlw	high AESEncodeLoRa@useKey
 31415  008382  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31416  008384  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 31417  008388  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 31418  00838C  0E00               	movlw	0
 31419  00838E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31420  008390  0E10               	movlw	16
 31421  008392  6F64               	movwf	memcpy@n& (0+255),b
 31422  008394  EC37  F03D         	call	_memcpy	;wreg free
 31423                           
 31424                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 31425  008398  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 31426  00839C  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 31427  0083A0  0E81               	movlw	low AESEncodeLoRa@useKey
 31428  0083A2  0100               	movlb	0	; () banked
 31429  0083A4  6F68               	movwf	AESEncode@key& (0+255),b
 31430  0083A6  0E00               	movlw	high AESEncodeLoRa@useKey
 31431  0083A8  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 31432  0083AA  EC7F  F014         	call	_AESEncode	;wreg free
 31433  0083AE  0012               	return		;funcret
 31434  0083B0                     __end_of_AESEncodeLoRa:
 31435                           	opt stack 0
 31436                           tosu	equ	0xFFF
 31437                           tosh	equ	0xFFE
 31438                           tosl	equ	0xFFD
 31439                           pclath	equ	0xFFA
 31440                           tblptru	equ	0xFF8
 31441                           tblptrh	equ	0xFF7
 31442                           tblptrl	equ	0xFF6
 31443                           tablat	equ	0xFF5
 31444                           prodh	equ	0xFF4
 31445                           prodl	equ	0xFF3
 31446                           intcon	equ	0xFF2
 31447                           intcon2	equ	0xFF1
 31448                           intcon3	equ	0xFF0
 31449                           indf0	equ	0xFEF
 31450                           postinc0	equ	0xFEE
 31451                           plusw0	equ	0xFEB
 31452                           fsr0h	equ	0xFEA
 31453                           fsr0l	equ	0xFE9
 31454                           wreg	equ	0xFE8
 31455                           postinc1	equ	0xFE6
 31456                           postdec1	equ	0xFE5
 31457                           plusw1	equ	0xFE3
 31458                           fsr1h	equ	0xFE2
 31459                           fsr1l	equ	0xFE1
 31460                           indf2	equ	0xFDF
 31461                           postinc2	equ	0xFDE
 31462                           postdec2	equ	0xFDD
 31463                           plusw2	equ	0xFDB
 31464                           fsr2h	equ	0xFDA
 31465                           fsr2l	equ	0xFD9
 31466                           status	equ	0xFD8
 31467                           
 31468 ;; *************** function _AESEncode *****************
 31469 ;; Defined at:
 31470 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 31471 ;; Parameters:    Size  Location     Type
 31472 ;;  block           2    6[BANK0 ] PTR unsigned char 
 31473 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 31474 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 31475 ;;  key             2    8[BANK0 ] PTR unsigned char 
 31476 ;;		 -> AESEncodeLoRa@useKey(16), 
 31477 ;; Auto vars:     Size  Location     Type
 31478 ;;  aux3            1   27[BANK0 ] unsigned char 
 31479 ;;  aux1            1   26[BANK0 ] unsigned char 
 31480 ;;  aux2            1   25[BANK0 ] unsigned char 
 31481 ;;  aux             1   24[BANK0 ] unsigned char 
 31482 ;;  i               1   28[BANK0 ] unsigned char 
 31483 ;;  temp            1    0        unsigned char 
 31484 ;; Return value:  Size  Location     Type
 31485 ;;                  1    wreg      void 
 31486 ;; Registers used:
 31487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31488 ;; Tracked objects:
 31489 ;;		On entry : 0/0
 31490 ;;		On exit  : 0/0
 31491 ;;		Unchanged: 0/0
 31492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31494 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31497 ;;Total ram usage:       23 bytes
 31498 ;; Hardware stack levels used:    1
 31499 ;; Hardware stack levels required when called:    8
 31500 ;; This function calls:
 31501 ;;		_EncKeySchedule
 31502 ;;		_EncodeShiftRow
 31503 ;; This function is called by:
 31504 ;;		_AESEncodeLoRa
 31505 ;; This function uses a non-reentrant model
 31506 ;;
 31507                           
 31508                           	psect	text145
 31509  0028FE                     __ptext145:
 31510                           	opt stack 0
 31511  0028FE                     _AESEncode:
 31512                           	opt stack 18
 31513                           
 31514                           ;AES.c: 250: unsigned char i;
 31515                           ;AES.c: 251: unsigned char temp;
 31516                           ;AES.c: 254: _roundCounter = 10;
 31517                           
 31518                           ;incstack = 0
 31519  0028FE  0E0A               	movlw	10
 31520  002900  0101               	movlb	1	; () banked
 31521  002902  6F78               	movwf	__roundCounter& (0+255),b
 31522                           
 31523                           ;AES.c: 256: _rcon = 0x01;
 31524  002904  0E01               	movlw	1
 31525  002906  6E46               	movwf	__rcon,c
 31526                           
 31527                           ;AES.c: 259: for(i=0;i<16;i++)
 31528  002908  0E00               	movlw	0
 31529  00290A  0100               	movlb	0	; () banked
 31530  00290C  6F7C               	movwf	AESEncode@i& (0+255),b
 31531  00290E                     l12629:
 31532                           
 31533                           ; BSR set to: 0
 31534  00290E  0E0F               	movlw	15
 31535  002910  657C               	cpfsgt	AESEncode@i& (0+255),b
 31536  002912  D001               	goto	l348
 31537  002914  D016               	goto	u14210
 31538  002916                     l348:
 31539                           
 31540                           ; BSR set to: 0
 31541                           ;AES.c: 260: {
 31542                           ;AES.c: 261: block[i] ^= key[i];
 31543                           
 31544                           ; BSR set to: 0
 31545  002916  517C               	movf	AESEncode@i& (0+255),w,b
 31546  002918  0D01               	mullw	1
 31547  00291A  50F3               	movf	prodl,w,c
 31548  00291C  2568               	addwf	AESEncode@key& (0+255),w,b
 31549  00291E  6ED9               	movwf	fsr2l,c
 31550  002920  50F4               	movf	prodh,w,c
 31551  002922  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 31552  002924  6EDA               	movwf	fsr2h,c
 31553  002926  50DF               	movf	indf2,w,c
 31554  002928  6F6A               	movwf	??_AESEncode& (0+255),b
 31555  00292A  517C               	movf	AESEncode@i& (0+255),w,b
 31556  00292C  0D01               	mullw	1
 31557  00292E  50F3               	movf	prodl,w,c
 31558  002930  2566               	addwf	AESEncode@block& (0+255),w,b
 31559  002932  6ED9               	movwf	fsr2l,c
 31560  002934  50F4               	movf	prodh,w,c
 31561  002936  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31562  002938  6EDA               	movwf	fsr2h,c
 31563  00293A  516A               	movf	??_AESEncode& (0+255),w,b
 31564  00293C  1ADF               	xorwf	indf2,f,c
 31565                           
 31566                           ; BSR set to: 0
 31567  00293E  2B7C               	incf	AESEncode@i& (0+255),f,b
 31568  002940  D7E6               	goto	l12629
 31569  002942                     u14210:
 31570                           
 31571                           ;AES.c: 265: {
 31572                           ;AES.c: 268: for(i=0;i<16;i++)
 31573                           
 31574                           ; BSR set to: 0
 31575                           
 31576                           ;AES.c: 262: }
 31577                           ;AES.c: 264: do
 31578                           
 31579                           ; BSR set to: 0
 31580  002942  0E00               	movlw	0
 31581  002944  0100               	movlb	0	; () banked
 31582  002946  6F7C               	movwf	AESEncode@i& (0+255),b
 31583  002948                     l12641:
 31584                           
 31585                           ; BSR set to: 0
 31586  002948  0E0F               	movlw	15
 31587  00294A  657C               	cpfsgt	AESEncode@i& (0+255),b
 31588  00294C  D001               	goto	l351
 31589  00294E  D022               	goto	u14230
 31590  002950                     l351:
 31591                           
 31592                           ; BSR set to: 0
 31593                           ;AES.c: 269: {
 31594                           ;AES.c: 270: block[i]=STable[block[i]];
 31595                           
 31596                           ; BSR set to: 0
 31597  002950  517C               	movf	AESEncode@i& (0+255),w,b
 31598  002952  0D01               	mullw	1
 31599  002954  50F3               	movf	prodl,w,c
 31600  002956  2566               	addwf	AESEncode@block& (0+255),w,b
 31601  002958  6ED9               	movwf	fsr2l,c
 31602  00295A  50F4               	movf	prodh,w,c
 31603  00295C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31604  00295E  6EDA               	movwf	fsr2h,c
 31605  002960  50DF               	movf	indf2,w,c
 31606  002962  6F6A               	movwf	??_AESEncode& (0+255),b
 31607  002964  516A               	movf	??_AESEncode& (0+255),w,b
 31608  002966  0D01               	mullw	1
 31609  002968  0E61               	movlw	low _STable
 31610  00296A  24F3               	addwf	prodl,w,c
 31611  00296C  6EF6               	movwf	tblptrl,c
 31612  00296E  0EFE               	movlw	high _STable
 31613  002970  20F4               	addwfc	prodh,w,c
 31614  002972  6EF7               	movwf	tblptrh,c
 31615  002974                     	if	1	;There are 3 active tblptr bytes
 31616  002974  6AF8               	clrf	tblptru,c
 31617  002976  0E00               	movlw	low (__mediumconst shr (0+16))
 31618  002978  22F8               	addwfc	tblptru,f,c
 31619  00297A                     	endif
 31620  00297A  517C               	movf	AESEncode@i& (0+255),w,b
 31621  00297C  0D01               	mullw	1
 31622  00297E  50F3               	movf	prodl,w,c
 31623  002980  2566               	addwf	AESEncode@block& (0+255),w,b
 31624  002982  6ED9               	movwf	fsr2l,c
 31625  002984  50F4               	movf	prodh,w,c
 31626  002986  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31627  002988  6EDA               	movwf	fsr2h,c
 31628  00298A  0008               	tblrd		*
 31629  00298C  CFF5 FFDF          	movff	tablat,indf2
 31630                           
 31631                           ; BSR set to: 0
 31632  002990  2B7C               	incf	AESEncode@i& (0+255),f,b
 31633  002992  D7DA               	goto	l12641
 31634  002994                     u14230:
 31635                           
 31636                           ; BSR set to: 0
 31637                           ;AES.c: 271: }
 31638                           ;AES.c: 274: EncodeShiftRow(block);
 31639                           
 31640                           ; BSR set to: 0
 31641  002994  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 31642  002998  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 31643  00299C  EC71  F028         	call	_EncodeShiftRow	;wreg free
 31644                           
 31645                           ;AES.c: 277: if(_roundCounter != 1)
 31646  0029A0  0101               	movlb	1	; () banked
 31647  0029A2  0578               	decf	__roundCounter& (0+255),w,b
 31648  0029A4  B4D8               	btfsc	status,2,c
 31649  0029A6  D127               	goto	u14290
 31650                           
 31651                           ; BSR set to: 1
 31652                           ;AES.c: 278: {
 31653                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 31654                           ;AES.c: 281: for(i=0;i<16;i+=4)
 31655  0029A8  0E00               	movlw	0
 31656  0029AA  0100               	movlb	0	; () banked
 31657  0029AC  6F7C               	movwf	AESEncode@i& (0+255),b
 31658  0029AE                     l12657:
 31659                           
 31660                           ; BSR set to: 0
 31661  0029AE  0E0F               	movlw	15
 31662  0029B0  657C               	cpfsgt	AESEncode@i& (0+255),b
 31663  0029B2  D001               	goto	l354
 31664  0029B4  D120               	goto	u14290
 31665  0029B6                     l354:
 31666                           
 31667                           ; BSR set to: 0
 31668                           ;AES.c: 282: {
 31669                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 31670                           
 31671                           ; BSR set to: 0
 31672  0029B6  517C               	movf	AESEncode@i& (0+255),w,b
 31673  0029B8  6F6A               	movwf	??_AESEncode& (0+255),b
 31674  0029BA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31675  0029BC  0E01               	movlw	1
 31676  0029BE  276A               	addwf	??_AESEncode& (0+255),f,b
 31677  0029C0  0E00               	movlw	0
 31678  0029C2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31679  0029C4  516A               	movf	??_AESEncode& (0+255),w,b
 31680  0029C6  2566               	addwf	AESEncode@block& (0+255),w,b
 31681  0029C8  6ED9               	movwf	fsr2l,c
 31682  0029CA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31683  0029CC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31684  0029CE  6EDA               	movwf	fsr2h,c
 31685  0029D0  50DF               	movf	indf2,w,c
 31686  0029D2  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31687  0029D4  517C               	movf	AESEncode@i& (0+255),w,b
 31688  0029D6  2566               	addwf	AESEncode@block& (0+255),w,b
 31689  0029D8  6ED9               	movwf	fsr2l,c
 31690  0029DA  0E00               	movlw	0
 31691  0029DC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31692  0029DE  6EDA               	movwf	fsr2h,c
 31693  0029E0  50DF               	movf	indf2,w,c
 31694  0029E2  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 31695  0029E4  6F7A               	movwf	AESEncode@aux1& (0+255),b
 31696                           
 31697                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 31698  0029E6  517C               	movf	AESEncode@i& (0+255),w,b
 31699  0029E8  6F6A               	movwf	??_AESEncode& (0+255),b
 31700  0029EA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31701  0029EC  0E03               	movlw	3
 31702  0029EE  276A               	addwf	??_AESEncode& (0+255),f,b
 31703  0029F0  0E00               	movlw	0
 31704  0029F2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31705  0029F4  516A               	movf	??_AESEncode& (0+255),w,b
 31706  0029F6  2566               	addwf	AESEncode@block& (0+255),w,b
 31707  0029F8  6ED9               	movwf	fsr2l,c
 31708  0029FA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31709  0029FC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31710  0029FE  6EDA               	movwf	fsr2h,c
 31711  002A00  50DF               	movf	indf2,w,c
 31712  002A02  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31713  002A04  517C               	movf	AESEncode@i& (0+255),w,b
 31714  002A06  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 31715  002A08  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 31716  002A0A  0E02               	movlw	2
 31717  002A0C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 31718  002A0E  0E00               	movlw	0
 31719  002A10  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 31720  002A12  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 31721  002A14  2566               	addwf	AESEncode@block& (0+255),w,b
 31722  002A16  6ED9               	movwf	fsr2l,c
 31723  002A18  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 31724  002A1A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31725  002A1C  6EDA               	movwf	fsr2h,c
 31726  002A1E  50DF               	movf	indf2,w,c
 31727  002A20  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 31728  002A22  6F7B               	movwf	AESEncode@aux3& (0+255),b
 31729                           
 31730                           ; BSR set to: 0
 31731                           ;AES.c: 285: aux = aux1 ^ aux3;
 31732  002A24  517A               	movf	AESEncode@aux1& (0+255),w,b
 31733  002A26  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 31734  002A28  6F78               	movwf	AESEncode@aux& (0+255),b
 31735                           
 31736                           ; BSR set to: 0
 31737                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 31738  002A2A  517C               	movf	AESEncode@i& (0+255),w,b
 31739  002A2C  6F6A               	movwf	??_AESEncode& (0+255),b
 31740  002A2E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31741  002A30  0E01               	movlw	1
 31742  002A32  276A               	addwf	??_AESEncode& (0+255),f,b
 31743  002A34  0E00               	movlw	0
 31744  002A36  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31745  002A38  516A               	movf	??_AESEncode& (0+255),w,b
 31746  002A3A  2566               	addwf	AESEncode@block& (0+255),w,b
 31747  002A3C  6ED9               	movwf	fsr2l,c
 31748  002A3E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31749  002A40  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31750  002A42  6EDA               	movwf	fsr2h,c
 31751  002A44  50DF               	movf	indf2,w,c
 31752  002A46  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31753  002A48  517C               	movf	AESEncode@i& (0+255),w,b
 31754  002A4A  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 31755  002A4C  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 31756  002A4E  0E02               	movlw	2
 31757  002A50  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 31758  002A52  0E00               	movlw	0
 31759  002A54  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 31760  002A56  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 31761  002A58  2566               	addwf	AESEncode@block& (0+255),w,b
 31762  002A5A  6ED9               	movwf	fsr2l,c
 31763  002A5C  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 31764  002A5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31765  002A60  6EDA               	movwf	fsr2h,c
 31766  002A62  50DF               	movf	indf2,w,c
 31767  002A64  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 31768  002A66  6F79               	movwf	AESEncode@aux2& (0+255),b
 31769                           
 31770                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 31771  002A68  0E7F               	movlw	127
 31772  002A6A  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 31773  002A6C  D00C               	goto	l357
 31774                           
 31775                           ; BSR set to: 0
 31776  002A6E  0E1B               	movlw	27
 31777  002A70  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 31778  002A74  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31779  002A76  90D8               	bcf	status,0,c
 31780  002A78  376A               	rlcf	??_AESEncode& (0+255),f,b
 31781  002A7A  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 31782  002A7C  196A               	xorwf	??_AESEncode& (0+255),w,b
 31783  002A7E  6F72               	movwf	_AESEncode$814& (0+255),b
 31784  002A80  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31785  002A82  6F73               	movwf	(_AESEncode$814+1)& (0+255),b
 31786  002A84  D005               	goto	l359
 31787  002A86                     l357:
 31788                           
 31789                           ; BSR set to: 0
 31790                           
 31791                           ; BSR set to: 0
 31792  002A86  90D8               	bcf	status,0,c
 31793  002A88  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 31794  002A8A  6F72               	movwf	_AESEncode$814& (0+255),b
 31795  002A8C  6B73               	clrf	(_AESEncode$814+1)& (0+255),b
 31796  002A8E  3773               	rlcf	(_AESEncode$814+1)& (0+255),f,b
 31797  002A90                     l359:
 31798                           
 31799                           ; BSR set to: 0
 31800                           
 31801                           ; BSR set to: 0
 31802  002A90  C072  F07A         	movff	_AESEncode$814,AESEncode@aux1
 31803                           
 31804                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 31805  002A94  0E7F               	movlw	127
 31806  002A96  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 31807  002A98  D00C               	goto	l361
 31808                           
 31809                           ; BSR set to: 0
 31810  002A9A  0E1B               	movlw	27
 31811  002A9C  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 31812  002AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31813  002AA2  90D8               	bcf	status,0,c
 31814  002AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
 31815  002AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 31816  002AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
 31817  002AAA  6F74               	movwf	_AESEncode$815& (0+255),b
 31818  002AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31819  002AAE  6F75               	movwf	(_AESEncode$815+1)& (0+255),b
 31820  002AB0  D005               	goto	l363
 31821  002AB2                     l361:
 31822                           
 31823                           ; BSR set to: 0
 31824                           
 31825                           ; BSR set to: 0
 31826  002AB2  90D8               	bcf	status,0,c
 31827  002AB4  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 31828  002AB6  6F74               	movwf	_AESEncode$815& (0+255),b
 31829  002AB8  6B75               	clrf	(_AESEncode$815+1)& (0+255),b
 31830  002ABA  3775               	rlcf	(_AESEncode$815+1)& (0+255),f,b
 31831  002ABC                     l363:
 31832                           
 31833                           ; BSR set to: 0
 31834                           
 31835                           ; BSR set to: 0
 31836  002ABC  C074  F079         	movff	_AESEncode$815,AESEncode@aux2
 31837                           
 31838                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 31839  002AC0  0E7F               	movlw	127
 31840  002AC2  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 31841  002AC4  D00C               	goto	l365
 31842                           
 31843                           ; BSR set to: 0
 31844  002AC6  0E1B               	movlw	27
 31845  002AC8  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 31846  002ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31847  002ACE  90D8               	bcf	status,0,c
 31848  002AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
 31849  002AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 31850  002AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
 31851  002AD6  6F76               	movwf	_AESEncode$816& (0+255),b
 31852  002AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31853  002ADA  6F77               	movwf	(_AESEncode$816+1)& (0+255),b
 31854  002ADC  D005               	goto	l367
 31855  002ADE                     l365:
 31856                           
 31857                           ; BSR set to: 0
 31858                           
 31859                           ; BSR set to: 0
 31860  002ADE  90D8               	bcf	status,0,c
 31861  002AE0  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 31862  002AE2  6F76               	movwf	_AESEncode$816& (0+255),b
 31863  002AE4  6B77               	clrf	(_AESEncode$816+1)& (0+255),b
 31864  002AE6  3777               	rlcf	(_AESEncode$816+1)& (0+255),f,b
 31865  002AE8                     l367:
 31866                           
 31867                           ; BSR set to: 0
 31868                           
 31869                           ; BSR set to: 0
 31870  002AE8  C076  F07B         	movff	_AESEncode$816,AESEncode@aux3
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 31874  002AEC  517C               	movf	AESEncode@i& (0+255),w,b
 31875  002AEE  2566               	addwf	AESEncode@block& (0+255),w,b
 31876  002AF0  6ED9               	movwf	fsr2l,c
 31877  002AF2  0E00               	movlw	0
 31878  002AF4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31879  002AF6  6EDA               	movwf	fsr2h,c
 31880  002AF8  517C               	movf	AESEncode@i& (0+255),w,b
 31881  002AFA  2566               	addwf	AESEncode@block& (0+255),w,b
 31882  002AFC  6EE9               	movwf	fsr0l,c
 31883  002AFE  0E00               	movlw	0
 31884  002B00  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31885  002B02  6EEA               	movwf	fsr0h,c
 31886  002B04  50EF               	movf	indf0,w,c
 31887  002B06  1978               	xorwf	AESEncode@aux& (0+255),w,b
 31888  002B08  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 31889  002B0A  6EDF               	movwf	indf2,c
 31890                           
 31891                           ; BSR set to: 0
 31892                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 31893  002B0C  517C               	movf	AESEncode@i& (0+255),w,b
 31894  002B0E  6F6A               	movwf	??_AESEncode& (0+255),b
 31895  002B10  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31896  002B12  0E01               	movlw	1
 31897  002B14  276A               	addwf	??_AESEncode& (0+255),f,b
 31898  002B16  0E00               	movlw	0
 31899  002B18  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31900  002B1A  516A               	movf	??_AESEncode& (0+255),w,b
 31901  002B1C  2566               	addwf	AESEncode@block& (0+255),w,b
 31902  002B1E  6ED9               	movwf	fsr2l,c
 31903  002B20  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31904  002B22  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31905  002B24  6EDA               	movwf	fsr2h,c
 31906  002B26  517C               	movf	AESEncode@i& (0+255),w,b
 31907  002B28  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31908  002B2A  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 31909  002B2C  0E01               	movlw	1
 31910  002B2E  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 31911  002B30  0E00               	movlw	0
 31912  002B32  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 31913  002B34  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 31914  002B36  2566               	addwf	AESEncode@block& (0+255),w,b
 31915  002B38  6EE9               	movwf	fsr0l,c
 31916  002B3A  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 31917  002B3C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31918  002B3E  6EEA               	movwf	fsr0h,c
 31919  002B40  50EF               	movf	indf0,w,c
 31920  002B42  1978               	xorwf	AESEncode@aux& (0+255),w,b
 31921  002B44  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 31922  002B46  6EDF               	movwf	indf2,c
 31923                           
 31924                           ; BSR set to: 0
 31925                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 31926  002B48  517C               	movf	AESEncode@i& (0+255),w,b
 31927  002B4A  6F6A               	movwf	??_AESEncode& (0+255),b
 31928  002B4C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31929  002B4E  0E02               	movlw	2
 31930  002B50  276A               	addwf	??_AESEncode& (0+255),f,b
 31931  002B52  0E00               	movlw	0
 31932  002B54  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31933  002B56  516A               	movf	??_AESEncode& (0+255),w,b
 31934  002B58  2566               	addwf	AESEncode@block& (0+255),w,b
 31935  002B5A  6ED9               	movwf	fsr2l,c
 31936  002B5C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31937  002B5E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31938  002B60  6EDA               	movwf	fsr2h,c
 31939  002B62  517C               	movf	AESEncode@i& (0+255),w,b
 31940  002B64  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31941  002B66  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 31942  002B68  0E02               	movlw	2
 31943  002B6A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 31944  002B6C  0E00               	movlw	0
 31945  002B6E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 31946  002B70  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 31947  002B72  2566               	addwf	AESEncode@block& (0+255),w,b
 31948  002B74  6EE9               	movwf	fsr0l,c
 31949  002B76  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 31950  002B78  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31951  002B7A  6EEA               	movwf	fsr0h,c
 31952  002B7C  50EF               	movf	indf0,w,c
 31953  002B7E  1978               	xorwf	AESEncode@aux& (0+255),w,b
 31954  002B80  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 31955  002B82  6EDF               	movwf	indf2,c
 31956                           
 31957                           ; BSR set to: 0
 31958                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 31959  002B84  517C               	movf	AESEncode@i& (0+255),w,b
 31960  002B86  6F6A               	movwf	??_AESEncode& (0+255),b
 31961  002B88  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 31962  002B8A  0E03               	movlw	3
 31963  002B8C  276A               	addwf	??_AESEncode& (0+255),f,b
 31964  002B8E  0E00               	movlw	0
 31965  002B90  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 31966  002B92  516A               	movf	??_AESEncode& (0+255),w,b
 31967  002B94  2566               	addwf	AESEncode@block& (0+255),w,b
 31968  002B96  6ED9               	movwf	fsr2l,c
 31969  002B98  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 31970  002B9A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31971  002B9C  6EDA               	movwf	fsr2h,c
 31972  002B9E  517C               	movf	AESEncode@i& (0+255),w,b
 31973  002BA0  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 31974  002BA2  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 31975  002BA4  0E02               	movlw	2
 31976  002BA6  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 31977  002BA8  0E00               	movlw	0
 31978  002BAA  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 31979  002BAC  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 31980  002BAE  2566               	addwf	AESEncode@block& (0+255),w,b
 31981  002BB0  6EE9               	movwf	fsr0l,c
 31982  002BB2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 31983  002BB4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31984  002BB6  6EEA               	movwf	fsr0h,c
 31985  002BB8  50EF               	movf	indf0,w,c
 31986  002BBA  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 31987  002BBC  517C               	movf	AESEncode@i& (0+255),w,b
 31988  002BBE  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 31989  002BC0  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 31990  002BC2  0E01               	movlw	1
 31991  002BC4  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 31992  002BC6  0E00               	movlw	0
 31993  002BC8  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 31994  002BCA  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 31995  002BCC  2566               	addwf	AESEncode@block& (0+255),w,b
 31996  002BCE  6EE9               	movwf	fsr0l,c
 31997  002BD0  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 31998  002BD2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31999  002BD4  6EEA               	movwf	fsr0h,c
 32000  002BD6  50EF               	movf	indf0,w,c
 32001  002BD8  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 32002  002BDA  517C               	movf	AESEncode@i& (0+255),w,b
 32003  002BDC  2566               	addwf	AESEncode@block& (0+255),w,b
 32004  002BDE  6EE9               	movwf	fsr0l,c
 32005  002BE0  0E00               	movlw	0
 32006  002BE2  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32007  002BE4  6EEA               	movwf	fsr0h,c
 32008  002BE6  50EF               	movf	indf0,w,c
 32009  002BE8  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 32010  002BEA  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 32011  002BEC  1978               	xorwf	AESEncode@aux& (0+255),w,b
 32012  002BEE  6EDF               	movwf	indf2,c
 32013  002BF0  0E04               	movlw	4
 32014  002BF2  277C               	addwf	AESEncode@i& (0+255),f,b
 32015  002BF4  D6DC               	goto	l12657
 32016  002BF6                     u14290:
 32017                           
 32018                           ;AES.c: 296: }
 32019                           ;AES.c: 297: }
 32020                           ;AES.c: 299: EncKeySchedule(key);
 32021                           
 32022                           ; BSR set to: 0
 32023                           
 32024                           ; BSR set to: 0
 32025  002BF6  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 32026  002BFA  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 32027  002BFE  EC86  F01A         	call	_EncKeySchedule	;wreg free
 32028                           
 32029                           ;AES.c: 302: for(i=0;i<16;i++)
 32030  002C02  0E00               	movlw	0
 32031  002C04  0100               	movlb	0	; () banked
 32032  002C06  6F7C               	movwf	AESEncode@i& (0+255),b
 32033  002C08                     l12697:
 32034                           
 32035                           ; BSR set to: 0
 32036  002C08  0E0F               	movlw	15
 32037  002C0A  657C               	cpfsgt	AESEncode@i& (0+255),b
 32038  002C0C  D001               	goto	l368
 32039  002C0E  D016               	goto	u14310
 32040  002C10                     l368:
 32041                           
 32042                           ; BSR set to: 0
 32043                           ;AES.c: 303: {
 32044                           ;AES.c: 304: block[i] ^= key[i];
 32045                           
 32046                           ; BSR set to: 0
 32047  002C10  517C               	movf	AESEncode@i& (0+255),w,b
 32048  002C12  0D01               	mullw	1
 32049  002C14  50F3               	movf	prodl,w,c
 32050  002C16  2568               	addwf	AESEncode@key& (0+255),w,b
 32051  002C18  6ED9               	movwf	fsr2l,c
 32052  002C1A  50F4               	movf	prodh,w,c
 32053  002C1C  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 32054  002C1E  6EDA               	movwf	fsr2h,c
 32055  002C20  50DF               	movf	indf2,w,c
 32056  002C22  6F6A               	movwf	??_AESEncode& (0+255),b
 32057  002C24  517C               	movf	AESEncode@i& (0+255),w,b
 32058  002C26  0D01               	mullw	1
 32059  002C28  50F3               	movf	prodl,w,c
 32060  002C2A  2566               	addwf	AESEncode@block& (0+255),w,b
 32061  002C2C  6ED9               	movwf	fsr2l,c
 32062  002C2E  50F4               	movf	prodh,w,c
 32063  002C30  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 32064  002C32  6EDA               	movwf	fsr2h,c
 32065  002C34  516A               	movf	??_AESEncode& (0+255),w,b
 32066  002C36  1ADF               	xorwf	indf2,f,c
 32067                           
 32068                           ; BSR set to: 0
 32069  002C38  2B7C               	incf	AESEncode@i& (0+255),f,b
 32070  002C3A  D7E6               	goto	l12697
 32071  002C3C                     u14310:
 32072                           
 32073                           ; BSR set to: 0
 32074                           ;AES.c: 305: }
 32075                           ;AES.c: 307: _roundCounter--;
 32076                           
 32077                           ; BSR set to: 0
 32078  002C3C  0101               	movlb	1	; () banked
 32079  002C3E  0778               	decf	__roundCounter& (0+255),f,b
 32080                           
 32081                           ; BSR set to: 1
 32082                           ;AES.c: 308: }
 32083                           ;AES.c: 309: while(_roundCounter !=0);
 32084  002C40  5178               	movf	__roundCounter& (0+255),w,b
 32085  002C42  B4D8               	btfsc	status,2,c
 32086  002C44  0012               	return	
 32087  002C46  D67D               	goto	u14210
 32088  002C48                     __end_of_AESEncode:
 32089                           	opt stack 0
 32090                           tosu	equ	0xFFF
 32091                           tosh	equ	0xFFE
 32092                           tosl	equ	0xFFD
 32093                           pclath	equ	0xFFA
 32094                           tblptru	equ	0xFF8
 32095                           tblptrh	equ	0xFF7
 32096                           tblptrl	equ	0xFF6
 32097                           tablat	equ	0xFF5
 32098                           prodh	equ	0xFF4
 32099                           prodl	equ	0xFF3
 32100                           intcon	equ	0xFF2
 32101                           intcon2	equ	0xFF1
 32102                           intcon3	equ	0xFF0
 32103                           indf0	equ	0xFEF
 32104                           postinc0	equ	0xFEE
 32105                           plusw0	equ	0xFEB
 32106                           fsr0h	equ	0xFEA
 32107                           fsr0l	equ	0xFE9
 32108                           wreg	equ	0xFE8
 32109                           postinc1	equ	0xFE6
 32110                           postdec1	equ	0xFE5
 32111                           plusw1	equ	0xFE3
 32112                           fsr1h	equ	0xFE2
 32113                           fsr1l	equ	0xFE1
 32114                           indf2	equ	0xFDF
 32115                           postinc2	equ	0xFDE
 32116                           postdec2	equ	0xFDD
 32117                           plusw2	equ	0xFDB
 32118                           fsr2h	equ	0xFDA
 32119                           fsr2l	equ	0xFD9
 32120                           status	equ	0xFD8
 32121                           
 32122 ;; *************** function _EncodeShiftRow *****************
 32123 ;; Defined at:
 32124 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 32125 ;; Parameters:    Size  Location     Type
 32126 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 32127 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32128 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32129 ;; Auto vars:     Size  Location     Type
 32130 ;;  temp            1    2[BANK0 ] unsigned char 
 32131 ;; Return value:  Size  Location     Type
 32132 ;;                  1    wreg      void 
 32133 ;; Registers used:
 32134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32135 ;; Tracked objects:
 32136 ;;		On entry : 0/0
 32137 ;;		On exit  : 0/0
 32138 ;;		Unchanged: 0/0
 32139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32143 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32144 ;;Total ram usage:        3 bytes
 32145 ;; Hardware stack levels used:    1
 32146 ;; Hardware stack levels required when called:    7
 32147 ;; This function calls:
 32148 ;;		Nothing
 32149 ;; This function is called by:
 32150 ;;		_AESEncode
 32151 ;; This function uses a non-reentrant model
 32152 ;;
 32153                           
 32154                           	psect	text146
 32155  0050E2                     __ptext146:
 32156                           	opt stack 0
 32157  0050E2                     _EncodeShiftRow:
 32158                           	opt stack 18
 32159                           
 32160                           ;AES.c: 387: unsigned char temp;
 32161                           ;AES.c: 392: temp=stateTable[1];
 32162                           
 32163                           ; BSR set to: 1
 32164                           ;incstack = 0
 32165  0050E2  0100               	movlb	0	; () banked
 32166  0050E4  EE20 F001          	lfsr	2,1
 32167  0050E8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32168  0050EA  26D9               	addwf	fsr2l,f,c
 32169  0050EC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32170  0050EE  22DA               	addwfc	fsr2h,f,c
 32171  0050F0  50DF               	movf	indf2,w,c
 32172  0050F2  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32173                           
 32174                           ; BSR set to: 0
 32175                           ;AES.c: 393: stateTable[1]=stateTable[5];
 32176  0050F4  EE20 F005          	lfsr	2,5
 32177  0050F8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32178  0050FA  26D9               	addwf	fsr2l,f,c
 32179  0050FC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32180  0050FE  22DA               	addwfc	fsr2h,f,c
 32181  005100  EE00 F001          	lfsr	0,1
 32182  005104  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32183  005106  26E9               	addwf	fsr0l,f,c
 32184  005108  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32185  00510A  22EA               	addwfc	fsr0h,f,c
 32186  00510C  CFDF FFEF          	movff	indf2,indf0
 32187                           
 32188                           ; BSR set to: 0
 32189                           ;AES.c: 394: stateTable[5]=stateTable[9];
 32190  005110  EE20 F009          	lfsr	2,9
 32191  005114  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32192  005116  26D9               	addwf	fsr2l,f,c
 32193  005118  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32194  00511A  22DA               	addwfc	fsr2h,f,c
 32195  00511C  EE00 F005          	lfsr	0,5
 32196  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32197  005122  26E9               	addwf	fsr0l,f,c
 32198  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32199  005126  22EA               	addwfc	fsr0h,f,c
 32200  005128  CFDF FFEF          	movff	indf2,indf0
 32201                           
 32202                           ; BSR set to: 0
 32203                           ;AES.c: 395: stateTable[9]=stateTable[13];
 32204  00512C  EE20 F00D          	lfsr	2,13
 32205  005130  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32206  005132  26D9               	addwf	fsr2l,f,c
 32207  005134  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32208  005136  22DA               	addwfc	fsr2h,f,c
 32209  005138  EE00 F009          	lfsr	0,9
 32210  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32211  00513E  26E9               	addwf	fsr0l,f,c
 32212  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32213  005142  22EA               	addwfc	fsr0h,f,c
 32214  005144  CFDF FFEF          	movff	indf2,indf0
 32215                           
 32216                           ; BSR set to: 0
 32217                           ;AES.c: 396: stateTable[13]=temp;
 32218  005148  EE20 F00D          	lfsr	2,13
 32219  00514C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32220  00514E  26D9               	addwf	fsr2l,f,c
 32221  005150  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32222  005152  22DA               	addwfc	fsr2h,f,c
 32223  005154  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32224                           
 32225                           ; BSR set to: 0
 32226                           ;AES.c: 399: temp=stateTable[2];
 32227  005158  EE20 F002          	lfsr	2,2
 32228  00515C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32229  00515E  26D9               	addwf	fsr2l,f,c
 32230  005160  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32231  005162  22DA               	addwfc	fsr2h,f,c
 32232  005164  50DF               	movf	indf2,w,c
 32233  005166  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32234                           
 32235                           ; BSR set to: 0
 32236                           ;AES.c: 400: stateTable[2]=stateTable[10];
 32237  005168  EE20 F00A          	lfsr	2,10
 32238  00516C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32239  00516E  26D9               	addwf	fsr2l,f,c
 32240  005170  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32241  005172  22DA               	addwfc	fsr2h,f,c
 32242  005174  EE00 F002          	lfsr	0,2
 32243  005178  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32244  00517A  26E9               	addwf	fsr0l,f,c
 32245  00517C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32246  00517E  22EA               	addwfc	fsr0h,f,c
 32247  005180  CFDF FFEF          	movff	indf2,indf0
 32248                           
 32249                           ;AES.c: 401: stateTable[10]=temp;
 32250  005184  EE20 F00A          	lfsr	2,10
 32251  005188  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32252  00518A  26D9               	addwf	fsr2l,f,c
 32253  00518C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32254  00518E  22DA               	addwfc	fsr2h,f,c
 32255  005190  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32256                           
 32257                           ;AES.c: 402: temp=stateTable[14];
 32258  005194  EE20 F00E          	lfsr	2,14
 32259  005198  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32260  00519A  26D9               	addwf	fsr2l,f,c
 32261  00519C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32262  00519E  22DA               	addwfc	fsr2h,f,c
 32263  0051A0  50DF               	movf	indf2,w,c
 32264  0051A2  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32265                           
 32266                           ; BSR set to: 0
 32267                           ;AES.c: 403: stateTable[14]=stateTable[6];
 32268  0051A4  EE20 F006          	lfsr	2,6
 32269  0051A8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32270  0051AA  26D9               	addwf	fsr2l,f,c
 32271  0051AC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32272  0051AE  22DA               	addwfc	fsr2h,f,c
 32273  0051B0  EE00 F00E          	lfsr	0,14
 32274  0051B4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32275  0051B6  26E9               	addwf	fsr0l,f,c
 32276  0051B8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32277  0051BA  22EA               	addwfc	fsr0h,f,c
 32278  0051BC  CFDF FFEF          	movff	indf2,indf0
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;AES.c: 404: stateTable[6]=temp;
 32282  0051C0  EE20 F006          	lfsr	2,6
 32283  0051C4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32284  0051C6  26D9               	addwf	fsr2l,f,c
 32285  0051C8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32286  0051CA  22DA               	addwfc	fsr2h,f,c
 32287  0051CC  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32288                           
 32289                           ; BSR set to: 0
 32290                           ;AES.c: 407: temp=stateTable[3];
 32291  0051D0  EE20 F003          	lfsr	2,3
 32292  0051D4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32293  0051D6  26D9               	addwf	fsr2l,f,c
 32294  0051D8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32295  0051DA  22DA               	addwfc	fsr2h,f,c
 32296  0051DC  50DF               	movf	indf2,w,c
 32297  0051DE  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 32298                           
 32299                           ; BSR set to: 0
 32300                           ;AES.c: 408: stateTable[3]=stateTable[15];
 32301  0051E0  EE20 F00F          	lfsr	2,15
 32302  0051E4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32303  0051E6  26D9               	addwf	fsr2l,f,c
 32304  0051E8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32305  0051EA  22DA               	addwfc	fsr2h,f,c
 32306  0051EC  EE00 F003          	lfsr	0,3
 32307  0051F0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32308  0051F2  26E9               	addwf	fsr0l,f,c
 32309  0051F4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32310  0051F6  22EA               	addwfc	fsr0h,f,c
 32311  0051F8  CFDF FFEF          	movff	indf2,indf0
 32312                           
 32313                           ; BSR set to: 0
 32314                           ;AES.c: 409: stateTable[15]=stateTable[11];
 32315  0051FC  EE20 F00B          	lfsr	2,11
 32316  005200  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32317  005202  26D9               	addwf	fsr2l,f,c
 32318  005204  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32319  005206  22DA               	addwfc	fsr2h,f,c
 32320  005208  EE00 F00F          	lfsr	0,15
 32321  00520C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32322  00520E  26E9               	addwf	fsr0l,f,c
 32323  005210  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32324  005212  22EA               	addwfc	fsr0h,f,c
 32325  005214  CFDF FFEF          	movff	indf2,indf0
 32326                           
 32327                           ; BSR set to: 0
 32328                           ;AES.c: 410: stateTable[11]=stateTable[7];
 32329  005218  EE20 F007          	lfsr	2,7
 32330  00521C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32331  00521E  26D9               	addwf	fsr2l,f,c
 32332  005220  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32333  005222  22DA               	addwfc	fsr2h,f,c
 32334  005224  EE00 F00B          	lfsr	0,11
 32335  005228  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32336  00522A  26E9               	addwf	fsr0l,f,c
 32337  00522C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32338  00522E  22EA               	addwfc	fsr0h,f,c
 32339  005230  CFDF FFEF          	movff	indf2,indf0
 32340                           
 32341                           ;AES.c: 411: stateTable[7]=temp;
 32342  005234  EE20 F007          	lfsr	2,7
 32343  005238  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 32344  00523A  26D9               	addwf	fsr2l,f,c
 32345  00523C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 32346  00523E  22DA               	addwfc	fsr2h,f,c
 32347  005240  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 32348                           
 32349                           ; BSR set to: 0
 32350  005244  0012               	return		;funcret
 32351  005246                     __end_of_EncodeShiftRow:
 32352                           	opt stack 0
 32353                           tosu	equ	0xFFF
 32354                           tosh	equ	0xFFE
 32355                           tosl	equ	0xFFD
 32356                           pclath	equ	0xFFA
 32357                           tblptru	equ	0xFF8
 32358                           tblptrh	equ	0xFF7
 32359                           tblptrl	equ	0xFF6
 32360                           tablat	equ	0xFF5
 32361                           prodh	equ	0xFF4
 32362                           prodl	equ	0xFF3
 32363                           intcon	equ	0xFF2
 32364                           intcon2	equ	0xFF1
 32365                           intcon3	equ	0xFF0
 32366                           indf0	equ	0xFEF
 32367                           postinc0	equ	0xFEE
 32368                           plusw0	equ	0xFEB
 32369                           fsr0h	equ	0xFEA
 32370                           fsr0l	equ	0xFE9
 32371                           wreg	equ	0xFE8
 32372                           postinc1	equ	0xFE6
 32373                           postdec1	equ	0xFE5
 32374                           plusw1	equ	0xFE3
 32375                           fsr1h	equ	0xFE2
 32376                           fsr1l	equ	0xFE1
 32377                           indf2	equ	0xFDF
 32378                           postinc2	equ	0xFDE
 32379                           postdec2	equ	0xFDD
 32380                           plusw2	equ	0xFDB
 32381                           fsr2h	equ	0xFDA
 32382                           fsr2l	equ	0xFD9
 32383                           status	equ	0xFD8
 32384                           
 32385 ;; *************** function _EncKeySchedule *****************
 32386 ;; Defined at:
 32387 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 32388 ;; Parameters:    Size  Location     Type
 32389 ;;  key             2    0[BANK0 ] PTR unsigned char 
 32390 ;;		 -> AESEncodeLoRa@useKey(16), 
 32391 ;; Auto vars:     Size  Location     Type
 32392 ;;		None
 32393 ;; Return value:  Size  Location     Type
 32394 ;;                  1    wreg      void 
 32395 ;; Registers used:
 32396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32397 ;; Tracked objects:
 32398 ;;		On entry : 0/0
 32399 ;;		On exit  : 0/0
 32400 ;;		Unchanged: 0/0
 32401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32406 ;;Total ram usage:        6 bytes
 32407 ;; Hardware stack levels used:    1
 32408 ;; Hardware stack levels required when called:    7
 32409 ;; This function calls:
 32410 ;;		Nothing
 32411 ;; This function is called by:
 32412 ;;		_AESEncode
 32413 ;; This function uses a non-reentrant model
 32414 ;;
 32415                           
 32416                           	psect	text147
 32417  00350C                     __ptext147:
 32418                           	opt stack 0
 32419  00350C                     _EncKeySchedule:
 32420                           	opt stack 18
 32421                           
 32422                           ;AES.c: 340: key[0]^=STable[key[13]];
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;incstack = 0
 32426  00350C  0100               	movlb	0	; () banked
 32427  00350E  EE20 F00D          	lfsr	2,13
 32428  003512  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32429  003514  26D9               	addwf	fsr2l,f,c
 32430  003516  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32431  003518  22DA               	addwfc	fsr2h,f,c
 32432  00351A  50DF               	movf	indf2,w,c
 32433  00351C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32434  00351E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32435  003520  0D01               	mullw	1
 32436  003522  0E61               	movlw	low _STable
 32437  003524  24F3               	addwf	prodl,w,c
 32438  003526  6EF6               	movwf	tblptrl,c
 32439  003528  0EFE               	movlw	high _STable
 32440  00352A  20F4               	addwfc	prodh,w,c
 32441  00352C  6EF7               	movwf	tblptrh,c
 32442  00352E                     	if	1	;There are 3 active tblptr bytes
 32443  00352E  6AF8               	clrf	tblptru,c
 32444  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 32445  003532  22F8               	addwfc	tblptru,f,c
 32446  003534                     	endif
 32447  003534  0008               	tblrd		*
 32448  003536  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32449  00353A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32450  00353E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32451  003542  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32452  003544  1ADF               	xorwf	indf2,f,c
 32453                           
 32454                           ;AES.c: 341: key[1]^=STable[key[14]];
 32455  003546  EE20 F00E          	lfsr	2,14
 32456  00354A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32457  00354C  26D9               	addwf	fsr2l,f,c
 32458  00354E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32459  003550  22DA               	addwfc	fsr2h,f,c
 32460  003552  50DF               	movf	indf2,w,c
 32461  003554  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32462  003556  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32463  003558  0D01               	mullw	1
 32464  00355A  0E61               	movlw	low _STable
 32465  00355C  24F3               	addwf	prodl,w,c
 32466  00355E  6EF6               	movwf	tblptrl,c
 32467  003560  0EFE               	movlw	high _STable
 32468  003562  20F4               	addwfc	prodh,w,c
 32469  003564  6EF7               	movwf	tblptrh,c
 32470  003566                     	if	1	;There are 3 active tblptr bytes
 32471  003566  6AF8               	clrf	tblptru,c
 32472  003568  0E00               	movlw	low (__mediumconst shr (0+16))
 32473  00356A  22F8               	addwfc	tblptru,f,c
 32474  00356C                     	endif
 32475  00356C  0008               	tblrd		*
 32476  00356E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32477  003572  EE20 F001          	lfsr	2,1
 32478  003576  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32479  003578  26D9               	addwf	fsr2l,f,c
 32480  00357A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32481  00357C  22DA               	addwfc	fsr2h,f,c
 32482  00357E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32483  003580  1ADF               	xorwf	indf2,f,c
 32484                           
 32485                           ;AES.c: 342: key[2]^=STable[key[15]];
 32486  003582  EE20 F00F          	lfsr	2,15
 32487  003586  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32488  003588  26D9               	addwf	fsr2l,f,c
 32489  00358A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32490  00358C  22DA               	addwfc	fsr2h,f,c
 32491  00358E  50DF               	movf	indf2,w,c
 32492  003590  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32493  003592  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32494  003594  0D01               	mullw	1
 32495  003596  0E61               	movlw	low _STable
 32496  003598  24F3               	addwf	prodl,w,c
 32497  00359A  6EF6               	movwf	tblptrl,c
 32498  00359C  0EFE               	movlw	high _STable
 32499  00359E  20F4               	addwfc	prodh,w,c
 32500  0035A0  6EF7               	movwf	tblptrh,c
 32501  0035A2                     	if	1	;There are 3 active tblptr bytes
 32502  0035A2  6AF8               	clrf	tblptru,c
 32503  0035A4  0E00               	movlw	low (__mediumconst shr (0+16))
 32504  0035A6  22F8               	addwfc	tblptru,f,c
 32505  0035A8                     	endif
 32506  0035A8  0008               	tblrd		*
 32507  0035AA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32508  0035AE  EE20 F002          	lfsr	2,2
 32509  0035B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32510  0035B4  26D9               	addwf	fsr2l,f,c
 32511  0035B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32512  0035B8  22DA               	addwfc	fsr2h,f,c
 32513  0035BA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32514  0035BC  1ADF               	xorwf	indf2,f,c
 32515                           
 32516                           ;AES.c: 343: key[3]^=STable[key[12]];
 32517  0035BE  EE20 F00C          	lfsr	2,12
 32518  0035C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32519  0035C4  26D9               	addwf	fsr2l,f,c
 32520  0035C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32521  0035C8  22DA               	addwfc	fsr2h,f,c
 32522  0035CA  50DF               	movf	indf2,w,c
 32523  0035CC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32524  0035CE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32525  0035D0  0D01               	mullw	1
 32526  0035D2  0E61               	movlw	low _STable
 32527  0035D4  24F3               	addwf	prodl,w,c
 32528  0035D6  6EF6               	movwf	tblptrl,c
 32529  0035D8  0EFE               	movlw	high _STable
 32530  0035DA  20F4               	addwfc	prodh,w,c
 32531  0035DC  6EF7               	movwf	tblptrh,c
 32532  0035DE                     	if	1	;There are 3 active tblptr bytes
 32533  0035DE  6AF8               	clrf	tblptru,c
 32534  0035E0  0E00               	movlw	low (__mediumconst shr (0+16))
 32535  0035E2  22F8               	addwfc	tblptru,f,c
 32536  0035E4                     	endif
 32537  0035E4  0008               	tblrd		*
 32538  0035E6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 32539  0035EA  EE20 F003          	lfsr	2,3
 32540  0035EE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32541  0035F0  26D9               	addwf	fsr2l,f,c
 32542  0035F2  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32543  0035F4  22DA               	addwfc	fsr2h,f,c
 32544  0035F6  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32545  0035F8  1ADF               	xorwf	indf2,f,c
 32546                           
 32547                           ; BSR set to: 0
 32548                           ;AES.c: 345: key[0]^=_rcon;
 32549  0035FA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32550  0035FE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32551  003602  5046               	movf	__rcon,w,c
 32552  003604  1ADF               	xorwf	indf2,f,c
 32553                           
 32554                           ; BSR set to: 0
 32555                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 32556  003606  0E7F               	movlw	127
 32557  003608  6446               	cpfsgt	__rcon,c
 32558  00360A  D00C               	goto	l375
 32559                           
 32560                           ; BSR set to: 0
 32561  00360C  0E1B               	movlw	27
 32562  00360E  C046  F062         	movff	__rcon,??_EncKeySchedule
 32563  003612  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 32564  003614  90D8               	bcf	status,0,c
 32565  003616  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 32566  003618  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 32567  00361A  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 32568  00361C  6F64               	movwf	_EncKeySchedule$819& (0+255),b
 32569  00361E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 32570  003620  6F65               	movwf	(_EncKeySchedule$819+1)& (0+255),b
 32571  003622  D005               	goto	l377
 32572  003624                     l375:
 32573                           
 32574                           ; BSR set to: 0
 32575                           
 32576                           ; BSR set to: 0
 32577  003624  90D8               	bcf	status,0,c
 32578  003626  3446               	rlcf	__rcon,w,c
 32579  003628  6F64               	movwf	_EncKeySchedule$819& (0+255),b
 32580  00362A  6B65               	clrf	(_EncKeySchedule$819+1)& (0+255),b
 32581  00362C  3765               	rlcf	(_EncKeySchedule$819+1)& (0+255),f,b
 32582  00362E                     l377:
 32583                           
 32584                           ; BSR set to: 0
 32585                           
 32586                           ; BSR set to: 0
 32587  00362E  C064  F046         	movff	_EncKeySchedule$819,__rcon
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;AES.c: 349: key[4]^=key[0];
 32591  003632  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 32592  003636  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 32593  00363A  50DF               	movf	indf2,w,c
 32594  00363C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32595  00363E  EE20 F004          	lfsr	2,4
 32596  003642  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32597  003644  26D9               	addwf	fsr2l,f,c
 32598  003646  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32599  003648  22DA               	addwfc	fsr2h,f,c
 32600  00364A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32601  00364C  1ADF               	xorwf	indf2,f,c
 32602                           
 32603                           ; BSR set to: 0
 32604                           ;AES.c: 350: key[5]^=key[1];
 32605  00364E  EE20 F001          	lfsr	2,1
 32606  003652  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32607  003654  26D9               	addwf	fsr2l,f,c
 32608  003656  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32609  003658  22DA               	addwfc	fsr2h,f,c
 32610  00365A  50DF               	movf	indf2,w,c
 32611  00365C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32612  00365E  EE20 F005          	lfsr	2,5
 32613  003662  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32614  003664  26D9               	addwf	fsr2l,f,c
 32615  003666  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32616  003668  22DA               	addwfc	fsr2h,f,c
 32617  00366A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32618  00366C  1ADF               	xorwf	indf2,f,c
 32619                           
 32620                           ; BSR set to: 0
 32621                           ;AES.c: 351: key[6]^=key[2];
 32622  00366E  EE20 F002          	lfsr	2,2
 32623  003672  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32624  003674  26D9               	addwf	fsr2l,f,c
 32625  003676  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32626  003678  22DA               	addwfc	fsr2h,f,c
 32627  00367A  50DF               	movf	indf2,w,c
 32628  00367C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32629  00367E  EE20 F006          	lfsr	2,6
 32630  003682  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32631  003684  26D9               	addwf	fsr2l,f,c
 32632  003686  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32633  003688  22DA               	addwfc	fsr2h,f,c
 32634  00368A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32635  00368C  1ADF               	xorwf	indf2,f,c
 32636                           
 32637                           ; BSR set to: 0
 32638                           ;AES.c: 352: key[7]^=key[3];
 32639  00368E  EE20 F003          	lfsr	2,3
 32640  003692  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32641  003694  26D9               	addwf	fsr2l,f,c
 32642  003696  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32643  003698  22DA               	addwfc	fsr2h,f,c
 32644  00369A  50DF               	movf	indf2,w,c
 32645  00369C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32646  00369E  EE20 F007          	lfsr	2,7
 32647  0036A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32648  0036A4  26D9               	addwf	fsr2l,f,c
 32649  0036A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32650  0036A8  22DA               	addwfc	fsr2h,f,c
 32651  0036AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32652  0036AC  1ADF               	xorwf	indf2,f,c
 32653                           
 32654                           ; BSR set to: 0
 32655                           ;AES.c: 355: key[8]^=key[4];
 32656  0036AE  EE20 F004          	lfsr	2,4
 32657  0036B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32658  0036B4  26D9               	addwf	fsr2l,f,c
 32659  0036B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32660  0036B8  22DA               	addwfc	fsr2h,f,c
 32661  0036BA  50DF               	movf	indf2,w,c
 32662  0036BC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32663  0036BE  EE20 F008          	lfsr	2,8
 32664  0036C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32665  0036C4  26D9               	addwf	fsr2l,f,c
 32666  0036C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32667  0036C8  22DA               	addwfc	fsr2h,f,c
 32668  0036CA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32669  0036CC  1ADF               	xorwf	indf2,f,c
 32670                           
 32671                           ; BSR set to: 0
 32672                           ;AES.c: 356: key[9]^=key[5];
 32673  0036CE  EE20 F005          	lfsr	2,5
 32674  0036D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32675  0036D4  26D9               	addwf	fsr2l,f,c
 32676  0036D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32677  0036D8  22DA               	addwfc	fsr2h,f,c
 32678  0036DA  50DF               	movf	indf2,w,c
 32679  0036DC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32680  0036DE  EE20 F009          	lfsr	2,9
 32681  0036E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32682  0036E4  26D9               	addwf	fsr2l,f,c
 32683  0036E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32684  0036E8  22DA               	addwfc	fsr2h,f,c
 32685  0036EA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32686  0036EC  1ADF               	xorwf	indf2,f,c
 32687                           
 32688                           ; BSR set to: 0
 32689                           ;AES.c: 357: key[10]^=key[6];
 32690  0036EE  EE20 F006          	lfsr	2,6
 32691  0036F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32692  0036F4  26D9               	addwf	fsr2l,f,c
 32693  0036F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32694  0036F8  22DA               	addwfc	fsr2h,f,c
 32695  0036FA  50DF               	movf	indf2,w,c
 32696  0036FC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32697  0036FE  EE20 F00A          	lfsr	2,10
 32698  003702  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32699  003704  26D9               	addwf	fsr2l,f,c
 32700  003706  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32701  003708  22DA               	addwfc	fsr2h,f,c
 32702  00370A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32703  00370C  1ADF               	xorwf	indf2,f,c
 32704                           
 32705                           ; BSR set to: 0
 32706                           ;AES.c: 358: key[11]^=key[7];
 32707  00370E  EE20 F007          	lfsr	2,7
 32708  003712  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32709  003714  26D9               	addwf	fsr2l,f,c
 32710  003716  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32711  003718  22DA               	addwfc	fsr2h,f,c
 32712  00371A  50DF               	movf	indf2,w,c
 32713  00371C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32714  00371E  EE20 F00B          	lfsr	2,11
 32715  003722  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32716  003724  26D9               	addwf	fsr2l,f,c
 32717  003726  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32718  003728  22DA               	addwfc	fsr2h,f,c
 32719  00372A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32720  00372C  1ADF               	xorwf	indf2,f,c
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;AES.c: 361: key[12]^=key[8];
 32724  00372E  EE20 F008          	lfsr	2,8
 32725  003732  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32726  003734  26D9               	addwf	fsr2l,f,c
 32727  003736  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32728  003738  22DA               	addwfc	fsr2h,f,c
 32729  00373A  50DF               	movf	indf2,w,c
 32730  00373C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32731  00373E  EE20 F00C          	lfsr	2,12
 32732  003742  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32733  003744  26D9               	addwf	fsr2l,f,c
 32734  003746  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32735  003748  22DA               	addwfc	fsr2h,f,c
 32736  00374A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32737  00374C  1ADF               	xorwf	indf2,f,c
 32738                           
 32739                           ; BSR set to: 0
 32740                           ;AES.c: 362: key[13]^=key[9];
 32741  00374E  EE20 F009          	lfsr	2,9
 32742  003752  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32743  003754  26D9               	addwf	fsr2l,f,c
 32744  003756  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32745  003758  22DA               	addwfc	fsr2h,f,c
 32746  00375A  50DF               	movf	indf2,w,c
 32747  00375C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32748  00375E  EE20 F00D          	lfsr	2,13
 32749  003762  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32750  003764  26D9               	addwf	fsr2l,f,c
 32751  003766  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32752  003768  22DA               	addwfc	fsr2h,f,c
 32753  00376A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32754  00376C  1ADF               	xorwf	indf2,f,c
 32755                           
 32756                           ; BSR set to: 0
 32757                           ;AES.c: 363: key[14]^=key[10];
 32758  00376E  EE20 F00A          	lfsr	2,10
 32759  003772  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32760  003774  26D9               	addwf	fsr2l,f,c
 32761  003776  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32762  003778  22DA               	addwfc	fsr2h,f,c
 32763  00377A  50DF               	movf	indf2,w,c
 32764  00377C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32765  00377E  EE20 F00E          	lfsr	2,14
 32766  003782  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32767  003784  26D9               	addwf	fsr2l,f,c
 32768  003786  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32769  003788  22DA               	addwfc	fsr2h,f,c
 32770  00378A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32771  00378C  1ADF               	xorwf	indf2,f,c
 32772                           
 32773                           ; BSR set to: 0
 32774                           ;AES.c: 364: key[15]^=key[11];
 32775  00378E  EE20 F00B          	lfsr	2,11
 32776  003792  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32777  003794  26D9               	addwf	fsr2l,f,c
 32778  003796  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32779  003798  22DA               	addwfc	fsr2h,f,c
 32780  00379A  50DF               	movf	indf2,w,c
 32781  00379C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 32782  00379E  EE20 F00F          	lfsr	2,15
 32783  0037A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 32784  0037A4  26D9               	addwf	fsr2l,f,c
 32785  0037A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 32786  0037A8  22DA               	addwfc	fsr2h,f,c
 32787  0037AA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 32788  0037AC  1ADF               	xorwf	indf2,f,c
 32789                           
 32790                           ; BSR set to: 0
 32791  0037AE  0012               	return		;funcret
 32792  0037B0                     __end_of_EncKeySchedule:
 32793                           	opt stack 0
 32794                           tosu	equ	0xFFF
 32795                           tosh	equ	0xFFE
 32796                           tosl	equ	0xFFD
 32797                           pclath	equ	0xFFA
 32798                           tblptru	equ	0xFF8
 32799                           tblptrh	equ	0xFF7
 32800                           tblptrl	equ	0xFF6
 32801                           tablat	equ	0xFF5
 32802                           prodh	equ	0xFF4
 32803                           prodl	equ	0xFF3
 32804                           intcon	equ	0xFF2
 32805                           intcon2	equ	0xFF1
 32806                           intcon3	equ	0xFF0
 32807                           indf0	equ	0xFEF
 32808                           postinc0	equ	0xFEE
 32809                           plusw0	equ	0xFEB
 32810                           fsr0h	equ	0xFEA
 32811                           fsr0l	equ	0xFE9
 32812                           wreg	equ	0xFE8
 32813                           postinc1	equ	0xFE6
 32814                           postdec1	equ	0xFE5
 32815                           plusw1	equ	0xFE3
 32816                           fsr1h	equ	0xFE2
 32817                           fsr1l	equ	0xFE1
 32818                           indf2	equ	0xFDF
 32819                           postinc2	equ	0xFDE
 32820                           postdec2	equ	0xFDD
 32821                           plusw2	equ	0xFDB
 32822                           fsr2h	equ	0xFDA
 32823                           fsr2l	equ	0xFD9
 32824                           status	equ	0xFD8
 32825                           
 32826 ;; *************** function _LORAWAN_Init *****************
 32827 ;; Defined at:
 32828 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32829 ;; Parameters:    Size  Location     Type
 32830 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 32831 ;;		 -> RxData(1), 
 32832 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 32833 ;;		 -> RxJoinResponse(1), 
 32834 ;; Auto vars:     Size  Location     Type
 32835 ;;		None
 32836 ;; Return value:  Size  Location     Type
 32837 ;;                  1    wreg      void 
 32838 ;; Registers used:
 32839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32840 ;; Tracked objects:
 32841 ;;		On entry : 0/0
 32842 ;;		On exit  : 0/0
 32843 ;;		Unchanged: 0/0
 32844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32849 ;;Total ram usage:        4 bytes
 32850 ;; Hardware stack levels used:    1
 32851 ;; Hardware stack levels required when called:   13
 32852 ;; This function calls:
 32853 ;;		_CreateAllSoftwareTimers
 32854 ;;		_LORAWAN_Reset
 32855 ;;		_RADIO_Init
 32856 ;;		_RADIO_ReadRandom
 32857 ;;		_SetCallbackSoftwareTimers
 32858 ;;		_StopAllSoftwareTimers
 32859 ;;		_srand
 32860 ;; This function is called by:
 32861 ;;		_main
 32862 ;; This function uses a non-reentrant model
 32863 ;;
 32864                           
 32865                           	psect	text148
 32866  0079AC                     __ptext148:
 32867                           	opt stack 0
 32868  0079AC                     _LORAWAN_Init:
 32869                           	opt stack 17
 32870                           
 32871                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 32872                           
 32873                           ; BSR set to: 0
 32874                           ;incstack = 0
 32875  0079AC  0102               	movlb	2	; () banked
 32876  0079AE  51F0               	movf	(_loRa+240)& (0+255),w,b
 32877  0079B0  A4D8               	btfss	status,2,c
 32878  0079B2  D008               	goto	l1014
 32879                           
 32880                           ; BSR set to: 2
 32881                           ;lorawan_eu.c: 127: {
 32882                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 32883  0079B4  EC75  F03F         	call	_CreateAllSoftwareTimers	;wreg free
 32884                           
 32885                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 32886  0079B8  ECC7  F032         	call	_SetCallbackSoftwareTimers	;wreg free
 32887                           
 32888                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 32889  0079BC  0E01               	movlw	1
 32890  0079BE  0102               	movlb	2	; () banked
 32891  0079C0  6FF0               	movwf	(_loRa+240)& (0+255),b
 32892                           
 32893                           ;lorawan_eu.c: 131: }
 32894  0079C2  D002               	goto	l1015
 32895  0079C4                     l1014:
 32896                           
 32897                           ; BSR set to: 2
 32898                           ;lorawan_eu.c: 132: else
 32899                           ;lorawan_eu.c: 133: {
 32900                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 32901                           
 32902                           ; BSR set to: 2
 32903  0079C4  EC4C  F03F         	call	_StopAllSoftwareTimers	;wreg free
 32904  0079C8                     l1015:
 32905                           
 32906                           ;lorawan_eu.c: 135: }
 32907                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 32908  0079C8  C0B2  F169         	movff	LORAWAN_Init@RxPayload,_rxPayload
 32909  0079CC  C0B3  F16A         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 32910                           
 32911                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 32912  0079D0  C0B4  F16B         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 32913  0079D4  C0B5  F16C         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 32914                           
 32915                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 32916  0079D8  0EFF               	movlw	low (_radioBuffer+16)
 32917  0079DA  0100               	movlb	0	; () banked
 32918  0079DC  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 32919  0079DE  0E05               	movlw	high (_radioBuffer+16)
 32920  0079E0  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 32921  0079E2  0EA0               	movlw	160
 32922  0079E4  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 32923  0079E6  0E27               	movlw	39
 32924  0079E8  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 32925  0079EA  0EBE               	movlw	190
 32926  0079EC  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 32927  0079EE  0E33               	movlw	51
 32928  0079F0  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 32929  0079F2  EC18  F023         	call	_RADIO_Init	;wreg free
 32930                           
 32931                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 32932  0079F6  EC7F  F036         	call	_RADIO_ReadRandom	;wreg free
 32933  0079FA  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 32934  0079FE  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 32935  007A02  EC86  F045         	call	_srand	;wreg free
 32936                           
 32937                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 32938  007A06  0E00               	movlw	0
 32939  007A08  EC31  F022         	call	_LORAWAN_Reset
 32940  007A0C  0012               	return		;funcret
 32941  007A0E                     __end_of_LORAWAN_Init:
 32942                           	opt stack 0
 32943                           tosu	equ	0xFFF
 32944                           tosh	equ	0xFFE
 32945                           tosl	equ	0xFFD
 32946                           pclath	equ	0xFFA
 32947                           tblptru	equ	0xFF8
 32948                           tblptrh	equ	0xFF7
 32949                           tblptrl	equ	0xFF6
 32950                           tablat	equ	0xFF5
 32951                           prodh	equ	0xFF4
 32952                           prodl	equ	0xFF3
 32953                           intcon	equ	0xFF2
 32954                           intcon2	equ	0xFF1
 32955                           intcon3	equ	0xFF0
 32956                           indf0	equ	0xFEF
 32957                           postinc0	equ	0xFEE
 32958                           plusw0	equ	0xFEB
 32959                           fsr0h	equ	0xFEA
 32960                           fsr0l	equ	0xFE9
 32961                           wreg	equ	0xFE8
 32962                           postinc1	equ	0xFE6
 32963                           postdec1	equ	0xFE5
 32964                           plusw1	equ	0xFE3
 32965                           fsr1h	equ	0xFE2
 32966                           fsr1l	equ	0xFE1
 32967                           indf2	equ	0xFDF
 32968                           postinc2	equ	0xFDE
 32969                           postdec2	equ	0xFDD
 32970                           plusw2	equ	0xFDB
 32971                           fsr2h	equ	0xFDA
 32972                           fsr2l	equ	0xFD9
 32973                           status	equ	0xFD8
 32974                           
 32975 ;; *************** function _srand *****************
 32976 ;; Defined at:
 32977 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 32978 ;; Parameters:    Size  Location     Type
 32979 ;;  x               2   18[BANK0 ] unsigned int 
 32980 ;; Auto vars:     Size  Location     Type
 32981 ;;		None
 32982 ;; Return value:  Size  Location     Type
 32983 ;;                  1    wreg      void 
 32984 ;; Registers used:
 32985 ;;		status,2
 32986 ;; Tracked objects:
 32987 ;;		On entry : 0/0
 32988 ;;		On exit  : 0/0
 32989 ;;		Unchanged: 0/0
 32990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32995 ;;Total ram usage:        2 bytes
 32996 ;; Hardware stack levels used:    1
 32997 ;; Hardware stack levels required when called:    7
 32998 ;; This function calls:
 32999 ;;		Nothing
 33000 ;; This function is called by:
 33001 ;;		_LORAWAN_Init
 33002 ;; This function uses a non-reentrant model
 33003 ;;
 33004                           
 33005                           	psect	text149
 33006  008B0C                     __ptext149:
 33007                           	opt stack 0
 33008  008B0C                     _srand:
 33009                           	opt stack 22
 33010                           
 33011                           ;incstack = 0
 33012  008B0C  C072  F1D0         	movff	srand@x,_randx
 33013  008B10  C073  F1D1         	movff	srand@x+1,_randx+1
 33014  008B14  0101               	movlb	1	; () banked
 33015  008B16  6BD2               	clrf	(_randx+2)& (0+255),b
 33016  008B18  6BD3               	clrf	(_randx+3)& (0+255),b
 33017                           
 33018                           ; BSR set to: 1
 33019  008B1A  0012               	return		;funcret
 33020  008B1C                     __end_of_srand:
 33021                           	opt stack 0
 33022                           tosu	equ	0xFFF
 33023                           tosh	equ	0xFFE
 33024                           tosl	equ	0xFFD
 33025                           pclath	equ	0xFFA
 33026                           tblptru	equ	0xFF8
 33027                           tblptrh	equ	0xFF7
 33028                           tblptrl	equ	0xFF6
 33029                           tablat	equ	0xFF5
 33030                           prodh	equ	0xFF4
 33031                           prodl	equ	0xFF3
 33032                           intcon	equ	0xFF2
 33033                           intcon2	equ	0xFF1
 33034                           intcon3	equ	0xFF0
 33035                           indf0	equ	0xFEF
 33036                           postinc0	equ	0xFEE
 33037                           plusw0	equ	0xFEB
 33038                           fsr0h	equ	0xFEA
 33039                           fsr0l	equ	0xFE9
 33040                           wreg	equ	0xFE8
 33041                           postinc1	equ	0xFE6
 33042                           postdec1	equ	0xFE5
 33043                           plusw1	equ	0xFE3
 33044                           fsr1h	equ	0xFE2
 33045                           fsr1l	equ	0xFE1
 33046                           indf2	equ	0xFDF
 33047                           postinc2	equ	0xFDE
 33048                           postdec2	equ	0xFDD
 33049                           plusw2	equ	0xFDB
 33050                           fsr2h	equ	0xFDA
 33051                           fsr2l	equ	0xFD9
 33052                           status	equ	0xFD8
 33053                           
 33054 ;; *************** function _SetCallbackSoftwareTimers *****************
 33055 ;; Defined at:
 33056 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33057 ;; Parameters:    Size  Location     Type
 33058 ;;		None
 33059 ;; Auto vars:     Size  Location     Type
 33060 ;;		None
 33061 ;; Return value:  Size  Location     Type
 33062 ;;                  1    wreg      void 
 33063 ;; Registers used:
 33064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33065 ;; Tracked objects:
 33066 ;;		On entry : 0/0
 33067 ;;		On exit  : 0/0
 33068 ;;		Unchanged: 0/0
 33069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33074 ;;Total ram usage:        0 bytes
 33075 ;; Hardware stack levels used:    1
 33076 ;; Hardware stack levels required when called:    8
 33077 ;; This function calls:
 33078 ;;		_SwTimerSetCallback
 33079 ;; This function is called by:
 33080 ;;		_LORAWAN_Init
 33081 ;; This function uses a non-reentrant model
 33082 ;;
 33083                           
 33084                           	psect	text150
 33085  00658E                     __ptext150:
 33086                           	opt stack 0
 33087  00658E                     _SetCallbackSoftwareTimers:
 33088                           	opt stack 21
 33089                           
 33090                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 33091                           
 33092                           ; BSR set to: 1
 33093                           ;incstack = 0
 33094  00658E  0E9A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 33095  006590  0100               	movlb	0	; () banked
 33096  006592  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33097  006594  0E69               	movlw	high _LORAWAN_ReceiveWindow1Callback
 33098  006596  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33099  006598  0E00               	movlw	0
 33100  00659A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33101  00659C  0102               	movlb	2	; () banked
 33102  00659E  51E2               	movf	(_loRa+226)& (0+255),w,b
 33103  0065A0  ECB9  F040         	call	_SwTimerSetCallback
 33104                           
 33105                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 33106  0065A4  0E6C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 33107  0065A6  0100               	movlb	0	; () banked
 33108  0065A8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33109  0065AA  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 33110  0065AC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33111  0065AE  0E00               	movlw	0
 33112  0065B0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33113  0065B2  0102               	movlb	2	; () banked
 33114  0065B4  51E3               	movf	(_loRa+227)& (0+255),w,b
 33115  0065B6  ECB9  F040         	call	_SwTimerSetCallback
 33116                           
 33117                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 33118  0065BA  0EA4               	movlw	low _LORAWAN_LinkCheckCallback
 33119  0065BC  0100               	movlb	0	; () banked
 33120  0065BE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33121  0065C0  0E4C               	movlw	high _LORAWAN_LinkCheckCallback
 33122  0065C2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33123  0065C4  0E00               	movlw	0
 33124  0065C6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33125  0065C8  0102               	movlb	2	; () banked
 33126  0065CA  51E7               	movf	(_loRa+231)& (0+255),w,b
 33127  0065CC  ECB9  F040         	call	_SwTimerSetCallback
 33128                           
 33129                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 33130  0065D0  0E9A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 33131  0065D2  0100               	movlb	0	; () banked
 33132  0065D4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33133  0065D6  0E69               	movlw	high _LORAWAN_ReceiveWindow1Callback
 33134  0065D8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33135  0065DA  0E00               	movlw	0
 33136  0065DC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33137  0065DE  0102               	movlb	2	; () banked
 33138  0065E0  51E4               	movf	(_loRa+228)& (0+255),w,b
 33139  0065E2  ECB9  F040         	call	_SwTimerSetCallback
 33140                           
 33141                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 33142  0065E6  0E6C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 33143  0065E8  0100               	movlb	0	; () banked
 33144  0065EA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33145  0065EC  0E66               	movlw	high _LORAWAN_ReceiveWindow2Callback
 33146  0065EE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33147  0065F0  0E00               	movlw	0
 33148  0065F2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33149  0065F4  0102               	movlb	2	; () banked
 33150  0065F6  51E5               	movf	(_loRa+229)& (0+255),w,b
 33151  0065F8  ECB9  F040         	call	_SwTimerSetCallback
 33152                           
 33153                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 33154  0065FC  0EFA               	movlw	low _AckRetransmissionCallback
 33155  0065FE  0100               	movlb	0	; () banked
 33156  006600  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33157  006602  0E5A               	movlw	high _AckRetransmissionCallback
 33158  006604  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33159  006606  0E00               	movlw	0
 33160  006608  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33161  00660A  0102               	movlb	2	; () banked
 33162  00660C  51E8               	movf	(_loRa+232)& (0+255),w,b
 33163  00660E  ECB9  F040         	call	_SwTimerSetCallback
 33164                           
 33165                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 33166  006612  0E54               	movlw	low _AutomaticReplyCallback
 33167  006614  0100               	movlb	0	; () banked
 33168  006616  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33169  006618  0E87               	movlw	high _AutomaticReplyCallback
 33170  00661A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33171  00661C  0E00               	movlw	0
 33172  00661E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33173  006620  0102               	movlb	2	; () banked
 33174  006622  51E6               	movf	(_loRa+230)& (0+255),w,b
 33175  006624  ECB9  F040         	call	_SwTimerSetCallback
 33176                           
 33177                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 33178  006628  0E20               	movlw	low _UnconfirmedTransmissionCallback
 33179  00662A  0100               	movlb	0	; () banked
 33180  00662C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33181  00662E  0E75               	movlw	high _UnconfirmedTransmissionCallback
 33182  006630  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33183  006632  0E00               	movlw	0
 33184  006634  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33185  006636  0102               	movlb	2	; () banked
 33186  006638  51EA               	movf	(_loRa+234)& (0+255),w,b
 33187  00663A  ECB9  F040         	call	_SwTimerSetCallback
 33188                           
 33189                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 33190  00663E  0E3E               	movlw	low _UpdateJoinSuccessState
 33191  006640  0100               	movlb	0	; () banked
 33192  006642  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33193  006644  0E56               	movlw	high _UpdateJoinSuccessState
 33194  006646  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33195  006648  0E00               	movlw	0
 33196  00664A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33197  00664C  0102               	movlb	2	; () banked
 33198  00664E  51F3               	movf	(_loRa+243)& (0+255),w,b
 33199  006650  ECB9  F040         	call	_SwTimerSetCallback
 33200                           
 33201                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 33202  006654  0E48               	movlw	low _DutyCycleCallback
 33203  006656  0100               	movlb	0	; () banked
 33204  006658  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 33205  00665A  0E2C               	movlw	high _DutyCycleCallback
 33206  00665C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33207  00665E  0E00               	movlw	0
 33208  006660  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 33209  006662  0102               	movlb	2	; () banked
 33210  006664  51E9               	movf	(_loRa+233)& (0+255),w,b
 33211  006666  ECB9  F040         	call	_SwTimerSetCallback
 33212  00666A  0012               	return		;funcret
 33213  00666C                     __end_of_SetCallbackSoftwareTimers:
 33214                           	opt stack 0
 33215                           tosu	equ	0xFFF
 33216                           tosh	equ	0xFFE
 33217                           tosl	equ	0xFFD
 33218                           pclath	equ	0xFFA
 33219                           tblptru	equ	0xFF8
 33220                           tblptrh	equ	0xFF7
 33221                           tblptrl	equ	0xFF6
 33222                           tablat	equ	0xFF5
 33223                           prodh	equ	0xFF4
 33224                           prodl	equ	0xFF3
 33225                           intcon	equ	0xFF2
 33226                           intcon2	equ	0xFF1
 33227                           intcon3	equ	0xFF0
 33228                           indf0	equ	0xFEF
 33229                           postinc0	equ	0xFEE
 33230                           plusw0	equ	0xFEB
 33231                           fsr0h	equ	0xFEA
 33232                           fsr0l	equ	0xFE9
 33233                           wreg	equ	0xFE8
 33234                           postinc1	equ	0xFE6
 33235                           postdec1	equ	0xFE5
 33236                           plusw1	equ	0xFE3
 33237                           fsr1h	equ	0xFE2
 33238                           fsr1l	equ	0xFE1
 33239                           indf2	equ	0xFDF
 33240                           postinc2	equ	0xFDE
 33241                           postdec2	equ	0xFDD
 33242                           plusw2	equ	0xFDB
 33243                           fsr2h	equ	0xFDA
 33244                           fsr2l	equ	0xFD9
 33245                           status	equ	0xFD8
 33246                           
 33247 ;; *************** function _RADIO_ReadRandom *****************
 33248 ;; Defined at:
 33249 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33250 ;; Parameters:    Size  Location     Type
 33251 ;;		None
 33252 ;; Auto vars:     Size  Location     Type
 33253 ;;  retVal          2   15[BANK0 ] unsigned int 
 33254 ;;  i               1   17[BANK0 ] unsigned char 
 33255 ;; Return value:  Size  Location     Type
 33256 ;;                  2   12[BANK0 ] unsigned int 
 33257 ;; Registers used:
 33258 ;;		wreg, status,2, status,0, cstack
 33259 ;; Tracked objects:
 33260 ;;		On entry : 0/0
 33261 ;;		On exit  : 0/0
 33262 ;;		Unchanged: 0/0
 33263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33268 ;;Total ram usage:        6 bytes
 33269 ;; Hardware stack levels used:    1
 33270 ;; Hardware stack levels required when called:   11
 33271 ;; This function calls:
 33272 ;;		_RADIO_RegisterRead
 33273 ;;		_RADIO_RegisterWrite
 33274 ;;		_RADIO_WriteMode
 33275 ;;		_SystemBlockingWaitMs
 33276 ;; This function is called by:
 33277 ;;		_LORAWAN_Init
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text151
 33282  006CFE                     __ptext151:
 33283                           	opt stack 0
 33284  006CFE                     _RADIO_ReadRandom:
 33285                           	opt stack 18
 33286                           
 33287                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 33288                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 33289                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 33290                           
 33291                           ;incstack = 0
 33292  006CFE  0E00               	movlw	0
 33293  006D00  0100               	movlb	0	; () banked
 33294  006D02  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 33295  006D04  0E00               	movlw	0
 33296  006D06  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 33297                           
 33298                           ; BSR set to: 0
 33299                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33300  006D08  0E01               	movlw	1
 33301  006D0A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33302  006D0C  0E01               	movlw	1
 33303  006D0E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33304  006D10  0E00               	movlw	0
 33305  006D12  EC0D  F02F         	call	_RADIO_WriteMode
 33306                           
 33307                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 33308  006D16  0EFF               	movlw	255
 33309  006D18  0100               	movlb	0	; () banked
 33310  006D1A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33311  006D1C  0E11               	movlw	17
 33312  006D1E  EC33  F044         	call	_RADIO_RegisterWrite
 33313                           
 33314                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 33315  006D22  0E01               	movlw	1
 33316  006D24  0100               	movlb	0	; () banked
 33317  006D26  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33318  006D28  0E01               	movlw	1
 33319  006D2A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33320  006D2C  0E05               	movlw	5
 33321  006D2E  EC0D  F02F         	call	_RADIO_WriteMode
 33322                           
 33323                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 33324  006D32  0E00               	movlw	0
 33325  006D34  0100               	movlb	0	; () banked
 33326  006D36  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 33327  006D38                     l16061:
 33328                           
 33329                           ; BSR set to: 0
 33330  006D38  0E0F               	movlw	15
 33331  006D3A  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 33332  006D3C  D001               	goto	l718
 33333  006D3E  D019               	goto	u19970
 33334  006D40                     l718:
 33335                           
 33336                           ; BSR set to: 0
 33337                           ;radio_driver_SX1276.c: 1377: {
 33338                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 33339                           
 33340                           ; BSR set to: 0
 33341  006D40  0E01               	movlw	1
 33342  006D42  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33343  006D44  0E00               	movlw	0
 33344  006D46  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33345  006D48  0E00               	movlw	0
 33346  006D4A  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33347  006D4C  0E00               	movlw	0
 33348  006D4E  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33349  006D50  EC53  F042         	call	_SystemBlockingWaitMs	;wreg free
 33350                           
 33351                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 33352  006D54  0100               	movlb	0	; () banked
 33353  006D56  90D8               	bcf	status,0,c
 33354  006D58  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 33355  006D5A  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 33359  006D5C  0E2C               	movlw	44
 33360  006D5E  EC82  F043         	call	_RADIO_RegisterRead
 33361  006D62  0100               	movlb	0	; () banked
 33362  006D64  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 33363  006D66  0E01               	movlw	1
 33364  006D68  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 33365  006D6A  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 33366  006D6C  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 33367  006D6E  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 33368  006D70  D7E3               	goto	l16061
 33369  006D72                     u19970:
 33370                           
 33371                           ; BSR set to: 0
 33372                           ;radio_driver_SX1276.c: 1381: }
 33373                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33374                           
 33375                           ; BSR set to: 0
 33376  006D72  0E01               	movlw	1
 33377  006D74  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33378  006D76  0E01               	movlw	1
 33379  006D78  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33380  006D7A  0E00               	movlw	0
 33381  006D7C  EC0D  F02F         	call	_RADIO_WriteMode
 33382                           
 33383                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 33384  006D80  0EFF               	movlw	255
 33385  006D82  0100               	movlb	0	; () banked
 33386  006D84  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33387  006D86  0E12               	movlw	18
 33388  006D88  EC33  F044         	call	_RADIO_RegisterWrite
 33389                           
 33390                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 33391  006D8C  0E00               	movlw	0
 33392  006D8E  0100               	movlb	0	; () banked
 33393  006D90  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33394  006D92  0E11               	movlw	17
 33395  006D94  EC33  F044         	call	_RADIO_RegisterWrite
 33396                           
 33397                           ;radio_driver_SX1276.c: 1389: return retVal;
 33398  006D98  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 33399  006D9C  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 33400  006DA0  0012               	return	
 33401  006DA2                     __end_of_RADIO_ReadRandom:
 33402                           	opt stack 0
 33403                           tosu	equ	0xFFF
 33404                           tosh	equ	0xFFE
 33405                           tosl	equ	0xFFD
 33406                           pclath	equ	0xFFA
 33407                           tblptru	equ	0xFF8
 33408                           tblptrh	equ	0xFF7
 33409                           tblptrl	equ	0xFF6
 33410                           tablat	equ	0xFF5
 33411                           prodh	equ	0xFF4
 33412                           prodl	equ	0xFF3
 33413                           intcon	equ	0xFF2
 33414                           intcon2	equ	0xFF1
 33415                           intcon3	equ	0xFF0
 33416                           indf0	equ	0xFEF
 33417                           postinc0	equ	0xFEE
 33418                           plusw0	equ	0xFEB
 33419                           fsr0h	equ	0xFEA
 33420                           fsr0l	equ	0xFE9
 33421                           wreg	equ	0xFE8
 33422                           postinc1	equ	0xFE6
 33423                           postdec1	equ	0xFE5
 33424                           plusw1	equ	0xFE3
 33425                           fsr1h	equ	0xFE2
 33426                           fsr1l	equ	0xFE1
 33427                           indf2	equ	0xFDF
 33428                           postinc2	equ	0xFDE
 33429                           postdec2	equ	0xFDD
 33430                           plusw2	equ	0xFDB
 33431                           fsr2h	equ	0xFDA
 33432                           fsr2l	equ	0xFD9
 33433                           status	equ	0xFD8
 33434                           
 33435 ;; *************** function _LORAWAN_Reset *****************
 33436 ;; Defined at:
 33437 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33438 ;; Parameters:    Size  Location     Type
 33439 ;;  ismBandNew      1    wreg     enum E7280
 33440 ;; Auto vars:     Size  Location     Type
 33441 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 33442 ;; Return value:  Size  Location     Type
 33443 ;;                  1    wreg      void 
 33444 ;; Registers used:
 33445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33446 ;; Tracked objects:
 33447 ;;		On entry : 0/0
 33448 ;;		On exit  : 0/0
 33449 ;;		Unchanged: 0/0
 33450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33454 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33455 ;;Total ram usage:        1 bytes
 33456 ;; Hardware stack levels used:    1
 33457 ;; Hardware stack levels required when called:   12
 33458 ;; This function calls:
 33459 ;;		_InitDefault433Channels
 33460 ;;		_InitDefault868Channels
 33461 ;;		_LORAWAN_LinkCheckConfigure
 33462 ;;		_RADIO_Init
 33463 ;;		_RADIO_SetLoRaSyncWord
 33464 ;;		_StopAllSoftwareTimers
 33465 ;;		_UpdateMinMaxChDataRate
 33466 ;;		_memset
 33467 ;; This function is called by:
 33468 ;;		_LORAWAN_Init
 33469 ;; This function uses a non-reentrant model
 33470 ;;
 33471                           
 33472                           	psect	text152
 33473  004462                     __ptext152:
 33474                           	opt stack 0
 33475  004462                     _LORAWAN_Reset:
 33476                           	opt stack 17
 33477                           
 33478                           ;incstack = 0
 33479                           ;LORAWAN_Reset@ismBandNew stored from wreg
 33480  004462  0100               	movlb	0	; () banked
 33481  004464  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 33482                           
 33483                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 33484  004466  0102               	movlb	2	; () banked
 33485  004468  05F0               	decf	(_loRa+240)& (0+255),w,b
 33486  00446A  B4D8               	btfsc	status,2,c
 33487                           
 33488                           ; BSR set to: 2
 33489                           ;lorawan_eu.c: 151: {
 33490                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 33491  00446C  EC4C  F03F         	call	_StopAllSoftwareTimers	;wreg free
 33492                           
 33493                           ;lorawan_eu.c: 153: }
 33494                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 33495  004470  0E34               	movlw	52
 33496  004472  0102               	movlb	2	; () banked
 33497  004474  6FF4               	movwf	(_loRa+244)& (0+255),b
 33498                           
 33499                           ; BSR set to: 2
 33500                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 33501  004476  51F4               	movf	(_loRa+244)& (0+255),w,b
 33502  004478  ECEF  F045         	call	_RADIO_SetLoRaSyncWord
 33503                           
 33504                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 33505  00447C  0E00               	movlw	0
 33506  00447E  0102               	movlb	2	; () banked
 33507  004480  6F02               	movwf	(_loRa+2)& (0+255),b
 33508  004482  0E00               	movlw	0
 33509  004484  6F03               	movwf	(_loRa+3)& (0+255),b
 33510  004486  0E00               	movlw	0
 33511  004488  6F04               	movwf	(_loRa+4)& (0+255),b
 33512  00448A  0E00               	movlw	0
 33513  00448C  6F05               	movwf	(_loRa+5)& (0+255),b
 33514                           
 33515                           ; BSR set to: 2
 33516                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 33517  00448E  69DD               	setf	(_loRa+221)& (0+255),b
 33518                           
 33519                           ; BSR set to: 2
 33520                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 33521  004490  0E00               	movlw	0
 33522  004492  6FDE               	movwf	(_loRa+222)& (0+255),b
 33523                           
 33524                           ; BSR set to: 2
 33525                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 33526  004494  0E00               	movlw	0
 33527  004496  6FC8               	movwf	(_loRa+200)& (0+255),b
 33528  004498  0E00               	movlw	0
 33529  00449A  6FC9               	movwf	(_loRa+201)& (0+255),b
 33530  00449C  0E00               	movlw	0
 33531  00449E  6FCA               	movwf	(_loRa+202)& (0+255),b
 33532  0044A0  0E00               	movlw	0
 33533  0044A2  6FCB               	movwf	(_loRa+203)& (0+255),b
 33534                           
 33535                           ; BSR set to: 2
 33536                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 33537  0044A4  0E00               	movlw	0
 33538  0044A6  6FD5               	movwf	(_loRa+213)& (0+255),b
 33539  0044A8  0E00               	movlw	0
 33540  0044AA  6FD4               	movwf	(_loRa+212)& (0+255),b
 33541                           
 33542                           ; BSR set to: 2
 33543                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 33544  0044AC  0E00               	movlw	0
 33545  0044AE  6F0A               	movwf	(_loRa+10)& (0+255),b
 33546  0044B0  0E00               	movlw	0
 33547  0044B2  6F0B               	movwf	(_loRa+11)& (0+255),b
 33548  0044B4  0E00               	movlw	0
 33549  0044B6  6F0C               	movwf	(_loRa+12)& (0+255),b
 33550  0044B8  0E00               	movlw	0
 33551  0044BA  6F0D               	movwf	(_loRa+13)& (0+255),b
 33552                           
 33553                           ; BSR set to: 2
 33554                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 33555  0044BC  0E00               	movlw	0
 33556  0044BE  6F06               	movwf	(_loRa+6)& (0+255),b
 33557  0044C0  0E00               	movlw	0
 33558  0044C2  6F07               	movwf	(_loRa+7)& (0+255),b
 33559  0044C4  0E00               	movlw	0
 33560  0044C6  6F08               	movwf	(_loRa+8)& (0+255),b
 33561  0044C8  0E00               	movlw	0
 33562  0044CA  6F09               	movwf	(_loRa+9)& (0+255),b
 33563                           
 33564                           ; BSR set to: 2
 33565                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 33566  0044CC  0E00               	movlw	0
 33567  0044CE  6FD3               	movwf	(_loRa+211)& (0+255),b
 33568  0044D0  0E00               	movlw	0
 33569  0044D2  6FD2               	movwf	(_loRa+210)& (0+255),b
 33570                           
 33571                           ; BSR set to: 2
 33572                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 33573  0044D4  0E00               	movlw	0
 33574  0044D6  6FDC               	movwf	(_loRa+220)& (0+255),b
 33575  0044D8  0E01               	movlw	1
 33576  0044DA  6FDB               	movwf	(_loRa+219)& (0+255),b
 33577                           
 33578                           ; BSR set to: 2
 33579                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 33580  0044DC  0E00               	movlw	0
 33581  0044DE  6FD1               	movwf	(_loRa+209)& (0+255),b
 33582  0044E0  0E00               	movlw	0
 33583  0044E2  6FD0               	movwf	(_loRa+208)& (0+255),b
 33584                           
 33585                           ; BSR set to: 2
 33586                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 33587  0044E4  0E00               	movlw	0
 33588  0044E6  6FEE               	movwf	(_loRa+238)& (0+255),b
 33589                           
 33590                           ; BSR set to: 2
 33591                           ;lorawan_eu.c: 169: loRa.offset = 0;
 33592  0044E8  0E00               	movlw	0
 33593  0044EA  6FEF               	movwf	(_loRa+239)& (0+255),b
 33594                           
 33595                           ; BSR set to: 2
 33596                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 33597  0044EC  0E00               	movlw	0
 33598  0044EE  6FC8               	movwf	(_loRa+200)& (0+255),b
 33599  0044F0  0E00               	movlw	0
 33600  0044F2  6FC9               	movwf	(_loRa+201)& (0+255),b
 33601  0044F4  0E00               	movlw	0
 33602  0044F6  6FCA               	movwf	(_loRa+202)& (0+255),b
 33603  0044F8  0E00               	movlw	0
 33604  0044FA  6FCB               	movwf	(_loRa+203)& (0+255),b
 33605                           
 33606                           ; BSR set to: 2
 33607                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 33608  0044FC  9503               	bcf	(_loRa+3)& (0+255),2,b
 33609                           
 33610                           ; BSR set to: 2
 33611                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 33612  0044FE  0E00               	movlw	0
 33613  004500  6F02               	movwf	(_loRa+2)& (0+255),b
 33614  004502  0E00               	movlw	0
 33615  004504  6F03               	movwf	(_loRa+3)& (0+255),b
 33616  004506  0E00               	movlw	0
 33617  004508  6F04               	movwf	(_loRa+4)& (0+255),b
 33618  00450A  0E00               	movlw	0
 33619  00450C  6F05               	movwf	(_loRa+5)& (0+255),b
 33620                           
 33621                           ; BSR set to: 2
 33622                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 33623  00450E  0E00               	movlw	0
 33624  004510  6F01               	movwf	(_loRa+1)& (0+255),b
 33625  004512  0E00               	movlw	0
 33626  004514  6F00               	movwf	_loRa& (0+255),b
 33627                           
 33628                           ; BSR set to: 2
 33629                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 33630  004516  0E07               	movlw	7
 33631  004518  6FD7               	movwf	(_loRa+215)& (0+255),b
 33632                           
 33633                           ; BSR set to: 2
 33634                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 33635  00451A  0E00               	movlw	0
 33636  00451C  6FD6               	movwf	(_loRa+214)& (0+255),b
 33637                           
 33638                           ; BSR set to: 2
 33639                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 33640  00451E  0E01               	movlw	1
 33641  004520  6FD9               	movwf	(_loRa+217)& (0+255),b
 33642                           
 33643                           ; BSR set to: 2
 33644                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 33645  004522  0E01               	movlw	1
 33646  004524  6FD8               	movwf	(_loRa+216)& (0+255),b
 33647                           
 33648                           ; BSR set to: 2
 33649                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 33650  004526  69E0               	setf	(_loRa+224)& (0+255),b
 33651                           
 33652                           ; BSR set to: 2
 33653                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 33654  004528  C0B1  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 33655                           
 33656                           ; BSR set to: 2
 33657                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 33658  00452C  0E00               	movlw	0
 33659  00452E  6F12               	movwf	(_loRa+18)& (0+255),b
 33660                           
 33661                           ; BSR set to: 2
 33662                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 33663  004530  0E10               	movlw	16
 33664  004532  6FED               	movwf	(_loRa+237)& (0+255),b
 33665                           
 33666                           ; BSR set to: 2
 33667                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 33668  004534  0100               	movlb	0	; () banked
 33669  004536  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 33670  004538  A4D8               	btfss	status,2,c
 33671  00453A  D01B               	goto	l1020
 33672                           
 33673                           ; BSR set to: 0
 33674                           ;lorawan_eu.c: 193: {
 33675                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 33676  00453C  0EFF               	movlw	low (_radioBuffer+16)
 33677  00453E  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 33678  004540  0E05               	movlw	high (_radioBuffer+16)
 33679  004542  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33680  004544  0EA0               	movlw	160
 33681  004546  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 33682  004548  0E27               	movlw	39
 33683  00454A  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33684  00454C  0EBE               	movlw	190
 33685  00454E  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33686  004550  0E33               	movlw	51
 33687  004552  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33688  004554  EC18  F023         	call	_RADIO_Init	;wreg free
 33689                           
 33690                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 33691  004558  EC7F  F038         	call	_InitDefault868Channels	;wreg free
 33692                           
 33693                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 33694  00455C  0E00               	movlw	0
 33695  00455E  0102               	movlb	2	; () banked
 33696  004560  6F1C               	movwf	(_loRa+28)& (0+255),b
 33697                           
 33698                           ; BSR set to: 2
 33699                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 33700  004562  0E08               	movlw	8
 33701  004564  6F18               	movwf	(_loRa+24)& (0+255),b
 33702  004566  0EE6               	movlw	230
 33703  004568  6F19               	movwf	(_loRa+25)& (0+255),b
 33704  00456A  0ED3               	movlw	211
 33705  00456C  6F1A               	movwf	(_loRa+26)& (0+255),b
 33706  00456E  0E33               	movlw	51
 33707  004570  D01B               	goto	L25
 33708  004572                     l1020:
 33709                           
 33710                           ;lorawan_eu.c: 201: else
 33711                           ;lorawan_eu.c: 202: {
 33712                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 33713                           
 33714                           ; BSR set to: 2
 33715  004572  0EFF               	movlw	low (_radioBuffer+16)
 33716  004574  0100               	movlb	0	; () banked
 33717  004576  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 33718  004578  0E05               	movlw	high (_radioBuffer+16)
 33719  00457A  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 33720  00457C  0E20               	movlw	32
 33721  00457E  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 33722  004580  0EA2               	movlw	162
 33723  004582  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 33724  004584  0ED3               	movlw	211
 33725  004586  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 33726  004588  0E19               	movlw	25
 33727  00458A  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 33728  00458C  EC18  F023         	call	_RADIO_Init	;wreg free
 33729                           
 33730                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 33731  004590  ECC4  F038         	call	_InitDefault433Channels	;wreg free
 33732                           
 33733                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 33734  004594  0E00               	movlw	0
 33735  004596  0102               	movlb	2	; () banked
 33736  004598  6F1C               	movwf	(_loRa+28)& (0+255),b
 33737                           
 33738                           ; BSR set to: 2
 33739                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 33740  00459A  0E28               	movlw	40
 33741  00459C  6F18               	movwf	(_loRa+24)& (0+255),b
 33742  00459E  0E76               	movlw	118
 33743  0045A0  6F19               	movwf	(_loRa+25)& (0+255),b
 33744  0045A2  0EE8               	movlw	232
 33745  0045A4  6F1A               	movwf	(_loRa+26)& (0+255),b
 33746  0045A6  0E19               	movlw	25
 33747  0045A8                     L25:
 33748  0045A8  6F1B               	movwf	(_loRa+27)& (0+255),b
 33749                           
 33750                           ; BSR set to: 2
 33751                           ;lorawan_eu.c: 209: }
 33752                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 33753                           
 33754                           ; BSR set to: 2
 33755  0045AA  0E01               	movlw	1
 33756  0045AC  6FE1               	movwf	(_loRa+225)& (0+255),b
 33757                           
 33758                           ; BSR set to: 2
 33759                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 33760  0045AE  0E00               	movlw	0
 33761  0045B0  6FDF               	movwf	(_loRa+223)& (0+255),b
 33762                           
 33763                           ; BSR set to: 2
 33764                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 33765  0045B2  EC8C  F02F         	call	_UpdateMinMaxChDataRate	;wreg free
 33766                           
 33767                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 33768  0045B6  0E00               	movlw	0
 33769  0045B8  0102               	movlb	2	; () banked
 33770  0045BA  6FA6               	movwf	(_loRa+166)& (0+255),b
 33771  0045BC  0E00               	movlw	0
 33772  0045BE  6FA5               	movwf	(_loRa+165)& (0+255),b
 33773                           
 33774                           ; BSR set to: 2
 33775                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 33776  0045C0  0E1D               	movlw	low (_loRa+29)
 33777  0045C2  0100               	movlb	0	; () banked
 33778  0045C4  6F60               	movwf	memset@p1& (0+255),b
 33779  0045C6  0E02               	movlw	high (_loRa+29)
 33780  0045C8  6F61               	movwf	(memset@p1+1)& (0+255),b
 33781  0045CA  0E00               	movlw	0
 33782  0045CC  6F63               	movwf	(memset@c+1)& (0+255),b
 33783  0045CE  0E00               	movlw	0
 33784  0045D0  6F62               	movwf	memset@c& (0+255),b
 33785  0045D2  0E00               	movlw	0
 33786  0045D4  6F65               	movwf	(memset@n+1)& (0+255),b
 33787  0045D6  0E69               	movlw	105
 33788  0045D8  6F64               	movwf	memset@n& (0+255),b
 33789  0045DA  EC6B  F042         	call	_memset	;wreg free
 33790                           
 33791                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 33792  0045DE  0E03               	movlw	3
 33793  0045E0  0102               	movlb	2	; () banked
 33794  0045E2  6F95               	movwf	(_loRa+149)& (0+255),b
 33795  0045E4  0EE8               	movlw	232
 33796  0045E6  6F94               	movwf	(_loRa+148)& (0+255),b
 33797                           
 33798                           ; BSR set to: 2
 33799                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 33800  0045E8  0E07               	movlw	7
 33801  0045EA  6F97               	movwf	(_loRa+151)& (0+255),b
 33802  0045EC  0ED0               	movlw	208
 33803  0045EE  6F96               	movwf	(_loRa+150)& (0+255),b
 33804                           
 33805                           ; BSR set to: 2
 33806                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 33807  0045F0  0E13               	movlw	19
 33808  0045F2  6F99               	movwf	(_loRa+153)& (0+255),b
 33809  0045F4  0E88               	movlw	136
 33810  0045F6  6F98               	movwf	(_loRa+152)& (0+255),b
 33811                           
 33812                           ; BSR set to: 2
 33813                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 33814  0045F8  0E17               	movlw	23
 33815  0045FA  6F9B               	movwf	(_loRa+155)& (0+255),b
 33816  0045FC  0E70               	movlw	112
 33817  0045FE  6F9A               	movwf	(_loRa+154)& (0+255),b
 33818                           
 33819                           ; BSR set to: 2
 33820                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 33821  004600  0E07               	movlw	7
 33822  004602  6FA1               	movwf	(_loRa+161)& (0+255),b
 33823  004604  0ED0               	movlw	208
 33824  004606  6FA0               	movwf	(_loRa+160)& (0+255),b
 33825                           
 33826                           ; BSR set to: 2
 33827                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 33828  004608  0E20               	movlw	32
 33829  00460A  6FA3               	movwf	(_loRa+163)& (0+255),b
 33830                           
 33831                           ; BSR set to: 2
 33832                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 33833  00460C  0E40               	movlw	64
 33834  00460E  6FA2               	movwf	(_loRa+162)& (0+255),b
 33835                           
 33836                           ; BSR set to: 2
 33837                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 33838  004610  0E40               	movlw	64
 33839  004612  6F9D               	movwf	(_loRa+157)& (0+255),b
 33840  004614  0E00               	movlw	0
 33841  004616  6F9C               	movwf	(_loRa+156)& (0+255),b
 33842                           
 33843                           ; BSR set to: 2
 33844                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 33845  004618  0E40               	movlw	64
 33846  00461A  6F9F               	movwf	(_loRa+159)& (0+255),b
 33847  00461C  0E00               	movlw	0
 33848  00461E  6F9E               	movwf	(_loRa+158)& (0+255),b
 33849                           
 33850                           ; BSR set to: 2
 33851                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 33852  004620  0E00               	movlw	0
 33853  004622  0100               	movlb	0	; () banked
 33854  004624  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 33855  004626  0E00               	movlw	0
 33856  004628  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 33857  00462A  EC23  F029         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 33858  00462E  0012               	return		;funcret
 33859  004630                     __end_of_LORAWAN_Reset:
 33860                           	opt stack 0
 33861                           tosu	equ	0xFFF
 33862                           tosh	equ	0xFFE
 33863                           tosl	equ	0xFFD
 33864                           pclath	equ	0xFFA
 33865                           tblptru	equ	0xFF8
 33866                           tblptrh	equ	0xFF7
 33867                           tblptrl	equ	0xFF6
 33868                           tablat	equ	0xFF5
 33869                           prodh	equ	0xFF4
 33870                           prodl	equ	0xFF3
 33871                           intcon	equ	0xFF2
 33872                           intcon2	equ	0xFF1
 33873                           intcon3	equ	0xFF0
 33874                           indf0	equ	0xFEF
 33875                           postinc0	equ	0xFEE
 33876                           plusw0	equ	0xFEB
 33877                           fsr0h	equ	0xFEA
 33878                           fsr0l	equ	0xFE9
 33879                           wreg	equ	0xFE8
 33880                           postinc1	equ	0xFE6
 33881                           postdec1	equ	0xFE5
 33882                           plusw1	equ	0xFE3
 33883                           fsr1h	equ	0xFE2
 33884                           fsr1l	equ	0xFE1
 33885                           indf2	equ	0xFDF
 33886                           postinc2	equ	0xFDE
 33887                           postdec2	equ	0xFDD
 33888                           plusw2	equ	0xFDB
 33889                           fsr2h	equ	0xFDA
 33890                           fsr2l	equ	0xFD9
 33891                           status	equ	0xFD8
 33892                           
 33893 ;; *************** function _UpdateMinMaxChDataRate *****************
 33894 ;; Defined at:
 33895 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 33896 ;; Parameters:    Size  Location     Type
 33897 ;;		None
 33898 ;; Auto vars:     Size  Location     Type
 33899 ;;  i               1    1[BANK0 ] unsigned char 
 33900 ;; Return value:  Size  Location     Type
 33901 ;;                  1    wreg      void 
 33902 ;; Registers used:
 33903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33904 ;; Tracked objects:
 33905 ;;		On entry : 0/0
 33906 ;;		On exit  : 0/0
 33907 ;;		Unchanged: 0/0
 33908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33913 ;;Total ram usage:        2 bytes
 33914 ;; Hardware stack levels used:    1
 33915 ;; Hardware stack levels required when called:    7
 33916 ;; This function calls:
 33917 ;;		Nothing
 33918 ;; This function is called by:
 33919 ;;		_LORAWAN_Reset
 33920 ;; This function uses a non-reentrant model
 33921 ;;
 33922                           
 33923                           	psect	text153
 33924  005F18                     __ptext153:
 33925                           	opt stack 0
 33926  005F18                     _UpdateMinMaxChDataRate:
 33927                           	opt stack 21
 33928                           
 33929                           ;lorawan.c: 1065: uint8_t i;
 33930                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 33931                           
 33932                           ;incstack = 0
 33933  005F18  0E07               	movlw	7
 33934  005F1A  0102               	movlb	2	; () banked
 33935  005F1C  6FEB               	movwf	(_loRa+235)& (0+255),b
 33936                           
 33937                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 33938  005F1E  0E00               	movlw	0
 33939  005F20  6FEC               	movwf	(_loRa+236)& (0+255),b
 33940                           
 33941                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 33942  005F22  0E00               	movlw	0
 33943  005F24  0100               	movlb	0	; () banked
 33944  005F26  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 33945  005F28  D06D               	goto	l2159
 33946  005F2A                     
 33947                           ; BSR set to: 0
 33948                           ;lorawan.c: 1072: {
 33949                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 33950                           
 33951                           ; BSR set to: 0
 33952  005F2A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33953  005F2C  0D0E               	mullw	14
 33954  005F2E  0E05               	movlw	5
 33955  005F30  26F3               	addwf	prodl,f,c
 33956  005F32  0E00               	movlw	0
 33957  005F34  22F4               	addwfc	prodh,f,c
 33958  005F36  0E00               	movlw	low _Channels
 33959  005F38  24F3               	addwf	prodl,w,c
 33960  005F3A  6ED9               	movwf	fsr2l,c
 33961  005F3C  0E04               	movlw	high _Channels
 33962  005F3E  20F4               	addwfc	prodh,w,c
 33963  005F40  6EDA               	movwf	fsr2h,c
 33964  005F42  0104               	movlb	4	; () banked
 33965  005F44  50DF               	movf	223,w,c
 33966  005F46  0B0F               	andlw	15
 33967  005F48  0100               	movlb	0	; () banked
 33968  005F4A  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 33969  005F4C  0102               	movlb	2	; () banked
 33970  005F4E  51EB               	movf	(_loRa+235)& (0+255),w,b
 33971  005F50  0100               	movlb	0	; () banked
 33972  005F52  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 33973  005F54  B0D8               	btfsc	status,0,c
 33974  005F56  D020               	goto	l2161
 33975                           
 33976                           ; BSR set to: 0
 33977  005F58  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33978  005F5A  0D0E               	mullw	14
 33979  005F5C  0E04               	movlw	4
 33980  005F5E  26F3               	addwf	prodl,f,c
 33981  005F60  0E00               	movlw	0
 33982  005F62  22F4               	addwfc	prodh,f,c
 33983  005F64  0E00               	movlw	low _Channels
 33984  005F66  24F3               	addwf	prodl,w,c
 33985  005F68  6ED9               	movwf	fsr2l,c
 33986  005F6A  0E04               	movlw	high _Channels
 33987  005F6C  20F4               	addwfc	prodh,w,c
 33988  005F6E  6EDA               	movwf	fsr2h,c
 33989  005F70  04DE               	decf	postinc2,w,c
 33990  005F72  A4D8               	btfss	status,2,c
 33991  005F74  D011               	goto	l2161
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;lorawan.c: 1074: {
 33995                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 33996  005F76  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33997  005F78  0D0E               	mullw	14
 33998  005F7A  0E05               	movlw	5
 33999  005F7C  26F3               	addwf	prodl,f,c
 34000  005F7E  0E00               	movlw	0
 34001  005F80  22F4               	addwfc	prodh,f,c
 34002  005F82  0E00               	movlw	low _Channels
 34003  005F84  24F3               	addwf	prodl,w,c
 34004  005F86  6ED9               	movwf	fsr2l,c
 34005  005F88  0E04               	movlw	high _Channels
 34006  005F8A  20F4               	addwfc	prodh,w,c
 34007  005F8C  6EDA               	movwf	fsr2h,c
 34008  005F8E  0104               	movlb	4	; () banked
 34009  005F90  50DF               	movf	223,w,c
 34010  005F92  0B0F               	andlw	15
 34011  005F94  0102               	movlb	2	; () banked
 34012  005F96  6FEB               	movwf	(_loRa+235)& (0+255),b
 34013  005F98                     l2161:
 34014                           
 34015                           ;lorawan.c: 1076: }
 34016                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 34017  005F98  0100               	movlb	0	; () banked
 34018  005F9A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34019  005F9C  0D0E               	mullw	14
 34020  005F9E  0E05               	movlw	5
 34021  005FA0  26F3               	addwf	prodl,f,c
 34022  005FA2  0E00               	movlw	0
 34023  005FA4  22F4               	addwfc	prodh,f,c
 34024  005FA6  0E00               	movlw	low _Channels
 34025  005FA8  24F3               	addwf	prodl,w,c
 34026  005FAA  6ED9               	movwf	fsr2l,c
 34027  005FAC  0E04               	movlw	high _Channels
 34028  005FAE  20F4               	addwfc	prodh,w,c
 34029  005FB0  6EDA               	movwf	fsr2h,c
 34030  005FB2  0104               	movlb	4	; () banked
 34031  005FB4  38DF               	swapf	223,w,c
 34032  005FB6  0B0F               	andlw	15
 34033  005FB8  0102               	movlb	2	; () banked
 34034  005FBA  61EC               	cpfslt	(_loRa+236)& (0+255),b
 34035  005FBC  D021               	goto	l2162
 34036                           
 34037                           ; BSR set to: 2
 34038  005FBE  0100               	movlb	0	; () banked
 34039  005FC0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34040  005FC2  0D0E               	mullw	14
 34041  005FC4  0E04               	movlw	4
 34042  005FC6  26F3               	addwf	prodl,f,c
 34043  005FC8  0E00               	movlw	0
 34044  005FCA  22F4               	addwfc	prodh,f,c
 34045  005FCC  0E00               	movlw	low _Channels
 34046  005FCE  24F3               	addwf	prodl,w,c
 34047  005FD0  6ED9               	movwf	fsr2l,c
 34048  005FD2  0E04               	movlw	high _Channels
 34049  005FD4  20F4               	addwfc	prodh,w,c
 34050  005FD6  6EDA               	movwf	fsr2h,c
 34051  005FD8  04DE               	decf	postinc2,w,c
 34052  005FDA  A4D8               	btfss	status,2,c
 34053  005FDC  D011               	goto	l2162
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;lorawan.c: 1078: {
 34057                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 34058  005FDE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34059  005FE0  0D0E               	mullw	14
 34060  005FE2  0E05               	movlw	5
 34061  005FE4  26F3               	addwf	prodl,f,c
 34062  005FE6  0E00               	movlw	0
 34063  005FE8  22F4               	addwfc	prodh,f,c
 34064  005FEA  0E00               	movlw	low _Channels
 34065  005FEC  24F3               	addwf	prodl,w,c
 34066  005FEE  6ED9               	movwf	fsr2l,c
 34067  005FF0  0E04               	movlw	high _Channels
 34068  005FF2  20F4               	addwfc	prodh,w,c
 34069  005FF4  6EDA               	movwf	fsr2h,c
 34070  005FF6  0104               	movlb	4	; () banked
 34071  005FF8  38DF               	swapf	223,w,c
 34072  005FFA  0B0F               	andlw	15
 34073  005FFC  0102               	movlb	2	; () banked
 34074  005FFE  6FEC               	movwf	(_loRa+236)& (0+255),b
 34075  006000                     l2162:
 34076                           
 34077                           ; BSR set to: 2
 34078  006000  0100               	movlb	0	; () banked
 34079  006002  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 34080  006004                     l2159:
 34081                           
 34082                           ; BSR set to: 0
 34083                           
 34084                           ; BSR set to: 0
 34085  006004  0102               	movlb	2	; () banked
 34086  006006  51ED               	movf	(_loRa+237)& (0+255),w,b
 34087  006008  0100               	movlb	0	; () banked
 34088  00600A  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 34089  00600C  B0D8               	btfsc	status,0,c
 34090  00600E  0012               	return	
 34091  006010  D78C               	goto	l2160
 34092  006012                     __end_of_UpdateMinMaxChDataRate:
 34093                           	opt stack 0
 34094                           tosu	equ	0xFFF
 34095                           tosh	equ	0xFFE
 34096                           tosl	equ	0xFFD
 34097                           pclath	equ	0xFFA
 34098                           tblptru	equ	0xFF8
 34099                           tblptrh	equ	0xFF7
 34100                           tblptrl	equ	0xFF6
 34101                           tablat	equ	0xFF5
 34102                           prodh	equ	0xFF4
 34103                           prodl	equ	0xFF3
 34104                           intcon	equ	0xFF2
 34105                           intcon2	equ	0xFF1
 34106                           intcon3	equ	0xFF0
 34107                           indf0	equ	0xFEF
 34108                           postinc0	equ	0xFEE
 34109                           plusw0	equ	0xFEB
 34110                           fsr0h	equ	0xFEA
 34111                           fsr0l	equ	0xFE9
 34112                           wreg	equ	0xFE8
 34113                           postinc1	equ	0xFE6
 34114                           postdec1	equ	0xFE5
 34115                           plusw1	equ	0xFE3
 34116                           fsr1h	equ	0xFE2
 34117                           fsr1l	equ	0xFE1
 34118                           indf2	equ	0xFDF
 34119                           postinc2	equ	0xFDE
 34120                           postdec2	equ	0xFDD
 34121                           plusw2	equ	0xFDB
 34122                           fsr2h	equ	0xFDA
 34123                           fsr2l	equ	0xFD9
 34124                           status	equ	0xFD8
 34125                           
 34126 ;; *************** function _StopAllSoftwareTimers *****************
 34127 ;; Defined at:
 34128 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34129 ;; Parameters:    Size  Location     Type
 34130 ;;		None
 34131 ;; Auto vars:     Size  Location     Type
 34132 ;;		None
 34133 ;; Return value:  Size  Location     Type
 34134 ;;                  1    wreg      void 
 34135 ;; Registers used:
 34136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34137 ;; Tracked objects:
 34138 ;;		On entry : 0/0
 34139 ;;		On exit  : 0/0
 34140 ;;		Unchanged: 0/0
 34141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34146 ;;Total ram usage:        0 bytes
 34147 ;; Hardware stack levels used:    1
 34148 ;; Hardware stack levels required when called:    8
 34149 ;; This function calls:
 34150 ;;		_SwTimerStop
 34151 ;; This function is called by:
 34152 ;;		_LORAWAN_Init
 34153 ;;		_LORAWAN_Reset
 34154 ;; This function uses a non-reentrant model
 34155 ;;
 34156                           
 34157                           	psect	text154
 34158  007E98                     __ptext154:
 34159                           	opt stack 0
 34160  007E98                     _StopAllSoftwareTimers:
 34161                           	opt stack 21
 34162                           
 34163                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 34164                           
 34165                           ; BSR set to: 0
 34166                           ;incstack = 0
 34167  007E98  0102               	movlb	2	; () banked
 34168  007E9A  51E2               	movf	(_loRa+226)& (0+255),w,b
 34169  007E9C  EC96  F043         	call	_SwTimerStop
 34170                           
 34171                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 34172  007EA0  0102               	movlb	2	; () banked
 34173  007EA2  51E3               	movf	(_loRa+227)& (0+255),w,b
 34174  007EA4  EC96  F043         	call	_SwTimerStop
 34175                           
 34176                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 34177  007EA8  0102               	movlb	2	; () banked
 34178  007EAA  51E7               	movf	(_loRa+231)& (0+255),w,b
 34179  007EAC  EC96  F043         	call	_SwTimerStop
 34180                           
 34181                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 34182  007EB0  0102               	movlb	2	; () banked
 34183  007EB2  51E4               	movf	(_loRa+228)& (0+255),w,b
 34184  007EB4  EC96  F043         	call	_SwTimerStop
 34185                           
 34186                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 34187  007EB8  0102               	movlb	2	; () banked
 34188  007EBA  51E5               	movf	(_loRa+229)& (0+255),w,b
 34189  007EBC  EC96  F043         	call	_SwTimerStop
 34190                           
 34191                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 34192  007EC0  0102               	movlb	2	; () banked
 34193  007EC2  51E8               	movf	(_loRa+232)& (0+255),w,b
 34194  007EC4  EC96  F043         	call	_SwTimerStop
 34195                           
 34196                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 34197  007EC8  0102               	movlb	2	; () banked
 34198  007ECA  51E6               	movf	(_loRa+230)& (0+255),w,b
 34199  007ECC  EC96  F043         	call	_SwTimerStop
 34200                           
 34201                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 34202  007ED0  0102               	movlb	2	; () banked
 34203  007ED2  51EA               	movf	(_loRa+234)& (0+255),w,b
 34204  007ED4  EC96  F043         	call	_SwTimerStop
 34205                           
 34206                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 34207  007ED8  0102               	movlb	2	; () banked
 34208  007EDA  51F3               	movf	(_loRa+243)& (0+255),w,b
 34209  007EDC  EC96  F043         	call	_SwTimerStop
 34210                           
 34211                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 34212  007EE0  0102               	movlb	2	; () banked
 34213  007EE2  51E9               	movf	(_loRa+233)& (0+255),w,b
 34214  007EE4  EC96  F043         	call	_SwTimerStop
 34215  007EE8  0012               	return		;funcret
 34216  007EEA                     __end_of_StopAllSoftwareTimers:
 34217                           	opt stack 0
 34218                           tosu	equ	0xFFF
 34219                           tosh	equ	0xFFE
 34220                           tosl	equ	0xFFD
 34221                           pclath	equ	0xFFA
 34222                           tblptru	equ	0xFF8
 34223                           tblptrh	equ	0xFF7
 34224                           tblptrl	equ	0xFF6
 34225                           tablat	equ	0xFF5
 34226                           prodh	equ	0xFF4
 34227                           prodl	equ	0xFF3
 34228                           intcon	equ	0xFF2
 34229                           intcon2	equ	0xFF1
 34230                           intcon3	equ	0xFF0
 34231                           indf0	equ	0xFEF
 34232                           postinc0	equ	0xFEE
 34233                           plusw0	equ	0xFEB
 34234                           fsr0h	equ	0xFEA
 34235                           fsr0l	equ	0xFE9
 34236                           wreg	equ	0xFE8
 34237                           postinc1	equ	0xFE6
 34238                           postdec1	equ	0xFE5
 34239                           plusw1	equ	0xFE3
 34240                           fsr1h	equ	0xFE2
 34241                           fsr1l	equ	0xFE1
 34242                           indf2	equ	0xFDF
 34243                           postinc2	equ	0xFDE
 34244                           postdec2	equ	0xFDD
 34245                           plusw2	equ	0xFDB
 34246                           fsr2h	equ	0xFDA
 34247                           fsr2l	equ	0xFD9
 34248                           status	equ	0xFD8
 34249                           
 34250 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 34251 ;; Defined at:
 34252 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34253 ;; Parameters:    Size  Location     Type
 34254 ;;  syncWord        1    wreg     unsigned char 
 34255 ;; Auto vars:     Size  Location     Type
 34256 ;;  syncWord        1    0[BANK0 ] unsigned char 
 34257 ;; Return value:  Size  Location     Type
 34258 ;;                  1    wreg      void 
 34259 ;; Registers used:
 34260 ;;		wreg
 34261 ;; Tracked objects:
 34262 ;;		On entry : 0/0
 34263 ;;		On exit  : 0/0
 34264 ;;		Unchanged: 0/0
 34265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34270 ;;Total ram usage:        1 bytes
 34271 ;; Hardware stack levels used:    1
 34272 ;; Hardware stack levels required when called:    7
 34273 ;; This function calls:
 34274 ;;		Nothing
 34275 ;; This function is called by:
 34276 ;;		_LORAWAN_Reset
 34277 ;;		_ConfigureRadio
 34278 ;; This function uses a non-reentrant model
 34279 ;;
 34280                           
 34281                           	psect	text155
 34282  008BDE                     __ptext155:
 34283                           	opt stack 0
 34284  008BDE                     _RADIO_SetLoRaSyncWord:
 34285                           	opt stack 19
 34286                           
 34287                           ;incstack = 0
 34288                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 34289  008BDE  0100               	movlb	0	; () banked
 34290  008BE0  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 34291                           
 34292                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 34293  008BE2  C060  F188         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 34294  008BE6  0012               	return		;funcret
 34295  008BE8                     __end_of_RADIO_SetLoRaSyncWord:
 34296                           	opt stack 0
 34297                           tosu	equ	0xFFF
 34298                           tosh	equ	0xFFE
 34299                           tosl	equ	0xFFD
 34300                           pclath	equ	0xFFA
 34301                           tblptru	equ	0xFF8
 34302                           tblptrh	equ	0xFF7
 34303                           tblptrl	equ	0xFF6
 34304                           tablat	equ	0xFF5
 34305                           prodh	equ	0xFF4
 34306                           prodl	equ	0xFF3
 34307                           intcon	equ	0xFF2
 34308                           intcon2	equ	0xFF1
 34309                           intcon3	equ	0xFF0
 34310                           indf0	equ	0xFEF
 34311                           postinc0	equ	0xFEE
 34312                           plusw0	equ	0xFEB
 34313                           fsr0h	equ	0xFEA
 34314                           fsr0l	equ	0xFE9
 34315                           wreg	equ	0xFE8
 34316                           postinc1	equ	0xFE6
 34317                           postdec1	equ	0xFE5
 34318                           plusw1	equ	0xFE3
 34319                           fsr1h	equ	0xFE2
 34320                           fsr1l	equ	0xFE1
 34321                           indf2	equ	0xFDF
 34322                           postinc2	equ	0xFDE
 34323                           postdec2	equ	0xFDD
 34324                           plusw2	equ	0xFDB
 34325                           fsr2h	equ	0xFDA
 34326                           fsr2l	equ	0xFD9
 34327                           status	equ	0xFD8
 34328                           
 34329 ;; *************** function _RADIO_Init *****************
 34330 ;; Defined at:
 34331 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34332 ;; Parameters:    Size  Location     Type
 34333 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 34334 ;;		 -> radioBuffer(271), 
 34335 ;;  frequency       4   27[BANK0 ] unsigned long 
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;		None
 34338 ;; Return value:  Size  Location     Type
 34339 ;;                  1    wreg      void 
 34340 ;; Registers used:
 34341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34342 ;; Tracked objects:
 34343 ;;		On entry : 0/0
 34344 ;;		On exit  : 0/0
 34345 ;;		Unchanged: 0/0
 34346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34347 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34350 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34351 ;;Total ram usage:        7 bytes
 34352 ;; Hardware stack levels used:    1
 34353 ;; Hardware stack levels required when called:   11
 34354 ;; This function calls:
 34355 ;;		_RADIO_RegisterRead
 34356 ;;		_RADIO_RegisterWrite
 34357 ;;		_RADIO_Reset
 34358 ;;		_RADIO_WriteFrequency
 34359 ;;		_RADIO_WriteMode
 34360 ;;		_SwTimerCreate
 34361 ;;		_SwTimerSetCallback
 34362 ;;		_SwTimerStop
 34363 ;; This function is called by:
 34364 ;;		_LORAWAN_Init
 34365 ;;		_LORAWAN_Reset
 34366 ;; This function uses a non-reentrant model
 34367 ;;
 34368                           
 34369                           	psect	text156
 34370  004630                     __ptext156:
 34371                           	opt stack 0
 34372  004630                     _RADIO_Init:
 34373                           	opt stack 18
 34374                           
 34375                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 34376                           
 34377                           ;incstack = 0
 34378  004630  C07B  F17A         	movff	RADIO_Init@frequency,_RadioConfiguration
 34379  004634  C07C  F17B         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 34380  004638  C07D  F17C         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 34381  00463C  C07E  F17D         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 34382                           
 34383                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 34384  004640  0EA8               	movlw	168
 34385  004642  0101               	movlb	1	; () banked
 34386  004644  6F7E               	movwf	(_RadioConfiguration+4)& (0+255),b
 34387  004646  0E61               	movlw	97
 34388  004648  6F7F               	movwf	(_RadioConfiguration+5)& (0+255),b
 34389  00464A  0E00               	movlw	0
 34390  00464C  6F80               	movwf	(_RadioConfiguration+6)& (0+255),b
 34391  00464E  0E00               	movlw	0
 34392  004650  6F81               	movwf	(_RadioConfiguration+7)& (0+255),b
 34393                           
 34394                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 34395  004652  0E50               	movlw	80
 34396  004654  6F82               	movwf	(_RadioConfiguration+8)& (0+255),b
 34397  004656  0EC3               	movlw	195
 34398  004658  6F83               	movwf	(_RadioConfiguration+9)& (0+255),b
 34399  00465A  0E00               	movlw	0
 34400  00465C  6F84               	movwf	(_RadioConfiguration+10)& (0+255),b
 34401  00465E  0E00               	movlw	0
 34402  004660  6F85               	movwf	(_RadioConfiguration+11)& (0+255),b
 34403                           
 34404                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 34405  004662  0E01               	movlw	1
 34406  004664  6F92               	movwf	(_RadioConfiguration+24)& (0+255),b
 34407                           
 34408                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 34409  004666  0E07               	movlw	7
 34410  004668  6F94               	movwf	(_RadioConfiguration+26)& (0+255),b
 34411                           
 34412                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 34413  00466A  0E01               	movlw	1
 34414  00466C  6F95               	movwf	(_RadioConfiguration+27)& (0+255),b
 34415                           
 34416                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 34417  00466E  0E01               	movlw	1
 34418  004670  6F9B               	movwf	(_RadioConfiguration+33)& (0+255),b
 34419                           
 34420                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 34421  004672  0E00               	movlw	0
 34422  004674  6F9C               	movwf	(_RadioConfiguration+34)& (0+255),b
 34423                           
 34424                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 34425  004676  0E00               	movlw	0
 34426  004678  6F87               	movwf	(_RadioConfiguration+13)& (0+255),b
 34427  00467A  0E08               	movlw	8
 34428  00467C  6F86               	movwf	(_RadioConfiguration+12)& (0+255),b
 34429                           
 34430                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 34431  00467E  0E0C               	movlw	12
 34432  004680  6F93               	movwf	(_RadioConfiguration+25)& (0+255),b
 34433                           
 34434                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 34435  004682  0E01               	movlw	1
 34436  004684  6F96               	movwf	(_RadioConfiguration+28)& (0+255),b
 34437                           
 34438                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 34439  004686  0E00               	movlw	0
 34440  004688  6F97               	movwf	(_RadioConfiguration+29)& (0+255),b
 34441                           
 34442                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 34443  00468A  0E00               	movlw	0
 34444  00468C  6F9A               	movwf	(_RadioConfiguration+32)& (0+255),b
 34445                           
 34446                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 34447  00468E  0EC1               	movlw	193
 34448  004690  6F89               	movwf	(_RadioConfiguration+15)& (0+255),b
 34449                           
 34450                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 34451  004692  0E94               	movlw	148
 34452  004694  6F8A               	movwf	(_RadioConfiguration+16)& (0+255),b
 34453                           
 34454                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 34455  004696  0EC1               	movlw	193
 34456  004698  6F8B               	movwf	(_RadioConfiguration+17)& (0+255),b
 34457                           
 34458                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 34459  00469A  0E03               	movlw	3
 34460  00469C  6F91               	movwf	(_RadioConfiguration+23)& (0+255),b
 34461                           
 34462                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 34463  00469E  0E34               	movlw	52
 34464  0046A0  6F88               	movwf	(_RadioConfiguration+14)& (0+255),b
 34465                           
 34466                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 34467  0046A2  0E00               	movlw	0
 34468  0046A4  6F9D               	movwf	(_RadioConfiguration+35)& (0+255),b
 34469                           
 34470                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 34471  0046A6  0E00               	movlw	0
 34472  0046A8  6F9E               	movwf	(_RadioConfiguration+36)& (0+255),b
 34473                           
 34474                           ; BSR set to: 1
 34475                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 34476  0046AA  C079  F19F         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 34477  0046AE  C07A  F1A0         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 34478                           
 34479                           ; BSR set to: 1
 34480                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 34481  0046B2  0E00               	movlw	0
 34482  0046B4  6F99               	movwf	(_RadioConfiguration+31)& (0+255),b
 34483  0046B6  0E00               	movlw	0
 34484  0046B8  6F98               	movwf	(_RadioConfiguration+30)& (0+255),b
 34485                           
 34486                           ; BSR set to: 1
 34487                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 34488  0046BA  0E80               	movlw	128
 34489  0046BC  6FAC               	movwf	(_RadioConfiguration+50)& (0+255),b
 34490                           
 34491                           ; BSR set to: 1
 34492                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 34493  0046BE  0E98               	movlw	152
 34494  0046C0  6FA4               	movwf	(_RadioConfiguration+42)& (0+255),b
 34495  0046C2  0E3A               	movlw	58
 34496  0046C4  6FA5               	movwf	(_RadioConfiguration+43)& (0+255),b
 34497  0046C6  0E00               	movlw	0
 34498  0046C8  6FA6               	movwf	(_RadioConfiguration+44)& (0+255),b
 34499  0046CA  0E00               	movlw	0
 34500  0046CC  6FA7               	movwf	(_RadioConfiguration+45)& (0+255),b
 34501                           
 34502                           ; BSR set to: 1
 34503                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 34504  0046CE  0E02               	movlw	2
 34505  0046D0  6FAD               	movwf	(_RadioConfiguration+51)& (0+255),b
 34506                           
 34507                           ; BSR set to: 1
 34508                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 34509  0046D2  0E0B               	movlw	11
 34510  0046D4  6FAE               	movwf	(_RadioConfiguration+52)& (0+255),b
 34511                           
 34512                           ; BSR set to: 1
 34513                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 34514  0046D6  0E12               	movlw	18
 34515  0046D8  6FAF               	movwf	(_RadioConfiguration+53)& (0+255),b
 34516                           
 34517                           ; BSR set to: 1
 34518                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 34519  0046DA  0E00               	movlw	0
 34520  0046DC  6FA9               	movwf	(_RadioConfiguration+47)& (0+255),b
 34521  0046DE  0E00               	movlw	0
 34522  0046E0  6FAA               	movwf	(_RadioConfiguration+48)& (0+255),b
 34523                           
 34524                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 34525  0046E2  51A8               	movf	(_RadioConfiguration+46)& (0+255),w,b
 34526  0046E4  A4D8               	btfss	status,2,c
 34527  0046E6  D026               	goto	l486
 34528                           
 34529                           ; BSR set to: 1
 34530                           ;radio_driver_SX1276.c: 457: {
 34531                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 34532  0046E8  ECAF  F037         	call	_SwTimerCreate	;wreg free
 34533  0046EC  0101               	movlb	1	; () banked
 34534  0046EE  6FA1               	movwf	(_RadioConfiguration+39)& (0+255),b
 34535                           
 34536                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 34537  0046F0  ECAF  F037         	call	_SwTimerCreate	;wreg free
 34538  0046F4  0101               	movlb	1	; () banked
 34539  0046F6  6FA2               	movwf	(_RadioConfiguration+40)& (0+255),b
 34540                           
 34541                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 34542  0046F8  ECAF  F037         	call	_SwTimerCreate	;wreg free
 34543  0046FC  0101               	movlb	1	; () banked
 34544  0046FE  6FA3               	movwf	(_RadioConfiguration+41)& (0+255),b
 34545                           
 34546                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 34547  004700  0E3E               	movlw	low _RADIO_RxFSKTimeout
 34548  004702  0100               	movlb	0	; () banked
 34549  004704  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34550  004706  0E83               	movlw	high _RADIO_RxFSKTimeout
 34551  004708  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34552  00470A  0E00               	movlw	0
 34553  00470C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34554  00470E  0101               	movlb	1	; () banked
 34555  004710  51A2               	movf	(_RadioConfiguration+40)& (0+255),w,b
 34556  004712  ECB9  F040         	call	_SwTimerSetCallback
 34557                           
 34558                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 34559  004716  0ED4               	movlw	low _RADIO_WatchdogTimeout
 34560  004718  0100               	movlb	0	; () banked
 34561  00471A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34562  00471C  0E7F               	movlw	high _RADIO_WatchdogTimeout
 34563  00471E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34564  004720  0E00               	movlw	0
 34565  004722  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34566  004724  0101               	movlb	1	; () banked
 34567  004726  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 34568  004728  ECB9  F040         	call	_SwTimerSetCallback
 34569                           
 34570                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 34571  00472C  0E01               	movlw	1
 34572  00472E  0101               	movlb	1	; () banked
 34573  004730  6FA8               	movwf	(_RadioConfiguration+46)& (0+255),b
 34574                           
 34575                           ;radio_driver_SX1276.c: 466: }
 34576  004732  D00B               	goto	l487
 34577  004734                     l486:
 34578                           
 34579                           ; BSR set to: 1
 34580                           ;radio_driver_SX1276.c: 467: else
 34581                           ;radio_driver_SX1276.c: 468: {
 34582                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 34583                           
 34584                           ; BSR set to: 1
 34585  004734  51A1               	movf	(_RadioConfiguration+39)& (0+255),w,b
 34586  004736  EC96  F043         	call	_SwTimerStop
 34587                           
 34588                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 34589  00473A  0101               	movlb	1	; () banked
 34590  00473C  51A2               	movf	(_RadioConfiguration+40)& (0+255),w,b
 34591  00473E  EC96  F043         	call	_SwTimerStop
 34592                           
 34593                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 34594  004742  0101               	movlb	1	; () banked
 34595  004744  51A3               	movf	(_RadioConfiguration+41)& (0+255),w,b
 34596  004746  EC96  F043         	call	_SwTimerStop
 34597  00474A                     l487:
 34598                           
 34599                           ;radio_driver_SX1276.c: 472: }
 34600                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 34601  00474A  EC30  F040         	call	_RADIO_Reset	;wreg free
 34602                           
 34603                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 34604  00474E  0E00               	movlw	0
 34605  004750  0100               	movlb	0	; () banked
 34606  004752  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34607  004754  0E01               	movlw	1
 34608  004756  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34609  004758  0E01               	movlw	1
 34610  00475A  EC0D  F02F         	call	_RADIO_WriteMode
 34611                           
 34612                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 34613  00475E  C17A  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 34614  004762  C17B  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 34615  004766  C17C  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 34616  00476A  C17D  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 34617  00476E  ECFB  F030         	call	_RADIO_WriteFrequency	;wreg free
 34618                           
 34619                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 34620  004772  0E42               	movlw	66
 34621  004774  0100               	movlb	0	; () banked
 34622  004776  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34623  004778  0E3B               	movlw	59
 34624  00477A  EC33  F044         	call	_RADIO_RegisterWrite
 34625  00477E                     
 34626                           ;radio_driver_SX1276.c: 490: ;
 34627  00477E  0E3B               	movlw	59
 34628  004780  EC82  F043         	call	_RADIO_RegisterRead
 34629  004784  0100               	movlb	0	; () banked
 34630  004786  6F7F               	movwf	??_RADIO_Init& (0+255),b
 34631  004788  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 34632  00478A  D7F9               	goto	l489
 34633                           
 34634                           ; BSR set to: 0
 34635                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 34636                           
 34637                           ; BSR set to: 0
 34638  00478C  0E23               	movlw	35
 34639  00478E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34640  004790  0E0C               	movlw	12
 34641  004792  EC33  F044         	call	_RADIO_RegisterWrite
 34642                           
 34643                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 34644  004796  0E1E               	movlw	30
 34645  004798  0100               	movlb	0	; () banked
 34646  00479A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34647  00479C  0E0D               	movlw	13
 34648  00479E  EC33  F044         	call	_RADIO_RegisterWrite
 34649                           
 34650                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 34651  0047A2  0EAA               	movlw	170
 34652  0047A4  0100               	movlb	0	; () banked
 34653  0047A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34654  0047A8  0E1F               	movlw	31
 34655  0047AA  EC33  F044         	call	_RADIO_RegisterWrite
 34656                           
 34657                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 34658  0047AE  0E8F               	movlw	143
 34659  0047B0  0100               	movlb	0	; () banked
 34660  0047B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34661  0047B4  0E35               	movlw	53
 34662  0047B6  EC33  F044         	call	_RADIO_RegisterWrite
 34663                           
 34664                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 34665  0047BA  0EFF               	movlw	255
 34666  0047BC  0100               	movlb	0	; () banked
 34667  0047BE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34668  0047C0  0E32               	movlw	50
 34669  0047C2  EC33  F044         	call	_RADIO_RegisterWrite
 34670                           
 34671                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 34672  0047C6  0E40               	movlw	64
 34673  0047C8  0100               	movlb	0	; () banked
 34674  0047CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34675  0047CC  0E31               	movlw	49
 34676  0047CE  EC33  F044         	call	_RADIO_RegisterWrite
 34677                           
 34678                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34679  0047D2  0E01               	movlw	1
 34680  0047D4  0100               	movlb	0	; () banked
 34681  0047D6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34682  0047D8  0E01               	movlw	1
 34683  0047DA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34684  0047DC  0E00               	movlw	0
 34685  0047DE  EC0D  F02F         	call	_RADIO_WriteMode
 34686                           
 34687                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 34688  0047E2  0EFF               	movlw	255
 34689  0047E4  0100               	movlb	0	; () banked
 34690  0047E6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34691  0047E8  0E23               	movlw	35
 34692  0047EA  EC33  F044         	call	_RADIO_RegisterWrite
 34693                           
 34694                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 34695  0047EE  0E42               	movlw	66
 34696  0047F0  EC82  F043         	call	_RADIO_RegisterRead
 34697  0047F4  0101               	movlb	1	; () banked
 34698  0047F6  6FAB               	movwf	(_RadioConfiguration+49)& (0+255),b
 34699                           
 34700                           ; BSR set to: 1
 34701  0047F8  0012               	return		;funcret
 34702  0047FA                     __end_of_RADIO_Init:
 34703                           	opt stack 0
 34704                           tosu	equ	0xFFF
 34705                           tosh	equ	0xFFE
 34706                           tosl	equ	0xFFD
 34707                           pclath	equ	0xFFA
 34708                           tblptru	equ	0xFF8
 34709                           tblptrh	equ	0xFF7
 34710                           tblptrl	equ	0xFF6
 34711                           tablat	equ	0xFF5
 34712                           prodh	equ	0xFF4
 34713                           prodl	equ	0xFF3
 34714                           intcon	equ	0xFF2
 34715                           intcon2	equ	0xFF1
 34716                           intcon3	equ	0xFF0
 34717                           indf0	equ	0xFEF
 34718                           postinc0	equ	0xFEE
 34719                           plusw0	equ	0xFEB
 34720                           fsr0h	equ	0xFEA
 34721                           fsr0l	equ	0xFE9
 34722                           wreg	equ	0xFE8
 34723                           postinc1	equ	0xFE6
 34724                           postdec1	equ	0xFE5
 34725                           plusw1	equ	0xFE3
 34726                           fsr1h	equ	0xFE2
 34727                           fsr1l	equ	0xFE1
 34728                           indf2	equ	0xFDF
 34729                           postinc2	equ	0xFDE
 34730                           postdec2	equ	0xFDD
 34731                           plusw2	equ	0xFDB
 34732                           fsr2h	equ	0xFDA
 34733                           fsr2l	equ	0xFD9
 34734                           status	equ	0xFD8
 34735                           
 34736 ;; *************** function _SwTimerSetCallback *****************
 34737 ;; Defined at:
 34738 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34739 ;; Parameters:    Size  Location     Type
 34740 ;;  timerId         1    wreg     unsigned char 
 34741 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 34742 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 34743 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 34744 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 34745 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 34746 ;; Auto vars:     Size  Location     Type
 34747 ;;  timerId         1    3[BANK0 ] unsigned char 
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1    wreg      void 
 34750 ;; Registers used:
 34751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34752 ;; Tracked objects:
 34753 ;;		On entry : 0/0
 34754 ;;		On exit  : 0/0
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34757 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34761 ;;Total ram usage:        4 bytes
 34762 ;; Hardware stack levels used:    1
 34763 ;; Hardware stack levels required when called:    7
 34764 ;; This function calls:
 34765 ;;		Nothing
 34766 ;; This function is called by:
 34767 ;;		_RADIO_Init
 34768 ;;		_SetCallbackSoftwareTimers
 34769 ;; This function uses a non-reentrant model
 34770 ;;
 34771                           
 34772                           	psect	text157
 34773  008172                     __ptext157:
 34774                           	opt stack 0
 34775  008172                     _SwTimerSetCallback:
 34776                           	opt stack 21
 34777                           
 34778                           ; BSR set to: 1
 34779                           ;incstack = 0
 34780                           ;SwTimerSetCallback@timerId stored from wreg
 34781  008172  0100               	movlb	0	; () banked
 34782  008174  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 34783                           
 34784                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 34785  008176  0100               	movlb	0	; () banked
 34786  008178  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 34787  00817A  0D08               	mullw	8
 34788  00817C  0E06               	movlw	6
 34789  00817E  26F3               	addwf	prodl,f,c
 34790  008180  0E00               	movlw	0
 34791  008182  22F4               	addwfc	prodh,f,c
 34792  008184  0E00               	movlw	low _swTimers
 34793  008186  24F3               	addwf	prodl,w,c
 34794  008188  6ED9               	movwf	fsr2l,c
 34795  00818A  0E03               	movlw	high _swTimers
 34796  00818C  20F4               	addwfc	prodh,w,c
 34797  00818E  6EDA               	movwf	fsr2h,c
 34798  008190  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 34799  008194  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 34800                           
 34801                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 34802  008198  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 34803  00819A  0D08               	mullw	8
 34804  00819C  0E05               	movlw	5
 34805  00819E  26F3               	addwf	prodl,f,c
 34806  0081A0  0E00               	movlw	0
 34807  0081A2  22F4               	addwfc	prodh,f,c
 34808  0081A4  0E00               	movlw	low _swTimers
 34809  0081A6  24F3               	addwf	prodl,w,c
 34810  0081A8  6ED9               	movwf	fsr2l,c
 34811  0081AA  0E03               	movlw	high _swTimers
 34812  0081AC  20F4               	addwfc	prodh,w,c
 34813  0081AE  6EDA               	movwf	fsr2h,c
 34814  0081B0  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 34815                           
 34816                           ; BSR set to: 0
 34817  0081B4  0012               	return		;funcret
 34818  0081B6                     __end_of_SwTimerSetCallback:
 34819                           	opt stack 0
 34820                           tosu	equ	0xFFF
 34821                           tosh	equ	0xFFE
 34822                           tosl	equ	0xFFD
 34823                           pclath	equ	0xFFA
 34824                           tblptru	equ	0xFF8
 34825                           tblptrh	equ	0xFF7
 34826                           tblptrl	equ	0xFF6
 34827                           tablat	equ	0xFF5
 34828                           prodh	equ	0xFF4
 34829                           prodl	equ	0xFF3
 34830                           intcon	equ	0xFF2
 34831                           intcon2	equ	0xFF1
 34832                           intcon3	equ	0xFF0
 34833                           indf0	equ	0xFEF
 34834                           postinc0	equ	0xFEE
 34835                           plusw0	equ	0xFEB
 34836                           fsr0h	equ	0xFEA
 34837                           fsr0l	equ	0xFE9
 34838                           wreg	equ	0xFE8
 34839                           postinc1	equ	0xFE6
 34840                           postdec1	equ	0xFE5
 34841                           plusw1	equ	0xFE3
 34842                           fsr1h	equ	0xFE2
 34843                           fsr1l	equ	0xFE1
 34844                           indf2	equ	0xFDF
 34845                           postinc2	equ	0xFDE
 34846                           postdec2	equ	0xFDD
 34847                           plusw2	equ	0xFDB
 34848                           fsr2h	equ	0xFDA
 34849                           fsr2l	equ	0xFD9
 34850                           status	equ	0xFD8
 34851                           
 34852 ;; *************** function _RADIO_WriteMode *****************
 34853 ;; Defined at:
 34854 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34855 ;; Parameters:    Size  Location     Type
 34856 ;;  newMode         1    wreg     enum E7718
 34857 ;;  newModulatio    1    5[BANK0 ] enum E6984
 34858 ;;  blocking        1    6[BANK0 ] unsigned char 
 34859 ;; Auto vars:     Size  Location     Type
 34860 ;;  newMode         1   10[BANK0 ] enum E7718
 34861 ;;  opMode          1   11[BANK0 ] unsigned char 
 34862 ;;  currentMode     1    9[BANK0 ] enum E7718
 34863 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 34864 ;;  currentModul    1    7[BANK0 ] enum E6984
 34865 ;; Return value:  Size  Location     Type
 34866 ;;                  1    wreg      void 
 34867 ;; Registers used:
 34868 ;;		wreg, status,2, status,0, cstack
 34869 ;; Tracked objects:
 34870 ;;		On entry : 0/0
 34871 ;;		On exit  : 0/0
 34872 ;;		Unchanged: 0/0
 34873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34875 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34877 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34878 ;;Total ram usage:        7 bytes
 34879 ;; Hardware stack levels used:    1
 34880 ;; Hardware stack levels required when called:   10
 34881 ;; This function calls:
 34882 ;;		_HALDIO5PinValue
 34883 ;;		_RADIO_RegisterRead
 34884 ;;		_RADIO_RegisterWrite
 34885 ;;		_SystemBlockingWaitMs
 34886 ;; This function is called by:
 34887 ;;		_RADIO_Init
 34888 ;;		_RADIO_WriteConfiguration
 34889 ;;		_RADIO_Transmit
 34890 ;;		_RADIO_ReceiveStart
 34891 ;;		_RADIO_ReceiveStop
 34892 ;;		_RADIO_RxDone
 34893 ;;		_RADIO_FSKPayloadReady
 34894 ;;		_RADIO_RxTimeout
 34895 ;;		_RADIO_TxDone
 34896 ;;		_RADIO_FSKPacketSent
 34897 ;;		_RADIO_ReadRandom
 34898 ;;		_RADIO_RxFSKTimeout
 34899 ;;		_RADIO_WatchdogTimeout
 34900 ;;		_RADIO_StopCW
 34901 ;; This function uses a non-reentrant model
 34902 ;;
 34903                           
 34904                           	psect	text158
 34905  005E1A                     __ptext158:
 34906                           	opt stack 0
 34907  005E1A                     _RADIO_WriteMode:
 34908                           	opt stack 18
 34909                           
 34910                           ; BSR set to: 0
 34911                           ;incstack = 0
 34912                           ;RADIO_WriteMode@newMode stored from wreg
 34913  005E1A  0100               	movlb	0	; () banked
 34914  005E1C  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 34915                           
 34916                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 34917                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 34918                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 34919                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 34920                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 34921                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 34922  005E1E  0100               	movlb	0	; () banked
 34923  005E20  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 34924  005E22  A4D8               	btfss	status,2,c
 34925  005E24  D008               	goto	l432
 34926                           
 34927                           ; BSR set to: 0
 34928  005E26  0E06               	movlw	6
 34929  005E28  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 34930  005E2A  B4D8               	btfsc	status,2,c
 34931  005E2C  0012               	return	
 34932                           
 34933                           ; BSR set to: 0
 34934  005E2E  0E07               	movlw	7
 34935  005E30  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 34936  005E32  B4D8               	btfsc	status,2,c
 34937  005E34  0012               	return	
 34938  005E36                     l432:
 34939                           
 34940                           ; BSR set to: 0
 34941                           ;radio_driver_SX1276.c: 159: }
 34942                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 34943                           
 34944                           ; BSR set to: 0
 34945  005E36  0E07               	movlw	7
 34946  005E38  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 34947                           
 34948                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 34949  005E3A  0E01               	movlw	1
 34950  005E3C  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 34951                           
 34952                           ; BSR set to: 0
 34953                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 34954  005E3E  0E01               	movlw	1
 34955  005E40  EC82  F043         	call	_RADIO_RegisterRead
 34956  005E44  0100               	movlb	0	; () banked
 34957  005E46  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 34958                           
 34959                           ; BSR set to: 0
 34960                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 34961  005E48  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 34962  005E4A  D002               	goto	l436
 34963                           
 34964                           ; BSR set to: 0
 34965                           ;radio_driver_SX1276.c: 168: {
 34966                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 34967  005E4C  0E01               	movlw	1
 34968  005E4E  D001               	goto	L26
 34969  005E50                     l436:
 34970                           
 34971                           ; BSR set to: 0
 34972                           ;radio_driver_SX1276.c: 171: else
 34973                           ;radio_driver_SX1276.c: 172: {
 34974                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 34975                           
 34976                           ; BSR set to: 0
 34977  005E50  0E00               	movlw	0
 34978  005E52                     L26:
 34979  005E52  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 34980                           
 34981                           ; BSR set to: 0
 34982                           ;radio_driver_SX1276.c: 174: }
 34983                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 34984                           
 34985                           ; BSR set to: 0
 34986  005E54  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 34987  005E56  0B07               	andlw	7
 34988  005E58  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 34992  005E5A  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 34993  005E5C  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 34994  005E5E  B4D8               	btfsc	status,2,c
 34995  005E60  D01B               	goto	l438
 34996                           
 34997                           ; BSR set to: 0
 34998                           ;radio_driver_SX1276.c: 181: {
 34999                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 35000  005E62  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35001  005E64  B4D8               	btfsc	status,2,c
 35002  005E66  D009               	goto	l439
 35003                           
 35004                           ; BSR set to: 0
 35005                           ;radio_driver_SX1276.c: 184: {
 35006                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 35007  005E68  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35008  005E6A  0BF8               	andlw	248
 35009  005E6C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35010  005E6E  0E01               	movlw	1
 35011  005E70  EC33  F044         	call	_RADIO_RegisterWrite
 35012                           
 35013                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 35014  005E74  0E00               	movlw	0
 35015  005E76  0100               	movlb	0	; () banked
 35016  005E78  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35017  005E7A                     l439:
 35018                           
 35019                           ; BSR set to: 0
 35020                           ;radio_driver_SX1276.c: 188: }
 35021                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 35022                           
 35023                           ; BSR set to: 0
 35024  005E7A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35025  005E7C  A4D8               	btfss	status,2,c
 35026  005E7E  D003               	goto	l440
 35027                           
 35028                           ; BSR set to: 0
 35029                           ;radio_driver_SX1276.c: 191: {
 35030                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 35031  005E80  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35032  005E82  0B78               	andlw	120
 35033  005E84  D003               	goto	L27
 35034  005E86                     l440:
 35035                           
 35036                           ; BSR set to: 0
 35037                           ;radio_driver_SX1276.c: 195: else
 35038                           ;radio_driver_SX1276.c: 196: {
 35039                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 35040                           
 35041                           ; BSR set to: 0
 35042  005E86  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35043  005E88  0B78               	andlw	120
 35044  005E8A  0980               	iorlw	128
 35045  005E8C                     L27:
 35046  005E8C  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35047                           
 35048                           ; BSR set to: 0
 35049                           ;radio_driver_SX1276.c: 199: }
 35050                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 35051                           
 35052                           ; BSR set to: 0
 35053  005E8E  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35054  005E92  0E01               	movlw	1
 35055  005E94  EC33  F044         	call	_RADIO_RegisterWrite
 35056  005E98                     l438:
 35057                           
 35058                           ;radio_driver_SX1276.c: 201: }
 35059                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 35060  005E98  0100               	movlb	0	; () banked
 35061  005E9A  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35062  005E9C  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35063  005E9E  B4D8               	btfsc	status,2,c
 35064  005EA0  0012               	return	
 35065                           
 35066                           ; BSR set to: 0
 35067                           ;radio_driver_SX1276.c: 208: {
 35068                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 35069  005EA2  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35070  005EA4  B4D8               	btfsc	status,2,c
 35071  005EA6  D015               	goto	l443
 35072                           
 35073                           ; BSR set to: 0
 35074  005EA8  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35075  005EAA  A4D8               	btfss	status,2,c
 35076  005EAC  D012               	goto	l443
 35077                           
 35078                           ; BSR set to: 0
 35079                           ;radio_driver_SX1276.c: 212: {
 35080                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 35081  005EAE  0E41               	movlw	65
 35082  005EB0  EC82  F043         	call	_RADIO_RegisterRead
 35083  005EB4  0100               	movlb	0	; () banked
 35084  005EB6  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 35085                           
 35086                           ; BSR set to: 0
 35087                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 35088  005EB8  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35089  005EBA  A4D8               	btfss	status,2,c
 35090  005EBC  D003               	goto	l444
 35091                           
 35092                           ; BSR set to: 0
 35093                           ;radio_driver_SX1276.c: 215: {
 35094                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 35095  005EBE  0E30               	movlw	48
 35096  005EC0  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35097                           
 35098                           ;radio_driver_SX1276.c: 218: }
 35099  005EC2  D002               	goto	l445
 35100  005EC4                     l444:
 35101                           
 35102                           ; BSR set to: 0
 35103                           ;radio_driver_SX1276.c: 219: else
 35104                           ;radio_driver_SX1276.c: 220: {
 35105                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 35106                           
 35107                           ; BSR set to: 0
 35108  005EC4  0ECF               	movlw	207
 35109  005EC6  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 35110  005EC8                     l445:
 35111                           
 35112                           ; BSR set to: 0
 35113                           ;radio_driver_SX1276.c: 223: }
 35114                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 35115                           
 35116                           ; BSR set to: 0
 35117  005EC8  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 35118  005ECC  0E41               	movlw	65
 35119  005ECE  EC33  F044         	call	_RADIO_RegisterWrite
 35120  005ED2                     l443:
 35121                           
 35122                           ;radio_driver_SX1276.c: 225: }
 35123                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 35124  005ED2  0EF8               	movlw	248
 35125  005ED4  0100               	movlb	0	; () banked
 35126  005ED6  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 35127                           
 35128                           ; BSR set to: 0
 35129                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 35130  005ED8  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35131  005EDA  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 35132                           
 35133                           ; BSR set to: 0
 35134                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 35135  005EDC  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35136  005EE0  0E01               	movlw	1
 35137  005EE2  EC33  F044         	call	_RADIO_RegisterWrite
 35138                           
 35139                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 35140  005EE6  0100               	movlb	0	; () banked
 35141  005EE8  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 35142  005EEA  A4D8               	btfss	status,2,c
 35143  005EEC  0012               	return	
 35144                           
 35145                           ; BSR set to: 0
 35146                           ;radio_driver_SX1276.c: 234: {
 35147                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 35148  005EEE  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 35149  005EF0  B4D8               	btfsc	status,2,c
 35150  005EF2  D006               	goto	l447
 35151  005EF4                     u14630:
 35152                           
 35153                           ; BSR set to: 0
 35154                           
 35155                           ;radio_driver_SX1276.c: 238: ;
 35156                           
 35157                           ; BSR set to: 0
 35158                           
 35159                           ; BSR set to: 0
 35160                           ;radio_driver_SX1276.c: 236: {
 35161                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 35162  005EF4  ECA3  F045         	call	_HALDIO5PinValue	;wreg free
 35163  005EF8  0900               	iorlw	0
 35164  005EFA  A4D8               	btfss	status,2,c
 35165  005EFC  0012               	return	
 35166  005EFE  D7FA               	goto	u14630
 35167  005F00                     l447:
 35168                           
 35169                           ;radio_driver_SX1276.c: 240: else
 35170                           ;radio_driver_SX1276.c: 241: {
 35171                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 35172  005F00  0E01               	movlw	1
 35173  005F02  0100               	movlb	0	; () banked
 35174  005F04  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35175  005F06  0E00               	movlw	0
 35176  005F08  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35177  005F0A  0E00               	movlw	0
 35178  005F0C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35179  005F0E  0E00               	movlw	0
 35180  005F10  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35181  005F12  EC53  F042         	call	_SystemBlockingWaitMs	;wreg free
 35182  005F16  0012               	return	
 35183  005F18                     __end_of_RADIO_WriteMode:
 35184                           	opt stack 0
 35185                           tosu	equ	0xFFF
 35186                           tosh	equ	0xFFE
 35187                           tosl	equ	0xFFD
 35188                           pclath	equ	0xFFA
 35189                           tblptru	equ	0xFF8
 35190                           tblptrh	equ	0xFF7
 35191                           tblptrl	equ	0xFF6
 35192                           tablat	equ	0xFF5
 35193                           prodh	equ	0xFF4
 35194                           prodl	equ	0xFF3
 35195                           intcon	equ	0xFF2
 35196                           intcon2	equ	0xFF1
 35197                           intcon3	equ	0xFF0
 35198                           indf0	equ	0xFEF
 35199                           postinc0	equ	0xFEE
 35200                           plusw0	equ	0xFEB
 35201                           fsr0h	equ	0xFEA
 35202                           fsr0l	equ	0xFE9
 35203                           wreg	equ	0xFE8
 35204                           postinc1	equ	0xFE6
 35205                           postdec1	equ	0xFE5
 35206                           plusw1	equ	0xFE3
 35207                           fsr1h	equ	0xFE2
 35208                           fsr1l	equ	0xFE1
 35209                           indf2	equ	0xFDF
 35210                           postinc2	equ	0xFDE
 35211                           postdec2	equ	0xFDD
 35212                           plusw2	equ	0xFDB
 35213                           fsr2h	equ	0xFDA
 35214                           fsr2l	equ	0xFD9
 35215                           status	equ	0xFD8
 35216                           
 35217 ;; *************** function _RADIO_RegisterRead *****************
 35218 ;; Defined at:
 35219 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35220 ;; Parameters:    Size  Location     Type
 35221 ;;  reg             1    wreg     unsigned char 
 35222 ;; Auto vars:     Size  Location     Type
 35223 ;;  reg             1    2[BANK0 ] unsigned char 
 35224 ;;  readValue       1    3[BANK0 ] unsigned char 
 35225 ;; Return value:  Size  Location     Type
 35226 ;;                  1    wreg      unsigned char 
 35227 ;; Registers used:
 35228 ;;		wreg, status,2, status,0, cstack
 35229 ;; Tracked objects:
 35230 ;;		On entry : 0/0
 35231 ;;		On exit  : 0/0
 35232 ;;		Unchanged: 0/0
 35233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35238 ;;Total ram usage:        2 bytes
 35239 ;; Hardware stack levels used:    1
 35240 ;; Hardware stack levels required when called:    9
 35241 ;; This function calls:
 35242 ;;		_HALSPICSAssert
 35243 ;;		_HALSPICSDeassert
 35244 ;;		_HALSPISend
 35245 ;; This function is called by:
 35246 ;;		_RADIO_WriteMode
 35247 ;;		_RADIO_WritePower
 35248 ;;		_RADIO_Init
 35249 ;;		_RADIO_WriteConfiguration
 35250 ;;		_RADIO_Transmit
 35251 ;;		_RADIO_RxDone
 35252 ;;		_RADIO_FSKPayloadReady
 35253 ;;		_RADIO_FSKPacketSent
 35254 ;;		_RADIO_FHSSChangeChannel
 35255 ;;		_RADIO_DIO0
 35256 ;;		_RADIO_DIO1
 35257 ;;		_RADIO_DIO2
 35258 ;;		_RADIO_DIO3
 35259 ;;		_RADIO_DIO4
 35260 ;;		_RADIO_DIO5
 35261 ;;		_RADIO_ReadRandom
 35262 ;;		_RADIO_RxFSKTimeout
 35263 ;; This function uses a non-reentrant model
 35264 ;;
 35265                           
 35266                           	psect	text159
 35267  008704                     __ptext159:
 35268                           	opt stack 0
 35269  008704                     _RADIO_RegisterRead:
 35270                           	opt stack 18
 35271                           
 35272                           ;incstack = 0
 35273                           ;RADIO_RegisterRead@reg stored from wreg
 35274  008704  0100               	movlb	0	; () banked
 35275  008706  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 35276                           
 35277                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 35278                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 35279  008708  0100               	movlb	0	; () banked
 35280  00870A  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 35284  00870C  EC1D  F046         	call	_HALSPICSAssert	;wreg free
 35285                           
 35286                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 35287  008710  0100               	movlb	0	; () banked
 35288  008712  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 35289  008714  EC9C  F045         	call	_HALSPISend
 35290                           
 35291                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 35292  008718  0EFF               	movlw	255
 35293  00871A  EC9C  F045         	call	_HALSPISend
 35294  00871E  0100               	movlb	0	; () banked
 35295  008720  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 35299  008722  EC1B  F046         	call	_HALSPICSDeassert	;wreg free
 35300                           
 35301                           ;radio_driver_SX1276.c: 142: return readValue;
 35302  008726  0100               	movlb	0	; () banked
 35303  008728  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 35304  00872A  0012               	return	
 35305  00872C                     __end_of_RADIO_RegisterRead:
 35306                           	opt stack 0
 35307                           tosu	equ	0xFFF
 35308                           tosh	equ	0xFFE
 35309                           tosl	equ	0xFFD
 35310                           pclath	equ	0xFFA
 35311                           tblptru	equ	0xFF8
 35312                           tblptrh	equ	0xFF7
 35313                           tblptrl	equ	0xFF6
 35314                           tablat	equ	0xFF5
 35315                           prodh	equ	0xFF4
 35316                           prodl	equ	0xFF3
 35317                           intcon	equ	0xFF2
 35318                           intcon2	equ	0xFF1
 35319                           intcon3	equ	0xFF0
 35320                           indf0	equ	0xFEF
 35321                           postinc0	equ	0xFEE
 35322                           plusw0	equ	0xFEB
 35323                           fsr0h	equ	0xFEA
 35324                           fsr0l	equ	0xFE9
 35325                           wreg	equ	0xFE8
 35326                           postinc1	equ	0xFE6
 35327                           postdec1	equ	0xFE5
 35328                           plusw1	equ	0xFE3
 35329                           fsr1h	equ	0xFE2
 35330                           fsr1l	equ	0xFE1
 35331                           indf2	equ	0xFDF
 35332                           postinc2	equ	0xFDE
 35333                           postdec2	equ	0xFDD
 35334                           plusw2	equ	0xFDB
 35335                           fsr2h	equ	0xFDA
 35336                           fsr2l	equ	0xFD9
 35337                           status	equ	0xFD8
 35338                           
 35339 ;; *************** function _HALDIO5PinValue *****************
 35340 ;; Defined at:
 35341 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35342 ;; Parameters:    Size  Location     Type
 35343 ;;		None
 35344 ;; Auto vars:     Size  Location     Type
 35345 ;;		None
 35346 ;; Return value:  Size  Location     Type
 35347 ;;                  1    wreg      unsigned char 
 35348 ;; Registers used:
 35349 ;;		wreg
 35350 ;; Tracked objects:
 35351 ;;		On entry : 0/0
 35352 ;;		On exit  : 0/0
 35353 ;;		Unchanged: 0/0
 35354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35359 ;;Total ram usage:        0 bytes
 35360 ;; Hardware stack levels used:    1
 35361 ;; Hardware stack levels required when called:    7
 35362 ;; This function calls:
 35363 ;;		Nothing
 35364 ;; This function is called by:
 35365 ;;		_RADIO_WriteMode
 35366 ;; This function uses a non-reentrant model
 35367 ;;
 35368                           
 35369                           	psect	text160
 35370  008B46                     __ptext160:
 35371                           	opt stack 0
 35372  008B46                     _HALDIO5PinValue:
 35373                           	opt stack 20
 35374                           
 35375                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 35376                           
 35377                           ; BSR set to: 0
 35378                           ;incstack = 0
 35379  008B46  A081               	btfss	3969,0,c	;volatile
 35380  008B48  D002               	goto	u14160
 35381  008B4A  0E01               	movlw	1
 35382  008B4C  0012               	return	
 35383  008B4E                     u14160:
 35384  008B4E  0E00               	movlw	0
 35385  008B50  0012               	return	
 35386  008B52                     __end_of_HALDIO5PinValue:
 35387                           	opt stack 0
 35388                           tosu	equ	0xFFF
 35389                           tosh	equ	0xFFE
 35390                           tosl	equ	0xFFD
 35391                           pclath	equ	0xFFA
 35392                           tblptru	equ	0xFF8
 35393                           tblptrh	equ	0xFF7
 35394                           tblptrl	equ	0xFF6
 35395                           tablat	equ	0xFF5
 35396                           prodh	equ	0xFF4
 35397                           prodl	equ	0xFF3
 35398                           intcon	equ	0xFF2
 35399                           intcon2	equ	0xFF1
 35400                           intcon3	equ	0xFF0
 35401                           indf0	equ	0xFEF
 35402                           postinc0	equ	0xFEE
 35403                           plusw0	equ	0xFEB
 35404                           fsr0h	equ	0xFEA
 35405                           fsr0l	equ	0xFE9
 35406                           wreg	equ	0xFE8
 35407                           postinc1	equ	0xFE6
 35408                           postdec1	equ	0xFE5
 35409                           plusw1	equ	0xFE3
 35410                           fsr1h	equ	0xFE2
 35411                           fsr1l	equ	0xFE1
 35412                           indf2	equ	0xFDF
 35413                           postinc2	equ	0xFDE
 35414                           postdec2	equ	0xFDD
 35415                           plusw2	equ	0xFDB
 35416                           fsr2h	equ	0xFDA
 35417                           fsr2l	equ	0xFD9
 35418                           status	equ	0xFD8
 35419                           
 35420 ;; *************** function _RADIO_WriteFrequency *****************
 35421 ;; Defined at:
 35422 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;  frequency       4   13[BANK0 ] unsigned long 
 35425 ;; Auto vars:     Size  Location     Type
 35426 ;;  num             4   21[BANK0 ] unsigned long 
 35427 ;;  num_mod         4   17[BANK0 ] unsigned long 
 35428 ;; Return value:  Size  Location     Type
 35429 ;;                  1    wreg      void 
 35430 ;; Registers used:
 35431 ;;		wreg, status,2, status,0, cstack
 35432 ;; Tracked objects:
 35433 ;;		On entry : 0/0
 35434 ;;		On exit  : 0/0
 35435 ;;		Unchanged: 0/0
 35436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35438 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35440 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35441 ;;Total ram usage:       12 bytes
 35442 ;; Hardware stack levels used:    1
 35443 ;; Hardware stack levels required when called:   10
 35444 ;; This function calls:
 35445 ;;		_RADIO_RegisterWrite
 35446 ;;		___lldiv
 35447 ;;		___llmod
 35448 ;; This function is called by:
 35449 ;;		_RADIO_Init
 35450 ;;		_RADIO_WriteConfiguration
 35451 ;;		_RADIO_FHSSChangeChannel
 35452 ;; This function uses a non-reentrant model
 35453 ;;
 35454                           
 35455                           	psect	text161
 35456  0061F6                     __ptext161:
 35457                           	opt stack 0
 35458  0061F6                     _RADIO_WriteFrequency:
 35459                           	opt stack 17
 35460                           
 35461                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 35462                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 35463                           
 35464                           ;incstack = 0
 35465  0061F6  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 35466  0061FA  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 35467  0061FE  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 35468  006202  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 35469  006206  0E09               	movlw	9
 35470  006208  0100               	movlb	0	; () banked
 35471  00620A  6F64               	movwf	___lldiv@divisor& (0+255),b
 35472  00620C  0E3D               	movlw	61
 35473  00620E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35474  006210  0E00               	movlw	0
 35475  006212  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35476  006214  0E00               	movlw	0
 35477  006216  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35478  006218  EC8F  F039         	call	___lldiv	;wreg free
 35479  00621C  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 35480  006220  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 35481  006224  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 35482  006228  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 35483                           
 35484                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 35485  00622C  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 35486  006230  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 35487  006234  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 35488  006238  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 35489  00623C  0E09               	movlw	9
 35490  00623E  0100               	movlb	0	; () banked
 35491  006240  6F64               	movwf	___llmod@divisor& (0+255),b
 35492  006242  0E3D               	movlw	61
 35493  006244  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 35494  006246  0E00               	movlw	0
 35495  006248  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 35496  00624A  0E00               	movlw	0
 35497  00624C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 35498  00624E  ECDA  F03B         	call	___llmod	;wreg free
 35499  006252  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 35500  006256  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 35501  00625A  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 35502  00625E  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 35503                           
 35504                           ;radio_driver_SX1276.c: 277: num <<= (8);
 35505  006262  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 35506  006266  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 35507  00626A  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 35508  00626E  0100               	movlb	0	; () banked
 35509  006270  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 35513  006272  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 35514  006276  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 35515  00627A  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 35516  00627E  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 35517                           
 35518                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 35519  006280  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 35520  006284  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 35521  006288  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 35522  00628C  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 35523  006290  0E09               	movlw	9
 35524  006292  6F64               	movwf	___lldiv@divisor& (0+255),b
 35525  006294  0E3D               	movlw	61
 35526  006296  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 35527  006298  0E00               	movlw	0
 35528  00629A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 35529  00629C  0E00               	movlw	0
 35530  00629E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 35531  0062A0  EC8F  F039         	call	___lldiv	;wreg free
 35532  0062A4  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 35533  0062A8  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 35534  0062AC  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 35535  0062B0  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 35536                           
 35537                           ;radio_driver_SX1276.c: 283: num += num_mod;
 35538  0062B4  0100               	movlb	0	; () banked
 35539  0062B6  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 35540  0062B8  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 35541  0062BA  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 35542  0062BC  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 35543  0062BE  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 35544  0062C0  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 35545  0062C2  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 35546  0062C4  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 35547                           
 35548                           ; BSR set to: 0
 35549                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 35550  0062C6  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 35551  0062CA  0E06               	movlw	6
 35552  0062CC  EC33  F044         	call	_RADIO_RegisterWrite
 35553                           
 35554                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 35555  0062D0  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 35556  0062D4  0E07               	movlw	7
 35557  0062D6  EC33  F044         	call	_RADIO_RegisterWrite
 35558                           
 35559                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 35560  0062DA  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 35561  0062DE  0E08               	movlw	8
 35562  0062E0  EC33  F044         	call	_RADIO_RegisterWrite
 35563  0062E4  0012               	return		;funcret
 35564  0062E6                     __end_of_RADIO_WriteFrequency:
 35565                           	opt stack 0
 35566                           tosu	equ	0xFFF
 35567                           tosh	equ	0xFFE
 35568                           tosl	equ	0xFFD
 35569                           pclath	equ	0xFFA
 35570                           tblptru	equ	0xFF8
 35571                           tblptrh	equ	0xFF7
 35572                           tblptrl	equ	0xFF6
 35573                           tablat	equ	0xFF5
 35574                           prodh	equ	0xFF4
 35575                           prodl	equ	0xFF3
 35576                           intcon	equ	0xFF2
 35577                           intcon2	equ	0xFF1
 35578                           intcon3	equ	0xFF0
 35579                           indf0	equ	0xFEF
 35580                           postinc0	equ	0xFEE
 35581                           plusw0	equ	0xFEB
 35582                           fsr0h	equ	0xFEA
 35583                           fsr0l	equ	0xFE9
 35584                           wreg	equ	0xFE8
 35585                           postinc1	equ	0xFE6
 35586                           postdec1	equ	0xFE5
 35587                           plusw1	equ	0xFE3
 35588                           fsr1h	equ	0xFE2
 35589                           fsr1l	equ	0xFE1
 35590                           indf2	equ	0xFDF
 35591                           postinc2	equ	0xFDE
 35592                           postdec2	equ	0xFDD
 35593                           plusw2	equ	0xFDB
 35594                           fsr2h	equ	0xFDA
 35595                           fsr2l	equ	0xFD9
 35596                           status	equ	0xFD8
 35597                           
 35598 ;; *************** function ___llmod *****************
 35599 ;; Defined at:
 35600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 35601 ;; Parameters:    Size  Location     Type
 35602 ;;  dividend        4    0[BANK0 ] unsigned long 
 35603 ;;  divisor         4    4[BANK0 ] unsigned long 
 35604 ;; Auto vars:     Size  Location     Type
 35605 ;;  counter         1    8[BANK0 ] unsigned char 
 35606 ;; Return value:  Size  Location     Type
 35607 ;;                  4    0[BANK0 ] unsigned long 
 35608 ;; Registers used:
 35609 ;;		wreg, status,2, status,0
 35610 ;; Tracked objects:
 35611 ;;		On entry : 0/0
 35612 ;;		On exit  : 0/0
 35613 ;;		Unchanged: 0/0
 35614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35618 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35619 ;;Total ram usage:        9 bytes
 35620 ;; Hardware stack levels used:    1
 35621 ;; Hardware stack levels required when called:    7
 35622 ;; This function calls:
 35623 ;;		Nothing
 35624 ;; This function is called by:
 35625 ;;		_RADIO_WriteFrequency
 35626 ;; This function uses a non-reentrant model
 35627 ;;
 35628                           
 35629                           	psect	text162
 35630  0077B4                     __ptext162:
 35631                           	opt stack 0
 35632  0077B4                     ___llmod:
 35633                           	opt stack 19
 35634                           
 35635                           ;incstack = 0
 35636  0077B4  0100               	movlb	0	; () banked
 35637  0077B6  5164               	movf	___llmod@divisor& (0+255),w,b
 35638  0077B8  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 35639  0077BA  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 35640  0077BC  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 35641  0077BE  B4D8               	btfsc	status,2,c
 35642  0077C0  D024               	goto	l2861
 35643                           
 35644                           ; BSR set to: 0
 35645  0077C2  0E01               	movlw	1
 35646  0077C4  6F68               	movwf	___llmod@counter& (0+255),b
 35647  0077C6  D006               	goto	l2856
 35648  0077C8                     
 35649                           ; BSR set to: 0
 35650                           
 35651                           ; BSR set to: 0
 35652  0077C8  90D8               	bcf	status,0,c
 35653  0077CA  3764               	rlcf	___llmod@divisor& (0+255),f,b
 35654  0077CC  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 35655  0077CE  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 35656  0077D0  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 35657  0077D2  2B68               	incf	___llmod@counter& (0+255),f,b
 35658  0077D4                     l2856:
 35659                           
 35660                           ; BSR set to: 0
 35661                           
 35662                           ; BSR set to: 0
 35663  0077D4  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 35664  0077D6  D7F8               	goto	l2857
 35665  0077D8                     u14390:
 35666                           
 35667                           ; BSR set to: 0
 35668                           
 35669                           ; BSR set to: 0
 35670                           
 35671                           ; BSR set to: 0
 35672  0077D8  5164               	movf	___llmod@divisor& (0+255),w,b
 35673  0077DA  5D60               	subwf	___llmod@dividend& (0+255),w,b
 35674  0077DC  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 35675  0077DE  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 35676  0077E0  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 35677  0077E2  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 35678  0077E4  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 35679  0077E6  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 35680  0077E8  A0D8               	btfss	status,0,c
 35681  0077EA  D008               	goto	l2860
 35682                           
 35683                           ; BSR set to: 0
 35684  0077EC  5164               	movf	___llmod@divisor& (0+255),w,b
 35685  0077EE  5F60               	subwf	___llmod@dividend& (0+255),f,b
 35686  0077F0  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 35687  0077F2  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 35688  0077F4  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 35689  0077F6  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 35690  0077F8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 35691  0077FA  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 35692  0077FC                     l2860:
 35693                           
 35694                           ; BSR set to: 0
 35695                           
 35696                           ; BSR set to: 0
 35697  0077FC  90D8               	bcf	status,0,c
 35698  0077FE  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 35699  007800  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 35700  007802  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 35701  007804  3364               	rrcf	___llmod@divisor& (0+255),f,b
 35702                           
 35703                           ; BSR set to: 0
 35704  007806  2F68               	decfsz	___llmod@counter& (0+255),f,b
 35705  007808  D7E7               	goto	u14390
 35706  00780A                     l2861:
 35707                           
 35708                           ; BSR set to: 0
 35709                           
 35710                           ; BSR set to: 0
 35711  00780A  C060  F060         	movff	___llmod@dividend,?___llmod
 35712  00780E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 35713  007812  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 35714  007816  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 35715                           
 35716                           ; BSR set to: 0
 35717  00781A  0012               	return		;funcret
 35718  00781C                     __end_of___llmod:
 35719                           	opt stack 0
 35720                           tosu	equ	0xFFF
 35721                           tosh	equ	0xFFE
 35722                           tosl	equ	0xFFD
 35723                           pclath	equ	0xFFA
 35724                           tblptru	equ	0xFF8
 35725                           tblptrh	equ	0xFF7
 35726                           tblptrl	equ	0xFF6
 35727                           tablat	equ	0xFF5
 35728                           prodh	equ	0xFF4
 35729                           prodl	equ	0xFF3
 35730                           intcon	equ	0xFF2
 35731                           intcon2	equ	0xFF1
 35732                           intcon3	equ	0xFF0
 35733                           indf0	equ	0xFEF
 35734                           postinc0	equ	0xFEE
 35735                           plusw0	equ	0xFEB
 35736                           fsr0h	equ	0xFEA
 35737                           fsr0l	equ	0xFE9
 35738                           wreg	equ	0xFE8
 35739                           postinc1	equ	0xFE6
 35740                           postdec1	equ	0xFE5
 35741                           plusw1	equ	0xFE3
 35742                           fsr1h	equ	0xFE2
 35743                           fsr1l	equ	0xFE1
 35744                           indf2	equ	0xFDF
 35745                           postinc2	equ	0xFDE
 35746                           postdec2	equ	0xFDD
 35747                           plusw2	equ	0xFDB
 35748                           fsr2h	equ	0xFDA
 35749                           fsr2l	equ	0xFD9
 35750                           status	equ	0xFD8
 35751                           
 35752 ;; *************** function _RADIO_RegisterWrite *****************
 35753 ;; Defined at:
 35754 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35755 ;; Parameters:    Size  Location     Type
 35756 ;;  reg             1    wreg     unsigned char 
 35757 ;;  value           1    2[BANK0 ] unsigned char 
 35758 ;; Auto vars:     Size  Location     Type
 35759 ;;  reg             1    3[BANK0 ] unsigned char 
 35760 ;; Return value:  Size  Location     Type
 35761 ;;                  1    wreg      void 
 35762 ;; Registers used:
 35763 ;;		wreg, status,2, status,0, cstack
 35764 ;; Tracked objects:
 35765 ;;		On entry : 0/0
 35766 ;;		On exit  : 0/0
 35767 ;;		Unchanged: 0/0
 35768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35769 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35772 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35773 ;;Total ram usage:        2 bytes
 35774 ;; Hardware stack levels used:    1
 35775 ;; Hardware stack levels required when called:    9
 35776 ;; This function calls:
 35777 ;;		_HALSPICSAssert
 35778 ;;		_HALSPICSDeassert
 35779 ;;		_HALSPISend
 35780 ;; This function is called by:
 35781 ;;		_RADIO_WriteMode
 35782 ;;		_RADIO_WriteFrequency
 35783 ;;		_RADIO_WriteFSKFrequencyDeviation
 35784 ;;		_RADIO_WriteFSKBitRate
 35785 ;;		_RADIO_WritePower
 35786 ;;		_RADIO_Init
 35787 ;;		_RADIO_WriteConfiguration
 35788 ;;		_RADIO_Transmit
 35789 ;;		_RADIO_ReceiveStart
 35790 ;;		_RADIO_RxDone
 35791 ;;		_RADIO_RxTimeout
 35792 ;;		_RADIO_TxDone
 35793 ;;		_RADIO_UnhandledInterrupt
 35794 ;;		_RADIO_FHSSChangeChannel
 35795 ;;		_RADIO_ReadRandom
 35796 ;;		_RADIO_TransmitCW
 35797 ;; This function uses a non-reentrant model
 35798 ;;
 35799                           
 35800                           	psect	text163
 35801  008866                     __ptext163:
 35802                           	opt stack 0
 35803  008866                     _RADIO_RegisterWrite:
 35804                           	opt stack 18
 35805                           
 35806                           ; BSR set to: 0
 35807                           ;incstack = 0
 35808                           ;RADIO_RegisterWrite@reg stored from wreg
 35809  008866  0100               	movlb	0	; () banked
 35810  008868  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 35811                           
 35812                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 35813  00886A  EC1D  F046         	call	_HALSPICSAssert	;wreg free
 35814                           
 35815                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 35816  00886E  0100               	movlb	0	; () banked
 35817  008870  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 35818  008872  0980               	iorlw	128
 35819  008874  EC9C  F045         	call	_HALSPISend
 35820                           
 35821                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 35822  008878  0100               	movlb	0	; () banked
 35823  00887A  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 35824  00887C  EC9C  F045         	call	_HALSPISend
 35825                           
 35826                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 35827  008880  EC1B  F046         	call	_HALSPICSDeassert	;wreg free
 35828  008884  0012               	return		;funcret
 35829  008886                     __end_of_RADIO_RegisterWrite:
 35830                           	opt stack 0
 35831                           tosu	equ	0xFFF
 35832                           tosh	equ	0xFFE
 35833                           tosl	equ	0xFFD
 35834                           pclath	equ	0xFFA
 35835                           tblptru	equ	0xFF8
 35836                           tblptrh	equ	0xFF7
 35837                           tblptrl	equ	0xFF6
 35838                           tablat	equ	0xFF5
 35839                           prodh	equ	0xFF4
 35840                           prodl	equ	0xFF3
 35841                           intcon	equ	0xFF2
 35842                           intcon2	equ	0xFF1
 35843                           intcon3	equ	0xFF0
 35844                           indf0	equ	0xFEF
 35845                           postinc0	equ	0xFEE
 35846                           plusw0	equ	0xFEB
 35847                           fsr0h	equ	0xFEA
 35848                           fsr0l	equ	0xFE9
 35849                           wreg	equ	0xFE8
 35850                           postinc1	equ	0xFE6
 35851                           postdec1	equ	0xFE5
 35852                           plusw1	equ	0xFE3
 35853                           fsr1h	equ	0xFE2
 35854                           fsr1l	equ	0xFE1
 35855                           indf2	equ	0xFDF
 35856                           postinc2	equ	0xFDE
 35857                           postdec2	equ	0xFDD
 35858                           plusw2	equ	0xFDB
 35859                           fsr2h	equ	0xFDA
 35860                           fsr2l	equ	0xFD9
 35861                           status	equ	0xFD8
 35862                           
 35863 ;; *************** function _HALSPISend *****************
 35864 ;; Defined at:
 35865 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35866 ;; Parameters:    Size  Location     Type
 35867 ;;  data            1    wreg     unsigned char 
 35868 ;; Auto vars:     Size  Location     Type
 35869 ;;  data            1    1[BANK0 ] unsigned char 
 35870 ;; Return value:  Size  Location     Type
 35871 ;;                  1    wreg      unsigned char 
 35872 ;; Registers used:
 35873 ;;		wreg, status,2, cstack
 35874 ;; Tracked objects:
 35875 ;;		On entry : 0/0
 35876 ;;		On exit  : 0/0
 35877 ;;		Unchanged: 0/0
 35878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35882 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35883 ;;Total ram usage:        1 bytes
 35884 ;; Hardware stack levels used:    1
 35885 ;; Hardware stack levels required when called:    8
 35886 ;; This function calls:
 35887 ;;		_SPI2_Exchange8bit
 35888 ;; This function is called by:
 35889 ;;		_RADIO_RegisterWrite
 35890 ;;		_RADIO_RegisterRead
 35891 ;;		_RADIO_Transmit
 35892 ;;		_RADIO_RxDone
 35893 ;;		_RADIO_FSKPayloadReady
 35894 ;; This function uses a non-reentrant model
 35895 ;;
 35896                           
 35897                           	psect	text164
 35898  008B38                     __ptext164:
 35899                           	opt stack 0
 35900  008B38                     _HALSPISend:
 35901                           	opt stack 18
 35902                           
 35903                           ;incstack = 0
 35904                           ;HALSPISend@data stored from wreg
 35905  008B38  0100               	movlb	0	; () banked
 35906  008B3A  6F61               	movwf	HALSPISend@data& (0+255),b
 35907                           
 35908                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 35909  008B3C  0100               	movlb	0	; () banked
 35910  008B3E  5161               	movf	HALSPISend@data& (0+255),w,b
 35911  008B40  EC55  F045         	call	_SPI2_Exchange8bit
 35912  008B44  0012               	return	
 35913  008B46                     __end_of_HALSPISend:
 35914                           	opt stack 0
 35915                           tosu	equ	0xFFF
 35916                           tosh	equ	0xFFE
 35917                           tosl	equ	0xFFD
 35918                           pclath	equ	0xFFA
 35919                           tblptru	equ	0xFF8
 35920                           tblptrh	equ	0xFF7
 35921                           tblptrl	equ	0xFF6
 35922                           tablat	equ	0xFF5
 35923                           prodh	equ	0xFF4
 35924                           prodl	equ	0xFF3
 35925                           intcon	equ	0xFF2
 35926                           intcon2	equ	0xFF1
 35927                           intcon3	equ	0xFF0
 35928                           indf0	equ	0xFEF
 35929                           postinc0	equ	0xFEE
 35930                           plusw0	equ	0xFEB
 35931                           fsr0h	equ	0xFEA
 35932                           fsr0l	equ	0xFE9
 35933                           wreg	equ	0xFE8
 35934                           postinc1	equ	0xFE6
 35935                           postdec1	equ	0xFE5
 35936                           plusw1	equ	0xFE3
 35937                           fsr1h	equ	0xFE2
 35938                           fsr1l	equ	0xFE1
 35939                           indf2	equ	0xFDF
 35940                           postinc2	equ	0xFDE
 35941                           postdec2	equ	0xFDD
 35942                           plusw2	equ	0xFDB
 35943                           fsr2h	equ	0xFDA
 35944                           fsr2l	equ	0xFD9
 35945                           status	equ	0xFD8
 35946                           
 35947 ;; *************** function _SPI2_Exchange8bit *****************
 35948 ;; Defined at:
 35949 ;;		line 79 in file "mcc_generated_files/spi2.c"
 35950 ;; Parameters:    Size  Location     Type
 35951 ;;  data            1    wreg     unsigned char 
 35952 ;; Auto vars:     Size  Location     Type
 35953 ;;  data            1    0[BANK0 ] unsigned char 
 35954 ;; Return value:  Size  Location     Type
 35955 ;;                  1    wreg      unsigned char 
 35956 ;; Registers used:
 35957 ;;		wreg, status,2
 35958 ;; Tracked objects:
 35959 ;;		On entry : 0/0
 35960 ;;		On exit  : 0/0
 35961 ;;		Unchanged: 0/0
 35962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35967 ;;Total ram usage:        1 bytes
 35968 ;; Hardware stack levels used:    1
 35969 ;; Hardware stack levels required when called:    7
 35970 ;; This function calls:
 35971 ;;		Nothing
 35972 ;; This function is called by:
 35973 ;;		_HALSPISend
 35974 ;;		_SPI2_Exchange8bitBuffer
 35975 ;; This function uses a non-reentrant model
 35976 ;;
 35977                           
 35978                           	psect	text165
 35979  008AAA                     __ptext165:
 35980                           	opt stack 0
 35981  008AAA                     _SPI2_Exchange8bit:
 35982                           	opt stack 18
 35983                           
 35984                           ;incstack = 0
 35985                           ;SPI2_Exchange8bit@data stored from wreg
 35986  008AAA  0100               	movlb	0	; () banked
 35987  008AAC  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 35988                           
 35989                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 35990  008AAE  9E6C               	bcf	3948,7,c	;volatile
 35991                           
 35992                           ;spi2.c: 84: SSP2BUF = data;
 35993  008AB0  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 35994  008AB4                     
 35995                           ;spi2.c: 87: {
 35996  008AB4  A06D               	btfss	3949,0,c	;volatile
 35997  008AB6  D7FE               	goto	l47
 35998                           
 35999                           ;spi2.c: 88: }
 36000                           ;spi2.c: 90: return (SSP2BUF);
 36001  008AB8  506F               	movf	3951,w,c	;volatile
 36002  008ABA  0012               	return		;funcret
 36003  008ABC                     __end_of_SPI2_Exchange8bit:
 36004                           	opt stack 0
 36005                           tosu	equ	0xFFF
 36006                           tosh	equ	0xFFE
 36007                           tosl	equ	0xFFD
 36008                           pclath	equ	0xFFA
 36009                           tblptru	equ	0xFF8
 36010                           tblptrh	equ	0xFF7
 36011                           tblptrl	equ	0xFF6
 36012                           tablat	equ	0xFF5
 36013                           prodh	equ	0xFF4
 36014                           prodl	equ	0xFF3
 36015                           intcon	equ	0xFF2
 36016                           intcon2	equ	0xFF1
 36017                           intcon3	equ	0xFF0
 36018                           indf0	equ	0xFEF
 36019                           postinc0	equ	0xFEE
 36020                           plusw0	equ	0xFEB
 36021                           fsr0h	equ	0xFEA
 36022                           fsr0l	equ	0xFE9
 36023                           wreg	equ	0xFE8
 36024                           postinc1	equ	0xFE6
 36025                           postdec1	equ	0xFE5
 36026                           plusw1	equ	0xFE3
 36027                           fsr1h	equ	0xFE2
 36028                           fsr1l	equ	0xFE1
 36029                           indf2	equ	0xFDF
 36030                           postinc2	equ	0xFDE
 36031                           postdec2	equ	0xFDD
 36032                           plusw2	equ	0xFDB
 36033                           fsr2h	equ	0xFDA
 36034                           fsr2l	equ	0xFD9
 36035                           status	equ	0xFD8
 36036                           
 36037 ;; *************** function _HALSPICSDeassert *****************
 36038 ;; Defined at:
 36039 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36040 ;; Parameters:    Size  Location     Type
 36041 ;;		None
 36042 ;; Auto vars:     Size  Location     Type
 36043 ;;		None
 36044 ;; Return value:  Size  Location     Type
 36045 ;;                  1    wreg      void 
 36046 ;; Registers used:
 36047 ;;		None
 36048 ;; Tracked objects:
 36049 ;;		On entry : 0/0
 36050 ;;		On exit  : 0/0
 36051 ;;		Unchanged: 0/0
 36052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36057 ;;Total ram usage:        0 bytes
 36058 ;; Hardware stack levels used:    1
 36059 ;; Hardware stack levels required when called:    7
 36060 ;; This function calls:
 36061 ;;		Nothing
 36062 ;; This function is called by:
 36063 ;;		_RADIO_RegisterWrite
 36064 ;;		_RADIO_RegisterRead
 36065 ;;		_RADIO_Transmit
 36066 ;;		_RADIO_RxDone
 36067 ;;		_RADIO_FSKPayloadReady
 36068 ;; This function uses a non-reentrant model
 36069 ;;
 36070                           
 36071                           	psect	text166
 36072  008C36                     __ptext166:
 36073                           	opt stack 0
 36074  008C36                     _HALSPICSDeassert:
 36075                           	opt stack 19
 36076                           
 36077                           ;incstack = 0
 36078                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36079  008C36  868C               	bsf	3980,3,c	;volatile
 36080  008C38  0012               	return	
 36081  008C3A                     __end_of_HALSPICSDeassert:
 36082                           	opt stack 0
 36083                           tosu	equ	0xFFF
 36084                           tosh	equ	0xFFE
 36085                           tosl	equ	0xFFD
 36086                           pclath	equ	0xFFA
 36087                           tblptru	equ	0xFF8
 36088                           tblptrh	equ	0xFF7
 36089                           tblptrl	equ	0xFF6
 36090                           tablat	equ	0xFF5
 36091                           prodh	equ	0xFF4
 36092                           prodl	equ	0xFF3
 36093                           intcon	equ	0xFF2
 36094                           intcon2	equ	0xFF1
 36095                           intcon3	equ	0xFF0
 36096                           indf0	equ	0xFEF
 36097                           postinc0	equ	0xFEE
 36098                           plusw0	equ	0xFEB
 36099                           fsr0h	equ	0xFEA
 36100                           fsr0l	equ	0xFE9
 36101                           wreg	equ	0xFE8
 36102                           postinc1	equ	0xFE6
 36103                           postdec1	equ	0xFE5
 36104                           plusw1	equ	0xFE3
 36105                           fsr1h	equ	0xFE2
 36106                           fsr1l	equ	0xFE1
 36107                           indf2	equ	0xFDF
 36108                           postinc2	equ	0xFDE
 36109                           postdec2	equ	0xFDD
 36110                           plusw2	equ	0xFDB
 36111                           fsr2h	equ	0xFDA
 36112                           fsr2l	equ	0xFD9
 36113                           status	equ	0xFD8
 36114                           
 36115 ;; *************** function _HALSPICSAssert *****************
 36116 ;; Defined at:
 36117 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36118 ;; Parameters:    Size  Location     Type
 36119 ;;		None
 36120 ;; Auto vars:     Size  Location     Type
 36121 ;;		None
 36122 ;; Return value:  Size  Location     Type
 36123 ;;                  1    wreg      void 
 36124 ;; Registers used:
 36125 ;;		None
 36126 ;; Tracked objects:
 36127 ;;		On entry : 0/0
 36128 ;;		On exit  : 0/0
 36129 ;;		Unchanged: 0/0
 36130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36135 ;;Total ram usage:        0 bytes
 36136 ;; Hardware stack levels used:    1
 36137 ;; Hardware stack levels required when called:    7
 36138 ;; This function calls:
 36139 ;;		Nothing
 36140 ;; This function is called by:
 36141 ;;		_RADIO_RegisterWrite
 36142 ;;		_RADIO_RegisterRead
 36143 ;;		_RADIO_Transmit
 36144 ;;		_RADIO_RxDone
 36145 ;;		_RADIO_FSKPayloadReady
 36146 ;; This function uses a non-reentrant model
 36147 ;;
 36148                           
 36149                           	psect	text167
 36150  008C3A                     __ptext167:
 36151                           	opt stack 0
 36152  008C3A                     _HALSPICSAssert:
 36153                           	opt stack 19
 36154                           
 36155                           ;incstack = 0
 36156                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36157  008C3A  968C               	bcf	3980,3,c	;volatile
 36158  008C3C  0012               	return	
 36159  008C3E                     __end_of_HALSPICSAssert:
 36160                           	opt stack 0
 36161                           tosu	equ	0xFFF
 36162                           tosh	equ	0xFFE
 36163                           tosl	equ	0xFFD
 36164                           pclath	equ	0xFFA
 36165                           tblptru	equ	0xFF8
 36166                           tblptrh	equ	0xFF7
 36167                           tblptrl	equ	0xFF6
 36168                           tablat	equ	0xFF5
 36169                           prodh	equ	0xFF4
 36170                           prodl	equ	0xFF3
 36171                           intcon	equ	0xFF2
 36172                           intcon2	equ	0xFF1
 36173                           intcon3	equ	0xFF0
 36174                           indf0	equ	0xFEF
 36175                           postinc0	equ	0xFEE
 36176                           plusw0	equ	0xFEB
 36177                           fsr0h	equ	0xFEA
 36178                           fsr0l	equ	0xFE9
 36179                           wreg	equ	0xFE8
 36180                           postinc1	equ	0xFE6
 36181                           postdec1	equ	0xFE5
 36182                           plusw1	equ	0xFE3
 36183                           fsr1h	equ	0xFE2
 36184                           fsr1l	equ	0xFE1
 36185                           indf2	equ	0xFDF
 36186                           postinc2	equ	0xFDE
 36187                           postdec2	equ	0xFDD
 36188                           plusw2	equ	0xFDB
 36189                           fsr2h	equ	0xFDA
 36190                           fsr2l	equ	0xFD9
 36191                           status	equ	0xFD8
 36192                           
 36193 ;; *************** function _RADIO_Reset *****************
 36194 ;; Defined at:
 36195 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36196 ;; Parameters:    Size  Location     Type
 36197 ;;		None
 36198 ;; Auto vars:     Size  Location     Type
 36199 ;;		None
 36200 ;; Return value:  Size  Location     Type
 36201 ;;                  1    wreg      void 
 36202 ;; Registers used:
 36203 ;;		wreg, status,2, status,0, cstack
 36204 ;; Tracked objects:
 36205 ;;		On entry : 0/0
 36206 ;;		On exit  : 0/0
 36207 ;;		Unchanged: 0/0
 36208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;Total ram usage:        0 bytes
 36214 ;; Hardware stack levels used:    1
 36215 ;; Hardware stack levels required when called:    8
 36216 ;; This function calls:
 36217 ;;		_HALResetPinMakeInput
 36218 ;;		_HALResetPinMakeOutput
 36219 ;;		_HALResetPinOutputValue
 36220 ;;		_SystemBlockingWaitMs
 36221 ;; This function is called by:
 36222 ;;		_RADIO_Init
 36223 ;; This function uses a non-reentrant model
 36224 ;;
 36225                           
 36226                           	psect	text168
 36227  008060                     __ptext168:
 36228                           	opt stack 0
 36229  008060                     _RADIO_Reset:
 36230                           	opt stack 20
 36231                           
 36232                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36233                           
 36234                           ;incstack = 0
 36235  008060  EC1F  F046         	call	_HALResetPinMakeOutput	;wreg free
 36236                           
 36237                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36238  008064  0E00               	movlw	0
 36239  008066  ECE9  F044         	call	_HALResetPinOutputValue
 36240                           
 36241                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36242  00806A  0E01               	movlw	1
 36243  00806C  0100               	movlb	0	; () banked
 36244  00806E  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36245  008070  0E00               	movlw	0
 36246  008072  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36247  008074  0E00               	movlw	0
 36248  008076  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36249  008078  0E00               	movlw	0
 36250  00807A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36251  00807C  EC53  F042         	call	_SystemBlockingWaitMs	;wreg free
 36252                           
 36253                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36254  008080  EC21  F046         	call	_HALResetPinMakeInput	;wreg free
 36255                           
 36256                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36257  008084  0E0A               	movlw	10
 36258  008086  0100               	movlb	0	; () banked
 36259  008088  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36260  00808A  0E00               	movlw	0
 36261  00808C  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36262  00808E  0E00               	movlw	0
 36263  008090  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36264  008092  0E00               	movlw	0
 36265  008094  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36266  008096  EC53  F042         	call	_SystemBlockingWaitMs	;wreg free
 36267                           
 36268                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36269  00809A  0E01               	movlw	1
 36270  00809C  ECE9  F044         	call	_HALResetPinOutputValue
 36271                           
 36272                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36273  0080A0  EC1F  F046         	call	_HALResetPinMakeOutput	;wreg free
 36274  0080A4  0012               	return		;funcret
 36275  0080A6                     __end_of_RADIO_Reset:
 36276                           	opt stack 0
 36277                           tosu	equ	0xFFF
 36278                           tosh	equ	0xFFE
 36279                           tosl	equ	0xFFD
 36280                           pclath	equ	0xFFA
 36281                           tblptru	equ	0xFF8
 36282                           tblptrh	equ	0xFF7
 36283                           tblptrl	equ	0xFF6
 36284                           tablat	equ	0xFF5
 36285                           prodh	equ	0xFF4
 36286                           prodl	equ	0xFF3
 36287                           intcon	equ	0xFF2
 36288                           intcon2	equ	0xFF1
 36289                           intcon3	equ	0xFF0
 36290                           indf0	equ	0xFEF
 36291                           postinc0	equ	0xFEE
 36292                           plusw0	equ	0xFEB
 36293                           fsr0h	equ	0xFEA
 36294                           fsr0l	equ	0xFE9
 36295                           wreg	equ	0xFE8
 36296                           postinc1	equ	0xFE6
 36297                           postdec1	equ	0xFE5
 36298                           plusw1	equ	0xFE3
 36299                           fsr1h	equ	0xFE2
 36300                           fsr1l	equ	0xFE1
 36301                           indf2	equ	0xFDF
 36302                           postinc2	equ	0xFDE
 36303                           postdec2	equ	0xFDD
 36304                           plusw2	equ	0xFDB
 36305                           fsr2h	equ	0xFDA
 36306                           fsr2l	equ	0xFD9
 36307                           status	equ	0xFD8
 36308                           
 36309 ;; *************** function _SystemBlockingWaitMs *****************
 36310 ;; Defined at:
 36311 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36312 ;; Parameters:    Size  Location     Type
 36313 ;;  ms              4    0[BANK0 ] unsigned long 
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;		None
 36316 ;; Return value:  Size  Location     Type
 36317 ;;                  1    wreg      void 
 36318 ;; Registers used:
 36319 ;;		wreg, status,2, status,0
 36320 ;; Tracked objects:
 36321 ;;		On entry : 0/0
 36322 ;;		On exit  : 0/0
 36323 ;;		Unchanged: 0/0
 36324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36328 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36329 ;;Total ram usage:        5 bytes
 36330 ;; Hardware stack levels used:    1
 36331 ;; Hardware stack levels required when called:    7
 36332 ;; This function calls:
 36333 ;;		Nothing
 36334 ;; This function is called by:
 36335 ;;		_RADIO_WriteMode
 36336 ;;		_RADIO_Reset
 36337 ;;		_RADIO_ReadRandom
 36338 ;;		_RADIO_StopCW
 36339 ;; This function uses a non-reentrant model
 36340 ;;
 36341                           
 36342                           	psect	text169
 36343  0084A6                     __ptext169:
 36344                           	opt stack 0
 36345  0084A6                     _SystemBlockingWaitMs:
 36346                           	opt stack 20
 36347                           
 36348                           ;sw_timer.c: 147: while (ms > 0)
 36349                           
 36350                           ;incstack = 0
 36351  0084A6  D00F               	goto	l279
 36352  0084A8                     
 36353                           ;sw_timer.c: 148: {
 36354                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 36355  0084A8  0E06               	movlw	6
 36356  0084AA  0100               	movlb	0	; () banked
 36357  0084AC  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 36358  0084AE  0E30               	movlw	48
 36359  0084B0                     u21807:
 36360  0084B0  2EE8               	decfsz	wreg,f,c
 36361  0084B2  D7FE               	bra	u21807
 36362  0084B4  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 36363  0084B6  D7FC               	bra	u21807
 36364  0084B8  F000               	nop	
 36365                           
 36366                           ;sw_timer.c: 150: ms--;
 36367  0084BA  0100               	movlb	0	; () banked
 36368  0084BC  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 36369  0084BE  0E00               	movlw	0
 36370  0084C0  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 36371  0084C2  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 36372  0084C4  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 36373  0084C6                     l279:
 36374                           
 36375                           ; BSR set to: 0
 36376  0084C6  0100               	movlb	0	; () banked
 36377  0084C8  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 36378  0084CA  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 36379  0084CC  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 36380  0084CE  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 36381  0084D0  B4D8               	btfsc	status,2,c
 36382  0084D2  0012               	return	
 36383  0084D4  D7E9               	goto	l280
 36384  0084D6                     __end_of_SystemBlockingWaitMs:
 36385                           	opt stack 0
 36386                           tosu	equ	0xFFF
 36387                           tosh	equ	0xFFE
 36388                           tosl	equ	0xFFD
 36389                           pclath	equ	0xFFA
 36390                           tblptru	equ	0xFF8
 36391                           tblptrh	equ	0xFF7
 36392                           tblptrl	equ	0xFF6
 36393                           tablat	equ	0xFF5
 36394                           prodh	equ	0xFF4
 36395                           prodl	equ	0xFF3
 36396                           intcon	equ	0xFF2
 36397                           intcon2	equ	0xFF1
 36398                           intcon3	equ	0xFF0
 36399                           indf0	equ	0xFEF
 36400                           postinc0	equ	0xFEE
 36401                           plusw0	equ	0xFEB
 36402                           fsr0h	equ	0xFEA
 36403                           fsr0l	equ	0xFE9
 36404                           wreg	equ	0xFE8
 36405                           postinc1	equ	0xFE6
 36406                           postdec1	equ	0xFE5
 36407                           plusw1	equ	0xFE3
 36408                           fsr1h	equ	0xFE2
 36409                           fsr1l	equ	0xFE1
 36410                           indf2	equ	0xFDF
 36411                           postinc2	equ	0xFDE
 36412                           postdec2	equ	0xFDD
 36413                           plusw2	equ	0xFDB
 36414                           fsr2h	equ	0xFDA
 36415                           fsr2l	equ	0xFD9
 36416                           status	equ	0xFD8
 36417                           
 36418 ;; *************** function _HALResetPinOutputValue *****************
 36419 ;; Defined at:
 36420 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36421 ;; Parameters:    Size  Location     Type
 36422 ;;  value           1    wreg     unsigned char 
 36423 ;; Auto vars:     Size  Location     Type
 36424 ;;  value           1    0[BANK0 ] unsigned char 
 36425 ;; Return value:  Size  Location     Type
 36426 ;;                  1    wreg      void 
 36427 ;; Registers used:
 36428 ;;		wreg, status,2, status,0
 36429 ;; Tracked objects:
 36430 ;;		On entry : 0/0
 36431 ;;		On exit  : 0/0
 36432 ;;		Unchanged: 0/0
 36433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36438 ;;Total ram usage:        1 bytes
 36439 ;; Hardware stack levels used:    1
 36440 ;; Hardware stack levels required when called:    7
 36441 ;; This function calls:
 36442 ;;		Nothing
 36443 ;; This function is called by:
 36444 ;;		_RADIO_Reset
 36445 ;; This function uses a non-reentrant model
 36446 ;;
 36447                           
 36448                           	psect	text170
 36449  0089D2                     __ptext170:
 36450                           	opt stack 0
 36451  0089D2                     _HALResetPinOutputValue:
 36452                           	opt stack 20
 36453                           
 36454                           ; BSR set to: 0
 36455                           ;incstack = 0
 36456                           ;HALResetPinOutputValue@value stored from wreg
 36457  0089D2  0100               	movlb	0	; () banked
 36458  0089D4  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 36459                           
 36460                           ;radio_driver_hal.c: 57: if (value == 0)
 36461  0089D6  0100               	movlb	0	; () banked
 36462  0089D8  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 36463  0089DA  A4D8               	btfss	status,2,c
 36464  0089DC  D002               	goto	l189
 36465                           
 36466                           ; BSR set to: 0
 36467                           
 36468                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 36469  0089DE  948B               	bcf	3979,2,c	;volatile
 36470                           
 36471                           ; BSR set to: 0
 36472  0089E0  0012               	return	
 36473  0089E2                     l189:
 36474                           
 36475                           ; BSR set to: 0
 36476                           ;radio_driver_hal.c: 59: else if (value == 1)
 36477                           
 36478                           ; BSR set to: 0
 36479  0089E2  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 36480  0089E4  A4D8               	btfss	status,2,c
 36481  0089E6  0012               	return	
 36482                           
 36483                           ; BSR set to: 0
 36484                           
 36485                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 36486  0089E8  848B               	bsf	3979,2,c	;volatile
 36487                           
 36488                           ; BSR set to: 0
 36489                           
 36490                           ; BSR set to: 0
 36491  0089EA  0012               	return	
 36492  0089EC                     __end_of_HALResetPinOutputValue:
 36493                           	opt stack 0
 36494                           tosu	equ	0xFFF
 36495                           tosh	equ	0xFFE
 36496                           tosl	equ	0xFFD
 36497                           pclath	equ	0xFFA
 36498                           tblptru	equ	0xFF8
 36499                           tblptrh	equ	0xFF7
 36500                           tblptrl	equ	0xFF6
 36501                           tablat	equ	0xFF5
 36502                           prodh	equ	0xFF4
 36503                           prodl	equ	0xFF3
 36504                           intcon	equ	0xFF2
 36505                           intcon2	equ	0xFF1
 36506                           intcon3	equ	0xFF0
 36507                           indf0	equ	0xFEF
 36508                           postinc0	equ	0xFEE
 36509                           plusw0	equ	0xFEB
 36510                           fsr0h	equ	0xFEA
 36511                           fsr0l	equ	0xFE9
 36512                           wreg	equ	0xFE8
 36513                           postinc1	equ	0xFE6
 36514                           postdec1	equ	0xFE5
 36515                           plusw1	equ	0xFE3
 36516                           fsr1h	equ	0xFE2
 36517                           fsr1l	equ	0xFE1
 36518                           indf2	equ	0xFDF
 36519                           postinc2	equ	0xFDE
 36520                           postdec2	equ	0xFDD
 36521                           plusw2	equ	0xFDB
 36522                           fsr2h	equ	0xFDA
 36523                           fsr2l	equ	0xFD9
 36524                           status	equ	0xFD8
 36525                           
 36526 ;; *************** function _HALResetPinMakeOutput *****************
 36527 ;; Defined at:
 36528 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36529 ;; Parameters:    Size  Location     Type
 36530 ;;		None
 36531 ;; Auto vars:     Size  Location     Type
 36532 ;;		None
 36533 ;; Return value:  Size  Location     Type
 36534 ;;                  1    wreg      void 
 36535 ;; Registers used:
 36536 ;;		None
 36537 ;; Tracked objects:
 36538 ;;		On entry : 0/0
 36539 ;;		On exit  : 0/0
 36540 ;;		Unchanged: 0/0
 36541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36546 ;;Total ram usage:        0 bytes
 36547 ;; Hardware stack levels used:    1
 36548 ;; Hardware stack levels required when called:    7
 36549 ;; This function calls:
 36550 ;;		Nothing
 36551 ;; This function is called by:
 36552 ;;		_RADIO_Reset
 36553 ;; This function uses a non-reentrant model
 36554 ;;
 36555                           
 36556                           	psect	text171
 36557  008C3E                     __ptext171:
 36558                           	opt stack 0
 36559  008C3E                     _HALResetPinMakeOutput:
 36560                           	opt stack 20
 36561                           
 36562                           ; BSR set to: 0
 36563                           ;incstack = 0
 36564                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 36565  008C3E  9494               	bcf	3988,2,c	;volatile
 36566  008C40  0012               	return	
 36567  008C42                     __end_of_HALResetPinMakeOutput:
 36568                           	opt stack 0
 36569                           tosu	equ	0xFFF
 36570                           tosh	equ	0xFFE
 36571                           tosl	equ	0xFFD
 36572                           pclath	equ	0xFFA
 36573                           tblptru	equ	0xFF8
 36574                           tblptrh	equ	0xFF7
 36575                           tblptrl	equ	0xFF6
 36576                           tablat	equ	0xFF5
 36577                           prodh	equ	0xFF4
 36578                           prodl	equ	0xFF3
 36579                           intcon	equ	0xFF2
 36580                           intcon2	equ	0xFF1
 36581                           intcon3	equ	0xFF0
 36582                           indf0	equ	0xFEF
 36583                           postinc0	equ	0xFEE
 36584                           plusw0	equ	0xFEB
 36585                           fsr0h	equ	0xFEA
 36586                           fsr0l	equ	0xFE9
 36587                           wreg	equ	0xFE8
 36588                           postinc1	equ	0xFE6
 36589                           postdec1	equ	0xFE5
 36590                           plusw1	equ	0xFE3
 36591                           fsr1h	equ	0xFE2
 36592                           fsr1l	equ	0xFE1
 36593                           indf2	equ	0xFDF
 36594                           postinc2	equ	0xFDE
 36595                           postdec2	equ	0xFDD
 36596                           plusw2	equ	0xFDB
 36597                           fsr2h	equ	0xFDA
 36598                           fsr2l	equ	0xFD9
 36599                           status	equ	0xFD8
 36600                           
 36601 ;; *************** function _HALResetPinMakeInput *****************
 36602 ;; Defined at:
 36603 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36604 ;; Parameters:    Size  Location     Type
 36605 ;;		None
 36606 ;; Auto vars:     Size  Location     Type
 36607 ;;		None
 36608 ;; Return value:  Size  Location     Type
 36609 ;;                  1    wreg      void 
 36610 ;; Registers used:
 36611 ;;		None
 36612 ;; Tracked objects:
 36613 ;;		On entry : 0/0
 36614 ;;		On exit  : 0/0
 36615 ;;		Unchanged: 0/0
 36616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36621 ;;Total ram usage:        0 bytes
 36622 ;; Hardware stack levels used:    1
 36623 ;; Hardware stack levels required when called:    7
 36624 ;; This function calls:
 36625 ;;		Nothing
 36626 ;; This function is called by:
 36627 ;;		_RADIO_Reset
 36628 ;; This function uses a non-reentrant model
 36629 ;;
 36630                           
 36631                           	psect	text172
 36632  008C42                     __ptext172:
 36633                           	opt stack 0
 36634  008C42                     _HALResetPinMakeInput:
 36635                           	opt stack 20
 36636                           
 36637                           ;incstack = 0
 36638                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 36639  008C42  8494               	bsf	3988,2,c	;volatile
 36640  008C44  0012               	return	
 36641  008C46                     __end_of_HALResetPinMakeInput:
 36642                           	opt stack 0
 36643                           tosu	equ	0xFFF
 36644                           tosh	equ	0xFFE
 36645                           tosl	equ	0xFFD
 36646                           pclath	equ	0xFFA
 36647                           tblptru	equ	0xFF8
 36648                           tblptrh	equ	0xFF7
 36649                           tblptrl	equ	0xFF6
 36650                           tablat	equ	0xFF5
 36651                           prodh	equ	0xFF4
 36652                           prodl	equ	0xFF3
 36653                           intcon	equ	0xFF2
 36654                           intcon2	equ	0xFF1
 36655                           intcon3	equ	0xFF0
 36656                           indf0	equ	0xFEF
 36657                           postinc0	equ	0xFEE
 36658                           plusw0	equ	0xFEB
 36659                           fsr0h	equ	0xFEA
 36660                           fsr0l	equ	0xFE9
 36661                           wreg	equ	0xFE8
 36662                           postinc1	equ	0xFE6
 36663                           postdec1	equ	0xFE5
 36664                           plusw1	equ	0xFE3
 36665                           fsr1h	equ	0xFE2
 36666                           fsr1l	equ	0xFE1
 36667                           indf2	equ	0xFDF
 36668                           postinc2	equ	0xFDE
 36669                           postdec2	equ	0xFDD
 36670                           plusw2	equ	0xFDB
 36671                           fsr2h	equ	0xFDA
 36672                           fsr2l	equ	0xFD9
 36673                           status	equ	0xFD8
 36674                           
 36675 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 36676 ;; Defined at:
 36677 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36678 ;; Parameters:    Size  Location     Type
 36679 ;;  period          2   70[BANK0 ] unsigned int 
 36680 ;; Auto vars:     Size  Location     Type
 36681 ;;  iCtr            1   80[BANK0 ] unsigned char 
 36682 ;; Return value:  Size  Location     Type
 36683 ;;                  1    wreg      void 
 36684 ;; Registers used:
 36685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36686 ;; Tracked objects:
 36687 ;;		On entry : 0/0
 36688 ;;		On exit  : 0/0
 36689 ;;		Unchanged: 0/0
 36690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36692 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36693 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36694 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36695 ;;Total ram usage:       11 bytes
 36696 ;; Hardware stack levels used:    1
 36697 ;; Hardware stack levels required when called:   11
 36698 ;; This function calls:
 36699 ;;		_SwTimerSetTimeout
 36700 ;;		_SwTimerStart
 36701 ;;		_SwTimerStop
 36702 ;;		___lldiv
 36703 ;;		___lmul
 36704 ;; This function is called by:
 36705 ;;		_LORAWAN_Reset
 36706 ;; This function uses a non-reentrant model
 36707 ;;
 36708                           
 36709                           	psect	text173
 36710  005246                     __ptext173:
 36711                           	opt stack 0
 36712  005246                     _LORAWAN_LinkCheckConfigure:
 36713                           	opt stack 17
 36714                           
 36715                           ;lorawan.c: 757: uint8_t iCtr;
 36716                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 36717                           
 36718                           ;incstack = 0
 36719  005246  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 36720  00524A  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 36721  00524E  0100               	movlb	0	; () banked
 36722  005250  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 36723  005252  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 36724  005254  0EE8               	movlw	232
 36725  005256  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 36726  005258  0E03               	movlw	3
 36727  00525A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 36728  00525C  0E00               	movlw	0
 36729  00525E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 36730  005260  0E00               	movlw	0
 36731  005262  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 36732  005264  EC4D  F03E         	call	___lmul	;wreg free
 36733  005268  C09A  F2CC         	movff	?___lmul,_loRa+204
 36734  00526C  C09B  F2CD         	movff	?___lmul+1,_loRa+205
 36735  005270  C09C  F2CE         	movff	?___lmul+2,_loRa+206
 36736  005274  C09D  F2CF         	movff	?___lmul+3,_loRa+207
 36737                           
 36738                           ;lorawan.c: 761: if (period == 0)
 36739  005278  0100               	movlb	0	; () banked
 36740  00527A  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 36741  00527C  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 36742  00527E  A4D8               	btfss	status,2,c
 36743  005280  D02B               	goto	l2059
 36744                           
 36745                           ; BSR set to: 0
 36746                           ;lorawan.c: 762: {
 36747                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 36748  005282  0102               	movlb	2	; () banked
 36749  005284  51E7               	movf	(_loRa+231)& (0+255),w,b
 36750  005286  EC96  F043         	call	_SwTimerStop
 36751                           
 36752                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 36753  00528A  0102               	movlb	2	; () banked
 36754  00528C  9503               	bcf	(_loRa+3)& (0+255),2,b
 36755                           
 36756                           ; BSR set to: 2
 36757                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 36758  00528E  0E00               	movlw	0
 36759  005290  0100               	movlb	0	; () banked
 36760  005292  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 36761  005294  D01A               	goto	l2060
 36762  005296                     
 36763                           ; BSR set to: 0
 36764                           ;lorawan.c: 766: {
 36765                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 36766                           
 36767                           ; BSR set to: 0
 36768  005296  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36769  005298  0D02               	mullw	2
 36770  00529A  0EA8               	movlw	low (_loRa+168)
 36771  00529C  24F3               	addwf	prodl,w,c
 36772  00529E  6ED9               	movwf	fsr2l,c
 36773  0052A0  0E02               	movlw	high (_loRa+168)
 36774  0052A2  20F4               	addwfc	prodh,w,c
 36775  0052A4  6EDA               	movwf	fsr2h,c
 36776  0052A6  0E02               	movlw	2
 36777  0052A8  18DE               	xorwf	postinc2,w,c
 36778  0052AA  A4D8               	btfss	status,2,c
 36779  0052AC  D00C               	goto	l2062
 36780                           
 36781                           ; BSR set to: 0
 36782                           ;lorawan.c: 768: {
 36783                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 36784  0052AE  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36785  0052B0  0D02               	mullw	2
 36786  0052B2  0EA8               	movlw	low (_loRa+168)
 36787  0052B4  24F3               	addwf	prodl,w,c
 36788  0052B6  6ED9               	movwf	fsr2l,c
 36789  0052B8  0E02               	movlw	high (_loRa+168)
 36790  0052BA  20F4               	addwfc	prodh,w,c
 36791  0052BC  6EDA               	movwf	fsr2h,c
 36792  0052BE  0EFF               	movlw	255
 36793  0052C0  6EDF               	movwf	indf2,c
 36794                           
 36795                           ; BSR set to: 0
 36796                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 36797  0052C2  0102               	movlb	2	; () banked
 36798  0052C4  07A7               	decf	(_loRa+167)& (0+255),f,b
 36799  0052C6                     l2062:
 36800                           
 36801                           ; BSR set to: 2
 36802  0052C6  0100               	movlb	0	; () banked
 36803  0052C8  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 36804  0052CA                     l2060:
 36805                           
 36806                           ; BSR set to: 0
 36807                           
 36808                           ; BSR set to: 0
 36809  0052CA  0102               	movlb	2	; () banked
 36810  0052CC  51A7               	movf	(_loRa+167)& (0+255),w,b
 36811  0052CE  0100               	movlb	0	; () banked
 36812  0052D0  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 36813  0052D2  B0D8               	btfsc	status,0,c
 36814  0052D4  0012               	return	
 36815  0052D6  D7DF               	goto	l2061
 36816  0052D8                     l2059:
 36817                           
 36818                           ; BSR set to: 0
 36819                           ;lorawan.c: 776: else
 36820                           ;lorawan.c: 777: {
 36821                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 36822  0052D8  0102               	movlb	2	; () banked
 36823  0052DA  8503               	bsf	(_loRa+3)& (0+255),2,b
 36824                           
 36825                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 36826  0052DC  A902               	btfss	(_loRa+2)& (0+255),4,b
 36827  0052DE  0012               	return	
 36828                           
 36829                           ; BSR set to: 2
 36830                           ;lorawan.c: 782: {
 36831                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 36832  0052E0  51CF               	movf	(_loRa+207)& (0+255),w,b
 36833  0052E2  E107               	bnz	u19370
 36834  0052E4  29CC               	incf	(_loRa+204)& (0+255),w,b
 36835  0052E6  0EFF               	movlw	255
 36836  0052E8  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 36837  0052EA  0E0F               	movlw	15
 36838  0052EC  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 36839  0052EE  A0D8               	btfss	status,0,c
 36840  0052F0  D01D               	goto	l2067
 36841  0052F2                     u19370:
 36842                           
 36843                           ; BSR set to: 2
 36844  0052F2  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 36845  0052F6  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 36846  0052FA  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 36847  0052FE  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 36848  005302  0E7D               	movlw	125
 36849  005304  0100               	movlb	0	; () banked
 36850  005306  6F64               	movwf	___lldiv@divisor& (0+255),b
 36851  005308  0E00               	movlw	0
 36852  00530A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36853  00530C  0E00               	movlw	0
 36854  00530E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36855  005310  0E00               	movlw	0
 36856  005312  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36857  005314  EC8F  F039         	call	___lldiv	;wreg free
 36858  005318  0E0C               	movlw	12
 36859  00531A                     u19385:
 36860  00531A  90D8               	bcf	status,0,c
 36861  00531C  0100               	movlb	0	; () banked
 36862  00531E  3760               	rlcf	?___lldiv& (0+255),f,b
 36863  005320  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 36864  005322  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 36865  005324  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 36866  005326  2EE8               	decfsz	wreg,f,c
 36867  005328  D7F8               	goto	u19385
 36868  00532A  D023               	goto	L28
 36869  00532C                     l2067:
 36870                           
 36871                           ; BSR set to: 0
 36872  00532C  C2CC  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 36873  005330  C2CD  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 36874  005334  C2CE  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 36875  005338  C2CF  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 36876  00533C  0E0C               	movlw	12
 36877  00533E                     u19395:
 36878  00533E  90D8               	bcf	status,0,c
 36879  005340  0100               	movlb	0	; () banked
 36880  005342  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 36881  005344  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 36882  005346  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 36883  005348  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 36884  00534A  2EE8               	decfsz	wreg,f,c
 36885  00534C  D7F8               	goto	u19395
 36886  00534E  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 36887  005352  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 36888  005356  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 36889  00535A  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 36890  00535E  0E7D               	movlw	125
 36891  005360  6F64               	movwf	___lldiv@divisor& (0+255),b
 36892  005362  0E00               	movlw	0
 36893  005364  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36894  005366  0E00               	movlw	0
 36895  005368  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36896  00536A  0E00               	movlw	0
 36897  00536C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36898  00536E  EC8F  F039         	call	___lldiv	;wreg free
 36899  005372                     L28:
 36900  005372  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3459
 36901  005376  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3459+1
 36902  00537A  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3459+2
 36903  00537E  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3459+3
 36904  005382  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$3459,SwTimerSetTimeout@timeout
 36905  005386  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$3459+1,SwTimerSetTimeout@timeout+1
 36906  00538A  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$3459+2,SwTimerSetTimeout@timeout+2
 36907  00538E  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$3459+3,SwTimerSetTimeout@timeout+3
 36908  005392  0102               	movlb	2	; () banked
 36909  005394  51E7               	movf	(_loRa+231)& (0+255),w,b
 36910  005396  ECDB  F040         	call	_SwTimerSetTimeout
 36911                           
 36912                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 36913  00539A  0102               	movlb	2	; () banked
 36914  00539C  51E7               	movf	(_loRa+231)& (0+255),w,b
 36915  00539E  ECD1  F036         	call	_SwTimerStart
 36916  0053A2  0012               	return	
 36917  0053A4                     __end_of_LORAWAN_LinkCheckConfigure:
 36918                           	opt stack 0
 36919                           tosu	equ	0xFFF
 36920                           tosh	equ	0xFFE
 36921                           tosl	equ	0xFFD
 36922                           pclath	equ	0xFFA
 36923                           tblptru	equ	0xFF8
 36924                           tblptrh	equ	0xFF7
 36925                           tblptrl	equ	0xFF6
 36926                           tablat	equ	0xFF5
 36927                           prodh	equ	0xFF4
 36928                           prodl	equ	0xFF3
 36929                           intcon	equ	0xFF2
 36930                           intcon2	equ	0xFF1
 36931                           intcon3	equ	0xFF0
 36932                           indf0	equ	0xFEF
 36933                           postinc0	equ	0xFEE
 36934                           plusw0	equ	0xFEB
 36935                           fsr0h	equ	0xFEA
 36936                           fsr0l	equ	0xFE9
 36937                           wreg	equ	0xFE8
 36938                           postinc1	equ	0xFE6
 36939                           postdec1	equ	0xFE5
 36940                           plusw1	equ	0xFE3
 36941                           fsr1h	equ	0xFE2
 36942                           fsr1l	equ	0xFE1
 36943                           indf2	equ	0xFDF
 36944                           postinc2	equ	0xFDE
 36945                           postdec2	equ	0xFDD
 36946                           plusw2	equ	0xFDB
 36947                           fsr2h	equ	0xFDA
 36948                           fsr2l	equ	0xFD9
 36949                           status	equ	0xFD8
 36950                           
 36951 ;; *************** function ___lmul *****************
 36952 ;; Defined at:
 36953 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 36954 ;; Parameters:    Size  Location     Type
 36955 ;;  multiplier      4   58[BANK0 ] unsigned long 
 36956 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 36957 ;; Auto vars:     Size  Location     Type
 36958 ;;  product         4   66[BANK0 ] unsigned long 
 36959 ;; Return value:  Size  Location     Type
 36960 ;;                  4   58[BANK0 ] unsigned long 
 36961 ;; Registers used:
 36962 ;;		wreg, status,2, status,0
 36963 ;; Tracked objects:
 36964 ;;		On entry : 0/0
 36965 ;;		On exit  : 0/0
 36966 ;;		Unchanged: 0/0
 36967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36968 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36972 ;;Total ram usage:       12 bytes
 36973 ;; Hardware stack levels used:    1
 36974 ;; Hardware stack levels required when called:    7
 36975 ;; This function calls:
 36976 ;;		Nothing
 36977 ;; This function is called by:
 36978 ;;		_RADIO_WriteConfiguration
 36979 ;;		_RADIO_TxDone
 36980 ;;		_RADIO_FSKPacketSent
 36981 ;;		_LORAWAN_TxDone
 36982 ;;		_ExecuteNewChannel
 36983 ;;		_ExecuteRxParamSetupReq
 36984 ;;		_UpdateCfList
 36985 ;;		_LORAWAN_LinkCheckConfigure
 36986 ;;		_rand
 36987 ;;		_LORAWAN_Pause
 36988 ;; This function uses a non-reentrant model
 36989 ;;
 36990                           
 36991                           	psect	text174
 36992  007C9A                     __ptext174:
 36993                           	opt stack 0
 36994  007C9A                     ___lmul:
 36995                           	opt stack 18
 36996                           
 36997                           ;incstack = 0
 36998  007C9A  0E00               	movlw	0
 36999  007C9C  0100               	movlb	0	; () banked
 37000  007C9E  6FA2               	movwf	___lmul@product& (0+255),b
 37001  007CA0  0E00               	movlw	0
 37002  007CA2  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 37003  007CA4  0E00               	movlw	0
 37004  007CA6  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 37005  007CA8  0E00               	movlw	0
 37006  007CAA  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 37007  007CAC                     
 37008                           ; BSR set to: 0
 37009                           
 37010                           ; BSR set to: 0
 37011  007CAC  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 37012  007CAE  D008               	goto	l2508
 37013                           
 37014                           ; BSR set to: 0
 37015  007CB0  519E               	movf	___lmul@multiplicand& (0+255),w,b
 37016  007CB2  27A2               	addwf	___lmul@product& (0+255),f,b
 37017  007CB4  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37018  007CB6  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 37019  007CB8  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37020  007CBA  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 37021  007CBC  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37022  007CBE  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 37023  007CC0                     l2508:
 37024                           
 37025                           ; BSR set to: 0
 37026                           
 37027                           ; BSR set to: 0
 37028  007CC0  90D8               	bcf	status,0,c
 37029  007CC2  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 37030  007CC4  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37031  007CC6  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37032  007CC8  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37033                           
 37034                           ; BSR set to: 0
 37035  007CCA  90D8               	bcf	status,0,c
 37036  007CCC  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37037  007CCE  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37038  007CD0  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37039  007CD2  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 37040  007CD4  519A               	movf	___lmul@multiplier& (0+255),w,b
 37041  007CD6  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37042  007CD8  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37043  007CDA  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37044  007CDC  A4D8               	btfss	status,2,c
 37045  007CDE  D7E6               	goto	l2507
 37046                           
 37047                           ; BSR set to: 0
 37048  007CE0  C0A2  F09A         	movff	___lmul@product,?___lmul
 37049  007CE4  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 37050  007CE8  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 37051  007CEC  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 37052                           
 37053                           ; BSR set to: 0
 37054  007CF0  0012               	return		;funcret
 37055  007CF2                     __end_of___lmul:
 37056                           	opt stack 0
 37057                           tosu	equ	0xFFF
 37058                           tosh	equ	0xFFE
 37059                           tosl	equ	0xFFD
 37060                           pclath	equ	0xFFA
 37061                           tblptru	equ	0xFF8
 37062                           tblptrh	equ	0xFF7
 37063                           tblptrl	equ	0xFF6
 37064                           tablat	equ	0xFF5
 37065                           prodh	equ	0xFF4
 37066                           prodl	equ	0xFF3
 37067                           intcon	equ	0xFF2
 37068                           intcon2	equ	0xFF1
 37069                           intcon3	equ	0xFF0
 37070                           indf0	equ	0xFEF
 37071                           postinc0	equ	0xFEE
 37072                           plusw0	equ	0xFEB
 37073                           fsr0h	equ	0xFEA
 37074                           fsr0l	equ	0xFE9
 37075                           wreg	equ	0xFE8
 37076                           postinc1	equ	0xFE6
 37077                           postdec1	equ	0xFE5
 37078                           plusw1	equ	0xFE3
 37079                           fsr1h	equ	0xFE2
 37080                           fsr1l	equ	0xFE1
 37081                           indf2	equ	0xFDF
 37082                           postinc2	equ	0xFDE
 37083                           postdec2	equ	0xFDD
 37084                           plusw2	equ	0xFDB
 37085                           fsr2h	equ	0xFDA
 37086                           fsr2l	equ	0xFD9
 37087                           status	equ	0xFD8
 37088                           
 37089 ;; *************** function ___lldiv *****************
 37090 ;; Defined at:
 37091 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 37092 ;; Parameters:    Size  Location     Type
 37093 ;;  dividend        4    0[BANK0 ] unsigned long 
 37094 ;;  divisor         4    4[BANK0 ] unsigned long 
 37095 ;; Auto vars:     Size  Location     Type
 37096 ;;  quotient        4    8[BANK0 ] unsigned long 
 37097 ;;  counter         1   12[BANK0 ] unsigned char 
 37098 ;; Return value:  Size  Location     Type
 37099 ;;                  4    0[BANK0 ] unsigned long 
 37100 ;; Registers used:
 37101 ;;		wreg, status,2, status,0
 37102 ;; Tracked objects:
 37103 ;;		On entry : 0/0
 37104 ;;		On exit  : 0/0
 37105 ;;		Unchanged: 0/0
 37106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37107 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37108 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37110 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37111 ;;Total ram usage:       13 bytes
 37112 ;; Hardware stack levels used:    1
 37113 ;; Hardware stack levels required when called:    7
 37114 ;; This function calls:
 37115 ;;		Nothing
 37116 ;; This function is called by:
 37117 ;;		_RADIO_WriteFrequency
 37118 ;;		_RADIO_WriteFSKFrequencyDeviation
 37119 ;;		_RADIO_WriteFSKBitRate
 37120 ;;		_RADIO_Transmit
 37121 ;;		_RADIO_ReceiveStart
 37122 ;;		_LORAWAN_TxDone
 37123 ;;		_LORAWAN_RxTimeout
 37124 ;;		_StartReTxTimer
 37125 ;;		_DutyCycleCallback
 37126 ;;		_LORAWAN_LinkCheckConfigure
 37127 ;;		_LORAWAN_LinkCheckCallback
 37128 ;;		_UpdateRetransmissionAckTimeoutState
 37129 ;;		_UpdateJoinSuccessState
 37130 ;; This function uses a non-reentrant model
 37131 ;;
 37132                           
 37133                           	psect	text175
 37134  00731E                     __ptext175:
 37135                           	opt stack 0
 37136  00731E                     ___lldiv:
 37137                           	opt stack 21
 37138                           
 37139                           ; BSR set to: 0
 37140                           ;incstack = 0
 37141  00731E  0E00               	movlw	0
 37142  007320  0100               	movlb	0	; () banked
 37143  007322  6F68               	movwf	___lldiv@quotient& (0+255),b
 37144  007324  0E00               	movlw	0
 37145  007326  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37146  007328  0E00               	movlw	0
 37147  00732A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37148  00732C  0E00               	movlw	0
 37149  00732E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37150                           
 37151                           ; BSR set to: 0
 37152  007330  5164               	movf	___lldiv@divisor& (0+255),w,b
 37153  007332  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37154  007334  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37155  007336  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37156  007338  B4D8               	btfsc	status,2,c
 37157  00733A  D02A               	goto	l2851
 37158                           
 37159                           ; BSR set to: 0
 37160  00733C  0E01               	movlw	1
 37161  00733E  6F6C               	movwf	___lldiv@counter& (0+255),b
 37162  007340  D006               	goto	l2846
 37163  007342                     
 37164                           ; BSR set to: 0
 37165                           
 37166                           ; BSR set to: 0
 37167  007342  90D8               	bcf	status,0,c
 37168  007344  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37169  007346  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37170  007348  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37171  00734A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37172  00734C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37173  00734E                     l2846:
 37174                           
 37175                           ; BSR set to: 0
 37176                           
 37177                           ; BSR set to: 0
 37178  00734E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37179  007350  D7F8               	goto	l2847
 37180  007352                     u14360:
 37181                           
 37182                           ; BSR set to: 0
 37183                           
 37184                           ; BSR set to: 0
 37185                           
 37186                           ; BSR set to: 0
 37187  007352  90D8               	bcf	status,0,c
 37188  007354  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37189  007356  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37190  007358  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37191  00735A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37192                           
 37193                           ; BSR set to: 0
 37194  00735C  5164               	movf	___lldiv@divisor& (0+255),w,b
 37195  00735E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37196  007360  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37197  007362  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37198  007364  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37199  007366  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37200  007368  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37201  00736A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37202  00736C  A0D8               	btfss	status,0,c
 37203  00736E  D009               	goto	l2850
 37204                           
 37205                           ; BSR set to: 0
 37206  007370  5164               	movf	___lldiv@divisor& (0+255),w,b
 37207  007372  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37208  007374  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37209  007376  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37210  007378  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37211  00737A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37212  00737C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37213  00737E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37214                           
 37215                           ; BSR set to: 0
 37216  007380  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37217  007382                     l2850:
 37218                           
 37219                           ; BSR set to: 0
 37220                           
 37221                           ; BSR set to: 0
 37222  007382  90D8               	bcf	status,0,c
 37223  007384  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37224  007386  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37225  007388  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37226  00738A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37227                           
 37228                           ; BSR set to: 0
 37229  00738C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37230  00738E  D7E1               	goto	u14360
 37231  007390                     l2851:
 37232                           
 37233                           ; BSR set to: 0
 37234                           
 37235                           ; BSR set to: 0
 37236  007390  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37237  007394  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37238  007398  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37239  00739C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37240                           
 37241                           ; BSR set to: 0
 37242  0073A0  0012               	return		;funcret
 37243  0073A2                     __end_of___lldiv:
 37244                           	opt stack 0
 37245                           tosu	equ	0xFFF
 37246                           tosh	equ	0xFFE
 37247                           tosl	equ	0xFFD
 37248                           pclath	equ	0xFFA
 37249                           tblptru	equ	0xFF8
 37250                           tblptrh	equ	0xFF7
 37251                           tblptrl	equ	0xFF6
 37252                           tablat	equ	0xFF5
 37253                           prodh	equ	0xFF4
 37254                           prodl	equ	0xFF3
 37255                           intcon	equ	0xFF2
 37256                           intcon2	equ	0xFF1
 37257                           intcon3	equ	0xFF0
 37258                           indf0	equ	0xFEF
 37259                           postinc0	equ	0xFEE
 37260                           plusw0	equ	0xFEB
 37261                           fsr0h	equ	0xFEA
 37262                           fsr0l	equ	0xFE9
 37263                           wreg	equ	0xFE8
 37264                           postinc1	equ	0xFE6
 37265                           postdec1	equ	0xFE5
 37266                           plusw1	equ	0xFE3
 37267                           fsr1h	equ	0xFE2
 37268                           fsr1l	equ	0xFE1
 37269                           indf2	equ	0xFDF
 37270                           postinc2	equ	0xFDE
 37271                           postdec2	equ	0xFDD
 37272                           plusw2	equ	0xFDB
 37273                           fsr2h	equ	0xFDA
 37274                           fsr2l	equ	0xFD9
 37275                           status	equ	0xFD8
 37276                           
 37277 ;; *************** function _SwTimerStop *****************
 37278 ;; Defined at:
 37279 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37280 ;; Parameters:    Size  Location     Type
 37281 ;;  timerId         1    wreg     unsigned char 
 37282 ;; Auto vars:     Size  Location     Type
 37283 ;;  timerId         1    0[BANK0 ] unsigned char 
 37284 ;; Return value:  Size  Location     Type
 37285 ;;                  1    wreg      void 
 37286 ;; Registers used:
 37287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37288 ;; Tracked objects:
 37289 ;;		On entry : 0/0
 37290 ;;		On exit  : 0/0
 37291 ;;		Unchanged: 0/0
 37292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37297 ;;Total ram usage:        1 bytes
 37298 ;; Hardware stack levels used:    1
 37299 ;; Hardware stack levels required when called:    7
 37300 ;; This function calls:
 37301 ;;		Nothing
 37302 ;; This function is called by:
 37303 ;;		_RADIO_Init
 37304 ;;		_RADIO_Transmit
 37305 ;;		_RADIO_RxDone
 37306 ;;		_RADIO_FSKPayloadReady
 37307 ;;		_RADIO_RxTimeout
 37308 ;;		_RADIO_TxDone
 37309 ;;		_RADIO_FSKPacketSent
 37310 ;;		_RADIO_RxFSKTimeout
 37311 ;;		_LORAWAN_TxDone
 37312 ;;		_StopAllSoftwareTimers
 37313 ;;		_LORAWAN_LinkCheckConfigure
 37314 ;;		_LORAWAN_RxDone
 37315 ;; This function uses a non-reentrant model
 37316 ;;
 37317                           
 37318                           	psect	text176
 37319  00872C                     __ptext176:
 37320                           	opt stack 0
 37321  00872C                     _SwTimerStop:
 37322                           	opt stack 21
 37323                           
 37324                           ; BSR set to: 0
 37325                           ;incstack = 0
 37326                           ;SwTimerStop@timerId stored from wreg
 37327  00872C  0100               	movlb	0	; () banked
 37328  00872E  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 37329                           
 37330                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37331  008730  9EF2               	bcf	intcon,7,c	;volatile
 37332                           
 37333                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37334  008732  0100               	movlb	0	; () banked
 37335  008734  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 37336  008736  0D08               	mullw	8
 37337  008738  0E04               	movlw	4
 37338  00873A  26F3               	addwf	prodl,f,c
 37339  00873C  0E00               	movlw	0
 37340  00873E  22F4               	addwfc	prodh,f,c
 37341  008740  0E00               	movlw	low _swTimers
 37342  008742  24F3               	addwf	prodl,w,c
 37343  008744  6ED9               	movwf	fsr2l,c
 37344  008746  0E03               	movlw	high _swTimers
 37345  008748  20F4               	addwfc	prodh,w,c
 37346  00874A  6EDA               	movwf	fsr2h,c
 37347  00874C  0E00               	movlw	0
 37348  00874E  6EDF               	movwf	indf2,c
 37349                           
 37350                           ; BSR set to: 0
 37351                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37352  008750  8EF2               	bsf	intcon,7,c	;volatile
 37353                           
 37354                           ; BSR set to: 0
 37355  008752  0012               	return		;funcret
 37356  008754                     __end_of_SwTimerStop:
 37357                           	opt stack 0
 37358                           tosu	equ	0xFFF
 37359                           tosh	equ	0xFFE
 37360                           tosl	equ	0xFFD
 37361                           pclath	equ	0xFFA
 37362                           tblptru	equ	0xFF8
 37363                           tblptrh	equ	0xFF7
 37364                           tblptrl	equ	0xFF6
 37365                           tablat	equ	0xFF5
 37366                           prodh	equ	0xFF4
 37367                           prodl	equ	0xFF3
 37368                           intcon	equ	0xFF2
 37369                           intcon2	equ	0xFF1
 37370                           intcon3	equ	0xFF0
 37371                           indf0	equ	0xFEF
 37372                           postinc0	equ	0xFEE
 37373                           plusw0	equ	0xFEB
 37374                           fsr0h	equ	0xFEA
 37375                           fsr0l	equ	0xFE9
 37376                           wreg	equ	0xFE8
 37377                           postinc1	equ	0xFE6
 37378                           postdec1	equ	0xFE5
 37379                           plusw1	equ	0xFE3
 37380                           fsr1h	equ	0xFE2
 37381                           fsr1l	equ	0xFE1
 37382                           indf2	equ	0xFDF
 37383                           postinc2	equ	0xFDE
 37384                           postdec2	equ	0xFDD
 37385                           plusw2	equ	0xFDB
 37386                           fsr2h	equ	0xFDA
 37387                           fsr2l	equ	0xFD9
 37388                           status	equ	0xFD8
 37389                           
 37390 ;; *************** function _SwTimerStart *****************
 37391 ;; Defined at:
 37392 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37393 ;; Parameters:    Size  Location     Type
 37394 ;;  timerId         1    wreg     unsigned char 
 37395 ;; Auto vars:     Size  Location     Type
 37396 ;;  timerId         1   57[BANK0 ] unsigned char 
 37397 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 37398 ;; Return value:  Size  Location     Type
 37399 ;;                  1    wreg      void 
 37400 ;; Registers used:
 37401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37402 ;; Tracked objects:
 37403 ;;		On entry : 0/0
 37404 ;;		On exit  : 0/0
 37405 ;;		Unchanged: 0/0
 37406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37408 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37409 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37410 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37411 ;;Total ram usage:        9 bytes
 37412 ;; Hardware stack levels used:    1
 37413 ;; Hardware stack levels required when called:   10
 37414 ;; This function calls:
 37415 ;;		_SwTimersInterrupt
 37416 ;;		_TMR_OverrideRemaining
 37417 ;; This function is called by:
 37418 ;;		_RADIO_Transmit
 37419 ;;		_RADIO_ReceiveStart
 37420 ;;		_LORAWAN_TxDone
 37421 ;;		_LORAWAN_RxTimeout
 37422 ;;		_StartReTxTimer
 37423 ;;		_DutyCycleCallback
 37424 ;;		_LORAWAN_Join
 37425 ;;		_LORAWAN_LinkCheckConfigure
 37426 ;;		_LORAWAN_LinkCheckCallback
 37427 ;;		_UpdateRetransmissionAckTimeoutState
 37428 ;;		_UpdateJoinSuccessState
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text177
 37433  006DA2                     __ptext177:
 37434                           	opt stack 0
 37435  006DA2                     _SwTimerStart:
 37436                           	opt stack 18
 37437                           
 37438                           ; BSR set to: 0
 37439                           ;incstack = 0
 37440                           ;SwTimerStart@timerId stored from wreg
 37441  006DA2  0100               	movlb	0	; () banked
 37442  006DA4  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 37443                           
 37444                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 37445                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37446  006DA6  9EF2               	bcf	intcon,7,c	;volatile
 37447                           
 37448                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37449  006DA8  EC0C  F02E         	call	_SwTimersInterrupt	;wreg free
 37450  006DAC  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37451  006DB0  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37452  006DB4  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37453  006DB8  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37454                           
 37455                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37456  006DBC  0100               	movlb	0	; () banked
 37457  006DBE  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37458  006DC0  0D08               	mullw	8
 37459  006DC2  0E00               	movlw	low _swTimers
 37460  006DC4  24F3               	addwf	prodl,w,c
 37461  006DC6  6ED9               	movwf	fsr2l,c
 37462  006DC8  0E03               	movlw	high _swTimers
 37463  006DCA  20F4               	addwfc	prodh,w,c
 37464  006DCC  6EDA               	movwf	fsr2h,c
 37465  006DCE  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37466  006DD0  5CDE               	subwf	postinc2,w,c
 37467  006DD2  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37468  006DD4  58DE               	subwfb	postinc2,w,c
 37469  006DD6  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37470  006DD8  58DE               	subwfb	postinc2,w,c
 37471  006DDA  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37472  006DDC  58DE               	subwfb	postinc2,w,c
 37473  006DDE  B0D8               	btfsc	status,0,c
 37474  006DE0  D010               	goto	l305
 37475                           
 37476                           ; BSR set to: 0
 37477                           ;sw_timer.c: 225: {
 37478                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37479  006DE2  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37480  006DE4  0D08               	mullw	8
 37481  006DE6  0E00               	movlw	low _swTimers
 37482  006DE8  24F3               	addwf	prodl,w,c
 37483  006DEA  6ED9               	movwf	fsr2l,c
 37484  006DEC  0E03               	movlw	high _swTimers
 37485  006DEE  20F4               	addwfc	prodh,w,c
 37486  006DF0  6EDA               	movwf	fsr2h,c
 37487  006DF2  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 37488  006DF6  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 37489  006DFA  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 37490  006DFE  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 37491  006E02                     l305:
 37492                           
 37493                           ; BSR set to: 0
 37494                           ;sw_timer.c: 227: }
 37495                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37496                           
 37497                           ; BSR set to: 0
 37498  006E02  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37499  006E06  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37500  006E0A  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37501  006E0E  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37502  006E12  EC1C  F037         	call	_TMR_OverrideRemaining	;wreg free
 37503                           
 37504                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37505  006E16  0100               	movlb	0	; () banked
 37506  006E18  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 37507  006E1A  0D08               	mullw	8
 37508  006E1C  0E04               	movlw	4
 37509  006E1E  26F3               	addwf	prodl,f,c
 37510  006E20  0E00               	movlw	0
 37511  006E22  22F4               	addwfc	prodh,f,c
 37512  006E24  0E00               	movlw	low _swTimers
 37513  006E26  24F3               	addwf	prodl,w,c
 37514  006E28  6ED9               	movwf	fsr2l,c
 37515  006E2A  0E03               	movlw	high _swTimers
 37516  006E2C  20F4               	addwfc	prodh,w,c
 37517  006E2E  6EDA               	movwf	fsr2h,c
 37518  006E30  0E01               	movlw	1
 37519  006E32  6EDF               	movwf	indf2,c
 37520                           
 37521                           ; BSR set to: 0
 37522                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37523  006E34  8EF2               	bsf	intcon,7,c	;volatile
 37524                           
 37525                           ; BSR set to: 0
 37526  006E36  0012               	return		;funcret
 37527  006E38                     __end_of_SwTimerStart:
 37528                           	opt stack 0
 37529                           tosu	equ	0xFFF
 37530                           tosh	equ	0xFFE
 37531                           tosl	equ	0xFFD
 37532                           pclath	equ	0xFFA
 37533                           tblptru	equ	0xFF8
 37534                           tblptrh	equ	0xFF7
 37535                           tblptrl	equ	0xFF6
 37536                           tablat	equ	0xFF5
 37537                           prodh	equ	0xFF4
 37538                           prodl	equ	0xFF3
 37539                           intcon	equ	0xFF2
 37540                           intcon2	equ	0xFF1
 37541                           intcon3	equ	0xFF0
 37542                           indf0	equ	0xFEF
 37543                           postinc0	equ	0xFEE
 37544                           plusw0	equ	0xFEB
 37545                           fsr0h	equ	0xFEA
 37546                           fsr0l	equ	0xFE9
 37547                           wreg	equ	0xFE8
 37548                           postinc1	equ	0xFE6
 37549                           postdec1	equ	0xFE5
 37550                           plusw1	equ	0xFE3
 37551                           fsr1h	equ	0xFE2
 37552                           fsr1l	equ	0xFE1
 37553                           indf2	equ	0xFDF
 37554                           postinc2	equ	0xFDE
 37555                           postdec2	equ	0xFDD
 37556                           plusw2	equ	0xFDB
 37557                           fsr2h	equ	0xFDA
 37558                           fsr2l	equ	0xFD9
 37559                           status	equ	0xFD8
 37560                           
 37561 ;; *************** function _TMR_OverrideRemaining *****************
 37562 ;; Defined at:
 37563 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37564 ;; Parameters:    Size  Location     Type
 37565 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37566 ;; Auto vars:     Size  Location     Type
 37567 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37568 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37569 ;; Return value:  Size  Location     Type
 37570 ;;                  1    wreg      void 
 37571 ;; Registers used:
 37572 ;;		wreg, status,2, status,0, cstack
 37573 ;; Tracked objects:
 37574 ;;		On entry : 0/0
 37575 ;;		On exit  : 0/0
 37576 ;;		Unchanged: 0/0
 37577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37579 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37581 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37582 ;;Total ram usage:       10 bytes
 37583 ;; Hardware stack levels used:    1
 37584 ;; Hardware stack levels required when called:    9
 37585 ;; This function calls:
 37586 ;;		_TMR_SwapTimer
 37587 ;; This function is called by:
 37588 ;;		_SwTimerStart
 37589 ;; This function uses a non-reentrant model
 37590 ;;
 37591                           
 37592                           	psect	text178
 37593  006E38                     __ptext178:
 37594                           	opt stack 0
 37595  006E38                     _TMR_OverrideRemaining:
 37596                           	opt stack 18
 37597                           
 37598                           ;sw_timer.c: 67: uint16_t tmrVal;
 37599                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 37600                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 37601                           
 37602                           ; BSR set to: 0
 37603                           ;incstack = 0
 37604  006E38  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37605  006E3A  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37606  006E3C  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37607  006E3E  E104               	bnz	u14450
 37608  006E40  0E0B               	movlw	11
 37609  006E42  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37610  006E44  A0D8               	btfss	status,0,c
 37611  006E46  0012               	return	
 37612  006E48                     u14450:
 37613                           
 37614                           ;sw_timer.c: 72: {
 37615                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37616  006E48  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37617  006E4A  0100               	movlb	0	; () banked
 37618  006E4C  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37619  006E4E  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37620  006E50  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37621  006E52  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37622  006E54  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37623  006E56  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37624  006E58  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37625  006E5A  B0D8               	btfsc	status,0,c
 37626  006E5C  0012               	return	
 37627                           
 37628                           ; BSR set to: 0
 37629                           ;sw_timer.c: 74: {
 37630                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37631  006E5E  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37632  006E62  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37633  006E66  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37634  006E6A  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 37635                           
 37636                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 37637  006E6E  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 37638  006E72  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 37639                           
 37640                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 37641  006E76  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 37642  006E7A  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 37643  006E7E  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37644  006E80  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37645  006E82  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37646  006E84  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37647  006E86  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 37648  006E8A  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 37649                           
 37650                           ; BSR set to: 0
 37651                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 37652  006E8E  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 37653  006E92  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 37654  006E96  ECC5  F03F         	call	_TMR_SwapTimer	;wreg free
 37655  006E9A  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 37656  006E9E  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 37657                           
 37658                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 37659  006EA2  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 37660  006EA6  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 37661  006EAA  0100               	movlb	0	; () banked
 37662  006EAC  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 37663  006EAE  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37664  006EB0  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 37665  006EB2  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37666  006EB4  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 37667  006EB6  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 37668  006EB8  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 37669  006EBA  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 37670  006EBC  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 37671  006EBE  2640               	addwf	_ticksAdded,f,c	;volatile
 37672  006EC0  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 37673  006EC2  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 37674  006EC4  0E00               	movlw	0
 37675  006EC6  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 37676  006EC8  0E00               	movlw	0
 37677  006ECA  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 37678                           
 37679                           ; BSR set to: 0
 37680  006ECC  0012               	return	
 37681  006ECE                     __end_of_TMR_OverrideRemaining:
 37682                           	opt stack 0
 37683                           tosu	equ	0xFFF
 37684                           tosh	equ	0xFFE
 37685                           tosl	equ	0xFFD
 37686                           pclath	equ	0xFFA
 37687                           tblptru	equ	0xFF8
 37688                           tblptrh	equ	0xFF7
 37689                           tblptrl	equ	0xFF6
 37690                           tablat	equ	0xFF5
 37691                           prodh	equ	0xFF4
 37692                           prodl	equ	0xFF3
 37693                           intcon	equ	0xFF2
 37694                           intcon2	equ	0xFF1
 37695                           intcon3	equ	0xFF0
 37696                           indf0	equ	0xFEF
 37697                           postinc0	equ	0xFEE
 37698                           plusw0	equ	0xFEB
 37699                           fsr0h	equ	0xFEA
 37700                           fsr0l	equ	0xFE9
 37701                           wreg	equ	0xFE8
 37702                           postinc1	equ	0xFE6
 37703                           postdec1	equ	0xFE5
 37704                           plusw1	equ	0xFE3
 37705                           fsr1h	equ	0xFE2
 37706                           fsr1l	equ	0xFE1
 37707                           indf2	equ	0xFDF
 37708                           postinc2	equ	0xFDE
 37709                           postdec2	equ	0xFDD
 37710                           plusw2	equ	0xFDB
 37711                           fsr2h	equ	0xFDA
 37712                           fsr2l	equ	0xFD9
 37713                           status	equ	0xFD8
 37714                           
 37715 ;; *************** function _TMR_SwapTimer *****************
 37716 ;; Defined at:
 37717 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37718 ;; Parameters:    Size  Location     Type
 37719 ;;  timerVal        2    8[BANK0 ] unsigned int 
 37720 ;; Auto vars:     Size  Location     Type
 37721 ;;		None
 37722 ;; Return value:  Size  Location     Type
 37723 ;;                  2    8[BANK0 ] unsigned int 
 37724 ;; Registers used:
 37725 ;;		wreg, status,2, status,0, cstack
 37726 ;; Tracked objects:
 37727 ;;		On entry : 0/0
 37728 ;;		On exit  : 0/0
 37729 ;;		Unchanged: 0/0
 37730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37735 ;;Total ram usage:        2 bytes
 37736 ;; Hardware stack levels used:    1
 37737 ;; Hardware stack levels required when called:    8
 37738 ;; This function calls:
 37739 ;;		_TMR1_ReadTimer
 37740 ;;		_TMR1_WriteTimer
 37741 ;; This function is called by:
 37742 ;;		_TMR_OverrideRemaining
 37743 ;; This function uses a non-reentrant model
 37744 ;;
 37745                           
 37746                           	psect	text179
 37747  007F8A                     __ptext179:
 37748                           	opt stack 0
 37749  007F8A                     _TMR_SwapTimer:
 37750                           	opt stack 18
 37751                           
 37752                           ;sw_timer.c: 114: static uint16_t oldVal;
 37753                           ;sw_timer.c: 115: static uint16_t retVal;
 37754                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 37755                           
 37756                           ;incstack = 0
 37757  007F8A  EC02  F044         	call	_TMR1_ReadTimer	;wreg free
 37758  007F8E  C060  F173         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 37759  007F92  C061  F174         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 37760  007F96                     
 37761                           ;sw_timer.c: 123: ;
 37762  007F96  EC02  F044         	call	_TMR1_ReadTimer	;wreg free
 37763  007F9A  0101               	movlb	1	; () banked
 37764  007F9C  5173               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 37765  007F9E  0100               	movlb	0	; () banked
 37766  007FA0  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 37767  007FA2  E106               	bnz	l12589
 37768  007FA4  0101               	movlb	1	; () banked
 37769  007FA6  5174               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 37770  007FA8  0100               	movlb	0	; () banked
 37771  007FAA  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 37772  007FAC  B4D8               	btfsc	status,2,c
 37773  007FAE  D7F3               	goto	l271
 37774  007FB0                     l12589:
 37775                           
 37776                           ; BSR set to: 0
 37777                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 37778  007FB0  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 37779  007FB4  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 37780  007FB8  EC43  F044         	call	_TMR1_WriteTimer	;wreg free
 37781                           
 37782                           ;sw_timer.c: 128: oldVal++;
 37783  007FBC  0101               	movlb	1	; () banked
 37784  007FBE  4B73               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 37785  007FC0  2B74               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 37786                           
 37787                           ; BSR set to: 1
 37788                           ;sw_timer.c: 130: retVal = oldVal;
 37789  007FC2  C173  F171         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 37790  007FC6  C174  F172         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 37791                           
 37792                           ; BSR set to: 1
 37793                           ;sw_timer.c: 132: return retVal;
 37794  007FCA  C171  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 37795  007FCE  C172  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 37796  007FD2  0012               	return	
 37797  007FD4                     __end_of_TMR_SwapTimer:
 37798                           	opt stack 0
 37799                           tosu	equ	0xFFF
 37800                           tosh	equ	0xFFE
 37801                           tosl	equ	0xFFD
 37802                           pclath	equ	0xFFA
 37803                           tblptru	equ	0xFF8
 37804                           tblptrh	equ	0xFF7
 37805                           tblptrl	equ	0xFF6
 37806                           tablat	equ	0xFF5
 37807                           prodh	equ	0xFF4
 37808                           prodl	equ	0xFF3
 37809                           intcon	equ	0xFF2
 37810                           intcon2	equ	0xFF1
 37811                           intcon3	equ	0xFF0
 37812                           indf0	equ	0xFEF
 37813                           postinc0	equ	0xFEE
 37814                           plusw0	equ	0xFEB
 37815                           fsr0h	equ	0xFEA
 37816                           fsr0l	equ	0xFE9
 37817                           wreg	equ	0xFE8
 37818                           postinc1	equ	0xFE6
 37819                           postdec1	equ	0xFE5
 37820                           plusw1	equ	0xFE3
 37821                           fsr1h	equ	0xFE2
 37822                           fsr1l	equ	0xFE1
 37823                           indf2	equ	0xFDF
 37824                           postinc2	equ	0xFDE
 37825                           postdec2	equ	0xFDD
 37826                           plusw2	equ	0xFDB
 37827                           fsr2h	equ	0xFDA
 37828                           fsr2l	equ	0xFD9
 37829                           status	equ	0xFD8
 37830                           
 37831 ;; *************** function _TMR1_WriteTimer *****************
 37832 ;; Defined at:
 37833 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 37834 ;; Parameters:    Size  Location     Type
 37835 ;;  timerVal        2    0[BANK0 ] unsigned int 
 37836 ;; Auto vars:     Size  Location     Type
 37837 ;;		None
 37838 ;; Return value:  Size  Location     Type
 37839 ;;                  1    wreg      void 
 37840 ;; Registers used:
 37841 ;;		wreg, status,2
 37842 ;; Tracked objects:
 37843 ;;		On entry : 0/0
 37844 ;;		On exit  : 0/0
 37845 ;;		Unchanged: 0/0
 37846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37851 ;;Total ram usage:        2 bytes
 37852 ;; Hardware stack levels used:    1
 37853 ;; Hardware stack levels required when called:    7
 37854 ;; This function calls:
 37855 ;;		Nothing
 37856 ;; This function is called by:
 37857 ;;		_TMR_SwapTimer
 37858 ;;		_TMR1_Reload
 37859 ;; This function uses a non-reentrant model
 37860 ;;
 37861                           
 37862                           	psect	text180
 37863  008886                     __ptext180:
 37864                           	opt stack 0
 37865  008886                     _TMR1_WriteTimer:
 37866                           	opt stack 18
 37867                           
 37868                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 37869                           
 37870                           ; BSR set to: 1
 37871                           ;incstack = 0
 37872  008886  A4CD               	btfss	4045,2,c	;volatile
 37873  008888  D008               	goto	l1599
 37874                           
 37875                           ;tmr1.c: 124: {
 37876                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 37877  00888A  90CD               	bcf	4045,0,c	;volatile
 37878                           
 37879                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 37880  00888C  0100               	movlb	0	; () banked
 37881  00888E  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 37882  008890  6ECF               	movwf	4047,c	;volatile
 37883                           
 37884                           ; BSR set to: 0
 37885                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 37886  008892  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 37887                           
 37888                           ; BSR set to: 0
 37889                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 37890  008896  80CD               	bsf	4045,0,c	;volatile
 37891                           
 37892                           ;tmr1.c: 134: }
 37893  008898  0012               	return	
 37894  00889A                     l1599:
 37895                           
 37896                           ;tmr1.c: 135: else
 37897                           ;tmr1.c: 136: {
 37898                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 37899                           
 37900                           ; BSR set to: 0
 37901  00889A  0100               	movlb	0	; () banked
 37902  00889C  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 37903  00889E  6ECF               	movwf	4047,c	;volatile
 37904                           
 37905                           ; BSR set to: 0
 37906                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 37907  0088A0  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 37908  0088A4  0012               	return	
 37909  0088A6                     __end_of_TMR1_WriteTimer:
 37910                           	opt stack 0
 37911                           tosu	equ	0xFFF
 37912                           tosh	equ	0xFFE
 37913                           tosl	equ	0xFFD
 37914                           pclath	equ	0xFFA
 37915                           tblptru	equ	0xFF8
 37916                           tblptrh	equ	0xFF7
 37917                           tblptrl	equ	0xFF6
 37918                           tablat	equ	0xFF5
 37919                           prodh	equ	0xFF4
 37920                           prodl	equ	0xFF3
 37921                           intcon	equ	0xFF2
 37922                           intcon2	equ	0xFF1
 37923                           intcon3	equ	0xFF0
 37924                           indf0	equ	0xFEF
 37925                           postinc0	equ	0xFEE
 37926                           plusw0	equ	0xFEB
 37927                           fsr0h	equ	0xFEA
 37928                           fsr0l	equ	0xFE9
 37929                           wreg	equ	0xFE8
 37930                           postinc1	equ	0xFE6
 37931                           postdec1	equ	0xFE5
 37932                           plusw1	equ	0xFE3
 37933                           fsr1h	equ	0xFE2
 37934                           fsr1l	equ	0xFE1
 37935                           indf2	equ	0xFDF
 37936                           postinc2	equ	0xFDE
 37937                           postdec2	equ	0xFDD
 37938                           plusw2	equ	0xFDB
 37939                           fsr2h	equ	0xFDA
 37940                           fsr2l	equ	0xFD9
 37941                           status	equ	0xFD8
 37942                           
 37943 ;; *************** function _SwTimersInterrupt *****************
 37944 ;; Defined at:
 37945 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37946 ;; Parameters:    Size  Location     Type
 37947 ;;		None
 37948 ;; Auto vars:     Size  Location     Type
 37949 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 37950 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 37951 ;;  i               1   48[BANK0 ] unsigned char 
 37952 ;; Return value:  Size  Location     Type
 37953 ;;                  4   32[BANK0 ] unsigned long 
 37954 ;; Registers used:
 37955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37956 ;; Tracked objects:
 37957 ;;		On entry : 0/0
 37958 ;;		On exit  : 0/0
 37959 ;;		Unchanged: 0/0
 37960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37962 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37963 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37964 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37965 ;;Total ram usage:       17 bytes
 37966 ;; Hardware stack levels used:    1
 37967 ;; Hardware stack levels required when called:    9
 37968 ;; This function calls:
 37969 ;;		_TMR_GetDeltaTime
 37970 ;; This function is called by:
 37971 ;;		_SwTimerReadValue
 37972 ;;		_SwTimerStart
 37973 ;;		_SwTimersCanSleep
 37974 ;; This function uses a non-reentrant model
 37975 ;;
 37976                           
 37977                           	psect	text181
 37978  005C18                     __ptext181:
 37979                           	opt stack 0
 37980  005C18                     _SwTimersInterrupt:
 37981                           	opt stack 18
 37982                           
 37983                           ;sw_timer.c: 289: uint8_t i;
 37984                           ;sw_timer.c: 290: uint32_t timeElapsed;
 37985                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 37986                           
 37987                           ; BSR set to: 0
 37988                           ;incstack = 0
 37989  005C18  0100               	movlb	0	; () banked
 37990  005C1A  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 37991  005C1C  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 37992  005C1E  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 37993  005C20  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 37994                           
 37995                           ; BSR set to: 0
 37996                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 37997  005C22  ECFD  F023         	call	_TMR_GetDeltaTime	;wreg free
 37998  005C26  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 37999  005C2A  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38000  005C2E  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38001  005C32  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38002                           
 38003                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38004  005C36  0E00               	movlw	0
 38005  005C38  0100               	movlb	0	; () banked
 38006  005C3A  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 38007  005C3C  D061               	goto	l328
 38008  005C3E                     
 38009                           ; BSR set to: 0
 38010                           ;sw_timer.c: 298: {
 38011                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38012                           
 38013                           ; BSR set to: 0
 38014  005C3E  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38015  005C40  0D08               	mullw	8
 38016  005C42  0E04               	movlw	4
 38017  005C44  26F3               	addwf	prodl,f,c
 38018  005C46  0E00               	movlw	0
 38019  005C48  22F4               	addwfc	prodh,f,c
 38020  005C4A  0E00               	movlw	low _swTimers
 38021  005C4C  24F3               	addwf	prodl,w,c
 38022  005C4E  6ED9               	movwf	fsr2l,c
 38023  005C50  0E03               	movlw	high _swTimers
 38024  005C52  20F4               	addwfc	prodh,w,c
 38025  005C54  6EDA               	movwf	fsr2h,c
 38026  005C56  04DE               	decf	postinc2,w,c
 38027  005C58  A4D8               	btfss	status,2,c
 38028  005C5A  D051               	goto	l333
 38029                           
 38030                           ; BSR set to: 0
 38031                           ;sw_timer.c: 302: {
 38032                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38033  005C5C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38034  005C5E  0D08               	mullw	8
 38035  005C60  0E00               	movlw	low _swTimers
 38036  005C62  24F3               	addwf	prodl,w,c
 38037  005C64  6ED9               	movwf	fsr2l,c
 38038  005C66  0E03               	movlw	high _swTimers
 38039  005C68  20F4               	addwfc	prodh,w,c
 38040  005C6A  6EDA               	movwf	fsr2h,c
 38041  005C6C  50DE               	movf	postinc2,w,c
 38042  005C6E  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38043  005C70  50DE               	movf	postinc2,w,c
 38044  005C72  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38045  005C74  50DE               	movf	postinc2,w,c
 38046  005C76  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38047  005C78  50DE               	movf	postinc2,w,c
 38048  005C7A  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38049  005C7C  A0D8               	btfss	status,0,c
 38050  005C7E  D00D               	goto	l331
 38051                           
 38052                           ; BSR set to: 0
 38053                           ;sw_timer.c: 304: {
 38054                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38055  005C80  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38056  005C82  0D08               	mullw	8
 38057  005C84  0E00               	movlw	low _swTimers
 38058  005C86  24F3               	addwf	prodl,w,c
 38059  005C88  6ED9               	movwf	fsr2l,c
 38060  005C8A  0E03               	movlw	high _swTimers
 38061  005C8C  20F4               	addwfc	prodh,w,c
 38062  005C8E  6EDA               	movwf	fsr2h,c
 38063  005C90  6ADE               	clrf	postinc2,c
 38064  005C92  6ADE               	clrf	postinc2,c
 38065  005C94  6ADE               	clrf	postinc2,c
 38066  005C96  6ADD               	clrf	postdec2,c
 38067                           
 38068                           ;sw_timer.c: 306: }
 38069  005C98  D032               	goto	l333
 38070  005C9A                     l331:
 38071                           
 38072                           ; BSR set to: 0
 38073                           ;sw_timer.c: 307: else
 38074                           ;sw_timer.c: 308: {
 38075                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38076                           
 38077                           ; BSR set to: 0
 38078  005C9A  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38079  005C9C  0D08               	mullw	8
 38080  005C9E  0E00               	movlw	low _swTimers
 38081  005CA0  24F3               	addwf	prodl,w,c
 38082  005CA2  6ED9               	movwf	fsr2l,c
 38083  005CA4  0E03               	movlw	high _swTimers
 38084  005CA6  20F4               	addwfc	prodh,w,c
 38085  005CA8  6EDA               	movwf	fsr2h,c
 38086  005CAA  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38087  005CAC  5EDE               	subwf	postinc2,f,c
 38088  005CAE  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38089  005CB0  5ADE               	subwfb	postinc2,f,c
 38090  005CB2  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38091  005CB4  5ADE               	subwfb	postinc2,f,c
 38092  005CB6  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38093  005CB8  5ADE               	subwfb	postinc2,f,c
 38094                           
 38095                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38096  005CBA  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38097  005CBC  0D08               	mullw	8
 38098  005CBE  0E00               	movlw	low _swTimers
 38099  005CC0  24F3               	addwf	prodl,w,c
 38100  005CC2  6ED9               	movwf	fsr2l,c
 38101  005CC4  0E03               	movlw	high _swTimers
 38102  005CC6  20F4               	addwfc	prodh,w,c
 38103  005CC8  6EDA               	movwf	fsr2h,c
 38104  005CCA  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38105  005CCC  5CDE               	subwf	postinc2,w,c
 38106  005CCE  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38107  005CD0  58DE               	subwfb	postinc2,w,c
 38108  005CD2  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38109  005CD4  58DE               	subwfb	postinc2,w,c
 38110  005CD6  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38111  005CD8  58DE               	subwfb	postinc2,w,c
 38112  005CDA  B0D8               	btfsc	status,0,c
 38113  005CDC  D010               	goto	l333
 38114                           
 38115                           ; BSR set to: 0
 38116                           ;sw_timer.c: 313: {
 38117                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38118  005CDE  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 38119  005CE0  0D08               	mullw	8
 38120  005CE2  0E00               	movlw	low _swTimers
 38121  005CE4  24F3               	addwf	prodl,w,c
 38122  005CE6  6ED9               	movwf	fsr2l,c
 38123  005CE8  0E03               	movlw	high _swTimers
 38124  005CEA  20F4               	addwfc	prodh,w,c
 38125  005CEC  6EDA               	movwf	fsr2h,c
 38126  005CEE  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38127  005CF2  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38128  005CF6  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38129  005CFA  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38130  005CFE                     l333:
 38131                           
 38132                           ; BSR set to: 0
 38133                           
 38134                           ; BSR set to: 0
 38135                           
 38136                           ; BSR set to: 0
 38137                           
 38138                           ; BSR set to: 0
 38139  005CFE  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 38140  005D00                     l328:
 38141                           
 38142                           ; BSR set to: 0
 38143                           
 38144                           ; BSR set to: 0
 38145  005D00  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38146  005D02  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 38147  005D04  A0D8               	btfss	status,0,c
 38148  005D06  D79B               	goto	l329
 38149                           
 38150                           ; BSR set to: 0
 38151                           ;sw_timer.c: 315: }
 38152                           ;sw_timer.c: 316: }
 38153                           ;sw_timer.c: 317: }
 38154                           ;sw_timer.c: 318: }
 38155                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38156  005D08  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38157  005D0C  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38158  005D10  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38159  005D14  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38160                           
 38161                           ; BSR set to: 0
 38162  005D18  0012               	return		;funcret
 38163  005D1A                     __end_of_SwTimersInterrupt:
 38164                           	opt stack 0
 38165                           tosu	equ	0xFFF
 38166                           tosh	equ	0xFFE
 38167                           tosl	equ	0xFFD
 38168                           pclath	equ	0xFFA
 38169                           tblptru	equ	0xFF8
 38170                           tblptrh	equ	0xFF7
 38171                           tblptrl	equ	0xFF6
 38172                           tablat	equ	0xFF5
 38173                           prodh	equ	0xFF4
 38174                           prodl	equ	0xFF3
 38175                           intcon	equ	0xFF2
 38176                           intcon2	equ	0xFF1
 38177                           intcon3	equ	0xFF0
 38178                           indf0	equ	0xFEF
 38179                           postinc0	equ	0xFEE
 38180                           plusw0	equ	0xFEB
 38181                           fsr0h	equ	0xFEA
 38182                           fsr0l	equ	0xFE9
 38183                           wreg	equ	0xFE8
 38184                           postinc1	equ	0xFE6
 38185                           postdec1	equ	0xFE5
 38186                           plusw1	equ	0xFE3
 38187                           fsr1h	equ	0xFE2
 38188                           fsr1l	equ	0xFE1
 38189                           indf2	equ	0xFDF
 38190                           postinc2	equ	0xFDE
 38191                           postdec2	equ	0xFDD
 38192                           plusw2	equ	0xFDB
 38193                           fsr2h	equ	0xFDA
 38194                           fsr2l	equ	0xFD9
 38195                           status	equ	0xFD8
 38196                           
 38197 ;; *************** function _TMR_GetDeltaTime *****************
 38198 ;; Defined at:
 38199 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38200 ;; Parameters:    Size  Location     Type
 38201 ;;		None
 38202 ;; Auto vars:     Size  Location     Type
 38203 ;;		None
 38204 ;; Return value:  Size  Location     Type
 38205 ;;                  4    8[BANK0 ] unsigned long 
 38206 ;; Registers used:
 38207 ;;		wreg, status,2, status,0, cstack
 38208 ;; Tracked objects:
 38209 ;;		On entry : 0/0
 38210 ;;		On exit  : 0/0
 38211 ;;		Unchanged: 0/0
 38212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38215 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38216 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38217 ;;Total ram usage:       24 bytes
 38218 ;; Hardware stack levels used:    1
 38219 ;; Hardware stack levels required when called:    8
 38220 ;; This function calls:
 38221 ;;		_TMR1_ReadTimer
 38222 ;; This function is called by:
 38223 ;;		_SwTimersInterrupt
 38224 ;; This function uses a non-reentrant model
 38225 ;;
 38226                           
 38227                           	psect	text182
 38228  0047FA                     __ptext182:
 38229                           	opt stack 0
 38230  0047FA                     _TMR_GetDeltaTime:
 38231                           	opt stack 18
 38232                           
 38233                           ;sw_timer.c: 90: static uint32_t retVal;
 38234                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38235                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38236                           
 38237                           ; BSR set to: 0
 38238                           ;incstack = 0
 38239  0047FA  EC02  F044         	call	_TMR1_ReadTimer	;wreg free
 38240  0047FE  C060  F175         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38241  004802  C061  F176         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38242                           
 38243                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38244  004806  0447               	decf	_timerOverflow,w,c	;volatile
 38245  004808  A4D8               	btfss	status,2,c
 38246  00480A  D071               	goto	l261
 38247                           
 38248                           ;sw_timer.c: 96: {
 38249                           ;sw_timer.c: 97: timerOverflow = 0;
 38250  00480C  0E00               	movlw	0
 38251  00480E  6E47               	movwf	_timerOverflow,c	;volatile
 38252                           
 38253                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38254  004810  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38255  004814  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38256  004818  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38257  00481C  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38258  004820  0100               	movlb	0	; () banked
 38259  004822  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38260  004824  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38261  004826  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38262  004828  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38263  00482A  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38264  00482C  0E00               	movlw	0
 38265  00482E  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38266  004830  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38267  004832  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38268  004834  5044               	movf	_reloadVal,w,c	;volatile
 38269  004836  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38270  004838  5045               	movf	_reloadVal+1,w,c	;volatile
 38271  00483A  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38272  00483C  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38273  00483E  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38274  004840  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38275  004842  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38276  004844  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38277  004846  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38278  004848  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38279  00484A  0E00               	movlw	0
 38280  00484C  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38281  00484E  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 38282  004850  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 38283  004852  0101               	movlb	1	; () banked
 38284  004854  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38285  004856  0100               	movlb	0	; () banked
 38286  004858  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38287  00485A  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38288  00485C  0101               	movlb	1	; () banked
 38289  00485E  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38290  004860  0100               	movlb	0	; () banked
 38291  004862  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38292  004864  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38293  004866  0E00               	movlw	0
 38294  004868  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38295  00486A  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38296  00486C  0E00               	movlw	0
 38297  00486E  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38298  004870  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38299  004872  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 38300  004874  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38301  004876  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 38302  004878  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38303  00487A  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38304  00487C  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 38305  00487E  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38306  004880  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38307  004882  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 38308  004884  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38309  004886  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38310  004888  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 38311  00488A  5040               	movf	_ticksAdded,w,c	;volatile
 38312  00488C  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 38313  00488E  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 38314  004890  5041               	movf	_ticksAdded+1,w,c	;volatile
 38315  004892  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 38316  004894  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 38317  004896  5042               	movf	_ticksAdded+2,w,c	;volatile
 38318  004898  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 38319  00489A  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 38320  00489C  5043               	movf	_ticksAdded+3,w,c	;volatile
 38321  00489E  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 38322  0048A0  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 38323  0048A2  0E00               	movlw	0
 38324  0048A4  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 38325  0048A6  0101               	movlb	1	; () banked
 38326  0048A8  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38327  0048AA  0E00               	movlw	0
 38328  0048AC  0100               	movlb	0	; () banked
 38329  0048AE  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 38330  0048B0  0101               	movlb	1	; () banked
 38331  0048B2  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38332  0048B4  0E01               	movlw	1
 38333  0048B6  0100               	movlb	0	; () banked
 38334  0048B8  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 38335  0048BA  0101               	movlb	1	; () banked
 38336  0048BC  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38337  0048BE  0E00               	movlw	0
 38338  0048C0  0100               	movlb	0	; () banked
 38339  0048C2  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 38340  0048C4  0101               	movlb	1	; () banked
 38341  0048C6  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38342                           
 38343                           ; BSR set to: 1
 38344                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38345  0048C8  C175  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38346  0048CC  C176  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38347  0048D0  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 38348  0048D2  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 38349                           
 38350                           ; BSR set to: 1
 38351                           ;sw_timer.c: 100: ticksAdded = 0;
 38352  0048D4  0E00               	movlw	0
 38353  0048D6  6E40               	movwf	_ticksAdded,c	;volatile
 38354  0048D8  0E00               	movlw	0
 38355  0048DA  6E41               	movwf	_ticksAdded+1,c	;volatile
 38356  0048DC  0E00               	movlw	0
 38357  0048DE  6E42               	movwf	_ticksAdded+2,c	;volatile
 38358  0048E0  0E00               	movlw	0
 38359  0048E2  6E43               	movwf	_ticksAdded+3,c	;volatile
 38360                           
 38361                           ; BSR set to: 1
 38362                           ;sw_timer.c: 101: reloadVal = 0;
 38363  0048E4  0E00               	movlw	0
 38364  0048E6  6E45               	movwf	_reloadVal+1,c	;volatile
 38365  0048E8  0E00               	movlw	0
 38366  0048EA  6E44               	movwf	_reloadVal,c	;volatile
 38367                           
 38368                           ;sw_timer.c: 102: }
 38369  0048EC  D049               	goto	l262
 38370  0048EE                     l261:
 38371                           
 38372                           ;sw_timer.c: 103: else
 38373                           ;sw_timer.c: 104: {
 38374                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38375                           
 38376                           ; BSR set to: 1
 38377  0048EE  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 38378  0048F2  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 38379  0048F6  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 38380  0048FA  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 38381  0048FE  0100               	movlb	0	; () banked
 38382  004900  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 38383  004902  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38384  004904  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38385  004906  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38386  004908  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 38387  00490A  0E00               	movlw	0
 38388  00490C  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 38389  00490E  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38390  004910  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 38391  004912  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 38392  004916  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 38393  00491A  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38394  00491C  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38395  00491E  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38396  004920  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38397  004922  0101               	movlb	1	; () banked
 38398  004924  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 38399  004926  0100               	movlb	0	; () banked
 38400  004928  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 38401  00492A  0101               	movlb	1	; () banked
 38402  00492C  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 38403  00492E  0100               	movlb	0	; () banked
 38404  004930  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 38405  004932  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38406  004934  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 38407  004936  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38408  004938  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38409  00493A  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38410  00493C  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38411  00493E  0E00               	movlw	0
 38412  004940  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38413  004942  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38414  004944  0E00               	movlw	0
 38415  004946  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38416  004948  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38417  00494A  5040               	movf	_ticksAdded,w,c	;volatile
 38418  00494C  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38419  00494E  0101               	movlb	1	; () banked
 38420  004950  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38421  004952  5041               	movf	_ticksAdded+1,w,c	;volatile
 38422  004954  0100               	movlb	0	; () banked
 38423  004956  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38424  004958  0101               	movlb	1	; () banked
 38425  00495A  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38426  00495C  5042               	movf	_ticksAdded+2,w,c	;volatile
 38427  00495E  0100               	movlb	0	; () banked
 38428  004960  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38429  004962  0101               	movlb	1	; () banked
 38430  004964  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38431  004966  5043               	movf	_ticksAdded+3,w,c	;volatile
 38432  004968  0100               	movlb	0	; () banked
 38433  00496A  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38434  00496C  0101               	movlb	1	; () banked
 38435  00496E  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38436                           
 38437                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38438  004970  516D               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38439  004972  263C               	addwf	_ticksAccounted,f,c	;volatile
 38440  004974  516E               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38441  004976  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 38442  004978  516F               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38443  00497A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 38444  00497C  5170               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38445  00497E  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 38446  004980                     l262:
 38447                           
 38448                           ; BSR set to: 1
 38449                           ;sw_timer.c: 107: }
 38450                           ;sw_timer.c: 109: return retVal;
 38451                           
 38452                           ; BSR set to: 1
 38453  004980  C16D  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38454  004984  C16E  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38455  004988  C16F  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38456  00498C  C170  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38457  004990  0012               	return	
 38458  004992                     __end_of_TMR_GetDeltaTime:
 38459                           	opt stack 0
 38460                           tosu	equ	0xFFF
 38461                           tosh	equ	0xFFE
 38462                           tosl	equ	0xFFD
 38463                           pclath	equ	0xFFA
 38464                           tblptru	equ	0xFF8
 38465                           tblptrh	equ	0xFF7
 38466                           tblptrl	equ	0xFF6
 38467                           tablat	equ	0xFF5
 38468                           prodh	equ	0xFF4
 38469                           prodl	equ	0xFF3
 38470                           intcon	equ	0xFF2
 38471                           intcon2	equ	0xFF1
 38472                           intcon3	equ	0xFF0
 38473                           indf0	equ	0xFEF
 38474                           postinc0	equ	0xFEE
 38475                           plusw0	equ	0xFEB
 38476                           fsr0h	equ	0xFEA
 38477                           fsr0l	equ	0xFE9
 38478                           wreg	equ	0xFE8
 38479                           postinc1	equ	0xFE6
 38480                           postdec1	equ	0xFE5
 38481                           plusw1	equ	0xFE3
 38482                           fsr1h	equ	0xFE2
 38483                           fsr1l	equ	0xFE1
 38484                           indf2	equ	0xFDF
 38485                           postinc2	equ	0xFDE
 38486                           postdec2	equ	0xFDD
 38487                           plusw2	equ	0xFDB
 38488                           fsr2h	equ	0xFDA
 38489                           fsr2l	equ	0xFD9
 38490                           status	equ	0xFD8
 38491                           
 38492 ;; *************** function _TMR1_ReadTimer *****************
 38493 ;; Defined at:
 38494 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38495 ;; Parameters:    Size  Location     Type
 38496 ;;		None
 38497 ;; Auto vars:     Size  Location     Type
 38498 ;;  readVal         2    4[BANK0 ] unsigned int 
 38499 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38500 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38501 ;; Return value:  Size  Location     Type
 38502 ;;                  2    0[BANK0 ] unsigned int 
 38503 ;; Registers used:
 38504 ;;		wreg, status,2
 38505 ;; Tracked objects:
 38506 ;;		On entry : 0/0
 38507 ;;		On exit  : 0/0
 38508 ;;		Unchanged: 0/0
 38509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38511 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38513 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38514 ;;Total ram usage:        8 bytes
 38515 ;; Hardware stack levels used:    1
 38516 ;; Hardware stack levels required when called:    7
 38517 ;; This function calls:
 38518 ;;		Nothing
 38519 ;; This function is called by:
 38520 ;;		_TMR_GetDeltaTime
 38521 ;;		_TMR_SwapTimer
 38522 ;; This function uses a non-reentrant model
 38523 ;;
 38524                           
 38525                           	psect	text183
 38526  008804                     __ptext183:
 38527                           	opt stack 0
 38528  008804                     _TMR1_ReadTimer:
 38529                           	opt stack 18
 38530                           
 38531                           ;tmr1.c: 107: uint16_t readVal;
 38532                           ;tmr1.c: 108: uint8_t readValHigh;
 38533                           ;tmr1.c: 109: uint8_t readValLow;
 38534                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 38535                           
 38536                           ; BSR set to: 1
 38537                           ;incstack = 0
 38538  008804  82CD               	bsf	4045,1,c	;volatile
 38539                           
 38540                           ;tmr1.c: 113: readValLow = TMR1L;
 38541  008806  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38542                           
 38543                           ;tmr1.c: 114: readValHigh = TMR1H;
 38544  00880A  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38545                           
 38546                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38547  00880E  0100               	movlb	0	; () banked
 38548  008810  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38549  008812  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 38550  008814  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38551  008816  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38552  008818  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38553                           
 38554                           ; BSR set to: 0
 38555                           ;tmr1.c: 118: return readVal;
 38556  00881C  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38557  008820  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38558  008824  0012               	return	
 38559  008826                     __end_of_TMR1_ReadTimer:
 38560                           	opt stack 0
 38561                           tosu	equ	0xFFF
 38562                           tosh	equ	0xFFE
 38563                           tosl	equ	0xFFD
 38564                           pclath	equ	0xFFA
 38565                           tblptru	equ	0xFF8
 38566                           tblptrh	equ	0xFF7
 38567                           tblptrl	equ	0xFF6
 38568                           tablat	equ	0xFF5
 38569                           prodh	equ	0xFF4
 38570                           prodl	equ	0xFF3
 38571                           intcon	equ	0xFF2
 38572                           intcon2	equ	0xFF1
 38573                           intcon3	equ	0xFF0
 38574                           indf0	equ	0xFEF
 38575                           postinc0	equ	0xFEE
 38576                           plusw0	equ	0xFEB
 38577                           fsr0h	equ	0xFEA
 38578                           fsr0l	equ	0xFE9
 38579                           wreg	equ	0xFE8
 38580                           postinc1	equ	0xFE6
 38581                           postdec1	equ	0xFE5
 38582                           plusw1	equ	0xFE3
 38583                           fsr1h	equ	0xFE2
 38584                           fsr1l	equ	0xFE1
 38585                           indf2	equ	0xFDF
 38586                           postinc2	equ	0xFDE
 38587                           postdec2	equ	0xFDD
 38588                           plusw2	equ	0xFDB
 38589                           fsr2h	equ	0xFDA
 38590                           fsr2l	equ	0xFD9
 38591                           status	equ	0xFD8
 38592                           
 38593 ;; *************** function _SwTimerSetTimeout *****************
 38594 ;; Defined at:
 38595 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38596 ;; Parameters:    Size  Location     Type
 38597 ;;  timerId         1    wreg     unsigned char 
 38598 ;;  timeout         4   13[BANK0 ] unsigned long 
 38599 ;; Auto vars:     Size  Location     Type
 38600 ;;  timerId         1   21[BANK0 ] unsigned char 
 38601 ;; Return value:  Size  Location     Type
 38602 ;;                  1    wreg      void 
 38603 ;; Registers used:
 38604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38605 ;; Tracked objects:
 38606 ;;		On entry : 0/0
 38607 ;;		On exit  : 0/0
 38608 ;;		Unchanged: 0/0
 38609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38612 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38613 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38614 ;;Total ram usage:        9 bytes
 38615 ;; Hardware stack levels used:    1
 38616 ;; Hardware stack levels required when called:    7
 38617 ;; This function calls:
 38618 ;;		Nothing
 38619 ;; This function is called by:
 38620 ;;		_RADIO_Transmit
 38621 ;;		_RADIO_ReceiveStart
 38622 ;;		_LORAWAN_TxDone
 38623 ;;		_LORAWAN_RxTimeout
 38624 ;;		_StartReTxTimer
 38625 ;;		_DutyCycleCallback
 38626 ;;		_LORAWAN_Join
 38627 ;;		_LORAWAN_LinkCheckConfigure
 38628 ;;		_LORAWAN_LinkCheckCallback
 38629 ;;		_UpdateRetransmissionAckTimeoutState
 38630 ;;		_UpdateJoinSuccessState
 38631 ;; This function uses a non-reentrant model
 38632 ;;
 38633                           
 38634                           	psect	text184
 38635  0081B6                     __ptext184:
 38636                           	opt stack 0
 38637  0081B6                     _SwTimerSetTimeout:
 38638                           	opt stack 21
 38639                           
 38640                           ; BSR set to: 0
 38641                           ;incstack = 0
 38642                           ;SwTimerSetTimeout@timerId stored from wreg
 38643  0081B6  0100               	movlb	0	; () banked
 38644  0081B8  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38645                           
 38646                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38647  0081BA  9EF2               	bcf	intcon,7,c	;volatile
 38648                           
 38649                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38650  0081BC  0EE0               	movlw	224
 38651  0081BE  0100               	movlb	0	; () banked
 38652  0081C0  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38653  0081C2  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 38654  0081C4  0EFF               	movlw	255
 38655  0081C6  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38656  0081C8  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38657  0081CA  0EFF               	movlw	255
 38658  0081CC  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38659  0081CE  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38660  0081D0  0EFF               	movlw	255
 38661  0081D2  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38662  0081D4  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38663  0081D6  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38664  0081D8  0D08               	mullw	8
 38665  0081DA  0E00               	movlw	low _swTimers
 38666  0081DC  24F3               	addwf	prodl,w,c
 38667  0081DE  6ED9               	movwf	fsr2l,c
 38668  0081E0  0E03               	movlw	high _swTimers
 38669  0081E2  20F4               	addwfc	prodh,w,c
 38670  0081E4  6EDA               	movwf	fsr2h,c
 38671  0081E6  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 38672  0081EA  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 38673  0081EE  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 38674  0081F2  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 38675                           
 38676                           ; BSR set to: 0
 38677                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 38678  0081F6  8EF2               	bsf	intcon,7,c	;volatile
 38679                           
 38680                           ; BSR set to: 0
 38681  0081F8  0012               	return		;funcret
 38682  0081FA                     __end_of_SwTimerSetTimeout:
 38683                           	opt stack 0
 38684                           tosu	equ	0xFFF
 38685                           tosh	equ	0xFFE
 38686                           tosl	equ	0xFFD
 38687                           pclath	equ	0xFFA
 38688                           tblptru	equ	0xFF8
 38689                           tblptrh	equ	0xFF7
 38690                           tblptrl	equ	0xFF6
 38691                           tablat	equ	0xFF5
 38692                           prodh	equ	0xFF4
 38693                           prodl	equ	0xFF3
 38694                           intcon	equ	0xFF2
 38695                           intcon2	equ	0xFF1
 38696                           intcon3	equ	0xFF0
 38697                           indf0	equ	0xFEF
 38698                           postinc0	equ	0xFEE
 38699                           plusw0	equ	0xFEB
 38700                           fsr0h	equ	0xFEA
 38701                           fsr0l	equ	0xFE9
 38702                           wreg	equ	0xFE8
 38703                           postinc1	equ	0xFE6
 38704                           postdec1	equ	0xFE5
 38705                           plusw1	equ	0xFE3
 38706                           fsr1h	equ	0xFE2
 38707                           fsr1l	equ	0xFE1
 38708                           indf2	equ	0xFDF
 38709                           postinc2	equ	0xFDE
 38710                           postdec2	equ	0xFDD
 38711                           plusw2	equ	0xFDB
 38712                           fsr2h	equ	0xFDA
 38713                           fsr2l	equ	0xFD9
 38714                           status	equ	0xFD8
 38715                           
 38716 ;; *************** function _InitDefault868Channels *****************
 38717 ;; Defined at:
 38718 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38719 ;; Parameters:    Size  Location     Type
 38720 ;;		None
 38721 ;; Auto vars:     Size  Location     Type
 38722 ;;  i               1   11[BANK0 ] unsigned char 
 38723 ;; Return value:  Size  Location     Type
 38724 ;;                  1    wreg      void 
 38725 ;; Registers used:
 38726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38727 ;; Tracked objects:
 38728 ;;		On entry : 0/0
 38729 ;;		On exit  : 0/0
 38730 ;;		Unchanged: 0/0
 38731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38736 ;;Total ram usage:        1 bytes
 38737 ;; Hardware stack levels used:    1
 38738 ;; Hardware stack levels required when called:    8
 38739 ;; This function calls:
 38740 ;;		_memcpy
 38741 ;;		_memset
 38742 ;; This function is called by:
 38743 ;;		_LORAWAN_Reset
 38744 ;; This function uses a non-reentrant model
 38745 ;;
 38746                           
 38747                           	psect	text185
 38748  0070FE                     __ptext185:
 38749                           	opt stack 0
 38750  0070FE                     _InitDefault868Channels:
 38751                           	opt stack 20
 38752                           
 38753                           ;lorawan_eu.c: 981: uint8_t i;
 38754                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 38755                           
 38756                           ; BSR set to: 0
 38757                           ;incstack = 0
 38758  0070FE  0E00               	movlw	low _Channels
 38759  007100  0100               	movlb	0	; () banked
 38760  007102  6F60               	movwf	memset@p1& (0+255),b
 38761  007104  0E04               	movlw	high _Channels
 38762  007106  6F61               	movwf	(memset@p1+1)& (0+255),b
 38763  007108  0E00               	movlw	0
 38764  00710A  6F63               	movwf	(memset@c+1)& (0+255),b
 38765  00710C  0E00               	movlw	0
 38766  00710E  6F62               	movwf	memset@c& (0+255),b
 38767  007110  0E00               	movlw	0
 38768  007112  6F65               	movwf	(memset@n+1)& (0+255),b
 38769  007114  0EE0               	movlw	224
 38770  007116  6F64               	movwf	memset@n& (0+255),b
 38771  007118  EC6B  F042         	call	_memset	;wreg free
 38772                           
 38773                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 38774  00711C  0E00               	movlw	low _Channels
 38775  00711E  0100               	movlb	0	; () banked
 38776  007120  6F60               	movwf	memcpy@d1& (0+255),b
 38777  007122  0E04               	movlw	high _Channels
 38778  007124  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38779  007126  0ECC               	movlw	low _DefaultChannels868
 38780  007128  6F62               	movwf	memcpy@s1& (0+255),b
 38781  00712A  0EFF               	movlw	high _DefaultChannels868
 38782  00712C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38783  00712E  0E00               	movlw	0
 38784  007130  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38785  007132  0E2A               	movlw	42
 38786  007134  6F64               	movwf	memcpy@n& (0+255),b
 38787  007136  EC37  F03D         	call	_memcpy	;wreg free
 38788                           
 38789                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 38790  00713A  0E03               	movlw	3
 38791  00713C  0100               	movlb	0	; () banked
 38792  00713E  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 38793  007140                     l15721:
 38794                           
 38795                           ; BSR set to: 0
 38796  007140  0E0F               	movlw	15
 38797  007142  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 38798  007144  D001               	goto	l1246
 38799  007146  0012               	return	
 38800  007148                     l1246:
 38801                           
 38802                           ; BSR set to: 0
 38803                           ;lorawan_eu.c: 986: {
 38804                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 38805                           
 38806                           ; BSR set to: 0
 38807  007148  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38808  00714A  0D0E               	mullw	14
 38809  00714C  0E06               	movlw	6
 38810  00714E  26F3               	addwf	prodl,f,c
 38811  007150  0E00               	movlw	0
 38812  007152  22F4               	addwfc	prodh,f,c
 38813  007154  0E00               	movlw	low _Channels
 38814  007156  24F3               	addwf	prodl,w,c
 38815  007158  6ED9               	movwf	fsr2l,c
 38816  00715A  0E04               	movlw	high _Channels
 38817  00715C  20F4               	addwfc	prodh,w,c
 38818  00715E  6EDA               	movwf	fsr2h,c
 38819  007160  0EFF               	movlw	255
 38820  007162  6EDE               	movwf	postinc2,c
 38821  007164  0EFF               	movlw	255
 38822  007166  6EDD               	movwf	postdec2,c
 38823                           
 38824                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 38825  007168  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38826  00716A  0D0E               	mullw	14
 38827  00716C  0E05               	movlw	5
 38828  00716E  26F3               	addwf	prodl,f,c
 38829  007170  0E00               	movlw	0
 38830  007172  22F4               	addwfc	prodh,f,c
 38831  007174  0E00               	movlw	low _Channels
 38832  007176  24F3               	addwf	prodl,w,c
 38833  007178  6ED9               	movwf	fsr2l,c
 38834  00717A  0E04               	movlw	high _Channels
 38835  00717C  20F4               	addwfc	prodh,w,c
 38836  00717E  6EDA               	movwf	fsr2h,c
 38837  007180  0EFF               	movlw	255
 38838  007182  6EDF               	movwf	indf2,c
 38839                           
 38840                           ; BSR set to: 0
 38841  007184  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 38842  007186  D7DC               	goto	l15721
 38843  007188                     __end_of_InitDefault868Channels:
 38844                           	opt stack 0
 38845                           tosu	equ	0xFFF
 38846                           tosh	equ	0xFFE
 38847                           tosl	equ	0xFFD
 38848                           pclath	equ	0xFFA
 38849                           tblptru	equ	0xFF8
 38850                           tblptrh	equ	0xFF7
 38851                           tblptrl	equ	0xFF6
 38852                           tablat	equ	0xFF5
 38853                           prodh	equ	0xFF4
 38854                           prodl	equ	0xFF3
 38855                           intcon	equ	0xFF2
 38856                           intcon2	equ	0xFF1
 38857                           intcon3	equ	0xFF0
 38858                           indf0	equ	0xFEF
 38859                           postinc0	equ	0xFEE
 38860                           plusw0	equ	0xFEB
 38861                           fsr0h	equ	0xFEA
 38862                           fsr0l	equ	0xFE9
 38863                           wreg	equ	0xFE8
 38864                           postinc1	equ	0xFE6
 38865                           postdec1	equ	0xFE5
 38866                           plusw1	equ	0xFE3
 38867                           fsr1h	equ	0xFE2
 38868                           fsr1l	equ	0xFE1
 38869                           indf2	equ	0xFDF
 38870                           postinc2	equ	0xFDE
 38871                           postdec2	equ	0xFDD
 38872                           plusw2	equ	0xFDB
 38873                           fsr2h	equ	0xFDA
 38874                           fsr2l	equ	0xFD9
 38875                           status	equ	0xFD8
 38876                           
 38877 ;; *************** function _InitDefault433Channels *****************
 38878 ;; Defined at:
 38879 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38880 ;; Parameters:    Size  Location     Type
 38881 ;;		None
 38882 ;; Auto vars:     Size  Location     Type
 38883 ;;  i               1   11[BANK0 ] unsigned char 
 38884 ;; Return value:  Size  Location     Type
 38885 ;;                  1    wreg      void 
 38886 ;; Registers used:
 38887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38888 ;; Tracked objects:
 38889 ;;		On entry : 0/0
 38890 ;;		On exit  : 0/0
 38891 ;;		Unchanged: 0/0
 38892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38897 ;;Total ram usage:        1 bytes
 38898 ;; Hardware stack levels used:    1
 38899 ;; Hardware stack levels required when called:    8
 38900 ;; This function calls:
 38901 ;;		_memcpy
 38902 ;;		_memset
 38903 ;; This function is called by:
 38904 ;;		_LORAWAN_Reset
 38905 ;; This function uses a non-reentrant model
 38906 ;;
 38907                           
 38908                           	psect	text186
 38909  007188                     __ptext186:
 38910                           	opt stack 0
 38911  007188                     _InitDefault433Channels:
 38912                           	opt stack 20
 38913                           
 38914                           ;lorawan_eu.c: 996: uint8_t i;
 38915                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 38916                           
 38917                           ; BSR set to: 0
 38918                           ;incstack = 0
 38919  007188  0E00               	movlw	low _Channels
 38920  00718A  0100               	movlb	0	; () banked
 38921  00718C  6F60               	movwf	memset@p1& (0+255),b
 38922  00718E  0E04               	movlw	high _Channels
 38923  007190  6F61               	movwf	(memset@p1+1)& (0+255),b
 38924  007192  0E00               	movlw	0
 38925  007194  6F63               	movwf	(memset@c+1)& (0+255),b
 38926  007196  0E00               	movlw	0
 38927  007198  6F62               	movwf	memset@c& (0+255),b
 38928  00719A  0E00               	movlw	0
 38929  00719C  6F65               	movwf	(memset@n+1)& (0+255),b
 38930  00719E  0EE0               	movlw	224
 38931  0071A0  6F64               	movwf	memset@n& (0+255),b
 38932  0071A2  EC6B  F042         	call	_memset	;wreg free
 38933                           
 38934                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 38935  0071A6  0E00               	movlw	low _Channels
 38936  0071A8  0100               	movlb	0	; () banked
 38937  0071AA  6F60               	movwf	memcpy@d1& (0+255),b
 38938  0071AC  0E04               	movlw	high _Channels
 38939  0071AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38940  0071B0  0EA2               	movlw	low _DefaultChannels433
 38941  0071B2  6F62               	movwf	memcpy@s1& (0+255),b
 38942  0071B4  0EFF               	movlw	high _DefaultChannels433
 38943  0071B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38944  0071B8  0E00               	movlw	0
 38945  0071BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38946  0071BC  0E2A               	movlw	42
 38947  0071BE  6F64               	movwf	memcpy@n& (0+255),b
 38948  0071C0  EC37  F03D         	call	_memcpy	;wreg free
 38949                           
 38950                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 38951  0071C4  0E03               	movlw	3
 38952  0071C6  0100               	movlb	0	; () banked
 38953  0071C8  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 38954  0071CA                     l15737:
 38955                           
 38956                           ; BSR set to: 0
 38957  0071CA  0E0F               	movlw	15
 38958  0071CC  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 38959  0071CE  D001               	goto	l1251
 38960  0071D0  0012               	return	
 38961  0071D2                     l1251:
 38962                           
 38963                           ; BSR set to: 0
 38964                           ;lorawan_eu.c: 1001: {
 38965                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 38966                           
 38967                           ; BSR set to: 0
 38968  0071D2  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38969  0071D4  0D0E               	mullw	14
 38970  0071D6  0E06               	movlw	6
 38971  0071D8  26F3               	addwf	prodl,f,c
 38972  0071DA  0E00               	movlw	0
 38973  0071DC  22F4               	addwfc	prodh,f,c
 38974  0071DE  0E00               	movlw	low _Channels
 38975  0071E0  24F3               	addwf	prodl,w,c
 38976  0071E2  6ED9               	movwf	fsr2l,c
 38977  0071E4  0E04               	movlw	high _Channels
 38978  0071E6  20F4               	addwfc	prodh,w,c
 38979  0071E8  6EDA               	movwf	fsr2h,c
 38980  0071EA  0EFF               	movlw	255
 38981  0071EC  6EDE               	movwf	postinc2,c
 38982  0071EE  0EFF               	movlw	255
 38983  0071F0  6EDD               	movwf	postdec2,c
 38984                           
 38985                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 38986  0071F2  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38987  0071F4  0D0E               	mullw	14
 38988  0071F6  0E05               	movlw	5
 38989  0071F8  26F3               	addwf	prodl,f,c
 38990  0071FA  0E00               	movlw	0
 38991  0071FC  22F4               	addwfc	prodh,f,c
 38992  0071FE  0E00               	movlw	low _Channels
 38993  007200  24F3               	addwf	prodl,w,c
 38994  007202  6ED9               	movwf	fsr2l,c
 38995  007204  0E04               	movlw	high _Channels
 38996  007206  20F4               	addwfc	prodh,w,c
 38997  007208  6EDA               	movwf	fsr2h,c
 38998  00720A  0EFF               	movlw	255
 38999  00720C  6EDF               	movwf	indf2,c
 39000                           
 39001                           ; BSR set to: 0
 39002  00720E  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 39003  007210  D7DC               	goto	l15737
 39004  007212                     __end_of_InitDefault433Channels:
 39005                           	opt stack 0
 39006                           tosu	equ	0xFFF
 39007                           tosh	equ	0xFFE
 39008                           tosl	equ	0xFFD
 39009                           pclath	equ	0xFFA
 39010                           tblptru	equ	0xFF8
 39011                           tblptrh	equ	0xFF7
 39012                           tblptrl	equ	0xFF6
 39013                           tablat	equ	0xFF5
 39014                           prodh	equ	0xFF4
 39015                           prodl	equ	0xFF3
 39016                           intcon	equ	0xFF2
 39017                           intcon2	equ	0xFF1
 39018                           intcon3	equ	0xFF0
 39019                           indf0	equ	0xFEF
 39020                           postinc0	equ	0xFEE
 39021                           plusw0	equ	0xFEB
 39022                           fsr0h	equ	0xFEA
 39023                           fsr0l	equ	0xFE9
 39024                           wreg	equ	0xFE8
 39025                           postinc1	equ	0xFE6
 39026                           postdec1	equ	0xFE5
 39027                           plusw1	equ	0xFE3
 39028                           fsr1h	equ	0xFE2
 39029                           fsr1l	equ	0xFE1
 39030                           indf2	equ	0xFDF
 39031                           postinc2	equ	0xFDE
 39032                           postdec2	equ	0xFDD
 39033                           plusw2	equ	0xFDB
 39034                           fsr2h	equ	0xFDA
 39035                           fsr2l	equ	0xFD9
 39036                           status	equ	0xFD8
 39037                           
 39038 ;; *************** function _memset *****************
 39039 ;; Defined at:
 39040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 39041 ;; Parameters:    Size  Location     Type
 39042 ;;  p1              2    0[BANK0 ] PTR void 
 39043 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39044 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39045 ;;  c               2    2[BANK0 ] int 
 39046 ;;  n               2    4[BANK0 ] unsigned int 
 39047 ;; Auto vars:     Size  Location     Type
 39048 ;;  p               2    6[BANK0 ] PTR unsigned char 
 39049 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39050 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39051 ;; Return value:  Size  Location     Type
 39052 ;;                  2    0[BANK0 ] PTR void 
 39053 ;; Registers used:
 39054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39055 ;; Tracked objects:
 39056 ;;		On entry : 0/0
 39057 ;;		On exit  : 0/0
 39058 ;;		Unchanged: 0/0
 39059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39063 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39064 ;;Total ram usage:        8 bytes
 39065 ;; Hardware stack levels used:    1
 39066 ;; Hardware stack levels required when called:    7
 39067 ;; This function calls:
 39068 ;;		Nothing
 39069 ;; This function is called by:
 39070 ;;		_AESCmac
 39071 ;;		_GenerateSubkey
 39072 ;;		_LORAWAN_Reset
 39073 ;;		_InitDefault868Channels
 39074 ;;		_InitDefault433Channels
 39075 ;;		_AssemblePacket
 39076 ;;		_PrepareJoinRequestFrame
 39077 ;;		_PrepareSessionKeys
 39078 ;;		_AssembleEncryptionBlock
 39079 ;; This function uses a non-reentrant model
 39080 ;;
 39081                           
 39082                           	psect	text187
 39083  0084D6                     __ptext187:
 39084                           	opt stack 0
 39085  0084D6                     _memset:
 39086                           	opt stack 21
 39087                           
 39088                           ; BSR set to: 0
 39089                           ;incstack = 0
 39090  0084D6  C060  F066         	movff	memset@p1,memset@p
 39091  0084DA  C061  F067         	movff	memset@p1+1,memset@p+1
 39092  0084DE  D009               	goto	l2929
 39093  0084E0                     l12783:
 39094  0084E0  C066  FFD9         	movff	memset@p,fsr2l
 39095  0084E4  C067  FFDA         	movff	memset@p+1,fsr2h
 39096  0084E8  C062  FFDF         	movff	memset@c,indf2
 39097  0084EC  0100               	movlb	0	; () banked
 39098  0084EE  4B66               	infsnz	memset@p& (0+255),f,b
 39099  0084F0  2B67               	incf	(memset@p+1)& (0+255),f,b
 39100  0084F2                     l2929:
 39101                           
 39102                           ; BSR set to: 0
 39103  0084F2  0100               	movlb	0	; () banked
 39104  0084F4  0764               	decf	memset@n& (0+255),f,b
 39105  0084F6  A0D8               	btfss	status,0,c
 39106  0084F8  0765               	decf	(memset@n+1)& (0+255),f,b
 39107  0084FA  2964               	incf	memset@n& (0+255),w,b
 39108  0084FC  E1F1               	bnz	l12783
 39109  0084FE  2965               	incf	(memset@n+1)& (0+255),w,b
 39110  008500  B4D8               	btfsc	status,2,c
 39111  008502  0012               	return	
 39112  008504  D7ED               	goto	l2930
 39113  008506                     __end_of_memset:
 39114                           	opt stack 0
 39115                           tosu	equ	0xFFF
 39116                           tosh	equ	0xFFE
 39117                           tosl	equ	0xFFD
 39118                           pclath	equ	0xFFA
 39119                           tblptru	equ	0xFF8
 39120                           tblptrh	equ	0xFF7
 39121                           tblptrl	equ	0xFF6
 39122                           tablat	equ	0xFF5
 39123                           prodh	equ	0xFF4
 39124                           prodl	equ	0xFF3
 39125                           intcon	equ	0xFF2
 39126                           intcon2	equ	0xFF1
 39127                           intcon3	equ	0xFF0
 39128                           indf0	equ	0xFEF
 39129                           postinc0	equ	0xFEE
 39130                           plusw0	equ	0xFEB
 39131                           fsr0h	equ	0xFEA
 39132                           fsr0l	equ	0xFE9
 39133                           wreg	equ	0xFE8
 39134                           postinc1	equ	0xFE6
 39135                           postdec1	equ	0xFE5
 39136                           plusw1	equ	0xFE3
 39137                           fsr1h	equ	0xFE2
 39138                           fsr1l	equ	0xFE1
 39139                           indf2	equ	0xFDF
 39140                           postinc2	equ	0xFDE
 39141                           postdec2	equ	0xFDD
 39142                           plusw2	equ	0xFDB
 39143                           fsr2h	equ	0xFDA
 39144                           fsr2l	equ	0xFD9
 39145                           status	equ	0xFD8
 39146                           
 39147 ;; *************** function _memcpy *****************
 39148 ;; Defined at:
 39149 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 39150 ;; Parameters:    Size  Location     Type
 39151 ;;  d1              2    0[BANK0 ] PTR void 
 39152 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39153 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39154 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39155 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39156 ;;  s1              2    2[BANK0 ] PTR const void 
 39157 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_1(6), appSKey(16), 
 39158 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 39159 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 39160 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 39161 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 39162 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 39163 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 39164 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 39165 ;;		 -> NULL(0), 
 39166 ;;  n               2    4[BANK0 ] unsigned int 
 39167 ;; Auto vars:     Size  Location     Type
 39168 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 39169 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), STR_1(6), appSKey(16), 
 39170 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 39171 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 39172 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 39173 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 39174 ;;		 -> FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), 
 39175 ;;		 -> loRa.fCntUp(4), radioBuffer(271), loRa(245), DefaultChannels433(42), 
 39176 ;;		 -> DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), 
 39177 ;;		 -> NULL(0), 
 39178 ;;  d               2    7[BANK0 ] PTR unsigned char 
 39179 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 39180 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 39181 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 39182 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39183 ;;  tmp             1    6[BANK0 ] unsigned char 
 39184 ;; Return value:  Size  Location     Type
 39185 ;;                  2    0[BANK0 ] PTR void 
 39186 ;; Registers used:
 39187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39188 ;; Tracked objects:
 39189 ;;		On entry : 0/0
 39190 ;;		On exit  : 0/0
 39191 ;;		Unchanged: 0/0
 39192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39193 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39194 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39196 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39197 ;;Total ram usage:       11 bytes
 39198 ;; Hardware stack levels used:    1
 39199 ;; Hardware stack levels required when called:    7
 39200 ;; This function calls:
 39201 ;;		Nothing
 39202 ;; This function is called by:
 39203 ;;		_AESCmac
 39204 ;;		_RADIO_SetFSKSyncWord
 39205 ;;		_UpdateCfList
 39206 ;;		_InitDefault868Channels
 39207 ;;		_InitDefault433Channels
 39208 ;;		_AESEncodeLoRa
 39209 ;;		_LORAWAN_SetNetworkSessionKey
 39210 ;;		_LORAWAN_SetApplicationSessionKey
 39211 ;;		_LORAWAN_RxDone
 39212 ;;		_AssemblePacket
 39213 ;;		_PrepareJoinRequestFrame
 39214 ;;		_PrepareSessionKeys
 39215 ;;		_AssembleEncryptionBlock
 39216 ;;		_ExtractMic
 39217 ;;		_ComputeMic
 39218 ;;		_RADIO_GetData
 39219 ;;		_RADIO_GetFSKSyncWord
 39220 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39221 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39222 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39223 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39224 ;;		_LORAWAN_SetDeviceEui
 39225 ;;		_LORAWAN_GetDeviceEui
 39226 ;;		_LORAWAN_SetApplicationEui
 39227 ;;		_LORAWAN_GetApplicationEui
 39228 ;;		_LORAWAN_GetNetworkSessionKey
 39229 ;;		_LORAWAN_GetApplicationSessionKey
 39230 ;;		_LORAWAN_SetApplicationKey
 39231 ;;		_LORAWAN_GetApplicationKey
 39232 ;; This function uses a non-reentrant model
 39233 ;;
 39234                           
 39235                           	psect	text188
 39236  007A6E                     __ptext188:
 39237                           	opt stack 0
 39238  007A6E                     _memcpy:
 39239                           	opt stack 22
 39240                           
 39241                           ; BSR set to: 0
 39242                           ;incstack = 0
 39243  007A6E  C062  F069         	movff	memcpy@s1,memcpy@s
 39244  007A72  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 39245  007A76  C060  F067         	movff	memcpy@d1,memcpy@d
 39246  007A7A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 39247  007A7E  D01D               	goto	l2923
 39248  007A80                     l12571:
 39249  007A80  C069  FFF6         	movff	memcpy@s,tblptrl
 39250  007A84  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 39251  007A88  0E00               	movlw	low (__mediumconst shr (0+16))
 39252  007A8A  6EF8               	movwf	tblptru,c
 39253  007A8C  0E0F               	movlw	(high __ramtop+-1)
 39254  007A8E  64F7               	cpfsgt	tblptrh,c
 39255  007A90  D003               	bra	u14147
 39256  007A92  0008               	tblrd		*
 39257  007A94  50F5               	movf	tablat,w,c
 39258  007A96  D005               	bra	u14140
 39259  007A98                     u14147:
 39260  007A98  CFF6 FFE9          	movff	tblptrl,fsr0l
 39261  007A9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 39262  007AA0  50EF               	movf	indf0,w,c
 39263  007AA2                     u14140:
 39264  007AA2  0100               	movlb	0	; () banked
 39265  007AA4  6F66               	movwf	memcpy@tmp& (0+255),b
 39266                           
 39267                           ; BSR set to: 0
 39268  007AA6  4B69               	infsnz	memcpy@s& (0+255),f,b
 39269  007AA8  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 39270                           
 39271                           ; BSR set to: 0
 39272  007AAA  C067  FFD9         	movff	memcpy@d,fsr2l
 39273  007AAE  C068  FFDA         	movff	memcpy@d+1,fsr2h
 39274  007AB2  C066  FFDF         	movff	memcpy@tmp,indf2
 39275                           
 39276                           ; BSR set to: 0
 39277  007AB6  4B67               	infsnz	memcpy@d& (0+255),f,b
 39278  007AB8  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 39279  007ABA                     l2923:
 39280                           
 39281                           ; BSR set to: 0
 39282  007ABA  0100               	movlb	0	; () banked
 39283  007ABC  0764               	decf	memcpy@n& (0+255),f,b
 39284  007ABE  A0D8               	btfss	status,0,c
 39285  007AC0  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39286  007AC2  2964               	incf	memcpy@n& (0+255),w,b
 39287  007AC4  E1DD               	bnz	l12571
 39288  007AC6  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39289  007AC8  B4D8               	btfsc	status,2,c
 39290  007ACA  0012               	return	
 39291  007ACC  D7D9               	goto	l2924
 39292  007ACE                     __end_of_memcpy:
 39293                           	opt stack 0
 39294                           tosu	equ	0xFFF
 39295                           tosh	equ	0xFFE
 39296                           tosl	equ	0xFFD
 39297                           pclath	equ	0xFFA
 39298                           tblptru	equ	0xFF8
 39299                           tblptrh	equ	0xFF7
 39300                           tblptrl	equ	0xFF6
 39301                           tablat	equ	0xFF5
 39302                           prodh	equ	0xFF4
 39303                           prodl	equ	0xFF3
 39304                           intcon	equ	0xFF2
 39305                           intcon2	equ	0xFF1
 39306                           intcon3	equ	0xFF0
 39307                           indf0	equ	0xFEF
 39308                           postinc0	equ	0xFEE
 39309                           plusw0	equ	0xFEB
 39310                           fsr0h	equ	0xFEA
 39311                           fsr0l	equ	0xFE9
 39312                           wreg	equ	0xFE8
 39313                           postinc1	equ	0xFE6
 39314                           postdec1	equ	0xFE5
 39315                           plusw1	equ	0xFE3
 39316                           fsr1h	equ	0xFE2
 39317                           fsr1l	equ	0xFE1
 39318                           indf2	equ	0xFDF
 39319                           postinc2	equ	0xFDE
 39320                           postdec2	equ	0xFDD
 39321                           plusw2	equ	0xFDB
 39322                           fsr2h	equ	0xFDA
 39323                           fsr2l	equ	0xFD9
 39324                           status	equ	0xFD8
 39325                           
 39326 ;; *************** function _CreateAllSoftwareTimers *****************
 39327 ;; Defined at:
 39328 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39329 ;; Parameters:    Size  Location     Type
 39330 ;;		None
 39331 ;; Auto vars:     Size  Location     Type
 39332 ;;		None
 39333 ;; Return value:  Size  Location     Type
 39334 ;;                  1    wreg      void 
 39335 ;; Registers used:
 39336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39337 ;; Tracked objects:
 39338 ;;		On entry : 0/0
 39339 ;;		On exit  : 0/0
 39340 ;;		Unchanged: 0/0
 39341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39346 ;;Total ram usage:        0 bytes
 39347 ;; Hardware stack levels used:    1
 39348 ;; Hardware stack levels required when called:    8
 39349 ;; This function calls:
 39350 ;;		_SwTimerCreate
 39351 ;; This function is called by:
 39352 ;;		_LORAWAN_Init
 39353 ;; This function uses a non-reentrant model
 39354 ;;
 39355                           
 39356                           	psect	text189
 39357  007EEA                     __ptext189:
 39358                           	opt stack 0
 39359  007EEA                     _CreateAllSoftwareTimers:
 39360                           	opt stack 21
 39361                           
 39362                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 39363                           
 39364                           ; BSR set to: 0
 39365                           ;incstack = 0
 39366  007EEA  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39367  007EEE  0102               	movlb	2	; () banked
 39368  007EF0  6FE2               	movwf	(_loRa+226)& (0+255),b
 39369                           
 39370                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 39371  007EF2  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39372  007EF6  0102               	movlb	2	; () banked
 39373  007EF8  6FE3               	movwf	(_loRa+227)& (0+255),b
 39374                           
 39375                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 39376  007EFA  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39377  007EFE  0102               	movlb	2	; () banked
 39378  007F00  6FE4               	movwf	(_loRa+228)& (0+255),b
 39379                           
 39380                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 39381  007F02  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39382  007F06  0102               	movlb	2	; () banked
 39383  007F08  6FE5               	movwf	(_loRa+229)& (0+255),b
 39384                           
 39385                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 39386  007F0A  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39387  007F0E  0102               	movlb	2	; () banked
 39388  007F10  6FE7               	movwf	(_loRa+231)& (0+255),b
 39389                           
 39390                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 39391  007F12  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39392  007F16  0102               	movlb	2	; () banked
 39393  007F18  6FE8               	movwf	(_loRa+232)& (0+255),b
 39394                           
 39395                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 39396  007F1A  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39397  007F1E  0102               	movlb	2	; () banked
 39398  007F20  6FE6               	movwf	(_loRa+230)& (0+255),b
 39399                           
 39400                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39401  007F22  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39402  007F26  0102               	movlb	2	; () banked
 39403  007F28  6FEA               	movwf	(_loRa+234)& (0+255),b
 39404                           
 39405                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 39406  007F2A  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39407  007F2E  0102               	movlb	2	; () banked
 39408  007F30  6FF3               	movwf	(_loRa+243)& (0+255),b
 39409                           
 39410                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 39411  007F32  ECAF  F037         	call	_SwTimerCreate	;wreg free
 39412  007F36  0102               	movlb	2	; () banked
 39413  007F38  6FE9               	movwf	(_loRa+233)& (0+255),b
 39414                           
 39415                           ; BSR set to: 2
 39416  007F3A  0012               	return		;funcret
 39417  007F3C                     __end_of_CreateAllSoftwareTimers:
 39418                           	opt stack 0
 39419                           tosu	equ	0xFFF
 39420                           tosh	equ	0xFFE
 39421                           tosl	equ	0xFFD
 39422                           pclath	equ	0xFFA
 39423                           tblptru	equ	0xFF8
 39424                           tblptrh	equ	0xFF7
 39425                           tblptrl	equ	0xFF6
 39426                           tablat	equ	0xFF5
 39427                           prodh	equ	0xFF4
 39428                           prodl	equ	0xFF3
 39429                           intcon	equ	0xFF2
 39430                           intcon2	equ	0xFF1
 39431                           intcon3	equ	0xFF0
 39432                           indf0	equ	0xFEF
 39433                           postinc0	equ	0xFEE
 39434                           plusw0	equ	0xFEB
 39435                           fsr0h	equ	0xFEA
 39436                           fsr0l	equ	0xFE9
 39437                           wreg	equ	0xFE8
 39438                           postinc1	equ	0xFE6
 39439                           postdec1	equ	0xFE5
 39440                           plusw1	equ	0xFE3
 39441                           fsr1h	equ	0xFE2
 39442                           fsr1l	equ	0xFE1
 39443                           indf2	equ	0xFDF
 39444                           postinc2	equ	0xFDE
 39445                           postdec2	equ	0xFDD
 39446                           plusw2	equ	0xFDB
 39447                           fsr2h	equ	0xFDA
 39448                           fsr2l	equ	0xFD9
 39449                           status	equ	0xFD8
 39450                           
 39451 ;; *************** function _SwTimerCreate *****************
 39452 ;; Defined at:
 39453 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39454 ;; Parameters:    Size  Location     Type
 39455 ;;		None
 39456 ;; Auto vars:     Size  Location     Type
 39457 ;;  retVal          1    0[BANK0 ] unsigned char 
 39458 ;; Return value:  Size  Location     Type
 39459 ;;                  1    wreg      unsigned char 
 39460 ;; Registers used:
 39461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39462 ;; Tracked objects:
 39463 ;;		On entry : 0/0
 39464 ;;		On exit  : 0/0
 39465 ;;		Unchanged: 0/0
 39466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39471 ;;Total ram usage:        1 bytes
 39472 ;; Hardware stack levels used:    1
 39473 ;; Hardware stack levels required when called:    7
 39474 ;; This function calls:
 39475 ;;		Nothing
 39476 ;; This function is called by:
 39477 ;;		_RADIO_Init
 39478 ;;		_CreateAllSoftwareTimers
 39479 ;; This function uses a non-reentrant model
 39480 ;;
 39481                           
 39482                           	psect	text190
 39483  006F5E                     __ptext190:
 39484                           	opt stack 0
 39485  006F5E                     _SwTimerCreate:
 39486                           	opt stack 21
 39487                           
 39488                           ;sw_timer.c: 156: uint8_t retVal;
 39489                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 39490                           
 39491                           ; BSR set to: 2
 39492                           ;incstack = 0
 39493  006F5E  0E14               	movlw	20
 39494  006F60  0100               	movlb	0	; () banked
 39495  006F62  61FB               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39496  006F64  D03E               	goto	l285
 39497                           
 39498                           ; BSR set to: 0
 39499                           ;sw_timer.c: 158: {
 39500                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39501  006F66  9EF2               	bcf	intcon,7,c	;volatile
 39502                           
 39503                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39504  006F68  C0FB  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39505                           
 39506                           ; BSR set to: 0
 39507                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39508  006F6C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39509  006F6E  0D08               	mullw	8
 39510  006F70  0E04               	movlw	4
 39511  006F72  26F3               	addwf	prodl,f,c
 39512  006F74  0E00               	movlw	0
 39513  006F76  22F4               	addwfc	prodh,f,c
 39514  006F78  0E00               	movlw	low _swTimers
 39515  006F7A  24F3               	addwf	prodl,w,c
 39516  006F7C  6ED9               	movwf	fsr2l,c
 39517  006F7E  0E03               	movlw	high _swTimers
 39518  006F80  20F4               	addwfc	prodh,w,c
 39519  006F82  6EDA               	movwf	fsr2h,c
 39520  006F84  0E00               	movlw	0
 39521  006F86  6EDF               	movwf	indf2,c
 39522                           
 39523                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39524  006F88  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39525  006F8A  0D08               	mullw	8
 39526  006F8C  0E00               	movlw	low _swTimers
 39527  006F8E  24F3               	addwf	prodl,w,c
 39528  006F90  6ED9               	movwf	fsr2l,c
 39529  006F92  0E03               	movlw	high _swTimers
 39530  006F94  20F4               	addwfc	prodh,w,c
 39531  006F96  6EDA               	movwf	fsr2h,c
 39532  006F98  6ADE               	clrf	postinc2,c
 39533  006F9A  6ADE               	clrf	postinc2,c
 39534  006F9C  6ADE               	clrf	postinc2,c
 39535  006F9E  6ADD               	clrf	postdec2,c
 39536                           
 39537                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39538  006FA0  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39539  006FA2  0D08               	mullw	8
 39540  006FA4  0E05               	movlw	5
 39541  006FA6  26F3               	addwf	prodl,f,c
 39542  006FA8  0E00               	movlw	0
 39543  006FAA  22F4               	addwfc	prodh,f,c
 39544  006FAC  0E00               	movlw	low _swTimers
 39545  006FAE  24F3               	addwf	prodl,w,c
 39546  006FB0  6ED9               	movwf	fsr2l,c
 39547  006FB2  0E03               	movlw	high _swTimers
 39548  006FB4  20F4               	addwfc	prodh,w,c
 39549  006FB6  6EDA               	movwf	fsr2h,c
 39550  006FB8  0E00               	movlw	0
 39551  006FBA  6EDF               	movwf	indf2,c
 39552                           
 39553                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39554  006FBC  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39555  006FBE  0D08               	mullw	8
 39556  006FC0  0E06               	movlw	6
 39557  006FC2  26F3               	addwf	prodl,f,c
 39558  006FC4  0E00               	movlw	0
 39559  006FC6  22F4               	addwfc	prodh,f,c
 39560  006FC8  0E00               	movlw	low _swTimers
 39561  006FCA  24F3               	addwf	prodl,w,c
 39562  006FCC  6ED9               	movwf	fsr2l,c
 39563  006FCE  0E03               	movlw	high _swTimers
 39564  006FD0  20F4               	addwfc	prodh,w,c
 39565  006FD2  6EDA               	movwf	fsr2h,c
 39566  006FD4  0E00               	movlw	0
 39567  006FD6  6EDE               	movwf	postinc2,c
 39568  006FD8  0E00               	movlw	0
 39569  006FDA  6EDD               	movwf	postdec2,c
 39570                           
 39571                           ; BSR set to: 0
 39572                           ;sw_timer.c: 165: allocatedTimers++;
 39573  006FDC  2BFB               	incf	_allocatedTimers& (0+255),f,b	;volatile
 39574                           
 39575                           ; BSR set to: 0
 39576                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39577  006FDE  8EF2               	bsf	intcon,7,c	;volatile
 39578                           
 39579                           ;sw_timer.c: 167: }
 39580  006FE0  D001               	goto	l289
 39581  006FE2                     l285:
 39582                           
 39583                           ;sw_timer.c: 171: {
 39584                           
 39585                           ; BSR set to: 0
 39586                           ;sw_timer.c: 168: else
 39587                           ;sw_timer.c: 169: {
 39588                           ;sw_timer.c: 170: while(1)
 39589  006FE2  D7FF               	goto	l285
 39590  006FE4                     l289:
 39591                           
 39592                           ;sw_timer.c: 175: }
 39593                           ;sw_timer.c: 176: }
 39594                           ;sw_timer.c: 177: return retVal;
 39595  006FE4  0100               	movlb	0	; () banked
 39596  006FE6  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39597  006FE8  0012               	return	
 39598  006FEA                     __end_of_SwTimerCreate:
 39599                           	opt stack 0
 39600                           tosu	equ	0xFFF
 39601                           tosh	equ	0xFFE
 39602                           tosl	equ	0xFFD
 39603                           pclath	equ	0xFFA
 39604                           tblptru	equ	0xFF8
 39605                           tblptrh	equ	0xFF7
 39606                           tblptrl	equ	0xFF6
 39607                           tablat	equ	0xFF5
 39608                           prodh	equ	0xFF4
 39609                           prodl	equ	0xFF3
 39610                           intcon	equ	0xFF2
 39611                           intcon2	equ	0xFF1
 39612                           intcon3	equ	0xFF0
 39613                           indf0	equ	0xFEF
 39614                           postinc0	equ	0xFEE
 39615                           plusw0	equ	0xFEB
 39616                           fsr0h	equ	0xFEA
 39617                           fsr0l	equ	0xFE9
 39618                           wreg	equ	0xFE8
 39619                           postinc1	equ	0xFE6
 39620                           postdec1	equ	0xFE5
 39621                           plusw1	equ	0xFE3
 39622                           fsr1h	equ	0xFE2
 39623                           fsr1l	equ	0xFE1
 39624                           indf2	equ	0xFDF
 39625                           postinc2	equ	0xFDE
 39626                           postdec2	equ	0xFDD
 39627                           plusw2	equ	0xFDB
 39628                           fsr2h	equ	0xFDA
 39629                           fsr2l	equ	0xFD9
 39630                           status	equ	0xFD8
 39631                           
 39632 ;; *************** function _INTERRUPT_InterruptManager *****************
 39633 ;; Defined at:
 39634 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 39635 ;; Parameters:    Size  Location     Type
 39636 ;;		None
 39637 ;; Auto vars:     Size  Location     Type
 39638 ;;		None
 39639 ;; Return value:  Size  Location     Type
 39640 ;;                  1    wreg      void 
 39641 ;; Registers used:
 39642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39643 ;; Tracked objects:
 39644 ;;		On entry : 0/0
 39645 ;;		On exit  : 0/0
 39646 ;;		Unchanged: 0/0
 39647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39650 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39652 ;;Total ram usage:        8 bytes
 39653 ;; Hardware stack levels used:    1
 39654 ;; Hardware stack levels required when called:    6
 39655 ;; This function calls:
 39656 ;;		_INT1_ISR
 39657 ;;		_INT2_ISR
 39658 ;;		_PIN_MANAGER_IOC
 39659 ;;		_TMR1_ISR
 39660 ;; This function is called by:
 39661 ;;		Interrupt level 2
 39662 ;; This function uses a non-reentrant model
 39663 ;;
 39664                           
 39665                           	psect	intcode
 39666  000008                     __pintcode:
 39667                           	opt stack 0
 39668  000008                     _INTERRUPT_InterruptManager:
 39669                           	opt stack 12
 39670                           
 39671                           ; BSR set to: 0
 39672                           ;incstack = 0
 39673  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 39674  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 39675  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 39676  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 39677  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 39678  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 39679  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 39680  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 39681  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 39682                           
 39683                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 39684  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 39685  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 39686  000030  D003               	goto	i2l1448
 39687                           
 39688                           ;interrupt_manager.c: 62: {
 39689                           ;interrupt_manager.c: 63: INT1_ISR();
 39690  000032  EC01  F046         	call	_INT1_ISR	;wreg free
 39691                           
 39692                           ;interrupt_manager.c: 64: }
 39693  000036  D012               	goto	i2l1455
 39694  000038                     i2l1448:
 39695                           
 39696                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 39697  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 39698  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 39699  00003C  D003               	goto	i2l1450
 39700                           
 39701                           ;interrupt_manager.c: 66: {
 39702                           ;interrupt_manager.c: 67: INT2_ISR();
 39703  00003E  ECFD  F045         	call	_INT2_ISR	;wreg free
 39704                           
 39705                           ;interrupt_manager.c: 68: }
 39706  000042  D00C               	goto	i2l1455
 39707  000044                     i2l1450:
 39708                           
 39709                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 39710  000044  B6F2               	btfsc	intcon,3,c	;volatile
 39711  000046  A0F2               	btfss	intcon,0,c	;volatile
 39712  000048  D003               	goto	i2l1452
 39713                           
 39714                           ;interrupt_manager.c: 70: {
 39715                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 39716  00004A  ECF4  F045         	call	_PIN_MANAGER_IOC	;wreg free
 39717                           
 39718                           ;interrupt_manager.c: 72: }
 39719  00004E  D006               	goto	i2l1455
 39720  000050                     i2l1452:
 39721                           
 39722                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 39723  000050  BCF2               	btfsc	intcon,6,c	;volatile
 39724                           
 39725                           ;interrupt_manager.c: 74: {
 39726                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 39727  000052  A09D               	btfss	3997,0,c	;volatile
 39728  000054  D003               	goto	i2l1455
 39729  000056  B09E               	btfsc	3998,0,c	;volatile
 39730                           
 39731                           ;interrupt_manager.c: 76: {
 39732                           ;interrupt_manager.c: 77: TMR1_ISR();
 39733  000058  EC39  F045         	call	_TMR1_ISR	;wreg free
 39734  00005C                     i2l1455:
 39735                           
 39736                           ;interrupt_manager.c: 84: else
 39737                           ;interrupt_manager.c: 85: {
 39738                           
 39739                           ;interrupt_manager.c: 82: }
 39740                           ;interrupt_manager.c: 83: }
 39741                           
 39742                           ;interrupt_manager.c: 79: else
 39743                           ;interrupt_manager.c: 80: {
 39744  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 39745  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 39746  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 39747  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 39748  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 39749  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 39750  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 39751  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 39752  00007C  0011               	retfie		f
 39753  00007E                     __end_of_INTERRUPT_InterruptManager:
 39754                           	opt stack 0
 39755                           tosu	equ	0xFFF
 39756                           tosh	equ	0xFFE
 39757                           tosl	equ	0xFFD
 39758                           pclatu	equ	0xFFB
 39759                           pclath	equ	0xFFA
 39760                           tblptru	equ	0xFF8
 39761                           tblptrh	equ	0xFF7
 39762                           tblptrl	equ	0xFF6
 39763                           tablat	equ	0xFF5
 39764                           prodh	equ	0xFF4
 39765                           prodl	equ	0xFF3
 39766                           intcon	equ	0xFF2
 39767                           intcon2	equ	0xFF1
 39768                           intcon3	equ	0xFF0
 39769                           indf0	equ	0xFEF
 39770                           postinc0	equ	0xFEE
 39771                           plusw0	equ	0xFEB
 39772                           fsr0h	equ	0xFEA
 39773                           fsr0l	equ	0xFE9
 39774                           wreg	equ	0xFE8
 39775                           postinc1	equ	0xFE6
 39776                           postdec1	equ	0xFE5
 39777                           plusw1	equ	0xFE3
 39778                           fsr1h	equ	0xFE2
 39779                           fsr1l	equ	0xFE1
 39780                           indf2	equ	0xFDF
 39781                           postinc2	equ	0xFDE
 39782                           postdec2	equ	0xFDD
 39783                           plusw2	equ	0xFDB
 39784                           fsr2h	equ	0xFDA
 39785                           fsr2l	equ	0xFD9
 39786                           status	equ	0xFD8
 39787                           
 39788 ;; *************** function _TMR1_ISR *****************
 39789 ;; Defined at:
 39790 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 39791 ;; Parameters:    Size  Location     Type
 39792 ;;		None
 39793 ;; Auto vars:     Size  Location     Type
 39794 ;;		None
 39795 ;; Return value:  Size  Location     Type
 39796 ;;                  1    wreg      void 
 39797 ;; Registers used:
 39798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39799 ;; Tracked objects:
 39800 ;;		On entry : 0/0
 39801 ;;		On exit  : 0/0
 39802 ;;		Unchanged: 0/0
 39803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39808 ;;Total ram usage:        0 bytes
 39809 ;; Hardware stack levels used:    1
 39810 ;; Hardware stack levels required when called:    5
 39811 ;; This function calls:
 39812 ;;		_TMR1_CallBack
 39813 ;;		i2_TMR1_WriteTimer
 39814 ;; This function is called by:
 39815 ;;		_INTERRUPT_InterruptManager
 39816 ;; This function uses a non-reentrant model
 39817 ;;
 39818                           
 39819                           	psect	text192
 39820  008A72                     __ptext192:
 39821                           	opt stack 0
 39822  008A72                     _TMR1_ISR:
 39823                           	opt stack 12
 39824                           
 39825                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 39826                           
 39827                           ;incstack = 0
 39828  008A72  909E               	bcf	3998,0,c	;volatile
 39829                           
 39830                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 39831  008A74  C1EA  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 39832  008A78  C1EB  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 39833  008A7C  ECCE  F044         	call	i2_TMR1_WriteTimer	;wreg free
 39834                           
 39835                           ;tmr1.c: 167: TMR1_CallBack();
 39836  008A80  EC53  F044         	call	_TMR1_CallBack	;wreg free
 39837  008A84  0012               	return		;funcret
 39838  008A86                     __end_of_TMR1_ISR:
 39839                           	opt stack 0
 39840                           tosu	equ	0xFFF
 39841                           tosh	equ	0xFFE
 39842                           tosl	equ	0xFFD
 39843                           pclatu	equ	0xFFB
 39844                           pclath	equ	0xFFA
 39845                           tblptru	equ	0xFF8
 39846                           tblptrh	equ	0xFF7
 39847                           tblptrl	equ	0xFF6
 39848                           tablat	equ	0xFF5
 39849                           prodh	equ	0xFF4
 39850                           prodl	equ	0xFF3
 39851                           intcon	equ	0xFF2
 39852                           intcon2	equ	0xFF1
 39853                           intcon3	equ	0xFF0
 39854                           indf0	equ	0xFEF
 39855                           postinc0	equ	0xFEE
 39856                           plusw0	equ	0xFEB
 39857                           fsr0h	equ	0xFEA
 39858                           fsr0l	equ	0xFE9
 39859                           wreg	equ	0xFE8
 39860                           postinc1	equ	0xFE6
 39861                           postdec1	equ	0xFE5
 39862                           plusw1	equ	0xFE3
 39863                           fsr1h	equ	0xFE2
 39864                           fsr1l	equ	0xFE1
 39865                           indf2	equ	0xFDF
 39866                           postinc2	equ	0xFDE
 39867                           postdec2	equ	0xFDD
 39868                           plusw2	equ	0xFDB
 39869                           fsr2h	equ	0xFDA
 39870                           fsr2l	equ	0xFD9
 39871                           status	equ	0xFD8
 39872                           
 39873 ;; *************** function _TMR1_CallBack *****************
 39874 ;; Defined at:
 39875 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 39876 ;; Parameters:    Size  Location     Type
 39877 ;;		None
 39878 ;; Auto vars:     Size  Location     Type
 39879 ;;		None
 39880 ;; Return value:  Size  Location     Type
 39881 ;;                  1    wreg      void 
 39882 ;; Registers used:
 39883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39884 ;; Tracked objects:
 39885 ;;		On entry : 0/0
 39886 ;;		On exit  : 0/0
 39887 ;;		Unchanged: 0/0
 39888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39893 ;;Total ram usage:        0 bytes
 39894 ;; Hardware stack levels used:    1
 39895 ;; Hardware stack levels required when called:    4
 39896 ;; This function calls:
 39897 ;;		Absolute function
 39898 ;;		_TMR1_DefaultInterruptHandler
 39899 ;;		_TMR_ISR_lora
 39900 ;; This function is called by:
 39901 ;;		_TMR1_ISR
 39902 ;; This function uses a non-reentrant model
 39903 ;;
 39904                           
 39905                           	psect	text193
 39906  0088A6                     __ptext193:
 39907                           	opt stack 0
 39908  0088A6                     _TMR1_CallBack:
 39909                           	opt stack 12
 39910                           
 39911                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 39912                           
 39913                           ;incstack = 0
 39914  0088A6  0101               	movlb	1	; () banked
 39915  0088A8  51E8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 39916  0088AA  11E9               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 39917  0088AC  B4D8               	btfsc	status,2,c
 39918  0088AE  0012               	return	
 39919                           
 39920                           ; BSR set to: 1
 39921                           ;tmr1.c: 174: {
 39922                           ;tmr1.c: 175: TMR1_InterruptHandler();
 39923  0088B0  D801               	call	i2u2162_48
 39924  0088B2  0012               	return	
 39925  0088B4                     i2u2162_48:
 39926  0088B4  0005               	push	
 39927  0088B6  6EFA               	movwf	pclath,c
 39928  0088B8  51E8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 39929  0088BA  6EFD               	movwf	tosl,c
 39930  0088BC  51E9               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 39931  0088BE  6EFE               	movwf	tosh,c
 39932  0088C0  6AFF               	clrf	tosu,c
 39933  0088C2  50FA               	movf	pclath,w,c
 39934  0088C4  0012               	return		;indir
 39935  0088C6                     __end_of_TMR1_CallBack:
 39936                           	opt stack 0
 39937                           tosu	equ	0xFFF
 39938                           tosh	equ	0xFFE
 39939                           tosl	equ	0xFFD
 39940                           pclatu	equ	0xFFB
 39941                           pclath	equ	0xFFA
 39942                           tblptru	equ	0xFF8
 39943                           tblptrh	equ	0xFF7
 39944                           tblptrl	equ	0xFF6
 39945                           tablat	equ	0xFF5
 39946                           prodh	equ	0xFF4
 39947                           prodl	equ	0xFF3
 39948                           intcon	equ	0xFF2
 39949                           intcon2	equ	0xFF1
 39950                           intcon3	equ	0xFF0
 39951                           indf0	equ	0xFEF
 39952                           postinc0	equ	0xFEE
 39953                           plusw0	equ	0xFEB
 39954                           fsr0h	equ	0xFEA
 39955                           fsr0l	equ	0xFE9
 39956                           wreg	equ	0xFE8
 39957                           postinc1	equ	0xFE6
 39958                           postdec1	equ	0xFE5
 39959                           plusw1	equ	0xFE3
 39960                           fsr1h	equ	0xFE2
 39961                           fsr1l	equ	0xFE1
 39962                           indf2	equ	0xFDF
 39963                           postinc2	equ	0xFDE
 39964                           postdec2	equ	0xFDD
 39965                           plusw2	equ	0xFDB
 39966                           fsr2h	equ	0xFDA
 39967                           fsr2l	equ	0xFD9
 39968                           status	equ	0xFD8
 39969                           
 39970 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 39971 ;; Defined at:
 39972 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 39973 ;; Parameters:    Size  Location     Type
 39974 ;;		None
 39975 ;; Auto vars:     Size  Location     Type
 39976 ;;		None
 39977 ;; Return value:  Size  Location     Type
 39978 ;;                  1    wreg      void 
 39979 ;; Registers used:
 39980 ;;		None
 39981 ;; Tracked objects:
 39982 ;;		On entry : 0/0
 39983 ;;		On exit  : 0/0
 39984 ;;		Unchanged: 0/0
 39985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39990 ;;Total ram usage:        0 bytes
 39991 ;; Hardware stack levels used:    1
 39992 ;; This function calls:
 39993 ;;		Nothing
 39994 ;; This function is called by:
 39995 ;;		_TMR1_Initialize
 39996 ;;		_TMR1_CallBack
 39997 ;; This function uses a non-reentrant model
 39998 ;;
 39999                           
 40000                           	psect	text194
 40001  008C50                     __ptext194:
 40002                           	opt stack 0
 40003  008C50                     _TMR1_DefaultInterruptHandler:
 40004                           	opt stack 15
 40005                           
 40006                           ;incstack = 0
 40007  008C50  0012               	return		;funcret
 40008  008C52                     __end_of_TMR1_DefaultInterruptHandler:
 40009                           	opt stack 0
 40010                           tosu	equ	0xFFF
 40011                           tosh	equ	0xFFE
 40012                           tosl	equ	0xFFD
 40013                           pclatu	equ	0xFFB
 40014                           pclath	equ	0xFFA
 40015                           tblptru	equ	0xFF8
 40016                           tblptrh	equ	0xFF7
 40017                           tblptrl	equ	0xFF6
 40018                           tablat	equ	0xFF5
 40019                           prodh	equ	0xFF4
 40020                           prodl	equ	0xFF3
 40021                           intcon	equ	0xFF2
 40022                           intcon2	equ	0xFF1
 40023                           intcon3	equ	0xFF0
 40024                           indf0	equ	0xFEF
 40025                           postinc0	equ	0xFEE
 40026                           plusw0	equ	0xFEB
 40027                           fsr0h	equ	0xFEA
 40028                           fsr0l	equ	0xFE9
 40029                           wreg	equ	0xFE8
 40030                           postinc1	equ	0xFE6
 40031                           postdec1	equ	0xFE5
 40032                           plusw1	equ	0xFE3
 40033                           fsr1h	equ	0xFE2
 40034                           fsr1l	equ	0xFE1
 40035                           indf2	equ	0xFDF
 40036                           postinc2	equ	0xFDE
 40037                           postdec2	equ	0xFDD
 40038                           plusw2	equ	0xFDB
 40039                           fsr2h	equ	0xFDA
 40040                           fsr2l	equ	0xFD9
 40041                           status	equ	0xFD8
 40042                           
 40043 ;; *************** function _TMR_ISR_lora *****************
 40044 ;; Defined at:
 40045 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 40046 ;; Parameters:    Size  Location     Type
 40047 ;;		None
 40048 ;; Auto vars:     Size  Location     Type
 40049 ;;		None
 40050 ;; Return value:  Size  Location     Type
 40051 ;;                  1    wreg      void 
 40052 ;; Registers used:
 40053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40054 ;; Tracked objects:
 40055 ;;		On entry : 0/0
 40056 ;;		On exit  : 0/0
 40057 ;;		Unchanged: 0/0
 40058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40063 ;;Total ram usage:        2 bytes
 40064 ;; Hardware stack levels used:    1
 40065 ;; Hardware stack levels required when called:    3
 40066 ;; This function calls:
 40067 ;;		i2_SwTimersInterrupt
 40068 ;;		i2_TMR_SwapTimer
 40069 ;; This function is called by:
 40070 ;;		_TMR_ISR_Lora_Init
 40071 ;;		_TMR1_CallBack
 40072 ;; This function uses a non-reentrant model
 40073 ;;
 40074                           
 40075                           	psect	text195
 40076  007D48                     __ptext195:
 40077                           	opt stack 0
 40078  007D48                     _TMR_ISR_lora:
 40079                           	opt stack 12
 40080                           
 40081                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 40082                           
 40083                           ;incstack = 0
 40084  007D48  0E01               	movlw	1
 40085  007D4A  6E47               	movwf	_timerOverflow,c	;volatile
 40086                           
 40087                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 40088  007D4C  EC8D  F02E         	call	i2_SwTimersInterrupt	;wreg free
 40089  007D50  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 40090  007D54  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 40091  007D58  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 40092  007D5C  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 40093                           
 40094                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 40095  007D60  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40096  007D62  E11C               	bnz	i2l1379
 40097  007D64  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40098  007D66  B0D8               	btfsc	status,0,c
 40099  007D68  0012               	return	
 40100                           
 40101                           ;tmr_lora_addons.c: 66: {
 40102                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 40103  007D6A  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 40104  007D6E  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 40105  007D72  1E32               	comf	??_TMR_ISR_lora,f,c
 40106  007D74  1E33               	comf	??_TMR_ISR_lora+1,f,c
 40107  007D76  4A32               	infsnz	??_TMR_ISR_lora,f,c
 40108  007D78  2A33               	incf	??_TMR_ISR_lora+1,f,c
 40109  007D7A  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 40110  007D7E  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 40111                           
 40112                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 40113  007D82  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 40114  007D86  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 40115  007D8A  ECFD  F040         	call	i2_TMR_SwapTimer	;wreg free
 40116  007D8E  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 40117  007D92  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 40118  007D96  6A42               	clrf	_ticksAdded+2,c	;volatile
 40119  007D98  6A43               	clrf	_ticksAdded+3,c	;volatile
 40120  007D9A  0012               	return	
 40121  007D9C                     i2l1379:
 40122  007D9C  0012               	return		;funcret
 40123  007D9E                     __end_of_TMR_ISR_lora:
 40124                           	opt stack 0
 40125                           tosu	equ	0xFFF
 40126                           tosh	equ	0xFFE
 40127                           tosl	equ	0xFFD
 40128                           pclatu	equ	0xFFB
 40129                           pclath	equ	0xFFA
 40130                           tblptru	equ	0xFF8
 40131                           tblptrh	equ	0xFF7
 40132                           tblptrl	equ	0xFF6
 40133                           tablat	equ	0xFF5
 40134                           prodh	equ	0xFF4
 40135                           prodl	equ	0xFF3
 40136                           intcon	equ	0xFF2
 40137                           intcon2	equ	0xFF1
 40138                           intcon3	equ	0xFF0
 40139                           indf0	equ	0xFEF
 40140                           postinc0	equ	0xFEE
 40141                           plusw0	equ	0xFEB
 40142                           fsr0h	equ	0xFEA
 40143                           fsr0l	equ	0xFE9
 40144                           wreg	equ	0xFE8
 40145                           postinc1	equ	0xFE6
 40146                           postdec1	equ	0xFE5
 40147                           plusw1	equ	0xFE3
 40148                           fsr1h	equ	0xFE2
 40149                           fsr1l	equ	0xFE1
 40150                           indf2	equ	0xFDF
 40151                           postinc2	equ	0xFDE
 40152                           postdec2	equ	0xFDD
 40153                           plusw2	equ	0xFDB
 40154                           fsr2h	equ	0xFDA
 40155                           fsr2l	equ	0xFD9
 40156                           status	equ	0xFD8
 40157                           
 40158 ;; *************** function i2_TMR_SwapTimer *****************
 40159 ;; Defined at:
 40160 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40161 ;; Parameters:    Size  Location     Type
 40162 ;;  timerVal        2    8[COMRAM] unsigned int 
 40163 ;; Auto vars:     Size  Location     Type
 40164 ;;		None
 40165 ;; Return value:  Size  Location     Type
 40166 ;;                  2    8[COMRAM] unsigned int 
 40167 ;; Registers used:
 40168 ;;		wreg, status,2, status,0, cstack
 40169 ;; Tracked objects:
 40170 ;;		On entry : 0/0
 40171 ;;		On exit  : 0/0
 40172 ;;		Unchanged: 0/0
 40173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40178 ;;Total ram usage:        2 bytes
 40179 ;; Hardware stack levels used:    1
 40180 ;; Hardware stack levels required when called:    1
 40181 ;; This function calls:
 40182 ;;		i2_TMR1_ReadTimer
 40183 ;;		i2_TMR1_WriteTimer
 40184 ;; This function is called by:
 40185 ;;		_TMR_ISR_lora
 40186 ;; This function uses a non-reentrant model
 40187 ;;
 40188                           
 40189                           	psect	text196
 40190  0081FA                     __ptext196:
 40191                           	opt stack 0
 40192  0081FA                     i2_TMR_SwapTimer:
 40193                           	opt stack 13
 40194                           
 40195                           ;sw_timer.c: 114: static uint16_t oldVal;
 40196                           ;sw_timer.c: 115: static uint16_t retVal;
 40197                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 40198                           
 40199                           ;incstack = 0
 40200  0081FA  EC63  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40201  0081FE  C001  F173         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 40202  008202  C002  F174         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 40203  008206                     
 40204                           ;sw_timer.c: 123: ;
 40205  008206  EC63  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40206  00820A  0101               	movlb	1	; () banked
 40207  00820C  5173               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 40208  00820E  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 40209  008210  E104               	bnz	i2l11009
 40210  008212  5174               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 40211  008214  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 40212  008216  B4D8               	btfsc	status,2,c
 40213  008218  D7F6               	goto	i2l271
 40214  00821A                     i2l11009:
 40215                           
 40216                           ; BSR set to: 1
 40217                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 40218  00821A  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 40219  00821E  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 40220  008222  ECCE  F044         	call	i2_TMR1_WriteTimer	;wreg free
 40221                           
 40222                           ;sw_timer.c: 128: oldVal++;
 40223  008226  0101               	movlb	1	; () banked
 40224  008228  4B73               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 40225  00822A  2B74               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 40226                           
 40227                           ; BSR set to: 1
 40228                           ;sw_timer.c: 130: retVal = oldVal;
 40229  00822C  C173  F171         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 40230  008230  C174  F172         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 40231                           
 40232                           ; BSR set to: 1
 40233                           ;sw_timer.c: 132: return retVal;
 40234  008234  C171  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 40235  008238  C172  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 40236  00823C  0012               	return	
 40237  00823E                     __end_ofi2_TMR_SwapTimer:
 40238                           	opt stack 0
 40239                           tosu	equ	0xFFF
 40240                           tosh	equ	0xFFE
 40241                           tosl	equ	0xFFD
 40242                           pclatu	equ	0xFFB
 40243                           pclath	equ	0xFFA
 40244                           tblptru	equ	0xFF8
 40245                           tblptrh	equ	0xFF7
 40246                           tblptrl	equ	0xFF6
 40247                           tablat	equ	0xFF5
 40248                           prodh	equ	0xFF4
 40249                           prodl	equ	0xFF3
 40250                           intcon	equ	0xFF2
 40251                           intcon2	equ	0xFF1
 40252                           intcon3	equ	0xFF0
 40253                           indf0	equ	0xFEF
 40254                           postinc0	equ	0xFEE
 40255                           plusw0	equ	0xFEB
 40256                           fsr0h	equ	0xFEA
 40257                           fsr0l	equ	0xFE9
 40258                           wreg	equ	0xFE8
 40259                           postinc1	equ	0xFE6
 40260                           postdec1	equ	0xFE5
 40261                           plusw1	equ	0xFE3
 40262                           fsr1h	equ	0xFE2
 40263                           fsr1l	equ	0xFE1
 40264                           indf2	equ	0xFDF
 40265                           postinc2	equ	0xFDE
 40266                           postdec2	equ	0xFDD
 40267                           plusw2	equ	0xFDB
 40268                           fsr2h	equ	0xFDA
 40269                           fsr2l	equ	0xFD9
 40270                           status	equ	0xFD8
 40271                           
 40272 ;; *************** function i2_TMR1_WriteTimer *****************
 40273 ;; Defined at:
 40274 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 40275 ;; Parameters:    Size  Location     Type
 40276 ;;  timerVal        2    0[COMRAM] unsigned int 
 40277 ;; Auto vars:     Size  Location     Type
 40278 ;;		None
 40279 ;; Return value:  Size  Location     Type
 40280 ;;                  1    wreg      void 
 40281 ;; Registers used:
 40282 ;;		wreg, status,2
 40283 ;; Tracked objects:
 40284 ;;		On entry : 0/0
 40285 ;;		On exit  : 0/0
 40286 ;;		Unchanged: 0/0
 40287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40292 ;;Total ram usage:        2 bytes
 40293 ;; Hardware stack levels used:    1
 40294 ;; This function calls:
 40295 ;;		Nothing
 40296 ;; This function is called by:
 40297 ;;		_TMR1_ISR
 40298 ;;		i2_TMR_SwapTimer
 40299 ;; This function uses a non-reentrant model
 40300 ;;
 40301                           
 40302                           	psect	text197
 40303  00899C                     __ptext197:
 40304                           	opt stack 0
 40305  00899C                     i2_TMR1_WriteTimer:
 40306                           	opt stack 16
 40307                           
 40308                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 40309                           
 40310                           ; BSR set to: 1
 40311                           ;incstack = 0
 40312  00899C  A4CD               	btfss	4045,2,c	;volatile
 40313  00899E  D007               	goto	i2l1599
 40314                           
 40315                           ;tmr1.c: 124: {
 40316                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 40317  0089A0  90CD               	bcf	4045,0,c	;volatile
 40318                           
 40319                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 40320  0089A2  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40321  0089A4  6ECF               	movwf	4047,c	;volatile
 40322                           
 40323                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 40324  0089A6  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40325                           
 40326                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 40327  0089AA  80CD               	bsf	4045,0,c	;volatile
 40328                           
 40329                           ;tmr1.c: 134: }
 40330  0089AC  0012               	return	
 40331  0089AE                     i2l1599:
 40332                           
 40333                           ;tmr1.c: 135: else
 40334                           ;tmr1.c: 136: {
 40335                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 40336  0089AE  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 40337  0089B0  6ECF               	movwf	4047,c	;volatile
 40338                           
 40339                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 40340  0089B2  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 40341  0089B6  0012               	return	
 40342  0089B8                     __end_ofi2_TMR1_WriteTimer:
 40343                           	opt stack 0
 40344                           tosu	equ	0xFFF
 40345                           tosh	equ	0xFFE
 40346                           tosl	equ	0xFFD
 40347                           pclatu	equ	0xFFB
 40348                           pclath	equ	0xFFA
 40349                           tblptru	equ	0xFF8
 40350                           tblptrh	equ	0xFF7
 40351                           tblptrl	equ	0xFF6
 40352                           tablat	equ	0xFF5
 40353                           prodh	equ	0xFF4
 40354                           prodl	equ	0xFF3
 40355                           intcon	equ	0xFF2
 40356                           intcon2	equ	0xFF1
 40357                           intcon3	equ	0xFF0
 40358                           indf0	equ	0xFEF
 40359                           postinc0	equ	0xFEE
 40360                           plusw0	equ	0xFEB
 40361                           fsr0h	equ	0xFEA
 40362                           fsr0l	equ	0xFE9
 40363                           wreg	equ	0xFE8
 40364                           postinc1	equ	0xFE6
 40365                           postdec1	equ	0xFE5
 40366                           plusw1	equ	0xFE3
 40367                           fsr1h	equ	0xFE2
 40368                           fsr1l	equ	0xFE1
 40369                           indf2	equ	0xFDF
 40370                           postinc2	equ	0xFDE
 40371                           postdec2	equ	0xFDD
 40372                           plusw2	equ	0xFDB
 40373                           fsr2h	equ	0xFDA
 40374                           fsr2l	equ	0xFD9
 40375                           status	equ	0xFD8
 40376                           
 40377 ;; *************** function i2_SwTimersInterrupt *****************
 40378 ;; Defined at:
 40379 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40380 ;; Parameters:    Size  Location     Type
 40381 ;;		None
 40382 ;; Auto vars:     Size  Location     Type
 40383 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 40384 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 40385 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 40386 ;; Return value:  Size  Location     Type
 40387 ;;                  4   32[COMRAM] unsigned long 
 40388 ;; Registers used:
 40389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40390 ;; Tracked objects:
 40391 ;;		On entry : 0/0
 40392 ;;		On exit  : 0/0
 40393 ;;		Unchanged: 0/0
 40394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40396 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40398 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40399 ;;Total ram usage:       17 bytes
 40400 ;; Hardware stack levels used:    1
 40401 ;; Hardware stack levels required when called:    2
 40402 ;; This function calls:
 40403 ;;		i2_TMR_GetDeltaTime
 40404 ;; This function is called by:
 40405 ;;		_TMR_ISR_lora
 40406 ;; This function uses a non-reentrant model
 40407 ;;
 40408                           
 40409                           	psect	text198
 40410  005D1A                     __ptext198:
 40411                           	opt stack 0
 40412  005D1A                     i2_SwTimersInterrupt:
 40413                           	opt stack 12
 40414                           
 40415                           ;sw_timer.c: 289: uint8_t i;
 40416                           ;sw_timer.c: 290: uint32_t timeElapsed;
 40417                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 40418                           
 40419                           ;incstack = 0
 40420  005D1A  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 40421  005D1C  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 40422  005D1E  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 40423  005D20  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 40424                           
 40425                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 40426  005D22  EC08  F027         	call	i2_TMR_GetDeltaTime	;wreg free
 40427  005D26  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 40428  005D2A  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 40429  005D2E  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 40430  005D32  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 40431                           
 40432                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 40433  005D36  0E00               	movlw	0
 40434  005D38  6E31               	movwf	i2SwTimersInterrupt@i,c
 40435  005D3A  D061               	goto	i2l328
 40436  005D3C                     
 40437                           ;sw_timer.c: 298: {
 40438                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 40439  005D3C  5031               	movf	i2SwTimersInterrupt@i,w,c
 40440  005D3E  0D08               	mullw	8
 40441  005D40  0E04               	movlw	4
 40442  005D42  26F3               	addwf	prodl,f,c
 40443  005D44  0E00               	movlw	0
 40444  005D46  22F4               	addwfc	prodh,f,c
 40445  005D48  0E00               	movlw	low _swTimers
 40446  005D4A  24F3               	addwf	prodl,w,c
 40447  005D4C  6ED9               	movwf	fsr2l,c
 40448  005D4E  0E03               	movlw	high _swTimers
 40449  005D50  20F4               	addwfc	prodh,w,c
 40450  005D52  6EDA               	movwf	fsr2h,c
 40451  005D54  04DE               	decf	postinc2,w,c
 40452  005D56  A4D8               	btfss	status,2,c
 40453  005D58  D051               	goto	i2l333
 40454                           
 40455                           ;sw_timer.c: 302: {
 40456                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 40457  005D5A  5031               	movf	i2SwTimersInterrupt@i,w,c
 40458  005D5C  0D08               	mullw	8
 40459  005D5E  0E00               	movlw	low _swTimers
 40460  005D60  24F3               	addwf	prodl,w,c
 40461  005D62  6ED9               	movwf	fsr2l,c
 40462  005D64  0E03               	movlw	high _swTimers
 40463  005D66  20F4               	addwfc	prodh,w,c
 40464  005D68  6EDA               	movwf	fsr2h,c
 40465  005D6A  50DE               	movf	postinc2,w,c
 40466  005D6C  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 40467  005D6E  50DE               	movf	postinc2,w,c
 40468  005D70  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 40469  005D72  50DE               	movf	postinc2,w,c
 40470  005D74  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 40471  005D76  50DE               	movf	postinc2,w,c
 40472  005D78  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 40473  005D7A  A0D8               	btfss	status,0,c
 40474  005D7C  D00D               	goto	i2l331
 40475                           
 40476                           ;sw_timer.c: 304: {
 40477                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 40478  005D7E  5031               	movf	i2SwTimersInterrupt@i,w,c
 40479  005D80  0D08               	mullw	8
 40480  005D82  0E00               	movlw	low _swTimers
 40481  005D84  24F3               	addwf	prodl,w,c
 40482  005D86  6ED9               	movwf	fsr2l,c
 40483  005D88  0E03               	movlw	high _swTimers
 40484  005D8A  20F4               	addwfc	prodh,w,c
 40485  005D8C  6EDA               	movwf	fsr2h,c
 40486  005D8E  6ADE               	clrf	postinc2,c
 40487  005D90  6ADE               	clrf	postinc2,c
 40488  005D92  6ADE               	clrf	postinc2,c
 40489  005D94  6ADD               	clrf	postdec2,c
 40490                           
 40491                           ;sw_timer.c: 306: }
 40492  005D96  D032               	goto	i2l333
 40493  005D98                     i2l331:
 40494                           
 40495                           ;sw_timer.c: 307: else
 40496                           ;sw_timer.c: 308: {
 40497                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 40498  005D98  5031               	movf	i2SwTimersInterrupt@i,w,c
 40499  005D9A  0D08               	mullw	8
 40500  005D9C  0E00               	movlw	low _swTimers
 40501  005D9E  24F3               	addwf	prodl,w,c
 40502  005DA0  6ED9               	movwf	fsr2l,c
 40503  005DA2  0E03               	movlw	high _swTimers
 40504  005DA4  20F4               	addwfc	prodh,w,c
 40505  005DA6  6EDA               	movwf	fsr2h,c
 40506  005DA8  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 40507  005DAA  5EDE               	subwf	postinc2,f,c
 40508  005DAC  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 40509  005DAE  5ADE               	subwfb	postinc2,f,c
 40510  005DB0  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 40511  005DB2  5ADE               	subwfb	postinc2,f,c
 40512  005DB4  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 40513  005DB6  5ADE               	subwfb	postinc2,f,c
 40514                           
 40515                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 40516  005DB8  5031               	movf	i2SwTimersInterrupt@i,w,c
 40517  005DBA  0D08               	mullw	8
 40518  005DBC  0E00               	movlw	low _swTimers
 40519  005DBE  24F3               	addwf	prodl,w,c
 40520  005DC0  6ED9               	movwf	fsr2l,c
 40521  005DC2  0E03               	movlw	high _swTimers
 40522  005DC4  20F4               	addwfc	prodh,w,c
 40523  005DC6  6EDA               	movwf	fsr2h,c
 40524  005DC8  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 40525  005DCA  5CDE               	subwf	postinc2,w,c
 40526  005DCC  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 40527  005DCE  58DE               	subwfb	postinc2,w,c
 40528  005DD0  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 40529  005DD2  58DE               	subwfb	postinc2,w,c
 40530  005DD4  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 40531  005DD6  58DE               	subwfb	postinc2,w,c
 40532  005DD8  B0D8               	btfsc	status,0,c
 40533  005DDA  D010               	goto	i2l333
 40534                           
 40535                           ;sw_timer.c: 313: {
 40536                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 40537  005DDC  5031               	movf	i2SwTimersInterrupt@i,w,c
 40538  005DDE  0D08               	mullw	8
 40539  005DE0  0E00               	movlw	low _swTimers
 40540  005DE2  24F3               	addwf	prodl,w,c
 40541  005DE4  6ED9               	movwf	fsr2l,c
 40542  005DE6  0E03               	movlw	high _swTimers
 40543  005DE8  20F4               	addwfc	prodh,w,c
 40544  005DEA  6EDA               	movwf	fsr2h,c
 40545  005DEC  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 40546  005DF0  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 40547  005DF4  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 40548  005DF8  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 40549  005DFC                     i2l333:
 40550  005DFC  2A31               	incf	i2SwTimersInterrupt@i,f,c
 40551  005DFE                     i2l328:
 40552  005DFE  0100               	movlb	0	; () banked
 40553  005E00  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 40554  005E02  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 40555  005E04  A0D8               	btfss	status,0,c
 40556  005E06  D79A               	goto	i2l329
 40557                           
 40558                           ; BSR set to: 0
 40559                           ;sw_timer.c: 315: }
 40560                           ;sw_timer.c: 316: }
 40561                           ;sw_timer.c: 317: }
 40562                           ;sw_timer.c: 318: }
 40563                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 40564  005E08  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 40565  005E0C  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 40566  005E10  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 40567  005E14  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 40568                           
 40569                           ; BSR set to: 0
 40570  005E18  0012               	return		;funcret
 40571  005E1A                     __end_ofi2_SwTimersInterrupt:
 40572                           	opt stack 0
 40573                           tosu	equ	0xFFF
 40574                           tosh	equ	0xFFE
 40575                           tosl	equ	0xFFD
 40576                           pclatu	equ	0xFFB
 40577                           pclath	equ	0xFFA
 40578                           tblptru	equ	0xFF8
 40579                           tblptrh	equ	0xFF7
 40580                           tblptrl	equ	0xFF6
 40581                           tablat	equ	0xFF5
 40582                           prodh	equ	0xFF4
 40583                           prodl	equ	0xFF3
 40584                           intcon	equ	0xFF2
 40585                           intcon2	equ	0xFF1
 40586                           intcon3	equ	0xFF0
 40587                           indf0	equ	0xFEF
 40588                           postinc0	equ	0xFEE
 40589                           plusw0	equ	0xFEB
 40590                           fsr0h	equ	0xFEA
 40591                           fsr0l	equ	0xFE9
 40592                           wreg	equ	0xFE8
 40593                           postinc1	equ	0xFE6
 40594                           postdec1	equ	0xFE5
 40595                           plusw1	equ	0xFE3
 40596                           fsr1h	equ	0xFE2
 40597                           fsr1l	equ	0xFE1
 40598                           indf2	equ	0xFDF
 40599                           postinc2	equ	0xFDE
 40600                           postdec2	equ	0xFDD
 40601                           plusw2	equ	0xFDB
 40602                           fsr2h	equ	0xFDA
 40603                           fsr2l	equ	0xFD9
 40604                           status	equ	0xFD8
 40605                           
 40606 ;; *************** function i2_TMR_GetDeltaTime *****************
 40607 ;; Defined at:
 40608 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40609 ;; Parameters:    Size  Location     Type
 40610 ;;		None
 40611 ;; Auto vars:     Size  Location     Type
 40612 ;;		None
 40613 ;; Return value:  Size  Location     Type
 40614 ;;                  4    8[COMRAM] unsigned long 
 40615 ;; Registers used:
 40616 ;;		wreg, status,2, status,0, cstack
 40617 ;; Tracked objects:
 40618 ;;		On entry : 0/0
 40619 ;;		On exit  : 0/0
 40620 ;;		Unchanged: 0/0
 40621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40624 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40625 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40626 ;;Total ram usage:       24 bytes
 40627 ;; Hardware stack levels used:    1
 40628 ;; Hardware stack levels required when called:    1
 40629 ;; This function calls:
 40630 ;;		i2_TMR1_ReadTimer
 40631 ;; This function is called by:
 40632 ;;		i2_SwTimersInterrupt
 40633 ;; This function uses a non-reentrant model
 40634 ;;
 40635                           
 40636                           	psect	text199
 40637  004E10                     __ptext199:
 40638                           	opt stack 0
 40639  004E10                     i2_TMR_GetDeltaTime:
 40640                           	opt stack 12
 40641                           
 40642                           ;sw_timer.c: 90: static uint32_t retVal;
 40643                           ;sw_timer.c: 91: static uint16_t tmrVal;
 40644                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 40645                           
 40646                           ; BSR set to: 0
 40647                           ;incstack = 0
 40648  004E10  EC63  F044         	call	i2_TMR1_ReadTimer	;wreg free
 40649  004E14  C001  F175         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 40650  004E18  C002  F176         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 40651                           
 40652                           ;sw_timer.c: 95: if (timerOverflow == 1)
 40653  004E1C  0447               	decf	_timerOverflow,w,c	;volatile
 40654  004E1E  A4D8               	btfss	status,2,c
 40655  004E20  D066               	goto	i2l261
 40656                           
 40657                           ;sw_timer.c: 96: {
 40658                           ;sw_timer.c: 97: timerOverflow = 0;
 40659  004E22  0E00               	movlw	0
 40660  004E24  6E47               	movwf	_timerOverflow,c	;volatile
 40661                           
 40662                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 40663  004E26  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 40664  004E2A  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 40665  004E2E  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 40666  004E32  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 40667  004E36  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 40668  004E38  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 40669  004E3A  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 40670  004E3C  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 40671  004E3E  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 40672  004E40  0E00               	movlw	0
 40673  004E42  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 40674  004E44  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 40675  004E46  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 40676  004E48  5044               	movf	_reloadVal,w,c	;volatile
 40677  004E4A  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 40678  004E4C  5045               	movf	_reloadVal+1,w,c	;volatile
 40679  004E4E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 40680  004E50  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 40681  004E52  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 40682  004E54  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 40683  004E56  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 40684  004E58  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 40685  004E5A  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 40686  004E5C  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 40687  004E5E  0E00               	movlw	0
 40688  004E60  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 40689  004E62  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 40690  004E64  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 40691  004E66  0101               	movlb	1	; () banked
 40692  004E68  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40693  004E6A  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 40694  004E6C  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 40695  004E6E  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40696  004E70  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 40697  004E72  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 40698  004E74  0E00               	movlw	0
 40699  004E76  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 40700  004E78  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 40701  004E7A  0E00               	movlw	0
 40702  004E7C  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 40703  004E7E  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 40704  004E80  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 40705  004E82  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 40706  004E84  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 40707  004E86  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 40708  004E88  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 40709  004E8A  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 40710  004E8C  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 40711  004E8E  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 40712  004E90  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 40713  004E92  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 40714  004E94  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 40715  004E96  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 40716  004E98  5040               	movf	_ticksAdded,w,c	;volatile
 40717  004E9A  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 40718  004E9C  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 40719  004E9E  5041               	movf	_ticksAdded+1,w,c	;volatile
 40720  004EA0  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 40721  004EA2  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 40722  004EA4  5042               	movf	_ticksAdded+2,w,c	;volatile
 40723  004EA6  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 40724  004EA8  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 40725  004EAA  5043               	movf	_ticksAdded+3,w,c	;volatile
 40726  004EAC  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 40727  004EAE  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 40728  004EB0  0E00               	movlw	0
 40729  004EB2  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 40730  004EB4  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40731  004EB6  0E00               	movlw	0
 40732  004EB8  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 40733  004EBA  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40734  004EBC  0E01               	movlw	1
 40735  004EBE  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 40736  004EC0  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40737  004EC2  0E00               	movlw	0
 40738  004EC4  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 40739  004EC6  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40740                           
 40741                           ; BSR set to: 1
 40742                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 40743  004EC8  C175  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 40744  004ECC  C176  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 40745  004ED0  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 40746  004ED2  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 40747                           
 40748                           ; BSR set to: 1
 40749                           ;sw_timer.c: 100: ticksAdded = 0;
 40750  004ED4  0E00               	movlw	0
 40751  004ED6  6E40               	movwf	_ticksAdded,c	;volatile
 40752  004ED8  0E00               	movlw	0
 40753  004EDA  6E41               	movwf	_ticksAdded+1,c	;volatile
 40754  004EDC  0E00               	movlw	0
 40755  004EDE  6E42               	movwf	_ticksAdded+2,c	;volatile
 40756  004EE0  0E00               	movlw	0
 40757  004EE2  6E43               	movwf	_ticksAdded+3,c	;volatile
 40758                           
 40759                           ; BSR set to: 1
 40760                           ;sw_timer.c: 101: reloadVal = 0;
 40761  004EE4  0E00               	movlw	0
 40762  004EE6  6E45               	movwf	_reloadVal+1,c	;volatile
 40763  004EE8  0E00               	movlw	0
 40764  004EEA  6E44               	movwf	_reloadVal,c	;volatile
 40765                           
 40766                           ;sw_timer.c: 102: }
 40767  004EEC  D03E               	goto	i2l262
 40768  004EEE                     i2l261:
 40769                           
 40770                           ;sw_timer.c: 103: else
 40771                           ;sw_timer.c: 104: {
 40772                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 40773                           
 40774                           ; BSR set to: 1
 40775  004EEE  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 40776  004EF2  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 40777  004EF6  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 40778  004EFA  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 40779  004EFE  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 40780  004F00  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 40781  004F02  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 40782  004F04  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 40783  004F06  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 40784  004F08  0E00               	movlw	0
 40785  004F0A  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 40786  004F0C  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 40787  004F0E  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 40788  004F10  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 40789  004F14  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 40790  004F18  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 40791  004F1A  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 40792  004F1C  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 40793  004F1E  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 40794  004F20  0101               	movlb	1	; () banked
 40795  004F22  5175               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 40796  004F24  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 40797  004F26  5176               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 40798  004F28  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 40799  004F2A  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 40800  004F2C  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 40801  004F2E  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 40802  004F30  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 40803  004F32  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 40804  004F34  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 40805  004F36  0E00               	movlw	0
 40806  004F38  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 40807  004F3A  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 40808  004F3C  0E00               	movlw	0
 40809  004F3E  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 40810  004F40  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 40811  004F42  5040               	movf	_ticksAdded,w,c	;volatile
 40812  004F44  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 40813  004F46  6F6D               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 40814  004F48  5041               	movf	_ticksAdded+1,w,c	;volatile
 40815  004F4A  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 40816  004F4C  6F6E               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 40817  004F4E  5042               	movf	_ticksAdded+2,w,c	;volatile
 40818  004F50  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 40819  004F52  6F6F               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 40820  004F54  5043               	movf	_ticksAdded+3,w,c	;volatile
 40821  004F56  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 40822  004F58  6F70               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 40823                           
 40824                           ;sw_timer.c: 106: ticksAccounted += retVal;
 40825  004F5A  516D               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 40826  004F5C  263C               	addwf	_ticksAccounted,f,c	;volatile
 40827  004F5E  516E               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 40828  004F60  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 40829  004F62  516F               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 40830  004F64  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 40831  004F66  5170               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 40832  004F68  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 40833  004F6A                     i2l262:
 40834                           
 40835                           ; BSR set to: 1
 40836                           ;sw_timer.c: 107: }
 40837                           ;sw_timer.c: 109: return retVal;
 40838                           
 40839                           ; BSR set to: 1
 40840  004F6A  C16D  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 40841  004F6E  C16E  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 40842  004F72  C16F  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 40843  004F76  C170  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 40844  004F7A  0012               	return	
 40845  004F7C                     __end_ofi2_TMR_GetDeltaTime:
 40846                           	opt stack 0
 40847                           tosu	equ	0xFFF
 40848                           tosh	equ	0xFFE
 40849                           tosl	equ	0xFFD
 40850                           pclatu	equ	0xFFB
 40851                           pclath	equ	0xFFA
 40852                           tblptru	equ	0xFF8
 40853                           tblptrh	equ	0xFF7
 40854                           tblptrl	equ	0xFF6
 40855                           tablat	equ	0xFF5
 40856                           prodh	equ	0xFF4
 40857                           prodl	equ	0xFF3
 40858                           intcon	equ	0xFF2
 40859                           intcon2	equ	0xFF1
 40860                           intcon3	equ	0xFF0
 40861                           indf0	equ	0xFEF
 40862                           postinc0	equ	0xFEE
 40863                           plusw0	equ	0xFEB
 40864                           fsr0h	equ	0xFEA
 40865                           fsr0l	equ	0xFE9
 40866                           wreg	equ	0xFE8
 40867                           postinc1	equ	0xFE6
 40868                           postdec1	equ	0xFE5
 40869                           plusw1	equ	0xFE3
 40870                           fsr1h	equ	0xFE2
 40871                           fsr1l	equ	0xFE1
 40872                           indf2	equ	0xFDF
 40873                           postinc2	equ	0xFDE
 40874                           postdec2	equ	0xFDD
 40875                           plusw2	equ	0xFDB
 40876                           fsr2h	equ	0xFDA
 40877                           fsr2l	equ	0xFD9
 40878                           status	equ	0xFD8
 40879                           
 40880 ;; *************** function i2_TMR1_ReadTimer *****************
 40881 ;; Defined at:
 40882 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 40883 ;; Parameters:    Size  Location     Type
 40884 ;;		None
 40885 ;; Auto vars:     Size  Location     Type
 40886 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 40887 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 40888 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 40889 ;; Return value:  Size  Location     Type
 40890 ;;                  2    0[COMRAM] unsigned int 
 40891 ;; Registers used:
 40892 ;;		wreg, status,2
 40893 ;; Tracked objects:
 40894 ;;		On entry : 0/0
 40895 ;;		On exit  : 0/0
 40896 ;;		Unchanged: 0/0
 40897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40899 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40901 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40902 ;;Total ram usage:        8 bytes
 40903 ;; Hardware stack levels used:    1
 40904 ;; This function calls:
 40905 ;;		Nothing
 40906 ;; This function is called by:
 40907 ;;		i2_TMR_GetDeltaTime
 40908 ;;		i2_TMR_SwapTimer
 40909 ;; This function uses a non-reentrant model
 40910 ;;
 40911                           
 40912                           	psect	text200
 40913  0088C6                     __ptext200:
 40914                           	opt stack 0
 40915  0088C6                     i2_TMR1_ReadTimer:
 40916                           	opt stack 13
 40917                           
 40918                           ;tmr1.c: 107: uint16_t readVal;
 40919                           ;tmr1.c: 108: uint8_t readValHigh;
 40920                           ;tmr1.c: 109: uint8_t readValLow;
 40921                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 40922                           
 40923                           ; BSR set to: 1
 40924                           ;incstack = 0
 40925  0088C6  82CD               	bsf	4045,1,c	;volatile
 40926                           
 40927                           ;tmr1.c: 113: readValLow = TMR1L;
 40928  0088C8  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 40929                           
 40930                           ;tmr1.c: 114: readValHigh = TMR1H;
 40931  0088CC  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 40932                           
 40933                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 40934  0088D0  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 40935  0088D2  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 40936  0088D4  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 40937  0088D6  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 40938  0088D8  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 40939                           
 40940                           ;tmr1.c: 118: return readVal;
 40941  0088DC  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 40942  0088E0  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 40943  0088E4  0012               	return	
 40944  0088E6                     __end_ofi2_TMR1_ReadTimer:
 40945                           	opt stack 0
 40946                           tosu	equ	0xFFF
 40947                           tosh	equ	0xFFE
 40948                           tosl	equ	0xFFD
 40949                           pclatu	equ	0xFFB
 40950                           pclath	equ	0xFFA
 40951                           tblptru	equ	0xFF8
 40952                           tblptrh	equ	0xFF7
 40953                           tblptrl	equ	0xFF6
 40954                           tablat	equ	0xFF5
 40955                           prodh	equ	0xFF4
 40956                           prodl	equ	0xFF3
 40957                           intcon	equ	0xFF2
 40958                           intcon2	equ	0xFF1
 40959                           intcon3	equ	0xFF0
 40960                           indf0	equ	0xFEF
 40961                           postinc0	equ	0xFEE
 40962                           plusw0	equ	0xFEB
 40963                           fsr0h	equ	0xFEA
 40964                           fsr0l	equ	0xFE9
 40965                           wreg	equ	0xFE8
 40966                           postinc1	equ	0xFE6
 40967                           postdec1	equ	0xFE5
 40968                           plusw1	equ	0xFE3
 40969                           fsr1h	equ	0xFE2
 40970                           fsr1l	equ	0xFE1
 40971                           indf2	equ	0xFDF
 40972                           postinc2	equ	0xFDE
 40973                           postdec2	equ	0xFDD
 40974                           plusw2	equ	0xFDB
 40975                           fsr2h	equ	0xFDA
 40976                           fsr2l	equ	0xFD9
 40977                           status	equ	0xFD8
 40978                           
 40979 ;; *************** function _PIN_MANAGER_IOC *****************
 40980 ;; Defined at:
 40981 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 40982 ;; Parameters:    Size  Location     Type
 40983 ;;		None
 40984 ;; Auto vars:     Size  Location     Type
 40985 ;;		None
 40986 ;; Return value:  Size  Location     Type
 40987 ;;                  1    wreg      void 
 40988 ;; Registers used:
 40989 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40990 ;; Tracked objects:
 40991 ;;		On entry : 0/0
 40992 ;;		On exit  : 0/0
 40993 ;;		Unchanged: 0/0
 40994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40999 ;;Total ram usage:        0 bytes
 41000 ;; Hardware stack levels used:    1
 41001 ;; Hardware stack levels required when called:    2
 41002 ;; This function calls:
 41003 ;;		_IOCB4_ISR
 41004 ;; This function is called by:
 41005 ;;		_INTERRUPT_InterruptManager
 41006 ;; This function uses a non-reentrant model
 41007 ;;
 41008                           
 41009                           	psect	text201
 41010  008BE8                     __ptext201:
 41011                           	opt stack 0
 41012  008BE8                     _PIN_MANAGER_IOC:
 41013                           	opt stack 15
 41014                           
 41015                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 41016                           
 41017                           ;incstack = 0
 41018  008BE8  B862               	btfsc	3938,4,c	;volatile
 41019                           
 41020                           ;pin_manager.c: 114: {
 41021                           ;pin_manager.c: 115: IOCB4_ISR();
 41022  008BEA  EC73  F044         	call	_IOCB4_ISR	;wreg free
 41023                           
 41024                           ;pin_manager.c: 116: }
 41025                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 41026  008BEE  90F2               	bcf	intcon,0,c	;volatile
 41027  008BF0  0012               	return		;funcret
 41028  008BF2                     __end_of_PIN_MANAGER_IOC:
 41029                           	opt stack 0
 41030                           tosu	equ	0xFFF
 41031                           tosh	equ	0xFFE
 41032                           tosl	equ	0xFFD
 41033                           pclatu	equ	0xFFB
 41034                           pclath	equ	0xFFA
 41035                           tblptru	equ	0xFF8
 41036                           tblptrh	equ	0xFF7
 41037                           tblptrl	equ	0xFF6
 41038                           tablat	equ	0xFF5
 41039                           prodh	equ	0xFF4
 41040                           prodl	equ	0xFF3
 41041                           intcon	equ	0xFF2
 41042                           intcon2	equ	0xFF1
 41043                           intcon3	equ	0xFF0
 41044                           indf0	equ	0xFEF
 41045                           postinc0	equ	0xFEE
 41046                           plusw0	equ	0xFEB
 41047                           fsr0h	equ	0xFEA
 41048                           fsr0l	equ	0xFE9
 41049                           wreg	equ	0xFE8
 41050                           postinc1	equ	0xFE6
 41051                           postdec1	equ	0xFE5
 41052                           plusw1	equ	0xFE3
 41053                           fsr1h	equ	0xFE2
 41054                           fsr1l	equ	0xFE1
 41055                           indf2	equ	0xFDF
 41056                           postinc2	equ	0xFDE
 41057                           postdec2	equ	0xFDD
 41058                           plusw2	equ	0xFDB
 41059                           fsr2h	equ	0xFDA
 41060                           fsr2l	equ	0xFD9
 41061                           status	equ	0xFD8
 41062                           
 41063 ;; *************** function _IOCB4_ISR *****************
 41064 ;; Defined at:
 41065 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 41066 ;; Parameters:    Size  Location     Type
 41067 ;;		None
 41068 ;; Auto vars:     Size  Location     Type
 41069 ;;		None
 41070 ;; Return value:  Size  Location     Type
 41071 ;;                  1    wreg      void 
 41072 ;; Registers used:
 41073 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41074 ;; Tracked objects:
 41075 ;;		On entry : 0/0
 41076 ;;		On exit  : 0/0
 41077 ;;		Unchanged: 0/0
 41078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41083 ;;Total ram usage:        0 bytes
 41084 ;; Hardware stack levels used:    1
 41085 ;; Hardware stack levels required when called:    1
 41086 ;; This function calls:
 41087 ;;		Absolute function
 41088 ;;		_DIO2_ISR_Lora
 41089 ;;		_IOCB4_DefaultInterruptHandler
 41090 ;; This function is called by:
 41091 ;;		_PIN_MANAGER_IOC
 41092 ;; This function uses a non-reentrant model
 41093 ;;
 41094                           
 41095                           	psect	text202
 41096  0088E6                     __ptext202:
 41097                           	opt stack 0
 41098  0088E6                     _IOCB4_ISR:
 41099                           	opt stack 15
 41100                           
 41101                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 41102                           
 41103                           ;incstack = 0
 41104  0088E6  0101               	movlb	1	; () banked
 41105  0088E8  51EC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41106  0088EA  11ED               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41107  0088EC  B4D8               	btfsc	status,2,c
 41108  0088EE  0012               	return	
 41109                           
 41110                           ; BSR set to: 1
 41111                           ;pin_manager.c: 130: {
 41112                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 41113  0088F0  D801               	call	i2u2160_48
 41114  0088F2  0012               	return	
 41115  0088F4                     i2u2160_48:
 41116  0088F4  0005               	push	
 41117  0088F6  6EFA               	movwf	pclath,c
 41118  0088F8  51EC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 41119  0088FA  6EFD               	movwf	tosl,c
 41120  0088FC  51ED               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 41121  0088FE  6EFE               	movwf	tosh,c
 41122  008900  6AFF               	clrf	tosu,c
 41123  008902  50FA               	movf	pclath,w,c
 41124  008904  0012               	return		;indir
 41125  008906                     __end_of_IOCB4_ISR:
 41126                           	opt stack 0
 41127                           tosu	equ	0xFFF
 41128                           tosh	equ	0xFFE
 41129                           tosl	equ	0xFFD
 41130                           pclatu	equ	0xFFB
 41131                           pclath	equ	0xFFA
 41132                           tblptru	equ	0xFF8
 41133                           tblptrh	equ	0xFF7
 41134                           tblptrl	equ	0xFF6
 41135                           tablat	equ	0xFF5
 41136                           prodh	equ	0xFF4
 41137                           prodl	equ	0xFF3
 41138                           intcon	equ	0xFF2
 41139                           intcon2	equ	0xFF1
 41140                           intcon3	equ	0xFF0
 41141                           indf0	equ	0xFEF
 41142                           postinc0	equ	0xFEE
 41143                           plusw0	equ	0xFEB
 41144                           fsr0h	equ	0xFEA
 41145                           fsr0l	equ	0xFE9
 41146                           wreg	equ	0xFE8
 41147                           postinc1	equ	0xFE6
 41148                           postdec1	equ	0xFE5
 41149                           plusw1	equ	0xFE3
 41150                           fsr1h	equ	0xFE2
 41151                           fsr1l	equ	0xFE1
 41152                           indf2	equ	0xFDF
 41153                           postinc2	equ	0xFDE
 41154                           postdec2	equ	0xFDD
 41155                           plusw2	equ	0xFDB
 41156                           fsr2h	equ	0xFDA
 41157                           fsr2l	equ	0xFD9
 41158                           status	equ	0xFD8
 41159                           
 41160 ;; *************** function _DIO2_ISR_Lora *****************
 41161 ;; Defined at:
 41162 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41163 ;; Parameters:    Size  Location     Type
 41164 ;;		None
 41165 ;; Auto vars:     Size  Location     Type
 41166 ;;		None
 41167 ;; Return value:  Size  Location     Type
 41168 ;;                  1    wreg      void 
 41169 ;; Registers used:
 41170 ;;		status,2, status,0
 41171 ;; Tracked objects:
 41172 ;;		On entry : 0/0
 41173 ;;		On exit  : 0/0
 41174 ;;		Unchanged: 0/0
 41175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41180 ;;Total ram usage:        0 bytes
 41181 ;; Hardware stack levels used:    1
 41182 ;; This function calls:
 41183 ;;		Nothing
 41184 ;; This function is called by:
 41185 ;;		_DIO2_ISR_Lora_Init
 41186 ;;		_IOCB4_ISR
 41187 ;; This function uses a non-reentrant model
 41188 ;;
 41189                           
 41190                           	psect	text203
 41191  008C1C                     __ptext203:
 41192                           	opt stack 0
 41193  008C1C                     _DIO2_ISR_Lora:
 41194                           	opt stack 15
 41195                           
 41196                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 41197                           
 41198                           ;incstack = 0
 41199  008C1C  0101               	movlb	1	; () banked
 41200  008C1E  8579               	bsf	_dioStatus& (0+255),2,b	;volatile
 41201                           
 41202                           ; BSR set to: 1
 41203  008C20  0012               	return		;funcret
 41204  008C22                     __end_of_DIO2_ISR_Lora:
 41205                           	opt stack 0
 41206                           tosu	equ	0xFFF
 41207                           tosh	equ	0xFFE
 41208                           tosl	equ	0xFFD
 41209                           pclatu	equ	0xFFB
 41210                           pclath	equ	0xFFA
 41211                           tblptru	equ	0xFF8
 41212                           tblptrh	equ	0xFF7
 41213                           tblptrl	equ	0xFF6
 41214                           tablat	equ	0xFF5
 41215                           prodh	equ	0xFF4
 41216                           prodl	equ	0xFF3
 41217                           intcon	equ	0xFF2
 41218                           intcon2	equ	0xFF1
 41219                           intcon3	equ	0xFF0
 41220                           indf0	equ	0xFEF
 41221                           postinc0	equ	0xFEE
 41222                           plusw0	equ	0xFEB
 41223                           fsr0h	equ	0xFEA
 41224                           fsr0l	equ	0xFE9
 41225                           wreg	equ	0xFE8
 41226                           postinc1	equ	0xFE6
 41227                           postdec1	equ	0xFE5
 41228                           plusw1	equ	0xFE3
 41229                           fsr1h	equ	0xFE2
 41230                           fsr1l	equ	0xFE1
 41231                           indf2	equ	0xFDF
 41232                           postinc2	equ	0xFDE
 41233                           postdec2	equ	0xFDD
 41234                           plusw2	equ	0xFDB
 41235                           fsr2h	equ	0xFDA
 41236                           fsr2l	equ	0xFD9
 41237                           status	equ	0xFD8
 41238                           
 41239 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 41240 ;; Defined at:
 41241 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 41242 ;; Parameters:    Size  Location     Type
 41243 ;;		None
 41244 ;; Auto vars:     Size  Location     Type
 41245 ;;		None
 41246 ;; Return value:  Size  Location     Type
 41247 ;;                  1    wreg      void 
 41248 ;; Registers used:
 41249 ;;		None
 41250 ;; Tracked objects:
 41251 ;;		On entry : 0/0
 41252 ;;		On exit  : 0/0
 41253 ;;		Unchanged: 0/0
 41254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41259 ;;Total ram usage:        0 bytes
 41260 ;; Hardware stack levels used:    1
 41261 ;; This function calls:
 41262 ;;		Nothing
 41263 ;; This function is called by:
 41264 ;;		_PIN_MANAGER_Initialize
 41265 ;;		_IOCB4_ISR
 41266 ;; This function uses a non-reentrant model
 41267 ;;
 41268                           
 41269                           	psect	text204
 41270  008C52                     __ptext204:
 41271                           	opt stack 0
 41272  008C52                     _IOCB4_DefaultInterruptHandler:
 41273                           	opt stack 15
 41274                           
 41275                           ; BSR set to: 1
 41276                           ;incstack = 0
 41277  008C52  0012               	return		;funcret
 41278  008C54                     __end_of_IOCB4_DefaultInterruptHandler:
 41279                           	opt stack 0
 41280                           tosu	equ	0xFFF
 41281                           tosh	equ	0xFFE
 41282                           tosl	equ	0xFFD
 41283                           pclatu	equ	0xFFB
 41284                           pclath	equ	0xFFA
 41285                           tblptru	equ	0xFF8
 41286                           tblptrh	equ	0xFF7
 41287                           tblptrl	equ	0xFF6
 41288                           tablat	equ	0xFF5
 41289                           prodh	equ	0xFF4
 41290                           prodl	equ	0xFF3
 41291                           intcon	equ	0xFF2
 41292                           intcon2	equ	0xFF1
 41293                           intcon3	equ	0xFF0
 41294                           indf0	equ	0xFEF
 41295                           postinc0	equ	0xFEE
 41296                           plusw0	equ	0xFEB
 41297                           fsr0h	equ	0xFEA
 41298                           fsr0l	equ	0xFE9
 41299                           wreg	equ	0xFE8
 41300                           postinc1	equ	0xFE6
 41301                           postdec1	equ	0xFE5
 41302                           plusw1	equ	0xFE3
 41303                           fsr1h	equ	0xFE2
 41304                           fsr1l	equ	0xFE1
 41305                           indf2	equ	0xFDF
 41306                           postinc2	equ	0xFDE
 41307                           postdec2	equ	0xFDD
 41308                           plusw2	equ	0xFDB
 41309                           fsr2h	equ	0xFDA
 41310                           fsr2l	equ	0xFD9
 41311                           status	equ	0xFD8
 41312                           
 41313 ;; *************** function _INT2_ISR *****************
 41314 ;; Defined at:
 41315 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 41316 ;; Parameters:    Size  Location     Type
 41317 ;;		None
 41318 ;; Auto vars:     Size  Location     Type
 41319 ;;		None
 41320 ;; Return value:  Size  Location     Type
 41321 ;;                  1    wreg      void 
 41322 ;; Registers used:
 41323 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41324 ;; Tracked objects:
 41325 ;;		On entry : 0/0
 41326 ;;		On exit  : 0/0
 41327 ;;		Unchanged: 0/0
 41328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41333 ;;Total ram usage:        0 bytes
 41334 ;; Hardware stack levels used:    1
 41335 ;; Hardware stack levels required when called:    2
 41336 ;; This function calls:
 41337 ;;		_INT2_CallBack
 41338 ;; This function is called by:
 41339 ;;		_INTERRUPT_InterruptManager
 41340 ;; This function uses a non-reentrant model
 41341 ;;
 41342                           
 41343                           	psect	text205
 41344  008BFA                     __ptext205:
 41345                           	opt stack 0
 41346  008BFA                     _INT2_ISR:
 41347                           	opt stack 15
 41348                           
 41349                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 41350                           
 41351                           ;incstack = 0
 41352  008BFA  92F0               	bcf	intcon3,1,c	;volatile
 41353                           
 41354                           ;ext_int.c: 64: INT2_CallBack();
 41355  008BFC  EC83  F044         	call	_INT2_CallBack	;wreg free
 41356  008C00  0012               	return		;funcret
 41357  008C02                     __end_of_INT2_ISR:
 41358                           	opt stack 0
 41359                           tosu	equ	0xFFF
 41360                           tosh	equ	0xFFE
 41361                           tosl	equ	0xFFD
 41362                           pclatu	equ	0xFFB
 41363                           pclath	equ	0xFFA
 41364                           tblptru	equ	0xFF8
 41365                           tblptrh	equ	0xFF7
 41366                           tblptrl	equ	0xFF6
 41367                           tablat	equ	0xFF5
 41368                           prodh	equ	0xFF4
 41369                           prodl	equ	0xFF3
 41370                           intcon	equ	0xFF2
 41371                           intcon2	equ	0xFF1
 41372                           intcon3	equ	0xFF0
 41373                           indf0	equ	0xFEF
 41374                           postinc0	equ	0xFEE
 41375                           plusw0	equ	0xFEB
 41376                           fsr0h	equ	0xFEA
 41377                           fsr0l	equ	0xFE9
 41378                           wreg	equ	0xFE8
 41379                           postinc1	equ	0xFE6
 41380                           postdec1	equ	0xFE5
 41381                           plusw1	equ	0xFE3
 41382                           fsr1h	equ	0xFE2
 41383                           fsr1l	equ	0xFE1
 41384                           indf2	equ	0xFDF
 41385                           postinc2	equ	0xFDE
 41386                           postdec2	equ	0xFDD
 41387                           plusw2	equ	0xFDB
 41388                           fsr2h	equ	0xFDA
 41389                           fsr2l	equ	0xFD9
 41390                           status	equ	0xFD8
 41391                           
 41392 ;; *************** function _INT2_CallBack *****************
 41393 ;; Defined at:
 41394 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 41395 ;; Parameters:    Size  Location     Type
 41396 ;;		None
 41397 ;; Auto vars:     Size  Location     Type
 41398 ;;		None
 41399 ;; Return value:  Size  Location     Type
 41400 ;;                  1    wreg      void 
 41401 ;; Registers used:
 41402 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41403 ;; Tracked objects:
 41404 ;;		On entry : 0/0
 41405 ;;		On exit  : 0/0
 41406 ;;		Unchanged: 0/0
 41407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41412 ;;Total ram usage:        0 bytes
 41413 ;; Hardware stack levels used:    1
 41414 ;; Hardware stack levels required when called:    1
 41415 ;; This function calls:
 41416 ;;		Absolute function
 41417 ;;		_DIO1_ISR_Lora
 41418 ;;		_INT2_DefaultInterruptHandler
 41419 ;; This function is called by:
 41420 ;;		_INT2_ISR
 41421 ;; This function uses a non-reentrant model
 41422 ;;
 41423                           
 41424                           	psect	text206
 41425  008906                     __ptext206:
 41426                           	opt stack 0
 41427  008906                     _INT2_CallBack:
 41428                           	opt stack 15
 41429                           
 41430                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 41431                           
 41432                           ;incstack = 0
 41433  008906  0101               	movlb	1	; () banked
 41434  008908  51EE               	movf	_INT2_InterruptHandler& (0+255),w,b
 41435  00890A  11EF               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41436  00890C  B4D8               	btfsc	status,2,c
 41437  00890E  0012               	return	
 41438                           
 41439                           ; BSR set to: 1
 41440                           ;ext_int.c: 72: {
 41441                           ;ext_int.c: 73: INT2_InterruptHandler();
 41442  008910  D801               	call	i2u2158_48
 41443  008912  0012               	return	
 41444  008914                     i2u2158_48:
 41445  008914  0005               	push	
 41446  008916  6EFA               	movwf	pclath,c
 41447  008918  51EE               	movf	_INT2_InterruptHandler& (0+255),w,b
 41448  00891A  6EFD               	movwf	tosl,c
 41449  00891C  51EF               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 41450  00891E  6EFE               	movwf	tosh,c
 41451  008920  6AFF               	clrf	tosu,c
 41452  008922  50FA               	movf	pclath,w,c
 41453  008924  0012               	return		;indir
 41454  008926                     __end_of_INT2_CallBack:
 41455                           	opt stack 0
 41456                           tosu	equ	0xFFF
 41457                           tosh	equ	0xFFE
 41458                           tosl	equ	0xFFD
 41459                           pclatu	equ	0xFFB
 41460                           pclath	equ	0xFFA
 41461                           tblptru	equ	0xFF8
 41462                           tblptrh	equ	0xFF7
 41463                           tblptrl	equ	0xFF6
 41464                           tablat	equ	0xFF5
 41465                           prodh	equ	0xFF4
 41466                           prodl	equ	0xFF3
 41467                           intcon	equ	0xFF2
 41468                           intcon2	equ	0xFF1
 41469                           intcon3	equ	0xFF0
 41470                           indf0	equ	0xFEF
 41471                           postinc0	equ	0xFEE
 41472                           plusw0	equ	0xFEB
 41473                           fsr0h	equ	0xFEA
 41474                           fsr0l	equ	0xFE9
 41475                           wreg	equ	0xFE8
 41476                           postinc1	equ	0xFE6
 41477                           postdec1	equ	0xFE5
 41478                           plusw1	equ	0xFE3
 41479                           fsr1h	equ	0xFE2
 41480                           fsr1l	equ	0xFE1
 41481                           indf2	equ	0xFDF
 41482                           postinc2	equ	0xFDE
 41483                           postdec2	equ	0xFDD
 41484                           plusw2	equ	0xFDB
 41485                           fsr2h	equ	0xFDA
 41486                           fsr2l	equ	0xFD9
 41487                           status	equ	0xFD8
 41488                           
 41489 ;; *************** function _DIO1_ISR_Lora *****************
 41490 ;; Defined at:
 41491 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41492 ;; Parameters:    Size  Location     Type
 41493 ;;		None
 41494 ;; Auto vars:     Size  Location     Type
 41495 ;;		None
 41496 ;; Return value:  Size  Location     Type
 41497 ;;                  1    wreg      void 
 41498 ;; Registers used:
 41499 ;;		status,2, status,0
 41500 ;; Tracked objects:
 41501 ;;		On entry : 0/0
 41502 ;;		On exit  : 0/0
 41503 ;;		Unchanged: 0/0
 41504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41509 ;;Total ram usage:        0 bytes
 41510 ;; Hardware stack levels used:    1
 41511 ;; This function calls:
 41512 ;;		Nothing
 41513 ;; This function is called by:
 41514 ;;		_DIO1_ISR_Lora_Init
 41515 ;;		_INT2_CallBack
 41516 ;; This function uses a non-reentrant model
 41517 ;;
 41518                           
 41519                           	psect	text207
 41520  008C22                     __ptext207:
 41521                           	opt stack 0
 41522  008C22                     _DIO1_ISR_Lora:
 41523                           	opt stack 15
 41524                           
 41525                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 41526                           
 41527                           ;incstack = 0
 41528  008C22  0101               	movlb	1	; () banked
 41529  008C24  8379               	bsf	_dioStatus& (0+255),1,b	;volatile
 41530                           
 41531                           ; BSR set to: 1
 41532  008C26  0012               	return		;funcret
 41533  008C28                     __end_of_DIO1_ISR_Lora:
 41534                           	opt stack 0
 41535                           tosu	equ	0xFFF
 41536                           tosh	equ	0xFFE
 41537                           tosl	equ	0xFFD
 41538                           pclatu	equ	0xFFB
 41539                           pclath	equ	0xFFA
 41540                           tblptru	equ	0xFF8
 41541                           tblptrh	equ	0xFF7
 41542                           tblptrl	equ	0xFF6
 41543                           tablat	equ	0xFF5
 41544                           prodh	equ	0xFF4
 41545                           prodl	equ	0xFF3
 41546                           intcon	equ	0xFF2
 41547                           intcon2	equ	0xFF1
 41548                           intcon3	equ	0xFF0
 41549                           indf0	equ	0xFEF
 41550                           postinc0	equ	0xFEE
 41551                           plusw0	equ	0xFEB
 41552                           fsr0h	equ	0xFEA
 41553                           fsr0l	equ	0xFE9
 41554                           wreg	equ	0xFE8
 41555                           postinc1	equ	0xFE6
 41556                           postdec1	equ	0xFE5
 41557                           plusw1	equ	0xFE3
 41558                           fsr1h	equ	0xFE2
 41559                           fsr1l	equ	0xFE1
 41560                           indf2	equ	0xFDF
 41561                           postinc2	equ	0xFDE
 41562                           postdec2	equ	0xFDD
 41563                           plusw2	equ	0xFDB
 41564                           fsr2h	equ	0xFDA
 41565                           fsr2l	equ	0xFD9
 41566                           status	equ	0xFD8
 41567                           
 41568 ;; *************** function _INT2_DefaultInterruptHandler *****************
 41569 ;; Defined at:
 41570 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 41571 ;; Parameters:    Size  Location     Type
 41572 ;;		None
 41573 ;; Auto vars:     Size  Location     Type
 41574 ;;		None
 41575 ;; Return value:  Size  Location     Type
 41576 ;;                  1    wreg      void 
 41577 ;; Registers used:
 41578 ;;		None
 41579 ;; Tracked objects:
 41580 ;;		On entry : 0/0
 41581 ;;		On exit  : 0/0
 41582 ;;		Unchanged: 0/0
 41583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41588 ;;Total ram usage:        0 bytes
 41589 ;; Hardware stack levels used:    1
 41590 ;; This function calls:
 41591 ;;		Nothing
 41592 ;; This function is called by:
 41593 ;;		_EXT_INT_Initialize
 41594 ;;		_INT2_CallBack
 41595 ;; This function uses a non-reentrant model
 41596 ;;
 41597                           
 41598                           	psect	text208
 41599  008C54                     __ptext208:
 41600                           	opt stack 0
 41601  008C54                     _INT2_DefaultInterruptHandler:
 41602                           	opt stack 15
 41603                           
 41604                           ; BSR set to: 1
 41605                           ;incstack = 0
 41606  008C54  0012               	return		;funcret
 41607  008C56                     __end_of_INT2_DefaultInterruptHandler:
 41608                           	opt stack 0
 41609                           tosu	equ	0xFFF
 41610                           tosh	equ	0xFFE
 41611                           tosl	equ	0xFFD
 41612                           pclatu	equ	0xFFB
 41613                           pclath	equ	0xFFA
 41614                           tblptru	equ	0xFF8
 41615                           tblptrh	equ	0xFF7
 41616                           tblptrl	equ	0xFF6
 41617                           tablat	equ	0xFF5
 41618                           prodh	equ	0xFF4
 41619                           prodl	equ	0xFF3
 41620                           intcon	equ	0xFF2
 41621                           intcon2	equ	0xFF1
 41622                           intcon3	equ	0xFF0
 41623                           indf0	equ	0xFEF
 41624                           postinc0	equ	0xFEE
 41625                           plusw0	equ	0xFEB
 41626                           fsr0h	equ	0xFEA
 41627                           fsr0l	equ	0xFE9
 41628                           wreg	equ	0xFE8
 41629                           postinc1	equ	0xFE6
 41630                           postdec1	equ	0xFE5
 41631                           plusw1	equ	0xFE3
 41632                           fsr1h	equ	0xFE2
 41633                           fsr1l	equ	0xFE1
 41634                           indf2	equ	0xFDF
 41635                           postinc2	equ	0xFDE
 41636                           postdec2	equ	0xFDD
 41637                           plusw2	equ	0xFDB
 41638                           fsr2h	equ	0xFDA
 41639                           fsr2l	equ	0xFD9
 41640                           status	equ	0xFD8
 41641                           
 41642 ;; *************** function _INT1_ISR *****************
 41643 ;; Defined at:
 41644 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 41645 ;; Parameters:    Size  Location     Type
 41646 ;;		None
 41647 ;; Auto vars:     Size  Location     Type
 41648 ;;		None
 41649 ;; Return value:  Size  Location     Type
 41650 ;;                  1    wreg      void 
 41651 ;; Registers used:
 41652 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41653 ;; Tracked objects:
 41654 ;;		On entry : 0/0
 41655 ;;		On exit  : 0/0
 41656 ;;		Unchanged: 0/0
 41657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41662 ;;Total ram usage:        0 bytes
 41663 ;; Hardware stack levels used:    1
 41664 ;; Hardware stack levels required when called:    2
 41665 ;; This function calls:
 41666 ;;		_INT1_CallBack
 41667 ;; This function is called by:
 41668 ;;		_INTERRUPT_InterruptManager
 41669 ;; This function uses a non-reentrant model
 41670 ;;
 41671                           
 41672                           	psect	text209
 41673  008C02                     __ptext209:
 41674                           	opt stack 0
 41675  008C02                     _INT1_ISR:
 41676                           	opt stack 15
 41677                           
 41678                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 41679                           
 41680                           ;incstack = 0
 41681  008C02  90F0               	bcf	intcon3,0,c	;volatile
 41682                           
 41683                           ;ext_int.c: 38: INT1_CallBack();
 41684  008C04  EC93  F044         	call	_INT1_CallBack	;wreg free
 41685  008C08  0012               	return		;funcret
 41686  008C0A                     __end_of_INT1_ISR:
 41687                           	opt stack 0
 41688                           tosu	equ	0xFFF
 41689                           tosh	equ	0xFFE
 41690                           tosl	equ	0xFFD
 41691                           pclatu	equ	0xFFB
 41692                           pclath	equ	0xFFA
 41693                           tblptru	equ	0xFF8
 41694                           tblptrh	equ	0xFF7
 41695                           tblptrl	equ	0xFF6
 41696                           tablat	equ	0xFF5
 41697                           prodh	equ	0xFF4
 41698                           prodl	equ	0xFF3
 41699                           intcon	equ	0xFF2
 41700                           intcon2	equ	0xFF1
 41701                           intcon3	equ	0xFF0
 41702                           indf0	equ	0xFEF
 41703                           postinc0	equ	0xFEE
 41704                           plusw0	equ	0xFEB
 41705                           fsr0h	equ	0xFEA
 41706                           fsr0l	equ	0xFE9
 41707                           wreg	equ	0xFE8
 41708                           postinc1	equ	0xFE6
 41709                           postdec1	equ	0xFE5
 41710                           plusw1	equ	0xFE3
 41711                           fsr1h	equ	0xFE2
 41712                           fsr1l	equ	0xFE1
 41713                           indf2	equ	0xFDF
 41714                           postinc2	equ	0xFDE
 41715                           postdec2	equ	0xFDD
 41716                           plusw2	equ	0xFDB
 41717                           fsr2h	equ	0xFDA
 41718                           fsr2l	equ	0xFD9
 41719                           status	equ	0xFD8
 41720                           
 41721 ;; *************** function _INT1_CallBack *****************
 41722 ;; Defined at:
 41723 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 41724 ;; Parameters:    Size  Location     Type
 41725 ;;		None
 41726 ;; Auto vars:     Size  Location     Type
 41727 ;;		None
 41728 ;; Return value:  Size  Location     Type
 41729 ;;                  1    wreg      void 
 41730 ;; Registers used:
 41731 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41732 ;; Tracked objects:
 41733 ;;		On entry : 0/0
 41734 ;;		On exit  : 0/0
 41735 ;;		Unchanged: 0/0
 41736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41741 ;;Total ram usage:        0 bytes
 41742 ;; Hardware stack levels used:    1
 41743 ;; Hardware stack levels required when called:    1
 41744 ;; This function calls:
 41745 ;;		Absolute function
 41746 ;;		_DIO0_ISR_Lora
 41747 ;;		_INT1_DefaultInterruptHandler
 41748 ;; This function is called by:
 41749 ;;		_INT1_ISR
 41750 ;; This function uses a non-reentrant model
 41751 ;;
 41752                           
 41753                           	psect	text210
 41754  008926                     __ptext210:
 41755                           	opt stack 0
 41756  008926                     _INT1_CallBack:
 41757                           	opt stack 15
 41758                           
 41759                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 41760                           
 41761                           ;incstack = 0
 41762  008926  0101               	movlb	1	; () banked
 41763  008928  51F0               	movf	_INT1_InterruptHandler& (0+255),w,b
 41764  00892A  11F1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 41765  00892C  B4D8               	btfsc	status,2,c
 41766  00892E  0012               	return	
 41767                           
 41768                           ; BSR set to: 1
 41769                           ;ext_int.c: 46: {
 41770                           ;ext_int.c: 47: INT1_InterruptHandler();
 41771  008930  D801               	call	i2u2156_48
 41772  008932  0012               	return	
 41773  008934                     i2u2156_48:
 41774  008934  0005               	push	
 41775  008936  6EFA               	movwf	pclath,c
 41776  008938  51F0               	movf	_INT1_InterruptHandler& (0+255),w,b
 41777  00893A  6EFD               	movwf	tosl,c
 41778  00893C  51F1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 41779  00893E  6EFE               	movwf	tosh,c
 41780  008940  6AFF               	clrf	tosu,c
 41781  008942  50FA               	movf	pclath,w,c
 41782  008944  0012               	return		;indir
 41783  008946                     __end_of_INT1_CallBack:
 41784                           	opt stack 0
 41785                           tosu	equ	0xFFF
 41786                           tosh	equ	0xFFE
 41787                           tosl	equ	0xFFD
 41788                           pclatu	equ	0xFFB
 41789                           pclath	equ	0xFFA
 41790                           tblptru	equ	0xFF8
 41791                           tblptrh	equ	0xFF7
 41792                           tblptrl	equ	0xFF6
 41793                           tablat	equ	0xFF5
 41794                           prodh	equ	0xFF4
 41795                           prodl	equ	0xFF3
 41796                           intcon	equ	0xFF2
 41797                           intcon2	equ	0xFF1
 41798                           intcon3	equ	0xFF0
 41799                           indf0	equ	0xFEF
 41800                           postinc0	equ	0xFEE
 41801                           plusw0	equ	0xFEB
 41802                           fsr0h	equ	0xFEA
 41803                           fsr0l	equ	0xFE9
 41804                           wreg	equ	0xFE8
 41805                           postinc1	equ	0xFE6
 41806                           postdec1	equ	0xFE5
 41807                           plusw1	equ	0xFE3
 41808                           fsr1h	equ	0xFE2
 41809                           fsr1l	equ	0xFE1
 41810                           indf2	equ	0xFDF
 41811                           postinc2	equ	0xFDE
 41812                           postdec2	equ	0xFDD
 41813                           plusw2	equ	0xFDB
 41814                           fsr2h	equ	0xFDA
 41815                           fsr2l	equ	0xFD9
 41816                           status	equ	0xFD8
 41817                           
 41818 ;; *************** function _DIO0_ISR_Lora *****************
 41819 ;; Defined at:
 41820 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 41821 ;; Parameters:    Size  Location     Type
 41822 ;;		None
 41823 ;; Auto vars:     Size  Location     Type
 41824 ;;		None
 41825 ;; Return value:  Size  Location     Type
 41826 ;;                  1    wreg      void 
 41827 ;; Registers used:
 41828 ;;		status,2, status,0
 41829 ;; Tracked objects:
 41830 ;;		On entry : 0/0
 41831 ;;		On exit  : 0/0
 41832 ;;		Unchanged: 0/0
 41833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41838 ;;Total ram usage:        0 bytes
 41839 ;; Hardware stack levels used:    1
 41840 ;; This function calls:
 41841 ;;		Nothing
 41842 ;; This function is called by:
 41843 ;;		_DIO0_ISR_Lora_Init
 41844 ;;		_INT1_CallBack
 41845 ;; This function uses a non-reentrant model
 41846 ;;
 41847                           
 41848                           	psect	text211
 41849  008C28                     __ptext211:
 41850                           	opt stack 0
 41851  008C28                     _DIO0_ISR_Lora:
 41852                           	opt stack 15
 41853                           
 41854                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 41855                           
 41856                           ;incstack = 0
 41857  008C28  0101               	movlb	1	; () banked
 41858  008C2A  8179               	bsf	_dioStatus& (0+255),0,b	;volatile
 41859                           
 41860                           ; BSR set to: 1
 41861  008C2C  0012               	return		;funcret
 41862  008C2E                     __end_of_DIO0_ISR_Lora:
 41863                           	opt stack 0
 41864                           tosu	equ	0xFFF
 41865                           tosh	equ	0xFFE
 41866                           tosl	equ	0xFFD
 41867                           pclatu	equ	0xFFB
 41868                           pclath	equ	0xFFA
 41869                           tblptru	equ	0xFF8
 41870                           tblptrh	equ	0xFF7
 41871                           tblptrl	equ	0xFF6
 41872                           tablat	equ	0xFF5
 41873                           prodh	equ	0xFF4
 41874                           prodl	equ	0xFF3
 41875                           intcon	equ	0xFF2
 41876                           intcon2	equ	0xFF1
 41877                           intcon3	equ	0xFF0
 41878                           indf0	equ	0xFEF
 41879                           postinc0	equ	0xFEE
 41880                           plusw0	equ	0xFEB
 41881                           fsr0h	equ	0xFEA
 41882                           fsr0l	equ	0xFE9
 41883                           wreg	equ	0xFE8
 41884                           postinc1	equ	0xFE6
 41885                           postdec1	equ	0xFE5
 41886                           plusw1	equ	0xFE3
 41887                           fsr1h	equ	0xFE2
 41888                           fsr1l	equ	0xFE1
 41889                           indf2	equ	0xFDF
 41890                           postinc2	equ	0xFDE
 41891                           postdec2	equ	0xFDD
 41892                           plusw2	equ	0xFDB
 41893                           fsr2h	equ	0xFDA
 41894                           fsr2l	equ	0xFD9
 41895                           status	equ	0xFD8
 41896                           
 41897 ;; *************** function _INT1_DefaultInterruptHandler *****************
 41898 ;; Defined at:
 41899 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 41900 ;; Parameters:    Size  Location     Type
 41901 ;;		None
 41902 ;; Auto vars:     Size  Location     Type
 41903 ;;		None
 41904 ;; Return value:  Size  Location     Type
 41905 ;;                  1    wreg      void 
 41906 ;; Registers used:
 41907 ;;		None
 41908 ;; Tracked objects:
 41909 ;;		On entry : 0/0
 41910 ;;		On exit  : 0/0
 41911 ;;		Unchanged: 0/0
 41912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41917 ;;Total ram usage:        0 bytes
 41918 ;; Hardware stack levels used:    1
 41919 ;; This function calls:
 41920 ;;		Nothing
 41921 ;; This function is called by:
 41922 ;;		_EXT_INT_Initialize
 41923 ;;		_INT1_CallBack
 41924 ;; This function uses a non-reentrant model
 41925 ;;
 41926                           
 41927                           	psect	text212
 41928  008C56                     __ptext212:
 41929                           	opt stack 0
 41930  008C56                     _INT1_DefaultInterruptHandler:
 41931                           	opt stack 15
 41932                           
 41933                           ; BSR set to: 1
 41934                           ;incstack = 0
 41935  008C56  0012               	return		;funcret
 41936  008C58                     __end_of_INT1_DefaultInterruptHandler:
 41937                           	opt stack 0
 41938                           tosu	equ	0xFFF
 41939                           tosh	equ	0xFFE
 41940                           tosl	equ	0xFFD
 41941                           pclatu	equ	0xFFB
 41942                           pclath	equ	0xFFA
 41943                           tblptru	equ	0xFF8
 41944                           tblptrh	equ	0xFF7
 41945                           tblptrl	equ	0xFF6
 41946                           tablat	equ	0xFF5
 41947                           prodh	equ	0xFF4
 41948                           prodl	equ	0xFF3
 41949                           intcon	equ	0xFF2
 41950                           intcon2	equ	0xFF1
 41951                           intcon3	equ	0xFF0
 41952                           indf0	equ	0xFEF
 41953                           postinc0	equ	0xFEE
 41954                           plusw0	equ	0xFEB
 41955                           fsr0h	equ	0xFEA
 41956                           fsr0l	equ	0xFE9
 41957                           wreg	equ	0xFE8
 41958                           postinc1	equ	0xFE6
 41959                           postdec1	equ	0xFE5
 41960                           plusw1	equ	0xFE3
 41961                           fsr1h	equ	0xFE2
 41962                           fsr1l	equ	0xFE1
 41963                           indf2	equ	0xFDF
 41964                           postinc2	equ	0xFDE
 41965                           postdec2	equ	0xFDD
 41966                           plusw2	equ	0xFDB
 41967                           fsr2h	equ	0xFDA
 41968                           fsr2l	equ	0xFD9
 41969                           status	equ	0xFD8
 41970                           tosu	equ	0xFFF
 41971                           tosh	equ	0xFFE
 41972                           tosl	equ	0xFFD
 41973                           pclatu	equ	0xFFB
 41974                           pclath	equ	0xFFA
 41975                           tblptru	equ	0xFF8
 41976                           tblptrh	equ	0xFF7
 41977                           tblptrl	equ	0xFF6
 41978                           tablat	equ	0xFF5
 41979                           prodh	equ	0xFF4
 41980                           prodl	equ	0xFF3
 41981                           intcon	equ	0xFF2
 41982                           intcon2	equ	0xFF1
 41983                           intcon3	equ	0xFF0
 41984                           indf0	equ	0xFEF
 41985                           postinc0	equ	0xFEE
 41986                           plusw0	equ	0xFEB
 41987                           fsr0h	equ	0xFEA
 41988                           fsr0l	equ	0xFE9
 41989                           wreg	equ	0xFE8
 41990                           postinc1	equ	0xFE6
 41991                           postdec1	equ	0xFE5
 41992                           plusw1	equ	0xFE3
 41993                           fsr1h	equ	0xFE2
 41994                           fsr1l	equ	0xFE1
 41995                           indf2	equ	0xFDF
 41996                           postinc2	equ	0xFDE
 41997                           postdec2	equ	0xFDD
 41998                           plusw2	equ	0xFDB
 41999                           fsr2h	equ	0xFDA
 42000                           fsr2l	equ	0xFD9
 42001                           status	equ	0xFD8
 42002                           
 42003                           	psect	text213
 42004  000000                     __ptext213:
 42005                           	opt stack 0
 42006                           tosu	equ	0xFFF
 42007                           tosh	equ	0xFFE
 42008                           tosl	equ	0xFFD
 42009                           pclatu	equ	0xFFB
 42010                           pclath	equ	0xFFA
 42011                           tblptru	equ	0xFF8
 42012                           tblptrh	equ	0xFF7
 42013                           tblptrl	equ	0xFF6
 42014                           tablat	equ	0xFF5
 42015                           prodh	equ	0xFF4
 42016                           prodl	equ	0xFF3
 42017                           intcon	equ	0xFF2
 42018                           intcon2	equ	0xFF1
 42019                           intcon3	equ	0xFF0
 42020                           indf0	equ	0xFEF
 42021                           postinc0	equ	0xFEE
 42022                           plusw0	equ	0xFEB
 42023                           fsr0h	equ	0xFEA
 42024                           fsr0l	equ	0xFE9
 42025                           wreg	equ	0xFE8
 42026                           postinc1	equ	0xFE6
 42027                           postdec1	equ	0xFE5
 42028                           plusw1	equ	0xFE3
 42029                           fsr1h	equ	0xFE2
 42030                           fsr1l	equ	0xFE1
 42031                           indf2	equ	0xFDF
 42032                           postinc2	equ	0xFDE
 42033                           postdec2	equ	0xFDD
 42034                           plusw2	equ	0xFDB
 42035                           fsr2h	equ	0xFDA
 42036                           fsr2l	equ	0xFD9
 42037                           status	equ	0xFD8
 42038                           
 42039                           	psect	rparam
 42040  0000                     tosu	equ	0xFFF
 42041                           tosh	equ	0xFFE
 42042                           tosl	equ	0xFFD
 42043                           pclatu	equ	0xFFB
 42044                           pclath	equ	0xFFA
 42045                           tblptru	equ	0xFF8
 42046                           tblptrh	equ	0xFF7
 42047                           tblptrl	equ	0xFF6
 42048                           tablat	equ	0xFF5
 42049                           prodh	equ	0xFF4
 42050                           prodl	equ	0xFF3
 42051                           intcon	equ	0xFF2
 42052                           intcon2	equ	0xFF1
 42053                           intcon3	equ	0xFF0
 42054                           indf0	equ	0xFEF
 42055                           postinc0	equ	0xFEE
 42056                           plusw0	equ	0xFEB
 42057                           fsr0h	equ	0xFEA
 42058                           fsr0l	equ	0xFE9
 42059                           wreg	equ	0xFE8
 42060                           postinc1	equ	0xFE6
 42061                           postdec1	equ	0xFE5
 42062                           plusw1	equ	0xFE3
 42063                           fsr1h	equ	0xFE2
 42064                           fsr1l	equ	0xFE1
 42065                           indf2	equ	0xFDF
 42066                           postinc2	equ	0xFDE
 42067                           postdec2	equ	0xFDD
 42068                           plusw2	equ	0xFDB
 42069                           fsr2h	equ	0xFDA
 42070                           fsr2l	equ	0xFD9
 42071                           status	equ	0xFD8
 42072                           
 42073                           	psect	temp
 42074  000048                     btemp:
 42075                           	opt stack 0
 42076  000048                     	ds	12
 42077  0000                     wtemp0	set	btemp
 42078  0000                     wtemp1	set	btemp+2
 42079  0000                     wtemp2	set	btemp+4
 42080  0000                     wtemp3	set	btemp+6
 42081  0000                     wtemp4	set	btemp+8
 42082  0000                     wtemp5	set	btemp+10
 42083  0000                     wtemp6	set	btemp+1
 42084  0000                     ttemp0	set	btemp
 42085  0000                     ttemp1	set	btemp+3
 42086  0000                     ttemp2	set	btemp+6
 42087  0000                     ttemp3	set	btemp+9
 42088  0000                     ltemp0	set	btemp
 42089  0000                     ltemp1	set	btemp+4
 42090  0000                     ltemp2	set	btemp+8
 42091                           tosu	equ	0xFFF
 42092                           tosh	equ	0xFFE
 42093                           tosl	equ	0xFFD
 42094                           pclatu	equ	0xFFB
 42095                           pclath	equ	0xFFA
 42096                           tblptru	equ	0xFF8
 42097                           tblptrh	equ	0xFF7
 42098                           tblptrl	equ	0xFF6
 42099                           tablat	equ	0xFF5
 42100                           prodh	equ	0xFF4
 42101                           prodl	equ	0xFF3
 42102                           intcon	equ	0xFF2
 42103                           intcon2	equ	0xFF1
 42104                           intcon3	equ	0xFF0
 42105                           indf0	equ	0xFEF
 42106                           postinc0	equ	0xFEE
 42107                           plusw0	equ	0xFEB
 42108                           fsr0h	equ	0xFEA
 42109                           fsr0l	equ	0xFE9
 42110                           wreg	equ	0xFE8
 42111                           postinc1	equ	0xFE6
 42112                           postdec1	equ	0xFE5
 42113                           plusw1	equ	0xFE3
 42114                           fsr1h	equ	0xFE2
 42115                           fsr1l	equ	0xFE1
 42116                           indf2	equ	0xFDF
 42117                           postinc2	equ	0xFDE
 42118                           postdec2	equ	0xFDD
 42119                           plusw2	equ	0xFDB
 42120                           fsr2h	equ	0xFDA
 42121                           fsr2l	equ	0xFD9
 42122                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    408
    Data        60
    BSS         1271
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    155     156
    BANK1           256    105     242
    BANK2           256      0     245
    BANK3           256      0     176
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1541$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_1(CODE[6]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), STR_1(CODE[6]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), 
		 -> loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), 
		 -> DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), 
		 -> NULL(NULL[0]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> STR_1(CODE[6]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 6
		 -> STR_1(CODE[6]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1541$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1541$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S872$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S872$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S650$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 6890855
                                            153 BANK0      2     2      0
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6093343
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366018
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156134
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693430
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508445
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158447
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327333
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166277
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554668
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518077
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3106191
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217228
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1094645
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1576601
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492335
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326528
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1067995
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9419
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25173
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9673
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168115
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  327333
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  158326
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   24    10     14   46483
                                             49 BANK0     24    10     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207596
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  185180
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163264
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126952
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263894
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   23204
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    7600
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  128079
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   91386
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  108927
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    6391
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    5712
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176370
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100781
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    5712
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B0      11       68.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45E      12        0.0%
DATA                 0      0     67E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 10 19:11:01 2020

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init 8C4C  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl 8846  
                                                      l47 8AB4  
                                                      l90 2286  
                                                      l93 2346  
                                                      l86 225A  
                                                      l95 2378  
                                                      l88 2308  
                                                      l97 239A  
                                                      l89 22CE  
                                                      l98 23AE  
                                                      l99 23BE  
                                            ___awdiv@sign 0065  
                         __size_of_UpdateJoinSuccessState 013E  
                                     ___wmul@multiplicand 0062  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 7D48  
                                   __end_of_AESEncodeLoRa 83B0  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l101 24D6  
                                                     l102 242A  
                                                     l103 2438  
                                                     l113 555C  
                                                     l106 251E  
                                                     l115 5584  
                                                     l124 79A2  
                                                     l125 795A  
                                                     l117 55D8  
                                                     l119 5600  
                                                     l320 62F0  
                                                     l305 6E02  
                                                     l331 5C9A  
                                                     l323 63BC  
                                                     l500 18EC  
                                                     l261 48EE  
                                                     l333 5CFE  
                                                     l501 1664  
                                                     l262 4980  
                                                     l502 1632  
                                                     l271 7F96  
                                                     l351 2950  
                                                     l503 1596  
                                                     l319 63C0  
                                                     l328 5D00  
                                                     l280 84A8  
                                                     l440 5E86  
                                                     l432 5E36  
                                                     l504 164A  
                                                     l600 6A8C  
                                                     l329 5C3E  
                                                     l361 2AB2  
                                                     l521 1844  
                                                     l505 15BE  
                                                     l354 29B6  
                                                     l530 1974  
                                                     l514 16C8  
                                                     l506 15E6  
                                                     l602 6AE8  
                                                     l443 5ED2  
                                                     l363 2ABC  
                                                     l523 1890  
                                                     l507 161E  
                                                     l603 6AE2  
                                                     l444 5EC4  
                                                     l436 5E50  
                                                     l348 2916  
                                                     l532 19B8  
                                                     l524 189C  
                                                     l516 1744  
                                                     l508 1676  
                                                     l285 6FE2  
                                                     l189 89E2  
                                                     l445 5EC8  
                                                     l365 2ADE  
                                                     l357 2A86  
                                                     l533 19C4  
                                                     l525 18C6  
                                                     l509 16C4  
                                                     l605 6AEA  
                                                     l438 5E98  
                                                     l526 18DE  
                                                     l550 3AFA  
                                                     l606 6B00  
                                                     l279 84C6  
                                                     l447 5F00  
                                                     l439 5E7A  
                                                     l375 3624  
                                                     l367 2AE8  
                                                     l359 2A90  
                                                     l471 6172  
                                                     l519 1764  
                                                     l551 3B26  
                                                     l368 2C10  
                                                     l480 619E  
                                                     l472 6122  
                                                     l528 1962  
                                                     l560 3BD6  
                                                     l552 3B0C  
                                                     l544 3A32  
                                                     l616 5A5E  
                                                     l289 6FE4  
                                                     l377 362E  
                                                     l481 61CA  
                                                     l473 6130  
                                                     l529 1994  
                                                     l625 5806  
                                                     l641 83FA  
                                                     l482 61D2  
                                                     l474 6162  
                                                     l546 3A4A  
                                                     l570 3CD2  
                                                     l730 8016  
                                                     l547 3A64  
                                                     l571 3CFE  
                                                     l548 3AD0  
                                                     l572 3D20  
                                                     l660 6F32  
                                                     l652 6F0E  
                                                     l724 8374  
                                                     l477 6182  
                                                     l549 3AE8  
                                                     l565 3C6A  
                                                     l653 6EFA  
                                             ?_RADIO_Init 0079  
                                                     l486 4734  
                                                     l718 6D40  
                                                     l478 6190  
                                                     l558 3C4C  
                                                     l574 3D3A  
                                                     l662 6F42  
                                                     l670 7F72  
                                                     l487 474A  
                                                     l575 3DAC  
                                                     l567 3C82  
                                                     l591 6454  
                                                     l655 6F00  
                                                     l647 82B2  
                                                     l671 7F5E  
                                                     l727 8004  
                                                     l576 3E7C  
                                                     l568 3C98  
                                                     l592 6436  
                                                     l656 6F06  
                                                     l489 477E  
                                                     l569 3CA4  
                                                     l665 6F4A  
                                                     l673 7F64  
                                                     l578 3E06  
                                                     l594 648A  
                                                     l658 6F52  
                                                     l674 7F6A  
                                                     l659 6F20  
                                                     l588 6486  
                                                     l676 7F84  
                                                     l684 7D30  
                                                     l685 7D22  
                                                     l599 6AAA  
                                                     l849 8486  
                                                     l689 7D28  
                                         ??_UpdateTxPower 0060  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 76E2  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 7676  
                                  _ExecuteRxParamSetupReq 3E88  
                                      _DIO2_ISR_Lora_Init 8ADC  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01EA  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 8BDE  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 259A  
                                 __end_of_SwTimersExecute 63CC  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 658E  
                     __end_of_RADIO_SetFrequencyHopPeriod 8BD4  
                             _RADIO_SetFrequencyHopPeriod 8BCA  
                                              _CheckFlags 7B2C  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 8926  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                      __size_of_IOCB4_ISR 0020  
                                                    l1020 4572  
                                                    l1014 79C4  
                                                    l1102 28CA  
                                                    l1015 79C8  
                                                    l1111 2698  
                                                    l1103 25D6  
                                                    l1200 59D0  
                                                    l1112 2660  
                                                    l1104 25C4  
                                                    l1122 2818  
                                                    l1123 2720  
                                                    l1044 7C08  
                                                    l1116 2892  
                                                    l1124 2814  
                                                    l1108 25E0  
                                                    l1213 6C48  
                                                    l1133 8A30  
                                                    l1205 40BA  
                                                    l1221 8974  
                                                    l1117 2718  
                                                    l1150 3478  
                                                    l1046 7C38  
                                                    l1118 26E0  
                                                    l1151 32F4  
                                                    l1207 4270  
                                                    l1320 7B12  
                                                    l1304 8842  
                                                    l1152 3346  
                                                    l2200 06AE  
                                                    l1233 76DC  
                                                    l1073 1476  
                                                    l1145 7E30  
                                                    l1137 860C  
                                                    l1153 3384  
                                                    l1209 427E  
                                                    l2201 02DE  
                                                    l1082 11E2  
                                                    l1074 0EDA  
                                                    l1146 7E3C  
                                                    l1170 39AE  
                                                    l1226 4C2A  
                                                    l2202 03EE  
                                                    l1251 71D2  
                                                    l1091 13EA  
                                                    l1155 345E  
                                                    l1171 39A0  
                                                    l1227 4B32  
                                                    l2211 0576  
                                                    l2203 04AA  
                                                    l2107 4E06  
                                                    l2060 52CA  
                                                    l1076 0FF8  
                                                    l2300 1F62  
                                                    l1332 766C  
                                                    l1180 3F96  
                                                    l1228 4C26  
                                                    l2204 0492  
                                                    l2061 5296  
                                                    l1077 11D4  
                                                    l1333 763E  
                                                    l1317 7B28  
                                                    l1157 3502  
                                                    l1165 38AC  
                                                    l1181 3FD6  
                                                    l2221 0810  
                                                    l2213 0592  
                                                    l1246 7148  
                                                    l2062 52C6  
                                                    l1086 12E8  
                                                    l2302 1FA6  
                                                    l1270 50B8  
                                                    l1334 764E  
                                                    l1326 7632  
                                                    l1318 7AE8  
                                                    l1174 3A04  
                                                    l1182 4092  
                                                    l2230 0942  
                                                    l1191 5990  
                                                    l1087 1308  
                                                    l1079 113E  
                                                    l2311 1FEE  
                                                    l1335 765A  
                                                    l1327 7628  
                                                    l1175 3A12  
                                                    l2223 08E6  
                                                    l2215 05A4  
                                                    l1351 2F44  
                                                    l2160 5F2A  
                                                    l1096 14AA  
                                                    l1088 1386  
                                                    l2312 205A  
                                                    l1328 761A  
                                                    l1256 54CC  
                                                    l1168 38EA  
                                                    l2240 0B42  
                                                    l2232 096E  
                                                    l2224 08CE  
                                                    l2216 0652  
                                                    l2208 04DA  
                                                    l2080 6A48  
                                                    l2161 5F98  
                                                    l2321 4A3E  
                                                    l1193 5992  
                                                    l1089 145E  
                                                    l2313 20E4  
                                                    l1257 53F2  
                                                    l1281 78B6  
                                                    l1169 3A16  
                                                    l2209 051E  
                                                    l2129 5C12  
                                                    l2162 6000  
                                                    l2402 73DC  
                                                    l2306 1FAC  
                                                    l1266 4FDC  
                                                    l1258 5460  
                                                    l2242 0C18  
                                                    l2234 0980  
                                                    l2067 532C  
                                                    l2059 52D8  
                                                    l1187 58CA  
                                                    l2331 1DE8  
                                                    l2315 214C  
                                                    l2307 1FBA  
                                                    l1267 50BC  
                                                    l1259 54C8  
                                                    l1179 3F56  
                                                    l2243 0C12  
                                                    l2235 09D6  
                                                    l2219 06F4  
                                                    l2083 6730  
                                                    l1188 5996  
                                                    l2412 68D0  
                                                    l2340 1C82  
                                                    l2332 1A8C  
                                                    l2308 1FDC  
                                                    l1268 4FE2  
                                                    l1292 805C  
                                                    l2236 09E4  
                                                    l2092 6740  
                                                    l1197 59B2  
                                                    l1189 58D0  
                                                    l2413 6822  
                                                    l2421 6096  
                                                    l2341 1C86  
                                                    l2333 1AFA  
                                                    l1269 5050  
                                                    l1277 8A18  
                                                    l2237 0B48  
                                                    l2229 0926  
                                                    l2406 73F6  
                                                    l2326 1E26  
                                                    l2350 1DC2  
                                                    l2342 1CE2  
                                                    l2334 1B40  
                                                    l1286 78E4  
                                                    l2262 0D02  
                                                    l2238 0AB2  
                                                    l2190 01A0  
                                                    l2078 69C4  
                                                    l2159 6004  
                                                    l2319 49E8  
                                                    l1199 59CC  
                                                    l2327 19F6  
                                                    l2183 0CC4  
                                                    l2408 740C  
                                                    l2416 68CE  
                                                    l2432 4390  
                                                    l2360 64D0  
                                                    l2336 1E24  
                                                    l2280 315C  
                                                    l2272 2F5E  
                                                    l2256 0CA2  
                                                    l2248 0C0C  
                                                    l2184 025C  
                                                    l2520 783A  
                                                    l2409 7420  
                                                    l2433 42B6  
                                                    l2361 6548  
                                                    l2337 1B88  
                                                    l2273 31B6  
                                                    l2281 3172  
                                                    l2257 0CA6  
                                                    l2434 42FC  
                                                    l2346 1D02  
                                                    l2338 1BF6  
                                                    l2266 7A42  
                                                    l1298 879A  
                                                    l2282 3188  
                                                    l2274 30EE  
                                                    l2186 00BC  
                                                    l2522 7850  
                                                    l2507 7CAC  
                                                    l2363 656C  
                                                    l2347 1D70  
                                                    l2339 1C3C  
                                                    l2267 7A68  
                                                    l2283 3212  
                                                    l2275 31F2  
                                                    l2371 748C  
                                                    l2195 01B2  
                                                    l2187 010A  
                                                    l2523 784A  
                                                    l2508 7CC0  
                                                    l1812 6808  
                                                    l1804 6764  
                                                    l2276 3104  
                                                    l2188 010E  
                                                    l2349 1DB8  
                                                    l2277 311A  
                                                    l2197 0CBE  
                                                    l2438 4450  
                                                    l2358 64CA  
                                                    l1806 678C  
                                                    l2382 8270  
                                                    l2278 3130  
                                                    l2526 7870  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l2439 43E4  
                                                    l2367 6588  
                                                    l2359 654A  
                                                    l1807 679C  
                                                    l2279 3146  
                                                    l2527 7878  
                                                    l2519 7830  
                                                    l2296 1EBC  
                                                    l2297 1EC6  
                                                    l2395 7B42  
                                                    l2299 1FAA  
                                                    l2396 7B58  
                                                    l2492 703E  
                                                    l2397 7B6E  
                                                    l2910 813E  
                                                    l2670 7276  
                                                    l1599 889A  
                                                    l2671 7280  
                                                    l2663 7228  
                                                    l1784 6CC6  
                                                    l2672 728E  
                                                    l2664 7238  
                                                    l2913 815E  
                                                    l2930 84E0  
                                                    l2850 7382  
                                                    l2914 8168  
                                                    l2666 7256  
                                                    l2923 7ABA  
                                                    l2851 7390  
                                                    l2667 724E  
                                                    l2924 7A80  
                                                    l2860 77FC  
                                                    l2861 780A  
                                                    l2909 8146  
                                                    l2846 734E  
                                                    l2847 7342  
                                                    l2856 77D4  
                                                    l2929 84F2  
                                                    l2857 77C8  
                                                    STR_1 FFF9  
                                        _RADIO_WritePower 6106  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 4992  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1077 00B8  
                                     _RADIO_Transmit$1079 00BC  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 0062  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 8906  
                                ??_InitDefault433Channels 006B  
                                ExecuteNewChannel@drRange 00AA  
                                      _PrepareSessionKeys 6B06  
                                                    _loRa 0200  
                                                    _main 6FEA  
                                                    _rand 7B8A  
                          __end_of_UpdateMinMaxChDataRate 6012  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 28FE  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 7EEA  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 68E0  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                              __end_of_RADIO_GetPacketSnr 8C10  
                                            ___param_bank 000000  
                                              _GetRx1Freq 8A86  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 7F3C  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate 774C  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 8C0A  
                                        __end_of_INT2_ISR 8C02  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                           __end_of_OSCILLATOR_Initialize 8B38  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l13113 55F8  
                                         __end_of___abdiv 7882  
                                                   l13095 557C  
                                                   l15015 0576  
                                                   l12641 2948  
                                                   l13521 2430  
                                                   l13505 23B6  
                                                   l14401 1F5E  
                                                   l12571 7A80  
                                                   l14403 1F62  
                                                   l12629 290E  
                                                   l13541 2516  
                                                   l14415 1FA4  
                                                   l15127 0926  
                                                   l12657 29AE  
                                                   l12589 7FB0  
                                                   l16061 6D38  
                                                   l13485 233E  
                                                   l13397 60BA  
                                                   l15253 0C9C  
                                                   l15149 096E  
                                                   l12783 84E0  
                                                   l16231 4A36  
                                                   l14551 671A  
                                                   l12697 2C08  
                                                   l16217 49E0  
                                                   l14705 5750  
                                                   l13907 42F4  
                                                   l14651 678C  
                                                   l13747 7AE0  
                                                   l14571 40B2  
                                                   l14555 6728  
                                                   l14559 6738  
                                                   l15721 7140  
                                                   l15395 11DA  
                                                   l14835 319E  
                                                   l13949 68DC  
                                                   l15805 2DF2  
                                                   l15903 5B9C  
                                                   l15737 71CA  
                                                   l15833 69C6  
                                                   l15913 5BCC  
                                                   l15817 2EA0  
                                                   l15851 4CBA  
                                                   l15907 5BA2  
                                                   l15923 5C0E  
                                                   l14699 56B4  
                                                   l15933 755C  
                                                   l14993 04DA  
                                                   l15873 4D6A  
                                                   l15857 4CD8  
                                                   l15867 4D0C  
                                                   l15795 2D3C  
                                                   l15787 2C80  
                                                   l15797 2D56  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv 7298  
                                              _FillSubKey 794A  
                       __end_of_IOCB4_SetInterruptHandler 8B66  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 73A2  
                                         RADIO_Transmit@i 00C1  
                                                   u20110 4A82  
                                         ___awdiv@divisor 0062  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 781C  
                                                   u20090 4A2C  
                                                   u14210 2942  
                                                   u15010 165E  
                                                   u14140 7AA2  
                                       ??_EnableChannels1 0069  
                                                   u14310 2C3C  
                                                   u14230 2994  
                                                   u15015 1654  
                                                   u14160 8B4E  
                                                   u15040 16AE  
                                                   _LATC2 007C5A  
                                    RxJoinResponse@status 0001  
                                                   u14147 7A98  
                                                   u15115 177E  
                                                   _LATD3 007C63  
                                                   u14420 799E  
                                                   u15060 16BE  
                                                   u14430 79A0  
                                                   u14360 7352  
                       __end_of_AckRetransmissionCallback 5C18  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u14450 6E48  
                                                   u14290 2BF6  
                                                   u15090 1716  
                                                   u16050 59A4  
                                                   u21538 63A8  
                                                   u21539 63BA  
                                                   u15500 23B2  
                                                   u16300 68DC  
                                                   u16220 436E  
                                                   u16140 6556  
                                                   u14390 77D8  
                                                   u14630 5EF4  
                                                   u15430 226C  
                                                   u16070 59B8  
                                                   u16230 438E  
                                                   u15270 8796  
                                                   u21807 84B0  
                                                   u15415 223C  
                                                   u15520 2404  
                                                   u15440 226E  
                                                   u16410 1CCA  
                                                   u16330 1A8A  
                                                   u18010 06D8  
                                                   u16227 4364  
                                                   u15540 249E  
                                                   u14740 709E  
                                                   u15380 725A  
                                                   u16260 4432  
                                                   u16180 6580  
                                                   u18030 07F4  
                                                   u14911 5502  
                                                   u14760 70C6  
                                                   u16440 1E32  
                                                   u17128 8462  
                                                   u18008 068A  
                                                   u18009 069E  
                                                   u15570 2564  
                                                   u16530 3B9C  
                                                   u16290 6890  
                                                   u17170 4284  
                                                   u16267 4428  
                                                   u14940 55B0  
                                                   u14780 70EC  
                                                   u15660 3DCC  
                                                   u15740 78E0  
                                                   u17420 566C  
                                                   u15645 3D5A  
                                                   u17405 75B6  
                                                   u21797 7066  
                                                   u16614 7E20  
                                          __CFG_DEBUG$OFF 000000  
                                                   u16615 7E1A  
                                                   u19200 57C4  
                                                   u16545 3BC4  
                                                   u17265 4C4E  
                                                   u14890 814A  
                                                   u19210 57DC  
                                                   u15770 8056  
                                                   u18170 0A18  
                                                   u17098 6706  
                                                   u16555 3BE8  
                                                   u15675 3DF4  
                                                   u17435 56A4  
                                                   u19220 5844  
                                                   u18340 0C68  
                                                   u18308 0C44  
                                                   u15685 3E18  
                                                   u18309 0C58  
                                                   u17445 56C6  
                                                   u17550 7440  
                                                   u18270 0BD6  
                                                   u18238 0BB0  
                                                   u19070 640E  
                                                   u19150 5A1C  
                                                   u19215 57D0  
                                                   u18239 0BC4  
                                                   u15960 7B24  
                                                   u15880 8600  
                                                   u16760 387C  
                                                   u18408 0D18  
                                                   u18088 089E  
                                                   u19160 5A34  
                                                   u19225 5838  
                                                   u18089 08B2  
                                                   u17490 73D8  
                                                   u15890 8608  
                                                   u17730 017E  
                                                   u19170 5A9C  
                                                   u17811 02B6  
                                                   u16588 750C  
                                                   u17468 575E  
                                                   u19165 5A28  
                                                   u17469 5772  
                                                   u17670 323A  
                                                   u18518 2684  
                                                   u19175 5A90  
                                                   u17840 03DE  
                                                   u17760 019A  
                                                   u19600 4D22  
                                                   u18705 0D9E  
                                                   u19370 52F2  
                                                   u18715 0E22  
                                                   u18635 2834  
                                                   u17588 7474  
                                                   u19700 5B96  
                                                   u18725 0F14  
                                                   u17589 7488  
                                                   u16990 1FD0  
                                                   u18398 0CEE  
                                                   u17790 0278  
                                                   u19470 2E4A  
                                                   u18735 0F98  
                                                   u18495 260C  
                                                   u19615 4D5A  
                                                   u18760 10F6  
                                                   u17928 04FA  
                                                   u18568 2704  
                                                   u19560 4CE6  
                                                   u19385 531A  
                                                   u18905 13FC  
                                                   u17929 050E  
                                                   u19625 4D7C  
                                                   u18770 1114  
                                                   u18658 28B6  
                                                   u19395 533E  
                                                   u18860 138A  
                                                   u18780 1174  
                                                   u17980 05E4  
                                                   u19485 2E90  
                                                   u17958 0552  
                                                   u18678 28EA  
                                                   u18775 110A  
                                                   u17959 0566  
                                                   u19495 2EBA  
                                                   u18880 13B2  
                                                   u17888 046E  
                                                   u19808 7580  
                                                   u19728 5BC6  
                                                   u18785 1168  
                                                   u17889 0482  
                                                   u19809 7594  
                                                   u18938 1496  
                                                   u18958 14CA  
                                                   u18990 785E  
                                                   u18895 13D8  
                                                   u19935 83BE  
                                                   u19768 5BFA  
                                         __end_of___lwmod 8172  
                                                   u19865 6EDC  
                                                   u19970 6D72  
                                                   i2l331 5D98  
                                                   i2l261 4EEE  
                                                   i2l333 5DFC  
                                                   i2l262 4F6A  
                                                   i2l271 8206  
                                                   i2l328 5DFE  
                                                   i2l329 5D3C  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0064  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 8C4C  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                        __end_of_TMR1_ISR 8A86  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 8BF2  
                            ??_IncludeMacCommandsResponse 0065  
                           __end_of_RADIO_WatchdogTimeout 801A  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _randx 01D0  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 8B0C  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                  _UpdateJoinSuccessState 563E  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 8B70  
                                              _ComputeMic 78E8  
                                 __end_of_TMR1_Initialize 85BC  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate 8B8E  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 50E2  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 2F4E  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 8886  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 2C48  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 19DE  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 68E0  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit 8AAA  
                                            __end_of_main 7074  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand 7BE6  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 6DA2  
                                        _SetJoinFailState 8446  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 89B8  
                                    _ExecuteRxTimingSetup 86B4  
                                       __end_of_IOCB4_ISR 8906  
                               __size_of_UpdateDLSettings 001C  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 8BA2  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00F9  
                                                  ??_rand 00A8  
                                          ??_RADIO_RxDone 00F3  
                                          ??_RADIO_TxDone 00E3  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 8C4E  
                       __end_of_LORAWAN_LinkCheckCallback 4E10  
                          __end_of_SetReceptionNotOkState 74A2  
                             __end_of_UpdateReceiveDelays 8280  
                         __end_of_AssembleEncryptionBlock 6106  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 7F8A  
                                          _EnableChannels 8980  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 8C3A  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic 7C40  
                         __size_of_SearchAvailableChannel 012A  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 89D2  
                                        ___llmod@dividend 0060  
                                        ___awdiv@dividend 0060  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 6A52  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 699A  
                                _RADIO_FSKPacketSent$1098 00EB  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 85E6  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 0099  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 3244  
                                                  i2l1450 0044  
                  __end_of_LORAWAN_ReceiveWindow2Callback 6744  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 666C  
                                                  i2l1452 0050  
                                                  i2l1455 005C  
                                                  i2l1448 0038  
                                                  i2l1379 7D9C  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l1599 89AE  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                        __size_of_ValidateChannelMaskCntl 0020  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                              __size_of_LORAWAN_RxTimeout 0364  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init 8B0C  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE61  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 8ABC  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags 73A2  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random 87E2  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 8C4E  
                                     LORAWAN_TxDone@ticks 00DA  
                      SearchAvailableChannel@randomNumber 00B9  
                    __end_of_TMR1_DefaultInterruptHandler 8C52  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 8C50  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel 8280  
                                               ??___abdiv 0061  
                                                  ___lmul 7C9A  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 86DC  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                   ?_ExecuteRxTimingSetup 0067  
                                               ??___awdiv 0064  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 64B0  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                                               ??___lwmod 00AC  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 7A6E  
                                                  _memset 84D6  
                                                  clear_0 6948  
                                                  clear_1 695A  
                                                  clear_2 6966  
                                                  clear_3 6972  
                                                  clear_4 697E  
                                                  clear_5 698E  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 0066  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels 899C  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 8C56  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 8C54  
                                            __pdataCOMRAM 0054  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert 8C3E  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                                            __mediumconst FE60  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 53A4  
                                  __end_of_ExecuteLinkAdr 350C  
                                      ??_ExecuteDutyCycle 0062  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                      __end_of_LORAWAN_SetChannelIdStatus 7C40  
                              _LORAWAN_SetChannelIdStatus 7BE6  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 88A6  
                                   __end_of_SwTimerCreate 6FEA  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 88C6  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize 8946  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 6994  
                           __end_of_RADIO_FSKPayloadReady 6B06  
                                          _RADIO_Transmit 3A20  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 006F  
                                        _ConfigureRadioRx 863A  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 7E46  
                                     ExecuteDevStatus@ptr 0060  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FF71  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0062  
                               ExecuteLinkAdr@channelMask 0073  
                                      __end_of_HALSPISend 8B46  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 58AA  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 8664  
                                            __pidataBANK3 8ABC  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 8C4A  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 14DE  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF8F  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 8C54  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 8C52  
                                __end_of_RADIO_WritePower 61F6  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand 8B1C  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                                  _InitDefault433Channels 7188  
                                         _UpdateFrequency 80A6  
                                  _AutomaticReplyCallback 8754  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                                         _UpdateDutyCycle 80EA  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower 8610  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 8C4A  
                            __end_of_HALResetPinMakeInput 8C46  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 8B70  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 1E40  
                              _IncludeMacCommandsResponse 19DE  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate 8A1C  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 8964  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                  __end_of_RADIO_Transmit 3C58  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 4462  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00FB  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop 8754  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 7424  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF79  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 8B98  
                                    __end_of_RADIO_SetCRC 8BB6  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0060  
                                    __end_of_RADIO_RxDone 64B0  
                              __end_of_RADIO_RxFSKTimeout 837A  
                                    __end_of_RADIO_TxDone 5AFA  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 6F5E  
                                      __end_of_RADIO_DIO1 7F8A  
                                      __end_of_RADIO_DIO2 7D48  
                                      __end_of_RADIO_DIO3 87E2  
                                      __end_of_RADIO_DIO4 83E2  
                                      __end_of_RADIO_DIO5 86B4  
                               ??_RADIO_FHSSChangeChannel 0079  
                             __size_of_SwTimerSetCallback 0044  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 47FA  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 88C6  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 760A  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0069  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 00BB  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 409C  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 0060  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A7  
                                      EncryptFRMPayload@j 00A8  
                                      EncryptFRMPayload@k 00A6  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0060  
                                        _UpdateDLSettings 8964  
                                        _ValidateRxOffset 8A04  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init 8ACC  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 577C  
                                                 _AESCmac 21F0  
                                  ComputeMic@bufferLength 00CB  
                                 __end_of_UpdateDataRange 54F2  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l11009 821A  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr 8C0A  
                                    EncryptFRMPayload@key 0099  
                                   __end_of_UpdateTxPower 8B84  
                                     _RADIO_SetIQInverted 8BA2  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                     i2_SwTimersInterrupt 5D1A  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF8F  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                __end_of_SetJoinFailState 8476  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl 8826  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                       __end_of_RADIO_SetChannelFrequency 70FE  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 8B5C  
                       __end_of_SetCallbackSoftwareTimers 666C  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 5AFA  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$819 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF96  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0060  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 70FE  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers 7E98  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 80EA  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv 781C  
                                              AESEncode@i 007C  
                                               _AESEncode 28FE  
                                  ValidateRxOffset@result 0061  
                               __end_of_TMR_ISR_Lora_Init 8ADC  
                                                 ___awdiv 7212  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                 __end_of_UpdateDutyCycle 812E  
                                                 ___lldiv 731E  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod 77B4  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 812E  
                               SwTimerIsRunning@isRunning 0061  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                                 _devAddr 01D4  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 68E0  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                                 _appSKey 03A0  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 3E88  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 6FEA  
                                                 __ptext1 8946  
                                                 __ptext2 8590  
                                                 __ptext3 8B1C  
                                                 __ptext4 7D9E  
                                                 __ptext5 8B2A  
                                                 __ptext6 879E  
                                                 __ptext7 8ACC  
                                                 __ptext8 8B52  
                                                 __ptext9 8BF2  
                                    __end_of_LORAWAN_Init 7A0E  
                                    __end_of_LORAWAN_Join 6CFE  
                                    __end_of_LORAWAN_Send 6816  
                                           _DIO0_ISR_Lora 8C28  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 50E2  
                                               _IOCB4_ISR 88E6  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00BC  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize 8B2A  
                          __end_of_UpdateJoinSuccessState 577C  
                                 __size_of_LORAWAN_TxDone 07B2  
                              __end_of_RADIO_SetBandwidth 8BDE  
                                         _RADIO_GetStatus 8C10  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF88  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 8C22  
                                             _SwTimerStop 872C  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 01D8  
                             IncludeMacCommandsResponse@i 006D  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 37B0  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                               __size_of_TMR_GetDeltaTime 0198  
                                           _DIO2_ISR_Lora 8C1C  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 8534  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 8506  
                                      ?_ExecuteNewChannel 00A6  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 6994  
                                 _CreateAllSoftwareTimers 7EEA  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 8B66  
                                   ??_RADIO_FSKPacketSent 00E3  
                                          _GenerateSubkey 54F2  
                                   _RADIO_WatchdogTimeout 7FD4  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF61  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 7676  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 4CA4  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                               i2u2160_48 88F4  
                                               i2u2162_48 88B4  
                                               i2u2156_48 8934  
                                               i2u2158_48 8914  
                                   _UpdateCurrentDataRate 8B84  
                                   _UpdateChannelIdStatus 4F7C  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 8AFC  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask 7ACE  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 8C42  
                                            ??_GetRx1Freq 0064  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 8BC0  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 8BF2  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                           _AESEncode$814 0072  
                                           _AESEncode$815 0074  
                                           _AESEncode$816 0076  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop 8300  
                            __end_of_RADIO_SetFSKSyncWord 84A6  
                                      LORAWAN_Join@result 00DC  
                                      __end_of_CheckFlags 7B8A  
                               ValidateTxPower@txPowerNew 0061  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 5246  
                                      _DIO0_ISR_Lora_Init 8AFC  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01F0  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 837A  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 62E6  
                              __end_of_RADIO_RegisterRead 872C  
                       __end_of_LORAWAN_GetMaxPayloadSize 7A6E  
                          __end_of_HALResetPinOutputValue 89EC  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx 8664  
                                __end_of_ConfigureRadioTx 7E98  
                                         _RADIO_RxTimeout 8562  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 3A20  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout 81B6  
                                          _TMR1_ReadTimer 8804  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FF96  
                                              _txPower868 FF9C  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 563E  
                                           RADIO_RxDone@i 00F4  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0177  
                                      __end_of_GetRx1Freq 8A98  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                         EncryptFRMPayload@macBufferIndex 009B  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys 731E  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 8A5E  
                                         _RADIO_WriteMode 5E1A  
                              ??_RADIO_WriteConfiguration 00A8  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey 79AC  
                                 _AssembleEncryptionBlock 6012  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF61  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                        ?_UpdateFrequency 0060  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random 8804  
                                          __end_of_RxData 8C50  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate 8A34  
                            __end_of_INTERRUPT_Initialize 8C36  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                              __end_of_DIO5_ISR_Lora_Init 8C48  
                                 __end_of_RADIO_GetStatus 8C16  
                                          __end_of___lmul 7CF2  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 8704  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 8C2E  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                      __end_of_ComputeMic 794A  
                                               Random@max 00AD  
                                          __end_of_memcpy 7ACE  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 81FA  
                                  __end_of_TMR1_ReadTimer 8826  
                                          __end_of_memset 8506  
                                         _SPI2_Initialize 8B1C  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 8BAC  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                            _RADIO_RxDone 63CC  
                                            _RADIO_TxDone 59D4  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 68E0  
                                          _ConfigureRadio 6BB2  
                                      LORAWAN_RxDone@mhdr 00E1  
                                      LORAWAN_RxDone@temp 00E7  
                                      _DIO4_ISR_Lora_Init 8C48  
                                __end_ofi2_TMR1_ReadTimer 88E6  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 8866  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 6ECE  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack 8946  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 8A04  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 8926  
                                           ??_RADIO_Reset 0065  
                                __end_of_UpdateDLSettings 8980  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                                __end_of_ValidateRxOffset 8A1C  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 8BC0  
                           ExecuteNewChannel@channelIndex 00AF  
                          __end_of_SearchAvailableChannel 59D4  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer 81FA  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 __end_of_SystemTimerInit 8BFA  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 0173  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0171  
                                   _RADIO_FSKPayloadReady 6A52  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 8C42  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0095  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 7212  
                          __end_of_AutomaticReplyCallback 877A  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF81  
                                                ??___lmul 00A2  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0064  
                                   __size_of_LORAWAN_Send 00D2  
                                 __end_of_RADIO_RxTimeout 8590  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01C0  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 801A  
                                      __end_of_ExtractMic 7C9A  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 85E6  
                                       _ValidateChannelId 877A  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 8BB6  
                                      _RADIO_RxFSKTimeout 833E  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 016D  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 6C5A  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                  TMR_GetDeltaTime@tmrVal 0175  
                                          _LORAWAN_TxDone 0D2C  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                    __end_of_SwTimerStart 6E38  
                  __end_of_LORAWAN_EnterContinuousReceive 7520  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive 74A2  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00CA  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFCC  
                              __end_of_DefaultChannels868 FFF6  
                                        ??_RADIO_Transmit 00B4  
                                      LORAWAN_RxTimeout@i 00CA  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                     ??_ValidateDataRange 0062  
                                        _TMR_GetDeltaTime 47FA  
                           EnableChannels@channelMaskCntl 006E  
                                 __end_of_RADIO_WriteMode 5F18  
                 __end_of_UnconfirmedTransmissionCallback 7598  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback 7520  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                 _RADIO_ReceiveStart$1082 00B7  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                               _aesBuffer 01B0  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 8476  
                             RADIO_SetBandwidth@bandwidth 0060  
                              __end_of_SwTimerSetCallback 81B6  
       __end_of_ResetParametersForUnconfirmedTransmission 8A5E  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission 8A4A  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 01EE  
                                               _bandwidth FF88  
                                      ??_SetJoinFailState 0060  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 79AC  
                                            _LORAWAN_Join 6C5A  
                                            _LORAWAN_Send 6744  
                                  RADIO_FSKPayloadReady@i 00F4  
                                       _ValidateFrequency 7882  
                                               __pnvBANK1 01E8  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 61F6  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 8C36  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 80A6  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 7D9E  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 428A  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 04E0  
                                               _dioStatus 0179  
                               __end_of_ValidateDataRange 8060  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 5C18  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                        __end_of_TMR1_SetInterruptHandler 8B5C  
                                           __pmediumconst FE60  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize 8B2A  
                                                ?___awdiv 0060  
                                               __ptext100 73A2  
                                               __ptext101 7B2C  
                                               __ptext110 8A98  
                                               __ptext102 577C  
                               __end_of_ValidateChannelId 879E  
                                               __ptext111 8C16  
                                               __ptext103 0D2C  
                                               __ptext200 88C6  
                                               __ptext120 7E46  
                                               __ptext112 8846  
                                               __ptext104 82C0  
                                               __ptext201 8BE8  
                                               __ptext121 8B98  
                                               __ptext113 3C58  
                                               __ptext105 8610  
                                               __ptext210 8926  
                                               __ptext202 88E6  
                                               __ptext130 8BD4  
                                               __ptext122 8BA2  
                                               __ptext114 863A  
                                               __ptext106 8C10  
                                               __ptext211 8C28  
                                               __ptext203 8C1C  
                                               __ptext131 3A20  
                                               __ptext123 8BAC  
                                               __ptext115 8A5E  
                                               __ptext107 74A2  
                                               __ptext212 8C56  
                                               __ptext204 8C52  
                                               __ptext140 78E8  
                                               __ptext132 14DE  
                                               __ptext124 6BB2  
                                               __ptext116 6C5A  
                                               __ptext108 8C4E  
                                               __ptext213 0000  
                                               __ptext205 8BFA  
                                               __ptext141 21F0  
                                               __ptext133 6106  
                                               __ptext125 8BB6  
                                               __ptext117 89B8  
                                               __ptext109 8A4A  
                                               __ptext206 8906  
                                               __ptext150 658E  
                                               __ptext142 54F2  
                                               __ptext134 76E2  
                                               __ptext126 8BC0  
                                               __ptext118 7676  
                                               __ptext207 8C22  
                                               __ptext151 6CFE  
                                               __ptext143 794A  
                                               __ptext135 774C  
                                               __ptext127 8BCA  
                                               __ptext119 58AA  
                                               __ptext208 8C54  
                                               __ptext160 8B46  
                                               __ptext152 4462  
                                               __ptext144 837A  
                                               __ptext136 4992  
                                               __ptext128 8476  
                                               __ptext209 8C02  
                                               __ptext161 61F6  
                                               __ptext153 5F18  
                                               __ptext145 28FE  
                                               __ptext137 87E2  
                                               __ptext129 7074  
                                               __ptext170 89D2  
                                               __ptext162 77B4  
                                               __ptext154 7E98  
                                               __ptext146 50E2  
                                               __ptext138 7B8A  
                                               __ptext171 8C3E  
                                               __ptext163 8866  
                                               __ptext155 8BDE  
                                               __ptext147 350C  
                                               __ptext139 812E  
                                               __ptext180 8886  
                                               __ptext172 8C42  
                                               __ptext164 8B38  
                                               __ptext156 4630  
                                               __ptext148 79AC  
                                               __ptext181 5C18  
                                               __ptext173 5246  
                                               __ptext165 8AAA  
                                               __ptext157 8172  
                                               __ptext149 8B0C  
                                               __ptext190 6F5E  
                                               __ptext182 47FA  
                                               __ptext174 7C9A  
                                               __ptext166 8C36  
                                               __ptext158 5E1A  
                                               __ptext183 8804  
                                               __ptext175 731E  
                                               __ptext167 8C3A  
                                               __ptext159 8704  
                                               __ptext192 8A72  
                                               __ptext184 81B6  
                                               __ptext176 872C  
                                               __ptext168 8060  
                                               __ptext193 88A6  
                                               __ptext185 70FE  
                                               __ptext177 6DA2  
                                               __ptext169 84A6  
                                               __ptext194 8C50  
                                               __ptext186 7188  
                                               __ptext178 6E38  
                                               __ptext195 7D48  
                                               __ptext187 84D6  
                                               __ptext179 7F8A  
                                               __ptext196 81FA  
                                               __ptext188 7A6E  
                                               __ptext197 899C  
                                               __ptext189 7EEA  
                                               __ptext198 5D1A  
                                               __ptext199 4E10  
                                       _EncryptFRMPayload 428A  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                           __size_of_ExecuteRxTimingSetup 0028  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 4B22  
                                                ?___lwmod 00A8  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 7074  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 658E  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 14DE  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 87C0  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 8B8E  
                           __end_of_RADIO_SetLoRaSyncWord 8BE8  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 1E40  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                              __end_ofi2_TMR_GetDeltaTime 4F7C  
                                     ??_SwTimersInterrupt 0084  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _DutyCycleCallback 2C48  
                                 InitDefault433Channels@i 006B  
                                   __end_of_TMR_SwapTimer 7FD4  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                                 __end_ofi2_TMR_SwapTimer 823E  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                      _RADIO_ReceiveStart 3C58  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 833E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 8C32  
                                           _SwTimerCreate 6F5E  
                          __end_of_InitDefault868Channels 7188  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                           _TMR1_CallBack 88A6  
                               __end_of_ValidateFrequency 78E8  
                                        _SwTimerIsRunning 8610  
                                        _ExecuteLinkCheck 8414  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 8C02  
                                _LORAWAN_SetDeviceAddress 89EC  
                                                _INT2_ISR 8BFA  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 8BD4  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF81  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue 82C0  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 7DF2  
                                         _HALDIO5PinValue 8B46  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 5D1A  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 8AEC  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 4462  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0066  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 77B4  
                                    ConfigureRadioTx@freq 0073  
                             UpdateDataRange@dataRangeNew 0060  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 0169  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 5F18  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR 8A72  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0060  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 823E  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 21F0  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                        ___abdiv@dividend 0066  
                                      _DIO1_ISR_Lora_Init 8AEC  
                               __end_of_DutyCycleCallback 2F4E  
                                       ___wmul@multiplier 0060  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                              __end_of_PrepareSessionKeys 6BB2  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 58AA  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 68F4  
                                               copy_data1 6914  
                                               copy_data2 6934  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                             __end_of_RADIO_SetIQInverted 8BAC  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 7D9E  
                                             _RADIO_Reset 8060  
                                     ExecuteLinkCheck@ptr 0060  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 8704  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 4B22  
                             __end_ofi2_SwTimersInterrupt 5E1A  
                               _LORAWAN_GetMaxPayloadSize 7A0E  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0095  
                                      CheckMcastFlags@hdr 0060  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 84D6  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer 899C  
                                               memcpy@tmp 0066  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                __size_of_CheckMcastFlags 0082  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                               _ticksToScheduledInterrupt 0054  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0086  
                                      _ComputeSessionKeys 7298  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                        __size_of___lwmod 0044  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                      ??_ValidateDataRate 0060  
                                _TMR1_SetInterruptHandler 8B52  
                                  _IOCB4_InterruptHandler 01EC  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 8AAA  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission 8A98  
                                   _TMR1_InterruptHandler 01E8  
                                        ??_GenerateSubkey 0097  
                                        _CountfOptsLength 6816  
                                              _HALSPISend 8B38  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FF69  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 3244  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                        __end_of_RADIO_UnhandledInterrupt 8414  
                                           _UpdateTxPower 8B7A  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel 82C0  
                                         _allocatedTimers 00FB  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 8A72  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 8C46  
                                                __ptext10 8C46  
                                                __ptext11 8C48  
                                                __ptext20 8B70  
                                                __ptext12 8C4A  
                                                __ptext21 8506  
                                                __ptext13 8ADC  
                                              _T1GCONbits 000FCC  
                                                __ptext30 4CA4  
                                                __ptext22 89EC  
                                                __ptext14 8B5C  
                                                __ptext31 699A  
                                                __ptext23 8534  
                                                __ptext15 8AEC  
                                                __ptext40 7CF2  
                                                __ptext32 666C  
                                                __ptext24 8300  
                                                __ptext16 8AFC  
                                                __ptext41 7F3C  
                                                __ptext33 7FD4  
                                                __ptext25 62E6  
                                                __ptext17 8C32  
                                                __ptext50 259A  
                                                __ptext42 8562  
                                                __ptext34 833E  
                                                __ptext26 2C48  
                                                __ptext18 85BC  
                                                __ptext51 0086  
                                                __ptext43 8280  
                                                __ptext35 7520  
                                                __ptext27 563E  
                                                __ptext19 8B66  
                                                __ptext60 86B4  
                                                __ptext52 7598  
                                                __ptext44 6ECE  
                                                __ptext36 8A86  
                                                __ptext28 8754  
                                                __ptext61 823E  
                                                __ptext53 8964  
                                                __ptext45 83E2  
                                                __ptext37 868C  
                                                __ptext29 5AFA  
                                                __ptext70 80EA  
                                                __ptext62 86DC  
                                                __ptext54 409C  
                                                __ptext46 59D4  
                                                __ptext38 83B0  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 53A4  
                                                __ptext63 3E88  
                                                __ptext55 4B22  
                                                __ptext47 63CC  
                                                __ptext39 87C0  
                                                __ptext80 8B7A  
                                                __ptext72 7BE6  
                                                __ptext64 8A04  
                                                __ptext56 7424  
                                                __ptext48 781C  
                                                __ptext81 8B84  
                                                __ptext73 877A  
                                                __ptext65 8A34  
                                                __ptext57 8446  
                                                __ptext49 6A52  
                                                __ptext90 19DE  
                                                __ptext82 8980  
                                                __ptext74 8414  
                                                __ptext66 37B0  
                                                __ptext58 8C4C  
                                                __ptext91 8C0A  
                                                __ptext83 760A  
                                                __ptext75 3244  
                                                __ptext67 7882  
                                                __ptext59 2F4E  
                                                __ptext92 64B0  
                                                __ptext84 4F7C  
                                                __ptext76 85E6  
                                                __ptext68 801A  
                                                __ptext93 428A  
                                                __ptext85 7DF2  
                                                __ptext77 8A1C  
                                                __ptext69 80A6  
                                                __ptext94 7212  
                                                __ptext86 8B8E  
                                                __ptext78 8826  
                                                __ptext95 6012  
                                                __ptext87 6744  
                                                __ptext79 7ACE  
                                                __ptext96 6816  
                                                __ptext88 7A0E  
                                                __ptext97 7C40  
                                                __ptext89 1E40  
                                                __ptext98 7298  
                                                __ptext99 6B06  
                                 ExecuteRxTimingSetup@ptr 0067  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   ??_UpdateReceiveDelays 0066  
                                   __end_of_LORAWAN_Reset 4630  
                                  __end_of_StartReTxTimer 4CA4  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState 7424  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01C0  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 8B52  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 008A  
                                           __size_of_rand 005C  
                                       _RADIO_ReceiveStop 8846  
                                      ??_UpdateDLSettings 0061  
                                    _LORAWAN_PlatformInit 879E  
                                         _FskSyncWordBuff FFF6  
                                      ??_ValidateRxOffset 0060  
                               __end_ofi2_TMR1_WriteTimer 89B8  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                    ??_ComputeSessionKeys 0093  
                                           _timerOverflow 0047  
                                            _SwTimerStart 6DA2  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 01D8  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 4992  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask 7B2C  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData 8C16  
                                       ??_TMR1_WriteTimer 0062  
                                              _RADIO_DIO0 6ECE  
                                              _RADIO_DIO1 7F3C  
                                              _RADIO_DIO2 7CF2  
                                              _RADIO_DIO3 87C0  
                                              _RADIO_DIO4 83B0  
                                              _RADIO_DIO5 868C  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 8C58  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 8C56  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF71  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                                      __end_of_modulation FF69  
                                              _RADIO_Init 4630  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0178  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 8C3A  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 350C  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 409C  
                                     ??_RADIO_ReleaseData 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 6CFE  
                                       _RADIO_TxDone$1094 00EB  
                                      _EXT_INT_Initialize 85BC  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 6E38  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop 8866  
                                         _SwTimersExecute 62E6  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus 8B98  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA2  
                                      _DefaultChannels868 FFCC  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                                UpdateDutyCycle@channelId 0062  
                                  GenerateSubkey@const_Rb 0098  
                         __size_of_ExecuteRxParamSetupReq 0214  
                               UpdateJoinInProgress@state 0060  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$1971 00C9  
                                     _LORAWAN_TxDone$1972 00CD  
                                     _LORAWAN_TxDone$4999 00D6  
                      __end_of_LORAWAN_LinkCheckConfigure 53A4  
                               __end_of_RADIO_ReleaseData 8C1C  
                              _LORAWAN_LinkCheckConfigure 5246  
                                      __end_of_txPower433 FF9C  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FFA2  
                                   _HALResetPinMakeOutput 8C3E  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0069  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                        ??_ConfigureRadio 0072  
                                      _SwTimerSetCallback 8172  
             __end_of_UpdateRetransmissionAckTimeoutState 760A  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState 7598  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                   __end_of_DIO0_ISR_Lora 8C2E  
                                __end_of_SwTimerIsRunning 863A  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck 8446  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF79  
                                  __end_of_EncKeySchedule 37B0  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 8C28  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue 8300  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 7E46  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters 8A4A  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 8A34  
                                 UpdateTxPower@txPowerNew 0060  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$3459 00AC  
                        __end_of_INT1_SetInterruptHandler 8B7A  
                            FindSmallestDataRate@dataRate 0063  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 8C22  
                                    _SystemBlockingWaitMs 84A6  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                 __size_of_EnableChannels 001C  
                            __end_of_UpdateJoinInProgress 89D2  
                            __end_of_ExecuteRxTimingSetup 86DC  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFF9  
                __end_of_RADIO_WriteFSKFrequencyDeviation 774C  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 76E2  
                __end_of_LORAWAN_SetApplicationSessionKey 8562  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 8534  
                                        ExtractMic@buffer 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                                _RADIO_UnhandledInterrupt 83E2  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 7DF2  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 8886  
                                 __size_of_ExecuteLinkAdr 02C8  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 4E10  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 8BE8  
                                     RADIO_WritePower@ocp 0064  
                                      ??_LORAWAN_Mainloop 00F9  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                       ??_UpdateDataRange 0061  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 8590  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 017A  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 259A  
                             __end_of_RADIO_SetModulation 8BCA  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
